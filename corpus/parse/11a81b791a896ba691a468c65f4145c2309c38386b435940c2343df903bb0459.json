{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/columbia-it/django-jsonapi-training"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/schemas/openapi.yaml",
			"byteSize": 161064,
			"content": "openapi: 3.0.2\ninfo:\n  version: 1.2.0\n  title: myapp\n  description: '![alt-text](https://cuit.columbia.edu/sites/default/files/logo/CUIT_Logo_286_web.jpg\n    \"CUIT logo\")\n\n\n\n    A sample API that uses courses as an example to demonstrate representing\n\n    [JSON:API 1.0](http://jsonapi.org/format) in the OpenAPI 3.0 specification.\n\n\n\n    See [https://columbia-it-django-jsonapi-training.readthedocs.io](https://columbia-it-django-jsonapi-training.readthedocs.io)\n\n    for more about this.\n\n\n\n    (c) 2018-2021 The Trustees of Columbia University in the City of New York\n\n    '\n  contact:\n    name: Alan Crosswell\n  license:\n    name: Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)\n      License\n    url: https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode\npaths:\n  /v1/courses/:\n    get:\n      operationId: List/v1/courses/\n      description: \"A course of instruction. e.g. COMSW1002 Computing in Context\\n\\\n        \\ntesting [mkdocstrings](https://pawamoy.github.io/mkdocstrings):\\n\\nChanges\\\n        \\ from [sphinxcontrib.apidoc](https://github.com/sphinx-contrib/apidoc):\\n\\\n        \\n* Uses markdown in docstring rather than RsT. Will require lots of changes\\\n        \\ to docstrings.\\n* Must have a docstring under each member in order for it\\\n        \\ to show up in the docs:\\n    * `#:` does not implement apidoc-style comments\\\n        \\ for members.\"\n      parameters:\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: page[number]\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page[size]\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[subject_area_code]\n        required: false\n        in: query\n        description: subject_area_code\n        schema:\n          type: string\n      - name: filter[subject_area_code.lt]\n        required: false\n        in: query\n        description: subject_area_code__lt\n        schema:\n          type: string\n      - name: filter[subject_area_code.gt]\n        required: false\n        in: query\n        description: subject_area_code__gt\n        schema:\n          type: string\n      - name: filter[subject_area_code.gte]\n        required: false\n        in: query\n        description: subject_area_code__gte\n        schema:\n          type: string\n      - name: filter[subject_area_code.lte]\n        required: false\n        in: query\n        description: subject_area_code__lte\n        schema:\n          type: string\n      - name: filter[subject_area_code.in]\n        required: false\n        in: query\n        description: subject_area_code__in\n        schema:\n          type: string\n      - name: filter[course_name]\n        required: false\n        in: query\n        description: course_name\n        schema:\n          type: string\n      - name: filter[course_name.icontains]\n        required: false\n        in: query\n        description: course_name__icontains\n        schema:\n          type: string\n      - name: filter[course_name.iexact]\n        required: false\n        in: query\n        description: course_name__iexact\n        schema:\n          type: string\n      - name: filter[course_name.contains]\n        required: false\n        in: query\n        description: course_name__contains\n        schema:\n          type: string\n      - name: filter[course_description.icontains]\n        required: false\n        in: query\n        description: course_description__icontains\n        schema:\n          type: string\n      - name: filter[course_description.iexact]\n        required: false\n        in: query\n        description: course_description__iexact\n        schema:\n          type: string\n      - name: filter[course_description.contains]\n        required: false\n        in: query\n        description: course_description__contains\n        schema:\n          type: string\n      - name: filter[course_description]\n        required: false\n        in: query\n        description: course_description\n        schema:\n          type: string\n      - name: filter[course_description.lt]\n        required: false\n        in: query\n        description: course_description__lt\n        schema:\n          type: string\n      - name: filter[course_description.gt]\n        required: false\n        in: query\n        description: course_description__gt\n        schema:\n          type: string\n      - name: filter[course_description.gte]\n        required: false\n        in: query\n        description: course_description__gte\n        schema:\n          type: string\n      - name: filter[course_description.lte]\n        required: false\n        in: query\n        description: course_description__lte\n        schema:\n          type: string\n      - name: filter[course_description.in]\n        required: false\n        in: query\n        description: course_description__in\n        schema:\n          type: string\n      - name: filter[course_identifier.icontains]\n        required: false\n        in: query\n        description: course_identifier__icontains\n        schema:\n          type: string\n      - name: filter[course_identifier.iexact]\n        required: false\n        in: query\n        description: course_identifier__iexact\n        schema:\n          type: string\n      - name: filter[course_identifier.contains]\n        required: false\n        in: query\n        description: course_identifier__contains\n        schema:\n          type: string\n      - name: filter[course_identifier]\n        required: false\n        in: query\n        description: course_identifier\n        schema:\n          type: string\n      - name: filter[course_identifier.lt]\n        required: false\n        in: query\n        description: course_identifier__lt\n        schema:\n          type: string\n      - name: filter[course_identifier.gt]\n        required: false\n        in: query\n        description: course_identifier__gt\n        schema:\n          type: string\n      - name: filter[course_identifier.gte]\n        required: false\n        in: query\n        description: course_identifier__gte\n        schema:\n          type: string\n      - name: filter[course_identifier.lte]\n        required: false\n        in: query\n        description: course_identifier__lte\n        schema:\n          type: string\n      - name: filter[course_identifier.in]\n        required: false\n        in: query\n        description: course_identifier__in\n        schema:\n          type: string\n      - name: filter[course_number]\n        required: false\n        in: query\n        description: course_number\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier]\n        required: false\n        in: query\n        description: course_terms__term_identifier\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.lt]\n        required: false\n        in: query\n        description: course_terms__term_identifier__lt\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.gt]\n        required: false\n        in: query\n        description: course_terms__term_identifier__gt\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.gte]\n        required: false\n        in: query\n        description: course_terms__term_identifier__gte\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.lte]\n        required: false\n        in: query\n        description: course_terms__term_identifier__lte\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.in]\n        required: false\n        in: query\n        description: course_terms__term_identifier__in\n        schema:\n          type: string\n      - name: filter[school_bulletin_prefix_code]\n        required: false\n        in: query\n        description: school_bulletin_prefix_code\n        schema:\n          type: string\n      - name: filter[school_bulletin_prefix_code.regex]\n        required: false\n        in: query\n        description: school_bulletin_prefix_code__regex\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: List/v1/courses/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Course'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    post:\n      operationId: create/v1/courses/\n      description: \"A course of instruction. e.g. COMSW1002 Computing in Context\\n\\\n        \\ntesting [mkdocstrings](https://pawamoy.github.io/mkdocstrings):\\n\\nChanges\\\n        \\ from [sphinxcontrib.apidoc](https://github.com/sphinx-contrib/apidoc):\\n\\\n        \\n* Uses markdown in docstring rather than RsT. Will require lots of changes\\\n        \\ to docstrings.\\n* Must have a docstring under each member in order for it\\\n        \\ to show up in the docs:\\n    * `#:` does not implement apidoc-style comments\\\n        \\ for members.\"\n      parameters: []\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  type: object\n                  required:\n                  - type\n                  additionalProperties: false\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/type'\n                    id:\n                      $ref: '#/components/schemas/id'\n                    links:\n                      type: object\n                      properties:\n                        self:\n                          $ref: '#/components/schemas/link'\n                    attributes:\n                      type: object\n                      properties:\n                        effective_start_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes valid\n                        effective_end_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes invalid\n                        school_bulletin_prefix_code:\n                          type: string\n                          maxLength: 10\n                        suffix_two:\n                          type: string\n                          description: two-character identifier suffix\n                          maxLength: 2\n                        subject_area_code:\n                          type: string\n                          description: Subject\n                          maxLength: 10\n                        course_number:\n                          type: string\n                          description: '\"Shortcut\" identifier (formerly for touch-tone\n                            registration)'\n                          maxLength: 10\n                        course_identifier:\n                          type: string\n                          description: Course identifier (one-character suffix)\n                          pattern: '[A-Z]{4}[0-9]{4}[A-Z]'\n                          maxLength: 9\n                          minLength: 9\n                        course_name:\n                          type: string\n                          description: Course official title\n                          maxLength: 80\n                        course_description:\n                          type: string\n                          description: Course description\n                      required:\n                      - school_bulletin_prefix_code\n                      - suffix_two\n                      - subject_area_code\n                      - course_number\n                      - course_identifier\n                      - course_name\n                      - course_description\n                    relationships:\n                      type: object\n                      properties:\n                        course_terms:\n                          $ref: '#/components/schemas/reltomany'\n      responses:\n        '201':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201).\n            Assigned `id` and/or any other changes are in this response.'\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Course'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204)\n            with the supplied `id`. No other changes from what was POSTed.'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/courses/{id}/:\n    get:\n      operationId: retrieve/v1/courses/{id}/\n      description: \"A course of instruction. e.g. COMSW1002 Computing in Context\\n\\\n        \\ntesting [mkdocstrings](https://pawamoy.github.io/mkdocstrings):\\n\\nChanges\\\n        \\ from [sphinxcontrib.apidoc](https://github.com/sphinx-contrib/apidoc):\\n\\\n        \\n* Uses markdown in docstring rather than RsT. Will require lots of changes\\\n        \\ to docstrings.\\n* Must have a docstring under each member in order for it\\\n        \\ to show up in the docs:\\n    * `#:` does not implement apidoc-style comments\\\n        \\ for members.\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[subject_area_code]\n        required: false\n        in: query\n        description: subject_area_code\n        schema:\n          type: string\n      - name: filter[subject_area_code.lt]\n        required: false\n        in: query\n        description: subject_area_code__lt\n        schema:\n          type: string\n      - name: filter[subject_area_code.gt]\n        required: false\n        in: query\n        description: subject_area_code__gt\n        schema:\n          type: string\n      - name: filter[subject_area_code.gte]\n        required: false\n        in: query\n        description: subject_area_code__gte\n        schema:\n          type: string\n      - name: filter[subject_area_code.lte]\n        required: false\n        in: query\n        description: subject_area_code__lte\n        schema:\n          type: string\n      - name: filter[subject_area_code.in]\n        required: false\n        in: query\n        description: subject_area_code__in\n        schema:\n          type: string\n      - name: filter[course_name]\n        required: false\n        in: query\n        description: course_name\n        schema:\n          type: string\n      - name: filter[course_name.icontains]\n        required: false\n        in: query\n        description: course_name__icontains\n        schema:\n          type: string\n      - name: filter[course_name.iexact]\n        required: false\n        in: query\n        description: course_name__iexact\n        schema:\n          type: string\n      - name: filter[course_name.contains]\n        required: false\n        in: query\n        description: course_name__contains\n        schema:\n          type: string\n      - name: filter[course_description.icontains]\n        required: false\n        in: query\n        description: course_description__icontains\n        schema:\n          type: string\n      - name: filter[course_description.iexact]\n        required: false\n        in: query\n        description: course_description__iexact\n        schema:\n          type: string\n      - name: filter[course_description.contains]\n        required: false\n        in: query\n        description: course_description__contains\n        schema:\n          type: string\n      - name: filter[course_description]\n        required: false\n        in: query\n        description: course_description\n        schema:\n          type: string\n      - name: filter[course_description.lt]\n        required: false\n        in: query\n        description: course_description__lt\n        schema:\n          type: string\n      - name: filter[course_description.gt]\n        required: false\n        in: query\n        description: course_description__gt\n        schema:\n          type: string\n      - name: filter[course_description.gte]\n        required: false\n        in: query\n        description: course_description__gte\n        schema:\n          type: string\n      - name: filter[course_description.lte]\n        required: false\n        in: query\n        description: course_description__lte\n        schema:\n          type: string\n      - name: filter[course_description.in]\n        required: false\n        in: query\n        description: course_description__in\n        schema:\n          type: string\n      - name: filter[course_identifier.icontains]\n        required: false\n        in: query\n        description: course_identifier__icontains\n        schema:\n          type: string\n      - name: filter[course_identifier.iexact]\n        required: false\n        in: query\n        description: course_identifier__iexact\n        schema:\n          type: string\n      - name: filter[course_identifier.contains]\n        required: false\n        in: query\n        description: course_identifier__contains\n        schema:\n          type: string\n      - name: filter[course_identifier]\n        required: false\n        in: query\n        description: course_identifier\n        schema:\n          type: string\n      - name: filter[course_identifier.lt]\n        required: false\n        in: query\n        description: course_identifier__lt\n        schema:\n          type: string\n      - name: filter[course_identifier.gt]\n        required: false\n        in: query\n        description: course_identifier__gt\n        schema:\n          type: string\n      - name: filter[course_identifier.gte]\n        required: false\n        in: query\n        description: course_identifier__gte\n        schema:\n          type: string\n      - name: filter[course_identifier.lte]\n        required: false\n        in: query\n        description: course_identifier__lte\n        schema:\n          type: string\n      - name: filter[course_identifier.in]\n        required: false\n        in: query\n        description: course_identifier__in\n        schema:\n          type: string\n      - name: filter[course_number]\n        required: false\n        in: query\n        description: course_number\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier]\n        required: false\n        in: query\n        description: course_terms__term_identifier\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.lt]\n        required: false\n        in: query\n        description: course_terms__term_identifier__lt\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.gt]\n        required: false\n        in: query\n        description: course_terms__term_identifier__gt\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.gte]\n        required: false\n        in: query\n        description: course_terms__term_identifier__gte\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.lte]\n        required: false\n        in: query\n        description: course_terms__term_identifier__lte\n        schema:\n          type: string\n      - name: filter[course_terms.term_identifier.in]\n        required: false\n        in: query\n        description: course_terms__term_identifier__in\n        schema:\n          type: string\n      - name: filter[school_bulletin_prefix_code]\n        required: false\n        in: query\n        description: school_bulletin_prefix_code\n        schema:\n          type: string\n      - name: filter[school_bulletin_prefix_code.regex]\n        required: false\n        in: query\n        description: school_bulletin_prefix_code__regex\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: retrieve/v1/courses/{id}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Course'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    patch:\n      operationId: partial_update/v1/courses/{id}/\n      description: \"A course of instruction. e.g. COMSW1002 Computing in Context\\n\\\n        \\ntesting [mkdocstrings](https://pawamoy.github.io/mkdocstrings):\\n\\nChanges\\\n        \\ from [sphinxcontrib.apidoc](https://github.com/sphinx-contrib/apidoc):\\n\\\n        \\n* Uses markdown in docstring rather than RsT. Will require lots of changes\\\n        \\ to docstrings.\\n* Must have a docstring under each member in order for it\\\n        \\ to show up in the docs:\\n    * `#:` does not implement apidoc-style comments\\\n        \\ for members.\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  type: object\n                  required:\n                  - type\n                  - id\n                  additionalProperties: false\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/type'\n                    id:\n                      $ref: '#/components/schemas/id'\n                    links:\n                      type: object\n                      properties:\n                        self:\n                          $ref: '#/components/schemas/link'\n                    attributes:\n                      type: object\n                      properties:\n                        effective_start_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes valid\n                        effective_end_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes invalid\n                        school_bulletin_prefix_code:\n                          type: string\n                          maxLength: 10\n                        suffix_two:\n                          type: string\n                          description: two-character identifier suffix\n                          maxLength: 2\n                        subject_area_code:\n                          type: string\n                          description: Subject\n                          maxLength: 10\n                        course_number:\n                          type: string\n                          description: '\"Shortcut\" identifier (formerly for touch-tone\n                            registration)'\n                          maxLength: 10\n                        course_identifier:\n                          type: string\n                          description: Course identifier (one-character suffix)\n                          pattern: '[A-Z]{4}[0-9]{4}[A-Z]'\n                          maxLength: 9\n                          minLength: 9\n                        course_name:\n                          type: string\n                          description: Course official title\n                          maxLength: 80\n                        course_description:\n                          type: string\n                          description: Course description\n                    relationships:\n                      type: object\n                      properties:\n                        course_terms:\n                          $ref: '#/components/schemas/reltomany'\n      responses:\n        '200':\n          description: partial_update/v1/courses/{id}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Course'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    delete:\n      operationId: destroy/v1/courses/{id}/\n      description: \"A course of instruction. e.g. COMSW1002 Computing in Context\\n\\\n        \\ntesting [mkdocstrings](https://pawamoy.github.io/mkdocstrings):\\n\\nChanges\\\n        \\ from [sphinxcontrib.apidoc](https://github.com/sphinx-contrib/apidoc):\\n\\\n        \\n* Uses markdown in docstring rather than RsT. Will require lots of changes\\\n        \\ to docstrings.\\n* Must have a docstring under each member in order for it\\\n        \\ to show up in the docs:\\n    * `#:` does not implement apidoc-style comments\\\n        \\ for members.\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      responses:\n        '200':\n          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/onlymeta'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/course_terms/:\n    get:\n      operationId: List/v1/course_terms/\n      description: 'A specific course term (year+semester) instance.\n\n        e.g. 20183COMSW1002'\n      parameters:\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: page[number]\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page[size]\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[term_identifier]\n        required: false\n        in: query\n        description: term_identifier\n        schema:\n          type: string\n      - name: filter[term_identifier.lt]\n        required: false\n        in: query\n        description: term_identifier__lt\n        schema:\n          type: string\n      - name: filter[term_identifier.gt]\n        required: false\n        in: query\n        description: term_identifier__gt\n        schema:\n          type: string\n      - name: filter[term_identifier.gte]\n        required: false\n        in: query\n        description: term_identifier__gte\n        schema:\n          type: string\n      - name: filter[term_identifier.lte]\n        required: false\n        in: query\n        description: term_identifier__lte\n        schema:\n          type: string\n      - name: filter[term_identifier.in]\n        required: false\n        in: query\n        description: term_identifier__in\n        schema:\n          type: string\n      - name: filter[audit_permitted_code]\n        required: false\n        in: query\n        description: audit_permitted_code\n        schema:\n          type: string\n      - name: filter[exam_credit_flag]\n        required: false\n        in: query\n        description: exam_credit_flag\n        schema:\n          type: string\n      - name: filter[course.id]\n        required: false\n        in: query\n        description: course__id\n        schema:\n          type: string\n      - name: filter[course.id.lt]\n        required: false\n        in: query\n        description: course__id__lt\n        schema:\n          type: string\n      - name: filter[course.id.gt]\n        required: false\n        in: query\n        description: course__id__gt\n        schema:\n          type: string\n      - name: filter[course.id.gte]\n        required: false\n        in: query\n        description: course__id__gte\n        schema:\n          type: string\n      - name: filter[course.id.lte]\n        required: false\n        in: query\n        description: course__id__lte\n        schema:\n          type: string\n      - name: filter[course.id.in]\n        required: false\n        in: query\n        description: course__id__in\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: List/v1/course_terms/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CourseTerm'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    post:\n      operationId: create/v1/course_terms/\n      description: 'A specific course term (year+semester) instance.\n\n        e.g. 20183COMSW1002'\n      parameters: []\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  type: object\n                  required:\n                  - type\n                  additionalProperties: false\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/type'\n                    id:\n                      $ref: '#/components/schemas/id'\n                    links:\n                      type: object\n                      properties:\n                        self:\n                          $ref: '#/components/schemas/link'\n                    attributes:\n                      type: object\n                      properties:\n                        effective_start_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes valid\n                        effective_end_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes invalid\n                        term_identifier:\n                          type: string\n                          pattern: '[0-9]{4}[123][A-Z]{4}[0-9]{4}[A-Z]'\n                          maxLength: 14\n                          minLength: 14\n                        audit_permitted_code:\n                          type: integer\n                        exam_credit_flag:\n                          type: boolean\n                      required:\n                      - term_identifier\n                    relationships:\n                      type: object\n                      properties:\n                        course:\n                          $ref: '#/components/schemas/reltoone'\n                        instructors:\n                          $ref: '#/components/schemas/reltomany'\n      responses:\n        '201':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201).\n            Assigned `id` and/or any other changes are in this response.'\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/CourseTerm'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204)\n            with the supplied `id`. No other changes from what was POSTed.'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/course_terms/{id}/:\n    get:\n      operationId: retrieve/v1/course_terms/{id}/\n      description: 'A specific course term (year+semester) instance.\n\n        e.g. 20183COMSW1002'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[term_identifier]\n        required: false\n        in: query\n        description: term_identifier\n        schema:\n          type: string\n      - name: filter[term_identifier.lt]\n        required: false\n        in: query\n        description: term_identifier__lt\n        schema:\n          type: string\n      - name: filter[term_identifier.gt]\n        required: false\n        in: query\n        description: term_identifier__gt\n        schema:\n          type: string\n      - name: filter[term_identifier.gte]\n        required: false\n        in: query\n        description: term_identifier__gte\n        schema:\n          type: string\n      - name: filter[term_identifier.lte]\n        required: false\n        in: query\n        description: term_identifier__lte\n        schema:\n          type: string\n      - name: filter[term_identifier.in]\n        required: false\n        in: query\n        description: term_identifier__in\n        schema:\n          type: string\n      - name: filter[audit_permitted_code]\n        required: false\n        in: query\n        description: audit_permitted_code\n        schema:\n          type: string\n      - name: filter[exam_credit_flag]\n        required: false\n        in: query\n        description: exam_credit_flag\n        schema:\n          type: string\n      - name: filter[course.id]\n        required: false\n        in: query\n        description: course__id\n        schema:\n          type: string\n      - name: filter[course.id.lt]\n        required: false\n        in: query\n        description: course__id__lt\n        schema:\n          type: string\n      - name: filter[course.id.gt]\n        required: false\n        in: query\n        description: course__id__gt\n        schema:\n          type: string\n      - name: filter[course.id.gte]\n        required: false\n        in: query\n        description: course__id__gte\n        schema:\n          type: string\n      - name: filter[course.id.lte]\n        required: false\n        in: query\n        description: course__id__lte\n        schema:\n          type: string\n      - name: filter[course.id.in]\n        required: false\n        in: query\n        description: course__id__in\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: retrieve/v1/course_terms/{id}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/CourseTerm'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    patch:\n      operationId: partial_update/v1/course_terms/{id}/\n      description: 'A specific course term (year+semester) instance.\n\n        e.g. 20183COMSW1002'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  type: object\n                  required:\n                  - type\n                  - id\n                  additionalProperties: false\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/type'\n                    id:\n                      $ref: '#/components/schemas/id'\n                    links:\n                      type: object\n                      properties:\n                        self:\n                          $ref: '#/components/schemas/link'\n                    attributes:\n                      type: object\n                      properties:\n                        effective_start_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes valid\n                        effective_end_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes invalid\n                        term_identifier:\n                          type: string\n                          pattern: '[0-9]{4}[123][A-Z]{4}[0-9]{4}[A-Z]'\n                          maxLength: 14\n                          minLength: 14\n                        audit_permitted_code:\n                          type: integer\n                        exam_credit_flag:\n                          type: boolean\n                    relationships:\n                      type: object\n                      properties:\n                        course:\n                          $ref: '#/components/schemas/reltoone'\n                        instructors:\n                          $ref: '#/components/schemas/reltomany'\n      responses:\n        '200':\n          description: partial_update/v1/course_terms/{id}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/CourseTerm'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    delete:\n      operationId: destroy/v1/course_terms/{id}/\n      description: 'A specific course term (year+semester) instance.\n\n        e.g. 20183COMSW1002'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      responses:\n        '200':\n          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/onlymeta'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/people/:\n    get:\n      operationId: List/v1/people/\n      description: A person.\n      parameters:\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: page[number]\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page[size]\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: List/v1/people/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Person'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    post:\n      operationId: create/v1/people/\n      description: A person.\n      parameters: []\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  type: object\n                  required:\n                  - type\n                  additionalProperties: false\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/type'\n                    id:\n                      $ref: '#/components/schemas/id'\n                    links:\n                      type: object\n                      properties:\n                        self:\n                          $ref: '#/components/schemas/link'\n                    attributes:\n                      type: object\n                      properties:\n                        effective_start_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes valid\n                        effective_end_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes invalid\n                        name:\n                          type: string\n                          maxLength: 100\n                      required:\n                      - name\n                    relationships:\n                      type: object\n                      properties:\n                        instructor:\n                          $ref: '#/components/schemas/reltoone'\n      responses:\n        '201':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201).\n            Assigned `id` and/or any other changes are in this response.'\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Person'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204)\n            with the supplied `id`. No other changes from what was POSTed.'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/people/{id}/:\n    get:\n      operationId: retrieve/v1/people/{id}/\n      description: A person.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: retrieve/v1/people/{id}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Person'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    patch:\n      operationId: partial_update/v1/people/{id}/\n      description: A person.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  type: object\n                  required:\n                  - type\n                  - id\n                  additionalProperties: false\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/type'\n                    id:\n                      $ref: '#/components/schemas/id'\n                    links:\n                      type: object\n                      properties:\n                        self:\n                          $ref: '#/components/schemas/link'\n                    attributes:\n                      type: object\n                      properties:\n                        effective_start_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes valid\n                        effective_end_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes invalid\n                        name:\n                          type: string\n                          maxLength: 100\n                    relationships:\n                      type: object\n                      properties:\n                        instructor:\n                          $ref: '#/components/schemas/reltoone'\n      responses:\n        '200':\n          description: partial_update/v1/people/{id}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Person'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    delete:\n      operationId: destroy/v1/people/{id}/\n      description: A person.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      responses:\n        '200':\n          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/onlymeta'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/instructors/:\n    get:\n      operationId: List/v1/instructors/\n      description: An instructor.\n      parameters:\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: page[number]\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page[size]\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[course_name]\n        required: false\n        in: query\n        description: course_name\n        schema:\n          type: string\n      - name: filter[course_name.gt]\n        required: false\n        in: query\n        description: course_name__gt\n        schema:\n          type: string\n      - name: filter[course_name.gte]\n        required: false\n        in: query\n        description: course_name__gte\n        schema:\n          type: string\n      - name: filter[course_name.lt]\n        required: false\n        in: query\n        description: course_name__lt\n        schema:\n          type: string\n      - name: filter[course_name.lte]\n        required: false\n        in: query\n        description: course_name__lte\n        schema:\n          type: string\n      - name: filter[name]\n        required: false\n        in: query\n        description: name\n        schema:\n          type: string\n      - name: filter[name.gt]\n        required: false\n        in: query\n        description: name__gt\n        schema:\n          type: string\n      - name: filter[name.gte]\n        required: false\n        in: query\n        description: name__gte\n        schema:\n          type: string\n      - name: filter[name.lt]\n        required: false\n        in: query\n        description: name__lt\n        schema:\n          type: string\n      - name: filter[name.lte]\n        required: false\n        in: query\n        description: name__lte\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: List/v1/instructors/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Instructor'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    post:\n      operationId: create/v1/instructors/\n      description: An instructor.\n      parameters: []\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  type: object\n                  required:\n                  - type\n                  additionalProperties: false\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/type'\n                    id:\n                      $ref: '#/components/schemas/id'\n                    links:\n                      type: object\n                      properties:\n                        self:\n                          $ref: '#/components/schemas/link'\n                    attributes:\n                      type: object\n                      properties:\n                        effective_start_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes valid\n                        effective_end_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes invalid\n                    relationships:\n                      type: object\n                      properties:\n                        course_terms:\n                          $ref: '#/components/schemas/reltomany'\n                        person:\n                          $ref: '#/components/schemas/reltoone'\n      responses:\n        '201':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201).\n            Assigned `id` and/or any other changes are in this response.'\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Instructor'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204)\n            with the supplied `id`. No other changes from what was POSTed.'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/instructors/{id}/:\n    get:\n      operationId: retrieve/v1/instructors/{id}/\n      description: An instructor.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[course_name]\n        required: false\n        in: query\n        description: course_name\n        schema:\n          type: string\n      - name: filter[course_name.gt]\n        required: false\n        in: query\n        description: course_name__gt\n        schema:\n          type: string\n      - name: filter[course_name.gte]\n        required: false\n        in: query\n        description: course_name__gte\n        schema:\n          type: string\n      - name: filter[course_name.lt]\n        required: false\n        in: query\n        description: course_name__lt\n        schema:\n          type: string\n      - name: filter[course_name.lte]\n        required: false\n        in: query\n        description: course_name__lte\n        schema:\n          type: string\n      - name: filter[name]\n        required: false\n        in: query\n        description: name\n        schema:\n          type: string\n      - name: filter[name.gt]\n        required: false\n        in: query\n        description: name__gt\n        schema:\n          type: string\n      - name: filter[name.gte]\n        required: false\n        in: query\n        description: name__gte\n        schema:\n          type: string\n      - name: filter[name.lt]\n        required: false\n        in: query\n        description: name__lt\n        schema:\n          type: string\n      - name: filter[name.lte]\n        required: false\n        in: query\n        description: name__lte\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: retrieve/v1/instructors/{id}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Instructor'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    patch:\n      operationId: partial_update/v1/instructors/{id}/\n      description: An instructor.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  type: object\n                  required:\n                  - type\n                  - id\n                  additionalProperties: false\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/type'\n                    id:\n                      $ref: '#/components/schemas/id'\n                    links:\n                      type: object\n                      properties:\n                        self:\n                          $ref: '#/components/schemas/link'\n                    attributes:\n                      type: object\n                      properties:\n                        effective_start_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes valid\n                        effective_end_date:\n                          type: string\n                          format: date\n                          nullable: true\n                          description: date when this instance becomes invalid\n                    relationships:\n                      type: object\n                      properties:\n                        course_terms:\n                          $ref: '#/components/schemas/reltomany'\n                        person:\n                          $ref: '#/components/schemas/reltoone'\n      responses:\n        '200':\n          description: partial_update/v1/instructors/{id}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Instructor'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    delete:\n      operationId: destroy/v1/instructors/{id}/\n      description: An instructor.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      responses:\n        '200':\n          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/onlymeta'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/courses/{id}/relationships/{related_field}/:\n    get:\n      operationId: retrieve/v1/courses/{id}/relationships/{related_field}/\n      description: View for courses.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: retrieve/v1/courses/{id}/relationships/{related_field}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    post:\n      operationId: create/v1/courses/{id}/relationships/{related_field}/\n      description: View for courses.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '201':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201).\n            Assigned `id` and/or any other changes are in this response.'\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204)\n            with the supplied `id`. No other changes from what was POSTed.'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    patch:\n      operationId: partialUpdate/v1/courses/{id}/relationships/{related_field}/\n      description: View for courses.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '200':\n          description: partialUpdate/v1/courses/{id}/relationships/{related_field}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    delete:\n      operationId: destroy/v1/courses/{id}/relationships/{related_field}/\n      description: View for courses.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '200':\n          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/onlymeta'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/courses/{id}/course_terms/:\n    get:\n      operationId: List/v1/courses/{id}/course_terms/\n      description: 'A specific course term (year+semester) instance.\n\n        e.g. 20183COMSW1002'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: page[number]\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page[size]\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[term_identifier]\n        required: false\n        in: query\n        description: term_identifier\n        schema:\n          type: string\n      - name: filter[term_identifier.lt]\n        required: false\n        in: query\n        description: term_identifier__lt\n        schema:\n          type: string\n      - name: filter[term_identifier.gt]\n        required: false\n        in: query\n        description: term_identifier__gt\n        schema:\n          type: string\n      - name: filter[term_identifier.gte]\n        required: false\n        in: query\n        description: term_identifier__gte\n        schema:\n          type: string\n      - name: filter[term_identifier.lte]\n        required: false\n        in: query\n        description: term_identifier__lte\n        schema:\n          type: string\n      - name: filter[term_identifier.in]\n        required: false\n        in: query\n        description: term_identifier__in\n        schema:\n          type: string\n      - name: filter[audit_permitted_code]\n        required: false\n        in: query\n        description: audit_permitted_code\n        schema:\n          type: string\n      - name: filter[exam_credit_flag]\n        required: false\n        in: query\n        description: exam_credit_flag\n        schema:\n          type: string\n      - name: filter[course.id]\n        required: false\n        in: query\n        description: course__id\n        schema:\n          type: string\n      - name: filter[course.id.lt]\n        required: false\n        in: query\n        description: course__id__lt\n        schema:\n          type: string\n      - name: filter[course.id.gt]\n        required: false\n        in: query\n        description: course__id__gt\n        schema:\n          type: string\n      - name: filter[course.id.gte]\n        required: false\n        in: query\n        description: course__id__gte\n        schema:\n          type: string\n      - name: filter[course.id.lte]\n        required: false\n        in: query\n        description: course__id__lte\n        schema:\n          type: string\n      - name: filter[course.id.in]\n        required: false\n        in: query\n        description: course__id__in\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: List/v1/courses/{id}/course_terms/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CourseTerm'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/course_terms/{id}/relationships/{related_field}/:\n    get:\n      operationId: retrieve/v1/course_terms/{id}/relationships/{related_field}/\n      description: View for course_terms.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: retrieve/v1/course_terms/{id}/relationships/{related_field}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    post:\n      operationId: create/v1/course_terms/{id}/relationships/{related_field}/\n      description: View for course_terms.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '201':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201).\n            Assigned `id` and/or any other changes are in this response.'\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204)\n            with the supplied `id`. No other changes from what was POSTed.'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    patch:\n      operationId: partialUpdate/v1/course_terms/{id}/relationships/{related_field}/\n      description: View for course_terms.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '200':\n          description: partialUpdate/v1/course_terms/{id}/relationships/{related_field}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    delete:\n      operationId: destroy/v1/course_terms/{id}/relationships/{related_field}/\n      description: View for course_terms.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '200':\n          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/onlymeta'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/course_terms/{id}/course/:\n    get:\n      operationId: fetch/v1/course_terms/{id}/course/\n      description: \"A course of instruction. e.g. COMSW1002 Computing in Context\\n\\\n        \\ntesting [mkdocstrings](https://pawamoy.github.io/mkdocstrings):\\n\\nChanges\\\n        \\ from [sphinxcontrib.apidoc](https://github.com/sphinx-contrib/apidoc):\\n\\\n        \\n* Uses markdown in docstring rather than RsT. Will require lots of changes\\\n        \\ to docstrings.\\n* Must have a docstring under each member in order for it\\\n        \\ to show up in the docs:\\n    * `#:` does not implement apidoc-style comments\\\n        \\ for members.\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: fetch/v1/course_terms/{id}/course/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Course'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/course_terms/{id}/instructors/:\n    get:\n      operationId: List/v1/course_terms/{id}/instructors/\n      description: An instructor.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: page[number]\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page[size]\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[course_name]\n        required: false\n        in: query\n        description: course_name\n        schema:\n          type: string\n      - name: filter[course_name.gt]\n        required: false\n        in: query\n        description: course_name__gt\n        schema:\n          type: string\n      - name: filter[course_name.gte]\n        required: false\n        in: query\n        description: course_name__gte\n        schema:\n          type: string\n      - name: filter[course_name.lt]\n        required: false\n        in: query\n        description: course_name__lt\n        schema:\n          type: string\n      - name: filter[course_name.lte]\n        required: false\n        in: query\n        description: course_name__lte\n        schema:\n          type: string\n      - name: filter[name]\n        required: false\n        in: query\n        description: name\n        schema:\n          type: string\n      - name: filter[name.gt]\n        required: false\n        in: query\n        description: name__gt\n        schema:\n          type: string\n      - name: filter[name.gte]\n        required: false\n        in: query\n        description: name__gte\n        schema:\n          type: string\n      - name: filter[name.lt]\n        required: false\n        in: query\n        description: name__lt\n        schema:\n          type: string\n      - name: filter[name.lte]\n        required: false\n        in: query\n        description: name__lte\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: List/v1/course_terms/{id}/instructors/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Instructor'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/people/{id}/relationships/{related_field}/:\n    get:\n      operationId: retrieve/v1/people/{id}/relationships/{related_field}/\n      description: View for people.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: retrieve/v1/people/{id}/relationships/{related_field}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    post:\n      operationId: create/v1/people/{id}/relationships/{related_field}/\n      description: View for people.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '201':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201).\n            Assigned `id` and/or any other changes are in this response.'\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204)\n            with the supplied `id`. No other changes from what was POSTed.'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    patch:\n      operationId: partialUpdate/v1/people/{id}/relationships/{related_field}/\n      description: View for people.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '200':\n          description: partialUpdate/v1/people/{id}/relationships/{related_field}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    delete:\n      operationId: destroy/v1/people/{id}/relationships/{related_field}/\n      description: View for people.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '200':\n          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/onlymeta'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/people/{id}/instructor/:\n    get:\n      operationId: fetch/v1/people/{id}/instructor/\n      description: An instructor.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: fetch/v1/people/{id}/instructor/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Instructor'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/instructors/{id}/relationships/{related_field}/:\n    get:\n      operationId: retrieve/v1/instructors/{id}/relationships/{related_field}/\n      description: View for instructors.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: retrieve/v1/instructors/{id}/relationships/{related_field}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    post:\n      operationId: create/v1/instructors/{id}/relationships/{related_field}/\n      description: View for instructors.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '201':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-201).\n            Assigned `id` and/or any other changes are in this response.'\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[Created](https://jsonapi.org/format/#crud-creating-responses-204)\n            with the supplied `id`. No other changes from what was POSTed.'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-creating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-creating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict](https://jsonapi.org/format/#crud-creating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    patch:\n      operationId: partialUpdate/v1/instructors/{id}/relationships/{related_field}/\n      description: View for instructors.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '200':\n          description: partialUpdate/v1/instructors/{id}/relationships/{related_field}/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ResourceIdentifierObject'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '403':\n          description: '[Forbidden](https://jsonapi.org/format/#crud-updating-responses-403)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Related resource does not exist](https://jsonapi.org/format/#crud-updating-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '409':\n          description: '[Conflict]([Conflict](https://jsonapi.org/format/#crud-updating-responses-409)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n    delete:\n      operationId: destroy/v1/instructors/{id}/relationships/{related_field}/\n      description: View for instructors.relationships\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - name: related_field\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/vnd.api+json:\n            schema:\n              required:\n              - data\n              properties:\n                data:\n                  $ref: '#/components/schemas/ResourceIdentifierObject'\n      responses:\n        '200':\n          description: '[OK](https://jsonapi.org/format/#crud-deleting-responses-200)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/onlymeta'\n        '202':\n          description: Accepted for [asynchronous processing](https://jsonapi.org/recommendations/#asynchronous-processing)\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/datum'\n        '204':\n          description: '[no content](https://jsonapi.org/format/#crud-deleting-responses-204)'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: '[Resource does not exist](https://jsonapi.org/format/#crud-deleting-responses-404)'\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/instructors/{id}/course_terms/:\n    get:\n      operationId: List/v1/instructors/{id}/course_terms/\n      description: 'A specific course term (year+semester) instance.\n\n        e.g. 20183COMSW1002'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      - name: page[number]\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page[size]\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: sort\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: filter[id]\n        required: false\n        in: query\n        description: id\n        schema:\n          type: string\n      - name: filter[id.lt]\n        required: false\n        in: query\n        description: id__lt\n        schema:\n          type: string\n      - name: filter[id.gt]\n        required: false\n        in: query\n        description: id__gt\n        schema:\n          type: string\n      - name: filter[id.gte]\n        required: false\n        in: query\n        description: id__gte\n        schema:\n          type: string\n      - name: filter[id.lte]\n        required: false\n        in: query\n        description: id__lte\n        schema:\n          type: string\n      - name: filter[id.in]\n        required: false\n        in: query\n        description: id__in\n        schema:\n          type: string\n      - name: filter[term_identifier]\n        required: false\n        in: query\n        description: term_identifier\n        schema:\n          type: string\n      - name: filter[term_identifier.lt]\n        required: false\n        in: query\n        description: term_identifier__lt\n        schema:\n          type: string\n      - name: filter[term_identifier.gt]\n        required: false\n        in: query\n        description: term_identifier__gt\n        schema:\n          type: string\n      - name: filter[term_identifier.gte]\n        required: false\n        in: query\n        description: term_identifier__gte\n        schema:\n          type: string\n      - name: filter[term_identifier.lte]\n        required: false\n        in: query\n        description: term_identifier__lte\n        schema:\n          type: string\n      - name: filter[term_identifier.in]\n        required: false\n        in: query\n        description: term_identifier__in\n        schema:\n          type: string\n      - name: filter[audit_permitted_code]\n        required: false\n        in: query\n        description: audit_permitted_code\n        schema:\n          type: string\n      - name: filter[exam_credit_flag]\n        required: false\n        in: query\n        description: exam_credit_flag\n        schema:\n          type: string\n      - name: filter[course.id]\n        required: false\n        in: query\n        description: course__id\n        schema:\n          type: string\n      - name: filter[course.id.lt]\n        required: false\n        in: query\n        description: course__id__lt\n        schema:\n          type: string\n      - name: filter[course.id.gt]\n        required: false\n        in: query\n        description: course__id__gt\n        schema:\n          type: string\n      - name: filter[course.id.gte]\n        required: false\n        in: query\n        description: course__id__gte\n        schema:\n          type: string\n      - name: filter[course.id.lte]\n        required: false\n        in: query\n        description: course__id__lte\n        schema:\n          type: string\n      - name: filter[course.id.in]\n        required: false\n        in: query\n        description: course__id__in\n        schema:\n          type: string\n      - name: filter[search]\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: List/v1/instructors/{id}/course_terms/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CourseTerm'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n  /v1/instructors/{id}/person/:\n    get:\n      operationId: fetch/v1/instructors/{id}/person/\n      description: A person.\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: globally unique id (UUID4)\n        schema:\n          type: string\n      - $ref: '#/components/parameters/include'\n      - $ref: '#/components/parameters/fields'\n      - $ref: '#/components/parameters/sort'\n      responses:\n        '200':\n          description: fetch/v1/instructors/{id}/person/\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                required:\n                - data\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Person'\n                  included:\n                    type: array\n                    uniqueItems: true\n                    items:\n                      $ref: '#/components/schemas/resource'\n                  links:\n                    description: Link members related to primary data\n                    allOf:\n                    - $ref: '#/components/schemas/links'\n                    - $ref: '#/components/schemas/pagination'\n                  jsonapi:\n                    $ref: '#/components/schemas/jsonapi'\n        '401':\n          description: not authorized\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\n        '404':\n          description: not found\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/failure'\ncomponents:\n  schemas:\n    jsonapi:\n      type: object\n      description: The server's implementation\n      properties:\n        version:\n          type: string\n        meta:\n          $ref: '#/components/schemas/meta'\n      additionalProperties: false\n    resource:\n      type: object\n      required:\n      - type\n      - id\n      additionalProperties: false\n      properties:\n        type:\n          $ref: '#/components/schemas/type'\n        id:\n          $ref: '#/components/schemas/id'\n        attributes:\n          type: object\n        relationships:\n          type: object\n        links:\n          $ref: '#/components/schemas/links'\n        meta:\n          $ref: '#/components/schemas/meta'\n    link:\n      oneOf:\n      - description: a string containing the link's URL\n        type: string\n        format: uri-reference\n      - type: object\n        required:\n        - href\n        properties:\n          href:\n            description: a string containing the link's URL\n            type: string\n            format: uri-reference\n          meta:\n            $ref: '#/components/schemas/meta'\n    links:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/link'\n    reltoone:\n      description: a singular 'to-one' relationship\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/relationshipLinks'\n        data:\n          $ref: '#/components/schemas/relationshipToOne'\n        meta:\n          $ref: '#/components/schemas/meta'\n    relationshipToOne:\n      description: reference to other resource in a to-one relationship\n      anyOf:\n      - $ref: '#/components/schemas/nulltype'\n      - $ref: '#/components/schemas/linkage'\n    reltomany:\n      description: a multiple 'to-many' relationship\n      type: object\n      properties:\n        links:\n          $ref: '#/components/schemas/relationshipLinks'\n        data:\n          $ref: '#/components/schemas/relationshipToMany'\n        meta:\n          $ref: '#/components/schemas/meta'\n    relationshipLinks:\n      description: optional references to other resource objects\n      type: object\n      additionalProperties: true\n      properties:\n        self:\n          $ref: '#/components/schemas/link'\n        related:\n          $ref: '#/components/schemas/link'\n    relationshipToMany:\n      description: An array of objects each containing the 'type' and 'id' for to-many\n        relationships\n      type: array\n      items:\n        $ref: '#/components/schemas/linkage'\n      uniqueItems: true\n    ResourceIdentifierObject:\n      oneOf:\n      - $ref: '#/components/schemas/relationshipToOne'\n      - $ref: '#/components/schemas/relationshipToMany'\n    linkage:\n      type: object\n      description: the 'type' and 'id'\n      required:\n      - type\n      - id\n      properties:\n        type:\n          $ref: '#/components/schemas/type'\n        id:\n          $ref: '#/components/schemas/id'\n        meta:\n          $ref: '#/components/schemas/meta'\n    pagination:\n      type: object\n      properties:\n        first:\n          $ref: '#/components/schemas/pageref'\n        last:\n          $ref: '#/components/schemas/pageref'\n        prev:\n          $ref: '#/components/schemas/pageref'\n        next:\n          $ref: '#/components/schemas/pageref'\n    pageref:\n      oneOf:\n      - type: string\n        format: uri-reference\n      - $ref: '#/components/schemas/nulltype'\n    failure:\n      type: object\n      required:\n      - errors\n      properties:\n        errors:\n          $ref: '#/components/schemas/errors'\n        meta:\n          $ref: '#/components/schemas/meta'\n        jsonapi:\n          $ref: '#/components/schemas/jsonapi'\n        links:\n          $ref: '#/components/schemas/links'\n    errors:\n      type: array\n      items:\n        $ref: '#/components/schemas/error'\n      uniqueItems: true\n    error:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n        links:\n          $ref: '#/components/schemas/links'\n        code:\n          type: string\n        title:\n          type: string\n        detail:\n          type: string\n        source:\n          type: object\n          properties:\n            pointer:\n              type: string\n              description: A [JSON Pointer](https://tools.ietf.org/html/rfc6901) to\n                the associated entity in the request document [e.g. `/data` for a\n                primary data object, or `/data/attributes/title` for a specific attribute.\n            parameter:\n              type: string\n              description: A string indicating which query parameter caused the error.\n            meta:\n              $ref: '#/components/schemas/meta'\n    onlymeta:\n      additionalProperties: false\n      properties:\n        meta:\n          $ref: '#/components/schemas/meta'\n    meta:\n      type: object\n      additionalProperties: true\n    datum:\n      description: singular item\n      properties:\n        data:\n          $ref: '#/components/schemas/resource'\n    nulltype:\n      type: object\n      nullable: true\n      default: null\n    type:\n      type: string\n      description: The [type](https://jsonapi.org/format/#document-resource-object-identification)\n        member is used to describe resource objects that share common attributes and\n        relationships.\n    id:\n      type: string\n      description: \"Each resource object\\u2019s type and id pair MUST [identify](https://jsonapi.org/format/#document-resource-object-identification)\\\n        \\ a single, unique resource.\"\n    Course:\n      type: object\n      required:\n      - type\n      - id\n      additionalProperties: false\n      properties:\n        type:\n          $ref: '#/components/schemas/type'\n        id:\n          $ref: '#/components/schemas/id'\n        links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/link'\n        attributes:\n          type: object\n          properties:\n            effective_start_date:\n              type: string\n              format: date\n              nullable: true\n              description: date when this instance becomes valid\n            effective_end_date:\n              type: string\n              format: date\n              nullable: true\n              description: date when this instance becomes invalid\n            last_mod_user_name:\n              type: string\n              readOnly: true\n              description: who last modified this instance\n            last_mod_date:\n              type: string\n              format: date\n              readOnly: true\n              description: when they modified it\n            school_bulletin_prefix_code:\n              type: string\n              maxLength: 10\n            suffix_two:\n              type: string\n              description: two-character identifier suffix\n              maxLength: 2\n            subject_area_code:\n              type: string\n              description: Subject\n              maxLength: 10\n            course_number:\n              type: string\n              description: '\"Shortcut\" identifier (formerly for touch-tone registration)'\n              maxLength: 10\n            course_identifier:\n              type: string\n              description: Course identifier (one-character suffix)\n              pattern: '[A-Z]{4}[0-9]{4}[A-Z]'\n              maxLength: 9\n              minLength: 9\n            course_name:\n              type: string\n              description: Course official title\n              maxLength: 80\n            course_description:\n              type: string\n              description: Course description\n          required:\n          - school_bulletin_prefix_code\n          - suffix_two\n          - subject_area_code\n          - course_number\n          - course_identifier\n          - course_name\n          - course_description\n        relationships:\n          type: object\n          properties:\n            course_terms:\n              $ref: '#/components/schemas/reltomany'\n    CourseTerm:\n      type: object\n      required:\n      - type\n      - id\n      additionalProperties: false\n      properties:\n        type:\n          $ref: '#/components/schemas/type'\n        id:\n          $ref: '#/components/schemas/id'\n        links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/link'\n        attributes:\n          type: object\n          properties:\n            effective_start_date:\n              type: string\n              format: date\n              nullable: true\n              description: date when this instance becomes valid\n            effective_end_date:\n              type: string\n              format: date\n              nullable: true\n              description: date when this instance becomes invalid\n            last_mod_user_name:\n              type: string\n              readOnly: true\n              description: who last modified this instance\n            last_mod_date:\n              type: string\n              format: date\n              readOnly: true\n              description: when they modified it\n            term_identifier:\n              type: string\n              pattern: '[0-9]{4}[123][A-Z]{4}[0-9]{4}[A-Z]'\n              maxLength: 14\n              minLength: 14\n            audit_permitted_code:\n              type: integer\n            exam_credit_flag:\n              type: boolean\n          required:\n          - term_identifier\n        relationships:\n          type: object\n          properties:\n            course:\n              $ref: '#/components/schemas/reltoone'\n            instructors:\n              $ref: '#/components/schemas/reltomany'\n    Person:\n      type: object\n      required:\n      - type\n      - id\n      additionalProperties: false\n      properties:\n        type:\n          $ref: '#/components/schemas/type'\n        id:\n          $ref: '#/components/schemas/id'\n        links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/link'\n        attributes:\n          type: object\n          properties:\n            effective_start_date:\n              type: string\n              format: date\n              nullable: true\n              description: date when this instance becomes valid\n            effective_end_date:\n              type: string\n              format: date\n              nullable: true\n              description: date when this instance becomes invalid\n            last_mod_user_name:\n              type: string\n              readOnly: true\n              description: who last modified this instance\n            last_mod_date:\n              type: string\n              format: date\n              readOnly: true\n              description: when they modified it\n            name:\n              type: string\n              maxLength: 100\n          required:\n          - name\n        relationships:\n          type: object\n          properties:\n            instructor:\n              $ref: '#/components/schemas/reltoone'\n    Instructor:\n      type: object\n      required:\n      - type\n      - id\n      additionalProperties: false\n      properties:\n        type:\n          $ref: '#/components/schemas/type'\n        id:\n          $ref: '#/components/schemas/id'\n        links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/link'\n        attributes:\n          type: object\n          properties:\n            effective_start_date:\n              type: string\n              format: date\n              nullable: true\n              description: date when this instance becomes valid\n            effective_end_date:\n              type: string\n              format: date\n              nullable: true\n              description: date when this instance becomes invalid\n            last_mod_user_name:\n              type: string\n              readOnly: true\n              description: who last modified this instance\n            last_mod_date:\n              type: string\n              format: date\n              readOnly: true\n              description: when they modified it\n        relationships:\n          type: object\n          properties:\n            course_terms:\n              $ref: '#/components/schemas/reltomany'\n            person:\n              $ref: '#/components/schemas/reltoone'\n  parameters:\n    include:\n      name: include\n      in: query\n      description: '[list of included related resources](https://jsonapi.org/format/#fetching-includes)'\n      required: false\n      style: form\n      schema:\n        type: string\n    fields:\n      name: fields\n      in: query\n      description: '[sparse fieldsets](https://jsonapi.org/format/#fetching-sparse-fieldsets).\n\n        Use fields[\\\u003ctypename\\\u003e]=field1,field2,...,fieldN'\n      required: false\n      style: deepObject\n      schema:\n        type: object\n      explode: true\n    sort:\n      name: sort\n      in: query\n      description: '[list of fields to sort by](https://jsonapi.org/format/#fetching-sorting)'\n      required: false\n      style: form\n      schema:\n        type: string\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n      description: basic authentication\n    sessionAuth:\n      type: apiKey\n      in: cookie\n      name: JSESSIONID\n      description: Session authentication\n    oauth-test:\n      type: oauth2\n      description: test OAuth2 service\n      flows:\n        authorizationCode:\n          authorizationUrl: https://oauth-test.cc.columbia.edu/as/authorization.oauth2\n          tokenUrl: https://oauth-test.cc.columbia.edu/as/token.oauth2\n          scopes:\n            auth-columbia: Columbia UNI login\n            create: create\n            read: read\n            update: update\n            delete: delete\n            openid: disclose your identity\n            profile: your user profile\n            email: your email address\n            https://api.columbia.edu/scope/group: groups you are a member of\n            demo-djt-sla-bronze: 'permitted to access the django-jsonapi-training\n              demo: 1 request per second'\n            demo-djt-sla-update: permitted to update the django-jsonapi-training resources\n    oauth-dev:\n      type: oauth2\n      description: dev OAuth2 service\n      flows:\n        authorizationCode:\n          authorizationUrl: https://oauth-dev.cuit.columbia.edu:8443/as/authorization.oauth2\n          tokenUrl: https://oauth-dev.cuit.columbia.edu:8443/as/token.oauth2\n          scopes:\n            auth-columbia: Columbia UNI login\n            create: create\n            read: read\n            update: update\n            delete: delete\n            openid: disclose your identity\n            profile: your user profile\n            email: your email address\n            https://api.columbia.edu/scope/group: groups you are a member of\n            demo-djt-sla-bronze: 'permitted to access the django-jsonapi-training\n              demo: 1 request per second'\n            demo-djt-sla-update: permitted to update the django-jsonapi-training resources\n    oauth-local:\n      type: oauth2\n      description: local DOT OAuth2 service\n      flows:\n        authorizationCode:\n          authorizationUrl: http://localhost:8000/o/authorize/\n          tokenUrl: http://localhost:8000/o/token/\n          scopes:\n            auth-columbia: Columbia UNI login\n            create: create\n            read: read\n            update: update\n            delete: delete\n            openid: disclose your identity\n            profile: your user profile\n            email: your email address\n            https://api.columbia.edu/scope/group: groups you are a member of\n            demo-djt-sla-bronze: 'permitted to access the django-jsonapi-training\n              demo: 1 request per second'\n            demo-djt-sla-update: permitted to update the django-jsonapi-training resources\nservers:\n- url: http://localhost:8000\n  description: local dev\n- url: https://localhost\n  description: local docker\n- url: https://ac45devapp01.cc.columbia.edu\n  description: demo\n- url: '{serverURL}'\n  description: provide your server URL\n  variables:\n    serverURL:\n      default: http://localhost:8000\nsecurity:\n- basicAuth: []\n- sessionAuth: []\n- oauth-test:\n  - - auth-columbia\n    - openid\n    - https://api.columbia.edu/scope/group\n- oauth-dev:\n  - - auth-columbia\n    - openid\n    - https://api.columbia.edu/scope/group\n- oauth-local:\n  - - auth-columbia\n    - openid\n    - https://api.columbia.edu/scope/group\n"
		}
	},
	"Error": "parse: parse spec: paths: /v1/course_terms/{id}/relationships/{related_field}/: get: operation \"retrieve/v1/course_terms/{id}/relationships/{related_field}/\": parameters: duplicate parameter: \"sort\" in \"query\""
}