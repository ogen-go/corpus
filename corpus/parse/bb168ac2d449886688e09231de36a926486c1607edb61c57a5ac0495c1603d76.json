{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "services.yaml",
			"size": 0,
			"path": "providers/src/netlify/v0.1.0/services/services.yaml",
			"byteSize": 10591,
			"content": "paths:\n  /services/:\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/service'\n                type: array\n          description: services\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - service\n      operationId: getServices\n      parameters:\n        - in: query\n          name: search\n          schema:\n            type: string\n  /services/{addonName}:\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/service'\n          description: services\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - service\n      operationId: showService\n      parameters:\n        - in: path\n          name: addonName\n          required: true\n          schema:\n            type: string\n  /services/{addonName}/manifest:\n    get:\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                type: object\n          description: retrieving from provider\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - service\n      operationId: showServiceManifest\n      parameters:\n        - in: path\n          name: addonName\n          required: true\n          schema:\n            type: string\n  /sites/{site_id}/service-instances:\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/serviceInstance'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: listServiceInstancesForSite\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n  /sites/{site_id}/services/{addon}/instances:\n    post:\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/serviceInstance'\n          description: Created\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: createServiceInstance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: addon\n          required: true\n          schema:\n            type: string\n  /sites/{site_id}/services/{addon}/instances/{instance_id}:\n    delete:\n      responses:\n        '204':\n          description: Deleted\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: deleteServiceInstance\n      parameters: &ref_0\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: addon\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: instance_id\n          required: true\n          schema:\n            type: string\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/serviceInstance'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: showServiceInstance\n      parameters: *ref_0\n    put:\n      responses:\n        '204':\n          description: No Content\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: updateServiceInstance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      parameters: *ref_0\ncomponents:\n  schemas:\n    service:\n      properties:\n        tags:\n          items:\n            type: string\n          type: array\n        created_at:\n          format: dateTime\n          type: string\n        description:\n          type: string\n        environments:\n          items:\n            type: string\n          type: array\n        events:\n          items:\n            type: object\n          type: array\n        icon:\n          type: string\n        id:\n          type: string\n        long_description:\n          type: string\n        manifest_url:\n          type: string\n        name:\n          type: string\n        service_path:\n          type: string\n        slug:\n          type: string\n        updated_at:\n          format: dateTime\n          type: string\n      type: object\n    error:\n      properties:\n        code:\n          format: int64\n          type: integer\n        message:\n          nullable: false\n          type: string\n      required:\n        - message\n      type: object\n    serviceInstance:\n      properties:\n        auth_url:\n          type: string\n        config:\n          type: object\n        created_at:\n          format: dateTime\n          type: string\n        env:\n          type: object\n        external_attributes:\n          type: object\n        id:\n          type: string\n        service_name:\n          type: string\n        service_path:\n          type: string\n        service_slug:\n          type: string\n        snippets:\n          items:\n            type: object\n          type: array\n        updated_at:\n          format: dateTime\n          type: string\n        url:\n          type: string\n      type: object\n  parameters: {}\n  responses:\n    error:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: error\n  securitySchemes: {}\n  callbacks: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    service:\n      id: netlify.services.service\n      name: service\n      title: service\n      methods:\n        getServices:\n          operation:\n            $ref: '#/paths/~1services~1/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        showService:\n          operation:\n            $ref: '#/paths/~1services~1{addonName}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        showServiceManifest:\n          operation:\n            $ref: '#/paths/~1services~1{addonName}~1manifest/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/service/methods/getServices'\n        insert: []\n        update: []\n        delete: []\n    serviceInstance:\n      id: netlify.services.serviceInstance\n      name: serviceInstance\n      title: serviceInstance\n      methods:\n        listServiceInstancesForSite:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1service-instances/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        createServiceInstance:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1services~1{addon}~1instances/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        deleteServiceInstance:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1services~1{addon}~1instances~1{instance_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        showServiceInstance:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1services~1{addon}~1instances~1{instance_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        updateServiceInstance:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1services~1{addon}~1instances~1{instance_id}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/serviceInstance/methods/listServiceInstancesForSite'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/serviceInstance/methods/createServiceInstance'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/serviceInstance/methods/deleteServiceInstance'\nopenapi: 3.0.0\nservers:\n  - url: https://api.netlify.com/api/v1\nsecurity:\n  - netlifyAuth: []\ntags:\n  - name: ticket\n    x-displayName: Ticket\n  - name: accessToken\n    x-displayName: Access token\n  - name: user\n    x-displayName: User\n  - name: accountMembership\n    x-displayName: Accounts\n  - name: member\n    x-displayName: Member\n  - name: accountType\n    x-displayName: Access type\n  - name: paymentMethod\n    x-displayName: Payment method\n  - name: auditLog\n    x-displayName: Audit log\n  - name: site\n    x-displayName: Site\n  - name: file\n    x-displayName: File\n  - name: metadata\n    x-displayName: Metadata\n  - name: snippet\n    x-displayName: Snippet\n  - name: dnsZone\n    x-displayName: DNS zone\n  - name: sniCertificate\n    x-displayName: SNI certificate\n  - name: deploy\n    x-displayName: Deploy\n  - name: deployedBranch\n    x-displayName: Deployed branch\n  - name: deployKey\n    x-displayName: Deploy key\n  - name: build\n    x-displayName: Build\n  - name: buildLogMsg\n    x-displayName: Build log message\n  - name: hook\n    x-displayName: Hook\n  - name: hookType\n    x-displayName: Hook type\n  - name: buildHook\n    x-displayName: Build hook\n  - name: service\n    x-displayName: Service\n  - name: serviceInstance\n    x-displayName: Service instance\n  - name: function\n    x-displayName: Function\n  - name: form\n    x-displayName: Form\n  - name: submission\n    x-displayName: Form submission\n  - name: splitTest\n    x-displayName: Split test\n  - name: asset\n    x-displayName: Asset\n  - name: assetPublicSignature\n    x-displayName: Asset public signature\nexternalDocs:\n  description: Online documentation\n  url: https://www.netlify.com/docs/api/\ninfo:\n  description: Services\n  termsOfService: https://www.netlify.com/legal/terms-of-use/\n  title: Netlify's API documentation - services\n  version: 2.9.0\n  x-logo:\n    altText: Netlify\n    href: https://www.netlify.com/docs/\n    url: netlify-logo.png\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@ca6abad4745061e15112152cdee33275701a16c1/-/blob/providers/src/netlify/v0.1.0/services/services.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/ca6abad4745061e15112152cdee33275701a16c1/providers/src/netlify/v0.1.0/services/services.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/sites/{site_id}/services/{addon}/instances/{instance_id}\": at 1:5959: get: operation \"showServiceInstance\": at 1:6377: security: unknown security schema \"netlifyAuth\""
}