{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/surfstudio/SurfGen"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "Tests/PipelinesTests/CommonTestSpecs/catalog/api.yaml",
			"byteSize": 2885,
			"content": "openapi: 3.0.2\ninfo:\n  title: \"API\"\n  version: \"1.0.0\"\n  contact:\n    name: Starkina Maria\n    email: starkina@surfstudio.ru\n\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT \n\nsecurity:\n  - bearerAuth: []\n      \npaths:\n  /billings/services:       \n    get:\n      summary: Услуги для каталога\n      parameters:\n        - name: isActive\n          required: false\n          in: query\n          schema:\n            type: boolean\n          description: Если true, возвращаются активные и приостановленные услуги. По умолчанию - все \n      responses:\n        \"200\":\n          description: \"Все ок\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"models.yaml#/components/schemas/CatalogItem\"\n        default:\n          $ref: \"../common/errors.yaml#/components/responses/ApiErrorResponse\"\n\n  /billings/service?serviceId={serviceId}:       \n      get:\n        summary: Детальная информация по услуге\n        parameters:\n          - name: serviceId\n            required: true\n            in: query\n            schema:\n              type: string\n            description: ID услуги\n        responses:\n          \"200\":\n            description: \"Все ок\"\n            content:\n              application/json:\n                schema:\n                  $ref: \"models.yaml#/components/schemas/Service\"\n          default:\n            $ref: \"../common/errors.yaml#/components/responses/ApiErrorResponse\"\n\n  /billings/tariffs?serviceId={serviceId}:       \n    get:\n      summary: Доступные тарифы\n      parameters:\n        - name: serviceId\n          required: true\n          in: query\n          schema:\n            type: string\n          description: ID услуги\n      responses:\n        \"200\":\n          description: \"Все ок\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"../billings/models.yaml#/components/schemas/Tariffs\"\n        default:\n          $ref: \"../common/errors.yaml#/components/responses/ApiErrorResponse\"\n  \n  /billings/setTariff:\n    post:\n      summary: Изменение тарифа\n      requestBody:\n        required: true\n        content:\n          application/json: \n            schema:\n              $ref: \"models.yaml#/components/schemas/SetTariffRequest\"\n      responses:\n        \"200\":\n          description: \"Успех\"\n          content:\n            application/json:\n              schema:\n                $ref: \"../common/models.yaml#/components/schemas/InfoMessage\" \n        default:\n          $ref: \"../common/errors.yaml#/components/responses/ApiErrorResponse\"\n\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /billings/service?serviceId={serviceId}: get: operation \"\": parse path: path parameter not specified: \"serviceId\""
}