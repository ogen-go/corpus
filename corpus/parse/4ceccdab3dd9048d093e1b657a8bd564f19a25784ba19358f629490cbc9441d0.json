{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "trello.com-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/trello.com-1.0-swagger.yaml",
			"byteSize": 575376,
			"content": "openapi: 3.0.0\nx-hasEquivalentPaths: true\ninfo:\n  contact:\n    name: Trello\n    url: https://trello.com/home\n  description: \u003e-\n    This document describes the REST API of Trello as published by Trello.com.\n     - \u003ca href='https://trello.com/docs/index.html' target='_blank'\u003eOfficial Documentation\u003c/a\u003e\n     - \u003ca href='https://trello.com/docs/api' target='_blank'\u003eThe HTML pages that were scraped in order to generate this specification.\u003c/a\u003e\n  license:\n    name: \"Trello : Terms of Service\"\n    url: https://trello.com/legal\n  termsOfService: https://trello.com/legal\n  title: Trello\n  version: \"1.0\"\n  x-apisguru-categories:\n    - collaboration\n  x-logo:\n    url: https://d2k1ftgv7pobq7.cloudfront.net/meta/p/res/images/c13d1cd96a2cff30f0460a5e1860c5ea/header-logo-blue.svg\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/APIs-guru/unofficial_openapi_specs/master/trello.com/1.0/swagger.yaml\n      version: \"2.0\"\n  x-providerName: trello.com\n  x-unofficialSpec: true\nexternalDocs:\n  url: https://developers.trello.com\ntags:\n  - description: https://trello.com/docs/api/action/index.html\n    name: action\n  - description: https://trello.com/docs/api/batch/index.html\n    name: batch\n  - description: https://trello.com/docs/api/board/index.html\n    name: board\n  - description: https://trello.com/docs/api/card/index.html\n    name: card\n  - description: https://trello.com/docs/api/checklist/index.html\n    name: checklist\n  - description: https://trello.com/docs/api/label/index.html\n    name: label\n  - description: https://trello.com/docs/api/list/index.html\n    name: list\n  - description: https://trello.com/docs/api/member/index.html\n    name: member\n  - description: https://trello.com/docs/api/notification/index.html\n    name: notification\n  - description: https://trello.com/docs/api/organization/index.html\n    name: organization\n  - description: https://trello.com/docs/api/search/index.html\n    name: search\n  - description: https://trello.com/docs/api/session/index.html\n    name: session\n  - description: https://trello.com/docs/api/token/index.html\n    name: token\n  - description: https://trello.com/docs/api/type/index.html\n    name: type\n  - description: https://trello.com/docs/api/webhook/index.html\n    name: webhook\npaths:\n  \"/actions/{idAction}\":\n    delete:\n      operationId: deleteActionsByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteActionsByIdAction()\n      tags:\n        - action\n    get:\n      operationId: getActionsByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsByIdAction()\n      tags:\n        - action\n    put:\n      operationId: updateActionsByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/actions\"\n        description: Attributes of \"Actions\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateActionsByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/board\":\n    get:\n      operationId: getActionsBoardByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsBoardByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/board/{field}\":\n    get:\n      operationId: getActionsBoardByIdActionByField\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsBoardByIdActionByField()\n      tags:\n        - action\n  \"/actions/{idAction}/card\":\n    get:\n      operationId: getActionsCardByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsCardByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/card/{field}\":\n    get:\n      operationId: getActionsCardByIdActionByField\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsCardByIdActionByField()\n      tags:\n        - action\n  \"/actions/{idAction}/display\":\n    get:\n      operationId: getActionsDisplayByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsDisplayByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/entities\":\n    get:\n      operationId: getActionsEntitiesByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsEntitiesByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/list\":\n    get:\n      operationId: getActionsListByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsListByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/list/{field}\":\n    get:\n      operationId: getActionsListByIdActionByField\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsListByIdActionByField()\n      tags:\n        - action\n  \"/actions/{idAction}/member\":\n    get:\n      operationId: getActionsMemberByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsMemberByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/member/{field}\":\n    get:\n      operationId: getActionsMemberByIdActionByField\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsMemberByIdActionByField()\n      tags:\n        - action\n  \"/actions/{idAction}/memberCreator\":\n    get:\n      operationId: getActionsMemberCreatorByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsMemberCreatorByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/memberCreator/{field}\":\n    get:\n      operationId: getActionsMemberCreatorByIdActionByField\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsMemberCreatorByIdActionByField()\n      tags:\n        - action\n  \"/actions/{idAction}/organization\":\n    get:\n      operationId: getActionsOrganizationByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsOrganizationByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/organization/{field}\":\n    get:\n      operationId: getActionsOrganizationByIdActionByField\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getActionsOrganizationByIdActionByField()\n      tags:\n        - action\n  \"/actions/{idAction}/text\":\n    put:\n      operationId: updateActionsTextByIdAction\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/actions_text\"\n        description: Attributes of \"Actions Text\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateActionsTextByIdAction()\n      tags:\n        - action\n  \"/actions/{idAction}/{field}\":\n    get:\n      operationId: getActionsByIdActionByField\n      parameters:\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getActionsByIdActionByField()\n      tags:\n        - action\n  /batch:\n    get:\n      operationId: getBatch\n      parameters:\n        - description: list of API v1 GET routes, not including the version prefix\n          in: query\n          name: urls\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getBatch()\n      tags:\n        - batch\n  /boards:\n    post:\n      operationId: addBoards\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards\"\n        description: Attributes of \"Boards\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addBoards()\n      tags:\n        - board\n  \"/boards/{idBoard}\":\n    get:\n      operationId: getBoardsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: actions_format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: actions_since\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: action_member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: action_member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: action_memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: action_memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: card_attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: card_attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all or none\"\n          in: query\n          name: card_checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: card_stickers\n          required: false\n          schema:\n            type: string\n        - description: \"One of: mine or none\"\n          in: query\n          name: boardStars\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"One of: all or none\"\n          in: query\n          name: labels\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: color, idBoard, name or uses\"\n          in: query\n          name: label_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 0 to 1000\n          in: query\n          name: labels_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: lists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: list_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: active, admin, deactivated, me or\n            normal\"\n          in: query\n          name: memberships\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: memberships_member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberships_member_fields\n          required: false\n          schema:\n            type: string\n            default: fullName and username\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, initials, fullName, username and confirmed\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: membersInvited\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: membersInvited_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, initials, fullName and username\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: checklist_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: organization\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            type: string\n            default: name and displayName\n        - description: \"all or a comma-separated list of: active, admin, deactivated, me or\n            normal\"\n          in: query\n          name: organization_memberships\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: myPrefs\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: name, desc, descData, closed, idOrganization, pinned, url,\n              shortUrl, prefs and labelNames\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsByIdBoard()\n      tags:\n        - board\n    put:\n      operationId: updateBoardsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards\"\n        description: Attributes of \"Boards\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/actions\":\n    get:\n      operationId: getBoardsActionsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsActionsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/boardStars\":\n    get:\n      operationId: getBoardsBoardStarsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: mine or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: mine\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsBoardStarsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/calendarKey/generate\":\n    post:\n      operationId: addBoardsCalendarKeyGenerateByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addBoardsCalendarKeyGenerateByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/cards\":\n    get:\n      operationId: getBoardsCardsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: a number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: visible\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsCardsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/cards/{filter}\":\n    get:\n      operationId: getBoardsCardsByIdBoardByFilter\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getBoardsCardsByIdBoardByFilter()\n      tags:\n        - board\n  \"/boards/{idBoard}/cards/{idCard}\":\n    get:\n      operationId: getBoardsCardsByIdBoardByIdCard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: idCard\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: action_memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, initials, fullName and username\n        - description: \" true or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: idCheckItem or state\"\n          in: query\n          name: checkItemState_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: labels\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: checklist_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsCardsByIdBoardByIdCard()\n      tags:\n        - board\n  \"/boards/{idBoard}/checklists\":\n    get:\n      operationId: getBoardsChecklistsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all or none\"\n          in: query\n          name: checkItems\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: checkItem_fields\n          required: false\n          schema:\n            type: string\n            default: name, nameData, pos and state\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsChecklistsByIdBoard()\n      tags:\n        - board\n    post:\n      operationId: addBoardsChecklistsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_checklists\"\n        description: Attributes of \"Boards Checklists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addBoardsChecklistsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/closed\":\n    put:\n      operationId: updateBoardsClosedByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_closed\"\n        description: Attributes of \"Boards Closed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsClosedByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/deltas\":\n    get:\n      operationId: getBoardsDeltasByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: A valid tag for subscribing\n          in: query\n          name: tags\n          required: true\n          schema:\n            type: string\n        - description: a number from -1 to Infinity\n          in: query\n          name: ixLastUpdate\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsDeltasByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/desc\":\n    put:\n      operationId: updateBoardsDescByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_desc\"\n        description: Attributes of \"Boards Desc\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsDescByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/emailKey/generate\":\n    post:\n      operationId: addBoardsEmailKeyGenerateByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addBoardsEmailKeyGenerateByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/idOrganization\":\n    put:\n      operationId: updateBoardsIdOrganizationByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_idOrganization\"\n        description: Attributes of \"Boards Id Organization\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsIdOrganizationByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/blue\":\n    put:\n      operationId: updateBoardsLabelNamesBlueByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_blue\"\n        description: Attributes of \"Label Names Blue\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsLabelNamesBlueByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/green\":\n    put:\n      operationId: updateBoardsLabelNamesGreenByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_green\"\n        description: Attributes of \"Label Names Green\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsLabelNamesGreenByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/orange\":\n    put:\n      operationId: updateBoardsLabelNamesOrangeByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_orange\"\n        description: Attributes of \"Label Names Orange\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsLabelNamesOrangeByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/purple\":\n    put:\n      operationId: updateBoardsLabelNamesPurpleByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_purple\"\n        description: Attributes of \"Label Names Purple\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsLabelNamesPurpleByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/red\":\n    put:\n      operationId: updateBoardsLabelNamesRedByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_red\"\n        description: Attributes of \"Label Names Red\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsLabelNamesRedByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/labelNames/yellow\":\n    put:\n      operationId: updateBoardsLabelNamesYellowByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labelNames_yellow\"\n        description: Attributes of \"Label Names Yellow\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsLabelNamesYellowByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/labels\":\n    get:\n      operationId: getBoardsLabelsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: color, idBoard, name or uses\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsLabelsByIdBoard()\n      tags:\n        - board\n    post:\n      operationId: addBoardsLabelsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_labels\"\n        description: Attributes of \"Boards Labels\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addBoardsLabelsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/labels/{idLabel}\":\n    get:\n      operationId: getBoardsLabelsByIdBoardByIdLabel\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: color, idBoard, name or uses\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsLabelsByIdBoardByIdLabel()\n      tags:\n        - board\n  \"/boards/{idBoard}/lists\":\n    get:\n      operationId: getBoardsListsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: open\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsListsByIdBoard()\n      tags:\n        - board\n    post:\n      operationId: addBoardsListsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_lists\"\n        description: Attributes of \"Boards Lists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addBoardsListsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/lists/{filter}\":\n    get:\n      operationId: getBoardsListsByIdBoardByFilter\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getBoardsListsByIdBoardByFilter()\n      tags:\n        - board\n  \"/boards/{idBoard}/markAsViewed\":\n    post:\n      operationId: addBoardsMarkAsViewedByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addBoardsMarkAsViewedByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/members\":\n    get:\n      operationId: getBoardsMembersByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: fullName and username\n        - description: true or false ; works for premium organizations only.\n          in: query\n          name: activity\n          required: false\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsMembersByIdBoard()\n      tags:\n        - board\n    put:\n      operationId: updateBoardsMembersByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/boards_members\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMembersByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/members/{filter}\":\n    get:\n      operationId: getBoardsMembersByIdBoardByFilter\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getBoardsMembersByIdBoardByFilter()\n      tags:\n        - board\n  \"/boards/{idBoard}/members/{idMember}\":\n    delete:\n      operationId: deleteBoardsMembersByIdBoardByIdMember\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteBoardsMembersByIdBoardByIdMember()\n      tags:\n        - board\n    put:\n      operationId: updateBoardsMembersByIdBoardByIdMember\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/boards_members\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMembersByIdBoardByIdMember()\n      tags:\n        - board\n  \"/boards/{idBoard}/members/{idMember}/cards\":\n    get:\n      operationId: getBoardsMembersCardsByIdBoardByIdMember\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            type: string\n            default: name, desc, closed, idOrganization, pinned, url and prefs\n        - description: \" true or false\"\n          in: query\n          name: list\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: list_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: visible\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsMembersCardsByIdBoardByIdMember()\n      tags:\n        - board\n  \"/boards/{idBoard}/membersInvited\":\n    get:\n      operationId: getBoardsMembersInvitedByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsMembersInvitedByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/membersInvited/{field}\":\n    get:\n      operationId: getBoardsMembersInvitedByIdBoardByField\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsMembersInvitedByIdBoardByField()\n      tags:\n        - board\n  \"/boards/{idBoard}/memberships\":\n    get:\n      operationId: getBoardsMembershipsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: active, admin, deactivated, me or\n            normal\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: fullName and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsMembershipsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/memberships/{idMembership}\":\n    get:\n      operationId: getBoardsMembershipsByIdBoardByIdMembership\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: idMembership\n          in: path\n          name: idMembership\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: fullName and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsMembershipsByIdBoardByIdMembership()\n      tags:\n        - board\n    put:\n      operationId: updateBoardsMembershipsByIdBoardByIdMembership\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: idMembership\n          in: path\n          name: idMembership\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_memberships\"\n        description: Attributes of \"Boards Memberships\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMembershipsByIdBoardByIdMembership()\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs\":\n    get:\n      operationId: getBoardsMyPrefsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsMyPrefsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/emailPosition\":\n    put:\n      operationId: updateBoardsMyPrefsEmailPositionByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_emailPosition\"\n        description: Attributes of \"My Prefs Email Position\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMyPrefsEmailPositionByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/idEmailList\":\n    put:\n      operationId: updateBoardsMyPrefsIdEmailListByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_idEmailList\"\n        description: Attributes of \"My Prefs Id Email List\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMyPrefsIdEmailListByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showListGuide\":\n    put:\n      operationId: updateBoardsMyPrefsShowListGuideByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showListGuide\"\n        description: Attributes of \"My Prefs Show List Guide\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMyPrefsShowListGuideByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showSidebar\":\n    put:\n      operationId: updateBoardsMyPrefsShowSidebarByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showSidebar\"\n        description: Attributes of \"My Prefs Show Sidebar\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMyPrefsShowSidebarByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showSidebarActivity\":\n    put:\n      operationId: updateBoardsMyPrefsShowSidebarActivityByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showSidebarActivity\"\n        description: Attributes of \"My Prefs Show Sidebar Activity\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMyPrefsShowSidebarActivityByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showSidebarBoardActions\":\n    put:\n      operationId: updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showSidebarBoardActions\"\n        description: Attributes of \"My Prefs Show Sidebar Board Actions\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/myPrefs/showSidebarMembers\":\n    put:\n      operationId: updateBoardsMyPrefsShowSidebarMembersByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/myPrefs_showSidebarMembers\"\n        description: Attributes of \"My Prefs Show Sidebar Members\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsMyPrefsShowSidebarMembersByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/name\":\n    put:\n      operationId: updateBoardsNameByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_name\"\n        description: Attributes of \"Boards Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsNameByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/organization\":\n    get:\n      operationId: getBoardsOrganizationByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsOrganizationByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/organization/{field}\":\n    get:\n      operationId: getBoardsOrganizationByIdBoardByField\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getBoardsOrganizationByIdBoardByField()\n      tags:\n        - board\n  \"/boards/{idBoard}/powerUps\":\n    post:\n      operationId: addBoardsPowerUpsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_powerUps\"\n        description: Attributes of \"Boards Power Ups\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addBoardsPowerUpsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/powerUps/{powerUp}\":\n    delete:\n      operationId: deleteBoardsPowerUpsByIdBoardByPowerUp\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: powerUp\n          in: path\n          name: powerUp\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteBoardsPowerUpsByIdBoardByPowerUp()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/background\":\n    put:\n      operationId: updateBoardsPrefsBackgroundByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_background\"\n        description: Attributes of \"Prefs Background\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsBackgroundByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/calendarFeedEnabled\":\n    put:\n      operationId: updateBoardsPrefsCalendarFeedEnabledByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_calendarFeedEnabled\"\n        description: Attributes of \"Prefs Calendar Feed Enabled\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsCalendarFeedEnabledByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/cardAging\":\n    put:\n      operationId: updateBoardsPrefsCardAgingByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_cardAging\"\n        description: Attributes of \"Prefs Card Aging\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsCardAgingByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/cardCovers\":\n    put:\n      operationId: updateBoardsPrefsCardCoversByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_cardCovers\"\n        description: Attributes of \"Prefs Card Covers\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsCardCoversByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/comments\":\n    put:\n      operationId: updateBoardsPrefsCommentsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_comments\"\n        description: Attributes of \"Prefs Comments\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsCommentsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/invitations\":\n    put:\n      operationId: updateBoardsPrefsInvitationsByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_invitations\"\n        description: Attributes of \"Prefs Invitations\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsInvitationsByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/permissionLevel\":\n    put:\n      operationId: updateBoardsPrefsPermissionLevelByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_permissionLevel\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsPermissionLevelByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/selfJoin\":\n    put:\n      operationId: updateBoardsPrefsSelfJoinByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_selfJoin\"\n        description: Attributes of \"Prefs Self Join\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsSelfJoinByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/prefs/voting\":\n    put:\n      operationId: updateBoardsPrefsVotingByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_voting\"\n        description: Attributes of \"Prefs Voting\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsPrefsVotingByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/subscribed\":\n    put:\n      operationId: updateBoardsSubscribedByIdBoard\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/boards_subscribed\"\n        description: Attributes of \"Boards Subscribed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateBoardsSubscribedByIdBoard()\n      tags:\n        - board\n  \"/boards/{idBoard}/{field}\":\n    get:\n      operationId: getBoardsByIdBoardByField\n      parameters:\n        - description: board_id\n          in: path\n          name: idBoard\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getBoardsByIdBoardByField()\n      tags:\n        - board\n  /cards:\n    post:\n      operationId: addCards\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards\"\n        description: Attributes of \"Cards\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCards()\n      tags:\n        - card\n  \"/cards/{idCard}\":\n    delete:\n      operationId: deleteCardsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsByIdCard()\n      tags:\n        - card\n    get:\n      operationId: getCardsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: action_memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: membersVoted\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberVoted_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: idCheckItem or state\"\n          in: query\n          name: checkItemState_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: checklist_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            type: string\n            default: name, desc, descData, closed, idOrganization, pinned, url and prefs\n        - description: \" true or false\"\n          in: query\n          name: list\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: list_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: image, imageScaled, imageUrl,\n            left, rotate, top or zIndex\"\n          in: query\n          name: sticker_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: badges, checkItemStates, closed, dateLastActivity, desc, descData,\n              due, email, idBoard, idChecklists, idLabels, idList, idMembers,\n              idShort, idAttachmentCover, manualCoverAttachment, labels, name,\n              pos, shortUrl and url\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsByIdCard()\n      tags:\n        - card\n    put:\n      operationId: updateCardsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards\"\n        description: Attributes of \"Cards\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/actions\":\n    get:\n      operationId: getCardsActionsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: commentCard and updateCard:idList\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsActionsByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/actions/comments\":\n    post:\n      operationId: addCardsActionsCommentsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/actions_comments\"\n        description: Attributes of \"Actions Comments\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsActionsCommentsByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/actions/{idAction}/comments\":\n    delete:\n      description: This can only be done by the original author of the comment, or someone\n        with higher permissions than the original author.\n      operationId: deleteCardsActionsCommentsByIdCardByIdAction\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsActionsCommentsByIdCardByIdAction()\n      tags:\n        - card\n    put:\n      description: This can only be done by the original author of the comment.\n      operationId: updateCardsActionsCommentsByIdCardByIdAction\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idAction\n          in: path\n          name: idAction\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_actions_comments\"\n        description: Attributes of \"Cards Actions Comments\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsActionsCommentsByIdCardByIdAction()\n      tags:\n        - card\n  \"/cards/{idCard}/attachments\":\n    get:\n      operationId: getCardsAttachmentsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsAttachmentsByIdCard()\n      tags:\n        - card\n    post:\n      operationId: addCardsAttachmentsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_attachments\"\n        description: Attributes of \"Cards Attachments\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsAttachmentsByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/attachments/{idAttachment}\":\n    delete:\n      operationId: deleteCardsAttachmentsByIdCardByIdAttachment\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idAttachment\n          in: path\n          name: idAttachment\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsAttachmentsByIdCardByIdAttachment()\n      tags:\n        - card\n    get:\n      operationId: getCardsAttachmentsByIdCardByIdAttachment\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idAttachment\n          in: path\n          name: idAttachment\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsAttachmentsByIdCardByIdAttachment()\n      tags:\n        - card\n  \"/cards/{idCard}/board\":\n    get:\n      operationId: getCardsBoardByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsBoardByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/board/{field}\":\n    get:\n      operationId: getCardsBoardByIdCardByField\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsBoardByIdCardByField()\n      tags:\n        - card\n  \"/cards/{idCard}/checkItemStates\":\n    get:\n      operationId: getCardsCheckItemStatesByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: idCheckItem or state\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsCheckItemStatesByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}\":\n    put:\n      operationId: updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idChecklistCurrent\n          in: path\n          name: idChecklistCurrent\n          required: true\n          schema:\n            type: string\n        - description: idCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_idChecklistCurrent_checkI\\\n                tem\"\n        description: Attributes of \"Cards Checklist Id Checklist Current Check Item\" to be\n          updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem()\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem\":\n    post:\n      operationId: addCardsChecklistCheckItemByIdCardByIdChecklist\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_checkItem\"\n        description: Attributes of \"Cards Checklist Check Item\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsChecklistCheckItemByIdCardByIdChecklist()\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}\":\n    delete:\n      operationId: deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: idCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem()\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard\":\n    post:\n      operationId: addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: idCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem()\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name\":\n    put:\n      operationId: updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: idCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_checkItem_name\"\n        description: Attributes of \"Cards Checklist Check Item Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem()\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos\":\n    put:\n      operationId: updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: idCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_checkItem_pos\"\n        description: Attributes of \"Cards Checklist Check Item Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem()\n      tags:\n        - card\n  \"/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state\":\n    put:\n      operationId: updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: idCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklist_checkItem_state\"\n        description: Attributes of \"Cards Checklist Check Item State\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem()\n      tags:\n        - card\n  \"/cards/{idCard}/checklists\":\n    get:\n      operationId: getCardsChecklistsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all or none\"\n          in: query\n          name: checkItems\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: checkItem_fields\n          required: false\n          schema:\n            type: string\n            default: name, nameData, pos and state\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsChecklistsByIdCard()\n      tags:\n        - card\n    post:\n      operationId: addCardsChecklistsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_checklists\"\n        description: Attributes of \"Cards Checklists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsChecklistsByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/checklists/{idChecklist}\":\n    delete:\n      operationId: deleteCardsChecklistsByIdCardByIdChecklist\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsChecklistsByIdCardByIdChecklist()\n      tags:\n        - card\n  \"/cards/{idCard}/closed\":\n    put:\n      operationId: updateCardsClosedByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_closed\"\n        description: Attributes of \"Cards Closed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsClosedByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/desc\":\n    put:\n      operationId: updateCardsDescByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_desc\"\n        description: Attributes of \"Cards Desc\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsDescByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/due\":\n    put:\n      operationId: updateCardsDueByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_due\"\n        description: Attributes of \"Cards Due\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsDueByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/idAttachmentCover\":\n    put:\n      operationId: updateCardsIdAttachmentCoverByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idAttachmentCover\"\n        description: Attributes of \"Cards Id Attachment Cover\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsIdAttachmentCoverByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/idBoard\":\n    put:\n      operationId: updateCardsIdBoardByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idBoard\"\n        description: Attributes of \"Cards Id Board\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsIdBoardByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/idLabels\":\n    post:\n      operationId: addCardsIdLabelsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idLabels\"\n        description: Attributes of \"Cards Id Labels\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsIdLabelsByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/idLabels/{idLabel}\":\n    delete:\n      operationId: deleteCardsIdLabelsByIdCardByIdLabel\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsIdLabelsByIdCardByIdLabel()\n      tags:\n        - card\n  \"/cards/{idCard}/idList\":\n    put:\n      operationId: updateCardsIdListByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idList\"\n        description: Attributes of \"Cards Id List\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsIdListByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/idMembers\":\n    post:\n      operationId: addCardsIdMembersByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idMembers\"\n        description: Attributes of \"Cards Id Members\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsIdMembersByIdCard()\n      tags:\n        - card\n    put:\n      operationId: updateCardsIdMembersByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_idMembers\"\n        description: Attributes of \"Cards Id Members\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsIdMembersByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/idMembers/{idMember}\":\n    delete:\n      operationId: deleteCardsIdMembersByIdCardByIdMember\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsIdMembersByIdCardByIdMember()\n      tags:\n        - card\n  \"/cards/{idCard}/labels\":\n    post:\n      operationId: addCardsLabelsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_labels\"\n        description: Attributes of \"Cards Labels\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsLabelsByIdCard()\n      tags:\n        - card\n    put:\n      operationId: updateCardsLabelsByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_labels\"\n        description: Attributes of \"Cards Labels\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsLabelsByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/labels/{color}\":\n    delete:\n      operationId: deleteCardsLabelsByIdCardByColor\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: color\n          in: path\n          name: color\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsLabelsByIdCardByColor()\n      tags:\n        - card\n  \"/cards/{idCard}/list\":\n    get:\n      operationId: getCardsListByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsListByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/list/{field}\":\n    get:\n      operationId: getCardsListByIdCardByField\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsListByIdCardByField()\n      tags:\n        - card\n  \"/cards/{idCard}/markAssociatedNotificationsRead\":\n    post:\n      operationId: addCardsMarkAssociatedNotificationsReadByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsMarkAssociatedNotificationsReadByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/members\":\n    get:\n      operationId: getCardsMembersByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsMembersByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/membersVoted\":\n    get:\n      operationId: getCardsMembersVotedByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsMembersVotedByIdCard()\n      tags:\n        - card\n    post:\n      operationId: addCardsMembersVotedByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_membersVoted\"\n        description: Attributes of \"Cards Members Voted\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsMembersVotedByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/membersVoted/{idMember}\":\n    delete:\n      operationId: deleteCardsMembersVotedByIdCardByIdMember\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsMembersVotedByIdCardByIdMember()\n      tags:\n        - card\n  \"/cards/{idCard}/name\":\n    put:\n      operationId: updateCardsNameByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_name\"\n        description: Attributes of \"Cards Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsNameByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/pos\":\n    put:\n      operationId: updateCardsPosByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_pos\"\n        description: Attributes of \"Cards Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsPosByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/stickers\":\n    get:\n      operationId: getCardsStickersByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: image, imageScaled, imageUrl,\n            left, rotate, top or zIndex\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsStickersByIdCard()\n      tags:\n        - card\n    post:\n      operationId: addCardsStickersByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_stickers\"\n        description: Attributes of \"Cards Stickers\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addCardsStickersByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/stickers/{idSticker}\":\n    delete:\n      operationId: deleteCardsStickersByIdCardByIdSticker\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idSticker\n          in: path\n          name: idSticker\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteCardsStickersByIdCardByIdSticker()\n      tags:\n        - card\n    get:\n      operationId: getCardsStickersByIdCardByIdSticker\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idSticker\n          in: path\n          name: idSticker\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: image, imageScaled, imageUrl,\n            left, rotate, top or zIndex\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getCardsStickersByIdCardByIdSticker()\n      tags:\n        - card\n    put:\n      operationId: updateCardsStickersByIdCardByIdSticker\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: idSticker\n          in: path\n          name: idSticker\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_stickers\"\n        description: Attributes of \"Cards Stickers\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsStickersByIdCardByIdSticker()\n      tags:\n        - card\n  \"/cards/{idCard}/subscribed\":\n    put:\n      operationId: updateCardsSubscribedByIdCard\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/cards_subscribed\"\n        description: Attributes of \"Cards Subscribed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateCardsSubscribedByIdCard()\n      tags:\n        - card\n  \"/cards/{idCard}/{field}\":\n    get:\n      operationId: getCardsByIdCardByField\n      parameters:\n        - description: card id or shortlink\n          in: path\n          name: idCard\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getCardsByIdCardByField()\n      tags:\n        - card\n  /checklists:\n    post:\n      operationId: addChecklists\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists\"\n        description: Attributes of \"Checklists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addChecklists()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}\":\n    delete:\n      operationId: deleteChecklistsByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteChecklistsByIdChecklist()\n      tags:\n        - checklist\n    get:\n      operationId: getChecklistsByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all or none\"\n          in: query\n          name: checkItems\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: checkItem_fields\n          required: false\n          schema:\n            type: string\n            default: name, nameData, pos and state\n        - description: \"all or a comma-separated list of: idBoard, idCard, name or pos\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getChecklistsByIdChecklist()\n      tags:\n        - checklist\n    put:\n      operationId: updateChecklistsByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists\"\n        description: Attributes of \"Checklists\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateChecklistsByIdChecklist()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/board\":\n    get:\n      operationId: getChecklistsBoardByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getChecklistsBoardByIdChecklist()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/board/{field}\":\n    get:\n      operationId: getChecklistsBoardByIdChecklistByField\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getChecklistsBoardByIdChecklistByField()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/cards\":\n    get:\n      operationId: getChecklistsCardsByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: a number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: open\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getChecklistsCardsByIdChecklist()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/cards/{filter}\":\n    get:\n      operationId: getChecklistsCardsByIdChecklistByFilter\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getChecklistsCardsByIdChecklistByFilter()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/checkItems\":\n    get:\n      operationId: getChecklistsCheckItemsByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: name, nameData, pos and state\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getChecklistsCheckItemsByIdChecklist()\n      tags:\n        - checklist\n    post:\n      operationId: addChecklistsCheckItemsByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists_checkItems\"\n        description: Attributes of \"Checklists Check Items\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addChecklistsCheckItemsByIdChecklist()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/checkItems/{idCheckItem}\":\n    delete:\n      operationId: deleteChecklistsCheckItemsByIdChecklistByIdCheckItem\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: idCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteChecklistsCheckItemsByIdChecklistByIdCheckItem()\n      tags:\n        - checklist\n    get:\n      operationId: getChecklistsCheckItemsByIdChecklistByIdCheckItem\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: idCheckItem\n          in: path\n          name: idCheckItem\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: name, nameData, pos, state or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: name, nameData, pos and state\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getChecklistsCheckItemsByIdChecklistByIdCheckItem()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/idCard\":\n    put:\n      operationId: updateChecklistsIdCardByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists_idCard\"\n        description: Attributes of \"Checklists Id Card\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateChecklistsIdCardByIdChecklist()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/name\":\n    put:\n      operationId: updateChecklistsNameByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists_name\"\n        description: Attributes of \"Checklists Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateChecklistsNameByIdChecklist()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/pos\":\n    put:\n      operationId: updateChecklistsPosByIdChecklist\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/checklists_pos\"\n        description: Attributes of \"Checklists Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateChecklistsPosByIdChecklist()\n      tags:\n        - checklist\n  \"/checklists/{idChecklist}/{field}\":\n    get:\n      operationId: getChecklistsByIdChecklistByField\n      parameters:\n        - description: idChecklist\n          in: path\n          name: idChecklist\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getChecklistsByIdChecklistByField()\n      tags:\n        - checklist\n  /labels:\n    post:\n      operationId: addLabels\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labels\"\n        description: Attributes of \"Labels\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addLabels()\n      tags:\n        - label\n  \"/labels/{idLabel}\":\n    delete:\n      operationId: deleteLabelsByIdLabel\n      parameters:\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteLabelsByIdLabel()\n      tags:\n        - label\n    get:\n      operationId: getLabelsByIdLabel\n      parameters:\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: color, idBoard, name or uses\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getLabelsByIdLabel()\n      tags:\n        - label\n    put:\n      operationId: updateLabelsByIdLabel\n      parameters:\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labels\"\n        description: Attributes of \"Labels\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateLabelsByIdLabel()\n      tags:\n        - label\n  \"/labels/{idLabel}/board\":\n    get:\n      operationId: getLabelsBoardByIdLabel\n      parameters:\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getLabelsBoardByIdLabel()\n      tags:\n        - label\n  \"/labels/{idLabel}/board/{field}\":\n    get:\n      operationId: getLabelsBoardByIdLabelByField\n      parameters:\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getLabelsBoardByIdLabelByField()\n      tags:\n        - label\n  \"/labels/{idLabel}/color\":\n    put:\n      operationId: updateLabelsColorByIdLabel\n      parameters:\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labels_color\"\n        description: Attributes of \"Labels Color\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateLabelsColorByIdLabel()\n      tags:\n        - label\n  \"/labels/{idLabel}/name\":\n    put:\n      operationId: updateLabelsNameByIdLabel\n      parameters:\n        - description: idLabel\n          in: path\n          name: idLabel\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/labels_name\"\n        description: Attributes of \"Labels Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateLabelsNameByIdLabel()\n      tags:\n        - label\n  /lists:\n    post:\n      operationId: addLists\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists\"\n        description: Attributes of \"Lists\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addLists()\n      tags:\n        - list\n  \"/lists/{idList}\":\n    get:\n      operationId: getListsByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            type: string\n            default: name, desc, descData, closed, idOrganization, pinned, url and prefs\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: name, closed, idBoard and pos\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getListsByIdList()\n      tags:\n        - list\n    put:\n      operationId: updateListsByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists\"\n        description: Attributes of \"Lists\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateListsByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/actions\":\n    get:\n      operationId: getListsActionsByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getListsActionsByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/archiveAllCards\":\n    post:\n      operationId: addListsArchiveAllCardsByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addListsArchiveAllCardsByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/board\":\n    get:\n      operationId: getListsBoardByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getListsBoardByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/board/{field}\":\n    get:\n      operationId: getListsBoardByIdListByField\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getListsBoardByIdListByField()\n      tags:\n        - list\n  \"/lists/{idList}/cards\":\n    get:\n      operationId: getListsCardsByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: a number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: open\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getListsCardsByIdList()\n      tags:\n        - list\n    post:\n      operationId: addListsCardsByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_cards\"\n        description: Attributes of \"Lists Cards\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addListsCardsByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/cards/{filter}\":\n    get:\n      operationId: getListsCardsByIdListByFilter\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getListsCardsByIdListByFilter()\n      tags:\n        - list\n  \"/lists/{idList}/closed\":\n    put:\n      operationId: updateListsClosedByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_closed\"\n        description: Attributes of \"Lists Closed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateListsClosedByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/idBoard\":\n    put:\n      operationId: updateListsIdBoardByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_idBoard\"\n        description: Attributes of \"Lists Id Board\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateListsIdBoardByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/moveAllCards\":\n    post:\n      operationId: addListsMoveAllCardsByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_moveAllCards\"\n        description: Attributes of \"Lists Move All Cards\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addListsMoveAllCardsByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/name\":\n    put:\n      operationId: updateListsNameByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_name\"\n        description: Attributes of \"Lists Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateListsNameByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/pos\":\n    put:\n      operationId: updateListsPosByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_pos\"\n        description: Attributes of \"Lists Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateListsPosByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/subscribed\":\n    put:\n      operationId: updateListsSubscribedByIdList\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/lists_subscribed\"\n        description: Attributes of \"Lists Subscribed\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateListsSubscribedByIdList()\n      tags:\n        - list\n  \"/lists/{idList}/{field}\":\n    get:\n      operationId: getListsByIdListByField\n      parameters:\n        - description: idList\n          in: path\n          name: idList\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getListsByIdListByField()\n      tags:\n        - list\n  \"/members/{idMember}\":\n    get:\n      description: If you specify 'me' as the username, this call will respond as if you\n        had supplied the username associated with the supplied token\n      operationId: getMembersByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: A date, null or lastView\n          in: query\n          name: action_since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: action_before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: cards\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: card_members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: card_member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: card_attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: card_attachment_fields\n          required: false\n          schema:\n            type: string\n            default: url and previews\n        - description: \" true or false\"\n          in: query\n          name: card_stickers\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: boards\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            type: string\n            default: name, closed, idOrganization and pinned\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: board_actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: board_actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: board_actions_display\n          required: false\n          schema:\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: board_actions_format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: board_actions_since\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: board_actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: board_action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: board_lists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: active, admin, deactivated, me or\n            normal\"\n          in: query\n          name: board_memberships\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: board_organization\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: board_organization_fields\n          required: false\n          schema:\n            type: string\n            default: name and displayName\n        - description: \"all or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: boardsInvited\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: boardsInvited_fields\n          required: false\n          schema:\n            type: string\n            default: name, closed, idOrganization and pinned\n        - description: \" true or false\"\n          in: query\n          name: boardStars\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: savedSearches\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, members, none or public\"\n          in: query\n          name: organizations\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: organization_paid_account\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, members, none or public\"\n          in: query\n          name: organizationsInvited\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organizationsInvited_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: addAdminToBoard,\n            addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,\n            addedToBoard, addedToCard, addedToOrganization, cardDueSoon,\n            changeCard, closeBoard, commentCard, createdCard,\n            declinedInvitationToBoard, declinedInvitationToOrganization,\n            invitedToBoard, invitedToOrganization, makeAdminOfBoard,\n            makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,\n            removedFromBoard, removedFromCard, removedFromOrganization,\n            removedMemberFromCard, unconfirmedInvitedToBoard,\n            unconfirmedInvitedToOrganization or updateCheckItemStateOnCard\"\n          in: query\n          name: notifications\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: notifications_entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: notifications_display\n          required: false\n          schema:\n            type: string\n        - description: a number from 1 to 1000\n          in: query\n          name: notifications_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator, type\n            or unread\"\n          in: query\n          name: notification_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: notification_memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: notification_memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: An id, or null\n          in: query\n          name: notification_before\n          required: false\n          schema:\n            type: string\n        - description: An id, or null\n          in: query\n          name: notification_since\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: tokens\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: paid_account\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, custom, default, none or premium\"\n          in: query\n          name: boardBackgrounds\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"One of: all or none\"\n          in: query\n          name: customBoardBackgrounds\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"One of: all or none\"\n          in: query\n          name: customStickers\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"One of: all or none\"\n          in: query\n          name: customEmoji\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersByIdMember()\n      tags:\n        - member\n    put:\n      operationId: updateMembersByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members\"\n        description: Attributes of \"Members\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/actions\":\n    get:\n      operationId: getMembersActionsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersActionsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/avatar\":\n    post:\n      operationId: addMembersAvatarByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_avatar\"\n        description: Attributes of \"Members Avatar\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addMembersAvatarByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/avatarSource\":\n    put:\n      operationId: updateMembersAvatarSourceByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_avatarSource\"\n        description: Attributes of \"Members Avatar Source\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersAvatarSourceByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/bio\":\n    put:\n      operationId: updateMembersBioByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_bio\"\n        description: Attributes of \"Members Bio\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersBioByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/boardBackgrounds\":\n    get:\n      operationId: getMembersBoardBackgroundsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, custom, default, none or premium\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersBoardBackgroundsByIdMember()\n      tags:\n        - member\n    post:\n      operationId: addMembersBoardBackgroundsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardBackgrounds\"\n        description: Attributes of \"Members Board Backgrounds\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addMembersBoardBackgroundsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/boardBackgrounds/{idBoardBackground}\":\n    delete:\n      operationId: deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground()\n      tags:\n        - member\n    get:\n      operationId: getMembersBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: brightness, fullSizeUrl, scaled\n            or tile\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersBoardBackgroundsByIdMemberByIdBoardBackground()\n      tags:\n        - member\n    put:\n      operationId: updateMembersBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardBackgrounds\"\n        description: Attributes of \"Members Board Backgrounds\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersBoardBackgroundsByIdMemberByIdBoardBackground()\n      tags:\n        - member\n  \"/members/{idMember}/boardStars\":\n    get:\n      operationId: getMembersBoardStarsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersBoardStarsByIdMember()\n      tags:\n        - member\n    post:\n      operationId: addMembersBoardStarsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardStars\"\n        description: Attributes of \"Members Board Stars\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addMembersBoardStarsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/boardStars/{idBoardStar}\":\n    delete:\n      operationId: deleteMembersBoardStarsByIdMemberByIdBoardStar\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteMembersBoardStarsByIdMemberByIdBoardStar()\n      tags:\n        - member\n    get:\n      operationId: getMembersBoardStarsByIdMemberByIdBoardStar\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersBoardStarsByIdMemberByIdBoardStar()\n      tags:\n        - member\n    put:\n      operationId: updateMembersBoardStarsByIdMemberByIdBoardStar\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardStars\"\n        description: Attributes of \"Members Board Stars\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersBoardStarsByIdMemberByIdBoardStar()\n      tags:\n        - member\n  \"/members/{idMember}/boardStars/{idBoardStar}/idBoard\":\n    put:\n      operationId: updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardStars_idBoard\"\n        description: Attributes of \"Members Board Stars Id Board\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar()\n      tags:\n        - member\n  \"/members/{idMember}/boardStars/{idBoardStar}/pos\":\n    put:\n      operationId: updateMembersBoardStarsPosByIdMemberByIdBoardStar\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardStar\n          in: path\n          name: idBoardStar\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_boardStars_pos\"\n        description: Attributes of \"Members Board Stars Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersBoardStarsPosByIdMemberByIdBoardStar()\n      tags:\n        - member\n  \"/members/{idMember}/boards\":\n    get:\n      operationId: getMembersBoardsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: actions_format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: actions_since\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: active, admin, deactivated, me or\n            normal\"\n          in: query\n          name: memberships\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: organization\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            type: string\n            default: name and displayName\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: lists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersBoardsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/boards/{filter}\":\n    get:\n      operationId: getMembersBoardsByIdMemberByFilter\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getMembersBoardsByIdMemberByFilter()\n      tags:\n        - member\n  \"/members/{idMember}/boardsInvited\":\n    get:\n      operationId: getMembersBoardsInvitedByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersBoardsInvitedByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/boardsInvited/{field}\":\n    get:\n      operationId: getMembersBoardsInvitedByIdMemberByField\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersBoardsInvitedByIdMemberByField()\n      tags:\n        - member\n  \"/members/{idMember}/cards\":\n    get:\n      operationId: getMembersCardsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: stickers\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: a number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: visible\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersCardsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/cards/{filter}\":\n    get:\n      operationId: getMembersCardsByIdMemberByFilter\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getMembersCardsByIdMemberByFilter()\n      tags:\n        - member\n  \"/members/{idMember}/customBoardBackgrounds\":\n    get:\n      operationId: getMembersCustomBoardBackgroundsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersCustomBoardBackgroundsByIdMember()\n      tags:\n        - member\n    post:\n      operationId: addMembersCustomBoardBackgroundsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_customBoardBackgrounds\"\n        description: Attributes of \"Members Custom Board Backgrounds\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addMembersCustomBoardBackgroundsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/customBoardBackgrounds/{idBoardBackground}\":\n    delete:\n      operationId: deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()\n      tags:\n        - member\n    get:\n      operationId: getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: brightness, fullSizeUrl, scaled\n            or tile\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()\n      tags:\n        - member\n    put:\n      operationId: updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idBoardBackground\n          in: path\n          name: idBoardBackground\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_customBoardBackgrounds\"\n        description: Attributes of \"Members Custom Board Backgrounds\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()\n      tags:\n        - member\n  \"/members/{idMember}/customEmoji\":\n    get:\n      description: This gets the list of all of the user’s uploaded emoji\n      operationId: getMembersCustomEmojiByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersCustomEmojiByIdMember()\n      tags:\n        - member\n    post:\n      operationId: addMembersCustomEmojiByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_customEmoji\"\n        description: Attributes of \"Members Custom Emoji\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addMembersCustomEmojiByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/customEmoji/{idCustomEmoji}\":\n    get:\n      operationId: getMembersCustomEmojiByIdMemberByIdCustomEmoji\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idCustomEmoji\n          in: path\n          name: idCustomEmoji\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: name or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersCustomEmojiByIdMemberByIdCustomEmoji()\n      tags:\n        - member\n  \"/members/{idMember}/customStickers\":\n    get:\n      description: This gets a list of all of the user’s uploaded stickers\n      operationId: getMembersCustomStickersByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersCustomStickersByIdMember()\n      tags:\n        - member\n    post:\n      operationId: addMembersCustomStickersByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_customStickers\"\n        description: Attributes of \"Members Custom Stickers\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addMembersCustomStickersByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/customStickers/{idCustomSticker}\":\n    delete:\n      operationId: deleteMembersCustomStickersByIdMemberByIdCustomSticker\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idCustomSticker\n          in: path\n          name: idCustomSticker\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteMembersCustomStickersByIdMemberByIdCustomSticker()\n      tags:\n        - member\n    get:\n      operationId: getMembersCustomStickersByIdMemberByIdCustomSticker\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idCustomSticker\n          in: path\n          name: idCustomSticker\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: scaled or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersCustomStickersByIdMemberByIdCustomSticker()\n      tags:\n        - member\n  \"/members/{idMember}/deltas\":\n    get:\n      operationId: getMembersDeltasByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: A valid tag for subscribing\n          in: query\n          name: tags\n          required: true\n          schema:\n            type: string\n        - description: a number from -1 to Infinity\n          in: query\n          name: ixLastUpdate\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersDeltasByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/fullName\":\n    put:\n      operationId: updateMembersFullNameByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_fullName\"\n        description: Attributes of \"Members Full Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersFullNameByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/initials\":\n    put:\n      operationId: updateMembersInitialsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_initials\"\n        description: Attributes of \"Members Initials\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersInitialsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/notifications\":\n    get:\n      description: You can only read the notifications for the member associated with the\n        supplied token\n      operationId: getMembersNotificationsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAdminToBoard,\n            addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,\n            addedToBoard, addedToCard, addedToOrganization, cardDueSoon,\n            changeCard, closeBoard, commentCard, createdCard,\n            declinedInvitationToBoard, declinedInvitationToOrganization,\n            invitedToBoard, invitedToOrganization, makeAdminOfBoard,\n            makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,\n            removedFromBoard, removedFromCard, removedFromOrganization,\n            removedMemberFromCard, unconfirmedInvitedToBoard,\n            unconfirmedInvitedToOrganization or updateCheckItemStateOnCard\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all, read or unread\"\n          in: query\n          name: read_filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator, type\n            or unread\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 1 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: a number from 0 to 100\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n        - description: An id, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: An id, or null\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersNotificationsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/notifications/{filter}\":\n    get:\n      operationId: getMembersNotificationsByIdMemberByFilter\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getMembersNotificationsByIdMemberByFilter()\n      tags:\n        - member\n  \"/members/{idMember}/oneTimeMessagesDismissed\":\n    post:\n      operationId: addMembersOneTimeMessagesDismissedByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_oneTimeMessagesDismissed\"\n        description: Attributes of \"Members One Time Messages Dismissed\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addMembersOneTimeMessagesDismissedByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/organizations\":\n    get:\n      operationId: getMembersOrganizationsByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all, members, none or public\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: paid_account\n          required: false\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersOrganizationsByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/organizations/{filter}\":\n    get:\n      operationId: getMembersOrganizationsByIdMemberByFilter\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getMembersOrganizationsByIdMemberByFilter()\n      tags:\n        - member\n  \"/members/{idMember}/organizationsInvited\":\n    get:\n      operationId: getMembersOrganizationsInvitedByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersOrganizationsInvitedByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/organizationsInvited/{field}\":\n    get:\n      operationId: getMembersOrganizationsInvitedByIdMemberByField\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersOrganizationsInvitedByIdMemberByField()\n      tags:\n        - member\n  \"/members/{idMember}/prefs/colorBlind\":\n    put:\n      operationId: updateMembersPrefsColorBlindByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_colorBlind\"\n        description: Attributes of \"Prefs Color Blind\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersPrefsColorBlindByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/prefs/locale\":\n    put:\n      operationId: updateMembersPrefsLocaleByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_locale\"\n        description: Attributes of \"Prefs Locale\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersPrefsLocaleByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/prefs/minutesBetweenSummaries\":\n    put:\n      operationId: updateMembersPrefsMinutesBetweenSummariesByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_minutesBetweenSummaries\"\n        description: Attributes of \"Prefs Minutes Between Summaries\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersPrefsMinutesBetweenSummariesByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches\":\n    get:\n      operationId: getMembersSavedSearchesByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersSavedSearchesByIdMember()\n      tags:\n        - member\n    post:\n      operationId: addMembersSavedSearchesByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches\"\n        description: Attributes of \"Members Saved Searches\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addMembersSavedSearchesByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches/{idSavedSearch}\":\n    delete:\n      operationId: deleteMembersSavedSearchesByIdMemberByIdSavedSearch\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteMembersSavedSearchesByIdMemberByIdSavedSearch()\n      tags:\n        - member\n    get:\n      operationId: getMembersSavedSearchesByIdMemberByIdSavedSearch\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersSavedSearchesByIdMemberByIdSavedSearch()\n      tags:\n        - member\n    put:\n      operationId: updateMembersSavedSearchesByIdMemberByIdSavedSearch\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches\"\n        description: Attributes of \"Members Saved Searches\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersSavedSearchesByIdMemberByIdSavedSearch()\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches/{idSavedSearch}/name\":\n    put:\n      operationId: updateMembersSavedSearchesNameByIdMemberByIdSavedSearch\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches_name\"\n        description: Attributes of \"Members Saved Searches Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersSavedSearchesNameByIdMemberByIdSavedSearch()\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches/{idSavedSearch}/pos\":\n    put:\n      operationId: updateMembersSavedSearchesPosByIdMemberByIdSavedSearch\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches_pos\"\n        description: Attributes of \"Members Saved Searches Pos\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersSavedSearchesPosByIdMemberByIdSavedSearch()\n      tags:\n        - member\n  \"/members/{idMember}/savedSearches/{idSavedSearch}/query\":\n    put:\n      operationId: updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: idSavedSearch\n          in: path\n          name: idSavedSearch\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_savedSearches_query\"\n        description: Attributes of \"Members Saved Searches Query\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch()\n      tags:\n        - member\n  \"/members/{idMember}/tokens\":\n    get:\n      operationId: getMembersTokensByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getMembersTokensByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/username\":\n    put:\n      operationId: updateMembersUsernameByIdMember\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/members_username\"\n        description: Attributes of \"Members Username\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateMembersUsernameByIdMember()\n      tags:\n        - member\n  \"/members/{idMember}/{field}\":\n    get:\n      operationId: getMembersByIdMemberByField\n      parameters:\n        - description: idMember or username\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getMembersByIdMemberByField()\n      tags:\n        - member\n  /notifications/all/read:\n    post:\n      operationId: addNotificationsAllRead\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addNotificationsAllRead()\n      tags:\n        - notification\n  \"/notifications/{idNotification}\":\n    get:\n      operationId: getNotificationsByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator, type\n            or unread\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            type: string\n            default: name\n        - description: \" true or false\"\n          in: query\n          name: list\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: card\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: name\n        - description: \" true or false\"\n          in: query\n          name: organization\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            type: string\n            default: displayName\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsByIdNotification()\n      tags:\n        - notification\n    put:\n      operationId: updateNotificationsByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/notifications\"\n        description: Attributes of \"Notifications\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateNotificationsByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/board\":\n    get:\n      operationId: getNotificationsBoardByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsBoardByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/board/{field}\":\n    get:\n      operationId: getNotificationsBoardByIdNotificationByField\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsBoardByIdNotificationByField()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/card\":\n    get:\n      operationId: getNotificationsCardByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsCardByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/card/{field}\":\n    get:\n      operationId: getNotificationsCardByIdNotificationByField\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsCardByIdNotificationByField()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/display\":\n    get:\n      operationId: getNotificationsDisplayByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsDisplayByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/entities\":\n    get:\n      operationId: getNotificationsEntitiesByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsEntitiesByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/list\":\n    get:\n      operationId: getNotificationsListByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsListByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/list/{field}\":\n    get:\n      operationId: getNotificationsListByIdNotificationByField\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsListByIdNotificationByField()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/member\":\n    get:\n      operationId: getNotificationsMemberByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsMemberByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/member/{field}\":\n    get:\n      operationId: getNotificationsMemberByIdNotificationByField\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsMemberByIdNotificationByField()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/memberCreator\":\n    get:\n      operationId: getNotificationsMemberCreatorByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsMemberCreatorByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/memberCreator/{field}\":\n    get:\n      operationId: getNotificationsMemberCreatorByIdNotificationByField\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsMemberCreatorByIdNotificationByField()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/organization\":\n    get:\n      operationId: getNotificationsOrganizationByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsOrganizationByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/organization/{field}\":\n    get:\n      operationId: getNotificationsOrganizationByIdNotificationByField\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getNotificationsOrganizationByIdNotificationByField()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/unread\":\n    put:\n      operationId: updateNotificationsUnreadByIdNotification\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/notifications_unread\"\n        description: Attributes of \"Notifications Unread\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateNotificationsUnreadByIdNotification()\n      tags:\n        - notification\n  \"/notifications/{idNotification}/{field}\":\n    get:\n      operationId: getNotificationsByIdNotificationByField\n      parameters:\n        - description: idNotification\n          in: path\n          name: idNotification\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getNotificationsByIdNotificationByField()\n      tags:\n        - notification\n  /organizations:\n    post:\n      operationId: addOrganizations\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations\"\n        description: Attributes of \"Organizations\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addOrganizations()\n      tags:\n        - organization\n  \"/organizations/{idOrg}\":\n    delete:\n      operationId: deleteOrganizationsByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteOrganizationsByIdOrg()\n      tags:\n        - organization\n    get:\n      operationId: getOrganizationsByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_display\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: active, admin, deactivated, me or\n            normal\"\n          in: query\n          name: memberships\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: memberships_member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberships_member_fields\n          required: false\n          schema:\n            type: string\n            default: fullName and username\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials, username and confirmed\n        - description: true or false ; works for premium organizations only.\n          in: query\n          name: member_activity\n          required: false\n          schema:\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: membersInvited\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: membersInvited_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, initials, fullName and username\n        - description: \"all or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: boards\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: board_actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: board_actions_entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: board_actions_display\n          required: false\n          schema:\n            type: string\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: board_actions_format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: board_actions_since\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: board_actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: board_action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: board_lists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: paid_account\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: name, displayName, desc, descData, url, website, logoHash,\n              products and powerUps\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsByIdOrg()\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations\"\n        description: Attributes of \"Organizations\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/actions\":\n    get:\n      operationId: getOrganizationsActionsByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: entities\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: display\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 0 to 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: A date, or null\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Page * limit must be less than 1000\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n        - description: Only return actions related to these model ids\n          in: query\n          name: idModels\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: memberCreator\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: memberCreator_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsActionsByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/boards\":\n    get:\n      operationId: getOrganizationsBoardsByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, members, open,\n            organization, pinned, public, starred or unpinned\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: actions_entities\n          required: false\n          schema:\n            type: string\n        - description: a number from 0 to 1000\n          in: query\n          name: actions_limit\n          required: false\n          schema:\n            type: string\n            default: \"50\"\n        - description: \"One of: count, list or minimal\"\n          in: query\n          name: actions_format\n          required: false\n          schema:\n            type: string\n            default: list\n        - description: A date, null or lastView\n          in: query\n          name: actions_since\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: data, date, idMemberCreator or\n            type\"\n          in: query\n          name: action_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: active, admin, deactivated, me or\n            normal\"\n          in: query\n          name: memberships\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: organization\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            type: string\n            default: name and displayName\n        - description: \"One of: all, closed, none or open\"\n          in: query\n          name: lists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsBoardsByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/boards/{filter}\":\n    get:\n      operationId: getOrganizationsBoardsByIdOrgByFilter\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getOrganizationsBoardsByIdOrgByFilter()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/deltas\":\n    get:\n      operationId: getOrganizationsDeltasByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: A valid tag for subscribing\n          in: query\n          name: tags\n          required: true\n          schema:\n            type: string\n        - description: a number from -1 to Infinity\n          in: query\n          name: ixLastUpdate\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsDeltasByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/desc\":\n    put:\n      operationId: updateOrganizationsDescByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_desc\"\n        description: Attributes of \"Organizations Desc\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsDescByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/displayName\":\n    put:\n      operationId: updateOrganizationsDisplayNameByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_displayName\"\n        description: Attributes of \"Organizations Display Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsDisplayNameByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/logo\":\n    delete:\n      operationId: deleteOrganizationsLogoByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteOrganizationsLogoByIdOrg()\n      tags:\n        - organization\n    post:\n      operationId: addOrganizationsLogoByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_logo\"\n        description: Attributes of \"Organizations Logo\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addOrganizationsLogoByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members\":\n    get:\n      operationId: getOrganizationsMembersByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"One of: admins, all, none, normal or owners\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: fullName and username\n        - description: true or false ; works for premium organizations only.\n          in: query\n          name: activity\n          required: false\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsMembersByIdOrg()\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsMembersByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/organizations_members\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsMembersByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{filter}\":\n    get:\n      operationId: getOrganizationsMembersByIdOrgByFilter\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: filter\n          in: path\n          name: filter\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getOrganizationsMembersByIdOrgByFilter()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{idMember}\":\n    delete:\n      operationId: deleteOrganizationsMembersByIdOrgByIdMember\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteOrganizationsMembersByIdOrgByIdMember()\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsMembersByIdOrgByIdMember\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/organizations_members\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsMembersByIdOrgByIdMember()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{idMember}/all\":\n    delete:\n      operationId: deleteOrganizationsMembersAllByIdOrgByIdMember\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteOrganizationsMembersAllByIdOrgByIdMember()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{idMember}/cards\":\n    get:\n      operationId: getOrganizationsMembersCardsByIdOrgByIdMember\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: addAttachmentToCard,\n            addChecklistToCard, addMemberToBoard, addMemberToCard,\n            addMemberToOrganization, addToOrganizationBoard, commentCard,\n            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\n            createBoard, createCard, createList, createOrganization,\n            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,\n            deleteOrganizationInvitation, disablePowerUp, emailCard,\n            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,\n            makeNormalMemberOfOrganization, makeObserverOfBoard,\n            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\n            moveListFromBoard, moveListToBoard, removeChecklistFromCard,\n            removeFromOrganizationBoard, removeMemberFromCard,\n            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\n            updateBoard, updateCard, updateCard:closed, updateCard:desc,\n            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,\n            updateChecklist, updateList, updateList:closed, updateList:name,\n            updateMember or updateOrganization\"\n          in: query\n          name: actions\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: bytes, date, edgeColor, idMember,\n            isUpload, mimeType, name, previews or url\"\n          in: query\n          name: attachment_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: members\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials and username\n        - description: \" true or false\"\n          in: query\n          name: checkItemStates\n          required: false\n          schema:\n            type: string\n        - description: \"One of: all or none\"\n          in: query\n          name: checklists\n          required: false\n          schema:\n            type: string\n            default: none\n        - description: \" true or false\"\n          in: query\n          name: board\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            type: string\n            default: name, desc, closed, idOrganization, pinned, url and prefs\n        - description: \" true or false\"\n          in: query\n          name: list\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: closed, idBoard, name, pos or\n            subscribed\"\n          in: query\n          name: list_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"One of: all, closed, none, open or visible\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: visible\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsMembersCardsByIdOrgByIdMember()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/members/{idMember}/deactivated\":\n    put:\n      operationId: updateOrganizationsMembersDeactivatedByIdOrgByIdMember\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: idMember\n          in: path\n          name: idMember\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_members_deactivated\"\n        description: Attributes of \"Organizations Members Deactivated\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsMembersDeactivatedByIdOrgByIdMember()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/membersInvited\":\n    get:\n      operationId: getOrganizationsMembersInvitedByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsMembersInvitedByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/membersInvited/{field}\":\n    get:\n      operationId: getOrganizationsMembersInvitedByIdOrgByField\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsMembersInvitedByIdOrgByField()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/memberships\":\n    get:\n      operationId: getOrganizationsMembershipsByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: active, admin, deactivated, me or\n            normal\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: fullName and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsMembershipsByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/memberships/{idMembership}\":\n    get:\n      operationId: getOrganizationsMembershipsByIdOrgByIdMembership\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: idMembership\n          in: path\n          name: idMembership\n          required: true\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: member\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: fullName and username\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getOrganizationsMembershipsByIdOrgByIdMembership()\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsMembershipsByIdOrgByIdMembership\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: idMembership\n          in: path\n          name: idMembership\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_memberships\"\n        description: Attributes of \"Organizations Memberships\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsMembershipsByIdOrgByIdMembership()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/name\":\n    put:\n      operationId: updateOrganizationsNameByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_name\"\n        description: Attributes of \"Organizations Name\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsNameByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/associatedDomain\":\n    delete:\n      operationId: deleteOrganizationsPrefsAssociatedDomainByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteOrganizationsPrefsAssociatedDomainByIdOrg()\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsPrefsAssociatedDomainByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_associatedDomain\"\n        description: Attributes of \"Prefs Associated Domain\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsPrefsAssociatedDomainByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/boardVisibilityRestrict/org\":\n    put:\n      operationId: updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_boardVisibilityRestrict\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/boardVisibilityRestrict/private\":\n    put:\n      operationId: updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_boardVisibilityRestrict\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/boardVisibilityRestrict/public\":\n    put:\n      operationId: updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_boardVisibilityRestrict\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/externalMembersDisabled\":\n    put:\n      operationId: updateOrganizationsPrefsExternalMembersDisabledByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_externalMembersDisabled\"\n        description: Attributes of \"Prefs External Members Disabled\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsPrefsExternalMembersDisabledByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/googleAppsVersion\":\n    put:\n      operationId: updateOrganizationsPrefsGoogleAppsVersionByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_googleAppsVersion\"\n        description: Attributes of \"Prefs Google Apps Version\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsPrefsGoogleAppsVersionByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/orgInviteRestrict\":\n    delete:\n      operationId: deleteOrganizationsPrefsOrgInviteRestrictByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: An email address with optional expansion tokens\n          in: query\n          name: value\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteOrganizationsPrefsOrgInviteRestrictByIdOrg()\n      tags:\n        - organization\n    put:\n      operationId: updateOrganizationsPrefsOrgInviteRestrictByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/prefs_orgInviteRestrict\"\n        description: Attributes of \"Prefs Org Invite Restrict\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsPrefsOrgInviteRestrictByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/prefs/permissionLevel\":\n    put:\n      operationId: updateOrganizationsPrefsPermissionLevelByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/prefs_permissionLevel\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsPrefsPermissionLevelByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/website\":\n    put:\n      operationId: updateOrganizationsWebsiteByIdOrg\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/organizations_website\"\n        description: Attributes of \"Organizations Website\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateOrganizationsWebsiteByIdOrg()\n      tags:\n        - organization\n  \"/organizations/{idOrg}/{field}\":\n    get:\n      operationId: getOrganizationsByIdOrgByField\n      parameters:\n        - description: idOrg or name\n          in: path\n          name: idOrg\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getOrganizationsByIdOrgByField()\n      tags:\n        - organization\n  /search:\n    get:\n      operationId: getSearch\n      parameters:\n        - description: a string with a length from 1 to 16384\n          in: query\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of objectIds, 24-character hex strings\n          in: query\n          name: idBoards\n          required: false\n          schema:\n            type: string\n            default: mine\n        - description: A comma-separated list of objectIds, 24-character hex strings\n          in: query\n          name: idOrganizations\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of objectIds, 24-character hex strings\n          in: query\n          name: idCards\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: actions, boards, cards, members\n            or organizations\"\n          in: query\n          name: modelTypes\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \"all or a comma-separated list of: closed, dateLastActivity,\n            dateLastView, desc, descData, idOrganization, invitations, invited,\n            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,\n            shortUrl, starred, subscribed or url\"\n          in: query\n          name: board_fields\n          required: false\n          schema:\n            type: string\n            default: name and idOrganization\n        - description: a number from 1 to 1000\n          in: query\n          name: boards_limit\n          required: false\n          schema:\n            type: string\n            default: \"10\"\n        - description: \"all or a comma-separated list of: badges, checkItemStates, closed,\n            dateLastActivity, desc, descData, due, email, idAttachmentCover,\n            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,\n            idShort, labels, manualCoverAttachment, name, pos, shortLink,\n            shortUrl, subscribed or url\"\n          in: query\n          name: card_fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: a number from 1 to 1000\n          in: query\n          name: cards_limit\n          required: false\n          schema:\n            type: string\n            default: \"10\"\n        - description: a number from 0 to 100\n          in: query\n          name: cards_page\n          required: false\n          schema:\n            type: string\n            default: \"0\"\n        - description: \" true or false\"\n          in: query\n          name: card_board\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: card_list\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: card_members\n          required: false\n          schema:\n            type: string\n        - description: \" true or false\"\n          in: query\n          name: card_stickers\n          required: false\n          schema:\n            type: string\n        - description: A boolean value or \u0026quot;cover\u0026quot; for only card cover attachments\n          in: query\n          name: card_attachments\n          required: false\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: billableMemberCount, desc,\n            descData, displayName, idBoards, invitations, invited, logoHash,\n            memberships, name, powerUps, prefs, premiumFeatures, products, url\n            or website\"\n          in: query\n          name: organization_fields\n          required: false\n          schema:\n            type: string\n            default: name and displayName\n        - description: a number from 1 to 1000\n          in: query\n          name: organizations_limit\n          required: false\n          schema:\n            type: string\n            default: \"10\"\n        - description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          in: query\n          name: member_fields\n          required: false\n          schema:\n            type: string\n            default: avatarHash, fullName, initials, username and confirmed\n        - description: a number from 1 to 1000\n          in: query\n          name: members_limit\n          required: false\n          schema:\n            type: string\n            default: \"10\"\n        - description: \" true or false\"\n          in: query\n          name: partial\n          required: false\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getSearch()\n      tags:\n        - search\n  /search/members:\n    get:\n      operationId: getSearchMembers\n      parameters:\n        - description: a string with a length from 1 to 16384\n          in: query\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: a number from 1 to 20\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"8\"\n        - description: An id, or null\n          in: query\n          name: idBoard\n          required: false\n          schema:\n            type: string\n        - description: An id, or null\n          in: query\n          name: idOrganization\n          required: false\n          schema:\n            type: string\n        - description: A boolean\n          in: query\n          name: onlyOrgMembers\n          required: false\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getSearchMembers()\n      tags:\n        - search\n  /sessions:\n    post:\n      operationId: addSessions\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/sessions\"\n        description: Attributes of \"Sessions\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addSessions()\n      tags:\n        - session\n  /sessions/socket:\n    get:\n      description: This is the route for WebSocket requests.  See the socket API reference\n        for a description of WebSocket usage.\n      operationId: getSessionsSocket\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getSessionsSocket()\n      tags:\n        - session\n  \"/sessions/{idSession}\":\n    put:\n      operationId: updateSessionsByIdSession\n      parameters:\n        - description: idSession\n          in: path\n          name: idSession\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/sessions\"\n        description: Attributes of \"Sessions\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateSessionsByIdSession()\n      tags:\n        - session\n  \"/sessions/{idSession}/status\":\n    put:\n      operationId: updateSessionsStatusByIdSession\n      parameters:\n        - description: idSession\n          in: path\n          name: idSession\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/sessions_status\"\n        description: Attributes of \"Sessions Status\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateSessionsStatusByIdSession()\n      tags:\n        - session\n  \"/tokens/{token}\":\n    delete:\n      operationId: deleteTokensByToken\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteTokensByToken()\n      tags:\n        - token\n    get:\n      operationId: getTokensByToken\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: dateCreated, dateExpires,\n            idMember, identifier or permissions\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \" true or false\"\n          in: query\n          name: webhooks\n          required: false\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getTokensByToken()\n      tags:\n        - token\n  \"/tokens/{token}/member\":\n    get:\n      operationId: getTokensMemberByToken\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: \"all or a comma-separated list of: avatarHash, avatarSource, bio,\n            bioData, confirmed, email, fullName, gravatarHash, idBoards,\n            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,\n            loginTypes, memberType, oneTimeMessagesDismissed, prefs,\n            premiumFeatures, products, status, status, trophies,\n            uploadedAvatarHash, url or username\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n            default: all\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getTokensMemberByToken()\n      tags:\n        - token\n  \"/tokens/{token}/member/{field}\":\n    get:\n      operationId: getTokensMemberByTokenByField\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getTokensMemberByTokenByField()\n      tags:\n        - token\n  \"/tokens/{token}/webhooks\":\n    get:\n      operationId: getTokensWebhooksByToken\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getTokensWebhooksByToken()\n      tags:\n        - token\n    post:\n      operationId: addTokensWebhooksByToken\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/tokens_webhooks\"\n        description: Attributes of \"Tokens Webhooks\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addTokensWebhooksByToken()\n      tags:\n        - token\n    put:\n      operationId: updateTokensWebhooksByToken\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/tokens_webhooks\"\n        description: Attributes of \"Tokens Webhooks\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateTokensWebhooksByToken()\n      tags:\n        - token\n  \"/tokens/{token}/webhooks/{idWebhook}\":\n    delete:\n      operationId: deleteTokensWebhooksByTokenByIdWebhook\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteTokensWebhooksByTokenByIdWebhook()\n      tags:\n        - token\n    get:\n      operationId: getTokensWebhooksByTokenByIdWebhook\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getTokensWebhooksByTokenByIdWebhook()\n      tags:\n        - token\n  \"/tokens/{token}/{field}\":\n    get:\n      operationId: getTokensByTokenByField\n      parameters:\n        - description: token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getTokensByTokenByField()\n      tags:\n        - token\n  \"/types/{id}\":\n    get:\n      operationId: getTypesById\n      parameters:\n        - description: id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getTypesById()\n      tags:\n        - type\n  /webhooks:\n    post:\n      operationId: addWebhooks\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/webhooks\"\n        description: Attributes of \"Webhooks\" to be added.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: addWebhooks()\n      tags:\n        - webhook\n  /webhooks/:\n    put:\n      operationId: updateWebhooks\n      parameters:\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/webhooks\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateWebhooks()\n      tags:\n        - webhook\n  \"/webhooks/{idWebhook}\":\n    delete:\n      operationId: deleteWebhooksByIdWebhook\n      parameters:\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: deleteWebhooksByIdWebhook()\n      tags:\n        - webhook\n    get:\n      operationId: getWebhooksByIdWebhook\n      parameters:\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: getWebhooksByIdWebhook()\n      tags:\n        - webhook\n    put:\n      operationId: updateWebhooksByIdWebhook\n      parameters:\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/webhooks\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateWebhooksByIdWebhook()\n      tags:\n        - webhook\n  \"/webhooks/{idWebhook}/active\":\n    put:\n      operationId: updateWebhooksActiveByIdWebhook\n      parameters:\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/webhooks_active\"\n        description: Attributes of \"Webhooks Active\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateWebhooksActiveByIdWebhook()\n      tags:\n        - webhook\n  \"/webhooks/{idWebhook}/callbackURL\":\n    put:\n      operationId: updateWebhooksCallbackURLByIdWebhook\n      parameters:\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/webhooks_callbackURL\"\n        description: Attributes of \"Webhooks Callback Url\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateWebhooksCallbackURLByIdWebhook()\n      tags:\n        - webhook\n  \"/webhooks/{idWebhook}/description\":\n    put:\n      operationId: updateWebhooksDescriptionByIdWebhook\n      parameters:\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/webhooks_description\"\n        description: Attributes of \"Webhooks Description\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateWebhooksDescriptionByIdWebhook()\n      tags:\n        - webhook\n  \"/webhooks/{idWebhook}/idModel\":\n    put:\n      operationId: updateWebhooksIdModelByIdWebhook\n      parameters:\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/webhooks_idModel\"\n        description: Attributes of \"Webhooks Id Model\" to be updated.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      security:\n        - api_key: []\n        - api_token: []\n      summary: updateWebhooksIdModelByIdWebhook()\n      tags:\n        - webhook\n  \"/webhooks/{idWebhook}/{field}\":\n    get:\n      operationId: getWebhooksByIdWebhookByField\n      parameters:\n        - description: idWebhook\n          in: path\n          name: idWebhook\n          required: true\n          schema:\n            type: string\n        - description: field\n          in: path\n          name: field\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\"\u003eGenerate\n            your application key\u003c/a\u003e\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: \u003ca\n            href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\"\u003eGetting\n            a token from a user\u003c/a\u003e\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Server rejection\n      summary: getWebhooksByIdWebhookByField()\n      tags:\n        - webhook\nservers:\n  - url: https://trello.com/1\ncomponents:\n  requestBodies:\n    organizations_members:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/organizations_members\"\n      description: Attributes of \"Organizations Members\" to be updated.\n      required: true\n    boards_members:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/boards_members\"\n      description: Attributes of \"Boards Members\" to be updated.\n      required: true\n    webhooks:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/webhooks\"\n      description: Attributes of \"Webhooks\" to be updated.\n      required: true\n    prefs_permissionLevel:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/prefs_permissionLevel\"\n      description: Attributes of \"Prefs Permission Level\" to be updated.\n      required: true\n    prefs_boardVisibilityRestrict:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/prefs_boardVisibilityRestrict\"\n      description: Attributes of \"Prefs Board Visibility Restrict\" to be updated.\n      required: true\n  securitySchemes:\n    api_key:\n      in: query\n      name: key\n      type: apiKey\n    api_token:\n      in: query\n      name: token\n      type: apiKey\n  schemas:\n    actions:\n      properties:\n        text:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: action\n    actions_comments:\n      properties:\n        text:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    actions_text:\n      properties:\n        value:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: action\n    boards:\n      properties:\n        closed:\n          description: \" true or false\"\n          type: string\n        desc:\n          description: a string with a length from 0 to 16384\n          type: string\n        idBoardSource:\n          description: The id of the board to copy into the new board\n          type: string\n        idOrganization:\n          description: The id or name of the organization to add the board to.\n          type: string\n        keepFromSource:\n          description: Components of the source board to copy.\n          type: string\n        labelNames/blue:\n          description: a string with a length from 0 to 16384\n          type: string\n        labelNames/green:\n          description: a string with a length from 0 to 16384\n          type: string\n        labelNames/orange:\n          description: a string with a length from 0 to 16384\n          type: string\n        labelNames/purple:\n          description: a string with a length from 0 to 16384\n          type: string\n        labelNames/red:\n          description: a string with a length from 0 to 16384\n          type: string\n        labelNames/yellow:\n          description: a string with a length from 0 to 16384\n          type: string\n        name:\n          description: a string with a length from 1 to 16384\n          type: string\n        powerUps:\n          description: \"all or a comma-separated list of: calendar, cardAging, recap or\n            voting\"\n          type: string\n        prefs/background:\n          description: A standard background name, or the id of a custom background\n          type: string\n        prefs/calendarFeedEnabled:\n          description: \" true or false\"\n          type: string\n        prefs/cardAging:\n          description: \"One of: pirate or regular\"\n          type: string\n        prefs/cardCovers:\n          description: \" true or false\"\n          type: string\n        prefs/comments:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n        prefs/invitations:\n          description: \"One of: admins or members\"\n          type: string\n        prefs/permissionLevel:\n          description: \"One of: org, private or public\"\n          type: string\n        prefs/selfJoin:\n          description: \" true or false\"\n          type: string\n        prefs/voting:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n        prefs_background:\n          description: a string with a length from 0 to 16384\n          type: string\n        prefs_cardAging:\n          description: \"One of: pirate or regular\"\n          type: string\n        prefs_cardCovers:\n          description: \" true or false\"\n          type: string\n        prefs_comments:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n        prefs_invitations:\n          description: \"One of: admins or members\"\n          type: string\n        prefs_permissionLevel:\n          description: \"One of: org, private or public\"\n          type: string\n        prefs_selfJoin:\n          description: \" true or false\"\n          type: string\n        prefs_voting:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n        subscribed:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_checklists:\n      properties:\n        name:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_closed:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_desc:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_idOrganization:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_labels:\n      properties:\n        color:\n          description: A valid label color or null\n          type: string\n        name:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_lists:\n      properties:\n        name:\n          description: a string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_members:\n      properties:\n        email:\n          description: An email address\n          type: string\n        fullName:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n        type:\n          description: \"One of: admin, normal or observer\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_memberships:\n      properties:\n        member_fields:\n          description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          type: string\n        type:\n          description: \"One of: admin, normal or observer\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_name:\n      properties:\n        value:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_powerUps:\n      properties:\n        value:\n          description: \"One of: calendar, cardAging, recap or voting\"\n          type: string\n      type: object\n      xml:\n        name: board\n    boards_subscribed:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    cards:\n      properties:\n        closed:\n          description: \" true or false\"\n          type: string\n        desc:\n          description: a string with a length from 0 to 16384\n          type: string\n        due:\n          description: A date, or null\n          type: string\n        fileSource:\n          description: A file\n          type: string\n        idAttachmentCover:\n          description: Id of the image attachment of this card to use as its cover, or null\n            for no cover\n          type: string\n        idBoard:\n          description: id of the board the card should be moved to\n          type: string\n        idCardSource:\n          description: The id of the card to copy into a new card.\n          type: string\n        idLabels:\n          description: A comma-separated list of objectIds, 24-character hex strings\n          type: string\n        idList:\n          description: id of the list that the card should be added to\n          type: string\n        idMembers:\n          description: A comma-separated list of objectIds, 24-character hex strings\n          type: string\n        keepFromSource:\n          description: Properties of the card to copy over from the source.\n          type: string\n        labels:\n          description: \"all or a comma-separated list of: blue, green, orange, purple, red\n            or yellow\"\n          type: string\n        name:\n          description: The name of the new card.  It isn\u0026#39;t required if the name is\n            being copied from provided by a URL, file or card that is being\n            copied.\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n        subscribed:\n          description: \" true or false\"\n          type: string\n        urlSource:\n          description: A URL starting with http:// or https:// or null\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_actions_comments:\n      properties:\n        text:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_attachments:\n      properties:\n        file:\n          description: A file\n          type: string\n        mimeType:\n          description: a string with a length from 0 to 256\n          type: string\n        name:\n          description: a string with a length from 0 to 256\n          type: string\n        url:\n          description: A URL starting with http:// or https:// or null\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_checkItem:\n      properties:\n        name:\n          description: a string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_checkItem_name:\n      properties:\n        value:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_checkItem_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_checkItem_state:\n      properties:\n        value:\n          description: \"One of: complete, false, incomplete or true\"\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklist_idChecklistCurrent_checkItem:\n      properties:\n        idChecklist:\n          description: An id, or null\n          type: string\n        name:\n          description: a string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n        state:\n          description: \"One of: complete, false, incomplete or true\"\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_checklists:\n      properties:\n        idChecklistSource:\n          description: The id of the source checklist to copy into a new checklist.\n          type: string\n        name:\n          description: a string with a length from 0 to 16384\n          type: string\n        value:\n          description: The id of the checklist to add to the card, or null to create a new\n            one.\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_closed:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_desc:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_due:\n      properties:\n        value:\n          description: A date, or null\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idAttachmentCover:\n      properties:\n        value:\n          description: Id of the image attachment of this card to use as its cover, or null\n            for no cover\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idBoard:\n      properties:\n        idList:\n          description: id of the list that the card should be moved to on the new board\n          type: string\n        value:\n          description: id of the board the card should be moved to\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idLabels:\n      properties:\n        value:\n          description: The id of the label to add\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idList:\n      properties:\n        value:\n          description: id of the list the card should be moved to\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_idMembers:\n      properties:\n        value:\n          description: The id of the member to add to the card\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_labels:\n      properties:\n        color:\n          description: A valid label color or null\n          type: string\n        name:\n          description: a string with a length from 0 to 16384\n          type: string\n        value:\n          description: \"all or a comma-separated list of: blue, green, orange, purple, red\n            or yellow\"\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_membersVoted:\n      properties:\n        value:\n          description: The id of the member to vote \u0026#39;yes\u0026#39; on the card\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_name:\n      properties:\n        value:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_stickers:\n      properties:\n        image:\n          description: a string with a length from 0 to 16384\n          type: string\n        left:\n          description: undefined\n          type: string\n        rotate:\n          description: undefined\n          type: string\n        top:\n          description: undefined\n          type: string\n        zIndex:\n          description: Valid Z values for stickers, must be an integer\n          type: string\n      type: object\n      xml:\n        name: card\n    cards_subscribed:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: card\n    checklists:\n      properties:\n        idBoard:\n          description: id of the board that the checklist should be added to\n          type: string\n        idCard:\n          description: id of the card that the checklist should be added to\n          type: string\n        idChecklistSource:\n          description: The id of the source checklist to copy into a new checklist.\n          type: string\n        name:\n          description: a string with a length from 0 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: checklist\n    checklists_checkItems:\n      properties:\n        checked:\n          description: \" true or false\"\n          type: string\n        name:\n          description: a string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: checklist\n    checklists_idCard:\n      properties:\n        value:\n          description: The id of the card that the checklist is on\n          type: string\n      type: object\n      xml:\n        name: checklist\n    checklists_name:\n      properties:\n        value:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: checklist\n    checklists_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: checklist\n    labelNames_blue:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_green:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_orange:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_purple:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_red:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labelNames_yellow:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: board\n    labels:\n      properties:\n        color:\n          description: A valid label color or null\n          type: string\n        idBoard:\n          description: An id\n          type: string\n        name:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: label\n    labels_color:\n      properties:\n        value:\n          description: A valid label color or null\n          type: string\n      type: object\n      xml:\n        name: label\n    labels_name:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: label\n    lists:\n      properties:\n        closed:\n          description: \" true or false\"\n          type: string\n        idBoard:\n          description: id of the board that the list should be added to\n          type: string\n        idListSource:\n          description: The id of the list to copy into a new list.\n          type: string\n        name:\n          description: a string with a length from 1 to 16384\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n        subscribed:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_cards:\n      properties:\n        desc:\n          description: a string with a length from 0 to 16384\n          type: string\n        due:\n          description: A date, or null\n          type: string\n        idMembers:\n          description: A comma-separated list of objectIds, 24-character hex strings\n          type: string\n        labels:\n          description: \"all or a comma-separated list of: blue, green, orange, purple, red\n            or yellow\"\n          type: string\n        name:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_closed:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_idBoard:\n      properties:\n        pos:\n          description: position of the list on the new board\n          type: string\n        value:\n          description: id of the board the list should be moved to\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_moveAllCards:\n      properties:\n        idBoard:\n          description: id of the board that the cards should be moved to\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_name:\n      properties:\n        value:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: list\n    lists_subscribed:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: list\n    members:\n      properties:\n        avatarSource:\n          description: \"One of: gravatar, none or upload\"\n          type: string\n        bio:\n          description: a string with a length from 0 to 16384\n          type: string\n        fullName:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n        initials:\n          description: A string with a length from 1 to 4.  Cannot begin or end with a space\n          type: string\n        prefs/colorBlind:\n          description: \" true or false\"\n          type: string\n        prefs/locale:\n          description: a string with a length from 0 to 255\n          type: string\n        prefs/minutesBetweenSummaries:\n          description: -1 (disabled), 1 or 60\n          type: string\n        username:\n          description: A string with a length of at least 3.  Only lowercase letters,\n            underscores, and numbers are allowed.  Must be unique.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_avatar:\n      properties:\n        file:\n          description: A file\n          type: string\n      type: object\n      xml:\n        name: member\n    members_avatarSource:\n      properties:\n        value:\n          description: \"One of: gravatar, none or upload\"\n          type: string\n      type: object\n      xml:\n        name: member\n    members_bio:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: member\n    members_boardBackgrounds:\n      properties:\n        brightness:\n          description: \"One of: dark, light or unknown\"\n          type: string\n        file:\n          description: A file\n          type: string\n        tile:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: member\n    members_boardStars:\n      properties:\n        idBoard:\n          description: The id of the board to star\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_boardStars_idBoard:\n      properties:\n        value:\n          description: An id\n          type: string\n      type: object\n      xml:\n        name: member\n    members_boardStars_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_customBoardBackgrounds:\n      properties:\n        brightness:\n          description: \"One of: dark, light or unknown\"\n          type: string\n        file:\n          description: A file\n          type: string\n        tile:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: member\n    members_customEmoji:\n      properties:\n        file:\n          description: A file\n          type: string\n        name:\n          description: a string with a length from 2 to 64\n          type: string\n      type: object\n      xml:\n        name: member\n    members_customStickers:\n      properties:\n        file:\n          description: A file\n          type: string\n      type: object\n      xml:\n        name: member\n    members_fullName:\n      properties:\n        value:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_initials:\n      properties:\n        value:\n          description: A string with a length from 1 to 4.  Cannot begin or end with a space\n          type: string\n      type: object\n      xml:\n        name: member\n    members_oneTimeMessagesDismissed:\n      properties:\n        value:\n          description: Type of message dismissed\n          type: string\n      type: object\n      xml:\n        name: member\n    members_savedSearches:\n      properties:\n        name:\n          description: A non-empty string with at least one non-space character\n          type: string\n        pos:\n          description: A position. top , bottom , or a positive number.\n          type: string\n        query:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: member\n    members_savedSearches_name:\n      properties:\n        value:\n          description: A non-empty string with at least one non-space character\n          type: string\n      type: object\n      xml:\n        name: member\n    members_savedSearches_pos:\n      properties:\n        value:\n          description: A position. top , bottom , or a positive number.\n          type: string\n      type: object\n      xml:\n        name: member\n    members_savedSearches_query:\n      properties:\n        value:\n          description: a string with a length from 1 to 16384\n          type: string\n      type: object\n      xml:\n        name: member\n    members_username:\n      properties:\n        value:\n          description: A string with a length of at least 3.  Only lowercase letters,\n            underscores, and numbers are allowed.  Must be unique.\n          type: string\n      type: object\n      xml:\n        name: member\n    myPrefs_emailPosition:\n      properties:\n        value:\n          description: \"One of: bottom or top\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_idEmailList:\n      properties:\n        value:\n          description: An id\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showListGuide:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showSidebar:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showSidebarActivity:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showSidebarBoardActions:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    myPrefs_showSidebarMembers:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    notifications:\n      properties:\n        unread:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: notification\n    notifications_unread:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: notification\n    organizations:\n      properties:\n        desc:\n          description: a string with a length from 0 to 16384\n          type: string\n        displayName:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n        name:\n          description: a string with a length from 0 to 16384\n          type: string\n        prefs/associatedDomain:\n          description: The google apps domain to link this org to.\n          type: string\n        prefs/boardVisibilityRestrict/org:\n          description: \"One of: admin, none or org\"\n          type: string\n        prefs/boardVisibilityRestrict/private:\n          description: \"One of: admin, none or org\"\n          type: string\n        prefs/boardVisibilityRestrict/public:\n          description: \"One of: admin, none or org\"\n          type: string\n        prefs/externalMembersDisabled:\n          description: \" true or false\"\n          type: string\n        prefs/googleAppsVersion:\n          description: a number from 1 to 2\n          type: string\n        prefs/orgInviteRestrict:\n          description: An email address with optional expansion tokens\n          type: string\n        prefs/permissionLevel:\n          description: \"One of: private or public\"\n          type: string\n        website:\n          description: A URL starting with http:// or https:// or null\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_desc:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_displayName:\n      properties:\n        value:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_logo:\n      properties:\n        file:\n          description: A file\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_members:\n      properties:\n        email:\n          description: An email address\n          type: string\n        fullName:\n          description: A string with a length of at least 1.  Cannot begin or end with a\n            space.\n          type: string\n        type:\n          description: \"One of: admin, normal or observer\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_members_deactivated:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_memberships:\n      properties:\n        member_fields:\n          description: \"all or a comma-separated list of: avatarHash, bio, bioData,\n            confirmed, fullName, idPremOrgsAdmin, initials, memberType,\n            products, status, url or username\"\n          type: string\n        type:\n          description: \"One of: admin, normal or observer\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_name:\n      properties:\n        value:\n          description: A string with a length of at least 3.  Only lowercase letters,\n            underscores, and numbers are allowed.  Must be unique.\n          type: string\n      type: object\n      xml:\n        name: organization\n    organizations_website:\n      properties:\n        value:\n          description: A URL starting with http:// or https:// or null\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_associatedDomain:\n      properties:\n        value:\n          description: The google apps domain to link this org to.\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_background:\n      properties:\n        value:\n          description: A standard background name, or the id of a custom background\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_boardVisibilityRestrict:\n      properties:\n        value:\n          description: \"One of: admin, none or org\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_calendarFeedEnabled:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_cardAging:\n      properties:\n        value:\n          description: \"One of: pirate or regular\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_cardCovers:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_colorBlind:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: member\n    prefs_comments:\n      properties:\n        value:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_externalMembersDisabled:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_googleAppsVersion:\n      properties:\n        value:\n          description: a number from 1 to 2\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_invitations:\n      properties:\n        value:\n          description: \"One of: admins or members\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_locale:\n      properties:\n        value:\n          description: a string with a length from 0 to 255\n          type: string\n      type: object\n      xml:\n        name: member\n    prefs_minutesBetweenSummaries:\n      properties:\n        value:\n          description: -1 (disabled), 1 or 60\n          type: string\n      type: object\n      xml:\n        name: member\n    prefs_orgInviteRestrict:\n      properties:\n        value:\n          description: An email address with optional expansion tokens\n          type: string\n      type: object\n      xml:\n        name: organization\n    prefs_permissionLevel:\n      properties:\n        value:\n          description: \"One of: private or public\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_selfJoin:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: board\n    prefs_voting:\n      properties:\n        value:\n          description: \"One of: disabled, members, observers, org or public\"\n          type: string\n      type: object\n      xml:\n        name: board\n    sessions:\n      properties:\n        idBoard:\n          description: The id of the board you\u0026#39;re viewing.  Boards with no viewers will\n            not get updates about members\u0026#39; statuses.\n          type: string\n        status:\n          description: \"One of: active, disconnected or idle\"\n          type: string\n      type: object\n      xml:\n        name: session\n    sessions_status:\n      properties:\n        value:\n          description: \"One of: active, disconnected or idle\"\n          type: string\n      type: object\n      xml:\n        name: session\n    tokens_webhooks:\n      properties:\n        callbackURL:\n          description: A valid URL that is reachable with a HEAD request\n          type: string\n        description:\n          description: a string with a length from 0 to 16384\n          type: string\n        idModel:\n          description: id of the model to be monitored\n          type: string\n      type: object\n      xml:\n        name: token\n    webhooks:\n      properties:\n        active:\n          description: \" true or false\"\n          type: string\n        callbackURL:\n          description: A valid URL that is reachable with a HEAD request\n          type: string\n        description:\n          description: a string with a length from 0 to 16384\n          type: string\n        idModel:\n          description: id of the model that should be hooked\n          type: string\n      type: object\n      xml:\n        name: webhook\n    webhooks_active:\n      properties:\n        value:\n          description: \" true or false\"\n          type: string\n      type: object\n      xml:\n        name: webhook\n    webhooks_callbackURL:\n      properties:\n        value:\n          description: A valid URL that is reachable with a HEAD request\n          type: string\n      type: object\n      xml:\n        name: webhook\n    webhooks_description:\n      properties:\n        value:\n          description: a string with a length from 0 to 16384\n          type: string\n      type: object\n      xml:\n        name: webhook\n    webhooks_idModel:\n      properties:\n        value:\n          description: id of the model to be monitored\n          type: string\n      type: object\n      xml:\n        name: webhook\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/trello.com-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/trello.com-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at benchmark-repository/openapi/trello.com-1.0-swagger.yaml:1783:3: duplicate path: \"/boards/{idBoard}/cards/{idCard}\""
}