{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/summerprogram2019/limber"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "backendjs/server/common/api.yml",
			"byteSize": 10054,
			"content": "openapi: 3.0.1\ninfo:\n  title: backendjs\n  description: Limber backend\n  version: 1.0.0\nservers:\n- url: /api/v1\ntags:\n- name: Examples\n  description: Simple example endpoints\n- name: Specification\n  description: The swagger API specification\npaths:\n  /auth:\n    get:\n      parameters:\n      - name: Authorization\n        in: header\n        description: auth0 Access Token\n        required: true\n        schema:\n          type: string\n      tags:\n        - Authentication\n      description: Test Authentication\n      responses:\n        200:\n          description: Authenticated\n          content: {}\n        401:\n          description: Unauthenticated\n          content: {}\n  /spec:\n    get:\n      tags:\n      - Specification\n      responses:\n        200:\n          description: Return the API specification\n          content: {}\n  /group/{id}:\n    get:\n      tags:\n      - Group\n      description: Get details of a group\n      parameters:\n      - name: id\n        in: path\n        description: The id of the group to query\n        required: true\n        schema:\n          type: integer\n      - name: Authorization\n        in: header\n        description: auth0 Access Token\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successfully queried the group\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n                  message:\n                    type: string\n                    example: \"Successful\"\n                  data:\n                    type: object\n                    properties:\n                      id:\n                        type: integer\n                        example: 1\n                      name:\n                        type: string\n                        example: \"Group Name\"\n                      description:\n                        type: string\n                        example: \"Group description\"\n                      tags:\n                        type: array\n                        example: [\"tag1\", \"tag2\"]\n                        items:\n                          type: string\n                      owner:\n                        type: string\n                        example: \"auth0|...\"\n        400:\n          description: \"Group does not exist\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: false\n                  message:\n                    type: string\n                    example: \"Group does not exist\"\n                  data:\n                    type: object\n                    example: {}\n\n        401:\n          description: Unauthenticated or invalid Access Token\n          content: {}\n        403:\n          description: Permission denied\n          content: {}\n  /group/invite/{id}:\n    post:\n      tags:\n        - Group\n        - Invite\n      description: Invite a user to a group\n      parameters:\n        - name: Authorization\n          in: header\n          description: auth0 Access Token\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: The group id to invite to\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GroupInviteRequest\"\n      responses:\n        200:\n          description: Successfully invited user\n          content: {}\n        401:\n          description: Unauthenticated or invalid Access Token\n          content: {}\n        403:\n          description: Permission denied\n          content: {}\n  /group/join/{id}:\n    post:\n      tags:\n        - Group\n        - Join\n      description: Request to join a group\n      parameters:\n        - name: Authorization\n          in: header\n          description: auth0 Access Token\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: The group id to join\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        required: true\n        content: {}\n      responses:\n        200:\n          description: Successfully requested to join group\n          content: {}\n        401:\n          description: Unauthenticated or invalid Access Token\n          content: {}\n        403:\n          description: Permission denied\n          content: {}\n  /group:\n    get:\n      tags:\n        - Group\n      description: Get a list of groups\n      security:\n        - BearerAuth: []\n      responses:\n        200:\n          description: Successfully retrieved groups\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n                  message:\n                    type: string\n                    example: Successfully Retrieved\n                  data:\n                    type: object\n                    properties:\n                      groups:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                              example: 1\n                            name:\n                              type: string\n                              example: Group Name\n        401:\n          description: Unauthenticated or invalid Access Token\n          content: {}\n    post:\n      tags:\n      - Group\n      description: Create a new group\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateGroup\"\n      security:\n        - BearerAuth: []\n      responses:\n        200:\n          description: Successfully made the group\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n                  message:\n                    type: string\n                    example: \"Successfully Created\"\n                  data:\n                    type: object\n                    example: {\n                      id: 1,\n                      name: \"New Group\",\n                      description: \"Description of the new group\",\n                      tags: [\"tag1\", \"tag2\"],\n                      owner: \"auth0|...\"\n                    }\n        401:\n          description: Unauthenticated or invalid Access Token\n          content: {}\n    put:\n      tags:\n      - Group\n      description: Update a group\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateGroup\"\n      parameters:\n      - name: Authorization\n        in: header\n        description: auth0 Access Token\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successfully queried the group\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n                  message:\n                    type: string\n                    example: \"Successful\"\n                  data:\n                    type: object\n                    properties:\n                      id:\n                        type: integer\n                        example: 1\n                      name:\n                        type: string\n                        example: Group Name\n                      description:\n                        type: string\n                        example: Group description\n                      tags:\n                        type: array\n                        items:\n                          type: string\n                          example: [\"tag1\", \"tag2\"]\n                      owner:\n                        type: string\n                        example: \"auth0|...\"\n        401:\n          description: Unauthenticated or invalid user token\n          content: {}\n        403:\n          description: Permission denied\n          content: {}\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    PermissionDenied:\n      title: User has insufficient permissions\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n        message:\n          type: string\n          example: \"Permission Denied\"\n        data:\n          type: object\n          example: null\n    CreateGroup:\n      title: Create a group\n      type: object\n      required:\n        - name\n        - description\n      properties:\n        name:\n          type: string\n          example: \"New Group\"\n        description:\n          type: string\n          example: \"Description of the new group\"\n        tags:\n          type: array\n          items:\n            type: string\n          example: [\"tag1\", \"tag2\"]\n    UpdateGroup:\n      title: Update a group\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"Updated Group\"\n        description:\n          type: string\n          example: \"Description of the updated group\"\n        tags:\n          type: array\n          items:\n            type: string\n          example: [\"tag1\", \"tag2\"]\n    GroupInviteRequest:\n      title: Group Invite Request\n      type: object\n      properties:\n        uid:\n          type: string\n          description: The id of the user to invite\n",
			"canonicalURL": "/github.com/summerprogram2019/limber@f02d9fd4fc42d02fe60ebf0eacc80cbfd5bc4883/-/blob/backendjs/server/common/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/summerprogram2019/limber/blob/f02d9fd4fc42d02fe60ebf0eacc80cbfd5bc4883/backendjs/server/common/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /group/join/{id}: post: requestBody: content must have at least one entry"
}