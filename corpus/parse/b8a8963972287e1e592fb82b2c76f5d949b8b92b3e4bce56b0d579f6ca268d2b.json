{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kinecosystem/agora-api"
		},
		"file": {
			"name": "webhooks.yaml",
			"size": 0,
			"path": "swagger/webhooks.yaml",
			"byteSize": 8727,
			"content": "openapi: 3.0.0\ninfo:\n  title: Agora Webhooks\n  description: |\n    Spec for webhooks called by the Agora services. The paths are examples only - each\n    app can configure their own.\n  version: 1.0.0\n\npaths:\n  /events:\n    post:\n      summary: |\n        A webhook for the Agora service to deliver blockchain events related to the app.\n      parameters:\n        - in: header\n          name: X-Agora-HMAC-SHA256\n          schema:\n            type: string\n            format: byte\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EventsRequestBody\"\n      responses:\n        '200':\n          description: Empty ok response.\n\n  /sign_transaction:\n    post:\n      summary: |\n        A webhook for the Agora service to submit transactions for signing. Each app is responsible for validating the\n        transaction contents prior to signing and returning the transaction. Developers should expect that any\n        transaction envelope payload returned in a 200 response will be submitted to Horizon.\n      parameters:\n        - in: header\n          name: X-Agora-HMAC-SHA256\n          schema:\n            type: string\n            format: byte\n        - in: header\n          name: X-App-User-ID\n          schema:\n            type: string\n        - in: header\n          name: X-App-User-Passkey\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SignTransactionRequestBody\"\n      responses:\n        '200':\n          description: \"Must contain the transaction payload, signed by the service.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SignTransactionSuccessResponse\"\n        '403':\n          description: \"Indicates that the service refused to sign the transaction.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SignTransactionForbiddenResponse\"\n  /create_account:\n    post:\n      summary: |\n        A webhook for the Agora service to call when an account creation is being requested. The endpoint may\n        wish to allow or deny the creation, and if applicable, co-sign the transaction for subsidization to\n        avoid rate limits.\n      parameters:\n        - in: header\n          name: X-Agora-HMAC-SHA256\n          schema:\n            type: string\n            format: byte\n        - in: header\n          name: X-App-User-ID\n          schema:\n            type: string\n        - in: header\n          name: X-App-User-Passkey\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateAccountRequestBody\"\n      responses:\n        '200':\n          description: \"Optionally contains the signature for the transaction if subsidizing\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateAccountSuccessResponse\"\n        '403':\n          description: \"Indicates the service rejects the account creation\"\n\ncomponents:\n  schemas:\n    # Shared schemas\n    KinVersion:\n      type: integer\n      format: integer\n    TransactionEnvelopeXDR:\n      description: \"A base64-encoded transaction envelope XDR.\"\n      type: string\n      format: byte\n    ResultXDR:\n      description: \"A base64-encoded transaction result XDR.\"\n      type: string\n      format: byte\n    SolanaTransaction:\n      description: \"A base64-encoded solana transaction payload\"\n      type: string\n      format: byte\n    InvoiceList:\n      description: |\n        A base64-encoded protobuf InvoiceList related to a transaction. Each invoice corresponds to an operation in the transaction.\n      type: string\n      format: byte\n\n    Event:\n      description: |\n        An event container for a specific type of event triggered by a blockchain operation.\n      type: object\n      properties:\n        transaction_event:\n          $ref: \"#/components/schemas/TransactionEvent\"\n\n    TransactionEvent:\n      description: |\n        An event indicating a transaction has completed (either succesfully or unsuccessfully).\n      type: object\n      required:\n        - kin_version\n      properties:\n        kin_version:\n          $ref: \"#/components/schemas/KinVersion\"\n        # Deprecated(use tx_id instead): contains stellar transaction hash\n        tx_hash:\n          description: \"[Deprecated] Stellar transaction hash\"\n          type: string\n          format: byte\n        tx_id:\n          description: \"The identifier for the transaction. Either a Stellar transaction hash or Solana signature\"\n          type: string\n          format: byte\n        invoice_list:\n          $ref: \"#/components/schemas/InvoiceList\"\n        stellar_event:\n          $ref: \"#/components/schemas/StellarEvent\"\n        solana_event:\n          $ref: \"#/components/schemas/SolanaEvent\"\n\n    StellarEvent:\n      description: \"Stellar-specific event data related to a transaction.\"\n      type: object\n      required:\n        - result_xdr\n        - transaction_xdr\n      properties:\n        result_xdr:\n          $ref: \"#/components/schemas/ResultXDR\"\n        envelope_xdr:\n          $ref: \"#/components/schemas/TransactionEnvelopeXDR\"\n\n    SolanaEvent:\n      description: \"Solana-specific event data related to a transaction.\"\n      type: object\n      required:\n        - transaction\n      properties:\n        transaction:\n          $ref: \"#/components/schemas/SolanaTransaction\"\n        transaction_error:\n          type: string\n          enum:\n            - none\n            - unknown\n            - unauthorized\n            - bad_nonce\n            - insufficient_funds\n            - invalid_account\n        transaction_error_raw:\n          type: string\n\n    EventsRequestBody:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Event\"\n\n    # Sign Transaction Webhook schemas\n    SignTransactionRequestBody:\n      description: |\n        The body of a a sign transaction request. Contains a transaction payload that should be verified prior to\n        signing. If an invoice list is present, it contains data regarding what the transaction is for.\n      type: object\n      required:\n        - kin_version\n      properties:\n        kin_version:\n          $ref: \"#/components/schemas/KinVersion\"\n        envelope_xdr:\n          $ref: \"#/components/schemas/TransactionEnvelopeXDR\"\n        solana_transaction:\n          $ref: \"#/components/schemas/SolanaTransaction\"\n        invoice_list:\n          $ref: \"#/components/schemas/InvoiceList\"\n\n    SignTransactionSuccessResponse:\n      description: |\n        The expected response for a successful sign transaction request. Contains an optional signature.\n      type: object\n      properties:\n        signature:\n          description: \"The signature of the transaction. Not required if the transaction is already signed\"\n          type: string\n          format: byte\n    SignTransactionForbiddenResponse:\n      type: object\n      properties:\n        invoice_errors:\n          type: array\n          items:\n            type: object\n            properties:\n              operation_index:\n                description: \"the index of the operation the error pertains to\"\n                type: integer\n              reason:\n                type: string\n                enum:\n                  - already_paid\n                  - wrong_destination\n                  - sku_not_found\n                description: |\n                  * `already_paid`: the user has already paid for the submitted invoice\n                  * `wrong_destination`: the destination account was incorrect\n                  * `sku_not_found`: one or more SKUs in the invoice was not found\n    CreateAcccountRequestBody:\n      description: |\n        The body of a create account request. Contains a create account transaction payload that should be\n        verified prior to signing / approving.\n      type: object\n      required:\n        - kin_version\n      properties:\n        kin_version:\n          $ref: \"#/components/schemas/KinVersion\"\n        solana_transaction:\n          $ref: \"#/components/schemas/SolanaTransaction\"\n    CreateAccountSuccessResponse:\n      description: |\n        The expected response for a successful create account request. Contains an optional signature.\n      type: object\n      properties:\n        signature:\n          description: \"The signature of the transaction. Not required if the transaction is already signed\"\n          type: string\n          format: byte\n"
		}
	},
	"Error": "parse: parse spec: paths: /create_account: post: operation \"\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/CreateAccountRequestBody\": find schema: resolve \"#/components/schemas/CreateAccountRequestBody\": can't find value for \"components/schemas/CreateAccountRequestBody\""
}