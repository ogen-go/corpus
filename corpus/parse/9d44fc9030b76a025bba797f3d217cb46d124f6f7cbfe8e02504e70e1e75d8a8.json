{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/airbyte.local/config/1.0.0/openapi.yaml",
			"byteSize": 84862,
			"content": "openapi: 3.0.0\nservers:\n  - url: http://airbyte.local\n  - url: http://localhost:8000/api\ninfo:\n  contact:\n    email: contact@airbyte.io\n  description: |\n    Airbyte Configuration API\n    [https://airbyte.io](https://airbyte.io).\n\n    This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.\n\n    Here are some conventions that this API follows:\n    * All endpoints are http POST methods.\n    * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params.\n    * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`.\n    * For all `update` methods, the whole object must be passed in, even the fields that did not change.\n\n    Change Management:\n    * The major version of the API endpoint can be determined / specified in the URL `localhost:8080/v1/connections/create`\n    * Minor version bumps will be invisible to the end user. The user cannot specify minor versions in requests.\n    * All backwards incompatible changes will happen in major version bumps. We will not make backwards incompatible changes in minor version bumps. Examples of non-breaking changes (includes but not limited to...):\n      * Adding fields to request or response bodies.\n      * Adding new HTTP endpoints.\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  title: Airbyte Configuration API\n  version: 1.0.0\n  x-apisguru-categories:\n    - developer_tools\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/airbytehq/airbyte/master/airbyte-api/src/main/openapi/config.yaml\n      version: \"3.0\"\n  x-providerName: airbyte.local\n  x-serviceName: config\nexternalDocs:\n  description: Find out more about Airbyte\n  url: https://airbyte.io\nsecurity:\n  - {}\ntags:\n  - description: Workspace related resources.\n    name: workspace\n  - description: SourceDefinition related resources.\n    name: source_definition\n  - description: SourceDefinition specification related resources.\n    name: source_definition_specification\n  - description: Source related resources.\n    name: source\n  - description: DestinationDefinition related resources.\n    name: destination_definition\n  - description: DestinationDefinitionSpecification related resources.\n    name: destination_definition_specification\n  - description: Destination  related resources.\n    name: destination\n  - description: Connection between sources and destinations.\n    name: connection\n  - description: Connection between sources and destinations.\n    name: web_backend\n  - description: Healthchecks\n    name: health\n  - description: Export/Import Airbyte Configuration and Database resources.\n    name: deployment\npaths:\n  /v1/connections/create:\n    post:\n      operationId: createConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionCreate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Create a connection between a source and a destination\n      tags:\n        - connection\n  /v1/connections/delete:\n    post:\n      operationId: deleteConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Delete a connection\n      tags:\n        - connection\n  /v1/connections/get:\n    post:\n      operationId: getConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get a connection\n      tags:\n        - connection\n  /v1/connections/list:\n    post:\n      description: List connections for workspace. Does not return deleted connections.\n      operationId: listConnectionsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionReadList\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Returns all connections for a workspace.\n      tags:\n        - connection\n  /v1/connections/reset:\n    post:\n      operationId: resetConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobInfoRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Reset the data for the connection. Deletes data generated by the connection in the destination. Resets any cursors back to initial state.\n      tags:\n        - connection\n  /v1/connections/sync:\n    post:\n      operationId: syncConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobInfoRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Trigger a manual sync of the connection\n      tags:\n        - connection\n  /v1/connections/update:\n    post:\n      operationId: updateConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Update a connection\n      tags:\n        - connection\n  /v1/deployment/export:\n    post:\n      operationId: exportArchive\n      responses:\n        \"200\":\n          content:\n            application/x-gzip:\n              schema:\n                $ref: \"#/components/schemas/AirbyteArchive\"\n          description: Successful operation\n      summary: Export Airbyte Configuration and Data Archive\n      tags:\n        - deployment\n  /v1/deployment/import:\n    post:\n      operationId: importArchive\n      requestBody:\n        content:\n          application/x-gzip:\n            schema:\n              $ref: \"#/components/schemas/AirbyteArchive\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImportRead\"\n          description: Successful operation\n      summary: Import Airbyte Configuration and Data Archive\n      tags:\n        - deployment\n  /v1/destination_definition_specifications/get:\n    post:\n      operationId: getDestinationDefinitionSpecification\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionSpecificationRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get specification for a destinationDefinition\n      tags:\n        - destination_definition_specification\n  /v1/destination_definitions/create:\n    post:\n      operationId: createDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionCreate\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Creates a destinationsDefinition\n      tags:\n        - destination_definition\n  /v1/destination_definitions/get:\n    post:\n      operationId: getDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get destinationDefinition\n      tags:\n        - destination_definition\n  /v1/destination_definitions/list:\n    post:\n      operationId: listDestinationDefinitions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionReadList\"\n          description: Successful operation\n      summary: List all the destinationDefinitions the current Airbyte deployment is configured to use\n      tags:\n        - destination_definition\n  /v1/destination_definitions/list_latest:\n    post:\n      description: Guaranteed to retrieve the latest information on supported destinations.\n      operationId: listLatestDestinationDefinitions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionReadList\"\n          description: Successful operation\n      summary: List the latest destinationDefinitions Airbyte supports\n      tags:\n        - destination_definition\n  /v1/destination_definitions/update:\n    post:\n      operationId: updateDestinationDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationDefinitionUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationDefinitionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Update destinationDefinition\n      tags:\n        - destination_definition\n  /v1/destinations/check_connection:\n    post:\n      operationId: checkConnectionToDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Check connection to the destination\n      tags:\n        - destination\n  /v1/destinations/check_connection_for_update:\n    post:\n      operationId: checkConnectionToDestinationForUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Check connection for a proposed update to a destination\n      tags:\n        - destination\n  /v1/destinations/create:\n    post:\n      operationId: createDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationCreate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Create a destination\n      tags:\n        - destination\n  /v1/destinations/delete:\n    post:\n      operationId: deleteDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Delete the destination\n      tags:\n        - destination\n  /v1/destinations/get:\n    post:\n      operationId: getDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get configured destination\n      tags:\n        - destination\n  /v1/destinations/list:\n    post:\n      operationId: listDestinationsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationReadList\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: List configured destinations for a workspace\n      tags:\n        - destination\n  /v1/destinations/update:\n    post:\n      operationId: updateDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Update a destination\n      tags:\n        - destination\n  /v1/health:\n    get:\n      operationId: getHealthCheck\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HealthCheckRead\"\n          description: Successful operation\n      summary: Health Check\n      tags:\n        - health\n  /v1/jobs/cancel:\n    post:\n      operationId: cancelJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JobIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobInfoRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Cancels a job\n      tags:\n        - jobs\n  /v1/jobs/get:\n    post:\n      operationId: getJobInfo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JobIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobInfoRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get information about a job\n      tags:\n        - jobs\n  /v1/jobs/list:\n    post:\n      operationId: listJobsFor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/JobListRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobReadList\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Returns recent jobs for a connection. Jobs are returned in descending order by createdAt.\n      tags:\n        - jobs\n  /v1/logs/get:\n    post:\n      operationId: getLogs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LogsRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                format: binary\n                type: string\n          description: Returns the log file\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get logs\n      tags:\n        - logs\n  /v1/notifications/try:\n    post:\n      operationId: tryNotificationConfig\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Notification\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Try sending a notifications\n      tags:\n        - notifications\n  /v1/openapi:\n    get:\n      operationId: getOpenApiSpec\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                format: binary\n                type: string\n          description: Returns the openapi specification file\n      summary: Returns the openapi specification\n      tags:\n        - openapi\n  /v1/operations/check:\n    post:\n      operationId: checkOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperatorConfiguration\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckOperationRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Check if an operation to be created is valid\n      tags:\n        - operation\n  /v1/operations/create:\n    post:\n      operationId: createOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationCreate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Create an operation to be applied as part of a connection pipeline\n      tags:\n        - operation\n  /v1/operations/delete:\n    post:\n      operationId: deleteOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Delete an operation\n      tags:\n        - operation\n  /v1/operations/get:\n    post:\n      operationId: getOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Returns an operation\n      tags:\n        - operation\n  /v1/operations/list:\n    post:\n      description: List operations for connection.\n      operationId: listOperationsForConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationReadList\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Returns all operations for a connection.\n      tags:\n        - operation\n  /v1/operations/update:\n    post:\n      operationId: updateOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OperationUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Update an operation\n      tags:\n        - operation\n  /v1/scheduler/destinations/check_connection:\n    post:\n      operationId: executeDestinationCheckConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationCoreConfig\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Run check connection for a given destination configuration\n      tags:\n        - scheduler\n  /v1/scheduler/sources/check_connection:\n    post:\n      operationId: executeSourceCheckConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceCoreConfig\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Run check connection for a given source configuration\n      tags:\n        - scheduler\n  /v1/scheduler/sources/discover_schema:\n    post:\n      operationId: executeSourceDiscoverSchema\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceCoreConfig\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDiscoverSchemaRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Run discover schema for a given source a source configuration\n      tags:\n        - scheduler\n  /v1/source_definition_specifications/get:\n    post:\n      operationId: getSourceDefinitionSpecification\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionSpecificationRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get specification for a SourceDefinition.\n      tags:\n        - source_definition_specification\n  /v1/source_definitions/create:\n    post:\n      operationId: createSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionCreate\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Creates a sourceDefinition\n      tags:\n        - source_definition\n  /v1/source_definitions/get:\n    post:\n      operationId: getSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get source\n      tags:\n        - source_definition\n  /v1/source_definitions/list:\n    post:\n      operationId: listSourceDefinitions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionReadList\"\n          description: Successful operation\n      summary: List all the sourceDefinitions the current Airbyte deployment is configured to use\n      tags:\n        - source_definition\n  /v1/source_definitions/list_latest:\n    post:\n      description: Guaranteed to retrieve the latest information on supported sources.\n      operationId: listLatestSourceDefinitions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionReadList\"\n          description: Successful operation\n      summary: List the latest sourceDefinitions Airbyte supports\n      tags:\n        - source_definition\n  /v1/source_definitions/update:\n    post:\n      operationId: updateSourceDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceDefinitionUpdate\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDefinitionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Update a sourceDefinition\n      tags:\n        - source_definition\n  /v1/sources/check_connection:\n    post:\n      operationId: checkConnectionToSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Check connection to the source\n      tags:\n        - source\n  /v1/sources/check_connection_for_update:\n    post:\n      operationId: checkConnectionToSourceForUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckConnectionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Check connection for a proposed update to a source\n      tags:\n        - source\n  /v1/sources/create:\n    post:\n      operationId: createSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceCreate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Create a source\n      tags:\n        - source\n  /v1/sources/delete:\n    post:\n      operationId: deleteSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Delete a source\n      tags:\n        - source\n  /v1/sources/discover_schema:\n    post:\n      operationId: discoverSchemaForSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceDiscoverSchemaRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Discover the schema catalog of the source\n      tags:\n        - source\n  /v1/sources/get:\n    post:\n      operationId: getSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get source\n      tags:\n        - source\n  /v1/sources/list:\n    post:\n      description: List sources for workspace. Does not return deleted sources.\n      operationId: listSourcesForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceReadList\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: List sources for workspace\n      tags:\n        - source\n  /v1/sources/update:\n    post:\n      operationId: updateSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Update a source\n      tags:\n        - source\n  /v1/state/get:\n    post:\n      operationId: getState\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConnectionState\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Fetch the current state for a connection.\n      tags:\n        - connection\n  /v1/web_backend/connections/create:\n    post:\n      operationId: webBackendCreateConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebBackendConnectionCreate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Create a connection\n      tags:\n        - web_backend\n  /v1/web_backend/connections/get:\n    post:\n      operationId: webBackendGetConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebBackendConnectionRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Get a connection\n      tags:\n        - web_backend\n  /v1/web_backend/connections/list:\n    post:\n      operationId: webBackendListConnectionsForWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionReadList\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Returns all connections for a workspace.\n      tags:\n        - web_backend\n  /v1/web_backend/connections/update:\n    post:\n      operationId: webBackendUpdateConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebBackendConnectionUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebBackendConnectionRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Update a connection\n      tags:\n        - web_backend\n  /v1/web_backend/destinations/recreate:\n    post:\n      operationId: webBackendRecreateDestination\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DestinationRecreate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DestinationRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Recreate a destination\n      tags:\n        - web_backend\n  /v1/web_backend/sources/recreate:\n    post:\n      operationId: webBackendRecreateSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SourceRecreate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Recreate a source\n      tags:\n        - web_backend\n  /v1/workspaces/create:\n    post:\n      operationId: createWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceCreate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n          description: Successful operation\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Creates a workspace\n      tags:\n        - workspace\n  /v1/workspaces/delete:\n    post:\n      operationId: deleteWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"204\":\n          description: The resource was deleted successfully.\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Deletes a workspace\n      tags:\n        - workspace\n  /v1/workspaces/get:\n    post:\n      operationId: getWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceIdRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Find workspace by ID\n      tags:\n        - workspace\n  /v1/workspaces/get_by_slug:\n    post:\n      operationId: getWorkspaceBySlug\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SlugRequestBody\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Find workspace by slug\n      tags:\n        - workspace\n  /v1/workspaces/list:\n    post:\n      operationId: listWorkspaces\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceReadList\"\n          description: Successful operation\n      summary: List all workspaces registered in the current Airbyte deployment\n      tags:\n        - workspace\n  /v1/workspaces/update:\n    post:\n      operationId: updateWorkspace\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WorkspaceUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WorkspaceRead\"\n          description: Successful operation\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidInputResponse\"\n      summary: Update workspace state\n      tags:\n        - workspace\ncomponents:\n  responses:\n    ExceptionResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/KnownExceptionInfo\"\n      description: Exception occurred; see message for details.\n    InvalidInputResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/InvalidInputExceptionInfo\"\n      description: Input failed validation\n    NotFoundResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFoundKnownExceptionInfo\"\n      description: Object with given id was not found.\n  schemas:\n    AirbyteArchive:\n      description: Tarball Archive (.tar.gz) of Airbyte Configuration and Database\n      format: binary\n      type: string\n    AirbyteCatalog:\n      description: describes the available schema (catalog).\n      properties:\n        streams:\n          items:\n            $ref: \"#/components/schemas/AirbyteStreamAndConfiguration\"\n          type: array\n      required:\n        - streams\n      type: object\n    AirbyteStream:\n      additionalProperties: false\n      description: the immutable schema defined by the source\n      properties:\n        defaultCursorField:\n          description: Path to the field that will be used to determine if a record is new or modified since the last sync. If not provided by the source, the end user will have to specify the comparable themselves.\n          items:\n            type: string\n          type: array\n        jsonSchema:\n          $ref: \"#/components/schemas/StreamJsonSchema\"\n          description: Stream schema using Json Schema specs.\n        name:\n          description: Stream's name.\n          type: string\n        namespace:\n          description: Optional Source-defined namespace. Airbyte streams from the same sources should have the same namespace. Currently only used by JDBC destinations to determine what schema to write to.\n          type: string\n        sourceDefinedCursor:\n          description: If the source defines the cursor field, then any other cursor field inputs will be ignored. If it does not, either the user_provided one is used, or the default one is used as a backup.\n          type: boolean\n        sourceDefinedPrimaryKey:\n          description: If the source defines the primary key, paths to the fields that will be used as a primary key. If not provided by the source, the end user will have to specify the primary key themselves.\n          items:\n            items:\n              type: string\n            type: array\n          type: array\n        supportedSyncModes:\n          items:\n            $ref: \"#/components/schemas/SyncMode\"\n          type: array\n      required:\n        - name\n        - json_schema\n      type: object\n    AirbyteStreamAndConfiguration:\n      additionalProperties: false\n      description: each stream is split in two parts; the immutable schema from source and mutable configuration for destination\n      properties:\n        config:\n          $ref: \"#/components/schemas/AirbyteStreamConfiguration\"\n        stream:\n          $ref: \"#/components/schemas/AirbyteStream\"\n      type: object\n    AirbyteStreamConfiguration:\n      additionalProperties: false\n      description: the mutable part of the stream to configure the destination\n      properties:\n        aliasName:\n          description: Alias name to the stream to be used in the destination\n          type: string\n        cursorField:\n          description: Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental`. Otherwise it is ignored.\n          items:\n            type: string\n          type: array\n        destinationSyncMode:\n          $ref: \"#/components/schemas/DestinationSyncMode\"\n        primaryKey:\n          description: Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup`. Otherwise it is ignored.\n          items:\n            items:\n              type: string\n            type: array\n          type: array\n        selected:\n          type: boolean\n        syncMode:\n          $ref: \"#/components/schemas/SyncMode\"\n      required:\n        - syncMode\n        - destinationSyncMode\n      type: object\n    AttemptInfoRead:\n      properties:\n        attempt:\n          $ref: \"#/components/schemas/AttemptRead\"\n        logs:\n          $ref: \"#/components/schemas/LogRead\"\n      required:\n        - attempt\n        - logs\n      type: object\n    AttemptRead:\n      properties:\n        bytesSynced:\n          format: int64\n          type: integer\n        createdAt:\n          format: int64\n          type: integer\n        endedAt:\n          format: int64\n          type: integer\n        id:\n          format: int64\n          type: integer\n        recordsSynced:\n          format: int64\n          type: integer\n        status:\n          $ref: \"#/components/schemas/AttemptStatus\"\n        updatedAt:\n          format: int64\n          type: integer\n      required:\n        - id\n        - status\n        - createdAt\n        - updatedAt\n      type: object\n    AttemptStatus:\n      enum:\n        - running\n        - failed\n        - succeeded\n      type: string\n    CheckConnectionRead:\n      properties:\n        jobInfo:\n          $ref: \"#/components/schemas/SynchronousJobRead\"\n        message:\n          type: string\n        status:\n          enum:\n            - succeeded\n            - failed\n          type: string\n      required:\n        - status\n        - jobInfo\n      type: object\n    CheckOperationRead:\n      properties:\n        message:\n          type: string\n        status:\n          enum:\n            - succeeded\n            - failed\n          type: string\n      required:\n        - status\n      type: object\n    ConnectionCreate:\n      properties:\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        name:\n          description: Optional name of the connection\n          type: string\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          default: null\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          example: ${SOURCE_NAMESPACE}\n          type: string\n        operationIds:\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n          type: array\n        prefix:\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n      required:\n        - sourceId\n        - destinationId\n        - status\n      type: object\n    ConnectionId:\n      format: uuid\n      type: string\n    ConnectionIdRequestBody:\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n      required:\n        - connectionId\n      type: object\n    ConnectionRead:\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        name:\n          type: string\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          default: null\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          example: ${SOURCE_NAMESPACE}\n          type: string\n        operationIds:\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n          type: array\n        prefix:\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n      required:\n        - connectionId\n        - name\n        - sourceId\n        - destinationId\n        - syncCatalog\n        - status\n      type: object\n    ConnectionReadList:\n      properties:\n        connections:\n          items:\n            $ref: \"#/components/schemas/ConnectionRead\"\n          type: array\n      required:\n        - connections\n      type: object\n    ConnectionSchedule:\n      description: if null, then no schedule is set.\n      properties:\n        timeUnit:\n          enum:\n            - minutes\n            - hours\n            - days\n            - weeks\n            - months\n          type: string\n        units:\n          format: int64\n          type: integer\n      required:\n        - units\n        - timeUnit\n      type: object\n    ConnectionState:\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        state:\n          $ref: \"#/components/schemas/ConnectionStateObject\"\n      required:\n        - connectionId\n      type: object\n    ConnectionStateObject:\n      type: object\n    ConnectionStatus:\n      description: Active means that data is flowing through the connection. Inactive means it is not. Deprecated means the connection is off and cannot be re-activated. the schema field describes the elements of the schema that will be synced.\n      enum:\n        - active\n        - inactive\n        - deprecated\n      type: string\n    ConnectionUpdate:\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          default: null\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          example: ${SOURCE_NAMESPACE}\n          type: string\n        operationIds:\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n          type: array\n        prefix:\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n      required:\n        - connectionId\n        - syncCatalog\n        - status\n      type: object\n    CustomerId:\n      format: uuid\n      type: string\n    DataType:\n      enum:\n        - string\n        - number\n        - boolean\n        - object\n        - array\n      type: string\n    DestinationConfiguration:\n      description: The values required to configure the destination. The schema for this must match the schema return by destination_definition_specifications/get for the destinationDefinition.\n      example:\n        user: charles\n    DestinationCoreConfig:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n      required:\n        - workspaceId\n        - destinationDefinitionId\n        - connectionConfiguration\n      type: object\n    DestinationCreate:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        name:\n          type: string\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - workspaceId\n        - name\n        - destinationDefinitionId\n        - connectionConfiguration\n      type: object\n    DestinationDefinitionCreate:\n      properties:\n        dockerImageTag:\n          type: string\n        dockerRepository:\n          type: string\n        documentationUrl:\n          format: uri\n          type: string\n        icon:\n          type: string\n        name:\n          type: string\n      required:\n        - name\n        - dockerRepository\n        - dockerImageTag\n        - documentationUrl\n      type: object\n    DestinationDefinitionId:\n      format: uuid\n      type: string\n    DestinationDefinitionIdRequestBody:\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n      required:\n        - destinationDefinitionId\n      type: object\n    DestinationDefinitionRead:\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        dockerImageTag:\n          type: string\n        dockerRepository:\n          type: string\n        documentationUrl:\n          format: uri\n          type: string\n        icon:\n          type: string\n        name:\n          type: string\n      required:\n        - destinationDefinitionId\n        - name\n        - dockerRepository\n        - dockerImageTag\n        - documentationUrl\n      type: object\n    DestinationDefinitionReadList:\n      properties:\n        destinationDefinitions:\n          items:\n            $ref: \"#/components/schemas/DestinationDefinitionRead\"\n          type: array\n      required:\n        - destinationDefinitions\n      type: object\n    DestinationDefinitionSpecification:\n      description: The specification for what values are required to configure the destinationDefinition.\n      example:\n        user:\n          type: string\n    DestinationDefinitionSpecificationRead:\n      properties:\n        connectionSpecification:\n          $ref: \"#/components/schemas/DestinationDefinitionSpecification\"\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        documentationUrl:\n          type: string\n        jobInfo:\n          $ref: \"#/components/schemas/SynchronousJobRead\"\n        supportedDestinationSyncModes:\n          items:\n            $ref: \"#/components/schemas/DestinationSyncMode\"\n          type: array\n        supportsDbt:\n          type: boolean\n        supportsNormalization:\n          type: boolean\n      required:\n        - destinationDefinitionId\n        - jobInfo\n      type: object\n    DestinationDefinitionUpdate:\n      properties:\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        dockerImageTag:\n          type: string\n      required:\n        - destinationDefinitionId\n        - dockerImageag\n      type: object\n    DestinationId:\n      format: uuid\n      type: string\n    DestinationIdRequestBody:\n      properties:\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n      required:\n        - destinationId\n      type: object\n    DestinationRead:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        destinationName:\n          type: string\n        name:\n          type: string\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - destinationDefinitionId\n        - destinationId\n        - workspaceId\n        - connectionConfiguration\n        - name\n        - destinationName\n      type: object\n    DestinationReadList:\n      properties:\n        destinations:\n          items:\n            $ref: \"#/components/schemas/DestinationRead\"\n          type: array\n      required:\n        - destinations\n      type: object\n    DestinationRecreate:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n        destinationDefinitionId:\n          $ref: \"#/components/schemas/DestinationDefinitionId\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        name:\n          type: string\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - workspaceId\n        - destinationId\n        - destinationDefinitionId\n        - connectionConfiguration\n        - name\n      type: object\n    DestinationSyncMode:\n      enum:\n        - append\n        - overwrite\n        - append_dedup\n      type: string\n    DestinationUpdate:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/DestinationConfiguration\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        name:\n          type: string\n      required:\n        - destinationId\n        - connectionConfiguration\n        - name\n      type: object\n    HealthCheckRead:\n      properties:\n        db:\n          type: boolean\n      required:\n        - db\n      type: object\n    ImportRead:\n      properties:\n        reason:\n          type: string\n        status:\n          enum:\n            - succeeded\n            - failed\n          type: string\n      required:\n        - status\n      type: object\n    InvalidInputExceptionInfo:\n      properties:\n        exceptionClassName:\n          type: string\n        exceptionStack:\n          items:\n            type: string\n          type: array\n        message:\n          type: string\n        validationErrors:\n          items:\n            $ref: \"#/components/schemas/InvalidInputProperty\"\n          type: array\n      required:\n        - message\n        - validationErrors\n      type: object\n    InvalidInputProperty:\n      properties:\n        invalidValue:\n          type: string\n        message:\n          type: string\n        propertyPath:\n          type: string\n      required:\n        - propertyPath\n      type: object\n    JobConfigType:\n      enum:\n        - check_connection_source\n        - check_connection_destination\n        - discover_schema\n        - get_spec\n        - sync\n        - reset_connection\n      type: string\n    JobId:\n      format: int64\n      type: integer\n    JobIdRequestBody:\n      properties:\n        id:\n          $ref: \"#/components/schemas/JobId\"\n      required:\n        - id\n      type: object\n    JobInfoRead:\n      properties:\n        attempts:\n          items:\n            $ref: \"#/components/schemas/AttemptInfoRead\"\n          type: array\n        job:\n          $ref: \"#/components/schemas/JobRead\"\n      required:\n        - job\n        - attempts\n      type: object\n    JobListRequestBody:\n      properties:\n        configId:\n          type: string\n        configTypes:\n          items:\n            $ref: \"#/components/schemas/JobConfigType\"\n          type: array\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n          type: object\n      required:\n        - configTypes\n        - configId\n      type: object\n    JobRead:\n      properties:\n        configId:\n          type: string\n        configType:\n          $ref: \"#/components/schemas/JobConfigType\"\n        createdAt:\n          format: int64\n          type: integer\n        id:\n          $ref: \"#/components/schemas/JobId\"\n        status:\n          $ref: \"#/components/schemas/JobStatus\"\n        updatedAt:\n          format: int64\n          type: integer\n      required:\n        - id\n        - configType\n        - configId\n        - createdAt\n        - updatedAt\n        - status\n      type: object\n    JobReadList:\n      properties:\n        jobs:\n          items:\n            $ref: \"#/components/schemas/JobWithAttemptsRead\"\n          type: array\n      required:\n        - jobs\n      type: object\n    JobStatus:\n      enum:\n        - pending\n        - running\n        - incomplete\n        - failed\n        - succeeded\n        - cancelled\n      type: string\n    JobWithAttemptsRead:\n      properties:\n        attempts:\n          items:\n            $ref: \"#/components/schemas/AttemptRead\"\n          type: array\n        job:\n          $ref: \"#/components/schemas/JobRead\"\n      type: object\n    KnownExceptionInfo:\n      properties:\n        exceptionClassName:\n          type: string\n        exceptionStack:\n          items:\n            type: string\n          type: array\n        message:\n          type: string\n        rootCauseExceptionClassName:\n          type: string\n        rootCauseExceptionStack:\n          items:\n            type: string\n          type: array\n      required:\n        - message\n      type: object\n    LogRead:\n      properties:\n        logLines:\n          items:\n            type: string\n          type: array\n      required:\n        - logLines\n      type: object\n    LogType:\n      description: type/source of logs produced\n      enum:\n        - server\n        - scheduler\n      type: string\n    LogsRequestBody:\n      properties:\n        logType:\n          $ref: \"#/components/schemas/LogType\"\n      required:\n        - logType\n      type: object\n    NamespaceDefinitionType:\n      default: source\n      description: Method used for computing final namespace in destination\n      enum:\n        - source\n        - destination\n        - customformat\n      type: string\n    NotFoundKnownExceptionInfo:\n      properties:\n        exceptionClassName:\n          type: string\n        exceptionStack:\n          items:\n            type: string\n          type: array\n        id:\n          type: string\n        message:\n          type: string\n        rootCauseExceptionClassName:\n          type: string\n        rootCauseExceptionStack:\n          items:\n            type: string\n          type: array\n      required:\n        - message\n      type: object\n    Notification:\n      properties:\n        notificationType:\n          $ref: \"#/components/schemas/NotificationType\"\n        slackConfiguration:\n          $ref: \"#/components/schemas/SlackNotificationConfiguration\"\n      required:\n        - notificationType\n      type: object\n    NotificationRead:\n      properties:\n        message:\n          type: string\n        status:\n          enum:\n            - succeeded\n            - failed\n          type: string\n      required:\n        - status\n      type: object\n    NotificationType:\n      enum:\n        - slack\n      type: string\n    OperationCreate:\n      properties:\n        name:\n          type: string\n        operatorConfiguration:\n          $ref: \"#/components/schemas/OperatorConfiguration\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - name\n        - operatorConfiguration\n        - workspaceId\n      type: object\n    OperationId:\n      format: uuid\n      type: string\n    OperationIdRequestBody:\n      properties:\n        OperationId:\n          $ref: \"#/components/schemas/OperationId\"\n      required:\n        - OperationId\n      type: object\n    OperationRead:\n      properties:\n        name:\n          type: string\n        operationId:\n          $ref: \"#/components/schemas/OperationId\"\n        operatorConfiguration:\n          $ref: \"#/components/schemas/OperatorConfiguration\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - operationId\n        - name\n        - operatorConfiguration\n        - workspaceId\n      type: object\n    OperationReadList:\n      properties:\n        operations:\n          items:\n            $ref: \"#/components/schemas/OperationRead\"\n          type: array\n      required:\n        - operations\n      type: object\n    OperationUpdate:\n      properties:\n        name:\n          type: string\n        operationId:\n          $ref: \"#/components/schemas/OperationId\"\n        operatorConfiguration:\n          $ref: \"#/components/schemas/OperatorConfiguration\"\n      required:\n        - operationId\n        - name\n        - operatorConfiguration\n      type: object\n    OperatorConfiguration:\n      properties:\n        dbt:\n          $ref: \"#/components/schemas/OperatorDbt\"\n        normalization:\n          $ref: \"#/components/schemas/OperatorNormalization\"\n        operatorType:\n          $ref: \"#/components/schemas/OperatorType\"\n      required:\n        - operatorType\n      type: object\n    OperatorDbt:\n      properties:\n        dbtArguments:\n          type: string\n        dockerImage:\n          type: string\n        gitRepoBranch:\n          type: string\n        gitRepoUrl:\n          type: string\n      required:\n        - gitRepoUrl\n      type: object\n    OperatorNormalization:\n      properties:\n        option:\n          enum:\n            - basic\n          type: string\n      type: object\n    OperatorType:\n      enum:\n        - normalization\n        - dbt\n      type: string\n    Pagination:\n      properties:\n        pageSize:\n          type: integer\n        rowOffset:\n          type: integer\n      type: object\n    ResourceRequirements:\n      description: optional resource requirements to run workers (blank for unbounded allocations)\n      properties:\n        cpu_limit:\n          type: string\n        cpu_request:\n          type: string\n        memory_limit:\n          type: string\n        memory_request:\n          type: string\n      type: object\n    SlackNotificationConfiguration:\n      properties:\n        webhook:\n          type: string\n      required:\n        - webhook\n      type: object\n    SlugRequestBody:\n      properties:\n        slug:\n          type: string\n      required:\n        - slug\n      type: object\n    SourceConfiguration:\n      description: The values required to configure the source. The schema for this must match the schema return by source_definition_specifications/get for the source.\n      example:\n        user: charles\n    SourceCoreConfig:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n      required:\n        - sourceDefinitionId\n        - connectionConfiguration\n      type: object\n    SourceCreate:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        name:\n          type: string\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - workspaceId\n        - name\n        - sourceDefinitionId\n        - connectionConfiguration\n      type: object\n    SourceDefinitionCreate:\n      properties:\n        dockerImageTag:\n          type: string\n        dockerRepository:\n          type: string\n        documentationUrl:\n          format: uri\n          type: string\n        icon:\n          type: string\n        name:\n          type: string\n      required:\n        - name\n        - dockerRepository\n        - dockerImageTag\n        - documentationUrl\n      type: object\n    SourceDefinitionId:\n      format: uuid\n      type: string\n    SourceDefinitionIdRequestBody:\n      properties:\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n      required:\n        - sourceDefinitionId\n      type: object\n    SourceDefinitionRead:\n      properties:\n        dockerImageTag:\n          type: string\n        dockerRepository:\n          type: string\n        documentationUrl:\n          format: uri\n          type: string\n        icon:\n          type: string\n        name:\n          type: string\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n      required:\n        - sourceDefinitionId\n        - name\n        - dockerRepository\n        - dockerImageTag\n      type: object\n    SourceDefinitionReadList:\n      properties:\n        sourceDefinitions:\n          items:\n            $ref: \"#/components/schemas/SourceDefinitionRead\"\n          type: array\n      required:\n        - sourceDefinitions\n      type: object\n    SourceDefinitionSpecification:\n      description: The specification for what values are required to configure the sourceDefinition.\n      example:\n        user:\n          type: string\n      type: object\n    SourceDefinitionSpecificationRead:\n      properties:\n        connectionSpecification:\n          $ref: \"#/components/schemas/SourceDefinitionSpecification\"\n        documentationUrl:\n          type: string\n        jobInfo:\n          $ref: \"#/components/schemas/SynchronousJobRead\"\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n      required:\n        - sourceDefinitionId\n        - jobInfo\n      type: object\n    SourceDefinitionUpdate:\n      description: Update the SourceDefinition. Currently, the only allowed attribute to update is the default docker image version.\n      properties:\n        dockerImageTag:\n          type: string\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n      required:\n        - sourceDefinitionId\n        - dockerImageTag\n      type: object\n    SourceDiscoverSchemaRead:\n      description: Returns the results of a discover catalog job. If the job was not successful, the catalog field will not be present. jobInfo will aways be present and its status be used to determine if the job was successful or not.\n      properties:\n        catalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        jobInfo:\n          $ref: \"#/components/schemas/SynchronousJobRead\"\n      required:\n        - jobInfo\n      type: object\n    SourceId:\n      format: uuid\n      type: string\n    SourceIdRequestBody:\n      properties:\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n      required:\n        - sourceId\n      type: object\n    SourceRead:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        name:\n          type: string\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        sourceName:\n          type: string\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - sourceDefinitionId\n        - sourceId\n        - workspaceId\n        - connectionConfiguration\n        - name\n        - sourceName\n      type: object\n    SourceReadList:\n      properties:\n        sources:\n          items:\n            $ref: \"#/components/schemas/SourceRead\"\n          type: array\n      required:\n        - sources\n      type: object\n    SourceRecreate:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        name:\n          type: string\n        sourceDefinitionId:\n          $ref: \"#/components/schemas/SourceDefinitionId\"\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - workspaceId\n        - sourceDefinitionId\n        - sourceId\n        - connectionConfiguration\n        - name\n      type: object\n    SourceUpdate:\n      properties:\n        connectionConfiguration:\n          $ref: \"#/components/schemas/SourceConfiguration\"\n        name:\n          type: string\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n      required:\n        - sourceId\n        - connectionConfiguration\n        - name\n      type: object\n    StreamJsonSchema:\n      type: object\n    SyncMode:\n      enum:\n        - full_refresh\n        - incremental\n      type: string\n    SynchronousJobRead:\n      properties:\n        configId:\n          description: only present if a config id was provided.\n          type: string\n        configType:\n          $ref: \"#/components/schemas/JobConfigType\"\n        createdAt:\n          format: int64\n          type: integer\n        endedAt:\n          format: int64\n          type: integer\n        id:\n          format: uuid\n          type: string\n        logs:\n          $ref: \"#/components/schemas/LogRead\"\n        succeeded:\n          type: boolean\n      required:\n        - id\n        - configType\n        - createdAt\n        - endedAt\n        - succeeded\n      type: object\n    WebBackendConnectionCreate:\n      properties:\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        name:\n          description: Optional name of the connection\n          type: string\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          default: null\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          example: ${SOURCE_NAMESPACE}\n          type: string\n        operationIds:\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n          type: array\n        operations:\n          items:\n            $ref: \"#/components/schemas/OperationCreate\"\n          type: array\n        prefix:\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n      required:\n        - connection\n        - sourceId\n        - destinationId\n        - status\n      type: object\n    WebBackendConnectionRead:\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        destination:\n          $ref: \"#/components/schemas/DestinationRead\"\n        destinationId:\n          $ref: \"#/components/schemas/DestinationId\"\n        isSyncing:\n          type: boolean\n        latestSyncJobCreatedAt:\n          description: epoch time of the latest sync job. null if no sync job has taken place.\n          format: int64\n          type: integer\n        latestSyncJobStatus:\n          $ref: \"#/components/schemas/JobStatus\"\n        name:\n          type: string\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          default: null\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          example: ${SOURCE_NAMESPACE}\n          type: string\n        operationIds:\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n          type: array\n        operations:\n          items:\n            $ref: \"#/components/schemas/OperationRead\"\n          type: array\n        prefix:\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        source:\n          $ref: \"#/components/schemas/SourceRead\"\n        sourceId:\n          $ref: \"#/components/schemas/SourceId\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n      required:\n        - connectionId\n        - name\n        - sourceId\n        - destinationId\n        - syncCatalog\n        - status\n        - source\n        - destination\n        - isSyncing\n      type: object\n    WebBackendConnectionReadList:\n      properties:\n        connections:\n          items:\n            $ref: \"#/components/schemas/WebBackendConnectionRead\"\n          type: array\n      required:\n        - connections\n      type: object\n    WebBackendConnectionRequestBody:\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        withRefreshedCatalog:\n          type: boolean\n      required:\n        - connectionId\n      type: object\n    WebBackendConnectionUpdate:\n      properties:\n        connectionId:\n          $ref: \"#/components/schemas/ConnectionId\"\n        namespaceDefinition:\n          $ref: \"#/components/schemas/NamespaceDefinitionType\"\n        namespaceFormat:\n          default: null\n          description: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n          example: ${SOURCE_NAMESPACE}\n          type: string\n        operationIds:\n          items:\n            $ref: \"#/components/schemas/OperationId\"\n          type: array\n        operations:\n          items:\n            $ref: \"#/components/schemas/WebBackendOperationCreateOrUpdate\"\n          type: array\n        prefix:\n          description: Prefix that will be prepended to the name of each stream when it is written to the destination.\n          type: string\n        resourceRequirements:\n          $ref: \"#/components/schemas/ResourceRequirements\"\n        schedule:\n          $ref: \"#/components/schemas/ConnectionSchedule\"\n        status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        syncCatalog:\n          $ref: \"#/components/schemas/AirbyteCatalog\"\n        withRefreshedCatalog:\n          type: boolean\n      required:\n        - connectionId\n        - syncCatalog\n        - status\n      type: object\n    WebBackendOperationCreateOrUpdate:\n      properties:\n        name:\n          type: string\n        operationId:\n          $ref: \"#/components/schemas/OperationId\"\n        operatorConfiguration:\n          $ref: \"#/components/schemas/OperatorConfiguration\"\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - name\n        - operatorConfiguration\n        - workspaceId\n      type: object\n    WorkspaceCreate:\n      properties:\n        anonymousDataCollection:\n          type: boolean\n        email:\n          format: email\n          type: string\n        name:\n          type: string\n        news:\n          type: boolean\n        notifications:\n          items:\n            $ref: \"#/components/schemas/Notification\"\n          type: array\n        securityUpdates:\n          type: boolean\n      required:\n        - name\n      type: object\n    WorkspaceId:\n      format: uuid\n      type: string\n    WorkspaceIdRequestBody:\n      properties:\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - workspaceId\n      type: object\n    WorkspaceRead:\n      properties:\n        anonymousDataCollection:\n          type: boolean\n        customerId:\n          $ref: \"#/components/schemas/CustomerId\"\n        displaySetupWizard:\n          type: boolean\n        email:\n          format: email\n          type: string\n        initialSetupComplete:\n          type: boolean\n        name:\n          type: string\n        news:\n          type: boolean\n        notifications:\n          items:\n            $ref: \"#/components/schemas/Notification\"\n          type: array\n        securityUpdates:\n          type: boolean\n        slug:\n          type: string\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - workspaceId\n        - customerId\n        - name\n        - slug\n        - initialSetupComplete\n      type: object\n    WorkspaceReadList:\n      properties:\n        workspaces:\n          items:\n            $ref: \"#/components/schemas/WorkspaceRead\"\n          type: array\n      required:\n        - workspaces\n      type: object\n    WorkspaceUpdate:\n      properties:\n        anonymousDataCollection:\n          type: boolean\n        displaySetupWizard:\n          type: boolean\n        email:\n          format: email\n          type: string\n        initialSetupComplete:\n          type: boolean\n        news:\n          type: boolean\n        notifications:\n          items:\n            $ref: \"#/components/schemas/Notification\"\n          type: array\n        securityUpdates:\n          type: boolean\n        workspaceId:\n          $ref: \"#/components/schemas/WorkspaceId\"\n      required:\n        - workspaceId\n        - initialSetupComplete\n        - anonymousDataCollection\n        - news\n        - securityUpdates\n      type: object\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n"
		}
	},
	"Error": "parse: parse spec: paths: /v1/web_backend/connections/update: post: operation \"webBackendUpdateConnection\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/WebBackendConnectionUpdate\": parse schema: namespaceFormat: unexpected default \"null\" value"
}