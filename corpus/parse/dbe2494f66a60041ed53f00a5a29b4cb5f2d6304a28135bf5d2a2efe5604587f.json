{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/google/gnostic-grpc"
		},
		"file": {
			"name": "other.yaml",
			"size": 0,
			"path": "generator/testfiles/other.yaml",
			"byteSize": 5108,
			"content": "openapi: 3.0.0\ninfo:\n  title: Test API for GSoC project\n  version: \"1.0.0\"\n  description: |\n    This is a OpenAPI description for testing my GSoC project. The name of the path defines what\n    will be tested and the operation object will be set accordingly.\n    Structure of tests:\n    /testParameter*   --\u003e To test everything related to path/query parameteres\n    /testResponse*    --\u003e To test everything related to respones\n    /testRequestBody* --\u003e To test everything related to request bodies\n    others            --\u003e Other stuff\npaths:\n  /testExternalReference:\n    get:\n      operationId: testExternalReference\n      responses:\n        200:\n          # TODO: Due to https://github.com/google/gnostic-grpc/pull/12 this response won't get rendered any more. This is because when we render responses.proto the 'Response' message\n          # TODO: is not generated anymore. Therefore, we can't import it anymore. Fix this if someone complains. For parameters it apparently works.\n          $ref: https://raw.githubusercontent.com/googleapis/gnostic-grpc/master/generator/testfiles/responses.yaml#/components/responses/Response\n  /testExternalReference2:\n    get:\n      operationId: testExernalReference2\n      parameters: #TODO: This gets rendered as body parameter, cuz of default position: POSITION_BODY\n        - $ref: https://raw.githubusercontent.com/googleapis/gnostic-grpc/master/generator/testfiles/parameters.yaml#/components/parameters/Parameter2\n      responses:\n        200:\n          description: success\n  /testAdditionalProperties:\n    get:\n      operationId: testAdditionalProperties\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /testAdditionalPropertiesReference:\n    get:\n      operationId: testAdditionalPropertiesReference\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  $ref: '#/components/schemas/Person'\n  /testAdditionalPropertiesArray:\n    get:\n      operationId: testAdditionalPropertiesArray\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: array\n                  items:\n                    type: integer\n                    format: int32\n  /testAdditionalPropertiesObject:\n    get:\n      operationId: testAdditionalPropertiesObject\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  properties:\n                    id:\n                      type: number\n                    name:\n                      type: string\n  /testOneOf:\n    get:\n      operationId: testOneOf\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TestOneOfApiResponse\"\n  /testAnyOf:\n    get:\n      operationId: testAnyOf\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TestAnyOfApiResponse\"\ncomponents:\n  schemas:\n    TestOneOfApiResponse:\n      oneOf:\n        - $ref: \"#/components/schemas/Person\"\n        - $ref: \"#/components/schemas/Order\"\n    TestAnyOfApiResponse:\n      anyOf:\n        - $ref: \"#/components/schemas/Person\"\n        - type: object\n          properties:\n            someInlineProperty:\n              type: number\n    Person:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        age:\n          type: integer\n          format: int64\n        name:\n          type: string\n          example: Peter\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        height:\n          type: number\n        cash:\n          type: number\n          format: double\n        iq:\n          type: number\n          format: float\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean",
			"canonicalURL": "/github.com/google/gnostic-grpc@f3d8e2b99545fb32829abd46455662266b92e3ba/-/blob/generator/testfiles/other.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/google/gnostic-grpc/blob/f3d8e2b99545fb32829abd46455662266b92e3ba/generator/testfiles/other.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /testExternalReference2: get: operation \"testExernalReference2\": parameters: parse parameter \"\": resolve \"https://raw.githubusercontent.com/googleapis/gnostic-grpc/master/generator/testfiles/parameters.yaml#/components/parameters/Parameter2\" reference: path parameters must be required"
}