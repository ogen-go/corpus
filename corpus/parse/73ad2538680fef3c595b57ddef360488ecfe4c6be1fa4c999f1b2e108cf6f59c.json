{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "deployment_manager.yaml",
			"size": 0,
			"path": "providers/src/azure/v0.1.1/services/deployment_manager.yaml",
			"byteSize": 88885,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://management.azure.com/\ninfo:\n  title: Azure Deployment Manager (Microsoft.DeploymentManager)\n  description: REST APIs for orchestrating deployments using the Azure Deployment Manager (ADM). See https://docs.microsoft.com/en-us/azure-resource-manager/deployment-manager-overview for more information.\n  contact:\n    name: StackQL Studios\n    url: https://stackql.io/\n    email: info@stackql.io\n  version: 2022-08-24-stackql-generated\nsecurity:\n  - azure_auth:\n      - user_impersonation\ncomponents:\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    Identity:\n      description: Identity for the resource.\n      type: object\n      properties:\n        principalId:\n          readOnly: true\n          type: string\n          description: The principal ID of resource identity.\n        tenantId:\n          readOnly: true\n          type: string\n          description: The tenant ID of resource.\n        type:\n          type: string\n          description: The identity type.\n          enum:\n            - SystemAssigned\n          x-ms-enum:\n            name: ResourceIdentityType\n            modelAsString: false\n    RolloutRequest:\n      description: Defines the PUT rollout request body.\n      allOf:\n        - $ref: '#/components/schemas/TrackedResource'\n      properties:\n        identity:\n          description: Identity for the resource.\n          $ref: '#/components/schemas/Identity'\n        properties:\n          description: Defines the properties that make up a rollout request.\n          x-ms-client-flatten: true\n          $ref: '#/components/schemas/RolloutRequestProperties'\n      required:\n        - identity\n        - properties\n      type: object\n    RolloutRequestProperties:\n      description: The properties for defining a rollout.\n      properties:\n        buildVersion:\n          type: string\n          description: The version of the build being deployed.\n          example: 1.0.0.1\n        artifactSourceId:\n          type: string\n          description: The reference to the artifact source resource Id where the payload is located.\n          example: Microsoft.DeploymentManager/artifactSources/payloadStore1\n        targetServiceTopologyId:\n          type: string\n          description: The resource Id of the service topology from which service units are being referenced in step groups to be deployed.\n          example: Microsoft.DeploymentManager/serviceTopologies/myServiceTopology\n        stepGroups:\n          description: The list of step groups that define the orchestration.\n          type: array\n          items:\n            $ref: '#/components/schemas/StepGroup'\n      required:\n        - stepGroups\n        - targetServiceTopologyId\n        - buildVersion\n      type: object\n    StepGroup:\n      description: The properties that define a Step group in a rollout.\n      properties:\n        name:\n          description: The name of the step group.\n          type: string\n        dependsOnStepGroups:\n          description: The list of step group names on which this step group depends on.\n          type: array\n          items:\n            type: string\n          example:\n            - stepGroup1\n            - stepGroup2\n        preDeploymentSteps:\n          description: The list of steps to be run before deploying the target.\n          type: array\n          items:\n            $ref: '#/components/schemas/PrePostStep'\n        deploymentTargetId:\n          description: The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId\n          type: string\n          example: Microsoft.DeploymentManager/serviceTopologies/myServiceTopology/services/myService/serviceUnits/database\n        postDeploymentSteps:\n          description: The list of steps to be run after deploying the target.\n          type: array\n          items:\n            $ref: '#/components/schemas/PrePostStep'\n      required:\n        - deploymentTargetId\n        - name\n      type: object\n    PrePostStep:\n      description: The properties that define a step.\n      properties:\n        stepId:\n          type: string\n          description: The resource Id of the step to be run.\n          example: Microsoft.DeploymentManager/steps/healthCheckStep1\n      required:\n        - stepId\n      type: object\n    ArtifactSource:\n      description: The resource that defines the source location where the artifacts are located.\n      allOf:\n        - $ref: '#/components/schemas/TrackedResource'\n      properties:\n        properties:\n          description: The properties that define the artifact source.\n          x-ms-client-flatten: true\n          allOf:\n            - $ref: '#/components/schemas/ArtifactSourceProperties'\n      type: object\n    ArtifactSourceProperties:\n      description: The properties that define the source location where the artifacts are located.\n      properties:\n        sourceType:\n          type: string\n          description: The type of artifact source used.\n          example: AzureStorage\n        artifactRoot:\n          type: string\n          description: The path from the location that the 'authentication' property [say, a SAS URI to the blob container] refers to, to the location of the artifacts. This can be used to differentiate different versions of the artifacts. Or, different types of artifacts like binaries or templates. The location referenced by the authentication property concatenated with this optional artifactRoot path forms the artifact source location where the artifacts are expected to be found.\n          example: binaries/2018.09.24\n        authentication:\n          description: The authentication method to use to access the artifact source.\n          $ref: '#/components/schemas/Authentication'\n      required:\n        - sourceType\n        - authentication\n      type: object\n    Authentication:\n      description: Defines the authentication method and properties to access the artifacts.\n      type: object\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: The authentication type\n      required:\n        - type\n    SasAuthentication:\n      x-ms-discriminator-value: Sas\n      type: object\n      description: Defines the properties to access the artifacts using an Azure Storage SAS URI.\n      allOf:\n        - $ref: '#/components/schemas/Authentication'\n      properties:\n        properties:\n          description: The SAS properties\n          x-ms-client-flatten: true\n          $ref: '#/components/schemas/SasProperties'\n    SasProperties:\n      description: The properties that define SAS authentication.\n      properties:\n        sasUri:\n          type: string\n          description: The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.\n      required:\n        - sasUri\n      type: object\n    Rollout:\n      description: Defines the rollout.\n      allOf:\n        - $ref: '#/components/schemas/TrackedResource'\n      properties:\n        identity:\n          description: Identity for the resource.\n          $ref: '#/components/schemas/Identity'\n        properties:\n          description: The properties that define a rollout.\n          x-ms-client-flatten: true\n          allOf:\n            - $ref: '#/components/schemas/RolloutRequestProperties'\n            - $ref: '#/components/schemas/RolloutProperties'\n      type: object\n    RolloutProperties:\n      description: Defines the properties of a rollout.\n      properties:\n        status:\n          type: string\n          readOnly: true\n          description: The current status of the rollout.\n        totalRetryAttempts:\n          type: integer\n          format: int32\n          readOnly: true\n          description: The cardinal count of total number of retries performed on the rollout at a given time.\n        operationInfo:\n          readOnly: true\n          $ref: '#/components/schemas/RolloutOperationInfo'\n          description: Operational information of the rollout.\n        services:\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/Service'\n          description: The detailed information on the services being deployed.\n      type: object\n    RolloutOperationInfo:\n      description: Detailed runtime information of the rollout.\n      properties:\n        retryAttempt:\n          type: integer\n          format: int32\n          readOnly: true\n          description: The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.\n        skipSucceededOnRetry:\n          type: boolean\n          readOnly: true\n          description: True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.\n        startTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: The start time of the rollout in UTC.\n        endTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.\n        error:\n          description: The detailed error information for any failure.\n          readOnly: true\n          $ref: '#/components/schemas/CloudErrorBody'\n      type: object\n    ServiceTopologyResource:\n      description: The resource representation of a service topology.\n      allOf:\n        - $ref: '#/components/schemas/TrackedResource'\n      properties:\n        properties:\n          description: The properties that define the service topology.\n          x-ms-client-flatten: true\n          allOf:\n            - $ref: '#/components/schemas/ServiceTopologyProperties'\n      required:\n        - properties\n      type: object\n    ServiceTopologyProperties:\n      description: The properties of a service topology.\n      properties:\n        artifactSourceId:\n          type: string\n          description: The resource Id of the artifact source that contains the artifacts that can be referenced in the service units.\n      type: object\n    ServiceResource:\n      description: The resource representation of a service in a service topology.\n      allOf:\n        - $ref: '#/components/schemas/TrackedResource'\n      properties:\n        properties:\n          description: The properties that define a service in a service topology.\n          x-ms-client-flatten: true\n          allOf:\n            - $ref: '#/components/schemas/ServiceProperties'\n      required:\n        - properties\n      type: object\n    Service:\n      description: Defines a service.\n      allOf:\n        - $ref: '#/components/schemas/ServiceProperties'\n      properties:\n        name:\n          type: string\n          description: Name of the service.\n        serviceUnits:\n          description: The detailed information about the units that make up the service.\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceUnit'\n      type: object\n    ServiceProperties:\n      description: The properties of a service.\n      properties:\n        targetLocation:\n          type: string\n          description: The Azure location to which the resources in the service belong to or should be deployed to.\n        targetSubscriptionId:\n          type: string\n          description: The subscription to which the resources in the service belong to or should be deployed to.\n      required:\n        - targetLocation\n        - targetSubscriptionId\n      type: object\n    ServiceUnitResource:\n      allOf:\n        - $ref: '#/components/schemas/TrackedResource'\n      description: Represents the response of a service unit resource.\n      properties:\n        properties:\n          description: The properties that define the service unit.\n          x-ms-client-flatten: true\n          allOf:\n            - $ref: '#/components/schemas/ServiceUnitProperties'\n      required:\n        - properties\n      type: object\n    ServiceUnit:\n      description: Defines a service unit.\n      allOf:\n        - $ref: '#/components/schemas/ServiceUnitProperties'\n      properties:\n        name:\n          type: string\n          description: Name of the service unit.\n        steps:\n          type: array\n          items:\n            $ref: '#/components/schemas/RolloutStep'\n          description: Detailed step information, if present.\n      type: object\n    ServiceUnitProperties:\n      description: Defines the properties of a service unit.\n      properties:\n        targetResourceGroup:\n          type: string\n          description: The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.\n        deploymentMode:\n          type: string\n          enum:\n            - Incremental\n            - Complete\n          x-ms-enum:\n            name: DeploymentMode\n            modelAsString: false\n          description: Describes the type of ARM deployment to be performed on the resource.\n        artifacts:\n          type: object\n          description: The artifacts for the service unit.\n          $ref: '#/components/schemas/ServiceUnitArtifacts'\n      required:\n        - targetResourceGroup\n        - deploymentMode\n      type: object\n    ServiceUnitArtifacts:\n      description: Defines the artifacts of a service unit.\n      properties:\n        templateUri:\n          type: string\n          description: The full URI of the ARM template file with the SAS token.\n          example: https://teststore.blob.core.windows.net/payloadcontainer/template.json?sasUri\n        parametersUri:\n          type: string\n          description: The full URI of the ARM parameters file with the SAS token.\n          example: https://teststore.blob.core.windows.net/payloadcontainer/parameters.json?sasUri\n        templateArtifactSourceRelativePath:\n          type: string\n          description: The path to the ARM template file relative to the artifact source.\n          example: /templates/resource1.template.json\n        parametersArtifactSourceRelativePath:\n          type: string\n          description: The path to the ARM parameters file relative to the artifact source.\n          example: /parameters/resource1.parameters.json\n      type: object\n    RolloutStep:\n      description: Defines a specific step on a target service unit.\n      properties:\n        name:\n          type: string\n          description: Name of the step.\n        status:\n          type: string\n          readOnly: true\n          description: Current state of the step.\n        stepGroup:\n          type: string\n          description: The step group the current step is part of.\n        operationInfo:\n          readOnly: true\n          $ref: '#/components/schemas/StepOperationInfo'\n          description: Detailed information of specific action execution.\n        resourceOperations:\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/ResourceOperation'\n          description: Set of resource operations that were performed, if any, on an Azure resource.\n        messages:\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/Message'\n          description: Supplementary informative messages during rollout.\n      required:\n        - name\n      type: object\n    StepOperationInfo:\n      description: Detailed information of a specific step run.\n      properties:\n        deploymentName:\n          type: string\n          readOnly: true\n          description: The name of the ARM deployment initiated as part of the step.\n        correlationId:\n          type: string\n          readOnly: true\n          description: Unique identifier to track the request for ARM-based resources.\n        startTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Start time of the action in UTC.\n        endTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: End time of the action in UTC.\n        lastUpdatedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Last time in UTC this operation was updated.\n        error:\n          description: The errors, if any, for the action.\n          $ref: '#/components/schemas/CloudErrorBody'\n      type: object\n    ResourceOperation:\n      description: Individual resource operation information.\n      properties:\n        resourceName:\n          type: string\n          description: Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.\n        operationId:\n          type: string\n          readOnly: true\n          description: Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.\n        resourceType:\n          type: string\n          description: Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.\n        provisioningState:\n          type: string\n          readOnly: true\n          description: State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.\n        statusMessage:\n          type: string\n          readOnly: true\n          description: Descriptive information of the resource operation.\n        statusCode:\n          type: string\n          readOnly: true\n          description: Http status code of the operation.\n      type: object\n    Message:\n      description: Supplementary contextual messages during a rollout.\n      properties:\n        timeStamp:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Time in UTC this message was provided.\n        message:\n          type: string\n          readOnly: true\n          description: The actual message text.\n      type: object\n    CloudError:\n      description: The error information object.\n      x-ms-external: true\n      properties:\n        error:\n          description: The properties that define the error.\n          $ref: '#/components/schemas/CloudErrorBody'\n      type: object\n    CloudErrorBody:\n      description: Detailed error information of any failure.\n      properties:\n        code:\n          type: string\n          readOnly: true\n          description: Error code string.\n        message:\n          type: string\n          readOnly: true\n          description: Descriptive error information.\n        target:\n          type: string\n          description: Error target\n        details:\n          type: array\n          items:\n            $ref: '#/components/schemas/CloudErrorBody'\n          description: More detailed error information.\n      type: object\n    OperationsList:\n      description: The operations response.\n      type: object\n      properties:\n        value:\n          type: array\n          description: The list of supported operations\n          $ref: '#/components/schemas/Operation'\n    Operation:\n      title: REST API Operation\n      description: Details of a REST API operation, returned from the Resource Provider Operations API\n      type: object\n      properties:\n        name:\n          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"'\n          type: string\n          readOnly: true\n        isDataAction:\n          description: Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.\n          type: boolean\n          readOnly: true\n        display:\n          description: Localized display information for this particular operation.\n          type: object\n          properties:\n            provider:\n              description: The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".\n              type: string\n              readOnly: true\n            resource:\n              description: The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".\n              type: string\n              readOnly: true\n            operation:\n              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".\n              type: string\n              readOnly: true\n            description:\n              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.\n              type: string\n              readOnly: true\n        origin:\n          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"\n          type: string\n          readOnly: true\n          enum:\n            - user\n            - system\n            - user,system\n          x-ms-enum:\n            name: Origin\n            modelAsString: true\n        actionType:\n          description: Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.\n          type: string\n          readOnly: true\n          enum:\n            - Internal\n          x-ms-enum:\n            name: ActionType\n            modelAsString: true\n    OperationDetail:\n      description: The detail about an operation.\n      properties:\n        provider:\n          type: string\n          description: The name of the provider that supports the operation.\n        resource:\n          type: string\n          description: The resource type on which this operation can be performed.\n        operation:\n          type: string\n          description: The name of the operation.\n        description:\n          type: string\n          description: The description of the operation.\n      type: object\n    StepResource:\n      description: The resource representation of a rollout step.\n      allOf:\n        - $ref: '#/components/schemas/TrackedResource'\n      properties:\n        properties:\n          description: The properties that define the step.\n          $ref: '#/components/schemas/StepProperties'\n      required:\n        - properties\n      type: object\n    StepProperties:\n      description: The properties of a step resource.\n      type: object\n      discriminator:\n        propertyName: stepType\n      properties:\n        stepType:\n          type: string\n          description: The type of step.\n          enum:\n            - Wait\n            - HealthCheck\n          x-ms-enum:\n            name: StepType\n            modelAsString: false\n      required:\n        - stepType\n    HealthCheckStepProperties:\n      x-ms-discriminator-value: HealthCheck\n      type: object\n      description: Defines the properties of a health check step.\n      allOf:\n        - $ref: '#/components/schemas/StepProperties'\n      properties:\n        attributes:\n          description: The health check step attributes\n          $ref: '#/components/schemas/HealthCheckStepAttributes'\n      required:\n        - attributes\n    HealthCheckStepAttributes:\n      type: object\n      description: The attributes for the health check step.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: The type of health check.\n          example: REST\n        waitDuration:\n          type: string\n          description: The duration in ISO 8601 format for which health check waits idly without any checks.\n          example: PT15M\n        maxElasticDuration:\n          type: string\n          description: The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.\n          example: PT30M\n        healthyStateDuration:\n          type: string\n          description: The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.\n          example: PT60M\n      required:\n        - type\n        - healthyStateDuration\n    RestHealthCheckStepAttributes:\n      x-ms-discriminator-value: REST\n      type: object\n      description: Defines the REST health check step properties.\n      allOf:\n        - $ref: '#/components/schemas/HealthCheckStepAttributes'\n      properties:\n        properties:\n          x-ms-client-flatten: true\n          description: The REST health check parameters.\n          $ref: '#/components/schemas/RestParameters'\n    RestParameters:\n      type: object\n      description: The parameters for the REST health check.\n      properties:\n        healthChecks:\n          type: array\n          items:\n            $ref: '#/components/schemas/RestHealthCheck'\n          description: The list of checks that form the health check step.\n      required:\n        - healthChecks\n    RestHealthCheck:\n      type: object\n      description: A REST based health check\n      properties:\n        name:\n          type: string\n          description: A unique name for this check.\n        request:\n          description: The request to the health provider.\n          $ref: '#/components/schemas/RestRequest'\n        response:\n          description: The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.\n          $ref: '#/components/schemas/RestResponse'\n      required:\n        - name\n        - request\n    RestRequest:\n      type: object\n      description: The properties that make up a REST request\n      properties:\n        method:\n          type: string\n          description: The HTTP method to use for the request.\n          enum:\n            - GET\n            - POST\n          x-ms-enum:\n            name: RestRequestMethod\n            modelAsString: false\n        uri:\n          type: string\n          description: The HTTP URI to use for the request.\n        authentication:\n          description: The authentication information required in the request to the health provider.\n          $ref: '#/components/schemas/RestRequestAuthentication'\n      required:\n        - method\n        - uri\n        - authentication\n    RestRequestAuthentication:\n      type: object\n      description: The authentication information required in the REST health check request to the health provider.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: The authentication type.\n          example: ApiKey\n          enum:\n            - ApiKey\n            - RolloutIdentity\n          x-ms-enum:\n            name: RestAuthType\n            modelAsString: false\n      required:\n        - type\n    RolloutIdentityAuthentication:\n      x-ms-discriminator-value: RolloutIdentity\n      description: RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/RestRequestAuthentication'\n    ApiKeyAuthentication:\n      x-ms-discriminator-value: ApiKey\n      description: ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/RestRequestAuthentication'\n      properties:\n        name:\n          type: string\n          description: The key name of the authentication key/value pair.\n        in:\n          type: string\n          description: The location of the authentication key/value pair in the request.\n          enum:\n            - Query\n            - Header\n          x-ms-enum:\n            name: RestAuthLocation\n            modelAsString: false\n        value:\n          type: string\n          description: The value of the authentication key/value pair.\n      required:\n        - name\n        - in\n        - value\n    RestResponse:\n      type: object\n      description: The properties that make up the expected REST response\n      properties:\n        successStatusCodes:\n          type: array\n          description: The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.\n          items:\n            type: string\n          example:\n            - Ok\n            - No Content\n        regex:\n          type: object\n          description: The regular expressions to match the response content with.\n          properties:\n            matches:\n              type: array\n              description: The list of regular expressions.\n              items:\n                type: string\n              example:\n                - Contoso-Service-EndToEnd\n                - |-\n                  (?i)\"health_status\":((.|\n                  )*)\"(green|yellow)\"\n                - '(?mi)^(\"application_host\": 94781052)$'\n            matchQuantifier:\n              type: string\n              description: Indicates whether any or all of the expressions should match with the response content.\n              enum:\n                - All\n                - Any\n              x-ms-enum:\n                name: RestMatchQuantifier\n                modelAsString: false\n    WaitStepProperties:\n      x-ms-discriminator-value: Wait\n      type: object\n      description: Defines the properties of a Wait step.\n      allOf:\n        - $ref: '#/components/schemas/StepProperties'\n      properties:\n        attributes:\n          description: The Wait attributes\n          $ref: '#/components/schemas/WaitStepAttributes'\n      required:\n        - attributes\n    WaitStepAttributes:\n      type: object\n      description: The parameters for the wait step.\n      properties:\n        duration:\n          type: string\n          description: The duration in ISO 8601 format of how long the wait should be.\n          example: PT30M\n      required:\n        - duration\n    ServiceTopologiesListResult:\n      description: The list of service topologies.\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceTopologyResource'\n    ServiceListResult:\n      description: The list of services.\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceResource'\n    ServiceUnitListResult:\n      description: The list of service units.\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceUnitResource'\n    StepResourceListResult:\n      description: The list of steps.\n      type: array\n      items:\n        $ref: '#/components/schemas/StepResource'\n    ArtifactSourceListResult:\n      description: The list of artifact sources.\n      type: array\n      items:\n        $ref: '#/components/schemas/ArtifactSource'\n    RolloutListResult:\n      description: The list of rollouts.\n      type: array\n      items:\n        $ref: '#/components/schemas/Rollout'\n    Resource:\n      title: Resource\n      description: Common fields that are returned in the response for all Azure Resource Manager resources\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      x-ms-azure-resource: true\n    AzureEntityResource:\n      x-ms-client-name: AzureEntityResource\n      title: Entity Resource\n      description: The resource model definition for an Azure Resource Manager resource with an etag.\n      type: object\n      properties:\n        etag:\n          type: string\n          readOnly: true\n          description: Resource Etag.\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n    TrackedResource:\n      title: Tracked Resource\n      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'\n      type: object\n      properties:\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n      required:\n        - location\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n    ProxyResource:\n      title: Proxy Resource\n      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n    ResourceModelWithAllowedPropertySet:\n      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n        managedBy:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.\n        kind:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.\n          pattern: ^[-\\w\\._,\\(\\)]+$\n        etag:\n          readOnly: true\n          type: string\n          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        identity:\n          allOf:\n            - $ref: '#/components/schemas/Identity'\n        sku:\n          allOf:\n            - $ref: '#/components/schemas/Sku'\n        plan:\n          allOf:\n            - $ref: '#/components/schemas/Plan'\n      x-ms-azure-resource: true\n    Sku:\n      description: The resource model definition representing SKU\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the SKU. Ex - P3. It is typically a letter+number code\n        tier:\n          type: string\n          enum:\n            - Free\n            - Basic\n            - Standard\n            - Premium\n          x-ms-enum:\n            name: SkuTier\n            modelAsString: false\n          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.\n        size:\n          type: string\n          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '\n        family:\n          type: string\n          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.\n        capacity:\n          type: integer\n          format: int32\n          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.\n      required:\n        - name\n    Plan:\n      type: object\n      properties:\n        name:\n          type: string\n          description: A user defined name of the 3rd Party Artifact that is being procured.\n        publisher:\n          type: string\n          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic\n        product:\n          type: string\n          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '\n        promotionCode:\n          type: string\n          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.\n        version:\n          type: string\n          description: The version of the desired product/artifact.\n      description: Plan for the resource.\n      required:\n        - name\n        - publisher\n        - product\n    ErrorResponse:\n      title: Error Response\n      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)\n      type: object\n      properties:\n        code:\n          readOnly: true\n          type: string\n          description: The error code.\n        message:\n          readOnly: true\n          type: string\n          description: The error message.\n        target:\n          readOnly: true\n          type: string\n          description: The error target.\n        details:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorResponse'\n          x-ms-identifiers:\n            - message\n            - target\n          description: The error details.\n        additionalInfo:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorAdditionalInfo'\n          x-ms-identifiers: []\n          description: The error additional info.\n    ErrorAdditionalInfo:\n      type: object\n      properties:\n        type:\n          readOnly: true\n          type: string\n          description: The additional info type.\n        info:\n          readOnly: true\n          type: object\n          description: The additional info.\n      description: The resource management error additional info.\n    OperationListResult:\n      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Operation'\n          x-ms-identifiers:\n            - name\n          description: List of operations supported by the resource provider\n          readOnly: true\n        nextLink:\n          type: string\n          description: URL to get the next set of operation list results (if there are any).\n          readOnly: true\n    locationData:\n      description: Metadata pertaining to the geographic location of the resource.\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 256\n          description: A canonical name for the geographic or physical location.\n        city:\n          type: string\n          description: The city or locality where the resource is located.\n        district:\n          type: string\n          description: The district, state, or province where the resource is located.\n        countryOrRegion:\n          type: string\n          description: The country or region where the resource is located\n      required:\n        - name\n    systemData:\n      description: Metadata pertaining to creation and last modification of the resource.\n      type: object\n      readOnly: true\n      properties:\n        createdBy:\n          type: string\n          description: The identity that created the resource.\n        createdByType:\n          type: string\n          description: The type of identity that created the resource.\n          enum:\n            - User\n            - Application\n            - ManagedIdentity\n            - Key\n          x-ms-enum:\n            name: createdByType\n            modelAsString: true\n        createdAt:\n          type: string\n          format: date-time\n          description: The timestamp of resource creation (UTC).\n        lastModifiedBy:\n          type: string\n          description: The identity that last modified the resource.\n        lastModifiedByType:\n          type: string\n          description: The type of identity that last modified the resource.\n          enum:\n            - User\n            - Application\n            - ManagedIdentity\n            - Key\n          x-ms-enum:\n            name: createdByType\n            modelAsString: true\n        lastModifiedAt:\n          type: string\n          format: date-time\n          description: The timestamp of resource last modification (UTC)\n    encryptionProperties:\n      description: Configuration of key for data encryption\n      type: object\n      properties:\n        status:\n          description: Indicates whether or not the encryption is enabled for container registry.\n          enum:\n            - enabled\n            - disabled\n          type: string\n          x-ms-enum:\n            name: EncryptionStatus\n            modelAsString: true\n        keyVaultProperties:\n          $ref: '#/components/schemas/KeyVaultProperties'\n          description: Key vault properties.\n    KeyVaultProperties:\n      type: object\n      properties:\n        keyIdentifier:\n          description: Key vault uri to access the encryption key.\n          type: string\n        identity:\n          description: The client ID of the identity which will be used to access key vault.\n          type: string\n  parameters:\n    artifactSourceName:\n      name: artifactSourceName\n      in: path\n      description: The name of the artifact source.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    serviceTopologyName:\n      name: serviceTopologyName\n      in: path\n      description: The name of the service topology .\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    serviceName:\n      name: serviceName\n      in: path\n      description: The name of the service resource.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    serviceUnitName:\n      name: serviceUnitName\n      in: path\n      description: The name of the service unit resource.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    stepName:\n      name: stepName\n      in: path\n      description: The name of the deployment step.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    subscriptionId:\n      name: subscriptionId\n      in: path\n      description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n    resourceGroupName:\n      name: resourceGroupName\n      in: path\n      description: The name of the resource group. The name is case insensitive.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        pattern: ^[-\\w\\._\\(\\)]+$\n        minLength: 1\n        maxLength: 90\n        type: string\n    rolloutName:\n      name: rolloutName\n      in: path\n      description: The rollout name.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    retryAttempt:\n      name: retryAttempt\n      in: query\n      description: Rollout retry attempt ordinal to get the result of. If not specified, result of the latest attempt will be returned.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: integer\n    ApiVersionParameter:\n      name: api-version\n      in: query\n      description: The API version to use for this operation.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    SubscriptionIdParameter:\n      name: subscriptionId\n      in: path\n      description: The ID of the target subscription.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    ResourceGroupNameParameter:\n      name: resourceGroupName\n      in: path\n      description: The name of the resource group. The name is case insensitive.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 1\n        maxLength: 90\n        type: string\n  x-stackQL-resources:\n    service_topologies:\n      id: azure.deployment_manager.service_topologies\n      name: service_topologies\n      title: Service_topologies\n      methods:\n        ServiceTopologies_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1?api-version=2019-11-01-preview/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        ServiceTopologies_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        ServiceTopologies_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1?api-version=2019-11-01-preview/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        ServiceTopologies_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/service_topologies/methods/ServiceTopologies_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/service_topologies/methods/ServiceTopologies_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/service_topologies/methods/ServiceTopologies_Delete'\n    services:\n      id: azure.deployment_manager.services\n      name: services\n      title: Services\n      methods:\n        Services_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1services~1{serviceName}~1?api-version=2019-11-01-preview/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Services_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1services~1{serviceName}~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Services_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1services~1{serviceName}~1?api-version=2019-11-01-preview/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Services_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1services~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/services/methods/Services_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/services/methods/Services_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/services/methods/Services_Delete'\n    service_units:\n      id: azure.deployment_manager.service_units\n      name: service_units\n      title: Service_units\n      methods:\n        ServiceUnits_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1services~1{serviceName}~1serviceUnits~1{serviceUnitName}~1?api-version=2019-11-01-preview/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        ServiceUnits_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1services~1{serviceName}~1serviceUnits~1{serviceUnitName}~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        ServiceUnits_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1services~1{serviceName}~1serviceUnits~1{serviceUnitName}~1?api-version=2019-11-01-preview/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        ServiceUnits_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1serviceTopologies~1{serviceTopologyName}~1services~1{serviceName}~1serviceUnits~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/service_units/methods/ServiceUnits_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/service_units/methods/ServiceUnits_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/service_units/methods/ServiceUnits_Delete'\n    steps:\n      id: azure.deployment_manager.steps\n      name: steps\n      title: Steps\n      methods:\n        Steps_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1steps~1{stepName}~1?api-version=2019-11-01-preview/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Steps_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1steps~1{stepName}~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Steps_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1steps~1{stepName}~1?api-version=2019-11-01-preview/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Steps_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1steps~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/steps/methods/Steps_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/steps/methods/Steps_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/steps/methods/Steps_Delete'\n    rollouts:\n      id: azure.deployment_manager.rollouts\n      name: rollouts\n      title: Rollouts\n      methods:\n        Rollouts_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1rollouts~1{rolloutName}~1?api-version=2019-11-01-preview/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Rollouts_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1rollouts~1{rolloutName}~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Rollouts_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1rollouts~1{rolloutName}~1?api-version=2019-11-01-preview/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Rollouts_Cancel:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1rollouts~1{rolloutName}~1cancel~1?api-version=2019-11-01-preview/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Rollouts_Restart:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1rollouts~1{rolloutName}~1restart~1?api-version=2019-11-01-preview/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Rollouts_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1rollouts~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/rollouts/methods/Rollouts_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/rollouts/methods/Rollouts_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/rollouts/methods/Rollouts_Delete'\n    artifact_sources:\n      id: azure.deployment_manager.artifact_sources\n      name: artifact_sources\n      title: Artifact_sources\n      methods:\n        ArtifactSources_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1artifactSources~1{artifactSourceName}~1?api-version=2019-11-01-preview/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        ArtifactSources_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1artifactSources~1{artifactSourceName}~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        ArtifactSources_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1artifactSources~1{artifactSourceName}~1?api-version=2019-11-01-preview/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        ArtifactSources_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DeploymentManager~1artifactSources~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/artifact_sources/methods/ArtifactSources_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/artifact_sources/methods/ArtifactSources_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/artifact_sources/methods/ArtifactSources_Delete'\n    operations:\n      id: azure.deployment_manager.operations\n      name: operations\n      title: Operations\n      methods:\n        Operations_List:\n          operation:\n            $ref: '#/paths/~1providers~1Microsoft.DeploymentManager~1operations~1?api-version=2019-11-01-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'\n        insert: []\n        update: []\n        delete: []\npaths:\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/?api-version=2019-11-01-preview:\n    put:\n      tags:\n        - ServiceTopologies\n      operationId: ServiceTopologies_CreateOrUpdate\n      summary: Creates or updates a service topology.\n      description: Synchronously creates a new service topology or updates an existing service topology.\n      requestBody:\n        description: Source topology object defines the resource.\n        required: true\n        x-ms-requestBody-name: serviceTopologyInfo\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceTopologyResource'\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceTopologyResource'\n        default:\n          description: All non-success conditions are handled using the standard Error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: service_topologies\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - ServiceTopologies\n      operationId: ServiceTopologies_Get\n      summary: Gets the service topology.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceTopologyResource'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: service_topologies\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - ServiceTopologies\n      operationId: ServiceTopologies_Delete\n      summary: Deletes the service topology.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n      responses:\n        '200':\n          description: The topology was successfully deleted.\n        '204':\n          description: The topology was not found and the operation is considered success.\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: service_topologies\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/?api-version=2019-11-01-preview:\n    get:\n      tags:\n        - ServiceTopologies\n      operationId: ServiceTopologies_List\n      summary: Lists the service topologies in the resource group.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceTopologiesListResult'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: service_topologies\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/?api-version=2019-11-01-preview:\n    put:\n      tags:\n        - Services\n      operationId: Services_CreateOrUpdate\n      summary: Creates or updates a service in the service topology.\n      description: Synchronously creates a new service or updates an existing service.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n        - $ref: '#/components/parameters/serviceName'\n      requestBody:\n        description: The service object\n        required: true\n        x-ms-requestBody-name: serviceInfo\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceResource'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceResource'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: services\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - Services\n      operationId: Services_Get\n      summary: Gets the service.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n        - $ref: '#/components/parameters/serviceName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceResource'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: services\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - Services\n      operationId: Services_Delete\n      summary: Deletes the service.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n        - $ref: '#/components/parameters/serviceName'\n      responses:\n        '200':\n          description: The service was successfully deleted.\n        '204':\n          description: The service was not found and the operation is considered success.\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: services\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/?api-version=2019-11-01-preview:\n    get:\n      tags:\n        - Services\n      operationId: Services_List\n      summary: Lists the services in the service topology.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceListResult'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: services\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/serviceUnits/{serviceUnitName}/?api-version=2019-11-01-preview:\n    put:\n      tags:\n        - ServiceUnits\n      operationId: ServiceUnits_CreateOrUpdate\n      x-ms-long-running-operation: true\n      summary: Creates or updates a service unit under the service in the service topology.\n      description: This is an asynchronous operation and can be polled to completion using the operation resource returned by this operation.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n        - $ref: '#/components/parameters/serviceName'\n        - $ref: '#/components/parameters/serviceUnitName'\n      requestBody:\n        description: The service unit resource object.\n        required: true\n        x-ms-requestBody-name: serviceUnitInfo\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceUnitResource'\n      responses:\n        '201':\n          description: This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnitResource'\n          headers:\n            Azure-AsyncOperation:\n              schema:\n                type: string\n              description: Contains the status URL on which clients are expected to poll the status of the operation.\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: service_units\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - ServiceUnits\n      operationId: ServiceUnits_Get\n      summary: Gets the service unit.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n        - $ref: '#/components/parameters/serviceName'\n        - $ref: '#/components/parameters/serviceUnitName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnitResource'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: service_units\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - ServiceUnits\n      operationId: ServiceUnits_Delete\n      summary: Deletes the service unit.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n        - $ref: '#/components/parameters/serviceName'\n        - $ref: '#/components/parameters/serviceUnitName'\n      responses:\n        '200':\n          description: The service unit was successfully deleted.\n        '204':\n          description: The service unit was not found and the operation is considered success.\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: service_units\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/serviceUnits/?api-version=2019-11-01-preview:\n    get:\n      tags:\n        - ServiceUnits\n      operationId: ServiceUnits_List\n      summary: Lists the service units under a service in the service topology.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/serviceTopologyName'\n        - $ref: '#/components/parameters/serviceName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnitListResult'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: service_units\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/steps/{stepName}/?api-version=2019-11-01-preview:\n    put:\n      tags:\n        - Steps\n      operationId: Steps_CreateOrUpdate\n      summary: Creates or updates a rollout step with the given step properties.\n      description: Synchronously creates a new step or updates an existing step.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/stepName'\n      requestBody:\n        description: The step object.\n        x-ms-requestBody-name: stepInfo\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StepResource'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StepResource'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: steps\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - Steps\n      operationId: Steps_Get\n      summary: Gets the step.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/stepName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StepResource'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: steps\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - Steps\n      operationId: Steps_Delete\n      summary: Deletes the step.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/stepName'\n      responses:\n        '200':\n          description: The step was successfully deleted.\n        '204':\n          description: The step was not found and the operation is considered success.\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: steps\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/steps/?api-version=2019-11-01-preview:\n    get:\n      tags:\n        - Steps\n      operationId: Steps_List\n      summary: Lists the steps in a resource group.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StepResourceListResult'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: steps\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}/?api-version=2019-11-01-preview:\n    put:\n      tags:\n        - Rollouts\n      operationId: Rollouts_CreateOrUpdate\n      x-ms-long-running-operation: true\n      summary: Creates or updates a rollout.\n      description: This is an asynchronous operation and can be polled to completion using the location header returned by this operation.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/rolloutName'\n      requestBody:\n        description: Source rollout request object that defines the rollout.\n        x-ms-requestBody-name: rolloutRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RolloutRequest'\n      responses:\n        '201':\n          description: This is a long running operation. The operation returns a 201 if the request was successfully registered and basic validation is successful. The response includes an Azure-AsyncOperation header that contains the operation status URL. Clients are expected to poll the status URL for the status of the operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RolloutRequest'\n          headers:\n            Azure-AsyncOperation:\n              schema:\n                type: string\n              description: Contains the status URL on which clients are expected to poll the status of the operation.\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: rollouts\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - Rollouts\n      operationId: Rollouts_Get\n      summary: Gets detailed information of a rollout.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/rolloutName'\n        - $ref: '#/components/parameters/retryAttempt'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rollout'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: rollouts\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - Rollouts\n      operationId: Rollouts_Delete\n      summary: Deletes a rollout resource.\n      description: Only rollouts in terminal state can be deleted.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/rolloutName'\n      responses:\n        '200':\n          description: The rollout was successfully deleted.\n        '204':\n          description: The rollout was not found and the operation is considered success.\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: rollouts\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}/cancel/?api-version=2019-11-01-preview:\n    post:\n      tags:\n        - Rollouts\n      operationId: Rollouts_Cancel\n      summary: Stops a running rollout.\n      description: Only running rollouts can be canceled.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/rolloutName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rollout'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: rollouts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}/restart/?api-version=2019-11-01-preview:\n    post:\n      tags:\n        - Rollouts\n      operationId: Rollouts_Restart\n      summary: Restarts a failed rollout and optionally skips all succeeded steps.\n      description: Only failed rollouts can be restarted.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/rolloutName'\n        - name: skipSucceeded\n          in: query\n          description: If true, will skip all succeeded steps so far in the rollout. If false, will execute the entire rollout again regardless of the current state of individual resources. Defaults to false if not specified.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rollout'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: rollouts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/?api-version=2019-11-01-preview:\n    get:\n      tags:\n        - Rollouts\n      operationId: Rollouts_List\n      summary: Lists the rollouts in a resource group.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RolloutListResult'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: rollouts\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/artifactSources/{artifactSourceName}/?api-version=2019-11-01-preview:\n    put:\n      tags:\n        - ArtifactSources\n      operationId: ArtifactSources_CreateOrUpdate\n      summary: Creates or updates an artifact source.\n      description: Synchronously creates a new artifact source or updates an existing artifact source.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/artifactSourceName'\n      requestBody:\n        description: Source object that defines the resource.\n        x-ms-requestBody-name: artifactSourceInfo\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArtifactSource'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArtifactSource'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: artifact_sources\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - ArtifactSources\n      operationId: ArtifactSources_Get\n      summary: Gets an artifact source.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/artifactSourceName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArtifactSource'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: artifact_sources\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - ArtifactSources\n      operationId: ArtifactSources_Delete\n      summary: Deletes an artifact source.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/artifactSourceName'\n      responses:\n        '200':\n          description: The artifact source was successfully deleted.\n        '204':\n          description: The artifact source was not found and the operation is considered success.\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: artifact_sources\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/artifactSources/?api-version=2019-11-01-preview:\n    get:\n      tags:\n        - ArtifactSources\n      operationId: ArtifactSources_List\n      summary: Lists the artifact sources in a resource group.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArtifactSourceListResult'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: artifact_sources\n      x-stackQL-verb: select\n  /providers/Microsoft.DeploymentManager/operations/?api-version=2019-11-01-preview:\n    get:\n      tags:\n        - Operations\n      operationId: Operations_List\n      summary: Lists the supported operations.\n      parameters: []\n      responses:\n        '200':\n          description: The operations are successfully returned. The response code does not determine if the request which this operation corresponds to is successful. Check the response content for the status and any error information on failures.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationsList'\n        default:\n          description: All non-success conditions are handled using the standard error contract.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: operations\n      x-stackQL-verb: select\nx-stackQL-config:\n  variations:\n    isObjectSchemaImplicitlyUnioned: true\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/-/blob/providers/src/azure/v0.1.1/services/deployment_manager.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/providers/src/azure/v0.1.1/services/deployment_manager.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:50268: path MUST NOT contain a query string"
}