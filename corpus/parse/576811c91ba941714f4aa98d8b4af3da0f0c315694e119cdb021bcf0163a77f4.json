{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/solidusio/solidus"
		},
		"file": {
			"name": "solidus-api.oas.yml",
			"size": 0,
			"path": "api/openapi/solidus-api.oas.yml",
			"byteSize": 206482,
			"content": "openapi: 3.0.3\ninfo:\n  title: Solidus API\n  version: '1.0'\n  description: The standard Solidus API.\n  contact:\n    name: Solidus\n    url: 'https://solidus.io'\n  license:\n    name: ''\nx-stoplight:\n  docs:\n    showModels: false\npaths:\n  /products:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      products:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/product'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List products\n      description: Returns a list of available products.\n      operationId: list-products\n      tags:\n        - Products\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create product\n      description: Creates a product.\n      operationId: create-product\n      tags:\n        - Products\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                product:\n                  $ref: '#/components/schemas/product-input'\n            examples:\n              Example:\n                value:\n                  product:\n                    name: The Majestic Product\n                    price: '19.99'\n                    shipping_category_id: 8\n                    product_properties_attributes:\n                      - property_name: fabric\n                        value: cotton\n                    option_types:\n                      - size\n                      - color\n                    taxon_ids: '2,4'\n                    variants:\n                      - price: 19.99\n                        cost_price: 17\n                        sku: SKU-3\n                        track_inventory: true\n                        options:\n                          - name: size\n                            value: small\n                          - name: color\n                            value: black\n  /orders/mine:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      orders:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/order-small'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List user's orders\n      description: Lists the orders that belong to the current user.\n      operationId: list-user-orders\n      tags:\n        - Orders\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n  '/orders/{number}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get order\n      description: Retrieves an order.\n      operationId: get-order\n      tags:\n        - Orders\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: number\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The order number\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update order\n      description: |-\n        Updates an order.\n\n        To perform this operation the request should be made as the order's owner or with the order token in case of unauthenitcated checkouts (es. guest checkout).\n      operationId: update-order\n      tags:\n        - Orders\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                order:\n                  $ref: '#/components/schemas/order-input'\n            examples:\n              Updating Billing Address:\n                value:\n                  order:\n                    use_billing: true\n                    ship_address_attributes:\n                      name: Jane Doe\n                      address1: 2191  Calico Drive\n                      city: Phoenix\n                      country_id: 22\n                      state_id: 31\n                      zipcode: '85022'\n                      phone: 509-644-9988\n                      company: Acme Inc.\n              Select a Shipment's Shipping Rate:\n                value:\n                  order:\n                    shipments_attributes:\n                      - id: 2\n                        selected_shipping_rate_id: 23\n              Updating Payment:\n                value:\n                  order:\n                    payments_attributes:\n                      - amount: '42.42'\n                        payment_method_id: 1\n                        source_attributes:\n                          gateway_payment_profile_id: super-secret-token-2131m3n13bv3hv1vasda\n        description: ''\n  /orders/current:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: Get current order\n      description: Retrieves the user's current order.\n      operationId: get-current-order\n      tags:\n        - Orders\n      security:\n        - api-key: []\n        - order-token: []\n  /countries:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      countries:\n                        items:\n                          $ref: '#/components/schemas/country'\n                        oneOf:\n                          - type: string\n                          - type: array\n                            items: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List countries\n      description: Lists all available countries.\n      operationId: list-countries\n      tags:\n        - Countries\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n  '/countries/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/country'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get country\n      description: Retrieves a country.\n      operationId: get-country\n      tags:\n        - Countries\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/countries/{country_id}/states':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  states:\n                    items:\n                      $ref: '#/components/schemas/state'\n                    oneOf:\n                      - type: string\n                      - type: array\n                        items: {}\n                  states_required:\n                    type: boolean\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List country states\n      operationId: list-country-states\n      tags:\n        - States\n      description: Retrieves a country's states.\n    parameters:\n      - name: country_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/countries/{country_id}/states/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/state'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get country state\n      operationId: get-country-state\n      tags:\n        - States\n      description: Retrieves a country's state.\n    parameters:\n      - name: country_id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/products/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get product\n      description: Retrieves a product.\n      operationId: get-product\n      tags:\n        - Products\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete product\n      description: Deletes a product.\n      operationId: delete-product\n      tags:\n        - Products\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update product\n      description: Updates a product.\n      operationId: update-product\n      tags:\n        - Products\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                product:\n                  $ref: '#/components/schemas/product-input'\n            examples:\n              Example:\n                value:\n                  product:\n                    name: The Majestic Product\n                    price: '22.22'\n  '/products/{product_id}/images':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  images:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List product images\n      description: Retrieves a product's images.\n      operationId: list-product-images\n      tags:\n        - Images\n      security:\n        - api-key: []\n    parameters:\n      - name: product_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create product image\n      description: |-\n        Creates an image for a product.\n\n        Only users with the `create` permission on `Spree::Image` can perform this action.\n      operationId: create-product-image\n      tags:\n        - Images\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                image:\n                  $ref: '#/components/schemas/image-input'\n  '/products/{product_id}/variants':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      variants:\n                        type: array\n                        items: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List product variants\n      description: Retrieves a product's variants.\n      operationId: list-product-variants\n      tags:\n        - Variants\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: product_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create product variant\n      description: Creates a variant for a product.\n      operationId: create-product-variant\n      tags:\n        - Variants\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                variant:\n                  $ref: '#/components/schemas/variant-input'\n            examples:\n              Example with Option Value Ids:\n                value:\n                  variant:\n                    price: '11.22'\n                    cost_price: '9'\n                    position: 1\n                    track_inventory: true\n                    sku: AWSOME-1122\n                    cost_currency: USD\n                    option_value_ids:\n                      - 1\n                      - 2\n              Example with Option Value Text:\n                value:\n                  variant:\n                    price: '11.22'\n                    cost_price: '9'\n                    position: 1\n                    track_inventory: true\n                    sku: AWSOME-1122\n                    cost_currency: USD\n                    options:\n                      name: Color\n                      value: White\n  '/products/{product_id}/images/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get product image\n      description: Retrieves a product's image.\n      operationId: get-product-image\n      tags:\n        - Images\n      security:\n        - api-key: []\n    parameters:\n      - name: product_id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The id of the Spree::Product'\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The id of the Spree::Image'\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete product image\n      description: Deletes a product's image.\n      operationId: delete-product-image\n      tags:\n        - Images\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update product image\n      description: |-\n        Updates a product's image.\n\n        Only users with the `update` permission on the image can perform this action.\n      operationId: update-product-image\n      tags:\n        - Images\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                image:\n                  $ref: '#/components/schemas/image-input'\n  '/products/{product_id}/variants/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get product variant\n      description: |-\n        **Deprecation Warning**: Use [shallow version](/docs/solidus/87df124706c5f-get-variant) instead\n\n        Retrieves a product's variant.\n      operationId: get-product-variant\n      tags:\n        - Variants\n      security:\n        - api-key: []\n    parameters:\n      - name: product_id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete product variant\n      description: |-\n        **Deprecation Warning**: Use [shallow version](/docs/solidus/82ccaada99139-delete-variant) instead\n\n        Deletes a product's variant.\n      operationId: delete-product-variant\n      tags:\n        - Variants\n      security:\n        - api-key: []\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update product variant\n      description: |-\n        **Deprecation Warning**: Use [shallow version](/docs/solidus/ce338b5f3b940-update-variant) instead\n\n        Updates a product's variant.\n      operationId: update-product-variant\n      tags:\n        - Variants\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                variant:\n                  $ref: '#/components/schemas/variant-input'\n            examples:\n              Example with Option Value Ids:\n                value:\n                  variant:\n                    price: '11.22'\n                    cost_price: '9'\n                    position: 1\n                    track_inventory: true\n                    sku: AWSOME-1122\n                    cost_currency: USD\n                    option_value_ids:\n                      - 1\n                      - 2\n              Example with Option Value Text:\n                value:\n                  variant:\n                    price: '11.22'\n                    cost_price: '9'\n                    position: 1\n                    track_inventory: true\n                    sku: AWSOME-1122\n                    cost_currency: USD\n                    options:\n                      name: Color\n                      value: White\n  /states:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  states:\n                    $ref: '#/components/schemas/state'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List states\n      operationId: list-states\n      tags:\n        - States\n      description: Lists all states in the system.\n  '/states/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/state'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get state\n      description: Retrieves a state.\n      operationId: get-state\n      tags:\n        - States\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n  /variants:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      variants:\n                        $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List variants\n      description: List variants.\n      operationId: list-variants\n      tags:\n        - Variants\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create variant\n      description: |-\n        **Deprecation Warning**: Use [nested version](/docs/solidus/681aa6cb75b1e-create-product-variant) instead\n\n        Creates a variant. Only users with `can :create, Variant` permissions can perform this action.\n      operationId: create-variant\n      tags:\n        - Variants\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                product_id:\n                  type: integer\n                variant:\n                  $ref: '#/components/schemas/variant-input'\n            examples:\n              Example with Option Value Ids:\n                value:\n                  product_id: 1\n                  variant:\n                    price: '11.22'\n                    cost_price: '9'\n                    position: 1\n                    track_inventory: true\n                    sku: AWSOME-1122\n                    cost_currency: USD\n                    option_value_ids:\n                      - 1\n                      - 2\n              Example with Option Value Text:\n                value:\n                  product_id: 1\n                  variant:\n                    price: '11.22'\n                    cost_price: '9'\n                    position: 1\n                    track_inventory: true\n                    sku: AWSOME-1122\n                    cost_currency: USD\n                    options:\n                      name: Color\n                      value: White\n  '/variants/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get variant\n      description: Retrieves a variant.\n      operationId: get-variant\n      tags:\n        - Variants\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete variant\n      description: Deletes a variant.\n      operationId: delete-variant\n      tags:\n        - Variants\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/variant'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update variant\n      description: Updates a variant.\n      operationId: update-variant\n      tags:\n        - Variants\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                variant:\n                  $ref: '#/components/schemas/variant-input'\n            examples:\n              Example with Option Value Ids:\n                value:\n                  variant:\n                    price: '11.22'\n                    cost_price: '9'\n                    position: 1\n                    track_inventory: true\n                    sku: AWSOME-1122\n                    cost_currency: USD\n                    option_value_ids:\n                      - 1\n                      - 2\n              Example with Option Value Text:\n                value:\n                  variant:\n                    price: '11.22'\n                    cost_price: '9'\n                    position: 1\n                    track_inventory: true\n                    sku: AWSOME-1122\n                    cost_currency: USD\n                    options:\n                      name: Color\n                      value: White\n  '/variants/{variant_id}/images':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  images:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List variant images\n      description: Lists a variant's images.\n      operationId: list-variant-images\n      tags:\n        - Images\n      security:\n        - api-key: []\n    parameters:\n      - name: variant_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create variant image\n      description: |-\n        Creates an image for a variant.\n\n        Only users with the `create` permission on `Spree::Image` can perform this action.\n      operationId: create-variant-image\n      tags:\n        - Images\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                image:\n                  $ref: '#/components/schemas/image-input'\n  '/variants/{variant_id}/images/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get variant image\n      description: Retrieves a variant's image.\n      operationId: get-variant-image\n      tags:\n        - Images\n      security:\n        - api-key: []\n    parameters:\n      - name: variant_id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The id of the Spree::Variant'\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The id of the Spree::Image'\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete variant image\n      description: Deletes a variant's image.\n      operationId: delete-variant-image\n      tags:\n        - Images\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/image'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update variant image\n      description: |-\n        Updates a variant's image.\n\n        Only users with the `update` permission on the image can perform this action.\n      operationId: update-variant-image\n      tags:\n        - Images\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                image:\n                  $ref: '#/components/schemas/image-input'\n  '/shipments/{shipment_number}/estimated_rates':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  shipping_rates:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/shipping-rate'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List shipment estimated rates\n      description: Lists a shipment's estimated rates.\n      operationId: list-shipment-estimated-rates\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: shipment_number\n        in: path\n        required: true\n        schema:\n          type: string\n  /shipments/mine:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      shipments:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/shipment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List user's shipments\n      description: Lists the current user's shipments.\n      operationId: list-user-shipments\n      tags:\n        - Shipments\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n  '/users/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get user\n      description: Retrieves a user.\n      operationId: get-user\n      tags:\n        - Users\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Spree::User'\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete user\n      description: Deletes a user.\n      operationId: delete-user\n      tags:\n        - Users\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update user\n      description: |-\n        Updates a user.\n\n        Only users with the `update` permission on the user can perform this action.\n      operationId: update-user\n      tags:\n        - Users\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user:\n                  $ref: '#/components/schemas/user-input'\n  '/users/{user_id}/address_book':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address-book'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get user address book\n      operationId: get-user-address-book\n      description: Retrieves a user's address book.\n      tags:\n        - Address books\n      security:\n        - api-key: []\n    parameters:\n      - name: user_id\n        in: path\n        required: true\n        schema:\n          type: string\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address-book'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Remove address from user address book\n      description: |-\n        Removes an address from a user's address book.\n\n        **Note:** Rather than delete a `Spree::UserAddress` record this action set its `archived` attribute to `true`.\n      operationId: remove-address-from-user-address-book\n      tags:\n        - Address books\n      parameters:\n        - in: query\n          name: address_id\n          schema:\n            type: integer\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address-book'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update user address book\n      operationId: update-user-address-book\n      tags:\n        - Address books\n      description: |-\n        Updates a user's address book.\n\n        **Note:** if the passed `id` matches an existing `address` a new `Spree::Address` record will be created and the matched `address` `archived` on `Spree::UserAddress`. For a similar logic, if the passed `id` matches an existing `address` which is in `archived` state, the `Spree::UserAddress#archived` record will be restored to `false`.\n        See `user_address_book.rb` for further information.\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/address-book-input'\n  '/users/{user_id}/credit_cards':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      credit_cards:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/credit-card'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List user credit cards\n      description: Lists a user's credit cards.\n      operationId: list-user-credit-cards\n      tags:\n        - Credit cards\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: user_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/addresses/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get checkout address\n      description: Retrieves a checkout's address.\n      operationId: get-checkout-address\n      tags:\n        - Addresses\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update checkout address\n      description: Updates a checkout's address.\n      operationId: update-checkout-address\n      tags:\n        - Addresses\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/address-input'\n            examples:\n              Example with state_id:\n                value:\n                  address:\n                    name: Jane Doe\n                    address1: 2191  Calico Drive\n                    city: Phoenix\n                    country_id: 22\n                    state_id: 31\n                    zipcode: '85022'\n                    phone: 509-644-9988\n                    company: Acme Inc.\n              Example with state_name:\n                value:\n                  address:\n                    name: Jane Doe\n                    address1: 2191  Calico Drive\n                    city: Phoenix\n                    country_id: 22\n                    state_name: AZ\n                    zipcode: '85022'\n                    phone: 509-644-9988\n                    company: Acme Inc.\n  '/checkouts/{checkout_id}/payments':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      payments:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List checkout payments\n      description: 'Lists a checkout''s payments. The list of payments is only visible by the checkout''s owner and by users authorized to see the order, eg. users with admin role. '\n      operationId: list-checkout-payments\n      tags:\n        - Payments\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create checkout payment\n      description: Creates a new payment for a checkout. Only the checkout's owner and users that can create a payment (eg. users with admin role) are allowed to perform this action.\n      operationId: create-checkout-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                payment:\n                  $ref: '#/components/schemas/payment-input'\n            examples:\n              Example without a payment source:\n                value:\n                  payment:\n                    amount: '42.42'\n                    payment_method_id: 1\n              Example with a payment source:\n                value:\n                  payment:\n                    amount: '42.42'\n                    payment_method_id: 1\n                    source_attributes:\n                      gateway_payment_profile_id: super-secret-token-2131m3n13bv3hv1vasda\n        description: |-\n          This requests only accepts available Payment Methods in the `payment_method_id` field.\n\n          The Payment Methods available to users for creating a new payment are the ones with both attributes `available_to_users` and `active` set to `true`.\n  '/checkouts/{checkout_id}/payments/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get checkout payment\n      description: Gets a checkout's payment.\n      operationId: get-checkout-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: The payment id\n        schema:\n          type: string\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '403':\n          description: 'Forbidden  '\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update checkout payment\n      description: 'Updates a checkout''s payment. Please note that this action can be done by users with the admin permissions on Payments (eg. users with the admin role). Only pending payment can be updated. '\n      operationId: update-checkout-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                payment:\n                  $ref: '#/components/schemas/payment-input'\n            examples:\n              Example:\n                value:\n                  payment:\n                    amount: '12.10'\n  '/checkouts/{checkout_id}/return_authorizations':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      return_authorizations:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List checkout return authorizations\n      description: Lists a checkout's return authorizations.\n      operationId: list-checkout-return-authorization\n      tags:\n        - Return authorizations\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create checkout return authorization\n      description: |-\n        Creates a return authorization for a checkout.\n\n        Only users with the `create` permission on `Spree::RetrunAuthorization` can perform this action.\n      operationId: create-checkout-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                return_authorization:\n                  $ref: '#/components/schemas/return-authorization-input'\n  '/checkouts/{checkout_id}/return_authorizations/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get checkout return authorization\n      description: Gets a checkout's return authorization.\n      operationId: get-checkout-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Spree::ReturnAuthorization'\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete checkout return authorization\n      description: Deletes a checkout's return authorization.\n      operationId: delete-checkout-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update checkout return authorization\n      description: |-\n        Updates a checkout's return authorization.\n\n        Only users with the `update` permission on the return authorization can perform this action.\n      operationId: update-checkout-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                return_authorization:\n                  $ref: '#/components/schemas/return-authorization-input'\n  '/orders/{order_id}/customer_returns/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get order customer return\n      description: Gets an orders customer return.\n      operationId: get-order-customer-return\n      tags:\n        - Customer returns\n      security:\n        - api-key: []\n    parameters:\n      - name: order_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: The id of the customer return\n        schema:\n          type: string\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer-return'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update order customer return\n      description: |-\n        Updates an orders customer return.\n\n        Only users with the `update` permission on the customer return can perform this action.\n      operationId: update-order-customer-return\n      tags:\n        - Customer returns\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                customer_return:\n                  $ref: '#/components/schemas/customer-return-input'\n      security:\n        - api-key: []\n  /orders:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      orders:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/order-small'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List orders\n      description: Lists all orders.\n      operationId: list-orders\n      tags:\n        - Orders\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create order\n      description: Creates a new order.\n      operationId: create-order\n      tags:\n        - Orders\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                order:\n                  $ref: '#/components/schemas/order-input'\n            examples:\n              Example:\n                value:\n                  order:\n                    email: string\n                    line_items_attributes:\n                      - quantity: 1\n                        variant_id: 22\n  '/orders/{order_number}/addresses/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get order address\n      description: Retrieves an order's address.\n      operationId: get-order-address\n      tags:\n        - Addresses\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        description: The id of the order's address that we want to retrieve\n        schema:\n          type: string\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update order address\n      description: Updates an order's address.\n      operationId: update-order-address\n      tags:\n        - Addresses\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/address-input'\n            examples:\n              Example with state_id:\n                value:\n                  address:\n                    name: Jane Doe\n                    address1: 2191  Calico Drive\n                    city: Phoenix\n                    country_id: 22\n                    state_id: 31\n                    zipcode: '85022'\n                    phone: 509-644-9988\n                    company: Acme Inc.\n              Example with state_name:\n                value:\n                  address:\n                    name: Jane Doe\n                    address1: 2191  Calico Drive\n                    city: Phoenix\n                    country_id: 22\n                    state_name: AZ\n                    zipcode: '85022'\n                    phone: 509-644-9988\n                    company: Acme Inc.\n  '/orders/{order_number}/payments':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      payments:\n                        items:\n                          $ref: '#/components/schemas/payment'\n                        oneOf:\n                          - type: string\n                          - type: array\n                            items: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List order payments\n      description: Lists an order's payments.\n      operationId: list-order-payments\n      tags:\n        - Payments\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create order payment\n      description: Creates a new payment for a checkout. Only the order's owner and users that can create a payment (eg. users with admin role) are allowed to perform this action.\n      operationId: create-order-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                payment:\n                  $ref: '#/components/schemas/payment-input'\n            examples:\n              Example without a payment source:\n                value:\n                  payment:\n                    amount: '42.42'\n                    payment_method_id: 1\n              Example with a payment source:\n                value:\n                  payment:\n                    amount: '42.42'\n                    payment_method_id: 1\n                    source_attributes:\n                      gateway_payment_profile_id: super-secret-token-2131m3n13bv3hv1vasda\n        description: |-\n          This requests only accepts available Payment Methods in the `payment_method_id` field.\n\n          The Payment Methods available to users for creating a new payment are the ones with both attributes `available_to_users` and `active` set to `true`.\n  '/orders/{order_number}/payments/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get order payment\n      description: Retrieves an orer's payment.\n      operationId: get-order-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update order payment\n      description: 'Updates a checkout''s payment. Please note that this action can be done by users with the admin permissions on Payments (eg. users with the admin role). Only pending payment can be updated. '\n      operationId: update-order-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                payment:\n                  $ref: '#/components/schemas/payment-input'\n            examples:\n              Example:\n                value:\n                  payment:\n                    amount: '12.10'\n  '/orders/{order_number}/return_authorizations':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      return_authorizations:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List order return authorizations\n      description: Lists an order's return authorizations.\n      operationId: list-order-return-authorizations\n      tags:\n        - Return authorizations\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create order return authorization\n      description: |-\n        Creates a return authorization for an order.\n\n        Only users with the `create` permission on `Spree::ReturnAuthorization` can perform this action.\n      operationId: create-order-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                return_authorization:\n                  $ref: '#/components/schemas/return-authorization-input'\n  '/orders/{order_number}/return_authorizations/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get order return authorization\n      description: Retrieves an order's return authorization.\n      operationId: get-order-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The Order number\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Spree::ReturnAuthorization'\n    delete:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete order return authorization\n      description: Deletes an order's return authorization.\n      operationId: delete-order-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update order return authorization\n      description: |-\n        Updates an order's return authorization.\n\n        Only users with the `update` permission on the return authorization can perform this action.\n      operationId: update-order-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                return_authorization:\n                  $ref: '#/components/schemas/return-authorization-input'\n  /config:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  default_country_iso:\n                    type: string\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: Get system configuration\n      description: Retrieves the system's configuration.\n      operationId: get-config\n      tags:\n        - Configuration\n      security:\n        - api-key: []\n  /config/money:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  symbol:\n                    type: string\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: Get money configuration\n      description: Gets the system's money configuration.\n      operationId: get-money-config\n      tags:\n        - Configuration\n      security:\n        - api-key: []\n  /option_types:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/option-type'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List option types\n      description: Lists the system's option types.\n      operationId: list-option-types\n      tags:\n        - Option types\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-type'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create option type\n      description: Creates an option type.\n      operationId: create-option-type\n      tags:\n        - Option types\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/option-type-input'\n  '/option_types/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-type'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get option type\n      description: Retrieve an option type.\n      operationId: get-option-type\n      tags:\n        - Option types\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-type'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Delete option type\n      description: Deletes an option type.\n      operationId: delete-option-type\n      tags:\n        - Option types\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-type'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update option type\n      description: Updates an option type.\n      operationId: update-option-type\n      tags:\n        - Option types\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/option-type'\n  /option_values:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List option values\n      description: Lists the system's option values.\n      operationId: list-option-values\n      tags:\n        - Option values\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create option value\n      description: |-\n        **Deprecation Warning**: Use [nested version](/docs/solidus/810154673c613-create-option-type-value) instead\n\n        Creates an option value.\n\n        Only users with the `create` permission on `Spree::OptionValue` can perform this action.\n      operationId: create-option-value\n      tags:\n        - Option values\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                option_value:\n                  $ref: '#/components/schemas/option-value-input'\n  '/option_values/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get option value\n      description: Retrieves an option value.\n      operationId: get-option-value\n      tags:\n        - Option values\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Spree::OptionValue'\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      description: Deletes an option value.\n      summary: Delete option value\n      operationId: delete-option-value\n      tags:\n        - Option values\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update option value\n      description: |-\n        Updates an option value.\n\n        Only users with the `update` permission on the option value can perform this action.\n      operationId: update-option-value\n      tags:\n        - Option values\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                option_value:\n                  $ref: '#/components/schemas/option-value-input'\n        description: ''\n  '/option_types/{option_type_id}/option_values':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List option type values\n      description: Retrieves an option type's option values.\n      operationId: list-option-type-values\n      tags:\n        - Option values\n      security:\n        - api-key: []\n    parameters:\n      - name: option_type_id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Spree::OptionType'\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create option type value\n      description: |-\n        Creates an option value for a type.\n\n        Only users with the `create` permission on `Spree::OptionValue` can perform this action.\n      operationId: create-option-type-value\n      tags:\n        - Option values\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                option_value:\n                  $ref: '#/components/schemas/option-value-input'\n  '/option_types/{option_type_id}/option_values/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get option type value\n      description: |-\n        **Deprecation Warning**: Use [shallow version](/docs/solidus/cbbc403ed08a3-get-option-value) instead\n\n        Retrieves an option type's value.\n      operationId: get-option-type-value\n      tags:\n        - Option values\n      security:\n        - api-key: []\n    parameters:\n      - name: option_type_id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Spree::OptionType'\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The ID of the OptionValue\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete option type value\n      description: |-\n        **Deprecation Warning**: Use [shallow version](/docs/solidus/0742e63219b1f-delete-option-value) instead\n\n        Deletes an option type's value.\n      operationId: delete-option-type-value\n      tags:\n        - Option values\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/option-value'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update option type value\n      description: |-\n        **Deprecation Warning**: Use [shallow version](/docs/solidus/b43f889175ebb-update-option-value) instead\n\n        Updates an option type's value.\n\n        Only users with the `update` permission on the option value can perform this action.\n      operationId: update-option-type-value\n      tags:\n        - Option values\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                option_value:\n                  $ref: '#/components/schemas/option-value-input'\n  '/products/{product_id}/product_properties':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      product_properties:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/product-property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List product properties\n      description: Lists a product's properties.\n      operationId: list-product-properties\n      tags:\n        - Product properties\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: product_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product-property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create product property\n      description: |-\n        Creates a product property.\n\n        Only users with the `create` permission on `Spree::ProductProperty` can perform this action.\n      operationId: create-product-property\n      tags:\n        - Product properties\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                product_property:\n                  $ref: '#/components/schemas/product-property-input'\n            examples:\n              Example:\n                value:\n                  product_property:\n                    property_name: Fit\n                    value: Loose\n  '/products/{product_id}/product_properties/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product-property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get product property\n      description: Retrieves a product's property.\n      operationId: get-product-property\n      tags:\n        - Product properties\n      security:\n        - api-key: []\n    parameters:\n      - name: product_id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product-property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete product property\n      description: Deletes a product's property.\n      operationId: delete-product-property\n      tags:\n        - Product properties\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product-property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update product property\n      description: |-\n        Updates a product's property.\n\n        Only users with the `update` permission on the product property can perform this action.\n      operationId: update-product-property\n      tags:\n        - Product properties\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                product_property:\n                  $ref: '#/components/schemas/product-property-input'\n            examples:\n              Example:\n                value:\n                  product_property:\n                    value: Regular\n  /properties:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      properties:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List properties\n      description: Lists the defined properties.\n      operationId: list-properties\n      tags:\n        - Properties\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create property\n      description: |-\n        Creates a property.\n\n        Only users with the `create` permission on `Spree::Propery` can perform this action.\n      operationId: create-property\n      tags:\n        - Properties\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                property:\n                  $ref: '#/components/schemas/property-input'\n  '/properties/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get property\n      description: Retrieves a property.\n      operationId: get-property\n      tags:\n        - Properties\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The id of the Spree::Property'\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete property\n      description: Deletes a property.\n      operationId: delete-property\n      tags:\n        - Properties\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/property'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update property\n      description: |-\n        Updates a property.\n\n        Only users with the `update` permission on the property can perform this action.\n      operationId: update-property\n      tags:\n        - Properties\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                property:\n                  $ref: '#/components/schemas/property-input'\n  '/inventory_units/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get inventory unit\n      description: Retrieves an inventory unit.\n      operationId: get-inventory-unit\n      tags:\n        - Inventory units\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inventory-unit'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update inventory unit\n      description: Updates an inventory unit.\n      operationId: update-inventory-unit\n      tags:\n        - Inventory units\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/inventory-unit-input'\n  /stock_locations:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      stock_locations:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/stock-location'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List stock location\n      description: Lists the stock locations.\n      operationId: list-stock-locations\n      tags:\n        - Stock locations\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-location'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create stock location\n      description: |-\n        Creates a stock location.\n\n        Only users with the `create` permission on `Spree::StockLocation` can perform this action.\n      operationId: create-stock-location\n      tags:\n        - Stock locations\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                stock_location:\n                  $ref: '#/components/schemas/stock-location-input'\n            examples:\n              Example:\n                value:\n                  stock_location:\n                    name: North Pole\n                    active: true\n  '/stock_locations/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get stock location\n      description: Get a stock location.\n      operationId: get-stock-location\n      tags:\n        - Stock locations\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The id of the stock location\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-location'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete stock location\n      description: Deletes a stock location.\n      operationId: delete-stock-location\n      tags:\n        - Stock locations\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-location'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update stock location\n      description: |-\n        Updates a stock location.\n\n        Only users with the `update` permission on the stock location can perform this action.\n      operationId: update-stock-location\n      tags:\n        - Stock locations\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                stock_location:\n                  $ref: '#/components/schemas/stock-location-input'\n            examples:\n              Example:\n                value:\n                  stock_location:\n                    active: false\n  '/stock_locations/{stock_location_id}/stock_items':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      stock_items:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/stock-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List stock location items\n      description: Lists a stock location's items.\n      operationId: list-stock-location-items\n      tags:\n        - Stock items\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: stock_location_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create stock location item\n      description: |-\n        Creates a stock item for a stock location.\n\n        Only users with the `create` permission on `Spree::StockItem` can perform this action.\n      operationId: create-stock-location-item\n      tags:\n        - Stock items\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                stock_item:\n                  $ref: '#/components/schemas/stock-item-input'\n  '/stock_locations/{stock_location_id}/stock_items/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get stock location item\n      description: Retrieves a stock location's item.\n      operationId: get-stock-location-item\n      tags:\n        - Stock items\n      security:\n        - api-key: []\n    parameters:\n      - name: stock_location_id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Spree::StockLocation'\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Spree::StockItem'\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete stock location item\n      description: Deletes a stock location's item.\n      operationId: delete-stock-location-item\n      tags:\n        - Stock items\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update stock location item\n      description: |-\n        Updates a stock location's item.\n\n        Only users with the `update` permission on the stock item can perform this action.\n      operationId: update-stock-location-item\n      tags:\n        - Stock items\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                stock_item:\n                  $ref: '#/components/schemas/stock-item-input'\n  '/stock_locations/{stock_location_id}/stock_movements':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      stock_movements:\n                        $ref: '#/components/schemas/stock-movement'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List stock location movements\n      description: Lists a stock location's movements.\n      operationId: list-stock-location-movements\n      tags:\n        - Stock movements\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: stock_location_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-movement'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create stock location movement\n      description: Creates a stock movement for a stock location.\n      operationId: create-stock-location-movement\n      tags:\n        - Stock movements\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/stock-movement-input'\n  '/stock_locations/{stock_location_id}/stock_movements/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get stock location movement\n      description: Retrieves a stock location's movement.\n      operationId: get-stock-location-movement\n      tags:\n        - Stock movements\n      security:\n        - api-key: []\n    parameters:\n      - name: stock_location_id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n  /stores:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  stores:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/store'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List stores\n      description: Lists all stores in the system.\n      operationId: list-stores\n      tags:\n        - Stores\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/store'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create store\n      description: Creates a store.\n      operationId: create-store\n      tags:\n        - Stores\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    code:\n                      type: string\n                - $ref: '#/components/schemas/store-input'\n  '/stores/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get store\n      description: Retrieves a store.\n      operationId: get-store\n      tags:\n        - Stores\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/store'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete store\n      description: Deletes a store.\n      operationId: delete-store\n      tags:\n        - Stores\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/store'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update store\n      description: Updates a store.\n      operationId: update-store\n      tags:\n        - Stores\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/store-input'\n  /taxonomies:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      taxonomies:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/taxonomy'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List taxonomies\n      description: Lists the taxonomies.\n      operationId: list-taxonomies\n      tags:\n        - Taxonomies\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/taxonomy'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create taxonomy\n      description: |-\n        Creates a taxonomy.\n\n        Only users with the `create` permission on `Spree::Taxonomy` can perform this action.\n\n        Creating a taxonomy, its root taxon with the same name will be automatically created. The root taxon's information will be available in the response.\n      operationId: create-taxonomy\n      tags:\n        - Taxonomies\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                taxonomy:\n                  $ref: '#/components/schemas/taxonomy-input'\n            examples:\n              Example:\n                value:\n                  taxonomy:\n                    name: Colors\n  '/taxonomies/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get taxonomy\n      description: Retrieves a taxonomy.\n      operationId: get-taxonomy\n      tags:\n        - Taxonomies\n      security:\n        - api-key: []\n      parameters:\n        - schema:\n            type: string\n            default: nested\n          in: query\n          name: set\n          description: When `set=nested` it will recoursively return all the taxons of that taxonomy\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The id of the taxonomy\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/taxonomy'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete taxonomy\n      description: Deletes a taxonomy.\n      operationId: delete-taxonomy\n      tags:\n        - Taxonomies\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/taxonomy'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update taxonomy\n      description: |-\n        Updates a taxonomy.\n\n        Only users with the `update` permission on the taxonomy can perform this action.\n      operationId: update-taxonomy\n      tags:\n        - Taxonomies\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                taxonomy:\n                  $ref: '#/components/schemas/taxonomy-input'\n            examples:\n              Example:\n                value:\n                  taxonomy:\n                    name: Colours\n  '/taxonomies/{taxonomy_id}/taxons':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      taxons:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/taxon'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List taxonomy taxons\n      description: Lists a taxonomy's taxons.\n      operationId: list-taxonomy-taxons\n      tags:\n        - Taxons\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: taxonomy_id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The id of the taxonomy for which the new taxon will be added\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/taxon'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create taxonomy taxon\n      description: |-\n        Creates a taxon for a taxonomy.\n\n        Only users with the `create` permission on `Spree::Taxon` can perform this action.\n      operationId: create-taxonomy-taxon\n      tags:\n        - Taxons\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                taxon:\n                  $ref: '#/components/schemas/taxon-input'\n            examples:\n              Example:\n                value:\n                  taxon:\n                    name: Colors\n                    parent_id: 22\n  '/taxonomies/{taxonomy_id}/taxons/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get taxonomy taxon\n      description: Retrieves a taxonomy's taxon.\n      operationId: get-taxonomy-taxon\n      tags:\n        - Taxons\n      security:\n        - api-key: []\n    parameters:\n      - name: taxonomy_id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The id of the taxon's taxonomy\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The id of the taxon\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/taxon'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete taxonomy taxon\n      description: Deletes a taxonomy's taxon.\n      operationId: delete-taxonomy-taxon\n      tags:\n        - Taxons\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/taxon'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update taxonomy taxon\n      description: |-\n        Updates a taxonomy's taxon.\n\n        Only users with the `update` permission on the taxon can perform this action.\n      operationId: update-taxonomy-taxon\n      tags:\n        - Taxons\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                taxon:\n                  $ref: '#/components/schemas/taxon-input'\n            examples:\n              Example:\n                value:\n                  taxon:\n                    name: Colours\n  /taxons:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      taxons:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/taxon'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List taxons\n      description: Lists all taxons.\n      operationId: list-taxons\n      tags:\n        - Taxons\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n        - schema:\n            type: boolean\n          in: query\n          name: without_children\n          description: 'When set to `true`, it won''t recursively return all the taxons'' children.'\n      security:\n        - api-key: []\n  /users:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      users:\n                        type: array\n                        items: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List users\n      description: Lists all users.\n      operationId: list-users\n      tags:\n        - Users\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create user\n      description: |\n        Creates a user.\n\n        Only users with the `create` permission on `Spree::User` can perform this action.\n      operationId: create-user\n      tags:\n        - Users\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user:\n                  $ref: '#/components/schemas/user-input'\n        description: ''\n  /zones:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      zones:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/zone'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List zones\n      description: Lists all zones.\n      operationId: list-zones\n      tags:\n        - Zones\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/zone'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create zone\n      description: |-\n        Creates a zone.\n\n        Only users with the `create` permission on `Spree::Zone` can perform this action.\n      operationId: create-zone\n      tags:\n        - Zones\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                zone:\n                  $ref: '#/components/schemas/zone-input'\n            examples:\n              Example:\n                value:\n                  zone:\n                    name: North Pole\n                    description: The coldest one.\n                    zone_members_attributes:\n                      - zoneable_type: 'Spree::Country'\n                        zoneable_id: 1\n  '/zones/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/zone'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get zone\n      description: Retrieves a zone.\n      operationId: get-zone\n      tags:\n        - Zones\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The ID of the zone we want to update\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/zone'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete zone\n      description: Deletes a zone.\n      operationId: delete-zone\n      tags:\n        - Zones\n      security:\n        - api-key: []\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/zone'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update zone\n      description: |-\n        Updates a zone.\n\n        Only users with the `update` permission on the zone can perform this action.\n      operationId: update-zone\n      tags:\n        - Zones\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                zone:\n                  $ref: '#/components/schemas/zone-input'\n            examples:\n              Example:\n                value:\n                  zone:\n                    description: Brrr. The coldest one.\n  '/promotions/{id}':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/promotion'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Get promotion\n      description: Retrieves a promotion.\n      operationId: get-promotion\n      tags:\n        - Promotions\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n  /store_credit_events/mine:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      store_credit_events:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/store-credit-event'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List current user's store credit events\n      description: Lists the current user's store credit events.\n      operationId: list-current-user-store-credit-events\n      tags:\n        - Store credit events\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n      security:\n        - api-key: []\n  '/orders/{order_number}/coupon_codes/{id}':\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon-code-handler'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          description: Unprocessable Entity (WebDAV)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon-code-handler'\n      summary: Delete order coupon code\n      description: |-\n        Deletes an order's coupon code.\n\n        To perform this operation the request should be made as the order's owner or with the order token in case of unauthenitcated checkouts (es. guest checkout).\n      operationId: delete-order-coupon-code\n      tags:\n        - Coupon codes\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The order number\n      - name: id\n        in: path\n        required: true\n        description: This is the coupon code\n        schema:\n          type: string\n  '/orders/{order_number}/line_items':\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/line-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create order line item\n      description: |-\n        Create a line item in an order not yet completed.\n\n        To perform this operation the request should be made as the order owner or with the order token in case of unauthenitcated checkouts (es. guest checkout).\n      operationId: create-order-line-item\n      tags:\n        - Line items\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                line_item:\n                  $ref: '#/components/schemas/line-item-input'\n            examples:\n              Example:\n                value:\n                  line_item:\n                    quantity: 1\n                    variant_id: 22\n        description: ''\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/line_items/{id}':\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/line-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete order line item\n      description: Deletes an order's line item.\n      operationId: delete-order-line-item\n      tags:\n        - Line items\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The order number\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The id of the line item to update\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/line-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update order line item\n      description: |-\n        Update line item's information in an order not yet completed.\n\n        To perform this operation the request should be made as the order owner or with the order token in case of unauthenitcated checkouts (es. guest checkout).\n      operationId: update-order-line-item\n      tags:\n        - Line items\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                line_item:\n                  $ref: '#/components/schemas/line-item-input'\n            examples:\n              example-1:\n                value:\n                  line_item:\n                    quantity: 1\n  '/stock_items/{id}':\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete stock item\n      description: Deletes a stock item.\n      operationId: delete-stock-item\n      tags:\n        - Stock items\n      security:\n        - api-key: []\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: 'The ID of the Stock::Item'\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stock-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update stock item\n      description: |-\n        Updates a stock item.\n\n        Only users with the `update` permission on the stock item can perform this action.\n      operationId: update-stock-item\n      tags:\n        - Stock items\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                stock_item:\n                  $ref: '#/components/schemas/stock-item-input'\n  '/checkouts/{id}':\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update checkout\n      description: |-\n        Updates a checkout and moves the order to the next checkout step. A request with an empty body is legit and only tries to move the order to the next step.\n\n        To perform this operation the request should be made as the order owner or with the order token in case of unauthenitcated checkouts (es. guest checkout).\n\n        **Note:** In addition to the order update, this action always attempts to perform an order state machine transition which results in a `422` response if it cannot be transitioned.\n      operationId: update-checkout\n      tags:\n        - Checkouts\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                order:\n                  $ref: '#/components/schemas/order-input'\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The order number\n  '/credit_cards/{id}':\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/credit-card'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update credit card\n      description: Updates a credit card.\n      operationId: update-credit-card\n      tags:\n        - Credit cards\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/credit-card-update-input'\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/shipments/{number}':\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/shipment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update shipment\n      description: |-\n        Updates a shipment.\n\n        Please note that this request can be only performed by users with the `update` permission on the shipment.\n      operationId: update-shipment\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                shipment:\n                  $ref: '#/components/schemas/shipment-input'\n            examples:\n              Example:\n                value:\n                  shipment:\n                    tracking: tracking-identifier-provided-by-shipping-provider\n    parameters:\n      - name: number\n        in: path\n        required: true\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/payments/{payment_id}/authorize':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Authorize checkout payment\n      description: Authorizes a checkout's payment.\n      operationId: authorize-checkout-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/payments/{payment_id}/capture':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Capture checkout payment\n      description: Captures a checkout's payment.\n      operationId: capture-checkout-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/payments/{payment_id}/credit':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Credit checkout payment\n      description: Credits a checkout's payment.\n      operationId: credit-checkout-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/payments/{payment_id}/purchase':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Purchase checkout payment\n      description: Purchases a checkout's payment.\n      operationId: purchase-checkout-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/payments/{payment_id}/void':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Void checkout payment\n      description: Voids a checkout's payment.\n      operationId: void-checkout-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/return_authorizations/{return_authorization_id}/cancel':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Cancel checkout return authorization\n      description: Cancels a checkout's return authorization.\n      operationId: cancel-checkout-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: return_authorization_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/advance':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Advance checkout\n      description: Advances a checkout to the furthest possible state.\n      operationId: advance-checkout\n      tags:\n        - Checkouts\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/complete':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Complete checkout\n      description: Completes a checkout.\n      operationId: complete-checkout\n      tags:\n        - Checkouts\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        $ref: '#/components/requestBodies/complete-checkoutBody'\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/next':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Transition checkout\n      description: Transitions a checkout to the next state.\n      operationId: transition-checkout\n      tags:\n        - Checkouts\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        $ref: '#/components/requestBodies/complete-checkoutBody'\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/line_items':\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/line-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create checkout line item\n      description: |-\n        Create a line item in an checkout not yet completed.\n\n        To perform this operation the request should be made as the order owner or with the order token in case of unauthenitcated checkouts (es. guest checkout).\n\n        It is not possible to add a line item to a completed order.\n      operationId: create-checkout-line-item\n      tags:\n        - Line items\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                line_item:\n                  $ref: '#/components/schemas/line-item-input'\n            examples:\n              Example:\n                value:\n                  line_item:\n                    quantity: 1\n                    variant_id: 22\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n  '/checkouts/{checkout_id}/line_items/{id}':\n    delete:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/line-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/delete-restriction'\n      summary: Delete checkout line item\n      description: Deletes a checkout's line item.\n      operationId: delete-checkout-line-item\n      tags:\n        - Line items\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: checkout_id\n        in: path\n        required: true\n        description: The order number\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The id of the line item to update\n    patch:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/line-item'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update checkout line item\n      description: |-\n        Update line item's information in an checkout not yet completed.\n\n        To perform this operation the request should be made as the order owner or with the order token in case of unauthenitcated checkouts (es. guest checkout).\n\n        It is not possible to add a line item to a completed order.\n      operationId: update-checkout-line-item\n      tags:\n        - Line items\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                line_item:\n                  $ref: '#/components/schemas/line-item-input'\n            examples:\n              Example:\n                value:\n                  line_item:\n                    quantity: 2\n  /classifications:\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Update classification\n      description: |-\n        Updates a classification.\n\n        This method only updates the classification position.\n      operationId: update-classification\n      tags:\n        - Classifications\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                product_id:\n                  type: integer\n                taxon_id:\n                  type: integer\n                position:\n                  type: integer\n  '/orders/{order_number}/cancel':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order-big'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Cancel order\n      description: Cancels an order.\n      operationId: cancel-order\n      tags:\n        - Orders\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/empty':\n    put:\n      responses:\n        '204':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Empty order\n      description: Empties an order's cart.\n      operationId: empty-order\n      tags:\n        - Orders\n      security:\n        - api-key: []\n        - order-token: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/payments/{payment_id}/authorize':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Authorize order payment\n      description: Authorizes an order's payment.\n      operationId: authorize-order-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/payments/{payment_id}/capture':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Capture order payment\n      description: Captures an order's payment.\n      operationId: capture-order-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/payments/{payment_id}/credit':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Credit order payment\n      description: Credits an order's payment.\n      operationId: credit-order-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/payments/{payment_id}/purchase':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Purchase order payment\n      description: Purchases an order's payment.\n      operationId: purchase-order-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/payments/{payment_id}/void':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Void order payment\n      description: Voids an order's payment.\n      operationId: void-order-payment\n      tags:\n        - Payments\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: payment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/return_authorizations/{return_authorization_id}/cancel':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/return-authorization'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Cancel order return authorization\n      description: Cancels an order's return authorization.\n      operationId: cancel-order-return-authorization\n      tags:\n        - Return authorizations\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: return_authorization_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/shipments/{shipment_number}/add':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/shipment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Add shipment item\n      description: Adds an item to a shipment.\n      operationId: add-shipment-item\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n      requestBody:\n        $ref: '#/components/requestBodies/add-shipment-itemBody'\n    parameters:\n      - name: shipment_number\n        in: path\n        required: true\n        schema:\n          type: string\n  '/shipments/{shipment_number}/ready':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/shipment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Ready shipment\n      description: Readies a shipment for processing.\n      operationId: ready-shipment\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n    parameters:\n      - name: shipment_number\n        in: path\n        required: true\n        schema:\n          type: string\n  '/shipments/{shipment_id}/remove':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/shipment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Remove shipment item\n      description: Removes an item from a shipment.\n      operationId: remove-shipment-id\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n      requestBody:\n        $ref: '#/components/requestBodies/add-shipment-itemBody'\n    parameters:\n      - name: shipment_id\n        in: path\n        required: true\n        schema:\n          type: string\n  '/shipments/{shipment_number}/select_shipping_method':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/shipment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: Select shipment shipping method\n      description: Selects the shipping method for a shipment.\n      operationId: select-shipment-shipping-method\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                shipping_method_id:\n                  type: integer\n    parameters:\n      - name: shipment_number\n        in: path\n        required: true\n        schema:\n          type: string\n  '/shipments/{shipment_number}/ship':\n    put:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/shipment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Ship shipment\n      description: Ships a shipment.\n      operationId: ship-shipment\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                send_mailer:\n                  type: boolean\n    parameters:\n      - name: shipment_number\n        in: path\n        required: true\n        schema:\n          type: string\n  '/orders/{order_number}/coupon_codes':\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon-code-handler'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon-code-handler'\n      summary: Create order coupon code\n      description: |-\n        Creates a coupon code for an order.\n\n        To perform this operation the request should be made as the order's owner or with the order token in case of unauthenitcated checkouts (es. guest checkout).\n      operationId: create-order-coupon-code\n      tags:\n        - Coupon codes\n      security:\n        - api-key: []\n        - order-token: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/coupon-code-input'\n            examples:\n              Example:\n                value:\n                  coupon_code: off-20\n    parameters:\n      - name: order_number\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The order number\n  /shipments:\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/shipment'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create shipment\n      description: |-\n        Creates a shipment.\n\n        Please note that this request can be only performed by users with the `create` permission on the shipment.\n\n        **Deprecation Warning**: Adding items to the shipment via this endpoint\n        is deprecated. Instead, create an empty shipment and populate it with\n        the dedicated endpoint [to add items to the shipment](/docs/solidus/7078dbcf415ac-add-shipment-item).\n      operationId: create-shipment\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                stock_location_id:\n                  type: integer\n                variant_id:\n                  type: integer\n                  deprecated: true\n                quantity:\n                  type: integer\n                  deprecated: true\n            examples:\n              Example:\n                value:\n                  stock_location_id: 0\n                  variant_id: 0\n                  quantity: 0\n  /shipments/transfer_to_location:\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Transfer shipment item to location\n      description: Transfers a shipment's item to a different stock location.\n      operationId: transfer-shipment-item-to-location\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                original_shipment_number:\n                  type: string\n                target_shipment_number:\n                  type: string\n                stock_location_id:\n                  type: integer\n                variant_id:\n                  type: integer\n                quantity:\n                  type: integer\n  /shipments/transfer_to_shipment:\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Transfer shipment item to shipment\n      description: Transfer a shipment's item to another shipment.\n      operationId: transfer-shipment-item-to-shipment\n      tags:\n        - Shipments\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                original_shipment_number:\n                  type: string\n                target_shipment_number:\n                  type: string\n                variant_id:\n                  type: integer\n                quantity:\n                  type: integer\n  /taxons/products:\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      products:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/product'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n      summary: List taxon products\n      description: Lists a taxon's products.\n      operationId: list-taxon-products\n      tags:\n        - Products\n      parameters:\n        - in: query\n          name: id\n          schema:\n            type: integer\n          description: The id of the Taxon\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n        - in: query\n          name: simple\n          schema:\n            type: boolean\n          description: Returns a simplified version of the JSON\n      security:\n        - api-key: []\n  '/orders/{order_number}/customer_returns':\n    get:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/pagination-data'\n                  - type: object\n                    properties:\n                      customer_returns:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/customer-return'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n      summary: List order customer returns\n      description: Lists an order's customer returns.\n      operationId: list-order-customer-returns\n      tags:\n        - Customer returns\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/q'\n      security:\n        - api-key: []\n    parameters:\n      - name: order_number\n        in: path\n        schema:\n          type: string\n        required: true\n        description: The order number\n    post:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer-return'\n        '401':\n          $ref: '#/components/responses/invalid-api-key'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '422':\n          $ref: '#/components/responses/unprocessable-entity'\n      summary: Create order customer return\n      description: |-\n        Creates a customer return for an order.\n\n        Only users with the `create` permission on `Spree::CustomerReturn` can perform this action.\n      operationId: create-order-customer-return\n      tags:\n        - Customer returns\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                customer_return:\n                  $ref: '#/components/schemas/customer-return-input'\n      security:\n        - api-key: []\ntags:\n  - name: Address books\n  - name: Addresses\n  - name: Checkouts\n  - name: Classifications\n  - name: Configuration\n  - name: Countries\n  - name: Coupon codes\n  - name: Credit cards\n  - name: Images\n  - name: Inventory units\n  - name: Line items\n  - name: Option types\n  - name: Option values\n  - name: Orders\n  - name: Payments\n  - name: Product properties\n  - name: Products\n  - name: Promotions\n  - name: Properties\n  - name: Return authorizations\n  - name: Customer returns\n  - name: Shipments\n  - name: States\n  - name: Stock items\n  - name: Stock locations\n  - name: Stock movements\n  - name: Store credit events\n  - name: Stores\n  - name: Taxonomies\n  - name: Taxons\n  - name: Users\n  - name: Variants\n  - name: Zones\nservers:\n  - url: 'https://example.com/api'\n  - url: 'http://example.com/api'\ncomponents:\n  parameters:\n    page:\n      name: page\n      in: query\n      schema:\n        type: integer\n        default: 1\n    per_page:\n      name: per_page\n      in: query\n      schema:\n        type: integer\n        default: 25\n    q:\n      name: q\n      in: query\n      schema:\n        example: '?q[attribute_eq]=value'\n      description: 'Allows to query results based on search filters provided by Ransack (https://github.com/activerecord-hackery/ransack/).'\n  responses:\n    not-found:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n    unprocessable-entity:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n              errors:\n                type: object\n    delete-restriction:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n    invalid-api-key:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n  requestBodies:\n    complete-checkoutBody:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              expected_total:\n                type: string\n    add-shipment-itemBody:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              variant_id:\n                type: integer\n              quantity:\n                type: integer\n  securitySchemes:\n    api-key:\n      type: apiKey\n      name: Authorization\n      in: header\n    order-token:\n      type: apiKey\n      name: X-Spree-Order-Token\n      in: header\n  schemas:\n    product:\n      type: object\n      title: Product\n      properties:\n        available_on:\n          type: string\n        classifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/classification'\n        description:\n          type: string\n        display_price:\n          type: string\n        has_variants:\n          type: boolean\n        id:\n          type: integer\n        master:\n          $ref: '#/components/schemas/variant'\n        meta_description:\n          type: string\n        meta_keywords:\n          type: string\n        meta_title:\n          type: string\n        name:\n          type: string\n        option_types:\n          type: array\n          items:\n            $ref: '#/components/schemas/option-type'\n        price:\n          type: string\n        product_properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/product-property'\n        shipping_category_id:\n          type: integer\n        slug:\n          type: string\n        taxon_ids:\n          type: array\n          items:\n            type: integer\n        total_on_hand:\n          type: integer\n        variants:\n          type: array\n          items:\n            $ref: '#/components/schemas/variant'\n    pagination-data:\n      type: object\n      properties:\n        count:\n          type: integer\n        current_page:\n          type: integer\n        pages:\n          type: integer\n        per_page:\n          type: integer\n        total_count:\n          type: integer\n      title: Pagination data\n    image:\n      type: object\n      properties:\n        alt:\n          type: string\n        attachment_content_type:\n          type: string\n        attachment_file_name:\n          type: string\n        attachment_height:\n          type: integer\n        attachment_updated_at:\n          type: string\n        attachment_width:\n          type: integer\n        id:\n          type: integer\n        large_url:\n          type: string\n        mini_url:\n          type: string\n        position:\n          type: integer\n        product_url:\n          type: string\n        small_url:\n          type: string\n        type:\n          type: string\n        viewable_id:\n          type: integer\n        viewable_type:\n          type: string\n      title: Image\n    variant:\n      type: object\n      title: Variant\n      properties:\n        cost_price:\n          type: string\n        depth:\n          type: string\n        description:\n          type: string\n        display_price:\n          type: string\n        height:\n          type: string\n        id:\n          type: integer\n        images:\n          type: array\n          items:\n            $ref: '#/components/schemas/image'\n        in_stock:\n          type: boolean\n        is_backorderable:\n          type: boolean\n        is_destroyed:\n          type: boolean\n        is_master:\n          type: boolean\n        name:\n          type: string\n        option_values:\n          type: array\n          items:\n            $ref: '#/components/schemas/option-value'\n        options_text:\n          type: string\n        price:\n          type: string\n        sku:\n          type: string\n        slug:\n          type: string\n        total_on_hand:\n          type: integer\n        track_inventory:\n          type: boolean\n        weight:\n          type: string\n        width:\n          type: string\n    option-value:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        option_type_id:\n          type: integer\n        option_type_name:\n          type: string\n        option_type_presentation:\n          type: string\n        presentation:\n          type: string\n      title: Option value\n    product-property:\n      type: object\n      properties:\n        id:\n          type: integer\n        product_id:\n          type: integer\n        property_id:\n          type: integer\n        property_name:\n          type: string\n        value:\n          type: string\n      title: Product property\n    option-type:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        option_values:\n          type: array\n          items:\n            $ref: '#/components/schemas/option-value'\n        position:\n          type: integer\n        presentation:\n          type: string\n      title: Option type\n    classification:\n      type: object\n      title: Classification\n      properties:\n        position:\n          type: integer\n        taxon:\n          $ref: '#/components/schemas/taxon'\n        taxon_id:\n          type: integer\n    taxon:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        parent_id:\n          type: integer\n        permalink:\n          type: string\n        pretty_name:\n          type: string\n        taxonomy_id:\n          type: integer\n        taxons:\n          type: array\n          items:\n            $ref: '#/components/schemas/taxon'\n      title: Taxon\n    order-small:\n      type: object\n      properties:\n        additional_tax_total:\n          type: string\n        adjustment_total:\n          type: string\n        canceler_id:\n          type: integer\n        channel:\n          type: string\n        checkout_steps:\n          type: array\n          items:\n            type: string\n        completed_at:\n          type: string\n        covered_by_store_credit:\n          type: boolean\n        created_at:\n          type: string\n        currency:\n          type: string\n        display_additional_tax_total:\n          type: string\n        display_included_tax_total:\n          type: string\n        display_item_total:\n          type: string\n        display_order_total_after_store_credit:\n          type: string\n        display_ship_total:\n          type: string\n        display_store_credit_remaining_after_capture:\n          type: string\n        display_tax_total:\n          type: string\n        display_total:\n          type: string\n        display_total_applicable_store_credit:\n          type: string\n        display_total_available_store_credit:\n          type: string\n        email:\n          type: string\n        id:\n          type: integer\n        included_tax_total:\n          type: string\n        item_total:\n          type: string\n        number:\n          type: string\n        order_total_after_store_credit:\n          type: string\n        payment_state:\n          type: string\n        payment_total:\n          type: string\n        ship_total:\n          type: string\n        shipment_state:\n          type: string\n        special_instructions:\n          type: string\n        state:\n          type: string\n        tax_total:\n          type: string\n        token:\n          type: string\n        total:\n          type: string\n        total_applicable_store_credit:\n          type: string\n        total_quantity:\n          type: integer\n        updated_at:\n          type: string\n        user_id:\n          type: integer\n      title: Order (small)\n    order-big:\n      type: object\n      title: Order (big)\n      properties:\n        additional_tax_total:\n          type: string\n        adjustment_total:\n          type: string\n        adjustments:\n          type: array\n          items:\n            $ref: '#/components/schemas/adjustment'\n        bill_address:\n          $ref: '#/components/schemas/address'\n        canceler_id:\n          type: integer\n        channel:\n          type: string\n        checkout_steps:\n          type: array\n          items:\n            type: string\n        completed_at:\n          type: string\n        covered_by_store_credit:\n          type: boolean\n        created_at:\n          type: string\n        credit_cards:\n          type: array\n          items:\n            $ref: '#/components/schemas/credit-card'\n        currency:\n          type: string\n        display_additional_tax_total:\n          type: string\n        display_included_tax_total:\n          type: string\n        display_item_total:\n          type: string\n        display_order_total_after_store_credit:\n          type: string\n        display_ship_total:\n          type: string\n        display_store_credit_remaining_after_capture:\n          type: string\n        display_tax_total:\n          type: string\n        display_total:\n          type: string\n        display_total_applicable_store_credit:\n          type: string\n        display_total_available_store_credit:\n          type: string\n        email:\n          type: string\n        id:\n          type: integer\n        included_tax_total:\n          type: string\n        item_total:\n          type: string\n        line_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/line-item'\n        number:\n          type: string\n        order_total_after_store_credit:\n          type: string\n        payment_methods:\n          type: array\n          items:\n            $ref: '#/components/schemas/payment-method'\n        payment_state:\n          type: string\n        payment_total:\n          type: string\n        payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/payment'\n        permissions:\n          $ref: '#/components/schemas/order-permissions'\n        ship_address:\n          $ref: '#/components/schemas/address'\n        ship_total:\n          type: string\n        shipment_state:\n          type: string\n        shipments:\n          type: array\n          items:\n            $ref: '#/components/schemas/shipment'\n        special_instructions:\n          type: string\n        state:\n          type: string\n        tax_total:\n          type: string\n        token:\n          type: string\n        total:\n          type: string\n        total_applicable_store_credit:\n          type: string\n        total_quantity:\n          type: integer\n        updated_at:\n          type: string\n        user_id:\n          type: integer\n    address:\n      type: object\n      title: Address\n      properties:\n        address1:\n          type: string\n        address2:\n          type: string\n        alternative_phone:\n          type: string\n        city:\n          type: string\n        company:\n          type: string\n        country:\n          $ref: '#/components/schemas/country'\n        country_id:\n          type: integer\n        country_iso:\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n        phone:\n          type: string\n        state:\n          $ref: '#/components/schemas/state'\n        state_id:\n          type: integer\n        state_name:\n          type: string\n        state_text:\n          type: string\n        zipcode:\n          type: string\n    country:\n      type: object\n      properties:\n        id:\n          type: integer\n        iso:\n          type: string\n        iso3:\n          type: string\n        iso_name:\n          type: string\n        name:\n          type: string\n        numcode:\n          type: integer\n      title: Country\n    state:\n      type: object\n      properties:\n        abbr:\n          type: string\n        country_id:\n          type: integer\n        id:\n          type: integer\n        name:\n          type: string\n      title: State\n    adjustment:\n      type: object\n      properties:\n        adjustable_id:\n          type: integer\n        adjustable_type:\n          type: string\n        amount:\n          type: string\n        created_at:\n          type: string\n        display_amount:\n          type: string\n        eligible:\n          type: boolean\n        finalized:\n          type: boolean\n        id:\n          type: integer\n        label:\n          type: string\n        promotion_code_id:\n          type: integer\n        source_id:\n          type: integer\n        source_type:\n          type: string\n        updated_at:\n          type: string\n      title: Adjustment\n    credit-card:\n      type: object\n      title: Credit card\n      properties:\n        address: {}\n        cc_type:\n          type: string\n        id:\n          type: integer\n        last_digits:\n          type: string\n        month:\n          type: string\n        name:\n          type: string\n        year:\n          type: string\n    line-item:\n      type: object\n      title: Line item\n      properties:\n        adjustments:\n          type: array\n          items:\n            $ref: '#/components/schemas/adjustment'\n        display_amount:\n          type: string\n        id:\n          type: integer\n        price:\n          type: string\n        quantity:\n          type: integer\n        single_display_amount:\n          type: string\n        total:\n          type: string\n        variant:\n          $ref: '#/components/schemas/variant'\n        variant_id:\n          type: integer\n    payment-method:\n      type: object\n      properties:\n        id:\n          type: integer\n        method_type:\n          type: string\n        name:\n          type: string\n        partial_name:\n          type: string\n      title: Payment method\n    payment:\n      type: object\n      title: Payment\n      properties:\n        amount:\n          type: string\n        avs_response:\n          type: string\n        created_at:\n          type: string\n        display_amount:\n          type: string\n        id:\n          type: integer\n        payment_method:\n          $ref: '#/components/schemas/payment-method'\n        payment_method_id:\n          type: integer\n        source:\n          $ref: '#/components/schemas/payment-source'\n        source_id:\n          type: integer\n        source_type:\n          type: integer\n        state:\n          type: string\n        updated_at:\n          type: string\n    payment-source:\n      type: object\n      properties:\n        cc_type:\n          type: string\n        gateway_customer_profile_id:\n          type: string\n        gateway_payment_profile_id:\n          type: string\n        id:\n          type: integer\n        last_digits:\n          type: string\n        month:\n          type: string\n        name:\n          type: string\n        year:\n          type: string\n      title: Payment source\n    order-permissions:\n      type: object\n      properties:\n        can_update:\n          type: boolean\n      title: Order permissions\n    shipment:\n      type: object\n      title: Shipment\n      properties:\n        adjustments:\n          type: array\n          items:\n            $ref: '#/components/schemas/adjustment'\n        cost:\n          type: string\n        id:\n          type: integer\n        manifest:\n          type: array\n          items:\n            $ref: '#/components/schemas/shipment-manifest'\n        number:\n          type: string\n        order_id:\n          type: string\n        selected_shipping_rate:\n          $ref: '#/components/schemas/shipping-rate'\n        shipped_at:\n          type: string\n        shipping_methods:\n          type: array\n          items:\n            $ref: '#/components/schemas/shipping-method'\n        shipping_rates:\n          type: array\n          items:\n            $ref: '#/components/schemas/shipping-rate'\n        state:\n          type: string\n        stock_location_name:\n          type: string\n        tracking:\n          type: string\n        tracking_url:\n          type: string\n    shipping-rate:\n      type: object\n      title: Shipping rate\n      properties:\n        cost:\n          type: string\n        display_cost:\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n        selected:\n          type: boolean\n        shipping_method_code:\n          type: string\n        shipping_method_id:\n          type: integer\n    shipping-method:\n      type: object\n      title: Shipping method\n      properties:\n        code:\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n        shipping_categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/shipping-category'\n        zones:\n          type: array\n          items:\n            $ref: '#/components/schemas/zone'\n    shipment-manifest:\n      type: array\n      title: Shipment manifest\n      items:\n        type: object\n        properties:\n          quantity:\n            type: integer\n          states:\n            type: object\n            properties:\n              on_hand:\n                type: integer\n          variant_id:\n            type: integer\n    shipping-category:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      title: Shipping category\n    zone:\n      type: object\n      properties:\n        description:\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n      title: Zone\n    user:\n      type: object\n      properties:\n        bill_address:\n          $ref: '#/components/schemas/address'\n        created_at:\n          type: string\n        email:\n          type: string\n        id:\n          type: integer\n        ship_address:\n          $ref: '#/components/schemas/address'\n        updated_at:\n          type: string\n      title: User\n    return-authorization:\n      type: object\n      properties: {}\n      title: Return authorization\n    property:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        presentation:\n          type: string\n      title: Property\n    inventory-unit:\n      type: object\n      properties:\n        id:\n          type: integer\n        shipment_id:\n          type: integer\n        state:\n          type: string\n        variant_id:\n          type: integer\n      title: Inventory unit\n    stock-location:\n      type: object\n      title: Stock location\n      properties:\n        active:\n          type: boolean\n        address1:\n          type: string\n        address2:\n          type: string\n        city:\n          type: string\n        country:\n          $ref: '#/components/schemas/country'\n        country_id:\n          type: integer\n        id:\n          type: integer\n        name:\n          type: string\n        phone:\n          type: string\n        state:\n          $ref: '#/components/schemas/state'\n        state_id:\n          type: integer\n        state_name:\n          type: string\n        zipcode:\n          type: string\n    stock-item:\n      type: object\n      properties:\n        backorderable:\n          type: boolean\n        count_on_hand:\n          type: integer\n        id:\n          type: integer\n        stock_location_id:\n          type: integer\n        variant:\n          $ref: '#/components/schemas/variant'\n        variant_id:\n          type: integer\n      title: Stock item\n    stock-movement:\n      type: object\n      title: Stock movement\n      properties:\n        id:\n          type: integer\n        quantity:\n          type: integer\n        stock_item:\n          $ref: '#/components/schemas/stock-item'\n        stock_item_id:\n          type: integer\n    store:\n      type: object\n      title: Store\n      properties:\n        available_locales:\n          type: array\n          items:\n            type: string\n        code:\n          type: string\n        default:\n          type: boolean\n        default_currency:\n          type: string\n        id:\n          type: integer\n        mail_from_address:\n          type: string\n        bcc_email:\n          type: string\n        meta_description:\n          type: string\n        meta_keywords:\n          type: string\n        name:\n          type: string\n        seo_title:\n          type: string\n        url:\n          type: string\n    taxonomy:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        root:\n          $ref: '#/components/schemas/taxon'\n      title: Taxonomy\n    promotion:\n      type: object\n      properties:\n        advertise:\n          type: boolean\n        description:\n          type: string\n        expires_at:\n          type: string\n        id:\n          type: integer\n        match_policy:\n          type: string\n        name:\n          type: string\n        path:\n          type: string\n        starts_at:\n          type: string\n        type:\n          type: string\n        usage_limit:\n          type: integer\n      title: Promotion\n    store-credit-event:\n      type: object\n      title: Store credit event\n      properties:\n        display_action:\n          type: string\n        display_amount:\n          type: string\n        display_event_date:\n          type: string\n        display_remaining_amount:\n          type: string\n        display_user_total_amount:\n          type: string\n        order_number:\n          type: string\n    coupon-code-handler:\n      type: object\n      title: Coupon code handler\n      properties:\n        success:\n          type: string\n          description: Message returned if the coupon has been applied.\n        error:\n          type: string\n          description: Message returned if there are errors applying the coupon.\n        successful:\n          type: boolean\n        status_code:\n          type: string\n          description: |-\n            When applying a coupon code, it can be: `coupon_code_applied`, `coupon_code_unknown_error`, `coupon_code_max_usage`, `coupon_code_not_eligible`, `coupon_code_already_applied`, `coupon_code_expired` or `coupon_code_not_found`.\n\n            When removing a coupon code, it can be: `coupon_code_removed`, `coupon_code_not_present`, `coupon_code_not_found`.\n    address-book:\n      type: array\n      title: Address book\n      items:\n        allOf:\n          - $ref: '#/components/schemas/address'\n          - type: object\n            properties:\n              default:\n                type: boolean\n    return-authorization-input:\n      type: object\n      title: Return Authorization Input\n      properties:\n        memo:\n          type: string\n        stock_location_id:\n          type: integer\n        return_reason_id:\n          type: integer\n        return_items_attributes:\n          type: array\n          items:\n            type: object\n            properties:\n              inventory_unit_id:\n                type: integer\n              exchange_variant_id:\n                type: integer\n              return_reason_id:\n                type: integer\n    address-input:\n      type: object\n      title: Address Input\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        address1:\n          type: string\n        address2:\n          type: string\n        city:\n          type: string\n        country_id:\n          type: integer\n        state_id:\n          type: integer\n        zipcode:\n          type: string\n        phone:\n          type: string\n        state_name:\n          type: string\n        country_iso:\n          type: string\n        alternative_phone:\n          type: string\n        company:\n          type: string\n        country:\n          type: object\n          properties:\n            iso:\n              type: string\n            name:\n              type: string\n            iso3:\n              type: string\n            iso_name:\n              type: string\n        state:\n          type: object\n          properties:\n            name:\n              type: string\n            abbr:\n              type: string\n      description: ''\n    line-item-input:\n      type: object\n      title: Line item input\n      properties:\n        quantity:\n          type: integer\n          description: 'Passing `0`, the line item will be removed. When omitted creating a line item, quantity will be `1`.'\n        options:\n          type: object\n          description: 'This field can be used to pass custom line item attributes. When used, it will force a new price calculation, unless `price` is one of the options.'\n        id:\n          type: integer\n          description: 'Required when updating existing line items, only when not already present in the Path Parameters.'\n        variant_id:\n          type: integer\n          description: Required for new line items only.\n    option-type-input:\n      type: object\n      title: Option type input\n      properties:\n        name:\n          type: string\n        presentation:\n          type: string\n        option_values_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/option-value-input'\n    option-value-input:\n      type: object\n      title: Option value input\n      properties:\n        name:\n          type: string\n        presentation:\n          type: string\n    credit-card-update-input:\n      type: object\n      title: Credit card update input\n      properties:\n        month:\n          type: string\n        year:\n          type: string\n        expirty:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        name:\n          type: string\n        address_attributes:\n          $ref: '#/components/schemas/address-input'\n    inventory-unit-input:\n      type: object\n      title: Inventory unit input\n      properties:\n        shipment:\n          type: string\n        variant_id:\n          type: integer\n    payment-input:\n      type: object\n      title: Payment input\n      properties:\n        amount:\n          type: string\n        payment_method_id:\n          type: integer\n        source_attributes:\n          type: object\n          description: This field is required for Payment Method that has source_required? returning true.\n          properties:\n            number:\n              type: string\n            month:\n              type: integer\n            year:\n              type: integer\n            verification_value:\n              type: string\n            first_name:\n              type: string\n            last_name:\n              type: string\n            cc_type:\n              type: string\n            gateway_customer_profile_id:\n              type: string\n            gateway_payment_profile_id:\n              type: string\n            last_digits:\n              type: string\n            name:\n              type: string\n            encrypted_data:\n              type: string\n            wallet_payment_source_id:\n              type: integer\n            address_attributes:\n              $ref: '#/components/schemas/address-input'\n    shipment-input:\n      type: object\n      title: Shipment input\n      properties:\n        special_instructions:\n          type: string\n        stock_location_id:\n          type: integer\n        id:\n          type: integer\n        tracking:\n          type: string\n        selected_shipping_rate_id:\n          type: integer\n    order-input:\n      title: Order input\n      properties:\n        email:\n          type: string\n        special_instructions:\n          type: string\n        use_billing:\n          type: boolean\n        bill_address_attributes:\n          $ref: '#/components/schemas/address-input'\n        ship_address_attributes:\n          $ref: '#/components/schemas/address-input'\n        payments_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/payment-input'\n        shipments_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/shipment-input'\n        line_items_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/line-item-input'\n    product-input:\n      type: object\n      title: Product input\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        available_on:\n          type: string\n        meta_description:\n          type: string\n        meta_keywords:\n          type: string\n        price:\n          type: string\n        sku:\n          type: string\n        deleted_at:\n          type: string\n        option_values_hash:\n          type: object\n        weight:\n          type: string\n        height:\n          type: string\n        width:\n          type: string\n        depth:\n          type: string\n        shipping_category_id:\n          type: integer\n        tax_category_id:\n          type: integer\n        taxon_ids:\n          type: string\n          description: 'Comma separated list of taxon ids. Eg. \"1,2\"'\n        option_type_ids:\n          description: 'Comma separated list of option type ids ids. Eg. \"1,2\"'\n          type: string\n        cost_currency:\n          type: string\n        cost_price:\n          type: string\n        product_properties_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/product-property-input'\n    product-property-input:\n      type: object\n      title: Product property input\n      properties:\n        property_name:\n          type: string\n        value:\n          type: string\n        position:\n          type: integer\n    image-input:\n      type: object\n      title: Image input\n      properties:\n        alt:\n          type: string\n        attachment:\n          type: string\n        position:\n          type: integer\n        viewable_type:\n          type: string\n        viewable_id:\n          type: integer\n    variant-input:\n      type: object\n      title: Variant input\n      properties:\n        price:\n          type: string\n        cost_price:\n          type: string\n        position:\n          type: integer\n        track_inventory:\n          type: boolean\n        product_id:\n          type: integer\n        weight:\n          type: string\n        height:\n          type: string\n        width:\n          type: string\n        depth:\n          type: string\n        sku:\n          type: string\n        cost_currency:\n          type: string\n        option_value_ids:\n          type: array\n          items:\n            type: integer\n        option_values_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/option-value-input'\n        options:\n          type: object\n          description: '`Name` will be the name/presentation of the option type and `Value` will be the name/presentation of the option value. They will be created if not exist.'\n          properties:\n            name:\n              type: string\n            value:\n              type: string\n      required:\n        - price\n    property-input:\n      type: object\n      title: Property input\n      properties:\n        name:\n          type: string\n        presentation:\n          type: string\n    stock-item-input:\n      type: object\n      title: Stock item input\n      properties:\n        variant:\n          type: integer\n        stock_location:\n          type: integer\n        backorderable:\n          type: boolean\n        variant_id:\n          type: integer\n    stock-location-input:\n      type: object\n      title: Stock location input\n      properties:\n        name:\n          type: string\n        active:\n          type: boolean\n        address1:\n          type: string\n        address2:\n          type: string\n        city:\n          type: string\n        zipcode:\n          type: string\n        backorderable_default:\n          type: boolean\n        state_name:\n          type: string\n        state_id:\n          type: integer\n        country_id:\n          type: integer\n        phone:\n          type: string\n        propagate_all_variants:\n          type: boolean\n    store-input:\n      type: object\n      title: Store input\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n        seo_title:\n          type: string\n        meta_keywords:\n          type: string\n        meta_description:\n          type: string\n        default_currency:\n          type: string\n        mail_from_address:\n          type: string\n        bcc_email:\n          type: string\n        cart_tax_country_iso:\n          type: string\n    taxonomy-input:\n      type: object\n      title: Taxonomy input\n      properties:\n        name:\n          type: string\n      required:\n        - name\n    taxon-input:\n      type: object\n      title: Taxon input\n      properties:\n        name:\n          type: string\n        parent_id:\n          type: integer\n        position:\n          type: integer\n        icon:\n          type: string\n        description:\n          type: string\n        permalink:\n          type: string\n        taxonomy_id:\n          type: integer\n        meta_description:\n          type: string\n        meta_keywords:\n          type: string\n        meta_title:\n          type: string\n        child_index:\n          type: integer\n    user-input:\n      type: object\n      title: User input\n      properties:\n        password:\n          type: string\n        password_confirmation:\n          type: string\n        bill_address_attributes:\n          $ref: '#/components/schemas/address-input'\n        ship_address_attributes:\n          $ref: '#/components/schemas/address-input'\n    address-book-input:\n      title: Address book input\n      allOf:\n        - $ref: '#/components/schemas/address-input'\n        - type: object\n          properties:\n            default:\n              type: boolean\n    zone-input:\n      type: object\n      title: Zone input\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        zone_members_attributes:\n          type: array\n          items:\n            type: object\n            properties:\n              zoneable_type:\n                type: string\n              zoneable_id:\n                type: integer\n    coupon-code-input:\n      type: object\n      title: Coupon code input\n      properties:\n        coupon_code:\n          type: string\n    stock-movement-input:\n      type: object\n      title: Stock movement input\n      properties:\n        quantity:\n          type: integer\n        stock_item_id:\n          type: integer\n    customer-return-input:\n      type: object\n      title: Customer return\n      properties:\n        number:\n          type: string\n        stock_location_id:\n          type: integer\n        return_items_attributes:\n          type: array\n          items:\n            type: object\n            properties:\n              inventory_unit_id:\n                type: integer\n              reception_status_event:\n                type: string\n              return_authorization_id:\n                type: integer\n              exchange_variant_id:\n                type: integer\n              preferred_reimbursement_type_id:\n                type: integer\n              resellable:\n                type: boolean\n            required:\n              - inventory_unit_id\n      required:\n        - stock_location_id\n        - return_items_attributes\n      x-examples:\n        Create New Customer Return:\n          stock_location_id: 1\n          return_items_attributes:\n            - inventory_unit_id: 198\n              reception_status_event: receive\n    customer-return:\n      type: object\n      title: Customer return\n      properties:\n        number:\n          type: string\n        stock_location_id:\n          type: integer\n",
			"canonicalURL": "/github.com/solidusio/solidus@350ed34e54fe27ff4e7ef8ea7478dbd5372796b9/-/blob/api/openapi/solidus-api.oas.yml",
			"externalURLs": [
				{
					"url": "https://github.com/solidusio/solidus/blob/350ed34e54fe27ff4e7ef8ea7478dbd5372796b9/api/openapi/solidus-api.oas.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"q\": invalid schema:style:explode combination: (\"\":\"form\":true)"
}