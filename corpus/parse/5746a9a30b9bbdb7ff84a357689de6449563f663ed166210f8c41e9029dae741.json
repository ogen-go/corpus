{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-js"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/services/search/v2/openapi.yaml",
			"byteSize": 72129,
			"content": "components:\n  parameters:\n    AuthorizationHeader:\n      description: |\n        Access token provided by the user (obtained from a known identity provider).\n      in: header\n      name: Authorization\n      required: true\n      schema:\n        pattern: ^Bearer .+\n        type: string\n    Earliest:\n      description: |\n        The earliest time filter, in absolute time. When specifying an absolute time specify either UNIX time, or UTC in seconds using the ISO-8601 (%FT%T.%Q) format. For example 2021-01-25T13:15:30Z. GMT is the default timezone. You must specify GMT when you specify UTC. Any offset specified is ignored.\n      in: query\n      name: earliest\n      schema:\n        type: string\n    Field:\n      description: |\n        One or more fields to return for the result set. Use a comma-separated list of field names to specify multiple fields.\n      in: query\n      name: field\n      schema:\n        type: string\n    Latest:\n      description: |\n        The latest time filter in absolute time. When specifying an absolute time specify either UNIX time, or UTC in seconds using the ISO-8601 (%FT%T.%Q) format. For example 2021-01-25T13:15:30Z. GMT is the default timezone. You must specify GMT when you specify UTC. Any offset specified is ignored. Latest time must be after Earliest time.\n      in: query\n      name: latest\n      schema:\n        type: string\n    SidFilter:\n      description: |\n        Filter the list of jobs by 'sid'. Valid format is  `sid IN ({comma-separated list of SIDs. Each SID must be enclosed in double quotation marks.})`. A maximum of 30 SIDs can be specified in one query.\n      in: query\n      name: filter\n      schema:\n        type: string\n    StatusFilter:\n      description: |\n        Filter the list of jobs by status. Valid status values are 'running', 'done', 'canceled', or 'failed'.\n      in: query\n      name: status\n      schema:\n        $ref: '#/components/schemas/SearchStatus'\n    connectionName:\n      description: The name of the federated connection.\n      in: path\n      name: connectionName\n      required: true\n      schema:\n        type: string\n    count:\n      description: |\n        The maximum number of jobs that you want to return the status entries for.\n      in: query\n      name: count\n      schema:\n        default: 1000\n        type: integer\n    datasetid:\n      description: The dataset ID.\n      in: path\n      name: datasetid\n      required: true\n      schema:\n        type: string\n    filename:\n      description: |\n        The export results filename. Default: exportResults\n      in: query\n      name: filename\n      schema:\n        type: string\n    offset:\n      description: Index number identifying the location of the first item to return.\n      in: query\n      name: offset\n      schema:\n        default: 0\n        type: integer\n    outputMode:\n      description: |\n        Specifies the format for the returned output.\n      in: query\n      name: outputMode\n      schema:\n        enum:\n        - csv\n        - json\n        type: string\n    sid:\n      description: The search ID.\n      in: path\n      name: sid\n      required: true\n      schema:\n        type: string\n    tenant:\n      description: The system tenant ID.\n      in: path\n      name: tenant\n      required: true\n      schema:\n        type: string\n  schemas:\n    Dataset:\n      description: A complete dataset as rendered in POST, PATCH responses.\n      discriminator:\n        mapping:\n          federated: '#/components/schemas/FederatedDataset'\n          index: '#/components/schemas/IndexDataset'\n          kvcollection: '#/components/schemas/KVCollectionDataset'\n          lookup: '#/components/schemas/LookupDataset'\n          metric: '#/components/schemas/MetricDataset'\n        propertyName: kind\n      oneOf:\n      - $ref: '#/components/schemas/LookupDataset'\n      - $ref: '#/components/schemas/IndexDataset'\n      - $ref: '#/components/schemas/FederatedDataset'\n      - $ref: '#/components/schemas/MetricDataset'\n      - $ref: '#/components/schemas/KVCollectionDataset'\n    DatasetCommon:\n      description: Properties that are common across all Dataset kinds rendered in\n        POST, PATCH, and GET responses.\n      properties:\n        appclientidcreatedby:\n          description: AppClinetId of the creator app of the dataset.\n          type: string\n        appclientidmodifiedby:\n          description: AppClinetId of the modifier app of the dataset.\n          type: string\n        description:\n          description: Detailed description of the dataset.\n          type: string\n        id:\n          description: A unique dataset ID.\n          example: 5bbf6d876d059d0b9ea8da3e\n          format: mongo-object-id\n          maxLength: 24\n          minLength: 24\n          type: string\n        name:\n          description: The dataset name. Dataset names must be unique within each\n            module.\n          example: nameOfDataset\n          maxLength: 100\n          type: string\n        namespace:\n          description: The name of the namespace that contains the dataset.\n          example: nameOfNamespace\n          maxLength: 100\n          type: string\n        resourcename:\n          description: The dataset name qualified by the module name.\n          example: nameOfModule.nameOfDataset\n          maxLength: 201\n          type: string\n        summary:\n          description: Summary of the dataset's purpose.\n          type: string\n        title:\n          description: The title of the dataset.  Does not have to be unique.\n          example: titleOfDataset\n          type: string\n      required:\n      - id\n      - module\n      - name\n      - resourcename\n      type: object\n    DatasetPATCH:\n      description: Property values to be set in an existing dataset using a PATCH\n        request.\n      oneOf:\n      - $ref: '#/components/schemas/LookupDatasetPATCH'\n      - $ref: '#/components/schemas/IndexDatasetPATCH'\n      - $ref: '#/components/schemas/FederatedDatasetPATCH'\n      - $ref: '#/components/schemas/MetricDatasetPATCH'\n      - $ref: '#/components/schemas/KVCollectionDatasetPATCH'\n    DatasetPATCHCommon:\n      description: Properties that are common across all Dataset kinds to be set in\n        an existing dataset using a PATCH request.\n      properties:\n        module:\n          description: The name of module to reassign dataset into.\n          example: nameOfModule\n          maxLength: 100\n          type: string\n        name:\n          description: The dataset name. Dataset names must be unique within each\n            module.\n          example: nameOfDataset\n          maxLength: 100\n          type: string\n        owner:\n          description: The name of the dataset owner. This value is obtained from\n            the bearer token.\n          example: johndoe\n          maxLength: 24\n          type: string\n      type: object\n    DatasetPOST:\n      description: Properties that are common across all Dataset kinds for creating\n        a new dataset using a POST request.\n      properties:\n        fields:\n          description: The fields to be associated with this dataset.\n          items:\n            $ref: '#/components/schemas/FieldPOST'\n          type: array\n        id:\n          description: A unique dataset ID. Random ID used if not provided.\n          example: 5bc3c0cdfee0d854a4188132\n          format: mongo-object-id\n          maxLength: 24\n          minLength: 24\n          type: string\n        module:\n          description: The name of the module to create the new dataset in.\n          example: nameOfModule\n          maxLength: 100\n          type: string\n        name:\n          description: The dataset name. Dataset names must be unique within each\n            module.\n          example: nameOfDataset\n          maxLength: 100\n          type: string\n      required:\n      - name\n      type: object\n    DatasetReadOnlyProperties:\n      description: Properties of metric datasets which can only be read through the\n        API.\n      properties:\n        earliestEventTime:\n          description: The timestamp, in seconds, of the earliest measure. The timestamp\n            is in UNIX time.\n          readOnly: true\n          type: string\n        earliestIngestTime:\n          description: The earliest index time for any of the measures in this index.\n          readOnly: true\n          type: string\n        latestEventTime:\n          description: The timestamp, in seconds, of the latest measure. The timestamp\n            is in UNIX time.\n          readOnly: true\n          type: string\n        latestIngestTime:\n          description: The earliest index time for any of the measures in this index.\n          readOnly: true\n          type: string\n        latestMetadataUpdateTime:\n          description: The latest time that the metric index metadata was refreshed.\n          readOnly: true\n          type: string\n        totalEventCount:\n          description: THe number of measures in the metric index.\n          readOnly: true\n          type: integer\n        totalSize:\n          description: For metrics indexes, the totalSize is set to 0.\n          readOnly: true\n          type: integer\n      type: object\n    DateMetadataProperties:\n      description: Created and Modified date-time properties for inclusion in other\n        objects.\n      properties:\n        created:\n          description: The date and time object was created.\n          example: \"2018-10-14 10:18:53.000417\"\n          pattern: '[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9]{6}'\n          readOnly: true\n          type: string\n        modified:\n          description: The date and time object was modified.\n          example: \"2018-10-11 07:56:35.000770\"\n          pattern: '[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9]{6}'\n          readOnly: true\n          type: string\n      required:\n      - created\n      - modified\n      type: object\n    DeleteSearchJob:\n      description: A delete search job, including read-only fields that includes the\n        required properties.\n      properties:\n        allowSideEffects:\n          default: true\n          description: |\n            Specifies that the delete search job contains side effects, with possible security risks.\n          readOnly: true\n          type: boolean\n        collectEventSummary:\n          default: false\n          description: |\n            This property does not apply to delete search jobs endpoint and is set to false by default.\n          readOnly: true\n          type: boolean\n        collectFieldSummary:\n          default: false\n          description: |\n            This property does not apply to delete search jobs endpoint and is set to false by default.\n          readOnly: true\n          type: boolean\n        collectTimeBuckets:\n          default: false\n          description: |\n            This property does not apply to delete search jobs endpoint and is set to false by default.\n          readOnly: true\n          type: boolean\n        completionTime:\n          description: |\n            The time, in GMT, that the search job is finished. Empty if the search job has not completed.\n          readOnly: true\n          type: string\n        dispatchTime:\n          description: |\n            The time, in GMT, that the search job is dispatched.\n          readOnly: true\n          type: string\n        enablePreview:\n          default: false\n          description: |\n            This property does not apply to delete search jobs endpoint and is set to false by default.\n          readOnly: true\n          type: boolean\n        extractFields:\n          default: none\n          description: |\n            Specifies how the Search service should extract fields. Valid values include 'all', 'none', or 'indexed'. 'all' will extract all fields, 'indexed' will extract only indexed fields, and 'none' will extract only the default fields. This parameter overwrites the value of the 'extractAllFields' parameter. Set to 'none' for better search performance.\n          type: string\n        index:\n          description: The index to delete the events from.\n          type: string\n        maxTime:\n          default: 3600\n          description: |\n            The amount of time, in seconds, to run the delete search job before finalizing the search. The maximum value is 3600 seconds (1 hour).\n          maximum: 3600\n          minimum: 1\n          type: integer\n        messages:\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        module:\n          description: The module to run the delete search job in. The default module\n            is used if the module field is empty.\n          type: string\n        name:\n          description: The name of the search job.\n          maxLength: 100\n          readOnly: true\n          type: string\n        percentComplete:\n          default: 0\n          description: An estimate of the percent of time remaining before the delete\n            search job completes.\n          readOnly: true\n          type: integer\n        predicate:\n          description: The predicate expression that identifies the events to delete\n            from the index. This expression must return true or false. To delete all\n            events from the index, specify \"true\" instead of an expression.\n          type: string\n        previewAvailable:\n          default: false\n          description: This property does not apply to delete search jobs endpoint\n            and is set to false by default.\n          readOnly: true\n          type: string\n        query:\n          description: The SPL search string that includes the index, module, and\n            predicate that you specify.\n          readOnly: true\n          type: string\n        queryParameters:\n          allOf:\n          - $ref: '#/components/schemas/QueryParameters'\n          description: Represents parameters on the search job such as 'earliest'\n            and 'latest'.\n        requiredFreshness:\n          default: 0\n          description: |\n            This property does not apply to delete search jobs endpoint and is set to 0 by default.\n          readOnly: true\n          type: integer\n        resolvedEarliest:\n          description: |\n            The earliest time specified as an absolute value in GMT. The time is computed based on the values you specify for the 'timezone' and 'earliest' queryParameters.\n          readOnly: true\n          type: string\n        resolvedLatest:\n          description: |\n            The latest time specified as an absolute value in GMT. The time is computed based on the values you specify for the 'timezone' and 'earliest' queryParameters.\n          readOnly: true\n          type: string\n        resultsAvailable:\n          default: 0\n          description: The number of results produced so far by the delete search\n            job that are going to be deleted.\n          readOnly: true\n          type: integer\n        resultsPreviewAvailable:\n          default: 0\n          description: This property does not apply to delete search jobs endpoint\n            and is set to 0 by default.\n          readOnly: true\n          type: integer\n        sid:\n          description: The ID assigned to the delete search job.\n          readOnly: true\n          type: string\n        status:\n          $ref: '#/components/schemas/SearchStatus'\n      required:\n      - index\n      - module\n      - predicate\n      type: object\n    Error:\n      properties:\n        code:\n          type: string\n        details:\n          items:\n            type: object\n          type: array\n        message:\n          type: string\n      type: object\n    FederatedConnection:\n      description: A fully constructed federated connection object.\n      properties:\n        created:\n          description: The timestamp when the federated connection was created.\n          example: 2021-06-01 23:08:51.888000Z\n          type: string\n        createdby:\n          description: The user who created the federated connection.\n          example: user@example.com\n          type: string\n        hostnameip:\n          description: The remote hostname to connect yo.\n          example: ec-botsv2.portal.io\n          maxLength: 100\n          type: string\n        modified:\n          description: The timestamp when the federated connection was modified.\n          example: 2021-06-01 23:08:51.888000Z\n          type: string\n        modifiedby:\n          description: The user who last modified the federated connection.\n          example: user@example.com\n          type: string\n        name:\n          description: The name of the federated connection.\n          example: connectionobject\n          maxLength: 100\n          type: string\n        port:\n          description: The remote port number.\n          example: 8080\n          type: number\n        serviceaccountuser:\n          description: The username on the service account.\n          example: username\n          maxLength: 100\n          type: string\n      type: object\n    FederatedConnectionInput:\n      description: |\n        The property values for creating a new federated connection using a PUT or POST request.\n      properties:\n        hostnameip:\n          description: The remote hostname to connect to.\n          example: ec-botsv2.portal.io\n          maxLength: 100\n          type: string\n        name:\n          description: The name of the federated connection.\n          example: connectionobject\n          maxLength: 100\n          type: string\n        port:\n          description: The remote port number.\n          example: 8080\n          type: number\n        serviceaccountpassword:\n          description: The password of the service account.\n          example: password\n          maxLength: 100\n          type: string\n        serviceaccountuser:\n          description: The username on the service account.\n          example: username\n          maxLength: 100\n          type: string\n      required:\n      - name\n      - hostnameip\n      - port\n      - serviceaccountuser\n      - serviceaccountpassword\n      type: object\n    FederatedDataset:\n      allOf:\n      - $ref: '#/components/schemas/FederatedDatasetProperties'\n      - $ref: '#/components/schemas/MetadataProperties'\n      - $ref: '#/components/schemas/DatasetCommon'\n      description: A complete federated dataset as rendered in POST, PATCH, and GET\n        responses.\n      required:\n      - kind\n      - federatedConnection\n      - federatedDataset\n      - federatedDatasetKind\n      type: object\n    FederatedDatasetKind:\n      description: The dataset kind.\n      enum:\n      - federated\n      type: string\n    FederatedDatasetPATCH:\n      allOf:\n      - $ref: '#/components/schemas/FederatedDatasetProperties'\n      - $ref: '#/components/schemas/DatasetPATCHCommon'\n      description: Property values to be set in an existing federated dataset using\n        a PATCH request.\n    FederatedDatasetProperties:\n      description: Properties of job datasets which may be read, set, and changed\n        through the API. Implementation detail of DatasetPOST, DatasetPATCH, and Dataset,\n        do not use directly.\n      properties:\n        federatedConnection:\n          description: Connection information to connect to remote federated connection.\n          type: string\n        federatedDataset:\n          description: Dataset information in the remote instance.\n          type: string\n        federatedDatasetKind:\n          description: Dataset kind information in the remote instance.\n          type: string\n        kind:\n          $ref: '#/components/schemas/FederatedDatasetKind'\n      type: object\n    Field:\n      description: Initial property values for creating a new field using a POST request.\n      properties:\n        datasetid:\n          description: The dataset that the field is part of.\n          example: 5bc1a6fefee0d854a4188125\n          format: mongo-object-id\n          maxLength: 24\n          minLength: 24\n          type: string\n        datatype:\n          $ref: '#/components/schemas/FieldDataType'\n        description:\n          description: The field description.\n          example: Count of all the users in the request\n          type: string\n        fieldtype:\n          $ref: '#/components/schemas/FieldType'\n        id:\n          description: The unique ID of this field.\n          example: 5bc1a7a0fee0d854a418812e\n          format: mongo-object-id\n          maxLength: 24\n          minLength: 24\n          type: string\n        indexed:\n          description: Whether or not the field has been indexed.\n          type: boolean\n        name:\n          description: The field name.\n          example: nameOfField\n          maxLength: 100\n          type: string\n        prevalence:\n          $ref: '#/components/schemas/FieldPrevalence'\n        summary:\n          description: The field summary.\n          example: Count of the users\n          type: string\n        title:\n          description: The field title.\n          example: User Count\n          type: string\n      required:\n      - name\n      type: object\n    FieldDataType:\n      description: The type of data in the field. Must be one of the valid values.\n      enum:\n      - DATE\n      - NUMBER\n      - OBJECT_ID\n      - STRING\n      - UNKNOWN\n      type: string\n    FieldPOST:\n      allOf:\n      - $ref: '#/components/schemas/FieldProperties'\n      description: Initial property values for creating a new field using a POST request.\n      required:\n      - name\n      type: object\n    FieldPrevalence:\n      description: How frequent the field appears in the dataset. Must be one of the\n        valid values.\n      enum:\n      - ALL\n      - SOME\n      - UNKNOWN\n      type: string\n    FieldProperties:\n      description: Properties of fields which can be read, set, and changed through\n        the API. Implementation detail of FieldPOST, FieldPATCH, and Field, do not\n        use directly.\n      properties:\n        datatype:\n          $ref: '#/components/schemas/FieldDataType'\n        description:\n          description: The field description.\n          example: Count of all the users in the request\n          type: string\n        fieldtype:\n          $ref: '#/components/schemas/FieldType'\n        indexed:\n          description: Whether or not the field has been indexed.\n          type: boolean\n        name:\n          description: The field name.\n          example: nameOfField\n          maxLength: 100\n          type: string\n        prevalence:\n          $ref: '#/components/schemas/FieldPrevalence'\n        summary:\n          description: The field summary.\n          example: Count of the users\n          type: string\n        title:\n          description: The field title.\n          example: User Count\n          type: string\n    FieldType:\n      description: The type of field. Must be one of the valid values.\n      enum:\n      - DIMENSION\n      - MEASURE\n      - UNKNOWN\n      type: string\n    FieldsSummary:\n      description: A  statistical summary of the fields in the events to date, for\n        the search ID (SID).\n      properties:\n        duration:\n          description: The amount of time, in seconds, that a time bucket spans from\n            the earliest to the latest time.\n          format: double\n          type: number\n        earliestTime:\n          description: The earliest timestamp, in UTC format, of the events to process.\n          type: string\n        eventCount:\n          description: The total number of events for all fields returned in the time\n            range (earliestTime and latestTime) specified.\n          type: integer\n        fields:\n          additionalProperties:\n            $ref: '#/components/schemas/SingleFieldSummary'\n          description: A list of the fields in the time range specified.\n          type: object\n        latestTime:\n          description: The latest timestamp, in UTC format, of the events to process.\n          type: string\n      type: object\n    IndexDataset:\n      allOf:\n      - $ref: '#/components/schemas/IndexDatasetProperties'\n      - $ref: '#/components/schemas/IndexDatasetReadOnlyProperties'\n      - $ref: '#/components/schemas/MetadataProperties'\n      - $ref: '#/components/schemas/DatasetCommon'\n      description: A complete index dataset as rendered in POST, PATCH, and GET responses.\n      required:\n      - kind\n      - disabled\n      type: object\n    IndexDatasetKind:\n      description: The dataset kind.\n      enum:\n      - index\n      type: string\n    IndexDatasetPATCH:\n      allOf:\n      - $ref: '#/components/schemas/IndexDatasetProperties'\n      - $ref: '#/components/schemas/DatasetPATCHCommon'\n      description: Property values to be set in an existing index dataset using a\n        PATCH request.\n    IndexDatasetProperties:\n      description: Properties of job datasets which may be read, set, and changed\n        through the API. Implementation detail of DatasetPOST, DatasetPATCH, and Dataset,\n        do not use directly.\n      properties:\n        disabled:\n          description: Specifies whether or not the Splunk index is disabled.\n          type: boolean\n        frozenTimePeriodInSecs:\n          description: The frozenTimePeriodInSecs to use for the index\n          type: integer\n        kind:\n          $ref: '#/components/schemas/IndexDatasetKind'\n      type: object\n    IndexDatasetReadOnlyProperties:\n      description: Properties of index datasets which can only be read through the\n        API.\n      properties:\n        earliestEventTime:\n          description: The timestamp, in seconds, of the earliest event. The timestamp\n            is in UNIX time.\n          type: string\n        earliestIngestTime:\n          description: The earliest index time for any of the events in this index.\n          type: string\n        kind:\n          $ref: '#/components/schemas/IndexDatasetKind'\n        latestEventTime:\n          description: The timestamp, in seconds, of the latest event. The timestamp\n            is in UNIX time.\n          type: string\n        latestIngestTime:\n          description: The latest index time for any of the events in this index.\n          type: string\n        latestMetadataUpdateTime:\n          description: The latest time that the index metadata was refreshed.\n          type: string\n        totalEventCount:\n          description: The number of events in the index.\n          format: int64\n          type: integer\n        totalSize:\n          description: The raw size, in bytes, of the uncompressed data in the indexers.\n          format: int64\n          type: integer\n      type: object\n    KVCollectionDataset:\n      allOf:\n      - $ref: '#/components/schemas/KVCollectionDatasetProperties'\n      - $ref: '#/components/schemas/MetadataProperties'\n      - $ref: '#/components/schemas/DatasetCommon'\n      description: A complete kvcollection dataset as rendered in POST, PATCH, and\n        GET responses.\n      required:\n      - kind\n      type: object\n    KVCollectionDatasetKind:\n      description: The dataset kind.\n      enum:\n      - kvcollection\n      type: string\n    KVCollectionDatasetPATCH:\n      allOf:\n      - $ref: '#/components/schemas/KVCollectionDatasetProperties'\n      - $ref: '#/components/schemas/DatasetPATCHCommon'\n      description: Property values to be set in an existing kvcollection dataset using\n        a PATCH request.\n    KVCollectionDatasetProperties:\n      description: Properties of kvcollection datasets which may be read, set, and\n        changed through the API. Implementation detail of DatasetPOST, DatasetPATCH,\n        and Dataset, do not use directly.\n      properties:\n        kind:\n          $ref: '#/components/schemas/KVCollectionDatasetKind'\n      type: object\n    ListDatasets:\n      description: A list of fully constructed datasets\n      properties:\n        results:\n          description: List of all datasets\n          items:\n            $ref: '#/components/schemas/Dataset'\n          type: array\n      type: object\n    ListFederatedConnections:\n      description: A list of federated connections\n      items:\n        $ref: '#/components/schemas/FederatedConnection'\n      type: array\n    ListPreviewResultsResponse:\n      description: The structure of the response body for the preview search results\n        that is returned for the job with the specified search ID (SID). When search\n        is running, it might return incomplete or truncated search results. The isPreviewStable\n        property indicates whether the returned preview results stucture is stable\n        or not. Truncated preview results occur because the number of requested results\n        exceeds the page limit. Use the 'nextLink' URL to retrieve the next page of\n        results.\n      properties:\n        fields:\n          items:\n            properties:\n              dataSource:\n                type: string\n              groupbyRank:\n                type: string\n              name:\n                type: string\n              splitField:\n                type: string\n              splitValue:\n                type: string\n              splitbySpecial:\n                type: string\n              typeSpecial:\n                type: string\n            required:\n            - name\n            type: object\n          type: array\n        isPreviewStable:\n          type: boolean\n        messages:\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        nextLink:\n          type: string\n        results:\n          items:\n            type: object\n          type: array\n        wait:\n          type: string\n      required:\n      - results\n      - isPreviewStable\n      type: object\n    ListSearchResultsResponse:\n      description: |\n        The structure of the  search results or events metadata that is returned for the job with the specified search ID (SID). When search is running, it might return incomplete or truncated search results. Incomplete search results occur when a search has not completed. Wait until search completes for full result set. Truncated search results occur because the number of requested results exceeds the page limit. Use the 'nextLink' URL to retrieve the next page of results.\n      properties:\n        fields:\n          items:\n            properties:\n              dataSource:\n                type: string\n              groupbyRank:\n                type: string\n              name:\n                type: string\n              splitField:\n                type: string\n              splitValue:\n                type: string\n              splitbySpecial:\n                type: string\n              typeSpecial:\n                type: string\n            required:\n            - name\n            type: object\n          type: array\n        messages:\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        nextLink:\n          type: string\n        results:\n          items:\n            type: object\n          type: array\n        wait:\n          type: string\n      required:\n      - results\n      type: object\n    LookupDataset:\n      allOf:\n      - $ref: '#/components/schemas/LookupDatasetProperties'\n      - $ref: '#/components/schemas/MetadataProperties'\n      - $ref: '#/components/schemas/DatasetCommon'\n      description: A complete lookup dataset as rendered in POST, PATCH, and GET responses.\n      required:\n      - kind\n      - externalKind\n      - externalName\n      type: object\n    LookupDatasetExternalKind:\n      description: The type of the external lookup.\n      enum:\n      - kvcollection\n      type: string\n    LookupDatasetKind:\n      description: The dataset kind.\n      enum:\n      - lookup\n      type: string\n    LookupDatasetPATCH:\n      allOf:\n      - $ref: '#/components/schemas/LookupDatasetProperties'\n      - $ref: '#/components/schemas/DatasetPATCHCommon'\n      description: Property values to be set in an existing lookup dataset using a\n        PATCH request.\n    LookupDatasetProperties:\n      description: Properties of lookup datasets which may be read, set, and changed\n        through the API. Implementation detail of DatasetPOST, DatasetPATCH, and Dataset,\n        do not use directly.\n      properties:\n        caseSensitiveMatch:\n          default: true\n          description: Match case-sensitively against the lookup.\n          type: boolean\n        externalKind:\n          $ref: '#/components/schemas/LookupDatasetExternalKind'\n        externalName:\n          description: The name of the external lookup.\n          example: nameOfKvCollection\n          type: string\n        filter:\n          description: A query that filters results out of the lookup before those\n            results are returned.\n          type: string\n        kind:\n          $ref: '#/components/schemas/LookupDatasetKind'\n    Message:\n      description: The message field in search results or search jobs. The types of\n        messages are INFO, DEBUG, FATAL, and ERROR.\n      properties:\n        text:\n          type: string\n        type:\n          enum:\n          - INFO\n          - DEBUG\n          - FATAL\n          - ERROR\n          type: string\n    MetadataProperties:\n      allOf:\n      - $ref: '#/components/schemas/DateMetadataProperties'\n      - $ref: '#/components/schemas/UserMetadataProperties'\n      description: Created, createdby, modified, modifiedby, and owner properties\n        for inclusion in other objects.\n    MetricDataset:\n      allOf:\n      - $ref: '#/components/schemas/MetricDatasetProperties'\n      - $ref: '#/components/schemas/MetricDatasetReadOnlyProperties'\n      - $ref: '#/components/schemas/MetadataProperties'\n      - $ref: '#/components/schemas/DatasetCommon'\n      description: A complete metric dataset as rendered in POST, PATCH, and GET responses.\n      required:\n      - kind\n      - disabled\n      type: object\n    MetricDatasetKind:\n      description: The dataset kind.\n      enum:\n      - metric\n      type: string\n    MetricDatasetPATCH:\n      allOf:\n      - $ref: '#/components/schemas/MetricDatasetProperties'\n      - $ref: '#/components/schemas/DatasetPATCHCommon'\n      description: Property values to be set in an existing metric dataset using a\n        PATCH request.\n    MetricDatasetProperties:\n      description: Properties of metric datasets which may be read, set, and changed\n        through the API. Implementation detail of DatasetPOST, DatasetPATCH, and Dataset,\n        do not use directly.\n      properties:\n        disabled:\n          description: Specifies whether or not the Splunk index is disabled.\n          type: boolean\n        frozenTimePeriodInSecs:\n          description: The frozenTimePeriodInSecs to use for the index\n          type: integer\n        kind:\n          $ref: '#/components/schemas/MetricDatasetKind'\n      type: object\n    MetricDatasetReadOnlyProperties:\n      description: Properties of metric datasets which can only be read through the\n        API.\n      properties:\n        earliestEventTime:\n          description: The timestamp, in seconds, of the earliest measure. The timestamp\n            is in UNIX time.\n          type: string\n        earliestIngestTime:\n          description: The earliest index time for any of the measures in this index.\n          type: string\n        kind:\n          $ref: '#/components/schemas/MetricDatasetKind'\n        latestEventTime:\n          description: The timestamp, in seconds, of the latest measure. The timestamp\n            is in UNIX time.\n          type: string\n        latestIngestTime:\n          description: The earliest index time for any of the measures in this index.\n          type: string\n        latestMetadataUpdateTime:\n          description: The latest time that the metric index metadata was refreshed.\n          type: string\n        totalEventCount:\n          description: THe number of measures in the metric index.\n          type: integer\n        totalSize:\n          description: For metrics indexes, the totalSize is set to 0.\n          type: integer\n      type: object\n    QueryParameters:\n      description: Represents parameters on the search job such as 'earliest' and\n        'latest'.\n      properties:\n        earliest:\n          default: -24h@h\n          description: |\n            The earliest time, in absolute or relative format, to retrieve events. When specifying an absolute time specify either UNIX time, or UTC in seconds using the ISO-8601 (%FT%T.%Q) format. For example 2021-01-25T13:15:30Z. GMT is the default timezone. You must specify GMT when you specify UTC. Any offset specified is ignored. Latest time must be after Earliest time.\n          type: string\n        latest:\n          default: now\n          description: |\n            The latest time, in absolute or relative format, to retrieve events. When specifying an absolute time specify either UNIX time, or UTC in seconds using the ISO-8601 (%FT%T.%Q) format. For example 2021-01-25T13:15:30Z. GMT is the default timezone. You must specify GMT when you specify UTC. Any offset specified is ignored. Latest time must be after Earliest time.\n          type: string\n        relativeTimeAnchor:\n          default: The system time when the search job is created.\n          description: |\n            Specify a time string to set the absolute time used for any relative time specifier in the search. Defaults to the current system time. You can specify a relative time modifier ('earliest' or 'latest') for this parameter.  For example, if 'earliest' is set to -d and  the 'relativeTimeAnchor' is set to '2021-01-05T13:15:30Z' then 'resolvedEarliest' is '2021-01-04T13:15:30Z'.\n          format: date-time\n          type: string\n        timezone:\n          description: |\n            The timezone that relative time modifiers are based off of. Timezone only applies to relative time literals for 'earliest' and 'latest'. If UNIX time or UTC format is used for 'earliest' and 'latest', this field is ignored. For the list of supported timezone formats, see https://docs.splunk.com/Documentation/Splunk/latest/Data/Applytimezoneoffsetstotimestamps#zoneinfo_.28TZ.29_database type: string default: \"GMT\"\n      type: object\n    SearchJob:\n      description: A search job, including read-only fields that includes the required\n        properties.\n      properties:\n        allowSideEffects:\n          default: false\n          description: |\n            Specifies whether a search that contains commands with side effects (with possible security risks) is allowed to run.\n          type: boolean\n        collectEventSummary:\n          default: false\n          description: |\n            Specifies whether a search is allowed to collect event summary information during the run time.\n          type: boolean\n        collectFieldSummary:\n          default: false\n          description: |\n            Specifies whether a search is allowed to collect field summary information during the run time.\n          type: boolean\n        collectTimeBuckets:\n          default: false\n          description: |\n            Specifies whether a search is allowed to collect timeline bucket summary information during the run time.\n          type: boolean\n        completionTime:\n          description: |\n            The time, in GMT, that the search job is finished. Empty if the search job has not completed.\n          readOnly: true\n          type: string\n        dispatchTime:\n          description: |\n            The time, in GMT, that the search job is dispatched.\n          readOnly: true\n          type: string\n        enablePreview:\n          default: false\n          description: |\n            Specifies whether a search is allowed to collect preview results during the run time.\n          type: boolean\n        extractAllFields:\n          default: false\n          description: |\n            Specifies whether the Search service should extract all of the available fields in the data, including fields not mentioned in the SPL, for the search job. Set to 'false' for better search performance. The 'extractAllFields' parameter is deprecated as of version v3alpha1. Although this parameter continues to function, it might be removed in a future version. Use the 'extractFields' parameter instead.\n          type: boolean\n        extractFields:\n          default: none\n          description: |\n            Specifies how the Search service should extract fields. Valid values include 'all', 'none', or 'indexed'.  Use 'all' to extract all fields. Use 'indexed' to extract only indexed fields. Use 'none' to extract only the default fields.\n          type: string\n        maxTime:\n          default: 3600\n          description: |\n            The number of seconds to run the search before finalizing the search. The maximum value is 3600 seconds (1 hour).\n          maximum: 3600\n          minimum: 1\n          type: integer\n        messages:\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        module:\n          default: \"\"\n          description: The module to run the search in. The default module is used\n            if a module is not specified.\n          type: string\n        name:\n          description: The name of the search job.\n          maxLength: 100\n          readOnly: true\n          type: string\n        percentComplete:\n          default: 0\n          description: An estimate of the percent of time remaining before the job\n            completes.\n          readOnly: true\n          type: integer\n        previewAvailable:\n          default: false\n          description: Specifies if preview results for the search job are available.\n            The valid status values are 'unknown', 'true', and 'false'. You must set\n            the 'enablePreview=true' parameter to return preview search results.\n          readOnly: true\n          type: string\n        query:\n          description: The SPL search string.\n          format: SPL2\n          type: string\n        queryParameters:\n          allOf:\n          - $ref: '#/components/schemas/QueryParameters'\n          description: Represents parameters on the search job such as 'earliest'\n            and 'latest'.\n        requiredFreshness:\n          default: 0\n          description: |\n            Specifies a maximum time interval, in seconds, between identical existing searches. The 'requiredFreshness' parameter is used to determine if an existing search with the same query and the same time boundaries can be reused, instead of running the same search again. Freshness is applied to the 'resolvedEarliest' and 'resolvedLatest' parameters. If an existing search has the same exact criteria as this search and the 'resolvedEarliest' and 'resolvedLatest' values are within the freshness interval, the existing search metadata is returned instead of initiating a new search job. By default, the 'requiredFreshness' parameter is set to 0 which means that the platform does not attempt to use an existing search. The maximum value for the 'requiredFreshness' parameter is 259200 seconds (72 hours).\n          maximum: 259200\n          minimum: 0\n          type: integer\n        resolvedEarliest:\n          description: |\n            The earliest time specified as an absolute value in GMT. The time is computed based on the values you specify for the 'timezone' and 'earliest' queryParameters.\n          readOnly: true\n          type: string\n        resolvedLatest:\n          description: |\n            The latest time specified as an absolute value in GMT. The time is computed based on the values you specify for the 'timezone' and 'earliest' queryParameters.\n          readOnly: true\n          type: string\n        resultsAvailable:\n          default: 0\n          description: The number of results produced so far for the search job.\n          readOnly: true\n          type: integer\n        resultsPreviewAvailable:\n          default: 0\n          description: The number of the preview search results for the job with the\n            specified search ID (SID). You must set the 'enablePreview=true' parameter\n            to return preview search results.\n          readOnly: true\n          type: integer\n        sid:\n          description: The ID assigned to the search job.\n          readOnly: true\n          type: string\n        status:\n          $ref: '#/components/schemas/SearchStatus'\n      required:\n      - query\n      type: object\n    SearchStatus:\n      description: |\n        The current status of the search job. The valid status values are 'running', 'done', 'canceled', 'finalized' and 'failed'.\n      enum:\n      - running\n      - done\n      - canceled\n      - failed\n      - finalized\n      type: string\n    SingleFieldSummary:\n      description: Summary of each field.\n      properties:\n        count:\n          description: The total number of events that the field appears in.\n          type: integer\n        distinctCount:\n          description: The total number of unique values in the field.\n          type: integer\n        isExact:\n          description: |\n            Specifies if the 'distinctCount' is accurate. When the count exceeds the maximum count, an approximate count is computed instead and the 'isExact' property is FALSE.\n          type: boolean\n        max:\n          description: The maximum numeric value in the field.\n          type: string\n        mean:\n          description: The mean (average) for the numeric value in the field.\n          format: double\n          type: number\n        min:\n          description: The minimum numeric value in the field.\n          type: string\n        modes:\n          description: An array of the values in the field.\n          items:\n            allOf:\n            - $ref: '#/components/schemas/SingleValueMode'\n          type: array\n        numericCount:\n          description: The count of the numeric values in the field.\n          type: integer\n        relevant:\n          description: Specifies if the field was added or changed by the search.\n          type: boolean\n        stddev:\n          description: The standard deviation for the numeric values in the field.\n          format: double\n          type: number\n      type: object\n    SingleTimeBucket:\n      description: The summary of events for a single time bucket.\n      properties:\n        availableCount:\n          description: Count of available events. Not all events in a bucket are retrievable.\n            Typically this count is capped at 10000.\n          type: integer\n        duration:\n          format: double\n          type: number\n        earliestTime:\n          description: The timestamp of the earliest event in the current bucket,\n            in UNIX format. This is the same time as 'earliestTimeStrfTime' in UNIX\n            format.\n          format: double\n          type: number\n        earliestTimeStrfTime:\n          description: The timestamp of the earliest event in the current bucket,\n            in UTC format with seconds. For example 2021-01-25T13:15:30Z, which follows\n            the ISO-8601 (%FT%T.%Q) format.\n          type: string\n        isFinalized:\n          description: Specifies if all of the events in the current bucket have been\n            finalized.\n          type: boolean\n        totalCount:\n          description: The total count of the events in the current bucket.\n          type: integer\n      readOnly: true\n      type: object\n    SingleValueMode:\n      description: Summary of the value in a field.\n      properties:\n        count:\n          description: The number of occurrences that the value appears in a field.\n          type: integer\n        isExact:\n          description: |\n            Specifies if the count is accurate. When the count exceeds the maximum count, an approximate count is computed instead and the 'isExact' property is FALSE.\n          type: boolean\n        value:\n          description: The value in the field.\n          type: string\n      type: object\n    TimeBucketsSummary:\n      description: |\n        A timeline metadata model of the event distribution. The model shows the untransformed events that are read to date for a specific for search ID (SID).\n      properties:\n        IsTimeCursored:\n          description: Specifies if the events are returned in time order.\n          type: boolean\n        buckets:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/SingleTimeBucket'\n          type: array\n        cursorTime:\n          description: Identifies where the cursor is in processing the events. The\n            'cursorTime' is a timestamp specified in UNIX time.\n          type: number\n        eventCount:\n          description: The number of events processed at the 'cursorTime'.\n          type: integer\n      type: object\n    UpdateJob:\n      description: Updates a search job with a status.\n      properties:\n        status:\n          description: \"Modify the status of an existing search job using PATCH. The\n            only status values you can PATCH are 'canceled' and 'finalized'.  You\n            can PATCH the 'canceled' status only to a search job that is running.\n            'finalize' means to terminate the search job, and the status will be set\n            to 'failed'. \\n\"\n          enum:\n          - canceled\n          - finalized\n          type: string\n      required:\n      - status\n      type: object\n    UserMetadataProperties:\n      description: Owner, createdby, and modifiedby user name properties for inclusion\n        in other objects.\n      properties:\n        createdby:\n          description: The name of the user who created the object. This value is\n            obtained from the bearer token and may not be changed.\n          example: janedoe\n          readOnly: true\n          type: string\n        modifiedby:\n          description: The name of the user who most recently modified the object.\n          example: suedoe\n          readOnly: true\n          type: string\n        owner:\n          description: The name of the object's owner.\n          example: johndoe\n          readOnly: true\n          type: string\n      required:\n      - owner\n      - createdby\n      - modifiedby\n      type: object\n  securitySchemes:\n    BasicAuth:\n      scheme: basic\n      type: http\ninfo:\n  description: Use the Search service in Splunk Cloud Services to dispatch, review,\n    and manage searches and search jobs. You can finalize or cancel jobs, retrieve\n    search results, and request search-related configurations from the Metadata Catalog\n    service in Splunk Cloud Services.\n  title: Splunk Search service\n  version: v2\nopenapi: 3.0.0\npaths:\n  /{tenant}/search/v2/connections:\n    get:\n      description: Returns all federated connections.\n      operationId: getAllFederatedConnections\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListFederatedConnections'\n          description: |\n            All federated connections were returned successfully.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n    parameters:\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    post:\n      description: |\n        Creates a new federated connection with information about how to connect to a remote index.\n      operationId: createFederatedConnection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FederatedConnectionInput'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FederatedConnection'\n          description: |\n            The federated connection was created successfully.\n        \"400\":\n          description: The request payload isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/connections/{connectionName}:\n    delete:\n      description: |\n        Deletes a federated connection with the specified name (connectionName)\n      operationId: deleteFederatedConnection\n      responses:\n        \"204\":\n          description: |\n            The federated connection with the specified name (connectionName) was deleted successfully.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n    get:\n      description: |\n        Returns the federated connection with the specified name (connectionName).\n      operationId: getFederatedConnectionByName\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FederatedConnection'\n          description: |\n            The federated connection for the specified name (connectionName) was returned successfully.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/connectionName'\n    put:\n      description: |\n        Creates or updates a federated connection with a specified name (connectionName).\n      operationId: putFederatedConnectionByName\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FederatedConnectionInput'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FederatedConnection'\n          description: The federated connection was created or updated successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/connections/{connectionName}/refresh:\n    parameters:\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/connectionName'\n    post:\n      description: |\n        Refresh a federated connection to fetch new remote indexes and add/delete corresponding federated datasets.\n      operationId: refreshFederatedConnection\n      responses:\n        \"201\":\n          description: |\n            The federated connection refresh was successful.\n        \"400\":\n          description: The request payload isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/connections/{connectionName}/test:\n    parameters:\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/connectionName'\n    post:\n      description: |\n        Test connection with remote EC instance using federated connection parameters.\n      operationId: testFederatedConnection\n      responses:\n        \"200\":\n          description: |\n            Successfully able to contact EC stack with given federated connection parameters.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/datasets:\n    get:\n      description: Returns a list of all datasets.\n      operationId: listDatasets\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDatasets'\n          description: The datasets were returned successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"500\":\n          description: An internal service error occurred.\n    parameters:\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    post:\n      description: Creates a dataset.\n      operationId: createDataset\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetPOST'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: The dataset was created successfully.\n        \"400\":\n          description: The request isn’t valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/datasets/{datasetid}:\n    delete:\n      description: |\n        Deletes a dataset with a specified dataset ID (datasetid).\n      operationId: deleteDatasetById\n      responses:\n        \"204\":\n          description: |\n            The dataset with the specified dataset ID (datasetid) was deleted successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n    get:\n      description: |\n        Returns a dataset with a specified dataset ID (datasetid).\n      operationId: getDatasetById\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: |\n            The search job information for the specified datatset ID (datasetid) was returned successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/datasetid'\n    patch:\n      description: |\n        Modifies a dataset with a specified dataset ID (datasetid).\n      operationId: updateDatasetById\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetPATCH'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: The dataset was modified successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn't authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs:\n    get:\n      description: Returns the matching list of search jobs.\n      operationId: listJobs\n      parameters:\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/StatusFilter'\n      - $ref: '#/components/parameters/SidFilter'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SearchJob'\n                type: array\n          description: The list of search jobs was returned successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"500\":\n          description: An internal service error occurred.\n    parameters:\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    post:\n      description: Creates a search job.\n      operationId: createJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchJob'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchJob'\n          description: The search job was created successfully.\n        \"400\":\n          description: The request isn’t valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"412\":\n          description: The precondition check failed. The search query contains commands,\n            thru or into, that have side effects. However, the 'allowSideEffects'\n            query parameter is set to false.\n        \"429\":\n          description: Too many requests were sent. The limit for the maximum number\n            of concurrent searches was reached.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs/{sid}:\n    get:\n      description: Returns the search job with the specified search ID (SID).\n      operationId: getJob\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchJob'\n          description: The search job information for the specified search ID (SID)\n            was returned successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/tenant'\n    - $ref: '#/components/parameters/sid'\n    patch:\n      description: Updates the search job with the specified search ID (SID) with\n        an action.\n      operationId: updateJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateJob'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchJob'\n          description: The search job status was modified successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs/{sid}/export:\n    get:\n      description: Exports the search results for the job with the specified search\n        ID (SID). Export the results as a CSV file or JSON file.\n      operationId: exportResults\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/filename'\n      - $ref: '#/components/parameters/outputMode'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n            text/csv:\n              schema:\n                type: string\n          description: The search results were exported in CSV or JSON format successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs/{sid}/results:\n    get:\n      description: Returns the search results for the job with the specified search\n        ID (SID).\n      operationId: listResults\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/offset'\n      - $ref: '#/components/parameters/Field'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSearchResultsResponse'\n          description: The list of search results was returned successfully. Any results\n            that are ready have been returned. If there are additional results, a\n            'nextLink' URL is provided.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs/{sid}/results-preview:\n    get:\n      description: Returns the preview search results for the job with the specified\n        search ID (SID). Can be used when a job is running to return interim results.\n      operationId: listPreviewResults\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/offset'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPreviewResultsResponse'\n          description: The results preview was returned successfully. If there are\n            additional results, a 'nextLink' URL is provided.\n        \"204\":\n          description: The results preview was returned successfully, but there is\n            no response content.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs/{sid}/timeline-metadata/auto/events-summary:\n    get:\n      description: Returns an events summary for search ID (SID) search.\n      operationId: listEventsSummary\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/count'\n      - $ref: '#/components/parameters/offset'\n      - $ref: '#/components/parameters/Field'\n      - $ref: '#/components/parameters/Earliest'\n      - $ref: '#/components/parameters/Latest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSearchResultsResponse'\n          description: The events summary was returned successfully.\n        \"204\":\n          description: The events summary was returned successfully, but there is\n            no response content.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs/{sid}/timeline-metadata/auto/fields-summary:\n    get:\n      description: Returns a fields stats summary of the events to-date, for search\n        ID (SID) search.\n      operationId: listFieldsSummary\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      - $ref: '#/components/parameters/Earliest'\n      - $ref: '#/components/parameters/Latest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FieldsSummary'\n          description: The fields summary was returned successfully.\n        \"204\":\n          description: The fields summary was returned successfully, but there is\n            no response content.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs/{sid}/timeline-metadata/auto/time-buckets:\n    get:\n      description: Returns the event distribution over time of the untransformed events\n        read to-date, for search ID(SID) search.\n      operationId: listTimeBuckets\n      parameters:\n      - $ref: '#/components/parameters/tenant'\n      - $ref: '#/components/parameters/sid'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeBucketsSummary'\n          description: The timeline buckets were returned successfully.\n        \"204\":\n          description: The timeline buckets were returned successfully, but there\n            is no response content.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n  /{tenant}/search/v2/jobs/delete:\n    parameters:\n    - $ref: '#/components/parameters/AuthorizationHeader'\n    - $ref: '#/components/parameters/tenant'\n    post:\n      description: |\n        Creates a search job that deletes events from an index. The events are deleted from the index in the specified module, based on the search criteria as specified by the predicate.\n      operationId: deleteJob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSearchJob'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSearchJob'\n          description: The delete search job was created successfully.\n        \"400\":\n          description: The request isn't valid.\n        \"401\":\n          description: The user isn’t authenticated.\n        \"403\":\n          description: The operation isn't authorized.\n        \"404\":\n          description: The resource wasn't found.\n        \"500\":\n          description: An internal service error occurred.\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: search/v2/openapi.yaml"
		}
	},
	"Error": "parse: parse spec: paths: /{tenant}/search/v2/jobs: get: operation \"listJobs\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: reference \"#/components/schemas/SearchJob\": parse schema: previewAvailable: parse default: expected type \"string\", got \"bool\""
}