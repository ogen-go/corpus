{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/springdoc/springdoc-openapi"
		},
		"file": {
			"name": "app90.json",
			"size": 0,
			"path": "springdoc-openapi-webflux-core/src/test/resources/results/app90.json",
			"byteSize": 13250,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"OpenAPI definition\",\n    \"version\": \"v0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"\",\n      \"description\": \"Generated server url\"\n    }\n  ],\n  \"paths\": {\n    \"/foo\": {\n      \"get\": {\n        \"operationId\": \"hello\",\n        \"parameters\": [\n          {\n            \"name\": \"key1\",\n            \"in\": \"query\",\n            \"description\": \"My key1 description\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key2\",\n            \"in\": \"query\",\n            \"description\": \"My key2 description\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"This is normal response description\"\n          },\n          \"404\": {\n            \"description\": \"This is another response description\"\n          }\n        }\n      }\n    },\n    \"/books\": {\n      \"get\": {\n        \"tags\": [\n          \"book\"\n        ],\n        \"operationId\": \"findAll_1_1\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              },\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/books/{author}\": {\n      \"get\": {\n        \"tags\": [\n          \"book\",\n          \"book\"\n        ],\n        \"operationId\": \"findByAuthor\",\n        \"parameters\": [\n          {\n            \"name\": \"author\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/books/nest\": {\n      \"get\": {\n        \"tags\": [\n          \"book\"\n        ],\n        \"operationId\": \"findAll\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              },\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/books/nest/{author}\": {\n      \"get\": {\n        \"tags\": [\n          \"book\"\n        ],\n        \"operationId\": \"findByAuthor_1\",\n        \"parameters\": [\n          {\n            \"name\": \"author\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/greeter/greeter2/books\": {\n      \"get\": {\n        \"tags\": [\n          \"book\"\n        ],\n        \"operationId\": \"findAll_1\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/test/greeter/greeter2/books\": {\n      \"get\": {\n        \"tags\": [\n          \"book\"\n        ],\n        \"operationId\": \"findAll_3_1\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              },\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/test/greeter/greeter2/books/{author}\": {\n      \"get\": {\n        \"tags\": [\n          \"book\"\n        ],\n        \"operationId\": \"findByAuthor_2\",\n        \"parameters\": [\n          {\n            \"name\": \"author\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Book\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/employees/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"MyEmployee\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"operationId\": \"findEmployeeById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Employee Id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Employee\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid Employee ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Employee not found\"\n          }\n        }\n      }\n    },\n    \"/createPosition\": {\n      \"post\": {\n        \"tags\": [\n          \"positions\"\n        ],\n        \"description\": \"Save position\",\n        \"operationId\": \"save\",\n        \"requestBody\": {\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Position\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Position\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/deletePosition/{id}\": {\n      \"delete\": {\n        \"tags\": [\n          \"positions\"\n        ],\n        \"description\": \"Delete By Id\",\n        \"operationId\": \"deleteBy\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {}\n          }\n        }\n      }\n    },\n    \"/getAllPositions\": {\n      \"get\": {\n        \"tags\": [\n          \"positions\"\n        ],\n        \"description\": \"Get all positions\",\n        \"operationId\": \"findAll_2\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Position\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/getPosition/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"positions\"\n        ],\n        \"description\": \"Find all\",\n        \"operationId\": \"findById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/stream+json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Position\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/echo\": {\n      \"post\": {\n        \"tags\": [\n          \"quotes\"\n        ],\n        \"operationId\": \"echo_1_1\",\n        \"requestBody\": {\n          \"content\": {\n            \"text/plain\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/hello\": {\n      \"get\": {\n        \"tags\": [\n          \"quotes\"\n        ],\n        \"operationId\": \"hello_1\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/quotes\": {\n      \"get\": {\n        \"tags\": [\n          \"quotes\"\n        ],\n        \"operationId\": \"fetchQuotes_1_1\",\n        \"parameters\": [\n          {\n            \"name\": \"size\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Quote\"\n                  }\n                }\n              },\n              \"application/stream+json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Quote\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Book\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"author\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Employee\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Position\": {\n        \"required\": [\n          \"createdAt\",\n          \"positionName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"positionName\": {\n            \"maxLength\": 140,\n            \"minLength\": 0,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Quote\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ticker\": {\n            \"type\": \"string\"\n          },\n          \"price\": {\n            \"type\": \"number\"\n          },\n          \"instant\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/springdoc/springdoc-openapi@3bd5ba091214b3bc2631e7b860885047f9ab69d1/-/blob/springdoc-openapi-webflux-core/src/test/resources/results/app90.json",
			"externalURLs": [
				{
					"url": "https://github.com/springdoc/springdoc-openapi/blob/3bd5ba091214b3bc2631e7b860885047f9ab69d1/springdoc-openapi-webflux-core/src/test/resources/results/app90.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse servers: at 9:14: server URL must not be empty"
}