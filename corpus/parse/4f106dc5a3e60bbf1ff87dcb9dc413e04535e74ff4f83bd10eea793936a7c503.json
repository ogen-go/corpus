{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chanzuckerberg/single-cell-data-portal"
		},
		"file": {
			"name": "portal-api.yml",
			"size": 0,
			"path": "backend/portal/api/app/portal-api.yml",
			"byteSize": 40498,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  title: Chan Zuckerberg Initiative cellxgene Data Portal API\n  description: \u003e-\n    This API is under development, and subject frequent breaking changes without notice. Users are encouraged to use the\n    https://cellxgene.cziscience.com to access the cellxgene Data Portal.\nservers:\n  - description: Production environment\n    url: https://api.cellxgene.cziscience.com/\n  - description: Development environment\n    url: https://api.cellxgene.dev.single-cell.czi.technology\n  - description: Staging environment\n    url: https://api.cellxgene.staging.single-cell.czi.technology\npaths:\n  /v1/collections:\n    get:\n      tags:\n        - collections\n      summary: List published collections in Corpora\n      security:\n        - cxguserCookieLenient: []\n        - {}\n      description: \u003e-\n        This lists all collections and their IDs that currently exist in the corpora. If a parameter is specified as\n        a filter, then only collections that meet the status criteria will be outputted.\n      operationId: backend.layers.api.router.get_collections_list\n      parameters:\n        - $ref: \"#/components/parameters/query_user_id\"\n        - name: from_date\n          in: query\n          schema:\n            type: integer\n          description: The date after which collections should have been created. In seconds since epoch.\n        - name: to_date\n          in: query\n          description: The date before which collections should have been created. In seconds since epoch.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - collections\n                properties:\n                  collections:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - id\n                        - created_at\n                      properties:\n                        id:\n                          $ref: \"#/components/schemas/collection_id\"\n                        created_at:\n                          type: number\n                  from_date:\n                    type: integer\n                  to_date:\n                    type: integer\n        \"400\":\n          $ref: \"#/components/responses/400\"\n    post:\n      tags:\n        - collections\n      summary: Create a collection\n      security:\n        - cxguserCookie: []\n      description: \u003e-\n        Creates a new collection in corpora. Once a collection is created it can be linked to datasets.\n      operationId: backend.layers.api.router.create_collection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              required:\n                - name\n                - description\n                - contact_name\n                - contact_email\n              properties:\n                name:\n                  type: string\n                  description: name of the collection\n                description:\n                  type: string\n                  description: description of the collection\n                contact_name:\n                  type: string\n                  description: name of the primary person of contact for the collection\n                contact_email:\n                  type: string\n                  description: email of contact person for the collection\n                curator_name:\n                  type: string\n                  description: name of the curator of the collection.\n                links:\n                  $ref: \"#/components/schemas/links\"\n      responses:\n        \"201\":\n          description: A new collection has been created.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  collection_id:\n                    $ref: \"#/components/schemas/collection_id\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n\n  /v1/collections/{collection_id}:\n    get:\n      tags:\n        - collections\n      summary: Get a collection's full details\n      security:\n        - cxguserCookieLenient: []\n        - {}\n      description: \u003e-\n        This will return all datasets and associated attributes.\n      operationId: backend.layers.api.router.get_collection_details\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/collection\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"410\":\n          description: Gone\n    post:\n      tags:\n        - collections\n      summary: Start a revision of a public collection,\n      security:\n        - cxguserCookie: []\n        - {}\n      description: \u003e-\n        This will return a private version of the public collection with all datasets and assoicated attributes of the\n        public collection.\n      operationId: backend.layers.api.router.post_collection_revision\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_id\"\n      responses:\n        \"201\":\n          description: A new collection revision has been created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/collection\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"409\":\n          $ref: \"#/components/responses/409\"\n    put:\n      tags:\n        - collections\n      summary: Update a private collection's details\n      security:\n        - cxguserCookie: []\n      description: \u003e-\n        Update a private collection's summary, links, contact info, and description details.\n      operationId: backend.layers.api.router.update_collection\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: name of the collection\n                description:\n                  type: string\n                  description: description of the collection\n                contact_name:\n                  type: string\n                  description: name of the primary person of contact for the collection\n                contact_email:\n                  type: string\n                  description: email of contact person for the collection\n                curator_name:\n                  type: string\n                  description: name of the curator of the collection\n                links:\n                  $ref: \"#/components/schemas/links\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/collection\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n    delete:\n      tags:\n        - collections\n      summary: Delete a collection\n      security:\n        - cxguserCookie: []\n      description: \u003e-\n        Deletes an entire private collection from cellxgene data-portal, including any generated artifacts/assets and\n        deployments.\n      operationId: backend.layers.api.router.delete_collection\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_id\"\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/204\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n\n  /v1/collections/{collection_id}/upload-links:\n    post:\n      summary: Start a dataset upload\n      tags:\n        - collections\n        - datasets\n      description: \u003e-\n        An authenticated user can upload a file from a shared link to add a dataset into their collection.\n      security:\n        - cxguserCookie: []\n      operationId: backend.layers.api.router.upload_link\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                url:\n                  description: The shared link generated by dropbox linking to a dataset.\n                  type: string\n              required:\n                - url\n      responses:\n        \"202\":\n          description: The upload request was accepted.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  dataset_id:\n                    type: string\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"409\":\n          $ref: \"#/components/responses/409\"\n        \"413\":\n          $ref: \"#/components/responses/413\"\n    put:\n      summary: Replace an existing dataset.\n      tags:\n        - collections\n        - datasets\n      description: \u003e-\n        An authenticated user can upload a file from a shared link to replace an existing dataset in their collection.\n\n        The existing dataset must be in an error state or completely uploaded before a replacement can be attempted.\n        Once the upload of the replacement dataset is complete, the previous version of the dataset is removed and is\n        no longer available for downloading through this collection. The replacement datasets are not publicly available\n        until the collection revision is published. The old datasets are available in the public collection until the\n        collection revision is published.\n      security:\n        - cxguserCookie: []\n      operationId: backend.layers.api.router.upload_relink\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                url:\n                  description: The shared link generated by dropbox linking to a dataset.\n                  type: string\n                id:\n                  $ref: \"#/components/schemas/dataset_id\"\n              required:\n                - url\n                - id\n      responses:\n        \"202\":\n          description: The upload request was accepted.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  dataset_id:\n                    type: string\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"405\":\n          $ref: \"#/components/responses/405\"\n        \"413\":\n          $ref: \"#/components/responses/413\"\n\n  /v1/collections/{collection_id}/genesets:\n    post:\n      tags:\n        - collections\n        - genesets\n      summary: Add genesets to a collection\n      security:\n        - cxguserCookie: []\n      description: \u003e-\n        Add genesets to a private collection\n      operationId: backend.portal.api.app.v1.collections.collection_id.genesets.post\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                genesets:\n                  description: A list of genesets including their gene symbols and descriptions\n                  $ref: \"#/components/schemas/user_defined_gene_sets\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/gene_set\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n\n  /v1/collections/{collection_id}/publish:\n    post:\n      tags:\n        - collections\n      summary: Publish a collection\n      security:\n        - cxguserCookie: []\n      description: \u003e-\n        Update status of specified collection to PUBLIC.  This will make it\n        visible on the public sites.\n\n        If publishing modification to a previously published collection, this will replace the old collection with the new\n        published collection. The old collection will no longer be accessible.\n      operationId: backend.layers.api.router.publish_post\n      parameters:\n        - $ref: \"#/components/parameters/path_collection_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data_submission_policy_version:\n                  type: string\n                  description: Which data submission policy was the collection submitted under\n      responses:\n        \"202\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  collection_id:\n                    $ref: \"#/components/schemas/collection_id\"\n                  visibility:\n                    $ref: \"#/components/schemas/visibility\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n\n  /v1/collections/index:\n    get:\n      tags:\n        - collections\n      summary: \u003e-\n        Returns all public, non tombstoned collections. This endpoint is meant to be used for displaying collections\n        in a compact view. It doesn't return all the fields, so it is not suitable for general usage.\n      operationId: backend.layers.api.router.get_collections_index\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - id\n                    - name\n                  properties:\n                    id:\n                      $ref: \"#/components/schemas/collection_id\"\n                    name:\n                      type: string\n                    publisher_metadata:\n                      $ref: \"#/components/schemas/publisher_metadata\"\n                    published_at:\n                      type: number\n                    revised_at:\n                      type: number\n        \"400\":\n          $ref: \"#/components/responses/400\"\n\n  /v1/datasets/{dataset_id}:\n    delete:\n      tags:\n        - datasets\n      summary: Delete a dataset\n      description: \u003e-\n        Cancels the in process upload of a dataset to the data portal and cleans up (removes) any artifacts created\n        in the upload process. If the dataset has already been uploaded and converted, this endpoint deletes it from\n        the data portal and removes associated artifacts\n      operationId: backend.layers.api.router.delete_dataset\n      security:\n        - cxguserCookie: []\n      parameters:\n        - $ref: \"#/components/parameters/path_dataset_id\"\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/202\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"405\":\n          $ref: \"#/components/responses/405\"\n\n  /v1/datasets/meta:\n    get:\n      tags:\n        - datasets\n      summary: Given an explorer url return information identifying the dataset it represents\n      description: \u003e-\n        Given a cellxgene Explorer url return some basic metadata about the dataset it represent in the cellxgene\n        Portal data model including its associated dataset id, the s3_uri of the dataset, its tombstone status and\n        the associated parent collection ID.\n      operationId: backend.layers.api.router.get_dataset_identifiers\n      parameters:\n        - in: query\n          required: true\n          name: url\n          schema:\n            type: string\n          description: The url used to access this dataset in the explorer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  $ref: \"#/components/schemas/dataset_identifiers\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n\n  /v1/datasets/{dataset_id}/assets:\n    get:\n      tags:\n        - datasets\n      summary: Dataset assets\n      description: \u003e-\n        Return a list of all the dataset's assets\n      operationId: backend.layers.api.router.get_dataset_assets\n      parameters:\n        - $ref: \"#/components/parameters/path_dataset_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n\n  /v1/datasets/{dataset_id}/asset/{asset_id}:\n    post:\n      tags:\n        - datasets\n      summary: Request to download a dataset\n      description: \u003e-\n        Request to download a file which on success will generate a pre-signed URL to download the dataset.\n      operationId: backend.layers.api.router.post_dataset_asset\n      parameters:\n        - $ref: \"#/components/parameters/path_dataset_id\"\n        - name: asset_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  dataset_id:\n                    $ref: \"#/components/schemas/dataset_id\"\n                  presigned_url:\n                    type: string\n                  file_name:\n                    type: string\n                  file_size:\n                    type: number\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n\n  /v1/datasets/{dataset_id}/gene_sets:\n    post:\n      tags:\n        - datasets\n        - genesets\n      summary: Update links between a dataset and gene sets\n      security:\n        - cxguserCookie: []\n      description: \u003e-\n        Request to update (add or remove) linkages between a dataset and gene sets. The request must be made by the\n        collection owner and the dataset and gene sets must all belong to the same private collection\n      operationId: backend.portal.api.app.v1.datasets.dataset_id.gene_sets.post\n      parameters:\n        - $ref: \"#/components/parameters/path_dataset_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - add\n                - remove\n              properties:\n                add:\n                  type: array\n                  items:\n                    type: string\n                remove:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/gene_set\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n\n  /v1/datasets/{dataset_id}/status:\n    get:\n      tags:\n        - datasets\n      summary: Get the status of a dataset upload.\n      operationId: backend.layers.api.router.get_status\n      security:\n        - cxguserCookie: []\n      parameters:\n        - $ref: \"#/components/parameters/path_dataset_id\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  dataset_id:\n                    $ref: \"#/components/schemas/dataset_id\"\n                  processing_status:\n                    type: string\n                    enum: [INITIALIZED, PENDING, SUCCESS, FAILURE]\n                  upload_status:\n                    type: string\n                    enum:\n                      [\n                        WAITING,\n                        UPLOADING,\n                        UPLOADED,\n                        FAILED,\n                        CANCEL_PENDING,\n                        CANCELED,\n                        NA,\n                      ]\n                  upload_message:\n                    type: string\n                  upload_progress:\n                    type: number\n                  validation_status:\n                    type: string\n                    enum: [VALIDATING, VALID, INVALID, NA]\n                  validation_message:\n                    type: string\n                  h5ad_status:\n                    type: string\n                    enum:\n                      [\n                        CONVERTING,\n                        CONVERTED,\n                        UPLOADING,\n                        UPLOADED,\n                        SKIPPED,\n                        FAILED,\n                        NA,\n                      ]\n                  cxg_status:\n                    type: string\n                    enum:\n                      [\n                        CONVERTING,\n                        CONVERTED,\n                        UPLOADING,\n                        UPLOADED,\n                        SKIPPED,\n                        FAILED,\n                        NA,\n                      ]\n                  rds_status:\n                    type: string\n                    enum:\n                      [\n                        CONVERTING,\n                        CONVERTED,\n                        UPLOADING,\n                        UPLOADED,\n                        SKIPPED,\n                        FAILED,\n                        NA,\n                      ]\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n\n  /v1/datasets/index:\n    get:\n      tags:\n        - datasets\n      summary: \u003e-\n        Returns all public, non tombstoned datasets. This endpoint is meant to be used for displaying datasets\n        in a compact view. It doesn't return all the fields, so it is not suitable for general usage.\n      security:\n        - cxguserCookieLenient: []\n        - {}\n      description: \u003e-\n        Returns all datasets that belong to public, non tombstoned collections. This endpoint is meant to be used \n        for displaying datasets in a compact view. It doesn't return all the fields, so it is not suitable for general usage.\n      operationId: backend.layers.api.router.get_datasets_index\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    name:\n                      type: string\n                    collection_id:\n                      type: string\n                    assay:\n                      $ref: \"#/components/schemas/ontology_element_array\"\n                    tissue:\n                      $ref: \"#/components/schemas/ontology_element_array\"\n                    tissue_ancestors:\n                      type: array\n                      items:\n                        type: string\n                    disease:\n                      $ref: \"#/components/schemas/ontology_element_array\"\n                    sex:\n                      $ref: \"#/components/schemas/ontology_element_array\"\n                    self_reported_ethnicity:\n                      $ref: \"#/components/schemas/ontology_element_array\"\n                    organism:\n                      $ref: \"#/components/schemas/ontology_element_array\"\n                    development_stage:\n                      $ref: \"#/components/schemas/ontology_element_array\"\n                    development_stage_ancestors:\n                      type: array\n                      items:\n                        type: string\n                    cell_count:\n                      type: integer\n                    cell_type:\n                      $ref: \"#/components/schemas/ontology_element_array\"\n                    cell_type_ancestors:\n                      type: array\n                      items:\n                        type: string\n                    mean_genes_per_cell:\n                      type: number\n                    is_primary_data:\n                      $ref: \"#/components/schemas/is_primary_data\"\n                    donor_id:\n                      type: array\n                      items:\n                        type: string\n                    suspension_type:\n                      type: array\n                      items:\n                        type: string\n                    schema_version:\n                      type: string\n                    explorer_url:\n                      type: string\n                    published_at:\n                      type: number\n                    revised_at:\n                      type: number\n        \"400\":\n          $ref: \"#/components/responses/400\"\n\n  /v1/genesets/{geneset_id}:\n    delete:\n      tags:\n        - genesets\n      summary: Delete a genese\n      security:\n        - cxguserCookie: []\n      description: \u003e-\n        Delete a gene by set removing it from a collection and any data sets it was linked to.\n      operationId: backend.portal.api.app.v1.genesets.geneset_id.delete\n      parameters:\n        - $ref: \"#/components/parameters/path_geneset_id\"\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/202\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"405\":\n          $ref: \"#/components/responses/405\"\n\n  /v1/login:\n    get:\n      tags:\n        - authentication\n      summary: login to the system\n      operationId: backend.portal.api.app.v1.authentication.login\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n\n  /v1/logout:\n    get:\n      tags:\n        - authentication\n      summary: logout of the system\n      operationId: backend.portal.api.app.v1.authentication.logout\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n\n  /v1/userinfo:\n    get:\n      tags:\n        - authentication\n      summary: retrieve user information if the user is logged in\n      operationId: backend.portal.api.app.v1.authentication.userinfo\n      security:\n        - cxguserCookie: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/userinfo\"\n          $ref: \"#/components/responses/200\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n\n  /v1/oauth2/callback:\n    get:\n      tags:\n        - authentication\n      summary: callback function from auth server after login\n      operationId: backend.portal.api.app.v1.authentication.oauth2_callback\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n\n  /v1/auth/key:\n    delete:\n      summary: Delete the curator's API key -- for use with Data Portal UI\n      operationId: backend.portal.api.app.v1.auth.keys.delete\n      security:\n        - cxguserCookie: [ ]\n      responses:\n        \"202\":\n          $ref: \"#/components/responses/202\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n    get:\n      summary: Fetch the identifier of the curator's active API key -- for use with Data Portal UI\n      operationId: backend.portal.api.app.v1.auth.keys.get\n      security:\n        - cxguserCookie: []\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n    post:\n      summary: Generate the curator's API key -- for use with Data Portal UI\n      description: \u003e-\n        Generate and return a curator API key for the user. If there is already a key associated with the\n        user's curator profile, replace it with the new key.\n      operationId: backend.portal.api.app.v1.auth.keys.post\n      security:\n        - cxguserCookie: []\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  key:\n                    type: string\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n\n  /v1/deployed_version:\n    get:\n      summary: Returns version information\n      operationId: backend.portal.api.app.v1.version.get\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200\"\n\ncomponents:\n  schemas:\n    user_id:\n      description: A unique identifier of a logged in User of Corpora.\n      type: string\n    userinfo:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/user_id\"\n        name:\n          description: The user's name\n          type: string\n        email:\n          description: The user's email\n          type: string\n    collection_id:\n      description: A unique identifier of a Collection.\n      type: string\n    dataset_id:\n      description: A unique identifier of a Dataset.\n      type: string\n    geneset_id:\n      description: A unique identifier of a gene set.\n      type: string\n    visibility:\n      description: \u003e-\n        Determines the visibility of the collection, that will either make the collection visible on the public\n        sites or only viewable through obfuscated URLs.\n      type: string\n      enum: [PUBLIC, PRIVATE]\n    distribution:\n      description: \u003e-\n        Cellxgene runs a heuristic to detect the approximate distribution of the data in X so that it can accurately\n        calculate statistical properties of the data. This field enables the curator to override this heuristic\n        and specify the data distribution explicitly.\n      type: string\n      enum: [COUNT, NORMAL]\n    is_primary_data:\n      description: \u003e-\n        Describes whether cellular observations for this dataset are all canonical (PRIMARY),\n        all non-canonical (SECONDARY), or contain a mixture (BOTH).\n      type: string\n      enum: [PRIMARY, SECONDARY, BOTH]\n    links:\n      type: array\n      items:\n        type: object\n        additionalProperties: false\n        required:\n          - link_url\n          - link_type\n        properties:\n          link_name:\n            type: string\n          link_url:\n            type: string\n          link_type:\n            type: string\n            enum: [PROTOCOL, RAW_DATA, DOI, LAB_WEBSITE, OTHER, DATA_SOURCE]\n    collection:\n      type: object\n      required:\n        - name\n        - description\n        - id\n        - visibility\n        - links\n        - datasets\n        - created_at\n        - updated_at\n        - data_submission_policy_version\n      properties:\n        access_type:\n          type: string\n          enum: [READ, WRITE]\n        created_at:\n          type: number\n        updated_at:\n          type: number\n        description:\n          type: string\n        name:\n          type: string\n        id:\n          $ref: \"#/components/schemas/collection_id\"\n        visibility:\n          $ref: \"#/components/schemas/visibility\"\n        links:\n          $ref: \"#/components/schemas/links\"\n        contact_name:\n          type: string\n        contact_email:\n          type: string\n        curator_name:\n          type: string\n        data_submission_policy_version:\n          type: string\n        publisher_metadata:\n          $ref: \"#/components/schemas/publisher_metadata\"\n        datasets:\n          type: array\n          items:\n            $ref: \"#/components/schemas/dataset\"\n        genesets:\n          type: array\n          items:\n            $ref: \"#/components/schemas/gene_set\"\n    publisher_metadata:\n      type: object\n      required:\n        - authors\n        - is_preprint\n        - journal\n        - published_year\n      properties:\n        authors:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              given:\n                type: string\n              family:\n                type: string\n        is_preprint:\n          type: boolean\n        journal:\n          type: string\n        published_day:\n          type: number\n        published_month:\n          type: number\n        published_year:\n          type: number\n\n    ontology_element:\n      type: object\n      properties:\n        ontology_term_id:\n          type: string\n        label:\n          type: string\n    ontology_element_array:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ontology_element\"\n    dataset:\n      type: object\n      required:\n        - id\n        - name\n        - revision\n        - collection_id\n      properties:\n        id:\n          $ref: \"#/components/schemas/dataset_id\"\n        assay:\n          $ref: \"#/components/schemas/ontology_element_array\"\n        tissue:\n          $ref: \"#/components/schemas/ontology_element_array\"\n        disease:\n          $ref: \"#/components/schemas/ontology_element_array\"\n        sex:\n          $ref: \"#/components/schemas/ontology_element_array\"\n        self_reported_ethnicity:\n          $ref: \"#/components/schemas/ontology_element_array\"\n        organism:\n          $ref: \"#/components/schemas/ontology_element_array\"\n        development_stage:\n          $ref: \"#/components/schemas/ontology_element_array\"\n        name:\n          type: string\n        revision:\n          type: integer\n        dataset_deployments:\n          type: array\n          items:\n            type: object\n            properties:\n              url:\n                type: string\n        linked_genesets:\n          type: array\n          items:\n            type: string\n        dataset_assets:\n          type: array\n          items:\n            $ref: \"#/components/schemas/dataset_asset\"\n        collection_id:\n          $ref: \"#/components/schemas/collection_id\"\n        is_primary_data:\n          $ref: \"#/components/schemas/is_primary_data\"\n        cell_type:\n          $ref: \"#/components/schemas/ontology_element_array\"\n        cell_count:\n          type: integer\n        X_approximate_distribution:\n          $ref: \"#/components/schemas/distribution\"\n        donor_id:\n          type: array\n          items:\n            type: string\n        suspension_type:\n          type: array\n          items:\n            type: string\n        schema_version:\n          type: string\n        tombstone:\n          type: boolean\n    dataset_asset:\n      type: object\n      properties:\n        id:\n          type: string\n        dataset_id:\n          type: string\n        filetype:\n          type: string\n          enum: [H5AD, RDS, CXG]\n        filename:\n          type: string\n        s3_uri:\n          type: string\n    gene_set:\n      type: object\n      properties:\n        name:\n          type: string\n        id\":\n          type: string\n        description:\n          type: string\n        linked_datasets:\n          type: array\n          items:\n            type: string\n    problem:\n      type: object\n      description: Error message container for HTTP APIs.\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        detail:\n          type: string\n    user_defined_gene_sets:\n      type: object\n      description: User created geneset information\n      properties:\n        gene_set_name:\n          type: string\n        gene_set_description:\n          type: string\n        genes:\n          type: array\n          items:\n            type: object\n            description: Gene specific information\n            properties:\n              gene_symbol:\n                type: string\n              gene_description:\n                type: string\n              additional_params:\n                type: object\n    dataset_identifiers:\n      type: object\n      description: Information for identifying and accessing a datatset\n      required:\n        - dataset_id\n        - collection_id\n        - tombstoned\n      properties:\n        dataset_id:\n          type: string\n        collection_id:\n          type: string\n        explorer_s3_uri:\n          type: string\n        tombstoned:\n          type: boolean\n\n  parameters:\n    path_collection_id:\n      name: collection_id\n      in: path\n      required: true\n      schema:\n        $ref: \"#/components/schemas/collection_id\"\n    path_dataset_id:\n      name: dataset_id\n      in: path\n      required: true\n      schema:\n        $ref: \"#/components/schemas/dataset_id\"\n    path_geneset_id:\n      name: geneset_id\n      in: path\n      required: true\n      schema:\n        $ref: \"#/components/schemas/geneset_id\"\n    path_filename:\n      name: filename\n      description: The name of a file to add, remove, or download.\n      in: path\n      required: true\n      schema:\n        type: string\n    query_user_id:\n      name: user_id\n      description: an ID that represents the user.\n      in: query\n      schema:\n        $ref: \"#/components/schemas/user_id\"\n    query_visibility:\n      name: visibility\n      in: query\n      schema:\n        $ref: \"#/components/schemas/visibility\"\n        default: PUBLIC\n\n  responses:\n    200:\n      description: OK.\n    201:\n      description: Created.\n    202:\n      description: Accepted\n    204:\n      description: No Content\n    400:\n      description: Invalid parameter.\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    401:\n      description: Failed to authenticate.\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    403:\n      description: Unauthorized.\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    404:\n      description: Resource not found.\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    405:\n      description: Method not allowed.\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    409:\n      description: File conflict.\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n    413:\n      description: Exceed File Size Limit\n      content:\n        application/problem+json:\n          schema:\n            $ref: \"#/components/schemas/problem\"\n  securitySchemes:\n    cxguserCookie:\n      type: apiKey\n      in: cookie\n      name: cxguser\n      x-apikeyInfoFunc: backend.portal.api.app.v1.authentication.apikey_info_func\n    cxguserCookieLenient:\n      type: apiKey\n      in: cookie\n      name: cxguser\n      x-apikeyInfoFunc: backend.portal.api.app.v1.authentication.apikey_info_func_lenient\n",
			"canonicalURL": "/github.com/chanzuckerberg/single-cell-data-portal@67e735aae9bf3226d2b97dbc71c79d2b2ddfcff2/-/blob/backend/portal/api/app/portal-api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/chanzuckerberg/single-cell-data-portal/blob/67e735aae9bf3226d2b97dbc71c79d2b2ddfcff2/backend/portal/api/app/portal-api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/datasets/meta\": get: operation \"backend.layers.api.router.get_dataset_identifiers\": responses: 200: content: application/json: schema: parse schema: at backend/portal/api/app/portal-api.yml:500:19: items: object cannot contain 'items' field"
}