{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/imperva/sonar-toolbox"
		},
		"file": {
			"name": "servicenow.openapi.json",
			"size": 0,
			"path": "integrations/openapi/servicenow.openapi.json",
			"byteSize": 9874,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"ServiceNow\",\n        \"version\": \"1.0.0\",\n        \"contact\": {}\n    },\n    \"servers\": [\n        {\n            \"url\": \"{url}/api/now\",\n            \"description\": \"\",\n            \"variables\": {\n                \"url\": {\n                    \"description\": \"{url}/api/now - will be overwritten with asset_id connection 'url' field\",\n                    \"default\": \"https://demo.servicenow.com\"\n                }\n            }\n        }\n    ],\n    \"paths\": {\n        \"/table/{tableName}\": {\n            \"get\": {\n                \"summary\": \"Retrieves multiple records for the specified table.\",\n                \"description\": \"\",\n                \"externalDocs\": {\n                    \"url\": \"https://developer.servicenow.com/dev.do#!/reference/api/sandiego/rest/c_TableAPI\"\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"tableName\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"Name of the table from which to retrieve the records.\"\n                    },\n                    {\n                        \"name\": \"sysparm_display_value\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"false\"\n                        },\n                        \"description\": \"Determines the type of data returned, either the actual values from the database or the display values of the fields. Display values are manipulated based on the actual value in the database and user or system settings and preferences.\\nIf returning display values, the value that is returned is dependent on the field type.\\n- Choice fields: The database value may be a number, but the display value will be more descriptive.\\n- Date fields: The database value is in UTC format, while the display value is based on the user's time zone.\\n- Encrypted text: The database value is encrypted, while the displayed value is unencrypted based on the user's encryption context.\\n- Reference fields: The database value is sys_id, but the display value is a display field of the referenced record.\\n\\nValid values:\\n    true: Returns the display values for all fields.\\n    false: Returns the actual values from the database.\\n    all: Returns both actual and display values.\\n\\nNote: There is no preferred method for setting this parameter. However, specifying the display value may cause performance issues since it is not reading directly from the database and may include referencing other fields and records. For more information on display values and actual values, see Table API FAQs (KB0534905).\"\n                    },\n                    {\n                        \"name\": \"sysparm_exclude_reference_link\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        },\n                        \"description\": \"Flag that indicates whether to exclude Table API links for reference fields.\\n\\nValid values:\\n    true: Exclude Table API links for reference fields.\\n    false: Include Table API links for reference fields.\\n\"\n                    },\n                    {\n                        \"name\": \"sysparm_fields\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"Comma-separated list of fields to return in the response.\"\n                    },\n                    {\n                        \"name\": \"sysparm_limit\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"number\",\n                            \"default\": 1000\n                        },\n                        \"description\": \"Maximum number of records to return. For requests that exceed this number of records, use the sysparm_offset parameter to paginate record retrieval.\\n\\nThis limit is applied before ACL evaluation. If no records return, including records you have access to, rearrange the record order so records you have access to return first.\\n\\nNote: Unusually large sysparm_limit values can impact system performance.\"\n                    },\n                    {\n                        \"name\": \"sysparm_query\",\n                        \"in\": \"query\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"Encoded query used to filter the result set. You can use a UI filter to obtain a properly encoded query.\\nSyntax: sysparm_query=.\\n\\n    : Name of the table column to filter against.\\n    : Supports the following values:\\n        =: Exactly matches .\\n        !=: Does not match .\\n        ^: Logically AND multiple query statements.\\n        ^OR: Logically OR multiple query statements.\\n        LIKE:  contains the specified string. Only works for  fields whose data type is string.\\n        STARTSWITH:  starts with the specified string. Only works for  fields whose data type is string.\\n        ENDSWITH:  ends with the specified string. Only works for  fields whose data type is string.\\n    : Value to match against.\\n\\nAll parameters are case-sensitive. Queries can contain more than one entry, such as sysparm_query=[].\\n\\nFor example:\\n\\n(sysparm_query=caller_id=javascript:gs.getUserID()^active=true)\\n\\nEncoded queries also support order by functionality. To sort responses based on certain fields, use the ORDERBY and ORDERBYDESC clauses in sysparm_query.\\nSyntax:\\n\\n    ORDERBY\\n    ORDERBYDESC\\n\\nFor example: sysparm_query=active=true^ORDERBYnumber^ORDERBYDESCcategory\\n\\nThis query filters all active records and orders the results in ascending order by number, and then in descending order by category.\\nIf part of the query is invalid, such as by specifying an invalid field name, the instance ignores the invalid part. It then returns rows using only the valid portion of the query. You can control this behavior using the property glide.invalid_query.returns_no_rows. Set this property to true to return no rows on an invalid query.\\nNote: The glide.invalid_query.returns_no_rows property controls the behavior of all queries across the instance, such as in lists, scripts (GlideRecord.query()), and web service APIs.\"\n                    },\n                    {\n                        \"name\": \"BasicAuth\",\n                        \"in\": \"header\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"The asset_id of the connection that matches type:OPENAPI and auth_mechanism:basic\"\n                    }\n                ],\n                \"operationId\": \"get_table\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Request completed successfully. If a valid query returned no results, the response body contains only an empty result array.\"\n                    }\n                },\n                \"tags\": [\n                    \"ServiceNow\",\n                    \"Table\"\n                ]\n            },\n            \"post\": {\n                \"summary\": \"Create single record\",\n                \"description\": \"Create single record\",\n                \"externalDocs\": {\n                    \"url\": \"https://developer.servicenow.com/dev.do#!/reference/api/sandiego/rest/c_TableAPI#table-POST\"\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"tableName\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"Name of the table from which to create a record.\"\n                    },\n                    {\n                        \"name\": \"BasicAuth\",\n                        \"in\": \"header\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"The asset_id of the connection that matches type:OPENAPI and auth_mechanism:basic\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ObjectDTO\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"operationId\": \"create_record\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Request completed successfully\"\n                    }\n                },\n                \"tags\": [\n                    \"ServiceNow\",\n                    \"Table\"\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"links\": {},\n        \"callbacks\": {},\n        \"schemas\": {},\n        \"securitySchemes\": {\n            \"BasicAuth\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            }\n        }\n    },\n    \"tags\": [],\n    \"security\": [\n        {\n            \"BasicAuth\": []\n        }\n    ]\n}",
			"canonicalURL": "/github.com/imperva/sonar-toolbox@ec1b843546810b04ec081aa6700d32ff3a26b6b5/-/blob/integrations/openapi/servicenow.openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/imperva/sonar-toolbox/blob/ec1b843546810b04ec081aa6700d32ff3a26b6b5/integrations/openapi/servicenow.openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/table/{tableName}\": post: operation \"create_record\": requestBody: parse content: application/json: schema: parse schema: at integrations/openapi/servicenow.openapi.json:137:41: $ref: resolve \"#/components/schemas/ObjectDTO\": resolve: can't find value for \"components/schemas/ObjectDTO\""
}