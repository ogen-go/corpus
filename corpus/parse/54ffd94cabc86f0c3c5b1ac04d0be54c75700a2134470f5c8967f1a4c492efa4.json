{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dkackman/chia-api"
		},
		"file": {
			"name": "harvester.yaml",
			"size": 0,
			"path": "src/harvester.yaml",
			"byteSize": 9323,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e-\n    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. \n    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. \n    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication \n    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).\n\n    The harvester uses port 8560 by default.\n  version: 1.3.5\n  title: Chia RPC\n  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf\n  contact:\n    name: Chia Network\n    url: https://www.chia.net/\n    email: hello@chia.net\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://localhost:8560\n    description: Harvester RPC\nsecurity:\n  - bearerAuth: []\ncomponents:\n  requestBodies:\n    empty:\n      $ref: \"./requestBodies/empty.yaml#/empty\"\n  responses:\n    empty:\n      $ref: \"./responses/empty.yaml#/empty\"\n  schemas:\n    connection_info:\n      $ref: \"./schemas/connection_info.yaml#/connection_info\"\n    k_size:\n      $ref: \"./schemas/k_size.yaml#/k_size\"\n    plot_info:\n      $ref: \"./schemas/plot_info.yaml#/plot_info\"\n    apiResponse:\n      $ref: \"./schemas/apiResponse.yaml#/apiResponse\"\n  securitySchemes:\n    bearerAuth:\n      $ref: \"./securitySchemes/bearerAuth.yaml#/bearerAuth\"\ntags:  \n  - name: Shared\n    description: Methods shared by all services.\n  - name: Harvester\n    description: The harvester RPC API is exposed, by default, on port 8560 and contains methods for managing plot files and directories.\npaths:\n  /stop_node:\n    post:\n      tags:\n        - Shared\n      summary: Stop the node.\n      description: Stop the node.\n      operationId: stop_node\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /open_connection:\n    post:\n      tags:\n        - Shared\n      summary: Add a connection to another node.\n      description: Add a connection to another node.\n      operationId: open_connection\n      requestBody:\n        required: true\n        description: the address of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ip\n                - port\n              properties:\n                ip:\n                  type: string\n                  format: ipaddress\n                port:\n                  type: integer\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /close_connection:\n    post:\n      tags:\n        - Shared\n      summary: Removes a connection.\n      description: Removes a connection.\n      operationId: close_connection\n      requestBody:\n        required: true\n        description: the node id of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - node_id\n              properties:\n                node_id:\n                  type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /get_connections:\n    post:\n      tags:\n        - Shared\n      summary: Retrieve the list of connections.\n      description: Retrieve the list of connections.\n      operationId: get_connections\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      connections:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/connection_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /healthz:\n    post:\n      tags:\n        - Shared\n      summary: Heartbeat.\n      description: Heartbeat.\n      operationId: healthz\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiResponse\"\n  /get_routes:\n    post:\n      tags:\n        - Shared\n      summary: Retrieve the list of routes exposed by the service.\n      description: Retrieve the list of routes/endpoints exposed by the service.\n      operationId: get_routes\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      routes:\n                        type: array\n                        items:\n                          type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /add_plot_directory:\n    post:\n      tags:\n        - Harvester\n      summary: Add a plot directory to the harvester configuration.\n      description: Add a plot directory to the harvester configuration.\n      operationId: add_plot_directory\n      requestBody:\n        description: The directory name to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - dirname\n              properties:\n                dirname:\n                  type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /remove_plot_directory:\n    post:\n      tags:\n        - Harvester\n      summary: Removes a plot directory from the harveser configuration.\n      description: Removes a plot directory from the harveser configuration.\n      operationId: remove_plot_directory\n      requestBody:\n        description: The directory name to remove\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - dirname\n              properties:\n                dirname:\n                  type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /get_plot_directories:\n    post:\n      tags:\n        - Harvester\n      summary: Get the list of plot directories from the harvester configuration.\n      description: Get the list of plot directories from the harvester configuration.\n      operationId: get_plot_directories\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      directories:\n                        type: array\n                        items:\n                          type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /refresh_plots:\n    post:\n      tags:\n        - Harvester\n      summary: Refresh the list of plots.\n      description: Refresh the list of plots.\n      operationId: refresh_plots\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /get_plots:\n    post:\n      tags:\n        - Harvester\n      summary: Get information about the plots the harvester knows about.\n      description: Get information about the plots the harvester knows about.\n      operationId: get_plots\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      failed_to_open_filenames:\n                        type: array\n                        items:\n                          type: string\n                      not_found_filenames:\n                        type: array\n                        items:\n                          type: string\n                      plots:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/plot_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /delete_plot:\n    post:\n      tags:\n        - Harvester\n      summary: Permanently delete a plot file.\n      description: Permanently delete a plot file.\n      operationId: delete_plot\n      requestBody:\n        required: true\n        description: the file name of the plot\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - filename\n              properties:\n                filename:\n                  type: string\n            example:\n              filename: plot-k33-2021-06-12-03-55-1d5a2afe637578d6c9dfa04484854831012b678921a8dce5a8aee9c0fd3c1470.plot\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\nexternalDocs:\n  description: Find out more about chia\n  url: https://chia.net\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"apiResponse\": parse schema: resolve \"./schemas/apiResponse.yaml#/apiResponse\": find schema: external base \"./schemas/apiResponse.yaml\" is not supported"
}