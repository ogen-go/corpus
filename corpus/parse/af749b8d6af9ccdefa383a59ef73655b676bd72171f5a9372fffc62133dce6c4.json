{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ethereum/builder-specs"
		},
		"file": {
			"name": "builder-oapi.yaml",
			"size": 0,
			"path": "builder-oapi.yaml",
			"byteSize": 3145,
			"content": "openapi: \"3.0.3\"\n\ninfo:\n  title: Builder API\n  description: |\n    API specification for external builder nodes. This interface enables\n    validators to delegate block building duties such that attribution can be\n    had in the case of most faults (e.g. producing an invalid block).\n\n    API endpoints are individually versioned. As such, there is no direct\n    relationship between all v1 endpoints, all v2 endpoints, _etc._ and no such\n    relationship should be inferred. All JSON responses return the requested\n    data under a `data` key in the top level of their response. Additional\n    metadata may or may not be present in other keys at the top level of the\n    response, dependent on the endpoint. The rules that require an increase in\n    version number are as follows:\n\n      - no field that is listed in an endpoint shall be removed without an\n        increase in the version number\n      - no field that is listed in an endpoint shall be altered in terms of\n        format (_e.g._ from a string to an array) without an increase in the\n        version number\n\n    Note that it is possible for a field to be added to an endpoint's data or\n    metadata without an increase in the version number.\n  version: \"dev\"\n  contact:\n    name: Ethereum Github\n    url: https://github.com/ethereum/builder-specs/issues\n  license:\n    name: \"CC0-1.0\"\n    url: \"https://creativecommons.org/publicdomain/zero/1.0/\"\n\nservers:\n  - url: \"{server_url}\"\n    variables:\n      server_url:\n        description: \"Builder node URL\"\n        default: \"http://localhost:18550\"\n\ntags:\n  - name: Builder\n    description: Set of endpoints to interact with an external block builder.\npaths:\n  /eth/v1/builder/validators:\n    $ref: \"./apis/builder/validators.yaml\"\n  /eth/v1/builder/header/{slot}/{parent_hash}/{pubkey}:\n    $ref: \"./apis/builder/header.yaml\"\n  /eth/v1/builder/blinded_blocks:\n    $ref: \"./apis/builder/blinded_blocks.yaml\"\n  /eth/v1/builder/status:\n    $ref: \"./apis/builder/status.yaml\"\n\ncomponents:\n  schemas:\n    Uint64:\n      $ref: \"./beacon-apis/types/primitive.yaml#/Uint64\"\n    Root:\n      $ref: \"./beacon-apis/types/primitive.yaml#/Root\"\n    Pubkey:\n      $ref: \"./beacon-apis/types/primitive.yaml#/Pubkey\"\n    ErrorMessage:\n      $ref: \"./beacon-apis/types/http.yaml#/ErrorMessage\"\n    Bellatrix.ExecutionPayload:\n      $ref: \"./beacon-apis/types/bellatrix/execution_payload.yaml#/Bellatrix/ExecutionPayload\"\n    Bellatrix.SignedBlindedBeaconBlock:\n      $ref: \"./beacon-apis/types/bellatrix/block.yaml#/Bellatrix/SignedBlindedBeaconBlock\"\n\n    Bellatrix.SignedBuilderBid:\n      $ref: \"./types/bellatrix/bid.yaml#/Bellatrix/SignedBuilderBid\"\n    SignedValidatorRegistration:\n      $ref: \"./beacon-apis/types/registration.yaml#/SignedValidatorRegistration\"\n\n\n  responses:\n    InternalError:\n      $ref: \"./types/http.yaml#/InternalError\"\n\n  examples:\n    Bellatrix.SignedBlindedBeaconBlock:\n      $ref: \"./examples/bellatrix/signed_blinded_beacon_block.json\"\n    Bellatrix.ExecutionPayload:\n      $ref: \"./examples/bellatrix/execution_payload.json\"\n    Bellatrix.SignedBuilderBid:\n      $ref: \"./examples/bellatrix/signed_builder_bid.json\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Root\": parse schema: resolve \"./beacon-apis/types/primitive.yaml#/Root\": find schema: external base \"./beacon-apis/types/primitive.yaml\" is not supported"
}