{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Azure/autorest.modeler"
		},
		"file": {
			"name": "swagger-simple-spec.yaml",
			"size": 0,
			"path": "test/Resource/Swagger/swagger-simple-spec.yaml",
			"byteSize": 3842,
			"content": "openapi: 3.0.0\nservers:\n- url: https://management.azure.com/\ninfo:\n  title: Microsoft Azure Redis Cache Management API\n  description: Some cool documentation.\n  version: 2014-04-01-preview\npaths:\n  \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/Microsoft.Cache/Redis?api-version={apiVersion}\":\n    get:\n      operationId: list\n      summary: Product Types\n      description: The Products endpoint returns information about the Uber products\n        offered at a given location. The response includes the display name and other\n        details about each product, and lists the products in the proper display order.\n      parameters:\n      - \"$ref\": \"#/components/parameters/SubscriptionIdParamterer\"\n      - name: resourceGroupName\n        in: path\n        description: Resource Group ID.\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/ApiVersionParameter\"\n      tags:\n      - Redis\n      responses:\n        '200':\n          description: A list of caches\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Product\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    post:\n      operationId: reset\n      summary: Resets products\n      description: Resets products.\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: Subscription ID.\n        required: true\n        schema:\n          type: string\n      - name: resourceGroupName\n        in: path\n        description: Resource Group ID.\n        required: true\n        schema:\n          type: string\n      - name: apiVersion\n        in: path\n        description: API ID.\n        required: true\n        schema:\n          type: string\n      tags:\n      - Redis\n      responses:\n        '204':\n          description: A list of caches\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    id: 9\n                    category:\n                      name: domestic\n                    name: monster\n                    tags:\n                    - name: for sale\n                    status: alive\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    Product:\n      description: The product documentation.\n      properties:\n        product_id:\n          type: string\n          description: Unique identifier representing a specific product for a given\n            latitude & longitude. For example, uberX in San Francisco will have a\n            different product_id than uberX in Los Angeles.\n        description:\n          type: string\n          description: Description of product.\n        display_name:\n          type: string\n          description: Display name of product.\n        capacity:\n          type: string\n          description: Capacity of product. For example, 4 people.\n          default: '100'\n        image:\n          type: string\n          description: Image URL representing the product.\n      example:\n        name: Puma\n        id: 1\n    Error:\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n        fields:\n          type: string\n  parameters:\n    SubscriptionIdParamterer:\n      name: subscriptionId\n      in: path\n      description: Subscription ID.\n      required: true\n      schema:\n        type: string\n    ApiVersionParameter:\n      name: apiVersion\n      in: path\n      description: API ID.\n      required: true\n      schema:\n        type: string\n",
			"canonicalURL": "/github.com/Azure/autorest.modeler@cd313a2b54e9ab0c8f629c056259daaa0da69b36/-/blob/test/Resource/Swagger/swagger-simple-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Azure/autorest.modeler/blob/cd313a2b54e9ab0c8f629c056259daaa0da69b36/test/Resource/Swagger/swagger-simple-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/Microsoft.Cache/Redis?api-version={apiVersion}\": at 1:1372: get: operation \"list\": at 1:1379: parse path \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/Microsoft.Cache/Redis?api-version={apiVersion}\": path MUST NOT contain a query string"
}