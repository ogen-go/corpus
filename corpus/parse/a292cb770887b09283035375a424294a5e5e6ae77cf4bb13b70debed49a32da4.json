{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/waarp/Waarp-All"
		},
		"file": {
			"name": "list.yaml",
			"size": 0,
			"path": "doc/waarp-r66/source/interface/restv2/filemonitors/list.yaml",
			"byteSize": 10547,
			"content": "openapi: 3.0.0\ninfo:\n  title: API REST pour WaarpR66\n  version: 2.0.0\n  description: API REST pour la gestion de serveurs WaarpR66.\nservers: []\npaths:\n  /v2/filemonitors:\n    get:\n      responses:\n        '200':\n          description: La requête s'est déroulée avec succès.\n          content:\n            application/json:\n              schema:\n                title: Liste de réponses\n                type: object\n                properties:\n                  totalResults:\n                    title: Total de réponses\n                    minimum: 0\n                    format: int32\n                    description: \u003e-\n                      Le nombre total de FileMonitors trouvés.\n                      Si le paramètre countOrder=true est donnée, seule\n                      valeur retournée avec totalSubResults.\n                    type: integer\n                  totalSubResults:\n                    title: Total des sous réponses\n                    minimum: 0\n                    format: int32\n                    description: \u003e-\n                      Le nombre total de Files dans les FileMonitors trouvés.\n                      Si le paramètre countOrder=true est donnée, seule\n                      valeur retournée avec totalResults.\n                    type: integer\n                  results:\n                    title: Réponses\n                    uniqueItems: true\n                    description: Un tableau contenant tous les FileMonitors demandés.\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ObjectFileMonitor'\n                required:\n                  - totalResults\n                  - totalSubResults\n        '400':\n          $ref: '#/components/responses/trait_returnsBadRequest_400'\n      description: \u003e\n        Renvoie une liste des FileMonitors reçus par le serveur respectant les\n        filtres donnés en paramètres de requête, ou simplement le décompte si\n        countOrder=true est passé en paramètre.\n      operationId: Lister les FileMonitors\n      parameters:\n        - name: name\n          in: query\n          description: Nom optionnel du FileMonitor à retourner\n          schema:\n            default: \"\"\n            type: string\n        - name: status\n          in: query\n          description: 0 pour tous les FileMonitors, 1 pour ceux actifs, -1 pour les inactifs.\n          schema:\n            default: 0\n            minimum: -1\n            maximum: 1\n            format: int32\n            type: integer\n        - name: countOrder\n          in: query\n          description: \u003e\n            Si ce paramètre est vrai, la réponse ne contiendra que le nombre\n            des hôtes selon les conditions, sinon la liste réelle.\n\n            Si le paramètre n'est pas défini, la liste est retournée.\n          schema:\n            type: boolean\ncomponents:\n  schemas:\n    ObjectFileMonitorFile:\n      title: FileMonitorFile\n      description: \u003e-\n        Un objet regroupant les informations sur un File issue d'un FileMonitor\n        telles qu'elles sont stockées dans WaarpR66.\n      example:\n        FILE: (1)/testTaskBig_34.txt\n        HASH: c902a17556796a9f97afa23bad130b04\n        LASTTIME: 1599821375000\n        USEDTIME: 1599821387208\n        USED: true\n        ID: -9223372036854775773\n      type: object\n      additionalProperties: false\n      properties:\n        FILE:\n          title: Nom du Fichier\n          description: Nom du Fichier\n          type: string\n        HASH:\n          title: Empreinte du Fichier\n          description: Empreinte du Fichier\n          type: string\n        LASTTIME:\n          title: Date (Timestamp) du dernier check du fichier\n          description: Date (Timestamp) du dernier check du fichier\n          format: int64\n          type: integer\n        USEDTIME:\n          title: Date (Timestamp) du dernier usage du fichier\n          description: Date (Timestamp) du dernier usage du fichier\n          format: int64\n          type: integer\n        USED:\n          title: Indique si le fichier a été transmis\n          description: Indique si le fichier a été transmis\n          type: boolean\n        ID:\n          title: Identifiant du transfert\n          description: Identifiant du transfert\n          type: string\n      required:\n        - FILE\n        - HASH\n        - LASTTIME\n        - USEDTIME\n        - USED\n        - ID\n    ObjectFileMonitor:\n      title: FileMonitor\n      description: \u003e-\n        Un objet regroupant les informations sur un FileMonitor telles qu'elles\n        sont stockées dans WaarpR66.\n      example:\n        NAME: SpooledClient\n        HOST: hostas\n        LAST_UPDATE: 1599821388296\n        GLOBALOK: 87\n        GLOBALERROR: 0\n        TODAYOK: 87\n        TODAYERROR: 0\n        INTERVAL: 500\n        STOPFILE: /tmp/R66/test/stopout.txt\n        STATUSFILE: /tmp/R66/test/statusoutdirect1.json\n        SUBDIRS: false\n        DIRECTORIES: /tmp/R66/test/out/example(1)\n        FILES:\n          - FILE: (1)/testTaskBig_34.txt\n          - HASH: c902a17556796a9f97afa23bad130b04\n          - LASTTIME: 1599821375000\n          - USEDTIME: 1599821387208\n          - USED: true\n          - ID: -9223372036854775773\n      type: object\n      additionalProperties: false\n      properties:\n        NAME:\n          title: Nom du FileMonitor\n          description: Nom du FileMonitor\n          type: string\n        HOST:\n          title: Nom du Serveur WaarpR66 cible\n          description: Nom du Serveur WaarpR66 ciblé par le transfert\n          type: string\n        LAST_UPDATE:\n          title: Date (Timestamp) du dernier update du fichier\n          description: Date (Timestamp) du dernier update du fichier\n          format: int64\n          type: integer\n        GLOBALOK:\n          title: Nombre de transferts OK\n          description: Nombre de transferts OK au sein du FileMonitor depuis son lancement\n          format: int32\n          type: integer\n        GLOBALERROR:\n          title: Nombre de transferts KO\n          description: Nombre de transferts KO au sein du FileMonitor depuis son lancement\n          format: int32\n          type: integer\n        TODAYOK:\n          title: Nombre de transferts OK du jour\n          description: Nombre de transferts OK au sein du FileMonitor ce jour\n          format: int32\n          type: integer\n        TODAYERROR:\n          title: Nombre de transferts KO\n          description: Nombre de transferts KO au sein du FileMonitor ce jour\n          format: int32\n          type: integer\n        INTERVAL:\n          title: Délai entre chaque analyse des fichiers à transmettre du FileMonitor\n          description: Délai entre chaque analyse des fichiers à transmettre du FileMonitor\n          format: int32\n          type: integer\n        STOPFILE:\n          title: Fichier d'arrêt du FileMonitor\n          description: Fichier d'arrêt du FileMonitor\n          type: string\n        STATUSFILE:\n          title: Fichier de status du FileMonitor\n          description: Fichier de status du FileMonitor\n          type: string\n        SUBDIRS:\n          title: Analyse des sousrépertoires par le FileMonitor\n          description: Indique si les sousrépertoires sont scannés par le FileMonitor\n          type: boolean\n        DIRECTORIES:\n          title: Répertoires associés au FileMonitor\n          description: Répertoires associés au FileMonitor\n          type: string\n        FILES:\n          title: Fichiers associés (transférrés ou non) avec le FileMonitor\n          description: Fichiers associés (transférrés ou non) avec le FileMonitor\n          type: object\n      required:\n        - NAME\n        - HOST\n        - LAST_UPDATE\n        - GLOBALOK\n        - GLOBALERROR\n        - TODAYOK\n        - TODAYERROR\n        - INTERVAL\n        - STOPFILE\n        - STATUSFILE\n        - SUBDIRS\n        - DIRECTORIES\n        - FILES\n    HttpError:\n      title: Erreurs utilisateur\n      description: \u003e-\n        Un objet listant les causes de l'échec d'une requête REST lorsque cet\n        échec est dû à des entrées utilisateur invalides.\n      type: object\n      properties:\n        errors:\n          title: Liste d'erreurs\n          minItems: 1\n          description: \u003e-\n            Un tableau de toutes les erreurs utilisateurs rencontrées lors du\n            traitement de la requête.\n          type: array\n          items:\n            description: Un objet représentant une erreur utilisateur.\n            type: object\n            properties:\n              message:\n                description: Un message décrivant l'erreur rencontrée.\n                type: string\n              errorCode:\n                format: int32\n                description: Le code d'erreur REST correspondant à l'erreur rencontrée.\n                type: integer\n            required:\n              - message\n              - errorCode\n      required:\n        - errors\n  responses:\n    trait_returnsBadRequest_400:\n      description: \u003e\n        La requête est invalide, soit à cause de paramètres de requête erronés,\n        soit à cause d'un corps de requête invalide.\n\n\n        Les causes de l'échec de la requête sont données dans le corps de la\n        réponse sour forme d'un tableau JSON.\n      content:\n        application/json:\n          example:\n            errors:\n              - message: 'Query parameter ''startTrans'' : illegal value ''not_a_date''.'\n                errorCode: 4\n              - message: 'Query parameter ''status'' : illegal value ''not_a_status''.'\n                errorCode: 4\n          schema:\n            $ref: '#/components/schemas/HttpError'\n  parameters: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  securitySchemes:\n    BasicAuthentication:\n      description: Authentification HTTP basique au moyen d'identifiants encodés en base64.\n      type: http\n      scheme: basic\n    BasicAuthentication+Signature:\n      description: \u003e-\n        Authentification HTTP basique au moyen d'identifiants encodés en base64,\n        avec vérification de signature des requêtes.\n      type: http\n      scheme: basic\n    HmacKey:\n      description: Authentification par le biais d'un hash des identifiants utilisateur.\n      type: apiKey\n      in: header\n      name: Authorization\n    HmacKey+Signature:\n      description: \u003e-\n        Authentification par le biais d'un hash des identifiants utilisateur,\n        avec vérification de signature des requêtes.\n      type: apiKey\n      in: header\n      name: Authorization\n  links: {}\n  callbacks: {}\n",
			"canonicalURL": "/github.com/waarp/Waarp-All@2f56c8adfed83576cd37675e658e4e4f787af5f1/-/blob/doc/waarp-r66/source/interface/restv2/filemonitors/list.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/waarp/Waarp-All/blob/2f56c8adfed83576cd37675e658e4e4f787af5f1/doc/waarp-r66/source/interface/restv2/filemonitors/list.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: securitySchemes: at 1:5968: invalid name: \"HmacKey+Signature\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}