{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/uselotus/lotus"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 167818,
			"content": "openapi: 3.0.3\ninfo:\n  title: Lotus API\n  version: 0.0.1\n  description: Lotus is an open-core pricing and billing engine. We enable API companies\n    to automate and optimize their custom usage-based pricing for any metric.\npaths:\n  /api/balance_adjustments/:\n    get:\n      operationId: api_balance_adjustments_list\n      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        required: true\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CustomerBalanceAdjustment'\n          description: ''\n    post:\n      operationId: api_balance_adjustments_create\n      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerBalanceAdjustmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CustomerBalanceAdjustmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CustomerBalanceAdjustmentRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerBalanceAdjustment'\n          description: ''\n  /api/balance_adjustments/{adjustment_id}/:\n    delete:\n      operationId: api_balance_adjustments_destroy\n      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.\n      parameters:\n      - in: path\n        name: adjustment_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/batch_create_customers/:\n    post:\n      operationId: api_batch_create_customers_create\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerBatchCreateRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CustomerBatchCreateRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CustomerBatchCreateRequestRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerBatchCreateSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerBatchCreateFailure'\n          description: ''\n  /api/customer_feature_access/:\n    get:\n      operationId: api_customer_feature_access_list\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: The customer_id of the customer you want to check access.\n        required: true\n      - in: query\n        name: feature_name\n        schema:\n          type: string\n          minLength: 1\n        description: Name of the feature to check access for.\n        required: true\n      - in: query\n        name: subscription_filters\n        schema:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilterRequest'\n        description: The subscription filters that are applied to this plan's relationship\n          with the customer. If your billing model does not have the ability multiple\n          plans or subscriptions per customer, this is likely not relevant for you.\n          This must be passed in as a stringified JSON object.\n      tags:\n      - api\n      security:\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetFeatureAccess'\n          description: ''\n  /api/customer_metric_access/:\n    get:\n      operationId: api_customer_metric_access_list\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: The customer_id of the customer you want to check access.\n        required: true\n      - in: query\n        name: event_name\n        schema:\n          type: string\n          nullable: true\n          minLength: 1\n        description: The name of the event you are checking access for.\n      - in: query\n        name: metric_id\n        schema:\n          type: string\n          minLength: 1\n          nullable: true\n        description: The metric_id of the metric you are checking access for. Please\n          note that you must porovide exactly one of event_name and metric_id are\n          mutually; a validation error will be thrown if both or none are provided.\n      - in: query\n        name: subscription_filters\n        schema:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilterRequest'\n        description: The subscription filters that are applied to this plan's relationship\n          with the customer. If your billing model does not have the ability multiple\n          plans or subscriptions per customer, this is likely not relevant for you.\n          This must be passed in as a stringified JSON object.\n      tags:\n      - api\n      security:\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GetEventAccess'\n          description: ''\n  /api/customers/:\n    get:\n      operationId: api_customers_list\n      description: A simple ViewSet for viewing and editing Customers.\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Customer'\n          description: ''\n    post:\n      operationId: api_customers_create\n      description: A simple ViewSet for viewing and editing Customers.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CustomerCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CustomerCreateRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Customer'\n          description: ''\n  /api/customers/{customer_id}/:\n    get:\n      operationId: api_customers_retrieve\n      description: A simple ViewSet for viewing and editing Customers.\n      parameters:\n      - in: path\n        name: customer_id\n        schema:\n          type: string\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n        required: true\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Customer'\n          description: ''\n  /api/invoices/:\n    get:\n      operationId: api_invoices_list\n      description: A simple ViewSet for viewing and editing Invoices.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: A filter for invoices for a specific customer\n      - in: query\n        name: payment_status\n        schema:\n          type: array\n          items:\n            enum:\n            - unpaid\n            - paid\n            type: string\n          default:\n          - paid\n        description: A filter for invoices with a specific payment status\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Invoice'\n          description: ''\n  /api/invoices/{invoice_number}/:\n    get:\n      operationId: api_invoices_retrieve\n      description: A simple ViewSet for viewing and editing Invoices.\n      parameters:\n      - in: path\n        name: invoice_number\n        schema:\n          type: string\n        required: true\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n          description: ''\n    patch:\n      operationId: api_invoices_partial_update\n      description: A simple ViewSet for viewing and editing Invoices.\n      parameters:\n      - in: path\n        name: invoice_number\n        schema:\n          type: string\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedInvoiceUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedInvoiceUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedInvoiceUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvoiceUpdate'\n          description: ''\n  /api/plans/:\n    get:\n      operationId: api_plans_list\n      description: A simple ViewSet for viewing and editing Products.\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Plan'\n          description: ''\n  /api/plans/{plan_id}/:\n    get:\n      operationId: api_plans_retrieve\n      description: A simple ViewSet for viewing and editing Products.\n      parameters:\n      - in: path\n        name: plan_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plan'\n          description: ''\n  /api/subscriptions/:\n    get:\n      operationId: api_subscriptions_list\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific customer.\n        required: true\n      - in: query\n        name: plan_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific plan. If not specified, all plans will be\n          canceled.\n      - in: query\n        name: range_end\n        schema:\n          type: string\n          format: date-time\n        description: If specified, will only return subscriptions with a start date\n          before this date.\n      - in: query\n        name: range_start\n        schema:\n          type: string\n          format: date-time\n        description: If specified, will only return subscriptions with an end date\n          after this date.\n      - in: query\n        name: status\n        schema:\n          type: array\n          items:\n            enum:\n            - active\n            - ended\n            - not_started\n            type: string\n          default:\n          - active\n        description: Filter to a specific set of subscription statuses. Defaults to\n          active.\n      tags:\n      - api\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n  /api/subscriptions/add/:\n    post:\n      operationId: api_subscriptions_add_create\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCreateRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n  /api/subscriptions/cancel/:\n    post:\n      operationId: api_subscriptions_cancel_create\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific customer.\n        required: true\n      - in: query\n        name: plan_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific plan. If not specified, all plans will be\n          canceled.\n      - in: query\n        name: subscription_filters\n        schema:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilterRequest'\n        description: Filter to a specific set of subscription filters. If your billing\n          model only allows for one subscription per customer, you very likely do\n          not need this field. Must be formatted as a JSON-encoded + stringified list\n          of dictionaries, where each dictionary has a key of 'property_name' and\n          a key of 'value'.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCancelRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCancelRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCancelRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n  /api/subscriptions/update/:\n    post:\n      operationId: api_subscriptions_update_create\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific customer.\n        required: true\n      - in: query\n        name: plan_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific plan.\n        required: true\n      - in: query\n        name: subscription_filters\n        schema:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilterRequest'\n        description: Filter to a specific set of subscription filters. If your billing\n          model only allows for one subscription per customer, you very likely do\n          not need this field. Must be formatted as a JSON-encoded + stringified list\n          of dictionaries, where each dictionary has a key of 'property_name' and\n          a key of 'value'.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n  /api/track/:\n    post:\n      operationId: api_track_create\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchEventRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BatchEventRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BatchEventRequest'\n        required: true\n      security:\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrackEventSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrackEventFailure'\n          description: ''\n  /api/verify_idems_received/:\n    post:\n      operationId: api_verify_idems_received_create\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfirmIdemsReceivedRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ConfirmIdemsReceivedRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ConfirmIdemsReceivedRequestRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfirmIdemsReceived'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfirmIdemsReceivedFailure'\n          description: ''\n  /app/actions/:\n    get:\n      operationId: app_actions_list\n      description: API endpoint that allows events to be viewed.\n      parameters:\n      - name: c\n        required: false\n        in: query\n        description: The pagination cursor value.\n        schema:\n          type: string\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedActionList'\n          description: ''\n  /app/api_tokens/:\n    get:\n      operationId: app_api_tokens_list\n      description: API endpoint that allows API Tokens to be viewed or edited.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/APIToken'\n          description: ''\n    post:\n      operationId: app_api_tokens_create\n      description: API endpoint that allows API Tokens to be viewed or edited.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APITokenRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/APITokenRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/APITokenRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APITokenCreateResponse'\n          description: ''\n  /app/api_tokens/{prefix}/:\n    delete:\n      operationId: app_api_tokens_destroy\n      description: API endpoint that allows API Tokens to be viewed or edited.\n      parameters:\n      - in: path\n        name: prefix\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '204':\n          description: No response body\n  /app/api_tokens/{prefix}/roll/:\n    post:\n      operationId: app_api_tokens_roll_create\n      description: API endpoint that allows API Tokens to be viewed or edited.\n      parameters:\n      - in: path\n        name: prefix\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APITokenRollResponse'\n          description: ''\n  /app/backtests/:\n    get:\n      operationId: app_backtests_list\n      description: A simple ViewSet for viewing and editing Backtests.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BacktestSummary'\n          description: ''\n    post:\n      operationId: app_backtests_create\n      description: A simple ViewSet for viewing and editing Backtests.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BacktestCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BacktestCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/BacktestCreateRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BacktestCreate'\n          description: ''\n  /app/backtests/{backtest_id}/:\n    get:\n      operationId: app_backtests_retrieve\n      description: A simple ViewSet for viewing and editing Backtests.\n      parameters:\n      - in: path\n        name: backtest_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BacktestDetail'\n          description: ''\n  /app/balance_adjustments/:\n    get:\n      operationId: app_balance_adjustments_list\n      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CustomerBalanceAdjustment'\n          description: ''\n    post:\n      operationId: app_balance_adjustments_create\n      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerBalanceAdjustmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CustomerBalanceAdjustmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CustomerBalanceAdjustmentRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerBalanceAdjustment'\n          description: ''\n  /app/balance_adjustments/{adjustment_id}/:\n    delete:\n      operationId: app_balance_adjustments_destroy\n      description: A simple ViewSet meant only for creating CustomerBalanceAdjustments.\n      parameters:\n      - in: path\n        name: adjustment_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '204':\n          description: No response body\n  /app/cost_analysis/:\n    get:\n      operationId: app_cost_analysis_retrieve\n      description: Returns the revenue for an organization in a given time period.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        required: true\n      - in: query\n        name: end_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: start_date\n        schema:\n          type: string\n          format: date\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CostAnalysis'\n          description: ''\n  /app/customer_summary/:\n    get:\n      operationId: app_customer_summary_list\n      description: Get the current settings for the organization.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CustomerSummary'\n          description: ''\n  /app/customer_totals/:\n    get:\n      operationId: app_customer_totals_list\n      description: Return current usage for a customer during a given billing period.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CustomerWithRevenue'\n          description: ''\n  /app/customers/:\n    get:\n      operationId: app_customers_list\n      description: A simple ViewSet for viewing and editing Customers.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Customer'\n          description: ''\n    post:\n      operationId: app_customers_create\n      description: A simple ViewSet for viewing and editing Customers.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomerCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CustomerCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CustomerCreateRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Customer'\n          description: ''\n  /app/customers/{customer_id}/:\n    get:\n      operationId: app_customers_retrieve\n      description: A simple ViewSet for viewing and editing Customers.\n      parameters:\n      - in: path\n        name: customer_id\n        schema:\n          type: string\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Customer'\n          description: ''\n    patch:\n      operationId: app_customers_partial_update\n      description: A simple ViewSet for viewing and editing Customers.\n      parameters:\n      - in: path\n        name: customer_id\n        schema:\n          type: string\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n        required: true\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedCustomerUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedCustomerUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedCustomerUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerUpdate'\n          description: ''\n  /app/demo_register/:\n    post:\n      operationId: app_demo_register_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DemoRegistrationRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DemoRegistrationRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DemoRegistrationRequest'\n        required: true\n      security:\n      - basicAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DemoRegistrationSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DemoRegistrationFailure'\n          description: ''\n  /app/draft_invoice/:\n    get:\n      operationId: app_draft_invoice_retrieve\n      description: Pagination-enabled endpoint for retrieving an organization's event\n        stream.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: The id provided when creating the customer, we suggest matching\n          with your internal customer id in your backend\n        required: true\n      - in: query\n        name: include_next_period\n        schema:\n          type: boolean\n          default: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DraftInvoiceResponse'\n          description: ''\n  /app/events/:\n    get:\n      operationId: app_events_list\n      description: API endpoint that allows events to be viewed.\n      parameters:\n      - name: c\n        required: false\n        in: query\n        description: The pagination cursor value.\n        schema:\n          type: string\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEventList'\n          description: ''\n  /app/external_plan_links/:\n    post:\n      operationId: app_external_plan_links_create\n      description: A simple ViewSet for viewing and editing ExternalPlanLink.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExternalPlanLinkRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ExternalPlanLinkRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ExternalPlanLinkRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExternalPlanLink'\n          description: ''\n  /app/external_plan_links/{external_plan_id}/:\n    delete:\n      operationId: app_external_plan_links_destroy\n      description: A simple ViewSet for viewing and editing ExternalPlanLink.\n      parameters:\n      - in: path\n        name: external_plan_id\n        schema:\n          type: string\n        required: true\n      - in: query\n        name: source\n        schema:\n          enum:\n          - stripe\n          type: string\n          minLength: 1\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '204':\n          description: No response body\n  /app/features/:\n    get:\n      operationId: app_features_list\n      description: A simple ViewSet for viewing and editing Features.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Feature'\n          description: ''\n    post:\n      operationId: app_features_create\n      description: A simple ViewSet for viewing and editing Features.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FeatureRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FeatureRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FeatureRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n          description: ''\n  /app/import_customers/:\n    post:\n      operationId: app_import_customers_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportCustomersRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ImportCustomersRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ImportCustomersRequestRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportCustomerSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportCustomerFailure'\n          description: ''\n  /app/import_payment_objects/:\n    post:\n      operationId: app_import_payment_objects_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportPaymentObjectsRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ImportPaymentObjectsRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ImportPaymentObjectsRequestRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportPaymentObjectSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportPaymentObjectFailure'\n          description: ''\n  /app/invoices/:\n    get:\n      operationId: app_invoices_list\n      description: A simple ViewSet for viewing and editing Invoices.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: A filter for invoices for a specific customer\n      - in: query\n        name: payment_status\n        schema:\n          type: array\n          items:\n            enum:\n            - unpaid\n            - paid\n            type: string\n          default:\n          - paid\n        description: A filter for invoices with a specific payment status\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Invoice'\n          description: ''\n  /app/invoices/{invoice_number}/:\n    get:\n      operationId: app_invoices_retrieve\n      description: A simple ViewSet for viewing and editing Invoices.\n      parameters:\n      - in: path\n        name: invoice_number\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n          description: ''\n    patch:\n      operationId: app_invoices_partial_update\n      description: A simple ViewSet for viewing and editing Invoices.\n      parameters:\n      - in: path\n        name: invoice_number\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedInvoiceUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedInvoiceUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedInvoiceUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvoiceUpdate'\n          description: ''\n  /app/login/:\n    post:\n      operationId: app_login_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/LoginRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/LoginRequestRequest'\n        required: true\n      security:\n      - basicAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginFailure'\n          description: ''\n  /app/logout/:\n    post:\n      operationId: app_logout_create\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogoutSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogoutFailure'\n          description: ''\n  /app/metrics/:\n    get:\n      operationId: app_metrics_list\n      description: A simple ViewSet for viewing and editing Billable Metrics.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Metric'\n          description: ''\n    post:\n      operationId: app_metrics_create\n      description: A simple ViewSet for viewing and editing Billable Metrics.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetricCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/MetricCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MetricCreateRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metric'\n          description: ''\n  /app/metrics/{metric_id}/:\n    get:\n      operationId: app_metrics_retrieve\n      description: A simple ViewSet for viewing and editing Billable Metrics.\n      parameters:\n      - in: path\n        name: metric_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metric'\n          description: ''\n    patch:\n      operationId: app_metrics_partial_update\n      description: A simple ViewSet for viewing and editing Billable Metrics.\n      parameters:\n      - in: path\n        name: metric_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedMetricUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedMetricUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedMetricUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricUpdate'\n          description: ''\n  /app/organization/invite/:\n    post:\n      operationId: app_organization_invite_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InviteRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/InviteRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/InviteRequestRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InviteResponse'\n          description: ''\n  /app/organization_settings/:\n    get:\n      operationId: app_organization_settings_list\n      description: A simple ViewSet for viewing and editing OrganizationSettings.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrganizationSetting'\n          description: ''\n  /app/organization_settings/{setting_id}/:\n    get:\n      operationId: app_organization_settings_retrieve\n      description: A simple ViewSet for viewing and editing OrganizationSettings.\n      parameters:\n      - in: path\n        name: setting_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationSetting'\n          description: ''\n    patch:\n      operationId: app_organization_settings_partial_update\n      description: A simple ViewSet for viewing and editing OrganizationSettings.\n      parameters:\n      - in: path\n        name: setting_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedOrganizationSettingRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedOrganizationSettingRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedOrganizationSettingRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationSetting'\n          description: ''\n  /app/organizations/:\n    get:\n      operationId: app_organizations_list\n      description: A simple ViewSet for viewing and editing OrganizationSettings.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Organization'\n          description: ''\n  /app/organizations/{organization_id}/:\n    patch:\n      operationId: app_organizations_partial_update\n      description: A simple ViewSet for viewing and editing OrganizationSettings.\n      parameters:\n      - in: path\n        name: organization_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedOrganizationUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedOrganizationUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedOrganizationUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationUpdate'\n          description: ''\n  /app/payment_providers/:\n    get:\n      operationId: app_payment_providers_list\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SinglePaymentProvider'\n          description: ''\n    post:\n      operationId: app_payment_providers_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentProviderPostRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PaymentProviderPostRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PaymentProviderPostRequestRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentProviderPostResponse'\n          description: ''\n  /app/period_metric_revenue/:\n    get:\n      operationId: app_period_metric_revenue_retrieve\n      description: Returns the revenue for an organization in a given time period.\n      parameters:\n      - in: query\n        name: period_1_end_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: period_1_start_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: period_2_end_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: period_2_start_date\n        schema:\n          type: string\n          format: date\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeriodMetricRevenueResponse'\n          description: ''\n  /app/period_metric_usage/:\n    get:\n      operationId: app_period_metric_usage_retrieve\n      description: Return current usage for a customer during a given billing period.\n      parameters:\n      - in: query\n        name: end_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: start_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: top_n_customers\n        schema:\n          type: integer\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeriodMetricUsageResponse'\n          description: ''\n  /app/period_subscriptions/:\n    get:\n      operationId: app_period_subscriptions_retrieve\n      parameters:\n      - in: query\n        name: period_1_end_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: period_1_start_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: period_2_end_date\n        schema:\n          type: string\n          format: date\n        required: true\n      - in: query\n        name: period_2_start_date\n        schema:\n          type: string\n          format: date\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeriodSubscriptionsResponse'\n          description: ''\n  /app/plan_versions/:\n    post:\n      operationId: app_plan_versions_create\n      description: A simple ViewSet for viewing and editing PlanVersions.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlanVersionCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PlanVersionCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PlanVersionCreateRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlanVersion'\n          description: ''\n  /app/plan_versions/{version_id}/:\n    patch:\n      operationId: app_plan_versions_partial_update\n      description: A simple ViewSet for viewing and editing PlanVersions.\n      parameters:\n      - in: path\n        name: version_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPlanVersionUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedPlanVersionUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedPlanVersionUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlanVersionUpdate'\n          description: ''\n  /app/plans/:\n    get:\n      operationId: app_plans_list\n      description: A simple ViewSet for viewing and editing Products.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Plan'\n          description: ''\n    post:\n      operationId: app_plans_create\n      description: A simple ViewSet for viewing and editing Products.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlanCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PlanCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PlanCreateRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plan'\n          description: ''\n  /app/plans/{plan_id}/:\n    get:\n      operationId: app_plans_retrieve\n      description: A simple ViewSet for viewing and editing Products.\n      parameters:\n      - in: path\n        name: plan_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plan'\n          description: ''\n    patch:\n      operationId: app_plans_partial_update\n      description: A simple ViewSet for viewing and editing Products.\n      parameters:\n      - in: path\n        name: plan_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPlanUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedPlanUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedPlanUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlanUpdate'\n          description: ''\n  /app/plans_by_customer/:\n    get:\n      operationId: app_plans_by_customer_retrieve\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlansByNumCustomers'\n          description: ''\n  /app/pricing_units/:\n    get:\n      operationId: app_pricing_units_list\n      description: A simple ViewSet for viewing and editing PricingUnits.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PricingUnit'\n          description: ''\n    post:\n      operationId: app_pricing_units_create\n      description: A simple ViewSet for viewing and editing PricingUnits.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PricingUnitRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PricingUnitRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PricingUnitRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PricingUnit'\n          description: ''\n  /app/products/:\n    get:\n      operationId: app_products_list\n      description: A simple ViewSet for viewing and editing Products.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Product'\n          description: ''\n    post:\n      operationId: app_products_create\n      description: A simple ViewSet for viewing and editing Products.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProductRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ProductRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ProductRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          description: ''\n  /app/products/{product_id}/:\n    get:\n      operationId: app_products_retrieve\n      description: A simple ViewSet for viewing and editing Products.\n      parameters:\n      - in: path\n        name: product_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          description: ''\n  /app/register/:\n    post:\n      operationId: app_register_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrationRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/RegistrationRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/RegistrationRequest'\n        required: true\n      security:\n      - basicAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistrationSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistrationFailure'\n          description: ''\n  /app/session/:\n    get:\n      operationId: app_session_retrieve\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SessionSuccess'\n          description: ''\n  /app/subscriptions/:\n    get:\n      operationId: app_subscriptions_list\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific customer.\n        required: true\n      - in: query\n        name: plan_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific plan. If not specified, all plans will be\n          canceled.\n      - in: query\n        name: range_end\n        schema:\n          type: string\n          format: date-time\n        description: If specified, will only return subscriptions with a start date\n          before this date.\n      - in: query\n        name: range_start\n        schema:\n          type: string\n          format: date-time\n        description: If specified, will only return subscriptions with an end date\n          after this date.\n      - in: query\n        name: status\n        schema:\n          type: array\n          items:\n            enum:\n            - active\n            - ended\n            - not_started\n            type: string\n          default:\n          - active\n        description: Filter to a specific set of subscription statuses. Defaults to\n          active.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n    post:\n      operationId: app_subscriptions_create\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n  /app/subscriptions/add/:\n    post:\n      operationId: app_subscriptions_add_create\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCreateRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n  /app/subscriptions/cancel/:\n    post:\n      operationId: app_subscriptions_cancel_create\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific customer.\n        required: true\n      - in: query\n        name: plan_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific plan. If not specified, all plans will be\n          canceled.\n      - in: query\n        name: subscription_filters\n        schema:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilterRequest'\n        description: Filter to a specific set of subscription filters. If your billing\n          model only allows for one subscription per customer, you very likely do\n          not need this field. Must be formatted as a JSON-encoded + stringified list\n          of dictionaries, where each dictionary has a key of 'property_name' and\n          a key of 'value'.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCancelRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCancelRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordCancelRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n  /app/subscriptions/update/:\n    post:\n      operationId: app_subscriptions_update_create\n      description: A simple ViewSet for viewing and editing Subscriptions.\n      parameters:\n      - in: query\n        name: customer_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific customer.\n        required: true\n      - in: query\n        name: plan_id\n        schema:\n          type: string\n          minLength: 1\n        description: Filter to a specific plan.\n        required: true\n      - in: query\n        name: subscription_filters\n        schema:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilterRequest'\n        description: Filter to a specific set of subscription filters. If your billing\n          model only allows for one subscription per customer, you very likely do\n          not need this field. Must be formatted as a JSON-encoded + stringified list\n          of dictionaries, where each dictionary has a key of 'property_name' and\n          a key of 'value'.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRecordUpdateRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SubscriptionRecord'\n          description: ''\n  /app/transfer_subscriptions/:\n    post:\n      operationId: app_transfer_subscriptions_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferSubscriptionsRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TransferSubscriptionsRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TransferSubscriptionsRequestRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferSubscriptionsSuccess'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferSubscriptionsFailure'\n          description: ''\n  /app/user/password/reset/:\n    post:\n      operationId: app_user_password_reset_create\n      description: Verifies the token and resets the password.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequestRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequestRequest'\n        required: true\n      security:\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetPasswordSuccess'\n          description: ''\n  /app/user/password/reset/init/:\n    post:\n      operationId: app_user_password_reset_init_create\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EmailRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/EmailRequest'\n        required: true\n      security:\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitResetPasswordSuccess'\n          description: ''\n  /app/users/:\n    get:\n      operationId: app_users_list\n      description: A simple ViewSet for viewing and editing Users.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n          description: ''\n    post:\n      operationId: app_users_create\n      description: A simple ViewSet for viewing and editing Users.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n  /app/webhooks/:\n    get:\n      operationId: app_webhooks_list\n      description: API endpoint that allows alerts to be viewed or edited.\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WebhookEndpoint'\n          description: ''\n    post:\n      operationId: app_webhooks_create\n      description: API endpoint that allows alerts to be viewed or edited.\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebhookEndpointRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/WebhookEndpointRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/WebhookEndpointRequest'\n        required: true\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookEndpoint'\n          description: ''\n  /app/webhooks/{webhook_endpoint_id}/:\n    get:\n      operationId: app_webhooks_retrieve\n      description: API endpoint that allows alerts to be viewed or edited.\n      parameters:\n      - in: path\n        name: webhook_endpoint_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookEndpoint'\n          description: ''\n    patch:\n      operationId: app_webhooks_partial_update\n      description: API endpoint that allows alerts to be viewed or edited.\n      parameters:\n      - in: path\n        name: webhook_endpoint_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedWebhookEndpointRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedWebhookEndpointRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedWebhookEndpointRequest'\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookEndpoint'\n          description: ''\n    delete:\n      operationId: app_webhooks_destroy\n      description: API endpoint that allows alerts to be viewed or edited.\n      parameters:\n      - in: path\n        name: webhook_endpoint_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - app\n      security:\n      - knoxTokenAuth: []\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '204':\n          description: No response body\n  /stripe/webhook/:\n    post:\n      operationId: stripe_webhook_create\n      tags:\n      - stripe\n      security:\n      - OrganizationApiKeyAuth: []\n        TokenAuth: []\n      responses:\n        '200':\n          description: No response body\ncomponents:\n  schemas:\n    APIToken:\n      type: object\n      properties:\n        name:\n          type: string\n          description: A free-form name for the API key. Need not be unique. 50 characters\n            max.\n          maxLength: 50\n        prefix:\n          type: string\n          readOnly: true\n        expiry_date:\n          type: string\n          format: date-time\n          nullable: true\n          title: Expires\n          description: Once API key expires, clients cannot use it anymore.\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created\n      - prefix\n    APITokenCreateResponse:\n      type: object\n      properties:\n        api_key:\n          $ref: '#/components/schemas/APIToken'\n        key:\n          type: string\n      required:\n      - api_key\n      - key\n    APITokenRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          minLength: 1\n          description: A free-form name for the API key. Need not be unique. 50 characters\n            max.\n          maxLength: 50\n        expiry_date:\n          type: string\n          format: date-time\n          nullable: true\n          title: Expires\n          description: Once API key expires, clients cannot use it anymore.\n    APITokenRollResponse:\n      type: object\n      properties:\n        api_key:\n          $ref: '#/components/schemas/APIToken'\n        key:\n          type: string\n      required:\n      - api_key\n      - key\n    Action:\n      type: object\n      description: DRF serializer for :class:`~activity.models.Action`.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        actor:\n          type: string\n          readOnly: true\n        verb:\n          type: string\n          maxLength: 255\n        action_object:\n          type: string\n          readOnly: true\n        target:\n          type: string\n          readOnly: true\n        public:\n          type: boolean\n        description:\n          type: string\n          nullable: true\n        timestamp:\n          type: string\n          format: date-time\n      required:\n      - action_object\n      - actor\n      - id\n      - target\n      - verb\n    AllSubstitutionResults:\n      type: object\n      properties:\n        substitution_results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleSubstitution'\n        original_plans_revenue:\n          type: number\n          format: double\n        new_plans_revenue:\n          type: number\n          format: double\n        pct_revenue_change:\n          type: number\n          format: double\n          nullable: true\n    BacktestCreate:\n      type: object\n      properties:\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n        kpis:\n          type: array\n          items:\n            enum:\n            - total_revenue\n            type: string\n        backtest_name:\n          type: string\n          maxLength: 100\n      required:\n      - backtest_name\n      - end_date\n      - kpis\n      - start_date\n    BacktestCreateRequest:\n      type: object\n      properties:\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n        substitutions:\n          type: array\n          items:\n            $ref: '#/components/schemas/BacktestSubstitutionMultiRequest'\n          writeOnly: true\n        kpis:\n          type: array\n          items:\n            enum:\n            - total_revenue\n            type: string\n        backtest_name:\n          type: string\n          minLength: 1\n          maxLength: 100\n      required:\n      - backtest_name\n      - end_date\n      - kpis\n      - start_date\n      - substitutions\n    BacktestDetail:\n      type: object\n      properties:\n        backtest_name:\n          type: string\n          maxLength: 100\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n        time_created:\n          type: string\n          format: date-time\n        kpis:\n          type: object\n          additionalProperties: {}\n        status:\n          enum:\n          - running\n          - completed\n          - failed\n          type: string\n        backtest_id:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        backtest_substitutions:\n          type: array\n          items:\n            $ref: '#/components/schemas/BacktestSubstitution'\n        backtest_results:\n          $ref: '#/components/schemas/AllSubstitutionResults'\n      required:\n      - backtest_name\n      - backtest_results\n      - backtest_substitutions\n      - end_date\n      - start_date\n    BacktestSubstitution:\n      type: object\n      properties:\n        new_plan:\n          $ref: '#/components/schemas/PlanVersion'\n        original_plan:\n          $ref: '#/components/schemas/PlanVersion'\n      required:\n      - new_plan\n      - original_plan\n    BacktestSubstitutionMulti:\n      type: object\n      properties:\n        new_plan:\n          type: string\n        original_plans:\n          type: array\n          items:\n            type: string\n      required:\n      - new_plan\n      - original_plans\n    BacktestSubstitutionMultiRequest:\n      type: object\n      properties:\n        new_plan:\n          type: string\n          minLength: 1\n        original_plans:\n          type: array\n          items:\n            type: string\n            minLength: 1\n      required:\n      - new_plan\n      - original_plans\n    BacktestSummary:\n      type: object\n      properties:\n        backtest_name:\n          type: string\n          maxLength: 100\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n        time_created:\n          type: string\n          format: date-time\n        kpis:\n          type: object\n          additionalProperties: {}\n        status:\n          enum:\n          - running\n          - completed\n          - failed\n          type: string\n        backtest_id:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n      required:\n      - backtest_name\n      - end_date\n      - start_date\n    BatchEventRequest:\n      type: object\n      properties:\n        batch:\n          type: array\n          items:\n            $ref: '#/components/schemas/EventRequest'\n      required:\n      - batch\n    CategoricalFilter:\n      type: object\n      properties:\n        property_name:\n          type: string\n          readOnly: true\n        operator:\n          enum:\n          - isin\n          - isnotin\n          type: string\n          readOnly: true\n        comparison_value:\n          type: array\n          items:\n            type: string\n      required:\n      - comparison_value\n      - operator\n      - property_name\n    ComponentUsage:\n      type: object\n      properties:\n        event_name:\n          type: string\n          description: The name of the event you are checking access for.\n        metric_name:\n          type: string\n          description: The name of the metric.\n        metric_id:\n          type: string\n          description: The metric_id of the metric. This metric_id can be found in\n            the Lotus frontend if you haven't seen it before.\n        metric_usage:\n          type: number\n          format: double\n          description: The current usage of the metric. Keep in mind the current usage\n            of the metric can be different from the billable usage of the metric.\n        metric_free_limit:\n          type: number\n          format: double\n          nullable: true\n          description: If you specified a free tier of usage for this metric, this\n            is the amount of usage that is free. Will be null if you did not specify\n            a free tier for this metric.\n        metric_total_limit:\n          type: number\n          format: double\n          nullable: true\n          description: The total limit of the metric. Will be null if you did not\n            specify a limit for this metric.\n      required:\n      - event_name\n      - metric_free_limit\n      - metric_id\n      - metric_name\n      - metric_total_limit\n      - metric_usage\n    ConfirmIdemsReceived:\n      type: object\n      properties:\n        status:\n          enum:\n          - success\n          type: string\n        ids_not_found:\n          type: array\n          items:\n            type: string\n      required:\n      - ids_not_found\n      - status\n    ConfirmIdemsReceivedFailure:\n      type: object\n      properties:\n        status:\n          enum:\n          - failure\n          type: string\n        error:\n          type: string\n      required:\n      - error\n      - status\n    ConfirmIdemsReceivedRequestRequest:\n      type: object\n      properties:\n        idempotency_ids:\n          type: array\n          items:\n            type: string\n            minLength: 1\n        number_days_lookback:\n          type: integer\n          default: 30\n        customer_id:\n          type: string\n          minLength: 1\n      required:\n      - idempotency_ids\n    CostAnalysis:\n      type: object\n      properties:\n        per_day:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleDayCostAnalysis'\n        total_cost:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        total_revenue:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        margin:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n      required:\n      - margin\n      - per_day\n      - total_cost\n      - total_revenue\n    Customer:\n      type: object\n      properties:\n        customer_id:\n          type: string\n        email:\n          type: string\n          format: email\n        customer_name:\n          type: string\n        invoices:\n          type: array\n          items:\n            $ref: '#/components/schemas/LightweightInvoice'\n          readOnly: true\n        total_amount_due:\n          type: number\n          format: double\n          readOnly: true\n        subscriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionRecord'\n          readOnly: true\n        integrations:\n          allOf:\n          - $ref: '#/components/schemas/CustomerIntegrations'\n          readOnly: true\n          description: A dictionary containing the customer's integrations. Keys are\n            the integration type, and the value is a dictionary containing the integration's\n            properties, which can vary by integration.\n        default_currency:\n          $ref: '#/components/schemas/PricingUnit'\n        payment_provider:\n          enum:\n          - stripe\n          - null\n          type: string\n          nullable: true\n        has_payment_method:\n          type: boolean\n          readOnly: true\n      required:\n      - customer_id\n      - customer_name\n      - default_currency\n      - email\n      - has_payment_method\n      - integrations\n      - invoices\n      - payment_provider\n      - subscriptions\n      - total_amount_due\n    CustomerBalanceAdjustment:\n      type: object\n      properties:\n        adjustment_id:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        customer_id:\n          type: string\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n        amount:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        pricing_unit:\n          allOf:\n          - $ref: '#/components/schemas/PricingUnit'\n          readOnly: true\n        description:\n          type: string\n          nullable: true\n        effective_at:\n          type: string\n          format: date-time\n        expires_at:\n          type: string\n          format: date-time\n          nullable: true\n        status:\n          enum:\n          - active\n          - inactive\n          type: string\n        parent_adjustment_id:\n          type: string\n          readOnly: true\n      required:\n      - amount\n      - customer_id\n      - parent_adjustment_id\n      - pricing_unit\n    CustomerBalanceAdjustmentRequest:\n      type: object\n      properties:\n        adjustment_id:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        customer_id:\n          type: string\n          minLength: 1\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n        amount:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        pricing_unit_code:\n          type: string\n          minLength: 1\n          writeOnly: true\n        description:\n          type: string\n          nullable: true\n        effective_at:\n          type: string\n          format: date-time\n        expires_at:\n          type: string\n          format: date-time\n          nullable: true\n        status:\n          enum:\n          - active\n          - inactive\n          type: string\n      required:\n      - amount\n      - customer_id\n      - pricing_unit_code\n    CustomerBatchCreateFailure:\n      type: object\n      properties:\n        success:\n          enum:\n          - none\n          type: string\n        failed_customers:\n          type: object\n          additionalProperties: {}\n      required:\n      - failed_customers\n      - success\n    CustomerBatchCreateRequestRequest:\n      type: object\n      properties:\n        customers:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerCreateRequest'\n        behavior_on_existing:\n          enum:\n          - merge\n          - ignore\n          - overwrite\n          type: string\n      required:\n      - behavior_on_existing\n      - customers\n    CustomerBatchCreateSuccess:\n      type: object\n      properties:\n        success:\n          enum:\n          - all\n          - some\n          type: string\n        failed_customers:\n          type: object\n          additionalProperties: {}\n      required:\n      - success\n    CustomerCreateRequest:\n      type: object\n      properties:\n        customer_name:\n          type: string\n          nullable: true\n          description: The display name of the customer\n          maxLength: 100\n        customer_id:\n          type: string\n          minLength: 1\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        email:\n          type: string\n          format: email\n          minLength: 1\n          description: The primary email address of the customer, must be the same\n            as the email address used to create the customer in the payment provider\n        payment_provider:\n          enum:\n          - stripe\n          type: string\n          description: The payment provider this customer is associated with. Currently,\n            only Stripe is supported.\n        payment_provider_id:\n          type: string\n          writeOnly: true\n          nullable: true\n          minLength: 1\n          description: The customer's ID in the specified payment provider. Please\n            note that payment_provider and payment_provider_id are mutually necessary.\n        properties:\n          type: object\n          additionalProperties: {}\n          nullable: true\n          description: Extra metadata for the customer\n        default_currency_code:\n          type: string\n          minLength: 1\n          writeOnly: true\n          description: The currency code this customer will be invoiced in. Codes\n            are 3 letters, e.g. 'USD'.\n      required:\n      - customer_id\n      - email\n    CustomerIntegrations:\n      type: object\n      properties:\n        stripe:\n          allOf:\n          - $ref: '#/components/schemas/CustomerStripeIntegration'\n          nullable: true\n    CustomerStripeIntegration:\n      type: object\n      properties:\n        stripe_id:\n          type: string\n        has_payment_method:\n          type: boolean\n      required:\n      - has_payment_method\n      - stripe_id\n    CustomerSummary:\n      type: object\n      properties:\n        customer_name:\n          type: string\n          nullable: true\n          description: The display name of the customer\n          maxLength: 100\n        customer_id:\n          type: string\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        subscriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCustomerSummary'\n          readOnly: true\n      required:\n      - subscriptions\n    CustomerUpdate:\n      type: object\n      properties:\n        default_currency_code:\n          type: string\n      required:\n      - default_currency_code\n    CustomerWithRevenue:\n      type: object\n      properties:\n        customer_id:\n          type: string\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        total_amount_due:\n          type: number\n          format: double\n          readOnly: true\n      required:\n      - total_amount_due\n    DayMetricUsage:\n      type: object\n      properties:\n        date:\n          type: string\n          format: date\n        customer_usages:\n          type: object\n          additionalProperties:\n            type: number\n            format: double\n            maximum: 10000000000\n            minimum: -10000000000\n            exclusiveMaximum: true\n            exclusiveMinimum: true\n      required:\n      - customer_usages\n      - date\n    DemoRegistrationDetailRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          minLength: 1\n        password:\n          type: string\n          minLength: 1\n        username:\n          type: string\n          minLength: 1\n      required:\n      - email\n      - password\n      - username\n    DemoRegistrationFailure:\n      type: object\n      properties:\n        detail:\n          type: string\n      required:\n      - detail\n    DemoRegistrationRequest:\n      type: object\n      properties:\n        register:\n          $ref: '#/components/schemas/DemoRegistrationDetailRequest'\n      required:\n      - register\n    DemoRegistrationSuccess:\n      type: object\n      properties:\n        detail:\n          type: string\n        token:\n          type: string\n        user:\n          $ref: '#/components/schemas/User'\n      required:\n      - detail\n      - token\n      - user\n    DraftInvoice:\n      type: object\n      properties:\n        currency:\n          $ref: '#/components/schemas/PricingUnit'\n        cost_due:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n        issue_date:\n          type: string\n          format: date-time\n        due_date:\n          type: string\n          format: date-time\n          nullable: true\n        line_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/GroupedLineItem'\n          readOnly: true\n      required:\n      - cost_due\n      - currency\n      - due_date\n      - issue_date\n      - line_items\n    DraftInvoiceResponse:\n      type: object\n      properties:\n        invoice:\n          type: array\n          items:\n            $ref: '#/components/schemas/DraftInvoice'\n    EmailRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          minLength: 1\n      required:\n      - email\n    Event:\n      type: object\n      properties:\n        event_name:\n          type: string\n          description: String name of the event, corresponds to definition in metrics\n          maxLength: 100\n        properties:\n          type: object\n          additionalProperties: {}\n          description: Extra metadata on the event that can be filtered and queried\n            on in the metrics. All key value pairs should have string keys and values\n            can be either strings or numbers. Place subscription filters in this object\n            to specify which subscription the event should be tracked under\n        time_created:\n          type: string\n          format: date-time\n          description: The time that the event occured, represented as a datetime\n            in ISO 8601 in the UTC timezome.\n        idempotency_id:\n          type: string\n          description: A unique identifier for the specific event being passed in.\n            Passing in a unique id allows Lotus to make sure no double counting occurs.\n            We recommend using a UUID4. You can use the same idempotency_id again\n            after 7 days\n        customer_id:\n          type: string\n          description: The id of the customer that this event is associated with,\n            usually the customer id in your backend\n      required:\n      - customer_id\n      - event_name\n      - idempotency_id\n      - time_created\n    EventRequest:\n      type: object\n      properties:\n        event_name:\n          type: string\n          minLength: 1\n          description: String name of the event, corresponds to definition in metrics\n          maxLength: 100\n        properties:\n          type: object\n          additionalProperties: {}\n          description: Extra metadata on the event that can be filtered and queried\n            on in the metrics. All key value pairs should have string keys and values\n            can be either strings or numbers. Place subscription filters in this object\n            to specify which subscription the event should be tracked under\n        time_created:\n          type: string\n          format: date-time\n          description: The time that the event occured, represented as a datetime\n            in ISO 8601 in the UTC timezome.\n        idempotency_id:\n          type: string\n          minLength: 1\n          description: A unique identifier for the specific event being passed in.\n            Passing in a unique id allows Lotus to make sure no double counting occurs.\n            We recommend using a UUID4. You can use the same idempotency_id again\n            after 7 days\n        customer_id:\n          type: string\n          minLength: 1\n          description: The id of the customer that this event is associated with,\n            usually the customer id in your backend\n      required:\n      - customer_id\n      - event_name\n      - idempotency_id\n      - time_created\n    ExternalPlanLink:\n      type: object\n      properties:\n        source:\n          enum:\n          - stripe\n          type: string\n        external_plan_id:\n          type: string\n          maxLength: 100\n      required:\n      - external_plan_id\n      - source\n    ExternalPlanLinkRequest:\n      type: object\n      properties:\n        plan_id:\n          type: string\n          minLength: 1\n          writeOnly: true\n        source:\n          enum:\n          - stripe\n          type: string\n        external_plan_id:\n          type: string\n          minLength: 1\n          maxLength: 100\n      required:\n      - external_plan_id\n      - plan_id\n      - source\n    Feature:\n      type: object\n      properties:\n        feature_name:\n          type: string\n          maxLength: 50\n        feature_description:\n          type: string\n          nullable: true\n      required:\n      - feature_description\n      - feature_name\n    FeatureRequest:\n      type: object\n      properties:\n        feature_name:\n          type: string\n          minLength: 1\n          maxLength: 50\n        feature_description:\n          type: string\n          nullable: true\n      required:\n      - feature_description\n      - feature_name\n    GetEventAccess:\n      type: object\n      properties:\n        plan_id:\n          type: string\n          description: The plan_id of the plan we are checking that has access to\n            this feature.\n        subscription_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilter'\n          description: The subscription filters that are applied to this plan's relationship\n            with the customer. If your billing model does not have the ability multiple\n            plans or subscriptions per customer, this is likely not relevant for you.\n        usage_per_component:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComponentUsage'\n          description: 'The usage of each component of the plan the customer is on.\n            Only components that match the request will be included: If metric_id\n            is provided, this will be a list of length 1. If event_name is provided,\n            this will be a list of length 1 or more depending on how many components\n            of the customer''s plan use this event.'\n      required:\n      - plan_id\n      - subscription_filters\n      - usage_per_component\n    GetFeatureAccess:\n      type: object\n      properties:\n        feature_name:\n          type: string\n          description: Name of the feature to check access for.\n        plan_id:\n          type: string\n          description: The plan_id of the plan we are checking that has access to\n            this feature.\n        subscription_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilter'\n          description: The subscription filters that are applied to this plan's relationship\n            with the customer. If your billing model does not have the ability multiple\n            plans or subscriptions per customer, this is likely not relevant for you.\n        access:\n          type: boolean\n          description: Whether or not the plan has access to this feature. If your\n            customer can have multiple plans or subscriptions, then you must check\n            the 'access' across all returned plans to determine if the customer can\n            access this feature.\n      required:\n      - access\n      - feature_name\n      - plan_id\n      - subscription_filters\n    GroupedLineItem:\n      type: object\n      properties:\n        plan_name:\n          type: string\n        subscription_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilter'\n        subtotal:\n          type: number\n          format: double\n          maximum: 100000000\n          minimum: -100000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        start_date:\n          type: string\n          format: date-time\n        end_date:\n          type: string\n          format: date-time\n        sub_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/LightweightInvoiceLineItem'\n      required:\n      - end_date\n      - plan_name\n      - start_date\n      - sub_items\n      - subscription_filters\n      - subtotal\n    ImportCustomerFailure:\n      type: object\n      properties:\n        status:\n          enum:\n          - error\n          type: string\n        detail:\n          type: string\n      required:\n      - detail\n      - status\n    ImportCustomerSuccess:\n      type: object\n      properties:\n        status:\n          enum:\n          - success\n          type: string\n        detail:\n          type: string\n      required:\n      - detail\n      - status\n    ImportCustomersRequestRequest:\n      type: object\n      properties:\n        source:\n          enum:\n          - stripe\n          type: string\n      required:\n      - source\n    ImportPaymentObjectFailure:\n      type: object\n      properties:\n        status:\n          enum:\n          - error\n          type: string\n        detail:\n          type: string\n      required:\n      - detail\n      - status\n    ImportPaymentObjectSuccess:\n      type: object\n      properties:\n        status:\n          enum:\n          - success\n          type: string\n        detail:\n          type: string\n      required:\n      - detail\n      - status\n    ImportPaymentObjectsRequestRequest:\n      type: object\n      properties:\n        source:\n          enum:\n          - stripe\n          type: string\n      required:\n      - source\n    InitResetPasswordSuccess:\n      type: object\n      properties:\n        email:\n          type: string\n      required:\n      - email\n    InitialExternalPlanLink:\n      type: object\n      properties:\n        source:\n          enum:\n          - stripe\n          type: string\n        external_plan_id:\n          type: string\n          maxLength: 100\n      required:\n      - external_plan_id\n      - source\n    InitialExternalPlanLinkRequest:\n      type: object\n      properties:\n        source:\n          enum:\n          - stripe\n          type: string\n        external_plan_id:\n          type: string\n          minLength: 1\n          maxLength: 100\n      required:\n      - external_plan_id\n      - source\n    InitialPlanVersionRequest:\n      type: object\n      properties:\n        day_anchor:\n          type: integer\n          maximum: 31\n          minimum: 1\n          writeOnly: true\n          nullable: true\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanComponentRequest'\n          nullable: true\n        flat_fee_billing_type:\n          enum:\n          - in_arrears\n          - in_advance\n          type: string\n          writeOnly: true\n        flat_rate:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n          writeOnly: true\n        usage_billing_frequency:\n          enum:\n          - monthly\n          - quarterly\n          - end_of_period\n          - ''\n          - null\n          type: string\n          writeOnly: true\n          nullable: true\n        price_adjustment:\n          $ref: '#/components/schemas/PriceAdjustmentRequest'\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/FeatureRequest'\n          nullable: true\n        transition_to_plan_id:\n          type: string\n          minLength: 1\n        currency_code:\n          type: string\n          minLength: 1\n        month_anchor:\n          type: integer\n          maximum: 12\n          minimum: 1\n          writeOnly: true\n          nullable: true\n        description:\n          type: string\n          writeOnly: true\n          nullable: true\n      required:\n      - flat_fee_billing_type\n    InviteRequestRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          minLength: 1\n      required:\n      - email\n    InviteResponse:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n      required:\n      - email\n    Invoice:\n      type: object\n      properties:\n        invoice_number:\n          type: string\n          maxLength: 13\n        cost_due:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n        currency:\n          $ref: '#/components/schemas/PricingUnit'\n        issue_date:\n          type: string\n          format: date-time\n        payment_status:\n          enum:\n          - draft\n          - voided\n          - paid\n          - unpaid\n          type: string\n        external_payment_obj_id:\n          type: string\n          nullable: true\n          maxLength: 100\n        external_payment_obj_type:\n          enum:\n          - stripe\n          - null\n          type: string\n          nullable: true\n        line_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvoiceLineItem'\n        customer:\n          $ref: '#/components/schemas/LightweightCustomer'\n        due_date:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n      - cost_due\n      - currency\n      - customer\n      - due_date\n      - external_payment_obj_id\n      - external_payment_obj_type\n      - invoice_number\n      - issue_date\n      - line_items\n      - payment_status\n    InvoiceLineItem:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 100\n        start_date:\n          type: string\n          format: date-time\n        end_date:\n          type: string\n          format: date-time\n        quantity:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n          nullable: true\n        subtotal:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        billing_type:\n          enum:\n          - in_arrears\n          - in_advance\n          - null\n          type: string\n          nullable: true\n        metadata:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        plan:\n          $ref: '#/components/schemas/LightweightPlanVersion'\n        subscription_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilter'\n      required:\n      - billing_type\n      - end_date\n      - metadata\n      - name\n      - plan\n      - quantity\n      - start_date\n      - subscription_filters\n      - subtotal\n    InvoiceUpdate:\n      type: object\n      properties:\n        payment_status:\n          enum:\n          - paid\n          - unpaid\n          type: string\n      required:\n      - payment_status\n    LightweightCustomer:\n      type: object\n      properties:\n        customer_name:\n          type: string\n          readOnly: true\n          nullable: true\n          description: The display name of the customer\n        email:\n          type: string\n          format: email\n          readOnly: true\n          description: The primary email address of the customer, must be the same\n            as the email address used to create the customer in the payment provider\n        customer_id:\n          type: string\n          readOnly: true\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n          pattern: ^[-a-zA-Z0-9_]+$\n      required:\n      - customer_id\n      - customer_name\n      - email\n    LightweightInvoice:\n      type: object\n      properties:\n        invoice_number:\n          type: string\n          maxLength: 13\n        currency:\n          $ref: '#/components/schemas/PricingUnit'\n        cost_due:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n        external_payment_obj_type:\n          enum:\n          - stripe\n          - null\n          type: string\n          nullable: true\n        payment_status:\n          enum:\n          - draft\n          - voided\n          - paid\n          - unpaid\n          type: string\n        issue_date:\n          type: string\n          format: date-time\n        external_payment_obj_id:\n          type: string\n          nullable: true\n          maxLength: 100\n        due_date:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n      - cost_due\n      - currency\n      - due_date\n      - external_payment_obj_id\n      - invoice_number\n      - issue_date\n      - payment_status\n      - external_payment_obj_type\n    LightweightInvoiceLineItem:\n      type: object\n      properties:\n        end_date:\n          type: string\n          format: date-time\n        plan:\n          type: string\n        start_date:\n          type: string\n          format: date-time\n        name:\n          type: string\n          maxLength: 100\n        subscription_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilter'\n        billing_type:\n          enum:\n          - in_arrears\n          - in_advance\n          - null\n          type: string\n          nullable: true\n        quantity:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n          nullable: true\n        subtotal:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n      required:\n      - billing_type\n      - end_date\n      - name\n      - plan\n      - quantity\n      - start_date\n      - subscription_filters\n      - subtotal\n    LightweightPlanVersion:\n      type: object\n      properties:\n        plan_name:\n          type: string\n        plan_id:\n          type: string\n        version:\n          type: integer\n          readOnly: true\n      required:\n      - plan_id\n      - plan_name\n      - version\n    LightweightPlanVersionRequest:\n      type: object\n      properties:\n        plan_name:\n          type: string\n          minLength: 1\n        plan_id:\n          type: string\n          minLength: 1\n      required:\n      - plan_id\n      - plan_name\n    LoginFailure:\n      type: object\n      properties:\n        detail:\n          type: string\n      required:\n      - detail\n    LoginRequestRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          minLength: 1\n        password:\n          type: string\n          minLength: 1\n      required:\n      - password\n      - username\n    LoginSuccess:\n      type: object\n      properties:\n        detail:\n          type: string\n        token:\n          type: string\n        user:\n          $ref: '#/components/schemas/User'\n      required:\n      - detail\n      - token\n      - user\n    LogoutFailure:\n      type: object\n      properties:\n        detail:\n          type: string\n      required:\n      - detail\n    LogoutSuccess:\n      type: object\n      properties:\n        detail:\n          type: string\n      required:\n      - detail\n    Metric:\n      type: object\n      properties:\n        metric_id:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        event_name:\n          type: string\n          readOnly: true\n          description: Name of the event that this metric is tracking.\n        property_name:\n          type: string\n          readOnly: true\n          nullable: true\n          description: The name of the property of the event that should be used for\n            this metric. Doesn't apply if the metric is of type 'counter' with an\n            aggregation of count.\n        aggregation_type:\n          type: string\n        granularity:\n          enum:\n          - seconds\n          - minutes\n          - hours\n          - days\n          - months\n          - quarters\n          - years\n          - total\n          - null\n          type: string\n          readOnly: true\n          nullable: true\n          description: The granularity of the metric. Only applies to metrics of type\n            'continuous' or 'rate'.\n        event_type:\n          enum:\n          - delta\n          - total\n          - null\n          type: string\n          readOnly: true\n          nullable: true\n          description: Used only for metrics of type 'continuous'. Please refer to\n            our documentation for an explanation of the different types.\n        metric_type:\n          enum:\n          - counter\n          - stateful\n          - rate\n          type: string\n          readOnly: true\n          description: The type of metric that this is. Please refer to our documentation\n            for an explanation of the different types.\n        metric_name:\n          type: string\n        numeric_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/NumericFilter'\n        categorical_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/CategoricalFilter'\n        is_cost_metric:\n          type: boolean\n          readOnly: true\n          description: Whether or not this metric is a cost metric (used to track\n            costs to your business).\n      required:\n      - aggregation_type\n      - categorical_filters\n      - event_name\n      - event_type\n      - granularity\n      - is_cost_metric\n      - metric_id\n      - metric_name\n      - metric_type\n      - numeric_filters\n      - property_name\n    MetricCreateRequest:\n      type: object\n      properties:\n        metric_id:\n          type: string\n          writeOnly: true\n          minLength: 1\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        event_name:\n          type: string\n          writeOnly: true\n          minLength: 1\n          description: Name of the event that this metric is tracking.\n          maxLength: 50\n        property_name:\n          type: string\n          writeOnly: true\n          nullable: true\n          description: The name of the property of the event that should be used for\n            this metric. Doesn't apply if the metric is of type 'counter' with an\n            aggregation of count.\n          maxLength: 50\n        usage_aggregation_type:\n          enum:\n          - count\n          - sum\n          - max\n          - unique\n          - latest\n          - average\n          type: string\n          writeOnly: true\n          description: The type of aggregation that should be used for this metric.\n            Please refer to our documentation for an explanation of the different\n            types.\n        billable_aggregation_type:\n          enum:\n          - count\n          - sum\n          - max\n          - unique\n          - latest\n          - average\n          - ''\n          - null\n          type: string\n          writeOnly: true\n          nullable: true\n        granularity:\n          enum:\n          - seconds\n          - minutes\n          - hours\n          - days\n          - months\n          - quarters\n          - years\n          - total\n          - ''\n          - null\n          type: string\n          writeOnly: true\n          nullable: true\n          description: The granularity of the metric. Only applies to metrics of type\n            'continuous' or 'rate'.\n        event_type:\n          enum:\n          - delta\n          - total\n          - ''\n          - null\n          type: string\n          writeOnly: true\n          nullable: true\n          description: Used only for metrics of type 'continuous'. Please refer to\n            our documentation for an explanation of the different types.\n        metric_type:\n          enum:\n          - counter\n          - stateful\n          - rate\n          type: string\n          writeOnly: true\n          description: The type of metric that this is. Please refer to our documentation\n            for an explanation of the different types.\n        metric_name:\n          type: string\n          minLength: 1\n        properties:\n          type: object\n          additionalProperties: {}\n          writeOnly: true\n          nullable: true\n        is_cost_metric:\n          type: boolean\n          writeOnly: true\n          description: Whether or not this metric is a cost metric (used to track\n            costs to your business).\n      required:\n      - event_name\n      - metric_name\n      - metric_type\n      - usage_aggregation_type\n    MetricRevenue:\n      type: object\n      properties:\n        metric_name:\n          type: string\n        original_plan_revenue:\n          type: number\n          format: double\n        new_plan_revenue:\n          type: number\n          format: double\n      required:\n      - metric_name\n      - new_plan_revenue\n      - original_plan_revenue\n    MetricUpdate:\n      type: object\n      properties:\n        billable_metric_name:\n          type: string\n          nullable: true\n          maxLength: 50\n        status:\n          enum:\n          - active\n          - archived\n          type: string\n    NumericFilter:\n      type: object\n      properties:\n        property_name:\n          type: string\n          maxLength: 100\n        operator:\n          enum:\n          - gte\n          - gt\n          - eq\n          - lt\n          - lte\n          type: string\n        comparison_value:\n          type: number\n          format: double\n      required:\n      - comparison_value\n      - operator\n      - property_name\n    Organization:\n      type: object\n      properties:\n        organization_id:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        company_name:\n          type: string\n          maxLength: 100\n        payment_plan:\n          enum:\n          - self_hosted_free\n          - cloud\n          - self_hosted_enterprise\n          type: string\n        payment_provider_ids:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrganizationUser'\n          readOnly: true\n        default_currency:\n          $ref: '#/components/schemas/PricingUnit'\n        available_currencies:\n          type: array\n          items:\n            $ref: '#/components/schemas/PricingUnit'\n          readOnly: true\n      required:\n      - available_currencies\n      - company_name\n      - default_currency\n      - users\n    OrganizationSetting:\n      type: object\n      properties:\n        setting_id:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        setting_name:\n          type: string\n          readOnly: true\n        setting_value:\n          type: string\n          maxLength: 100\n        setting_group:\n          type: string\n          readOnly: true\n          nullable: true\n      required:\n      - setting_group\n      - setting_id\n      - setting_name\n      - setting_value\n    OrganizationUpdate:\n      type: object\n      properties:\n        default_currency_code:\n          type: string\n      required:\n      - default_currency_code\n    OrganizationUser:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        role:\n          type: string\n          readOnly: true\n        status:\n          enum:\n          - Active\n          - Invited\n          type: string\n          default: Active\n      required:\n      - email\n      - role\n      - username\n    PaginatedActionList:\n      type: object\n      properties:\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Action'\n    PaginatedEventList:\n      type: object\n      properties:\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Event'\n    PatchedCustomerUpdateRequest:\n      type: object\n      properties:\n        default_currency_code:\n          type: string\n          minLength: 1\n    PatchedInvoiceUpdateRequest:\n      type: object\n      properties:\n        payment_status:\n          enum:\n          - paid\n          - unpaid\n          type: string\n    PatchedMetricUpdateRequest:\n      type: object\n      properties:\n        billable_metric_name:\n          type: string\n          nullable: true\n          maxLength: 50\n        status:\n          enum:\n          - active\n          - archived\n          type: string\n    PatchedOrganizationSettingRequest:\n      type: object\n      properties:\n        setting_value:\n          type: string\n          minLength: 1\n          maxLength: 100\n    PatchedOrganizationUpdateRequest:\n      type: object\n      properties:\n        default_currency_code:\n          type: string\n          minLength: 1\n    PatchedPlanUpdateRequest:\n      type: object\n      properties:\n        plan_name:\n          type: string\n          minLength: 1\n          description: Name of the plan\n          maxLength: 100\n        status:\n          enum:\n          - active\n          - archived\n          type: string\n    PatchedPlanVersionUpdateRequest:\n      type: object\n      properties:\n        description:\n          type: string\n          nullable: true\n        status:\n          enum:\n          - active\n          - archived\n          type: string\n        make_active_type:\n          enum:\n          - replace_immediately\n          - replace_on_active_version_renewal\n          - grandfather_active\n          type: string\n        replace_immediately_type:\n          enum:\n          - end_current_subscription_and_bill\n          - end_current_subscription_dont_bill\n          - change_subscription_plan\n          type: string\n        transition_to_plan_id:\n          type: string\n          minLength: 1\n          writeOnly: true\n    PatchedWebhookEndpointRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n          maxLength: 100\n        webhook_url:\n          type: string\n          minLength: 1\n          maxLength: 100\n        triggers_in:\n          type: array\n          items:\n            enum:\n            - invoice.created\n            - invoice.paid\n            type: string\n          writeOnly: true\n    PaymentProviderPostDataRequest:\n      type: object\n      properties:\n        payment_processor:\n          enum:\n          - stripe\n          type: string\n        data:\n          type: object\n          additionalProperties: {}\n      required:\n      - data\n      - payment_processor\n    PaymentProviderPostRequestRequest:\n      type: object\n      properties:\n        pp_info:\n          $ref: '#/components/schemas/PaymentProviderPostDataRequest'\n      required:\n      - pp_info\n    PaymentProviderPostResponse:\n      type: object\n      properties:\n        payment_processor:\n          enum:\n          - stripe\n          type: string\n        success:\n          type: boolean\n        details:\n          type: string\n      required:\n      - details\n      - payment_processor\n      - success\n    PeriodMetricRevenueResponse:\n      type: object\n      properties:\n        total_revenue_period_1:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        total_revenue_period_2:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        earned_revenue_period_1:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n        earned_revenue_period_2:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n      required:\n      - earned_revenue_period_1\n      - earned_revenue_period_2\n      - total_revenue_period_1\n      - total_revenue_period_2\n    PeriodMetricUsageResponse:\n      type: object\n      properties:\n        metrics:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/PeriodSingleMetricUsage'\n      required:\n      - metrics\n    PeriodSingleMetricUsage:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DayMetricUsage'\n        total_usage:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n      required:\n      - data\n      - total_usage\n    PeriodSubscriptionsResponse:\n      type: object\n      properties:\n        period_1_total_subscriptions:\n          type: integer\n        period_1_new_subscriptions:\n          type: integer\n        period_2_total_subscriptions:\n          type: integer\n        period_2_new_subscriptions:\n          type: integer\n      required:\n      - period_1_new_subscriptions\n      - period_1_total_subscriptions\n      - period_2_new_subscriptions\n      - period_2_total_subscriptions\n    Plan:\n      type: object\n      properties:\n        plan_name:\n          type: string\n          description: Name of the plan\n          maxLength: 100\n        plan_duration:\n          enum:\n          - monthly\n          - quarterly\n          - yearly\n          type: string\n          description: Duration of the plan\n        status:\n          enum:\n          - active\n          - archived\n          - experimental\n          type: string\n        external_links:\n          type: array\n          items:\n            $ref: '#/components/schemas/InitialExternalPlanLink'\n          description: The external links that this plan has.\n        plan_id:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        parent_plan:\n          allOf:\n          - $ref: '#/components/schemas/PlanNameAndID'\n          nullable: true\n        target_customer:\n          allOf:\n          - $ref: '#/components/schemas/LightweightCustomer'\n          nullable: true\n        display_version:\n          $ref: '#/components/schemas/PlanVersion'\n        num_versions:\n          type: integer\n          readOnly: true\n          description: The number of versions that this plan has.\n        active_subscriptions:\n          type: integer\n          readOnly: true\n          description: The number of active subscriptions that this plan has across\n            all versions.\n      required:\n      - active_subscriptions\n      - display_version\n      - external_links\n      - num_versions\n      - plan_duration\n      - plan_id\n      - plan_name\n      - status\n      - parent_plan\n      - target_customer\n    PlanComponent:\n      type: object\n      properties:\n        billable_metric:\n          $ref: '#/components/schemas/Metric'\n        tiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PriceTier'\n        proration_granularity:\n          enum:\n          - seconds\n          - minutes\n          - hours\n          - days\n          - months\n          - quarters\n          - years\n          - total\n          type: string\n        pricing_unit:\n          $ref: '#/components/schemas/PricingUnit'\n      required:\n      - billable_metric\n      - pricing_unit\n      - proration_granularity\n      - tiers\n    PlanComponentRequest:\n      type: object\n      properties:\n        proration_granularity:\n          enum:\n          - seconds\n          - minutes\n          - hours\n          - days\n          - months\n          - quarters\n          - years\n          - total\n          type: string\n        tiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/PriceTierCreateRequest'\n        metric_id:\n          type: string\n          minLength: 1\n          writeOnly: true\n      required:\n      - metric_id\n      - proration_granularity\n    PlanCreateRequest:\n      type: object\n      properties:\n        plan_name:\n          type: string\n          writeOnly: true\n          minLength: 1\n          description: Name of the plan\n          maxLength: 100\n        plan_duration:\n          enum:\n          - monthly\n          - quarterly\n          - yearly\n          type: string\n          writeOnly: true\n          description: Duration of the plan\n        plan_id:\n          type: string\n          writeOnly: true\n          minLength: 1\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        status:\n          enum:\n          - active\n          - archived\n          - experimental\n          type: string\n          writeOnly: true\n        initial_external_links:\n          type: array\n          items:\n            $ref: '#/components/schemas/InitialExternalPlanLinkRequest'\n        initial_version:\n          $ref: '#/components/schemas/InitialPlanVersionRequest'\n        parent_plan_id:\n          type: string\n          minLength: 1\n        target_customer_id:\n          type: string\n          minLength: 1\n          description: The id provided when creating the customer, we suggest matching\n            with your internal customer id in your backend\n      required:\n      - initial_version\n      - plan_duration\n      - plan_name\n    PlanNameAndID:\n      type: object\n      properties:\n        plan_name:\n          type: string\n          description: Name of the plan\n          maxLength: 100\n        plan_id:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n      required:\n      - plan_id\n      - plan_name\n    PlanRepresentation:\n      type: object\n      properties:\n        plan_name:\n          type: string\n        plan_id:\n          type: string\n        plan_revenue:\n          type: number\n          format: double\n      required:\n      - plan_id\n      - plan_name\n      - plan_revenue\n    PlanUpdate:\n      type: object\n      properties:\n        plan_name:\n          type: string\n          description: Name of the plan\n          maxLength: 100\n        status:\n          enum:\n          - active\n          - archived\n          type: string\n      required:\n      - plan_name\n      - status\n    PlanVersion:\n      type: object\n      properties:\n        description:\n          type: string\n          readOnly: true\n          nullable: true\n        flat_fee_billing_type:\n          enum:\n          - in_arrears\n          - in_advance\n          type: string\n          readOnly: true\n        flat_rate:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n          readOnly: true\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanComponent'\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/Feature'\n        price_adjustment:\n          allOf:\n          - $ref: '#/components/schemas/PriceAdjustment'\n          nullable: true\n        usage_billing_frequency:\n          enum:\n          - monthly\n          - quarterly\n          - end_of_period\n          - null\n          type: string\n          readOnly: true\n          nullable: true\n        version:\n          type: integer\n          readOnly: true\n        status:\n          enum:\n          - active\n          - retiring\n          - grandfathered\n          - archived\n          - inactive\n          type: string\n          readOnly: true\n        plan_name:\n          type: string\n        currency:\n          $ref: '#/components/schemas/PricingUnit'\n      required:\n      - components\n      - currency\n      - description\n      - features\n      - flat_fee_billing_type\n      - flat_rate\n      - plan_name\n      - price_adjustment\n      - status\n      - usage_billing_frequency\n      - version\n    PlanVersionCreateRequest:\n      type: object\n      properties:\n        description:\n          type: string\n          writeOnly: true\n          nullable: true\n        plan_id:\n          type: string\n          minLength: 1\n        flat_fee_billing_type:\n          enum:\n          - in_arrears\n          - in_advance\n          type: string\n          writeOnly: true\n        flat_rate:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n          writeOnly: true\n        components:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanComponentRequest'\n          nullable: true\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/FeatureRequest'\n          nullable: true\n        price_adjustment:\n          $ref: '#/components/schemas/PriceAdjustmentRequest'\n        usage_billing_frequency:\n          enum:\n          - monthly\n          - quarterly\n          - end_of_period\n          - ''\n          - null\n          type: string\n          writeOnly: true\n          nullable: true\n        day_anchor:\n          type: integer\n          maximum: 31\n          minimum: 1\n          writeOnly: true\n          nullable: true\n        month_anchor:\n          type: integer\n          maximum: 12\n          minimum: 1\n          writeOnly: true\n          nullable: true\n        make_active:\n          type: boolean\n        make_active_type:\n          enum:\n          - replace_immediately\n          - replace_on_active_version_renewal\n          - grandfather_active\n          type: string\n        replace_immediately_type:\n          enum:\n          - end_current_subscription_and_bill\n          - end_current_subscription_dont_bill\n          - change_subscription_plan\n          type: string\n        transition_to_plan_id:\n          type: string\n          minLength: 1\n        currency_code:\n          type: string\n          minLength: 1\n      required:\n      - flat_fee_billing_type\n      - make_active\n    PlanVersionUpdate:\n      type: object\n      properties:\n        description:\n          type: string\n          nullable: true\n        status:\n          enum:\n          - active\n          - archived\n          type: string\n        make_active_type:\n          enum:\n          - replace_immediately\n          - replace_on_active_version_renewal\n          - grandfather_active\n          type: string\n        replace_immediately_type:\n          enum:\n          - end_current_subscription_and_bill\n          - end_current_subscription_dont_bill\n          - change_subscription_plan\n          type: string\n    PlansByNumCustomers:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SinglePlanNumCustomers'\n        status:\n          enum:\n          - success\n          type: string\n      required:\n      - results\n      - status\n    PriceAdjustment:\n      type: object\n      properties:\n        price_adjustment_name:\n          type: string\n          maxLength: 100\n        price_adjustment_description:\n          type: string\n          nullable: true\n        price_adjustment_type:\n          enum:\n          - percentage\n          - fixed\n          - price_override\n          type: string\n        price_adjustment_amount:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n      required:\n      - price_adjustment_amount\n      - price_adjustment_description\n      - price_adjustment_name\n      - price_adjustment_type\n    PriceAdjustmentRequest:\n      type: object\n      properties:\n        price_adjustment_name:\n          type: string\n          minLength: 1\n          default: ''\n        price_adjustment_description:\n          type: string\n          nullable: true\n        price_adjustment_type:\n          enum:\n          - percentage\n          - fixed\n          - price_override\n          type: string\n        price_adjustment_amount:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n      required:\n      - price_adjustment_amount\n      - price_adjustment_type\n    PriceTier:\n      type: object\n      properties:\n        type:\n          enum:\n          - flat\n          - per_unit\n          - free\n          type: string\n          readOnly: true\n        range_start:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n          readOnly: true\n        range_end:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n          readOnly: true\n          nullable: true\n        cost_per_batch:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n          readOnly: true\n          nullable: true\n        metric_units_per_batch:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n          readOnly: true\n          nullable: true\n        batch_rounding_type:\n          enum:\n          - round_up\n          - round_down\n          - round_nearest\n          - no_rounding\n          - null\n          type: string\n          readOnly: true\n          nullable: true\n      required:\n      - batch_rounding_type\n      - cost_per_batch\n      - metric_units_per_batch\n      - range_end\n      - range_start\n      - type\n    PriceTierCreateRequest:\n      type: object\n      properties:\n        type:\n          enum:\n          - flat\n          - per_unit\n          - free\n          type: string\n        range_start:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n        range_end:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n          nullable: true\n        cost_per_batch:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n          nullable: true\n        metric_units_per_batch:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: 0\n          exclusiveMaximum: true\n          nullable: true\n        batch_rounding_type:\n          enum:\n          - round_up\n          - round_down\n          - round_nearest\n          - no_rounding\n          - ''\n          - null\n          type: string\n          nullable: true\n      required:\n      - range_start\n      - type\n    PricingUnit:\n      type: object\n      properties:\n        code:\n          type: string\n          maxLength: 10\n        name:\n          type: string\n          maxLength: 100\n        symbol:\n          type: string\n          maxLength: 10\n      required:\n      - code\n      - name\n      - symbol\n    PricingUnitRequest:\n      type: object\n      properties:\n        code:\n          type: string\n          minLength: 1\n          maxLength: 10\n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        symbol:\n          type: string\n          minLength: 1\n          maxLength: 10\n      required:\n      - code\n      - name\n      - symbol\n    Product:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 100\n        description:\n          type: string\n          nullable: true\n        product_id:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        status:\n          enum:\n          - active\n          - archived\n          type: string\n      required:\n      - name\n      - status\n    ProductRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        description:\n          type: string\n          nullable: true\n        product_id:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        status:\n          enum:\n          - active\n          - archived\n          type: string\n      required:\n      - name\n      - status\n    RegistrationDetailRequest:\n      type: object\n      properties:\n        company_name:\n          type: string\n        industry:\n          type: string\n        email:\n          type: string\n          minLength: 1\n        password:\n          type: string\n          minLength: 1\n        username:\n          type: string\n          minLength: 1\n      required:\n      - company_name\n      - email\n      - industry\n      - password\n      - username\n    RegistrationFailure:\n      type: object\n      properties:\n        detail:\n          type: string\n      required:\n      - detail\n    RegistrationRequest:\n      type: object\n      properties:\n        register:\n          $ref: '#/components/schemas/RegistrationDetailRequest'\n      required:\n      - register\n    RegistrationSuccess:\n      type: object\n      properties:\n        detail:\n          type: string\n        token:\n          type: string\n        user:\n          $ref: '#/components/schemas/User'\n      required:\n      - detail\n      - token\n      - user\n    ResetPasswordRequestRequest:\n      type: object\n      properties:\n        userId:\n          type: string\n          minLength: 1\n        password:\n          type: string\n          minLength: 1\n        token:\n          type: string\n          minLength: 1\n      required:\n      - password\n      - token\n      - userId\n    ResetPasswordSuccess:\n      type: object\n      properties:\n        detail:\n          type: string\n        token:\n          type: string\n      required:\n      - detail\n      - token\n    RevenueDate:\n      type: object\n      properties:\n        date:\n          type: string\n          format: date\n        original_plan_revenue:\n          type: number\n          format: double\n        new_plan_revenue:\n          type: number\n          format: double\n      required:\n      - date\n      - new_plan_revenue\n      - original_plan_revenue\n    SessionSuccess:\n      type: object\n      properties:\n        isAuthenticated:\n          type: boolean\n      required:\n      - isAuthenticated\n    SingleCustomerValue:\n      type: object\n      properties:\n        customer_id:\n          type: string\n        customer_name:\n          type: string\n        value:\n          type: number\n          format: double\n      required:\n      - customer_id\n      - customer_name\n      - value\n    SingleDayCostAnalysis:\n      type: object\n      properties:\n        date:\n          type: string\n          format: date\n        cost_data:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleMetricCost'\n        revenue:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n      required:\n      - cost_data\n      - date\n      - revenue\n    SingleMetricCost:\n      type: object\n      properties:\n        metric:\n          $ref: '#/components/schemas/Metric'\n        cost:\n          type: number\n          format: double\n          maximum: 10000000000\n          minimum: -10000000000\n          exclusiveMaximum: true\n          exclusiveMinimum: true\n      required:\n      - cost\n      - metric\n    SinglePaymentProvider:\n      type: object\n      properties:\n        payment_provider_name:\n          type: string\n        connected:\n          type: boolean\n        redirect_url:\n          type: string\n          format: uri\n      required:\n      - connected\n      - payment_provider_name\n      - redirect_url\n    SinglePlanNumCustomers:\n      type: object\n      properties:\n        plan_name:\n          type: string\n        num_customers:\n          type: integer\n        percent_total:\n          type: number\n          format: double\n      required:\n      - num_customers\n      - percent_total\n      - plan_name\n    SingleSubstitution:\n      type: object\n      properties:\n        substitution_name:\n          type: string\n        original_plan:\n          $ref: '#/components/schemas/PlanRepresentation'\n        new_plan:\n          $ref: '#/components/schemas/PlanRepresentation'\n        pct_revenue_change:\n          type: number\n          format: double\n          nullable: true\n        results:\n          $ref: '#/components/schemas/SingleSubstitutionResults'\n      required:\n      - new_plan\n      - original_plan\n      - pct_revenue_change\n      - results\n      - substitution_name\n    SingleSubstitutionResults:\n      type: object\n      properties:\n        cumulative_revenue:\n          type: array\n          items:\n            $ref: '#/components/schemas/RevenueDate'\n        revenue_by_metric:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetricRevenue'\n        top_customers:\n          $ref: '#/components/schemas/TopCustomers'\n      required:\n      - cumulative_revenue\n      - revenue_by_metric\n      - top_customers\n    SubscriptionCategoricalFilter:\n      type: object\n      properties:\n        value:\n          type: string\n        property_name:\n          type: string\n          description: 'The string name of the property to filter on. Example: ''product_id'''\n      required:\n      - property_name\n      - value\n    SubscriptionCategoricalFilterRequest:\n      type: object\n      properties:\n        value:\n          type: string\n          minLength: 1\n        property_name:\n          type: string\n          minLength: 1\n          description: 'The string name of the property to filter on. Example: ''product_id'''\n      required:\n      - property_name\n      - value\n    SubscriptionCustomerSummary:\n      type: object\n      properties:\n        billing_plan_name:\n          type: string\n        plan_version:\n          type: string\n        end_date:\n          type: string\n          format: date-time\n          description: The time the subscription starts. This will be a string in\n            yyyy-mm-dd HH:mm:ss format in UTC time.\n        auto_renew:\n          type: boolean\n          description: Whether the subscription automatically renews. Defaults to\n            true.\n      required:\n      - billing_plan_name\n      - end_date\n      - plan_version\n    SubscriptionRecord:\n      type: object\n      properties:\n        start_date:\n          type: string\n          format: date-time\n          description: The time the subscription starts. This will be a string in\n            yyyy-mm-dd HH:mm:ss format in UTC time.\n        end_date:\n          type: string\n          format: date-time\n          description: The time the subscription starts. This will be a string in\n            yyyy-mm-dd HH:mm:ss format in UTC time.\n        auto_renew:\n          type: boolean\n          description: Whether the subscription automatically renews. Defaults to\n            true.\n        is_new:\n          type: boolean\n          description: Whether this subscription came from a renewal or from a first-time.\n            Defaults to true on creation.\n        subscription_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilter'\n        customer:\n          $ref: '#/components/schemas/LightweightCustomer'\n        billing_plan:\n          $ref: '#/components/schemas/LightweightPlanVersion'\n        fully_billed:\n          type: boolean\n          description: Whether the subscription has been fully billed and finalized.\n      required:\n      - auto_renew\n      - billing_plan\n      - customer\n      - end_date\n      - fully_billed\n      - is_new\n      - start_date\n      - subscription_filters\n    SubscriptionRecordCancelRequest:\n      type: object\n      properties:\n        flat_fee_behavior:\n          enum:\n          - refund\n          - prorate\n          - charge_full\n          type: string\n          default: charge_full\n          description: Can either charge the full amount of the flat fee, regardless\n            of how long the customer has been on the plan, prorate the fflat fee,\n            or charge nothing for the flat fee. If the flat fee has already been invoiced\n            (e.g. in advance payment on last subscription), and the reuslting charge\n            is less than the amount already invoiced, the difference will be refunded\n            as a credit. Defaults to charge full amount.\n        usage_behavior:\n          enum:\n          - bill_full\n          - bill_none\n          type: string\n          default: bill_full\n          description: If bill_full, current usage will be billed on the invoice.\n            If bill_none, current unbilled usage will be dropped from the invoice.\n            Defaults to bill_full.\n        invoicing_behavior:\n          enum:\n          - add_to_next_invoice\n          - invoice_now\n          type: string\n          default: invoice_now\n          description: Whether to invoice now or invoice at the end of the billing\n            period. Defaults to invoice now.\n    SubscriptionRecordCreateRequest:\n      type: object\n      properties:\n        start_date:\n          type: string\n          format: date-time\n          description: The date the subscription starts. This should be a string in\n            YYYY-MM-DD format of the date in UTC time.\n        end_date:\n          type: string\n          format: date-time\n          description: The date the subscription ends. This should be a string in\n            YYYY-MM-DD format of the date in UTC time. If you don’t set it (recommended),\n            we will use the information in the billing plan to automatically calculate\n            this.\n        auto_renew:\n          type: boolean\n          description: Whether the subscription automatically renews. Defaults to\n            true.\n        is_new:\n          type: boolean\n        subscription_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilterRequest'\n          description: Add filter key, value pairs that define which events will be\n            applied to this plan subscription.\n        customer_id:\n          type: string\n          minLength: 1\n          description: The id provided when creating the customer\n          writeOnly: true\n        plan_id:\n          type: string\n          minLength: 1\n          writeOnly: true\n          description: The Lotus plan_id, found in the billing plan object\n      required:\n      - customer_id\n      - plan_id\n      - start_date\n    SubscriptionRecordRequest:\n      type: object\n      properties:\n        start_date:\n          type: string\n          format: date-time\n          description: The time the subscription starts. This will be a string in\n            yyyy-mm-dd HH:mm:ss format in UTC time.\n        end_date:\n          type: string\n          format: date-time\n          description: The time the subscription starts. This will be a string in\n            yyyy-mm-dd HH:mm:ss format in UTC time.\n        auto_renew:\n          type: boolean\n          description: Whether the subscription automatically renews. Defaults to\n            true.\n        is_new:\n          type: boolean\n          description: Whether this subscription came from a renewal or from a first-time.\n            Defaults to true on creation.\n        subscription_filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionCategoricalFilterRequest'\n        billing_plan:\n          $ref: '#/components/schemas/LightweightPlanVersionRequest'\n        fully_billed:\n          type: boolean\n          description: Whether the subscription has been fully billed and finalized.\n      required:\n      - auto_renew\n      - billing_plan\n      - end_date\n      - fully_billed\n      - is_new\n      - start_date\n      - subscription_filters\n    SubscriptionRecordUpdateRequest:\n      type: object\n      properties:\n        replace_plan_id:\n          type: string\n          minLength: 1\n          writeOnly: true\n          description: The plan to replace the current plan with\n        invoicing_behavior:\n          enum:\n          - add_to_next_invoice\n          - invoice_now\n          type: string\n          default: invoice_now\n          description: The invoicing behavior to use when replacing the plan. Invoice\n            now will invoice the customer for the prorated difference of the old plan\n            and the new plan, whereas add_to_next_invoice will wait until the end\n            of the subscription to do the calculation.\n        usage_behavior:\n          enum:\n          - transfer_to_new_subscription\n          - keep_separate\n          type: string\n          default: transfer_to_new_subscription\n          description: The usage behavior to use when replacing the plan. Transfer\n            to new subscription will transfer the usage from the old subscription\n            to the new subscription, whereas reset_usage will reset the usage to 0\n            for the new subscription, while keeping the old usage on the old subscription\n            and charging for that appropriately at the end of the month.\n        turn_off_auto_renew:\n          type: boolean\n          description: Turn off auto renew for the subscription\n        end_date:\n          type: string\n          format: date-time\n          description: Change the end date for the subscription.\n    TopCustomers:\n      type: object\n      properties:\n        original_plan_revenue:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleCustomerValue'\n        new_plan_revenue:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleCustomerValue'\n        biggest_pct_increase:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleCustomerValue'\n        biggest_pct_decrease:\n          type: array\n          items:\n            $ref: '#/components/schemas/SingleCustomerValue'\n      required:\n      - biggest_pct_decrease\n      - biggest_pct_increase\n      - new_plan_revenue\n      - original_plan_revenue\n    TrackEventFailure:\n      type: object\n      properties:\n        success:\n          enum:\n          - none\n          type: string\n        failed_events:\n          type: object\n          additionalProperties: {}\n      required:\n      - failed_events\n      - success\n    TrackEventSuccess:\n      type: object\n      properties:\n        success:\n          enum:\n          - all\n          - some\n          type: string\n        failed_events:\n          type: object\n          additionalProperties: {}\n      required:\n      - failed_events\n      - success\n    TransferSubscriptionsFailure:\n      type: object\n      properties:\n        status:\n          enum:\n          - error\n          type: string\n        detail:\n          type: string\n      required:\n      - detail\n      - status\n    TransferSubscriptionsRequestRequest:\n      type: object\n      properties:\n        source:\n          enum:\n          - stripe\n          type: string\n        end_now:\n          type: boolean\n      required:\n      - end_now\n      - source\n    TransferSubscriptionsSuccess:\n      type: object\n      properties:\n        status:\n          enum:\n          - success\n          type: string\n        detail:\n          type: string\n      required:\n      - detail\n      - status\n    User:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        company_name:\n          type: string\n        organization_id:\n          type: string\n      required:\n      - company_name\n      - email\n      - organization_id\n      - username\n    UserRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          minLength: 1\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        company_name:\n          type: string\n          minLength: 1\n        organization_id:\n          type: string\n          minLength: 1\n      required:\n      - company_name\n      - email\n      - organization_id\n      - username\n    WebhookEndpoint:\n      type: object\n      properties:\n        webhook_endpoint_id:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        name:\n          type: string\n          nullable: true\n          maxLength: 100\n        webhook_url:\n          type: string\n          maxLength: 100\n        webhook_secret:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        triggers:\n          type: array\n          items:\n            $ref: '#/components/schemas/WebhookTrigger'\n          readOnly: true\n      required:\n      - triggers\n      - webhook_endpoint_id\n      - webhook_secret\n      - webhook_url\n    WebhookEndpointRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n          maxLength: 100\n        webhook_url:\n          type: string\n          minLength: 1\n          maxLength: 100\n        triggers_in:\n          type: array\n          items:\n            enum:\n            - invoice.created\n            - invoice.paid\n            type: string\n          writeOnly: true\n      required:\n      - triggers_in\n      - webhook_url\n    WebhookTrigger:\n      type: object\n      properties:\n        trigger_name:\n          enum:\n          - invoice.created\n          - invoice.paid\n          type: string\n      required:\n      - trigger_name\n    WebhookTriggerRequest:\n      type: object\n      properties:\n        trigger_name:\n          enum:\n          - invoice.created\n          - invoice.paid\n          type: string\n      required:\n      - trigger_name\n  securitySchemes:\n    OrganizationApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\n    basicAuth:\n      type: http\n      scheme: basic\n    knoxTokenAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Token-based authentication with required prefix \"Token\"\n",
			"canonicalURL": "/github.com/uselotus/lotus@e706534671d28b74294d62dc7c6259c511836be2/-/blob/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/uselotus/lotus/blob/e706534671d28b74294d62dc7c6259c511836be2/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/balance_adjustments/\": get: operation \"api_balance_adjustments_list\": security: at docs/openapi.yaml:24:9: unknown security scheme \"TokenAuth\""
}