{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Swasth-Digital-Health-Foundation/hcx-platform"
		},
		"file": {
			"name": "openapi_hcx_notifications-draft.yaml",
			"size": 0,
			"path": "api-specifications/openapi_hcx_notifications-draft.yaml",
			"byteSize": 26787,
			"content": "openapi: 3.0.1\ninfo:\n  title: HCX Notification APIs\n  description: \u003e-\n    The Health Claims Exchange (HCX) is a digital infrastructure designed to\n    enable automated, data-driven management of health insurance claims in an\n    open ecosystem. These API specifications enable all actors to consume, subscribe or unsubscribe and send notifications in the ecosystem.\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  version: 0.7.0\nexternalDocs:\n  description: HCX Specifications\n  url: \u003e-\n    https://docs.swasth.app/hcx-specifications/\ntags:\n  - name: Notification APIs\n    description: \u003e-\n      APIs for notification subscription management and send and receive the callback requests.\n      \npaths:\n  /notification/list:\n    post:\n      tags:\n        - Notification APIs\n      description: \u003e-\n        This API is for the participants in the network to check the master list of notifications available to them.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/NotificationTopicListRequest'\n      \n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationTopicListResponse'\n        '400':\n          description: Request Validation failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '404':\n          description: Requested resource was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '500':\n          description: Downstream systems down/unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n      security:\n      - bearer_auth: []\n  /notification/subscribe:\n    post:\n      tags:\n        - Notification APIs\n      description: \u003e-\n        This API is for the participants in the network to check the master list of notifications available and subscribe to them.\n\n\n        The participant should send the below details in the request body while making a call for notification subscription.\n          1. The protocol headers defined and used by all the other APIs to understand the sender, recipient, status etc,.\n          2. The notification topic_code (as x-hcx-notification_subscription.topic_code) to understand the notification to which the participant want to subscribe.\n        \n        The response to this API could be one of the following:\n          1. A successful accepted (202) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful. Upon successful validation, HCX gateway forwards the same request to the intended recipient asynchronously.\n          2. A  successful OK (200) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful and the recipient is HCX gateway. There is no callback expected in this case.\n          3. An error response if any of the validations fail.\n        \n        If the request is validated and accepted by HCX gateway, based on recipient it will be processed. If it recipient is not HCX gateway, the request will be forwarded to recipient and the participant should expect a response via callback API from recipient.\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - topic_code\n                - sender_list\n              oneOf:\n                - $ref: '#/components/schemas/NotificationSubscription'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardSuccessResponse'\n        '400':\n          description: Request Validation failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '404':\n          description: Requested resource was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '500':\n          description: Downstream systems down/unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n      security:\n      - bearer_auth: []\n  /notification/unsubscribe:\n    post:\n      tags:\n        - Notification APIs\n      description: \u003e-\n        This API is for the participants in the network to check the subscription list and unsubscribe to them.\n        \n        The participant should send the below details in the request body while making a call for notification unsubscription.\n          1. The protocol headers defined and used by all the other APIs to understand the sender, recipient, status etc,.\n          2. The notification topic_code (as x-hcx-notification_subscription.topic_code) to understand the notification to which the participant want to unsubscribe.\n        \n        The response to this API could be one of the following:\n          1. A successful accepted (202) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful. Upon successful validation, HCX gateway forwards the same request to the intended recipient asynchronously.\n          2. A  successful OK (200) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful and the recipient is HCX gateway. There is no callback API call expected in this case.\n          3. An error response if any of the validations fail.\n        \n        If the request is validated and accepted by HCX gateway, based on recipient it will be processed. If it recipient is not HCX gateway, the request will be forwarded to recipient and the participant should expect a response via callback API from recipient.\n      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - topic_code\n                - sender_list\n              oneOf:\n                - $ref: '#/components/schemas/NotificationSubscription'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardSuccessResponse'\n        '400':\n          description: Request Validation failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '404':\n          description: Requested resource was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '500':\n          description: Downstream systems down/unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n      security:\n      - bearer_auth: []\n  /notification/notify:\n    post:\n      tags:\n        - Notification APIs\n      description: \u003e-\n        This API is for the participants to explicitly send the notification to recipients via HCX gateway.\n      \n        The participant should send the below details in the request body while making a call to send notification.\n          1. The protocol headers defined and used by all the other APIs to understand the sender, recipient, status etc,.\n          2. The notification details like topic_code (as payload.x-hcx-notification_details.topic_code), title  (payload.x-hcx-notification_details.topic), and data (payload. x-hcx-notification_details.data) to understand the notification to which the participant want to send the notification.\n          \n        \n        The response to this API could be one of the following:\n          1. A successful accepted (202) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful. Upon successful validation, HCX gateway forwards the same request to the intended recipient asynchronously.\n          3. An error response if any of the validations fail.\n          \n        The HCX gateway will send the notification to all the recipients of the notification if the x-hcx-recipient_id is HCX gateway identifier.\n      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/NotificationRequest'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/SuccessResponse'\n        '400':\n          description: Request Validation failed\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/ErrorResponse'\n        '404':\n          description: Requested resource was not found\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/ErrorResponse'\n        '500':\n          description: Downstream systems down/unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/ErrorResponse'\n      security:\n      - bearer_auth: []\n\ncomponents:\n  schemas:\n    NotificationSignature:\n      required:\n        - x-hcx-sender_code\n        - x-hcx-timestamp\n      type: object\n      description: JSON object\n      allOf:\n        - properties:\n            x-hcx-sender_code:\n              type: string\n              description: Registry code of the sender (e.g. provider or payer)\n              example: \"PROVIDER01@HCX01\"\n            x-hcx-timestamp:\n              type: string\n              description: Unix timestamp when the request is sent.\n              example: \"1629057611000\"\n    NotificationPayload:\n      required:\n        - x-hcx-recipient_code\n        - x-hcx-api_call_id\n        - x-hcx-correlation_id\n        - x-hcx-notification_details\n      type: object\n      description: JSON object\n      allOf:\n        - $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/ProtocolHeader'\n        - properties:\n            x-hcx-notification_details:\n              type: object\n              description: Used to provide the details of the notification.\n              required:\n                - topic_code\n                - topic\n                - notification_data\n              allOf:\n                - $ref: '#/components/schemas/NotificationData'\n    NotificationRequest:\n      required:\n        - signature\n        - payload\n      type: object\n      description: JSON object\n      properties:\n        signature:\n          type: object\n          description: TODO\n          allOf:\n            - $ref: '#/components/schemas/NotificationSignature'\n        payload:\n          type: object\n          description: TODO\n          allOf:\n            - $ref: '#/components/schemas/NotificationPayload'\n\n    NotificationSubscriptionJWEPayload:\n      required:\n        - payload\n      type: object\n      format: byte\n      description: This object is used as payload in the HCX protocol APIs that require the request body to sent in JWE format (as defined in [RFC-7516](https://datatracker.ietf.org/doc/html/rfc7516)). \n      \n      properties:\n        payload:\n          type: object\n          format: string\n          description: The paylod should be a JWE token containing the following elements.\n          \n            1. Protected headers (**protected**) - A set of attributes that provide transport, security, message integrity and summary information about the message being exchanged.\n        \n            2. JWE element (**encrypted_key**) - Content Encryption Key.\n        \n            3. JWE element (**iv**) - Initialisation Vector for the algorithm.\n        \n            4. Encrypted Payload (**ciphertext**) - Payload containing the relevant domain entity (eObject) as prescribed for the use case by the domain specifications. This needs to be encrypted so that HCX cannot read this.\n        \n            5. Authentication tag (**authentication_tag**) - Digital signature on the protected header and the payload of the message to ensure its integrity.\n            \n            \n            The final payload should be serialzed using JWE compact serialization as defined in the RFC-7516 - \n            \n            \n            **protected || '.' || encrypted_key || '.' || iv || '.' || ciphertext || '.' || authentication_tag**\n            \n            \n            Detailed steps on how to construct the JWE token are provided in this [section](https://docs.swasth.app/hcx-specifications/hcx-technical-specifications/open-protocol/data-security-and-privacy/message-security-and-integrity#message-encryption) of the HCX specifications.\n          example: \"eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXNlbmRlcl9jb2RlIjoiMS00ZGMzZTA4OC1hMzEzLTQ0YWItYWZhMS0wMjIyOTU5Y2I3NWIiLAoieC1oY3gtcmVjaXBpZW50X2NvZGUiOiIxLTkzZjkwOGJhLWI1NzktNDUzZS04YjJhLTU2MDIyYWZhZDI3NSIsCiJ4LWhjeC1yZXF1ZXN0X2lkIjoiMjZiMTA2MGMtMWU4My00NjAwLTk2MTItZWEzMWUwY2E1MDkxIiwKIngtaGN4LWNvcnJlbGF0aW9uX2lkIjoiNWU5MzRmOTAtMTExZC00ZjBiLWIwMTYtYzIyZDgyMDY3NGUxIiwKIngtaGN4LXRpbWVzdGFtcCI6IjIwMjEtMTAtMjdUMjA6MzU6NTIuNjM2KzA1MzAiLAoieC1oY3gtc3RhdHVzIjoicmVxdWVzdC5pbml0aWF0ZSIsCiJ4LWhjeC13b3JrZmxvd19pZCI6IjVlOTM0ZjkwLTExMWQtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMiIsCiJ4LWhjeC1kZWJ1Z19mbGFnIjoiSW5mbyIsCiJ4LWhjeC1lcnJvcl9kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCAidHJhY2UiOiAiIn0sCiJ4LWhjeC1kZWJ1Z19kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCJ0cmFjZSI6IiJ9LAoiandzX2hlYWRlciI6eyJ0eXAiOiJKV1QiLCAiYWxnIjoiUlMyNTYifSwKImp3ZV9oZWFkZXIiOnsiYWxnIjoiUlNBLU9BRVAiLCJlbmMiOiJBMjU2R0NNIn0KfQ==.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw\"\n          properties:\n            protected:\n              type: object\n              format: string\n              description: Protected headers contain information that helps HCX gateway to identify senders, receivers of the message, perform integrity checks, audits and routing functionality. Header values are posted in clear and must never contain any Personally Identifiable Information (PII) about the patient or any person. HCX protocol uses JWE protected headers for such information to ensure these are not tampered with by the intermediate gateways. Protected Headers for HCX will be the union of the following three header categories.\n          \n                1. JOSE Headers - JSON Web encryption header as per [RFC7516](https://datatracker.ietf.org/doc/html/rfc7516#section-4). For HCX V1, this is proposed to be fixed to {\"alg\":\"RSA-OAEP\",\"enc\":\"A256GCM\"}.\n            \n                2. HCX Protocol Headers - Private headers as per [RFC7516 section 4.3](https://datatracker.ietf.org/doc/html/rfc7516#section-4.3). List of header values that are allowed in HCX APIs and their details are defined in this [section](https://docs.swasth.app/hcx-specifications/hcx-technical-specifications/open-protocol/key-components-building-blocks#hcx-protocol-headers) of HCX Specifications.\n            \n                3. HCX Domain Headers - JSON object containing a map of domain-specific header values as proposed in domain data specifications for each entity. E.g. For claims use cases, domain specs may decide to populate the total claimed amount, list of diagnostics/procedures. Please note that all such parameter names must follow the naming convention _x-hcx-\u003cuse_case_name\u003e-\u003cparameter_name\u003e_.\n                \n                4. HCX Notification Headers - JSON object containing a map of notification and the subscription details.\n\n            \n                  Overall, the protected headers should be created as - \n                  \n                  \n                  JWE Protected Header = BASE64URL(UTF8( (JOSE headers) + (HCX Protocol Headers) + (HCX Domain Headers) + (HCX Notification Headers) ))\n              allOf:\n                - $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/JOSEHeader'\n                - $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/ProtocolHeader'\n                - $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/DomainHeaders'\n                - properties:\n                    topic_code:\n                      type: string\n                      description: Unique code for the notification topic\n                      example: \"NOTIFICATION@HCX01\"\n                    \n            encrypted_key:\n              type: string\n              description: The JWE encrypted key should be generated using the following process\n            \n                1. A random content encryption key (CEK) has to be generated by the sender. \n            \n                2. Encrypt the CEK with the recipient's public key using the RSAES-OAEP algorithm to produce the JWE Encrypted Key.\n            \n                3. Base64url-encode the JWE Encrypted Key.\n          \n            \n                The encrypted \u0026 base64 encoded key should be set as the encrypted_key in the JWE token and also used for encrypting the domain payload (i.e. the FHIR resource) to be sent in the request. The recipient shall decrypt the content encryption key using their private key (corresponding to the public key used by the sender) and use the decrypted CEK for decrypting the domain payload. \n              \n              example: \"6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ\"\n            \n            iv:\n              type: string\n              description: Initialization vector (_iv_) is needed in the encryption process of the payload and for the recipient (along with the encrypted_key and aad) to subsequently decrypt the payload. The \"iv\" should be created by generating a random JWE initialization vector and Base64url-encoding the JWE initialization vector. \n              example: \"AxY8DCtDaGlsbGljb3RoZQ\"\n              \n            ciphertext:\n              type: string\n              description: _ciphertext_ contains the domain payload (that has to  be sent to the recipient) in encrypted form. Usecase specific   JSON payload defined in the [eObjects](https://docs.swasth.app/hcx-specifications/hcx-domain-specifications/domain-data-specifications/domain-data-models/eobjects) section of the HCX specifications (i.e. the FHIR resource defined for the use case, e.g. CoverageEligibilityRequest document for coverage eligibility request API) should be encrypted as per JWE specification and sent as the _ciphertext_ in the request.\n          \n          \n                Steps to create the ciphertext element - \n            \n                1. Create the JSON payload for the API request as per the [eObjects specification](https://docs.swasth.app/hcx-specifications/hcx-domain-specifications/domain-data-specifications/domain-data-models/eobjects).\n            \n                2. Perform authenticated encryption on the JSON payload with the AES GCM algorithm using the CEK as the encryption key (_encrypted_key_), the JWE Initialization Vector (_iv_)), and the Additional Authenticated Data value (_aad_), requesting a 128-bit Authentication Tag output. This step outputs a ciphertext and an authentication tag (_tag_).\n            \n                3. Base64url-encode the ciphertext output from the previous step and set it as the _ciphertext_ element in the request body.\n              example: \"KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY\"\n              \n            authentication_tag:\n              type: string\n              description: The authentication tag generated as an output of the payload encryption algorithm (used for creating the _ciphertext_) should be sent as the _tag_ element in the request body. This tag is required for decrypting the encrypted payload.\n              example: \"Mz-VPPyU4RlcuYv1IwIvzw\"\n              \n    NotificationTopicListRequest:\n      type: object\n      description: JSON object explaining about the request filters, limits of the notification master list.\n      properties:\n        filters:\n          type: object\n          description: Filters to apply and get the required notification master list\n        limit:\n          type: number\n          description: Max number of notification master list to return in the response.\n          example: 10\n        offset:\n          type: number\n    \n    NotificationTopicListResponse:\n      type: object\n      description: The notification master list response object.\n      properties:\n        timestamp:\n          type: string\n          description: Unix timestamp when the response is sent.\n          example: \"1629057611000\"\n        notifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/NotificationTopic'\n        count:\n          type: number\n          description: Total number of master list notifications defined at HCX gateway with the given request filter.\n          example: 1\n          \n    StandardErrorResponse:\n      required:\n        - error\n        - timestamp\n      type: object\n      properties:\n        timestamp:\n          type: string\n          description: Unix timestamp when the response is sent.\n          example: \"1629057611000\"\n        error:\n          $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/Error'\n    StandardSuccessResponse:\n      required:\n        - timestamp\n      type: object\n      properties:\n        timestamp:\n          type: string\n          description: Unix timestamp when the response is sent.\n          example: \"1629057611000\"\n        subscription_id:\n          type: string\n          description: Unique identifier of the notification subscription.\n          example: \"SUBSCRIPTION01@HCX01\"\n        status:\n          type: number\n          example: 1\n    \n    NotificationTopic:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the notification\n          example: \"Payer Downtime\"\n        description:\n          type: string\n          description: The details about the notification.\n          example: \"A notification about the Payer System Downtime. This information will be useful for all participants.\"\n        sender:\n          type: array\n          description: List of roles who can send this notification.\n          items:\n            type: string\n          example: [\"payor\"]\n        recipient:\n          type: array\n          description: List of roles who can subscribe to this notification.\n          items:\n            type: string\n          example: [\"provider\"]\n        topic_code:\n          type: string\n          description: Unique code for the notification topic\n          example: \"NOTIFICATION@HCX01\"\n        category:\n          type: string\n          description: Category of the notification as detailed above - network (broadcast \u0026 target), participant, use_case\n          example: network\n        priority:\n          type: number\n          description: Default priority assigned to the topic. 0 means highest, positive integer would carry the respective relative priority. Negative would be that the topic is disabled. Relative order of category for different message categories is recommended to be use_case \u003e participant \u003e network\n          \n    NotificationSubscription:\n      type: object\n      properties:\n        topic_code:\n          type: string\n          description: Unique notification identifier from HCX gateway using the master list.\n          example: \"NOTIFICATION@HCX01\"\n        sender_list:\n          type: array\n          description: The list of sender to which the subscription request will be sent to approve or reject.\n          items:\n            type: string\n            example: \"PAYOR01@HCX01\"\n\n    NotificationData:\n      type: object\n      properties:\n        topic_code:\n          type: string\n          description: Unique notification identifier from HCX gateway using the master list.\n          example: \"NOTIFICATION@HCX01\"\n        topic:\n          type: string\n          description: Topic of notification as defined in the master list of notifications.\n        recipient_codes:\n          type: array\n          items:\n            type: string\n          description: Participant code of the recipient(s) of the notification. Could be one or more based on the need.\n        recipient_roles:\n          type: array\n          items:\n            type: string\n          description: Participant role of the recipient(s) of the notification. Could be one or more based on the need. recipient_codes and/or recipientRoles can be used to send a notification (network or participant category) to a subset of participants defined in the notification master data for the corresponding topic.\n        subscriptions:\n          type: array\n          items:\n            type: string\n          description: list of subscription_ids (at least one) is mandatory for use_case category notifications.\n        notification_data:\n          type: object\n          description: JSON object containing the details of the notification to send.\n          example: {\"message\": \"Payor system down for sometime\",\"duration\": 2hrs,\"startTime\": 9PM, \"date\": 26th April 2022 IST}\n\n\n  securitySchemes:\n    bearer_auth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      \n",
			"canonicalURL": "/github.com/Swasth-Digital-Health-Foundation/hcx-platform@5cff36308856fe4bea6f01432c95d5a2166df491/-/blob/api-specifications/openapi_hcx_notifications-draft.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Swasth-Digital-Health-Foundation/hcx-platform/blob/5cff36308856fe4bea6f01432c95d5a2166df491/api-specifications/openapi_hcx_notifications-draft.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"StandardErrorResponse\": resolve \"#/components/schemas/StandardErrorResponse\": property \"error\": $ref: resolve \"https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/Error\": property \"code\": at https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml:990:17: duplicate enum value: \"\\\"ERR_INVALID_PAYLOAD\\\"\""
}