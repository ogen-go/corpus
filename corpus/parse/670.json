{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ground-x/caver-js-ext-kas"
		},
		"file": {
			"name": "2021-09-30-openapi-versioned.yaml",
			"path": "yamls/kip17/2021-09-30-openapi-versioned.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0\n  title: KIP-17 API\n  description: \"# Introduction\\nThe KIP-17 API helps BApp (Blockchain Application)\\\n    \\ developers to manage contracts and tokens created in accordance with the [KIP-17](https://docs.klaytnapi.com/v/en/api#kip-17-api)\\\n    \\ standard, which is Klaytn's technical speficication for Non-Fungible Tokens.\\\n    \\ \\nThe functionality of the multiple endpoints enables you to do the following\\\n    \\ actions:\\n- deploy smart contracts\\n- manage the entire life cycle of an NFT\\\n    \\ from minting, to sending and burning\\n- get contract or token data\\n- authorize\\\n    \\ a third party to execute token transfers\\n- view token ownership history\\n\\n\\\n    For more details on KAS, please refer to [KAS Docs](https://docs.klaytnapi.com/).\\\n    \\ If you have any questions or comments, please leave them in the [Klaytn Developers\\\n    \\ Forum](http://forum.klaytn.com).  \\n\\n**alias**\\n\\nWhen a method of the KIP-17\\\n    \\ API requires a contract address, you can use the contract **alias**. You can\\\n    \\ give the contract an alias when deploying, and use it in place of the complicated\\\n    \\ address.\\n\\n# Fee Payer Options\\nKAS KIP-17 supports four ways to pay the transaction\\\n    \\ fees.\u003cbr /\u003e\\n\\n**1. Only using KAS Global FeePayer Account** \u003cbr /\u003e\\nSends all\\\n    \\ transactions using KAS Global FeePayer Account.\\n```\\n{\\n    \\\"options\\\": {\\n\\\n    \\      \\\"enableGlobalFeePayer\\\": true\\n    }\\n}\\n```\\n\u003cbr /\u003e\\n\\n**2. Using User\\\n    \\ FeePayer Account** \u003cbr /\u003e\\nSends all transactions using User FeePayer Account.\\n\\\n    ```\\n{\\n  \\\"options\\\": {\\n    \\\"enableGlobalFeePayer\\\": false,\\n    \\\"userFeePayer\\\"\\\n    : {\\n      \\\"krn\\\": \\\"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\\\"\\\n    ,\\n      \\\"address\\\": \\\"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\\\"\\n    }\\n\\\n    \\  }\\n}\\n```\\n\u003cbr /\u003e\\n\\n**3. Using both KAS Global FeePayer Account + User FeePayer\\\n    \\ Account** \u003cbr /\u003e\\nSends transactions using User FeePayer Account by default,\\\n    \\ and switches to the KAS Global FeePayer Account when balances are insufficient.\\n\\\n    ```\\n{\\n  \\\"options\\\": {\\n    \\\"enableGlobalFeePayer\\\": true,\\n    \\\"userFeePayer\\\"\\\n    : {\\n      \\\"krn\\\": \\\"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\\\"\\\n    ,\\n      \\\"address\\\": \\\"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\\\"\\n    }\\n\\\n    \\  }\\n}\\n```\\n\u003cbr /\u003e\\n\\n**4. Not using FeePayer Account** \u003cbr /\u003e\\nSends transactions\\\n    \\ the default way, paying the transaction fee from the user's account.\\n```\\n\\\n    {\\n  \\\"options\\\": {\\n    \\\"enableGlobalFeePayer\\\": false\\n  }\\n}\\n```\\n\u003cbr /\u003e\\n\\\n    \\n# Error Code\\nThis section contains the errors that might occur when using the\\\n    \\ KIP-17 API. KAS uses HTTP status codes. More details can be found in this [link](https://developer.mozilla.org/en/docs/Web/HTTP/Status).\"\nservers:\n- url: https://kip17-api.klaytnapi.com\nsecurity:\n- basic: []\ntags:\n- name: err-400\n  description: \"The request is not valid.\\n\\n| Code | Message | Description |\\n| ---\\\n    \\ | --- | --- |\\n| 1100050 | invalid request | The data format is wrong. \\n| 1100101\\\n    \\ | data not found | Data doesn't exist. \\n| 1100251 | value out of range | Value\\\n    \\ is out of range.\\n| 1104401 | failed to get account | The KRN or the `sender`\\\n    \\ address you entered is wrong. Please check your sender Account Pool.\\n| 1100251\\\n    \\ | contract not ready | Checking contract deployment status.\\n| 1104401 | invalid\\\n    \\ alias | The alias is invalid. Please check the requirements.\\n| 1010007 | invalid\\\n    \\ path or method | The path or method you entered is wrong. \\n\"\n  x-displayName: \"400: Bad Request\"\n- name: err-401\n  description: \"The credential you entered is invalid.\\n\\n| Code | Message | Description\\\n    \\ |\\n|  --- | --- | --- |\\n| 1010009 | invalid credential | The credential you\\\n    \\ entered is invalid. \\n\"\n  x-displayName: \"401: Unauthorized\"\n- name: err-404\n  description: \"The resource you requested doesn't exist.\\n\\n| Code | Messages | Description\\\n    \\ |\\n| --- | --- | --- |\\n| 1104404 | token not found | The token doesn't exist.\\\n    \\ \\n\"\n  x-displayName: \"404: Not Found\"\n- name: err-409\n  description: \"There was a conflict with the current state of the server.\\n  \\n|\\\n    \\ Code | Messages | Description |\\n| --- | --- | --- |\\n| 1104400 | duplicate\\\n    \\ alias- {alias} | This alias is already taken.\\n\"\n  x-displayName: \"409: Conflict\"\n- name: kip17-contract\n  x-displayName: Contract\n- name: kip17-token\n  x-displayName: Token\npaths:\n  /v1/contract:\n    get:\n      tags:\n      - kip17-contract\n      summary: Get Contract List\n      description: Returns a list of KIP-17 contracts created from a KAS account.\u003cp\u003e\u003c/p\u003e\n      operationId: ListContractsInDeployerPool\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: \"The number of items to return (min=1, max=1000, default=100).\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: \"\"\n      - name: cursor\n        in: query\n        description: \"The pointer for the next request, after which the result will\\\n          \\ be returned.\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: eyJjm...ZSJ9\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17ContractListResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    cursor: eyJjm...ZSJ9\n                    items:\n                    - address: 0x34132f491fea7aa622cca594e4bd2ccd6fc02bf7\n                      alias: test\n                      name: TEST NFT\n                      symbol: TEST\n                      options:\n                        enableGlobalFeePayer: true\n                        userFeePayer:\n                          krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                          address: 0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n    post:\n      tags:\n      - kip17-contract\n      summary: Deploy Contract\n      description: \"Deploys a new KIP-17 contract with the given parameters. You can\\\n        \\ find the tutorial for KIP-17 contract deployment [here](https://docs.klaytnapi.com/tutorial/kip17-api#kip-17).\\\n        \\  \\n\\n\\nEven if you see `Submitted` in the response, it doesn't mean that\\\n        \\ the transaction is `Committed`. To confirm transaction status, use Get Contract\\\n        \\ List [/v1/contract](#operation/ListContractsInDeployerPool) or Get Transaction\\\n        \\ Receipt from the Wallet API [/v2/tx/{transaction-hash}](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt).\"\n      operationId: DeployContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/DeployKip17ContractRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17DeployResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    status: Submitted\n                    transactionHash: 0x0a4f4f97d8a5904721514d60abd3f9ad7938862e415a6c043553a94ab68a5edb\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                        address: 0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: Invalid alias.\n                  value:\n                    code: 1104400\n                    message: duplicate alias- test\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"409\":\n          description: There was a conflict with the current state of the server.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Duplicate alias:\n                  summary: Duplicate alias\n                  description: This alias is already taken.\n                  value:\n                    code: 1104401\n                    message: duplicate alias- test\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n  /v1/contract/{contract-address-or-alias}:\n    get:\n      tags:\n      - kip17-contract\n      summary: Get Contract\n      description: Returns the data for a specified KIP-17 contract. You can use either\n        the contract alias or contract address.\u003cp\u003e\u003c/p\u003e\n      operationId: GetContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17ContractInfoResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    address: 0x7766a3af39e4fffbaccf6efa6a37ed195f9179b4\n                    alias: test\n                    name: Test NFT\n                    symbol: TEST\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                        address: 0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Nonexistent contract:\n                  summary: Nonexistent contract\n                  description: This contract does not exist.\n                  value:\n                    code: 1100101\n                    message: Data not found\n                    requestId: 564d53ce-0e45-9db6-9e8f-ac15a1c9b140\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n    put:\n      tags:\n      - kip17-contract\n      summary: Update Contract\n      description: \"Updates the fee payment method for a contract.\\n\\n##### Options\\n\\\n        With `options` you can set the transaction fee payment method. You can find\\\n        \\ more details in [Fee Payer Options](#section/Fee-Payer-Options).\"\n      operationId: UpdateContract\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateKip17ContractRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17ContractInfoResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    address: 0x7766a3af39e4fffbaccf6efa6a37ed195f9179b4\n                    alias: test\n                    name: TestNFT\n                    symbol: TEST\n                    options:\n                      enableGlobalFeePayer: false\n                      userFeePayer:\n                        krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                        address: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid FeePayer KRN:\n                  value:\n                    code: 1104401\n                    message: invalid krn;options.userFeePayer.krn\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n                FeePayer not found:\n                  value:\n                    code: 1104401\n                    message: invalid krn; fee payer not found\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Not Found - alias:\n                  summary: Not found\n                  description: Contract doesn't exist.\n                  value:\n                    code: 1104504\n                    message: Contract not found\n  /v1/contract/{contract-address-or-alias}/token:\n    get:\n      tags:\n      - kip17-token\n      summary: Get Token List\n      description: Returns a list of all tokens minted from a specified KIP-17 contract.\n        You can use the contract alias in place of the address.\n      operationId: ListTokens\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: \"The number of items to return (min=1, max=1000, default=100).\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n      - name: cursor\n        in: query\n        description: \"The pointer for the next request, after which the result will\\\n          \\ be returned.\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: eyJjm...ZSJ9\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17TokenListResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    cursor: eyJjm...ZSJ9\n                    items:\n                    - createdAt: 1608640582\n                      updatedAt: 1608640582\n                      owner: 0xdc277e2d89b92336a4ee80be3c7142443fdade47\n                      previousOwner: 0x0000000000000000000000000000000000000000\n                      tokenId: 0x9\n                      tokenUri: https://metastore.kip17.com/0xbe02aba/0x1\n                      transactionHash: 0xb5fcf5f9bb28e6584104b743630371cef234c176a5c42b65e5a01299c0c2e6ff\n                    - createdAt: 1607396973\n                      updatedAt: 1607396973\n                      owner: 0xdc277e2d89b92336a4ee80be3c7142443fdade47\n                      previousOwner: 0x0000000000000000000000000000000000000000\n                      tokenId: 0x8\n                      tokenUri: https://metastore.kip17.com/0xbe02aba/0x1\n                      transactionHash: 0xd2b5d09aa13e6306ef65507c324c92d3f91aa03003ed480fe8a11e4adca713d4\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Nonexistent contract:\n                  summary: Nonexistent contract\n                  description: This contract does not exist.\n                  value:\n                    code: 1100101\n                    message: Data not found\n                    requestId: bb3b9e86-6a6f-9f1a-96bd-c9664df2dcbc\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n    post:\n      tags:\n      - kip17-token\n      summary: Mint Token\n      description: \"Mints a new token from a specified KIP-17 contract. You can use\\\n        \\ the contract alias in place of the address.\\n\\n\u003e **NOTE** \\n\u003e\\n\u003e Minting\\\n        \\ a token to an address outside the KAS Account Pool hinders you from sending\\\n        \\ or burning the token using KAS..\"\n      operationId: MintToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-krn\n        in: header\n        description: KRN (KAS Resource Name) unique to an Account Pool\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/MintKip17TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    status: Submitted\n                    transactionHash: 0x57d94989611cf0351fdea04dd5193398980642aaed82c8c34bdef12f4ecf356e\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Missing field or wrong value:\n                  summary: Missing field or wrong value\n                  description: A field is either missing or has a wrong value.\n                  value:\n                    code: 1100050\n                    message: invalid request\n                    requestId: 0fbb2970-41ae-978c-9edb-d759ed6e7c87\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n  /v1/contract/{contract-address-or-alias}/token/{token-id}:\n    get:\n      tags:\n      - kip17-token\n      summary: Get Token Data\n      description: Returns the data of a specified token. You can use the contract\n        alias in place of the address.\u003cp\u003e\u003c/p\u003e\n      operationId: GetToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: token-id\n        in: path\n        description: The ID of the desired token.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetKip17TokenResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    createdAt: 1607330287\n                    updatedAt: 1607391306\n                    owner: 0xae7bb7efff289c163a95303795c4d59293f6ba92\n                    previousOwner: 0xbafa182d3fccebcb1701b66a69f0e7b40f3a52c4\n                    tokenId: 0x1\n                    tokenUri: https://metastore.kip17.com/0xbe02aba/0x1\n                    transactionHash: 0xf5f5d97ce5e6339fc767bd2f4df57d9ab39ca71e423d9f3b36a5f58ac894f578\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Nonexistent contract:\n                  summary: Nonexistent contract\n                  description: This contract does not exist.\n                  value:\n                    code: 1100101\n                    message: data not found\n                    requestId: ef8177de-7b42-9c2a-ab3f-46ffd45b8767\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Nonexistent token:\n                  summary: Nonexistent token\n                  description: The token you entered does not exist.\n                  value:\n                    code: 1104404\n                    message: token not found\n                    requestId: 1b99498f-4f37-98cc-a1d4-6246a7a5be79\n    post:\n      tags:\n      - kip17-token\n      summary: Transfer Token\n      description: \"Sends a token to a specified address. If the token has a different\\\n        \\ `sender` and `owner`, the `sender` must be authorized to send the token.\\\n        \\ You can authorize an account to send tokens via [v1/contract/{contract-address-or-alias}/approve/{token-id}](#operation/ApproveToken).\u003cp\u003e\u003c/p\u003e\\n\\\n        \\n\\nYou will see `Submitted` in the response even when you enter a wrong token\\\n        \\ ID. But that does not mean that it is successfully `Committed`. To confirm\\\n        \\ transaction status, use Get Transaction Receipt from the Wallet API [/v2/tx/{transaction-hash}](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt).\\n\\\n        \\n\\n##### Sender \\n`sender` is the address that sends the transaction. If\\\n        \\ it is an account in the default `account-pool` of KIP-17 or Wallet Service,\\\n        \\ you can omit the KRN header. \u003cbr /\u003e Otherwise you need to include the KRN\\\n        \\ header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`).\"\n      operationId: TransferToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-krn\n        in: header\n        description: KRN (KAS Resource Name) unique to an Account Pool\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: token-id\n        in: path\n        description: Token ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/TransferKip17TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    status: Submitted\n                    transactionHash: 0x72b05d3b27e17a132e60681f4a2ad487868181b0623fbaa841875ecb36f62b8f\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Failed to get account:\n                  summary: Failed to get account\n                  description: The KRN you entered is wrong. Please check the sender\n                    Account Pool.\n                  value:\n                    code: 1104401\n                    message: failed to get account\n                    requestId: 10cfc941-22e3-919a-bc61-ff949bd79442\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n    delete:\n      tags:\n      - kip17-token\n      summary: Burn Token\n      description: \"Burns a token.\\n\\n\\nYou will see `Submitted` in the response even\\\n        \\ when you enter the wrong token ID, the `from` and `owner` are different,\\\n        \\ or when `from` is not authorized to burn the token. But that does not mean\\\n        \\ that it is successfully `Committed`. To confirm transaction status, use\\\n        \\ Get Transaction Receipt from the Wallet API [/v2/tx/{transaction-hash}](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt).\u003cp\u003e\u003c/p\u003e\\\n        \\ \\n\\n##### From\\n`from` is the address that sends the transaction. If `from`\\\n        \\ is an account in the default `account-pool` of KIP-17 or Wallet Service,\\\n        \\ you can omit the KRN header. \u003cbr /\u003e Otherwise you need to include the KRN\\\n        \\ header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`). \"\n      operationId: BurnToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-krn\n        in: header\n        description: KRN (KAS Resource Name) unique to an Account Pool\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: token-id\n        in: path\n        description: The ID of the token to burn.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/BurnKip17TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    status: Submitted\n                    transactionHash: 0xbf6de339cf435447e58da05384bbf83a16fea40044bb49b84e11d3b00ea0325f\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Failed to get account:\n                  summary: Failed to get account\n                  description: The KRN or the from address you entered is wrong. Please\n                    check the sender Account Pool.\n                  value:\n                    code: 1104401\n                    message: failed to get account\n                    requestId: 10cfc941-22e3-919a-bc61-ff949bd79442\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n  /v1/contract/{contract-address-or-alias}/approve/{token-id}:\n    post:\n      tags:\n      - kip17-token\n      summary: Approve/Deny Authorization for Token Transfers\n      description: \"Grant or deny authorization to `to` to send a specified token.\\\n        \\ To deny authorization, enter `0x0000000000000000000000000000000000000000`\\\n        \\ for `to`.\\n\\n\\nYou will see in `Submitted` in the response even when you\\\n        \\ enter the wrong token ID, the `from` and `owner` are differet. But that\\\n        \\ does not mean that it is successfully `Committed`. To confirm transaction\\\n        \\ status, use Get Transaction Receipt from the Wallet API [/v2/tx/{transaction-hash}](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt).\u003cp\u003e\u003c/p\u003e\\n\\\n        \\n##### From \\n`from` is the address that sends the transaction. If `from`\\\n        \\ is an account in the default `account-pool` of KIP-17 or Wallet Service,\\\n        \\ you can omit the KRN header. \u003cbr /\u003e Otherwise you need to include the KRN\\\n        \\ header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`).\"\n      operationId: ApproveToken\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-krn\n        in: header\n        description: KRN (KAS Resource Name) unique to an Account Pool\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: token-id\n        in: path\n        description: The ID of the token that the `to` will be authorized to send.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApproveKip17TokenRequest'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    status: Submitted\n                    transactionHash: 0x0a56e8dba1afc0cc1b96c1dec0eccc611863c5c3a181101b73f7471f2a4e550b\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n  /v1/contract/{contract-address-or-alias}/approveall:\n    post:\n      tags:\n      - kip17-token\n      summary: Approve/Deny Transfers of All Token\n      description: \"Grant or deny authorization to `to` to send all tokens owned by\\\n        \\ `from` in a specified contract.\u003cp\u003e\u003c/p\u003e\\n\\n\\nYou will see in `Submitted`\\\n        \\ in the response even when you enter the wrong address or token ID, or when\\\n        \\ the `from` and `owner` are different. But that does not mean that it is\\\n        \\ successfully `Committed`). To confirm transaction status, use Get Transaction\\\n        \\ Receipt from the Wallet API [/v2/tx/{transaction-hash}](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt).\u003cp\u003e\u003c/p\u003e\"\n      operationId: ApproveAll\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: x-krn\n        in: header\n        description: KRN (KAS Resource Name) unique to an Account Pool\n        required: false\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApproveAllKip17Request'\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kip17TransactionStatusResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    status: Submitted\n                    transactionHash: 0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                    requestId: d2529337-b6e4-90c0-bb73-d50c74d207d1\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n  /v1/contract/{contract-address-or-alias}/owner/{owner-address}:\n    get:\n      tags:\n      - kip17-token\n      summary: List Tokens by Address\n      description: Returns a list of all tokens existent for a contract.\n      operationId: GetOwnerTokens\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: \"The number of items to return (min=1, max=1000, default=100).\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n      - name: cursor\n        in: query\n        description: \"The pointer for the next request, after which the result will\\\n          \\ be returned.\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: eyJjm...ZSJ9\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: owner-address\n        in: path\n        description: Address of the token owner\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOwnerKip17TokensResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    cursor: eyJjm...ZSJ9\n                    items:\n                    - createdAt: 1608691873\n                      updatedAt: 1608691873\n                      owner: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                      previousOwner: 0x0000000000000000000000000000000000000000\n                      tokenId: 0x13\n                      tokenUri: https://metastore.kip17.com/0xbe02aba/0x1\n                      transactionHash: 0x3bf8107f39158abf0f2b0dc1ee8ccce9320fbce14899f0021dc4d6ad970c9150\n                    - createdAt: 1608690798\n                      updatedAt: 1608690798\n                      owner: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                      previousOwner: 0x0000000000000000000000000000000000000000\n                      tokenId: 0x12\n                      tokenUri: https://metastore.kip17.com/0xbe02aba/0x1\n                      transactionHash: 0x3857bd481b4a993b4346e1b6c18862bb39ee19401fd3b04101993ce8eed05743\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Invalid query parameter (size):\n                  summary: Invalid query parameter (size)\n                  description: The value is out of scope.\n                  value:\n                    code: 1100251\n                    message: value out of range; size\n                Nonexistent data:\n                  summary: Nonexistent data\n                  description: Data doesn't exist.\n                  value:\n                    code: 1100101\n                    message: Data not found\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n  /v1/contract/{contract-address-or-alias}/token/{token-id}/history:\n    get:\n      tags:\n      - kip17-token\n      summary: Get Token Ownership History\n      description: Returns the transaction history of a specified token from the time\n        it was minted. Each item in the response represents a transfer.\n      operationId: GetTokenHistory\n      parameters:\n      - name: x-chain-id\n        in: header\n        description: Klaytn Network Chain ID (1001 or 8217)\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: \"The number of items to return (min=1, max=1000, default=100).\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int64\n      - name: cursor\n        in: query\n        description: \"The pointer for the next request, after which the result will\\\n          \\ be returned.\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: eyJjm...ZSJ9\n      - name: contract-address-or-alias\n        in: path\n        description: Contract address (in hex.) or alias.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: token-id\n        in: path\n        description: Token ID\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetKip17TokenHistoryResponse'\n              examples:\n                Success:\n                  summary: Success\n                  value:\n                    cursor: eyJjm...ZSJ9\n                    items:\n                    - from: 0xbafa182d3fccebcb1701b66a69f0e7b40f3a52c4\n                      timestamp: 1607391306\n                      to: 0xae7bb7efff289c163a95303795c4d59293f6ba92\n                    - from: 0x0000000000000000000000000000000000000000\n                      timestamp: 1607330287\n                      to: 0xbafa182d3fccebcb1701b66a69f0e7b40f3a52c4\n        \"400\":\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        \"401\":\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        \"404\":\n          description: The resource you requested does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Nonexistent token:\n                  summary: Nonexistent token\n                  description: The token doesn't exist.\n                  value:\n                    code: 1104404\n                    message: Token not found\n                    requestId: 1b99498f-4f37-98cc-a1d4-6246a7a5be79\ncomponents:\n  schemas:\n    Kip17ContractListResponse:\n      title: Kip17ContractListResponse\n      required:\n      - cursor\n      - items\n      type: object\n      properties:\n        cursor:\n          type: string\n          description: \"The pointer for the next request, after which the result will\\\n            \\ be returned.\"\n          example: \"\"\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Kip17ContractListResponseItem'\n      description: \"\"\n    ErrorResponse:\n      title: ErrorResponse\n      required:\n      - code\n      - message\n      - requestId\n      type: object\n      properties:\n        code:\n          type: integer\n          description: Error Code\n        message:\n          type: string\n          description: Error Message\n        requestId:\n          type: string\n          description: Request ID\n    Kip17DeployResponse:\n      title: Kip17DeployResponse\n      required:\n      - status\n      - transactionHash\n      type: object\n      properties:\n        status:\n          type: string\n          description: Transaction status\n          example: Submitted\n        transactionHash:\n          type: string\n          description: Transaction hash\n          example: 0x0a4f4f97d8a5904721514d60abd3f9ad7938862e415a6c043553a94ab68a5edb\n        options:\n          $ref: '#/components/schemas/Kip17FeePayerOptions'\n      description: \"\"\n    Kip17ContractInfoResponse:\n      title: Kip17ContractInfoResponse\n      required:\n      - address\n      - alias\n      - name\n      - symbol\n      type: object\n      properties:\n        address:\n          type: string\n          description: The contract address.\n          example: 0x34132f491fea7aa622cca594e4bd2ccd6fc02bf7\n        alias:\n          type: string\n          description: The contract alias.\n          example: test\n        name:\n          type: string\n          description: The token name.\n          example: TEST NFT\n        symbol:\n          type: string\n          description: The token symbol.\n          example: TEST\n        options:\n          $ref: '#/components/schemas/Kip17FeePayerOptions'\n      description: \"\"\n    Kip17TokenListResponse:\n      title: Kip17TokenListResponse\n      required:\n      - cursor\n      - items\n      type: object\n      properties:\n        cursor:\n          type: string\n          description: \"The pointer for the next request, after which the result will\\\n            \\ be returned.\"\n          example: \"\"\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetKip17TokenResponse'\n      description: \"\"\n    Kip17TransactionStatusResponse:\n      title: Kip17TransactionStatusResponse\n      required:\n      - status\n      - transactionHash\n      type: object\n      properties:\n        status:\n          type: string\n          description: Transaction status\n          example: Submitted\n        transactionHash:\n          type: string\n          description: Transaction hash\n          example: 0x0a4f4f97d8a5904721514d60abd3f9ad7938862e415a6c043553a94ab68a5edb\n        transactionId:\n          type: string\n          description: The multi-signature transaction id.\n      description: \"\"\n    GetKip17TokenResponse:\n      title: GetKip17TokenResponse\n      required:\n      - createdAt\n      - owner\n      - previousOwner\n      - tokenId\n      - tokenUri\n      - transactionHash\n      - updatedAt\n      type: object\n      properties:\n        createdAt:\n          type: integer\n          description: The UNIX timestamp of when the token was minted.\n          format: int64\n          example: 1608640582\n        owner:\n          type: string\n          description: The Klaytn accound address of the current owner.\n          example: 0xdc277e2d89b92336a4ee80be3c7142443fdade47\n        previousOwner:\n          type: string\n          description: The Klaytn account address of the previous owner.\n          example: 0x0000000000000000000000000000000000000000\n        tokenId:\n          type: string\n          description: The ID assigned to the token.\n          example: 0x9\n        tokenUri:\n          type: string\n          description: The URI that contains the tokens's metadata.\n          example: https://metastore.kip17.com/0xbe02aba/0x1\n        transactionHash:\n          type: string\n          description: The hash of the latest transaction that caused a token ownership\n            change.\n          example: 0xb5fcf5f9bb28e6584104b743630371cef234c176a5c42b65e5a01299c0c2e6ff\n        updatedAt:\n          type: integer\n          description: The UNIX timestamp of the last token ownership change.\n          format: int64\n          example: 1608640582\n      description: \"\"\n    GetOwnerKip17TokensResponse:\n      title: GetOwnerKip17TokensResponse\n      required:\n      - cursor\n      - items\n      type: object\n      properties:\n        cursor:\n          type: string\n          description: \"The pointer for the next request, after which the result will\\\n            \\ be returned.\"\n          example: \"\"\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetOwnerKip17TokensResponseItem'\n      description: \"\"\n    GetKip17TokenHistoryResponse:\n      title: GetKip17TokenHistoryResponse\n      required:\n      - cursor\n      - items\n      type: object\n      properties:\n        cursor:\n          type: string\n          description: \"The pointer for the next request, after which the result will\\\n            \\ be returned.\"\n          example: eyJjm...ZSJ9\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetKip17TokenHistoryResponseItem'\n      description: \"\"\n    DeployKip17ContractRequest:\n      title: DeployKip17ContractRequest\n      required:\n      - alias\n      - name\n      - symbol\n      type: object\n      properties:\n        alias:\n          type: string\n          description: \"The alias of the contract. When using KIP-17 API, you can\\\n            \\ use the contract alias in place of the address. The alias must only\\\n            \\ consist of lowercase letters, numbers and hyphens, and the first letter\\\n            \\ is restricted to a lowercase letter.\u003cp\u003e\u003c/p\u003e\"\n          example: test-contract\n        symbol:\n          type: string\n          description: The contract symbol. It usually consists of 3-4 uppercase letters.\n          example: TEST\n        name:\n          type: string\n          description: \"The contract name. It can contain lowercase and uppercase\\\n            \\ letters, numbers and hyphens.\"\n          example: Test NFT\n        options:\n          $ref: '#/components/schemas/Kip17FeePayerOptions'\n      description: \"\"\n    UpdateKip17ContractRequest:\n      title: UpdateKip17ContractRequest\n      type: object\n      properties:\n        options:\n          $ref: '#/components/schemas/Kip17FeePayerOptions'\n    MintKip17TokenRequest:\n      title: MintKip17TokenRequest\n      required:\n      - id\n      - to\n      - uri\n      type: object\n      properties:\n        to:\n          type: string\n          description: The Klaytn accound address of the new token's owner.\n          example: 0x9EaF20b40E0f1ced5dbba6f5Cfb0D3E12B0534f4\n        id:\n          type: string\n          description: The ID of the new token; it must not be a duplicate of an existing\n            ID.\n          example: 0x13\n        uri:\n          type: string\n          description: The URI of the new token.\n          example: https://metastore.kip17.com/0xbe02aba/0x1\n      description: \"\"\n    TransferKip17TokenRequest:\n      title: TransferKip17TokenRequest\n      required:\n      - owner\n      - sender\n      - to\n      type: object\n      properties:\n        sender:\n          type: string\n          description: The Klaytn account address of the sender.\n          example: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n        owner:\n          type: string\n          description: The Klaytn account address of the current owner.\n          example: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n        to:\n          type: string\n          description: The Klaytn account address of the recipient.\n          example: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n      description: \"\"\n    BurnKip17TokenRequest:\n      title: BurnKip17TokenRequest\n      required:\n      - from\n      type: object\n      properties:\n        from:\n          type: string\n          description: The Klaytn account address of the owner or another party authorized\n            to burn the token.\n          example: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n      description: \"\"\n    ApproveKip17TokenRequest:\n      title: ApproveKip17TokenRequest\n      required:\n      - from\n      - to\n      type: object\n      properties:\n        from:\n          type: string\n          description: The Klaytn account address of the owner.\n          example: 0x9EaF20b40E0f1ced5dbba6f5Cfb0D3E12B0534f4\n        to:\n          type: string\n          description: The Klaytn account address to be granted authority to transfer\n            the token.\n          example: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n      description: \"\"\n    ApproveAllKip17Request:\n      title: ApproveAllKip17Request\n      required:\n      - from\n      - to\n      type: object\n      properties:\n        from:\n          type: string\n          description: The Klaytn account address of the owner.\n          example: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n        to:\n          type: string\n          description: The Klaytn account address to be granted authority to transfer\n            the token.\n          example: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n        approved:\n          type: boolean\n          description: The boolean value that indicates whether authorization was\n            granted/denied. The default value is `true`.\n          example: true\n      description: \"\"\n    Kip17ContractListResponseItem:\n      title: Kip17ContractListResponseItem\n      required:\n      - address\n      - alias\n      - name\n      - symbol\n      type: object\n      properties:\n        address:\n          type: string\n          description: The contract address.\n          example: 0x34132f491fea7aa622cca594e4bd2ccd6fc02bf7\n        alias:\n          type: string\n          description: The contract alias.\n          example: test\n        name:\n          type: string\n          description: The token name.\n          example: TEST NFT\n        options:\n          $ref: '#/components/schemas/Kip17FeePayerOptions'\n        symbol:\n          type: string\n          description: The token symbol.\n          example: TEST\n      description: \"\"\n    Kip17FeePayerOptions:\n      title: Kip17FeePayerOptions\n      type: object\n      properties:\n        enableGlobalFeePayer:\n          type: boolean\n          description: The boolean value that indicates whether KAS global fee delegation\n            is used. The default value is `true`.\n        userFeePayer:\n          $ref: '#/components/schemas/Kip17FeePayerOptions_userFeePayer'\n    GetOwnerKip17TokensResponseItem:\n      title: GetOwnerKip17TokensResponseItem\n      required:\n      - createdAt\n      - owner\n      - previousOwner\n      - tokenId\n      - tokenUri\n      - transactionHash\n      - updatedAt\n      type: object\n      properties:\n        createdAt:\n          type: integer\n          description: The UNIX timestamp of when the token was minted.\n          format: int64\n          example: 1608691873\n        owner:\n          type: string\n          description: The Klaytn account address of the current owner.\n          example: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n        previousOwner:\n          type: string\n          description: The Klaytn account address of the previous owner.\n          example: 0x0000000000000000000000000000000000000000\n        tokenId:\n          type: string\n          description: The ID assigned to the token.\n          example: 0x13\n        tokenUri:\n          type: string\n          description: The URI that contains the token's metadata.\n          example: https://metastore.kip17.com/0xbe02aba/0x1\n        transactionHash:\n          type: string\n          description: \"\"\n          example: 0x3bf8107f39158abf0f2b0dc1ee8ccce9320fbce14899f0021dc4d6ad970c9150\n        updatedAt:\n          type: integer\n          description: The UNIX timestamp of the last token ownership change.\n          format: int64\n          example: 1608691873\n      description: \"\"\n    GetKip17TokenHistoryResponseItem:\n      title: GetKip17TokenHistoryResponseItem\n      required:\n      - from\n      - timestamp\n      - to\n      type: object\n      properties:\n        from:\n          type: string\n          description: The Klaytn account address of the sender.\n          example: 0xbafa182d3fccebcb1701b66a69f0e7b40f3a52c4\n        timestamp:\n          type: integer\n          description: The UNIX timestamp of when the ownership changed.\n          format: int64\n          example: 1607391306\n        to:\n          type: string\n          description: The Klaytn account address of the recipient.\n          example: 0xae7bb7efff289c163a95303795c4d59293f6ba92\n      description: \"\"\n    Kip17FeePayerOptions_userFeePayer:\n      type: object\n      properties:\n        krn:\n          type: string\n          description: The KRN of the FeePayer-Pool of the FeePayer.\n        address:\n          type: string\n          description: The Klaytn account address that will pay the transaction fee.\n  requestBodies:\n    DeployKip17ContractRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeployKip17ContractRequest'\n          examples:\n            Success:\n              value:\n                alias: test\n                symbol: TEST\n                name: TEST NFT\n                options:\n                  enableGlobalFeePayer: true\n                  userFeePayer:\n                    krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                    address: 0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729\n    UpdateKip17ContractRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateKip17ContractRequest'\n          examples:\n            Success:\n              value:\n                options:\n                  enableGlobalFeePayer: false\n                  userFeePayer:\n                    krn: krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default\n                    address: 0xd6905b98E4Ba43a24E842d2b66c1410173791cab\n    MintKip17TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MintKip17TokenRequest'\n          examples:\n            Success:\n              value:\n                to: 0x9EaF20b40E0f1ced5dbba6f5Cfb0D3E12B0534f4\n                id: 0x13\n                uri: https://metastore.kip17.com/0xbe02aba/0x1\n            Bad request - missing field:\n              value:\n                to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                uri: https://metastore.kip17.com/0xbe02aba/0x1\n    TransferKip17TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TransferKip17TokenRequest'\n          examples:\n            Success:\n              value:\n                sender: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                owner: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n    BurnKip17TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BurnKip17TokenRequest'\n          examples:\n            Bad request - failed to get an account:\n              value:\n                from: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n            Success:\n              value:\n                from: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n    ApproveKip17TokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApproveKip17TokenRequest'\n          examples:\n            Success:\n              value:\n                from: 0x9EaF20b40E0f1ced5dbba6f5Cfb0D3E12B0534f4\n                to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n            Incorrect address:\n              value:\n                from: 0x9EaF20b40E0f1ced5dbba6f5Cfb0D3E12B0534f4\n                to: 0xINCORRECT\n    ApproveAllKip17Request:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApproveAllKip17Request'\n          examples:\n            Success:\n              value:\n                from: 0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4\n                to: 0xDc277E2D89b92336A4ee80be3c7142443FDaDE47\n                approved: true\n  securitySchemes:\n    basic:\n      type: http\n      description: \"KAS uses Basic HTTP Auth. All requests must have a correct Authorization\\\n        \\ header and a KAS user can create the credentials to be used for Basic Auth\\\n        \\ by using `username` as access key ID and `password` as secret access key.\\n\\\n        \\n\u003e**NOTE**\\n\u003e\\n\u003e All credentials on KAS enable full access to KAS and to\\\n        \\ the Klaytn account created with the Wallet API. It authorizes asset transfers\\\n        \\ of Klaytn account's assets (like KLAY) as well as [Transaction Execution](https://docs.klaytnapi.com/v/en/tutorial/wallet-transaction-api).\\\n        \\ To keep your KAS/Klaytn accounts secure, do not share your KAS API Secret\\\n        \\ Access Key with others.\\n\\n**cURL**\\n```\\n  curl --location --request GET\\\n        \\ 'https://kip17-api.klaytnapi.com/v1/contract' \\\\\\n  -u ${your_accessKeyId}:${your_secretAccessKey}\\\n        \\ \\\\\\n  --header 'x-chain-id: 1001' \\\\\\n  --header 'Content-Type: application/json'\\n\\\n        ```      \"\n      scheme: basic\nx-tagGroups:\n- name: API\n  tags:\n  - kip17-contract\n  - kip17-token\n- name: Error Codes\n  tags:\n  - err-400\n  - err-401\n  - err-404\n  - err-409\n"
		}
	},
	"Error": "json: cannot unmarshal number into Go struct field Info.info.version of type string"
}