{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tonkeeper/tonapi"
		},
		"file": {
			"name": "tonpusher.yaml",
			"size": 0,
			"path": "api/tonpusher.yaml",
			"byteSize": 10208,
			"content": "openapi: 3.0.1\n\ninfo:\n  title: REST api to pusher\n  version: 0.0.1\n  contact:\n    name: Support\n    email: contact@fslabs.org\n\nservers:\n  - url: \"https://tonapi.io\"\n  - url: \"http://localhost:8081\"\n\npaths:\n  /v1/stream/sse/test/event:\n    get:\n      description: Test new_transaction event\n      operationId: getNewTransactionTestEvent\n      tags:\n        - SSE\n      responses:\n        '200':\n          description: \"New transaction\"\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/NewTransactionEvent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /v1/stream/sse/account:\n    get:\n      security:\n        - JWTAuth: [ \"common\" ]\n      description: Get new transactions from accounts\n      operationId: getNewTransactionEvent\n      parameters:\n        - $ref: '#/components/parameters/accountsParameter'\n      tags:\n        - SSE\n      responses:\n        '200':\n          description: \"Account has new transaction\"\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/NewTransactionEvent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /v1/stream/sse/jetton_transfer:\n    get:\n      security:\n        - JWTAuth: [ \"common\" ]\n      description: Get check jetton transfer\n      operationId: getJettonTransferEvent\n      parameters:\n        - $ref: '#/components/parameters/jettonsParameter'\n      tags:\n        - SSE\n      responses:\n        '200':\n          description: \"Jetton has been transfer\"\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/JettonTransferEvent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /v1/stream/sse/nft_transfer:\n    get:\n      security:\n        - JWTAuth: [ \"common\" ]\n      description: Get check nft transfer\n      operationId: getNFTTransferEvent\n      parameters:\n        - $ref: '#/components/parameters/nftsParameter'\n      tags:\n        - SSE\n      responses:\n        '200':\n          description: \"NFT has been transfer\"\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/NFTTransferEvent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  \n  /v1/push/subscribe:\n    post:\n      security:\n        - JWTAuth: [ \"common\" ]\n      description: Subscribe to the push\n      operationId: subscribePush\n      requestBody:\n        $ref: \"#/components/requestBodies/subscribe\"\n      tags:\n        - Push\n      responses:\n        '200':\n          description: \"Ok\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ok'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /v1/push/unsubscribe:\n    post:\n      security:\n        - JWTAuth: [ \"common\" ]\n      description: Unsubscribe to the push\n      operationId: unsubscribePush\n      requestBody:\n        $ref: \"#/components/requestBodies/unsubscribe\"\n      tags:\n        - Push\n      responses:\n        '200':\n          description: \"Ok\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ok'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/InternalError'\n  /v1/stream/ws/account:\n    get:\n      security:\n        - JWTAuth: [ \"common\" ]\n      description: ws to check new transactions from account\n      operationId: wsAccount\n      tags:\n        - WS\n      responses:\n        200:\n          description: \"\"\n\ncomponents:\n  parameters:\n    accountsParameter:\n      in: query\n      name: accounts\n      required: true\n      description: \"accounts for check new transactions (separate by comma) or use 'all' for subscribe to all accounts\"\n      schema:\n        type: string\n        example: 0:a6830e9a3453771efeb588cfb33216a6b102438fa25d1349d5976d4514b5d693,\n        enum:\n          - all\n    nftsParameter:\n      in: query\n      name: nfts\n      required: true\n      description: \"nfts for check transfer (separate by comma)\"\n      schema:\n        type: string\n        example: 0:a6830e9a3453771efeb588cfb33216a6b102438fa25d1349d5976d4514b5d693,\n    jettonsParameter:\n      in: query\n      name: jettons\n      required: true\n      description: \"jettons for check transfer (separate by comma)\"\n      schema:\n        type: string\n        example: 0:a6830e9a3453771efeb588cfb33216a6b102438fa25d1349d5976d4514b5d693,\n  \n  requestBodies:\n    unsubscribe:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - device\n            properties:\n              device:\n                type: string\n    subscribe:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - device\n            properties:\n              device:\n                type: string\n              token:\n                type: string\n              locale:\n                type: string\n              accounts:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - address\n                  properties:\n                    address:\n                      type: string\n    rpc:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              id:\n                type: integer\n                format: int64\n                example: 1\n              jsonrpc:\n                type: string\n                example: \"2.0\"\n              method:\n                type: string\n                enum:\n                  - subscribe_account\n                  - unsubscribe_account\n              params:\n                type: array\n                items:\n                  type: string\n                  example: \"EQAs87W4yJHlF8mt29ocA4agnMrLsOP69jC1HPyBUjJay-7l\"\n  \n  schemas:\n    NewTransactionEvent:\n      type: object\n      required:\n        - event_id\n        - event_name\n        - hash_transaction\n        - account\n      properties:\n        event_id:\n          type: integer\n          format: int64\n          example: 1\n        event_name:\n          type: string\n          example: \"new_transaction\"\n          enum:\n            - new_transaction\n        hash_transaction:\n          type: string\n          example: \"cf3b91ec333f50e1629b0d6eb448c50bf7539ee9a3bf9cce33fb2c2c6ef22370\"\n        account:\n          type: string\n          example: \"0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365\"\n    JettonTransferEvent:\n      type: object\n      required:\n        - event_id\n        - event_name\n        - recipient_address\n        - amount\n        - jetton_address\n      properties:\n        event_id:\n          type: integer\n          format: int64\n          example: 1\n        event_name:\n          type: string\n          example: \"jetton_transfer\"\n          enum:\n            - jetton_transfer\n        recipient_address:\n          type: string\n          example: \"0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365\"\n        amount:\n          type: string\n          example: \"20\"\n        jetton_address:\n          type: string\n          example: \"0:6553FB4A2128297A978C153F6DDF14C37A2566A36E5D5BFE2F50E97A8C877F04\"\n    NFTTransferEvent:\n      type: object\n      required:\n        - event_id\n        - event_name\n        - new_owner\n        - nft_address\n      properties:\n        event_id:\n          type: integer\n          format: int64\n          example: 1\n        event_name:\n          type: string\n          example: \"new_transaction\"\n          enum:\n            - new_transaction\n        new_owner:\n          type: string\n          example: \"0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365\"\n        nft_address:\n          type: string\n          example: \"0:FD595F36B4C1535BEC8461490D38EBB9AE3C38DD6ACE17CA63ABE2C6608BE159\"\n    Error:\n      type: object\n      required:\n        - error\n      properties:\n        error:\n          type: string\n          example: error description\n    Ok:\n      type: object\n      required:\n        - ok\n      properties:\n        ok:\n          type: boolean\n          example: true\n  \n  responses:\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InternalError:\n      description: Something went wrong on server side\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    BadRequest:\n      description: Something went wrong on client side\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    UnauthorizedError:\n      description: Access token is missing or invalid\n  \n  securitySchemes:\n    JWTAuth:\n      description: \"JWT token authorization\"\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/tonkeeper/tonapi@7f288a10832bf55fc7f7d970906d72cf397cabee/-/blob/api/tonpusher.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tonkeeper/tonapi/blob/7f288a10832bf55fc7f7d970906d72cf397cabee/api/tonpusher.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/push/subscribe\": post: operation \"subscribePush\": security: at api/tonpusher.yaml:113:22: list of scopes MUST be empty for \"type\" \"http\""
}