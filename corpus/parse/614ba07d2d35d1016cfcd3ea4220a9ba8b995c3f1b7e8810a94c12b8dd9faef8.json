{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/xero.bankfeeds/openapi.yml",
			"byteSize": 38884,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"2.16.0\"\n  title: Xero Bank Feeds API\n  description: |\n    This is a generated connector for [Xero Bank Feeds API v2.16.0](https://developer.xero.com/documentation/api/bankfeeds/overview) OpenAPI specification.\n    The Bank Feeds API is a closed API that is only available to financial institutions that have an established financial services partnership with Xero.\n    If you're an existing financial services partner that wants access, contact your local Partner Manager.\n    If you're a financial institution who wants to provide bank feeds to your business customers, contact xero to become a financial services partner.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create a [Xero account](https://developer.xero.com/app/manage) and obtain tokens by following [this guide](https://developer.xero.com/documentation/getting-started-guide/).\n  x-ballerina-display:\n    label: Xero Bank Feeds\n    iconPath: \"icon.png\"\n  termsOfService: \"https://developer.xero.com/xero-developer-platform-terms-conditions/\"\n  contact:\n    name: \"Xero Platform Team\"\n    email: \"api@xero.com\"\n    url: \"https://developer.xero.com\"\n  license:\n    name: MIT \n    url: 'https://github.com/XeroAPI/Xero-OpenAPI/blob/master/LICENSE'\nservers:\n  - description: Xero Bank Feeds API base url\n    url: https://api.xero.com/bankfeeds.xro/1.0\npaths:\n  /FeedConnections:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [bankfeeds]\n      tags:\n        - BankFeeds\n      summary: Searches for feed connections\n      operationId: getFeedConnections\n      description: By passing in the appropriate options, you can search for available feed connections in the system.\n      parameters: \n        - name: page\n          in: query\n          description: Page number which specifies the set of records to retrieve. By default the number of the records per set is 10. Example - https://api.xero.com/bankfeeds.xro/1.0/FeedConnections?page=1 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned. \n          schema: \n            type: integer\n            example: 1\n        - name: pageSize\n          in: query\n          description: Page size which specifies how many records per page will be returned (default 10). Example - https://api.xero.com/bankfeeds.xro/1.0/FeedConnections?pageSize=100 to specify page size of 100. \n          schema: \n            type: integer\n            example: 100\n      responses:\n        '202':\n          description: search results matching criteria returned with pagination and items array\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeedConnections'\n              example: \n                  { \n                    \"pagination\":{ \n                        \"page\":1,\n                        \"pageCount\":1,\n                        \"pageSize\":87654321,\n                        \"itemCount\":39\n                    },\n                    \"items\":[ \n                        { \n                          \"id\":\"c0eb97b5-4f97-465a-8268-276513c14396\",\n                          \"accountToken\":\"foobar31306\",\n                          \"accountType\":\"BANK\",\n                          \"accountNumber\":\"123496842\",\n                          \"accountName\":\"SDK Bank 95921\",\n                          \"accountId\":\"aefbf6be-4285-4ca5-bf39-0f486c8515c7\",\n                          \"currency\":\"GBP\",\n                          \"country\":\"GB\"\n                        },\n                        { \n                          \"id\":\"3b44b539-4e39-4d53-9334-d8ba01674752\",\n                          \"accountToken\":\"foobar74770\",\n                          \"accountType\":\"BANK\",\n                          \"accountNumber\":\"123481122\",\n                          \"accountName\":\"SDK Bank 11272\",\n                          \"accountId\":\"fc2f3cc2-126e-40d7-9fc1-12e52d0a71f1\",\n                          \"currency\":\"GBP\",\n                          \"country\":\"GB\"\n                        }\n                    ]\n                  }\n        '400':\n          description: validation error response\n    post:\n      security:\n        - OAuth2: [bankfeeds]\n      tags:\n        - BankFeeds\n      summary: Create one or more new feed connection\n      operationId: createFeedConnections\n      x-hasBankFeedsValidationError: true\n      description: By passing in the FeedConnections array object in the body, you can create one or more new feed connections\n      requestBody:\n        required: true\n        description: Feed Connection(s) array object in the body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FeedConnections'\n            example:\n              { \n                \"items\":[ \n                    { \n                      \"accountToken\":\"foobar71760\",\n                      \"accountNumber\":\"123458637\",\n                      \"accountName\":\"SDK Bank 90861\",\n                      \"accountType\":\"BANK\",\n                      \"currency\":\"GBP\"\n                    }\n                ]\n              }\n      responses:\n        '202':\n          description: success new feed connection(s)response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeedConnections'\n              example: \n                { \n                  \"items\":[ \n                      { \n                        \"id\":\"2a19d46c-2a92-4e50-9401-dcf2cb895be7\",\n                        \"accountToken\":\"foobar71760\",\n                        \"status\":\"PENDING\"\n                      }\n                  ]\n                }\n        '400':\n          description: failed to create new feed connection(s)response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeedConnections'\n              example:\n                {\n                    \"items\": [\n                        {\n                            \"accountToken\": \"foobar71760\",\n                            \"status\": \"REJECTED\",\n                            \"error\": {\n                                \"type\": \"invalid-request\",\n                                \"title\": \"Invalid Request\",\n                                \"status\": 400,\n                                \"detail\": \"For the request field 'AccountNumber' exceeded the maximum length of 40.\"\n                            }\n                        }\n                    ]\n                }\n  /FeedConnections/{id}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [bankfeeds]\n      tags:\n        - BankFeeds\n      summary: Retrieve single feed connection based on a unique id provided\n      operationId: getFeedConnection\n      description: By passing in a FeedConnection Id options, you can search for matching feed connections\n      parameters: \n        - required: true\n          in: path\n          name: id\n          description: Unique identifier for retrieving single object\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: success returns a FeedConnection object matching the id in response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeedConnection'\n              example: \n                { \n                  \"id\":\"b58b685a-1bee-4904-91f1-fee30bb6ea52\",\n                  \"accountToken\":\"foobar84778\",\n                  \"accountType\":\"BANK\",\n                  \"accountNumber\":\"123434859\",\n                  \"accountName\":\"SDK Bank 5517\",\n                  \"accountId\":\"f4c4d595-da94-493b-999a-19d1ae1f508a\",\n                  \"currency\":\"GBP\",\n                  \"country\":\"GB\"\n                }\n        '400':\n          description: bad input parameter\n  /FeedConnections/DeleteRequests:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    post:\n      security:\n        - OAuth2: [bankfeeds]\n      tags:\n        - BankFeeds\n      summary: Delete an existing feed connection\n      operationId: deleteFeedConnections\n      description: By passing in FeedConnections array object in the body, you can delete a feed connection.\n      requestBody:\n        required: true\n        description: Feed Connections array object in the body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FeedConnections'\n            example:\n                { \n                  \"items\":[ \n                      { \n                        \"id\":\"b4cc693b-24d9-42ec-a6d4-2943d253ff63\"\n                      }\n                  ]\n                }\n      responses:\n        '202':\n          description: Success response for deleted feed connection\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeedConnections'\n              example: \n                  { \n                    \"items\":[ \n                        { \n                          \"id\":\"b4cc693b-24d9-42ec-a6d4-2943d253ff63\",\n                          \"status\":\"PENDING\"\n                        },\n                        {\n                          \"accountToken\": \"10000125\",\n                          \"status\": \"REJECTED\",\n                          \"error\": {\n                            \"type\": \"feed-connected-in-different-organisation\",\n                            \"title\": \"Feed connected in different organisation\",\n                            \"detail\": \"The AccountToken is connected to another Xero Bank Account associated with this bank. This Xero Bank Account belongs to a different Xero Organisation.\"\n                          }\n                        }\n                    ]\n                  }\n        '400':\n          description: bad input parameter\n  /Statements:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [bankfeeds]\n      tags:\n        - BankFeeds\n      summary: Retrieve all statements\n      operationId: getStatements\n      description: By passing in parameters, you can search for matching statements\n      parameters:\n        - in: query\n          name: page\n          description: unique id for single object\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: pageSize\n          description: Page size which specifies how many records per page will be returned (default 10). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100. \n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: Xero-Application-Id\n          in: header\n          description: Xero-Application-Id\n          required: false\n          schema:\n            type: string\n            default: 00000000-0000-0000-0000-0000000010000\n        - name: Xero-User-Id\n          in: header\n          description: Xero-User-Id\n          required: false\n          schema:\n            type: string\n            default: 00000000-0000-0000-0000-0000030000000\n      responses:\n        '200':\n          description: success returns Statements array of objects response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Statements'\n              example: \n                  { \n                    \"pagination\":{ \n                        \"page\":1,\n                        \"pageCount\":210,\n                        \"pageSize\":3,\n                        \"itemCount\":3\n                    },\n                    \"items\":[ \n                        { \n                          \"id\":\"9817e4b8-82b3-4526-91f7-040bd278053f\",\n                          \"feedConnectionId\":\"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n                          \"status\":\"REJECTED\",\n                          \"startDate\":\"2019-08-01\",\n                          \"endDate\":\"2019-08-15\",\n                          \"startBalance\":{ \n                              \"amount\":\"100.0000\",\n                              \"creditDebitIndicator\":\"CREDIT\"\n                          },\n                          \"endBalance\":{ \n                              \"amount\":\"150.0000\",\n                              \"creditDebitIndicator\":\"CREDIT\"\n                          },\n                          \"statementLineCount\":\"1\",\n                          \"errors\":[ \n                              { \n                                \"type\":\"duplicate-statement\",\n                                \"title\":\"Duplicate Statement Received\",\n                                \"status\":409,\n                                \"detail\":\"The received statement was marked as a duplicate.\"\n                              }\n                          ]\n                        },\n                        { \n                          \"id\":\"2fc57bac-7aa7-4981-a5cd-8aee83fe698c\",\n                          \"feedConnectionId\":\"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n                          \"status\":\"DELIVERED\",\n                          \"startDate\":\"2019-08-01\",\n                          \"endDate\":\"2019-08-15\",\n                          \"startBalance\":{ \n                              \"amount\":\"100.0000\",\n                              \"creditDebitIndicator\":\"CREDIT\"\n                          },\n                          \"endBalance\":{ \n                              \"amount\":\"150.0000\",\n                              \"creditDebitIndicator\":\"CREDIT\"\n                          },\n                          \"statementLineCount\":\"1\"\n                        }\n                    ]\n                  }\n        '400':\n          description: bad input parameter\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Statements'\n              example:  {\n                          \"type\": \"invalid-request\",\n                          \"title\": \"Invalid Request\",\n                          \"status\": 400,\n                          \"detail\": \"For the request field missing parameter.\"\n                        }\n    post:\n      security:\n        - OAuth2: [bankfeeds]\n      tags:\n        - BankFeeds\n      summary: Creates one or more new statements\n      operationId: createStatements\n      x-hasBankFeedsValidationError: true\n      responses:\n        '202':\n          description: Success returns Statements array of objects in response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Statements'\n              example:  \n                  { \n                    \"items\":[ \n                        { \n                          \"id\":\"d69b02b7-a30c-464a-99cf-ba9770373c61\",\n                          \"feedConnectionId\":\"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n                          \"status\":\"PENDING\"\n                        },\n                        { \n                          \"id\":\"598f255c-015b-4138-93df-2e06c64565b3\",\n                          \"feedConnectionId\":\"2ebe6393-f3bb-48ab-9a0e-b04fa8585a70\",\n                          \"status\":\"PENDING\"\n                        }\n                    ]\n                  }\n        '400':\n          description: Statement failed validation\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Statements'\n              example:  {\n                          \"type\": \"invalid-request\",\n                          \"title\": \"Invalid Request\",\n                          \"status\": 400,\n                          \"detail\": \"For the request field 'StatementLine.ChequeNumber' exceeded the maximum length of 20.\"\n                        }\n        '403':\n          description: Invalid application or feed connection\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example: {\n                          \"type\": \"invalid-application\",\n                          \"title\": \"Invalid Application\",\n                          \"status\": 403,\n                          \"detail\": \"The application has not been configured to use these API endpoints.\"\n                        }\n        '409':\n          description: Duplicate statement received\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Statements'\n              example:  \n                  { \n                    \"items\":[ \n                        { \n                          \"id\":\"29fefeb6-f449-470d-9179-f1d8900930d6\",\n                          \"feedConnectionId\":\"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n                          \"status\":\"REJECTED\",\n                          \"errors\":[ \n                              { \n                                \"type\":\"duplicate-statement\",\n                                \"title\":\"Duplicate Statement Received\",\n                                \"status\":409,\n                                \"detail\":\"The received statement was marked as a duplicate.\"\n                              }\n                          ]\n                        }\n                    ]\n                  }\n        '413':\n          description: Statement exceeds size limit\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Statements'\n              example:  {\n                          \"type\": \"invalid-request\",\n                          \"title\": \"Request too large\",\n                          \"status\": 413,\n                          \"detail\": \"Request size of 3500000 bytes exceeds the limit of 3000000 bytes.\"\n                        }\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Statements'\n              example:  {\n                          \"type\": \"invalid-end-balance\",\n                          \"title\": \"Invalid End Balance\",\n                          \"status\": 422,\n                          \"detail\": \"End balance does not match start balance +/- statement line amounts.\"\n                        }\n        '500':\n          description: Intermittent Xero Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Statements'\n              example:  {\n                          \"type\": \"internal-error\",\n                          \"title\": \"Intermittent Internal Xero Error\",\n                          \"status\": 500,\n                          \"detail\": \"The request should be retried. If the error persists, a Xero support issue should be raised.\"\n                        }\n      requestBody:\n        description: Statements array of objects in the body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Statements'\n            example:\n                { \n                  \"items\":[ \n                      { \n                        \"feedConnectionId\":\"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n                        \"startDate\":\"2019-08-11\",\n                        \"endDate\":\"2019-08-11\",\n                        \"startBalance\":{ \n                            \"amount\":\"100\",\n                            \"creditDebitIndicator\":\"CREDIT\"\n                        },\n                        \"endBalance\":{ \n                            \"amount\":\"150\",\n                            \"creditDebitIndicator\":\"CREDIT\"\n                        },\n                        \"statementLines\":[ \n                            { \n                              \"postedDate\":\"2019-08-11\",\n                              \"description\":\"My new line\",\n                              \"amount\":\"50\",\n                              \"creditDebitIndicator\":\"CREDIT\",\n                              \"transactionId\":\"123446422\",\n                              \"payeeName\":\"StarLord90315\",\n                              \"reference\":\"Foobar95578\",\n                              \"chequeNumber\":\"12379009\",\n                              \"transactionType\": \"Refund\"\n                            }\n                        ]\n                      },\n                      { \n                        \"feedConnectionId\":\"2ebe6393-f3bb-48ab-9a0e-b04fa8585a70\",\n                        \"startDate\":\"2019-08-11\",\n                        \"endDate\":\"2019-08-11\",\n                        \"startBalance\":{ \n                            \"amount\":\"100\",\n                            \"creditDebitIndicator\":\"CREDIT\"\n                        },\n                        \"endBalance\":{ \n                            \"amount\":\"150\",\n                            \"creditDebitIndicator\":\"CREDIT\"\n                        },\n                        \"statementLines\":[ \n                            { \n                              \"postedDate\":\"2019-08-11\",\n                              \"description\":\"My new line\",\n                              \"amount\":\"50\",\n                              \"creditDebitIndicator\":\"CREDIT\",\n                              \"transactionId\":\"123449402\",\n                              \"payeeName\":\"StarLord56705\",\n                              \"reference\":\"Foobar67355\",\n                              \"chequeNumber\":\"12379350\",\n                              \"transactionType\": \"Currency Conversion Fee\"\n                            }\n                        ]\n                      }\n                  ]\n                }\n  /Statements/{statementId}:\n    parameters:\n      - $ref: '#/components/parameters/requiredHeader'\n    get:\n      security:\n        - OAuth2: [bankfeeds]\n      tags:\n        - BankFeeds\n      summary: Retrieve single statement based on unique id provided\n      operationId: getStatement\n      description: By passing in a statement id, you can search for matching statements\n      parameters:\n        - name: statementId\n          description: statement id for single object\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: search results matching id for single statement\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Statement'\n              example: \n                  { \n                    \"id\":\"97aca24a-dd10-4cda-98c7-1084a048257b\",\n                    \"feedConnectionId\":\"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n                    \"status\":\"DELIVERED\",\n                    \"startDate\":\"2019-08-11\",\n                    \"endDate\":\"2019-10-11\",\n                    \"startBalance\":{ \n                        \"amount\":\"100.0000\",\n                        \"creditDebitIndicator\":\"CREDIT\"\n                    },\n                    \"endBalance\":{ \n                        \"amount\":\"150.0000\",\n                        \"creditDebitIndicator\":\"CREDIT\"\n                    },\n                    \"statementLineCount\":\"1\"\n                  }\n        '404':\n          description: Statement not found\ncomponents:\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      description: For more information visit https://developer.xero.com/documentation/oauth2/overview\n      flows: \n        authorizationCode:\n          authorizationUrl: 'https://login.xero.com/identity/connect/authorize'\n          tokenUrl: 'https://identity.xero.com/connect/token'\n          scopes:\n            email: Grant read-only access to your email\n            openid: Grant read-only access to your open id\n            profile: your profile information\n            bankfeeds: Grant read-write access to bankfeeds\n  parameters:\n    requiredHeader: \n      in: header\n      name: Xero-Tenant-Id\n      description: Xero identifier for Tenant\n      schema:\n        type: string\n      required: true \n  schemas:\n    FeedConnections:\n      externalDocs:\n        url: 'https://developer.xero.com/documentation/bank-feeds-api/feed-connections'\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/FeedConnection'\n    FeedConnection:\n      externalDocs:\n        url: 'https://developer.xero.com/documentation/bank-feeds-api/feed-connections'\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: \"0d3cf8d-95dc-4466-8dc0-47e6d1197e28\"\n          description: GUID used to identify the Account.\n        accountToken:\n          type: string\n          example: \"10000123\"\n          maximum: 50\n          description: This account identifier is generated by the financial institute (FI). This must be unique for your financial institute.\n        accountNumber:\n          type: string\n          example: \"3809087654321500\"\n          maximum: 40\n          description: String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified.\n        accountName:\n          type: string\n          example: \"Joe's Savings Account\"\n          maximum: 30\n          description: The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found.\n        accountId:\n          type: string\n          format: uuid\n          example: \"079a88ea-276d-41fb-a1f1-366ef3e22921\"\n          description: Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified.\n        accountType:\n          enum: [BANK,CREDITCARD]\n          example: \"BANK\"\n          description: High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards.\n        currency:\n          $ref: '#/components/schemas/CurrencyCode'\n        country:\n          $ref: '#/components/schemas/CountryCode'\n        status:\n          type: string\n          enum: [PENDING,REJECTED]\n          example: \"REJECTED\"\n          description: the current status of the feed connection\n        error:\n          $ref: '#/components/schemas/Error'\n    Statements:\n      externalDocs:\n        url: 'https://developer.xero.com/documentation/bank-feeds-api/statements'\n      type: object\n      properties:\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Statement'\n    Pagination:\n      type: object\n      properties:\n        page:\n          type: integer\n          example: 1\n          description: Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned.\n        pageSize:\n          type: integer\n          example: 10\n          description: Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100.\n        pageCount:\n          type: integer\n          example: 1\n          description: Number of pages available\n        itemCount:\n          type: integer\n          example: 2\n          description: Number of items returned\n    Statement:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: \"ba4f3127-5e46-427d-80ea-dea2fcd26afe\"\n          description: GUID used to identify the Statement.\n        feedConnectionId:\n          type: string\n          format: uuid\n          example: \"87cb0dc8-fa32-409c-b622-19f8de8dcc83\"\n          description: The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections.\n        status:\n          enum: [\"PENDING\",\"REJECTED\",\"DELIVERED\"]\n          example: \"PENDING\"\n          description: Current status of statements\n        startDate:\n          type: string\n          format: date\n          example: \"2018-07-27\"\n          description: Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD\n        endDate:\n          type: string\n          format: date\n          example: \"2018-07-27\"\n          description: Closing balance date ISO-8601 YYYY-MM-DD\n        startBalance:\n          $ref: '#/components/schemas/StartBalance'\n        endBalance:\n          $ref: '#/components/schemas/EndBalance'\n        statementLines:\n            $ref: '#/components/schemas/StatementLines'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Error'\n        statementLineCount:\n          type: integer\n          example: 1\n    StartBalance:\n      description: The starting balance of the statement\n      type: object\n      properties:\n        amount:\n          type: number\n          format: double\n          x-is-money: true\n          example: \"9.0000\"\n          description: decimal(19,4) unsigned Opening/closing balance amount.\n        creditDebitIndicator:\n          $ref: '#/components/schemas/CreditDebitIndicator'\n    EndBalance:\n      description: The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.\n      type: object\n      properties:\n        amount:\n          description: Amount\n          type: number\n          format: double\n          x-is-money: true\n          example: \"10.1340\"\n        creditDebitIndicator:\n          $ref: '#/components/schemas/CreditDebitIndicator'\n    StatementLines:\n      type: array\n      items:\n        $ref: '#/components/schemas/StatementLine'\n    StatementLine:\n      type: object\n      description: the lines details for a statement\n      properties:\n        postedDate:\n          type: string\n          format: date\n          example: \"2018-06-10\"\n          description: The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD\n        description: \n          type: string\n          example: \"Description for statement line 2\"\n          maximum: 2000\n          description: Transaction description\n        amount: \n          type: number\n          format: double\n          x-is-money: true\n          example: \"5.00\"\n          description: Transaction amount\n        creditDebitIndicator: \n          $ref: '#/components/schemas/CreditDebitIndicator'\n        transactionId: \n          type: string\n          example: \"transaction-id-2\"\n          description: Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection.\n        payeeName: \n          type: string\n          example: \"Payee name for statement line 2\"\n          description: Typically the merchant or payee name\n          maximum: 255\n        reference: \n          type: string\n          example: \"Reference for statement line 2\"\n          description: Optional field to enhance the Description\n          maximum: 255\n        chequeNumber: \n          type: string\n          example: \"021\"\n          description: The cheque/check number\n          maximum: 20\n        transactionType: \n          type: string\n          example: \"Refund\"\n          description: Descriptive transaction type\n          maximum: 30\n    Error:\n      type: object\n      description: On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.\n      properties:\n        title:\n          type: string\n          maximum: 255\n          description: Human readable high level error description.\n          example: \"Invalid Application\"\n        status:\n          type: integer\n          description: The numeric HTTP Status Code, e.g. 404\n          example: 403\n        detail:\n          type: string\n          maximum: 255\n          description: Human readable detailed error description.\n          example: \"The application has not been configured to use these API endpoints.\"\n        type:\n          type: string\n          description: Identifies the type of error.\n          enum: \n          - \"invalid-request\"\n          - \"invalid-application\"\n          - \"invalid-feed-connection\"\n          - \"duplicate-statement\"\n          - \"invalid-end-balance\"\n          - \"invalid-start-and-end-date\"\n          - \"invalid-start-date\"\n          - \"internal-error\"\n          - \"feed-already-connected-in-current-organisation\"\n          - \"invalid-end-date\"\n          - \"statement-not-found\"\n          - \"feed-connected-in-different-organisation\"\n          - \"feed-already-connected-in-different-organisation\"\n          - \"bank-feed-not-found\"\n          - \"invalid-country-specified\"\n          - \"invalid-organisation-bank-feeds\"\n          - \"invalid-organisation-multi-currency\"\n          - \"invalid-feed-connection-for-organisation\"\n          - \"invalid-user-role\"\n          - \"account-not-valid\"\n          - \"feed-not-found-or-already-deleted\"\n          example: \"invalid-application\"\n    CreditDebitIndicator:\n      type: string\n      description: If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.\n      enum:\n        - CREDIT\n        - DEBIT\n    CurrencyCode:\n      description: 3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.\n      example: \"AUD\"\n      type: string\n      enum:\n      - AED \n      - AFN\n      - ALL\n      - AMD\n      - ANG\n      - AOA\n      - ARS\n      - AUD\n      - AWG\n      - AZN\n      - BAM\n      - BBD\n      - BDT\n      - BGN\n      - BHD\n      - BIF\n      - BMD\n      - BND\n      - BOB\n      - BRL\n      - BSD\n      - BTN\n      - BWP\n      - BYN\n      - BZD\n      - CAD\n      - CDF\n      - CHF\n      - CLP\n      - CNY\n      - COP\n      - CRC\n      - CUC\n      - CUP\n      - CVE\n      - CZK\n      - DJF\n      - DKK\n      - DOP\n      - DZD\n      - EGP\n      - ERN\n      - ETB\n      - EUR\n      - FJD\n      - FKP\n      - GBP\n      - GEL\n      - GGP\n      - GHS\n      - GIP\n      - GMD\n      - GNF\n      - GTQ\n      - GYD\n      - HKD\n      - HNL\n      - HRK\n      - HTG\n      - HUF\n      - IDR\n      - ILS\n      - IMP\n      - INR\n      - IQD\n      - IRR\n      - ISK\n      - JEP\n      - JMD\n      - JOD\n      - JPY\n      - KES\n      - KGS\n      - KHR\n      - KMF\n      - KPW\n      - KRW\n      - KWD\n      - KYD\n      - KZT\n      - LAK\n      - LBP\n      - LKR\n      - LRD\n      - LSL\n      - LYD\n      - MAD\n      - MDL\n      - MGA\n      - MKD\n      - MMK\n      - MNT\n      - MOP\n      - MRU\n      - MUR\n      - MVR\n      - MWK\n      - MXN\n      - MYR\n      - MZN\n      - NAD\n      - NGN\n      - NIO\n      - NOK\n      - NPR\n      - NZD\n      - OMR\n      - PAB\n      - PEN\n      - PGK\n      - PHP\n      - PKR\n      - PLN\n      - PYG\n      - QAR\n      - RON\n      - RSD\n      - RUB\n      - RWF\n      - SAR\n      - SBD\n      - SCR\n      - SDG\n      - SEK\n      - SGD\n      - SHP\n      - SLL\n      - SOS\n      - SPL\n      - SRD\n      - STN\n      - SVC\n      - SYP\n      - SZL\n      - THB\n      - TJS\n      - TMT\n      - TND\n      - TOP\n      - TRY\n      - TTD\n      - TVD\n      - TWD\n      - TZS\n      - UAH\n      - UGX\n      - USD\n      - UYU\n      - UZS\n      - VEF\n      - VND\n      - VUV\n      - WST\n      - XAF\n      - XCD\n      - XDR\n      - XOF\n      - XPF\n      - YER\n      - ZAR\n      - ZMW\n      - ZMK\n      - ZWD\n      - \"\"\n    CountryCode:\n      type: string\n      example: \"GB\"\n      description: ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.\n      enum:\n      - AD\n      - AE\n      - AF\n      - AG\n      - AI\n      - AL\n      - AM\n      - AN\n      - AO\n      - AQ\n      - AR\n      - AS\n      - AT\n      - AU\n      - AW\n      - AZ\n      - BA\n      - BB\n      - BD\n      - BE\n      - BF\n      - BG\n      - BH\n      - BI\n      - BJ\n      - BL\n      - BM\n      - BN\n      - BO\n      - BR\n      - BS\n      - BT\n      - BW\n      - BY \n      - BZ \n      - CA\n      - CC \n      - CD \n      - CF \n      - CG \n      - CH \n      - CI \n      - CK \n      - CL\n      - CM\n      - CN\n      - CO\n      - CR\n      - CU\n      - CV\n      - CW\n      - CX\n      - CY\n      - CZ\n      - DE\n      - DJ\n      - DK\n      - DM\n      - DO\n      - DZ\n      - EC\n      - EE\n      - EG\n      - EH\n      - ER\n      - ES\n      - ET\n      - FI\n      - FJ\n      - FK\n      - FM\n      - FO\n      - FR\n      - GA\n      - GB\n      - GD\n      - GE\n      - GG\n      - GH\n      - GI\n      - GL\n      - GM\n      - GN\n      - GQ\n      - GR\n      - GT\n      - GU\n      - GW\n      - GY\n      - HK\n      - HN\n      - HR\n      - HT\n      - HU\n      - ID\n      - IE\n      - IL\n      - IM\n      - IN\n      - IO\n      - IQ\n      - IR\n      - IS\n      - IT\n      - JE\n      - JM\n      - JO\n      - JP\n      - KE\n      - KG\n      - KH\n      - KI\n      - KM\n      - KN\n      - KP\n      - KR\n      - KW\n      - KY\n      - KZ\n      - LA\n      - LB\n      - LC\n      - LI\n      - LK\n      - LR\n      - LS\n      - LT\n      - LU\n      - LV\n      - LY\n      - MA\n      - MC\n      - MD\n      - ME\n      - MF\n      - MG\n      - MH\n      - MK\n      - ML\n      - MM\n      - MN\n      - MO\n      - MP\n      - MR\n      - MS\n      - MT\n      - MU\n      - MV\n      - MW\n      - MX\n      - MY\n      - MZ\n      - NA\n      - NC\n      - NE\n      - NG\n      - NI\n      - NL\n      - NO\n      - NP\n      - NR\n      - NU\n      - NZ\n      - OM\n      - PA\n      - PE\n      - PF\n      - PG\n      - PH\n      - PK\n      - PL\n      - PM\n      - PN\n      - PR\n      - PS\n      - PT\n      - PW\n      - PY\n      - QA\n      - RE\n      - RO\n      - RS\n      - RU\n      - RW\n      - SA\n      - SB\n      - SC\n      - SD\n      - SE\n      - SG\n      - SH\n      - SI\n      - SJ\n      - SK\n      - SL\n      - SM\n      - SN\n      - SO\n      - SR\n      - SS\n      - ST\n      - SV\n      - SX\n      - SY\n      - SZ\n      - TC\n      - TD\n      - TG\n      - TH\n      - TJ\n      - TK\n      - TL\n      - TM\n      - TN\n      - TO\n      - TR\n      - TT\n      - TV\n      - TW\n      - TZ\n      - UA\n      - UG\n      - US\n      - UY\n      - UZ\n      - VA\n      - VC\n      - VE\n      - VG\n      - VI\n      - VN\n      - VU\n      - WF\n      - WS\n      - XK\n      - YE\n      - YT\n      - ZA\n      - ZM\n      - ZW\n      ",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/xero.bankfeeds/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/xero.bankfeeds/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"FeedConnection\": parse schema: property \"country\": parse schema: resolve \"#/components/schemas/CountryCode\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}