{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "org_activity.yaml",
			"size": 0,
			"path": "providers/src/github/v0.2.0/services/org_activity.yaml",
			"byteSize": 13891,
			"content": "paths:\n  /orgs/{org}/events:\n    get:\n      summary: List public organization events\n      description: ''\n      tags:\n        - activity\n      operationId: activity/list-public-org-events\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/activity#list-public-organization-events\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/event'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: activity\n        subcategory: events\ncomponents:\n  schemas:\n    event:\n      title: Event\n      description: Event\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          nullable: true\n        actor:\n          $ref: '#/components/schemas/actor'\n        repo:\n          type: object\n          properties:\n            id:\n              type: integer\n            name:\n              type: string\n            url:\n              type: string\n              format: uri\n          required:\n            - id\n            - name\n            - url\n        org:\n          $ref: '#/components/schemas/actor'\n        payload:\n          type: object\n          properties:\n            action:\n              type: string\n            issue:\n              $ref: '#/components/schemas/issue'\n            comment:\n              $ref: '#/components/schemas/issue-comment'\n            pages:\n              type: array\n              items:\n                type: object\n                properties:\n                  page_name:\n                    type: string\n                  title:\n                    type: string\n                  summary:\n                    type: string\n                    nullable: true\n                  action:\n                    type: string\n                  sha:\n                    type: string\n                  html_url:\n                    type: string\n        public:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n        - id\n        - type\n        - actor\n        - repo\n        - payload\n        - public\n        - created_at\n    actor:\n      title: Actor\n      description: Actor\n      type: object\n      properties:\n        id:\n          type: integer\n        login:\n          type: string\n        display_login:\n          type: string\n        gravatar_id:\n          type: string\n          nullable: true\n        url:\n          type: string\n          format: uri\n        avatar_url:\n          type: string\n          format: uri\n      required:\n        - id\n        - login\n        - gravatar_id\n        - url\n        - avatar_url\n    issue:\n      title: Issue\n      description: Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        url:\n          description: URL for the issue\n          example: https://api.github.com/repositories/42/issues/1\n          type: string\n          format: uri\n        repository_url:\n          type: string\n          format: uri\n        labels_url:\n          type: string\n        comments_url:\n          type: string\n          format: uri\n        events_url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n        number:\n          description: Number uniquely identifying the issue within its repository\n          example: 42\n          type: integer\n        state:\n          description: State of the issue; either 'open' or 'closed'\n          example: open\n          type: string\n        title:\n          description: Title of the issue\n          example: Widget creation fails in Safari on OS X 10.8\n          type: string\n        body:\n          description: Contents of the issue\n          example: It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?\n          type: string\n          nullable: true\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        labels:\n          description: Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository\n          example:\n            - bug\n            - registration\n          type: array\n          items:\n            oneOf:\n              - type: string\n              - type: object\n                properties:\n                  id:\n                    type: integer\n                    format: int64\n                  node_id:\n                    type: string\n                  url:\n                    type: string\n                    format: uri\n                  name:\n                    type: string\n                  description:\n                    type: string\n                    nullable: true\n                  color:\n                    type: string\n                    nullable: true\n                  default:\n                    type: boolean\n        assignee:\n          $ref: '#/components/schemas/nullable-simple-user'\n        assignees:\n          type: array\n          items:\n            $ref: '#/components/schemas/simple-user'\n          nullable: true\n        milestone:\n          $ref: '#/components/schemas/nullable-milestone'\n        locked:\n          type: boolean\n        active_lock_reason:\n          type: string\n          nullable: true\n        comments:\n          type: integer\n        pull_request:\n          type: object\n          properties:\n            merged_at:\n              type: string\n              format: date-time\n              nullable: true\n            diff_url:\n              type: string\n              format: uri\n              nullable: true\n            html_url:\n              type: string\n              format: uri\n              nullable: true\n            patch_url:\n              type: string\n              format: uri\n              nullable: true\n            url:\n              type: string\n              format: uri\n              nullable: true\n          required:\n            - diff_url\n            - html_url\n            - patch_url\n            - url\n        closed_at:\n          type: string\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        draft:\n          type: boolean\n        closed_by:\n          $ref: '#/components/schemas/nullable-simple-user'\n        body_html:\n          type: string\n        body_text:\n          type: string\n        timeline_url:\n          type: string\n          format: uri\n        repository:\n          $ref: '#/components/schemas/repository'\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - assignee\n        - closed_at\n        - comments\n        - comments_url\n        - events_url\n        - html_url\n        - id\n        - node_id\n        - labels\n        - labels_url\n        - milestone\n        - number\n        - repository_url\n        - state\n        - locked\n        - title\n        - url\n        - user\n        - author_association\n        - created_at\n        - updated_at\n    issue-comment:\n      title: Issue Comment\n      description: Comments provide a way for people to collaborate on an issue.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the issue comment\n          example: 42\n          type: integer\n        node_id:\n          type: string\n        url:\n          description: URL for the issue comment\n          example: https://api.github.com/repositories/42/issues/comments/1\n          type: string\n          format: uri\n        body:\n          description: Contents of the issue comment\n          example: What version of Safari were you using when you observed this bug?\n          type: string\n        body_text:\n          type: string\n        body_html:\n          type: string\n        html_url:\n          type: string\n          format: uri\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-04-14T16:00:49Z'\n        issue_url:\n          type: string\n          format: uri\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - id\n        - node_id\n        - html_url\n        - issue_url\n        - author_association\n        - user\n        - url\n        - created_at\n        - updated_at\n  parameters:\n    org:\n      name: org\n      in: path\n      required: true\n      schema:\n        type: string\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n  responses: {}\n  securitySchemes: {}\n  callbacks: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    orgs_events:\n      id: github.org_activity.orgs_events\n      name: orgs_events\n      title: Orgs_events\n      methods:\n        list_public_org_events:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1events/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/orgs_events/methods/list_public_org_events'\n        insert: []\n        update: []\n        delete: []\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - org_activity\n  description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"issue\": parse schema: property \"assignee\": parse schema: resolve \"#/components/schemas/nullable-simple-user\": find schema: resolve \"#/components/schemas/nullable-simple-user\": can't find value for \"components/schemas/nullable-simple-user\""
}