{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "hybrid_data_manager.yaml",
			"size": 0,
			"path": "providers/src/azure/v0.2.0/services/hybrid_data_manager.yaml",
			"byteSize": 82210,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://management.azure.com/\ninfo:\n  title: Hybrid Data Manager (Microsoft.HybridData)\n  description: Hybrid Data Manager\n  contact:\n    name: StackQL Studios\n    url: https://stackql.io/\n    email: info@stackql.io\n  version: 2022-08-29-stackql-generated\nsecurity:\n  - azure_auth:\n      - user_impersonation\ncomponents:\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  parameters:\n    apiVersionParameter:\n      name: api-version\n      in: query\n      description: The API Version\n      required: true\n      schema:\n        type: string\n    dataManagerNameParameter:\n      name: dataManagerName\n      in: path\n      description: The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        maxLength: 24\n        minLength: 3\n        pattern: ^[-\\w\\.]+$\n        type: string\n    resourceGroupNameParameter:\n      name: resourceGroupName\n      in: path\n      description: The Resource Group Name\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    subscriptionIdParameter:\n      name: subscriptionId\n      in: path\n      description: The Subscription Id\n      required: true\n      schema:\n        type: string\n  schemas:\n    AvailableProviderOperation:\n      description: Class represents provider operation\n      required:\n        - name\n      properties:\n        name:\n          description: Gets or Sets Name of the operations\n          type: string\n        display:\n          $ref: '#/components/schemas/AvailableProviderOperationDisplay'\n          description: \"Gets or sets Display information\\r\\nContains the localized display information for this particular operation/action\"\n        origin:\n          description: \"Gets or sets Origin\\r\\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\\r\\nDefault value is “user,system”\"\n          type: string\n      type: object\n    AvailableProviderOperationDisplay:\n      description: \"Contains the localized display information for this particular operation / action. \\r\\nThese value will be used by several clients for \\r\\n(1) custom role definitions for RBAC; \\r\\n(2) complex query filters for the event service; and (3) audit history / records for management operations.\"\n      type: object\n      properties:\n        provider:\n          description: \"Gets or sets Provider\\r\\nThe localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. \\r\\nIt should use Title Casing and begin with “Microsoft” for 1st party services.\"\n          type: string\n        resource:\n          description: \"Gets or sets Resource\\r\\nThe localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider. \\r\\nIt should use Title Casing – for examples, please refer to the “name” section.\"\n          type: string\n        operation:\n          description: \"Gets or sets Operation\\r\\nThe localized friendly name for the operation, as it should be shown to the user. \\r\\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies.\"\n          type: string\n        description:\n          description: \"Gets or sets Description\\r\\nThe localized friendly description for the operation, as it should be shown to the user. \\r\\nIt should be thorough, yet concise – it will be used in tool tips and detailed views.\"\n          type: string\n    AvailableProviderOperationProperties:\n      description: Class represents Properties in AvailableProviderOperations\n      type: object\n      properties: {}\n    AvailableProviderOperations:\n      description: Class for set of operations used for discovery of available provider operations.\n      type: object\n      properties:\n        value:\n          description: List of operations.\n          type: array\n          items:\n            $ref: '#/components/schemas/AvailableProviderOperation'\n        nextLink:\n          description: Link for the next set of operations.\n          type: string\n    CustomerSecret:\n      description: The pair of customer secret.\n      required:\n        - keyIdentifier\n        - keyValue\n        - algorithm\n      type: object\n      properties:\n        keyIdentifier:\n          description: The identifier to the data service input object which this secret corresponds to.\n          type: string\n        keyValue:\n          description: It contains the encrypted customer secret.\n          type: string\n        algorithm:\n          description: The encryption algorithm used to encrypt data.\n          enum:\n            - None\n            - RSA1_5\n            - RSA_OAEP\n            - PlainText\n          type: string\n          x-ms-enum:\n            name: SupportedAlgorithm\n            modelAsString: false\n    DataManager:\n      description: The DataManager resource.\n      properties:\n        id:\n          description: The Resource Id.\n          type: string\n          readOnly: true\n        name:\n          description: The Resource Name.\n          type: string\n          readOnly: true\n        type:\n          description: The Resource type.\n          type: string\n          readOnly: true\n        location:\n          description: \"The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East\\r\\nUS, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo\\r\\nregion is specified on update the request will succeed.\"\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n        tags:\n          description: \"The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\\r\\n(across resource groups).\"\n          type: object\n          additionalProperties:\n            type: string\n        sku:\n          $ref: '#/components/schemas/Sku'\n          description: The sku type.\n        etag:\n          description: Etag of the Resource.\n          type: string\n      type: object\n    DataManagerList:\n      description: DataManager resources Collection.\n      type: object\n      properties:\n        value:\n          description: List of data manager resources.\n          type: array\n          items:\n            $ref: '#/components/schemas/DataManager'\n        nextLink:\n          description: Link for the next set of data stores.\n          type: string\n    DataManagerUpdateParameter:\n      description: The DataManagerUpdateParameter.\n      type: object\n      properties:\n        sku:\n          $ref: '#/components/schemas/Sku'\n          description: The sku type.\n        tags:\n          description: \"The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\\r\\n(across resource groups).\"\n          type: object\n          additionalProperties:\n            type: string\n    DataService:\n      description: Data Service.\n      required:\n        - properties\n      properties:\n        name:\n          description: Name of the object.\n          type: string\n          readOnly: true\n        id:\n          description: Id of the object.\n          type: string\n          readOnly: true\n        type:\n          description: Type of the object.\n          type: string\n          readOnly: true\n        state:\n          description: State of the data service.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        supportedDataSinkTypes:\n          description: Supported data store types which can be used as a sink.\n          type: array\n          items:\n            type: string\n        supportedDataSourceTypes:\n          description: Supported data store types which can be used as a source.\n          type: array\n          items:\n            type: string\n      type: object\n    DataServiceList:\n      description: Data Service Collection.\n      type: object\n      properties:\n        value:\n          description: List of data services.\n          type: array\n          items:\n            $ref: '#/components/schemas/DataService'\n        nextLink:\n          description: Link for the next set of data services.\n          type: string\n    DataServiceProperties:\n      description: Data Service properties.\n      required:\n        - state\n      type: object\n      properties:\n        state:\n          description: State of the data service.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        supportedDataSinkTypes:\n          description: Supported data store types which can be used as a sink.\n          type: array\n          items:\n            type: string\n        supportedDataSourceTypes:\n          description: Supported data store types which can be used as a source.\n          type: array\n          items:\n            type: string\n    DataStore:\n      description: Data store.\n      required:\n        - properties\n      properties:\n        name:\n          description: Name of the object.\n          type: string\n          readOnly: true\n        id:\n          description: Id of the object.\n          type: string\n          readOnly: true\n        type:\n          description: Type of the object.\n          type: string\n          readOnly: true\n        repositoryId:\n          description: Arm Id for the manager resource to which the data source is associated. This is optional.\n          type: string\n        state:\n          description: State of the data source.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        extendedProperties:\n          description: A generic json used differently by each data source type.\n          type: object\n        dataStoreTypeId:\n          description: The arm id of the data store type.\n          type: string\n        customerSecrets:\n          description: List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerSecret'\n      type: object\n    DataStoreFilter:\n      description: Contains the information about the filters for the DataStore.\n      type: object\n      properties:\n        dataStoreTypeId:\n          description: The data store type id.\n          type: string\n    DataStoreList:\n      description: Data Store Collection.\n      type: object\n      properties:\n        value:\n          description: List of data stores.\n          type: array\n          items:\n            $ref: '#/components/schemas/DataStore'\n        nextLink:\n          description: Link for the next set of data stores.\n          type: string\n    DataStoreProperties:\n      description: Data Store for sources and sinks\n      required:\n        - state\n        - dataStoreTypeId\n      type: object\n      properties:\n        repositoryId:\n          description: Arm Id for the manager resource to which the data source is associated. This is optional.\n          type: string\n        state:\n          description: State of the data source.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        extendedProperties:\n          description: A generic json used differently by each data source type.\n          type: object\n        dataStoreTypeId:\n          description: The arm id of the data store type.\n          type: string\n        customerSecrets:\n          description: List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerSecret'\n    DataStoreType:\n      description: Data Store Type.\n      required:\n        - properties\n      properties:\n        name:\n          description: Name of the object.\n          type: string\n          readOnly: true\n        id:\n          description: Id of the object.\n          type: string\n          readOnly: true\n        type:\n          description: Type of the object.\n          type: string\n          readOnly: true\n        repositoryType:\n          description: Arm type for the manager resource to which the data source type is associated. This is optional.\n          type: string\n        state:\n          description: State of the data store type.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        supportedDataServicesAsSink:\n          description: Supported data services where it can be used as a sink.\n          type: array\n          items:\n            type: string\n        supportedDataServicesAsSource:\n          description: Supported data services where it can be used as a source.\n          type: array\n          items:\n            type: string\n      type: object\n    DataStoreTypeList:\n      description: Data Store Type Collection.\n      type: object\n      properties:\n        value:\n          description: List of DataStoreType.\n          type: array\n          items:\n            $ref: '#/components/schemas/DataStoreType'\n        nextLink:\n          description: Link for the next set of data store types.\n          type: string\n    DataStoreTypeProperties:\n      description: Data Store Type properties.\n      required:\n        - state\n      type: object\n      properties:\n        repositoryType:\n          description: Arm type for the manager resource to which the data source type is associated. This is optional.\n          type: string\n        state:\n          description: State of the data store type.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        supportedDataServicesAsSink:\n          description: Supported data services where it can be used as a sink.\n          type: array\n          items:\n            type: string\n        supportedDataServicesAsSource:\n          description: Supported data services where it can be used as a source.\n          type: array\n          items:\n            type: string\n    DmsBaseObject:\n      description: Base class for all objects under DataManager Service\n      type: object\n      properties:\n        name:\n          description: Name of the object.\n          type: string\n          readOnly: true\n        id:\n          description: Id of the object.\n          type: string\n          readOnly: true\n        type:\n          description: Type of the object.\n          type: string\n          readOnly: true\n    Error:\n      description: Top level error for the job.\n      required:\n        - code\n      type: object\n      properties:\n        code:\n          description: Error code that can be used to programmatically identify the error.\n          type: string\n        message:\n          description: Describes the error in detail and provides debugging information.\n          type: string\n    ErrorDetails:\n      description: Error Details\n      type: object\n      properties:\n        errorMessage:\n          description: Error message.\n          type: string\n        errorCode:\n          format: int32\n          description: Error code.\n          type: integer\n        recommendedAction:\n          description: Recommended action for the error.\n          type: string\n        exceptionMessage:\n          description: Contains the non localized exception message\n          type: string\n    Job:\n      description: Data service job.\n      required:\n        - status\n        - startTime\n        - properties\n      properties:\n        name:\n          description: Name of the object.\n          type: string\n          readOnly: true\n        id:\n          description: Id of the object.\n          type: string\n          readOnly: true\n        type:\n          description: Type of the object.\n          type: string\n          readOnly: true\n        isCancellable:\n          description: Describes whether the job is cancellable.\n          enum:\n            - NotCancellable\n            - Cancellable\n          type: string\n          x-ms-enum:\n            name: IsJobCancellable\n            modelAsString: false\n        bytesProcessed:\n          format: int64\n          description: Number of bytes processed by the job as of now.\n          type: integer\n        itemsProcessed:\n          format: int64\n          description: Number of items processed by the job as of now\n          type: integer\n        totalBytesToProcess:\n          format: int64\n          description: Number of bytes to be processed by the job in total.\n          type: integer\n        totalItemsToProcess:\n          format: int64\n          description: Number of items to be processed by the job in total\n          type: integer\n        details:\n          $ref: '#/components/schemas/JobDetails'\n          description: Details of a job run. This field will only be sent for expand details filter.\n        dataSourceName:\n          description: Name of the data source on which the job was triggered.\n          type: string\n        dataSinkName:\n          description: Name of the data sink on which the job was triggered.\n          type: string\n        status:\n          description: Status of the job.\n          enum:\n            - None\n            - InProgress\n            - Succeeded\n            - WaitingForAction\n            - Failed\n            - Cancelled\n            - Cancelling\n            - PartiallySucceeded\n          type: string\n          x-ms-enum:\n            name: JobStatus\n            modelAsString: false\n        startTime:\n          format: date-time\n          description: Time at which the job was started in UTC ISO 8601 format.\n          type: string\n        endTime:\n          format: date-time\n          description: Time at which the job ended in UTC ISO 8601 format.\n          type: string\n        error:\n          $ref: '#/components/schemas/Error'\n          description: Top level error for the job.\n      type: object\n    JobDefinition:\n      description: Job Definition.\n      required:\n        - properties\n      properties:\n        name:\n          description: Name of the object.\n          type: string\n          readOnly: true\n        id:\n          description: Id of the object.\n          type: string\n          readOnly: true\n        type:\n          description: Type of the object.\n          type: string\n          readOnly: true\n        dataSourceId:\n          description: Data Source Id associated to the job definition.\n          type: string\n        dataSinkId:\n          description: Data Sink Id associated to the job definition.\n          type: string\n        schedules:\n          description: Schedule for running the job definition\n          type: array\n          items:\n            $ref: '#/components/schemas/Schedule'\n        state:\n          description: State of the job definition.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        lastModifiedTime:\n          format: date-time\n          description: Last modified time of the job definition.\n          type: string\n        runLocation:\n          description: This is the preferred geo location for the job to run.\n          enum:\n            - none\n            - australiaeast\n            - australiasoutheast\n            - brazilsouth\n            - canadacentral\n            - canadaeast\n            - centralindia\n            - centralus\n            - eastasia\n            - eastus\n            - eastus2\n            - japaneast\n            - japanwest\n            - koreacentral\n            - koreasouth\n            - southeastasia\n            - southcentralus\n            - southindia\n            - northcentralus\n            - northeurope\n            - uksouth\n            - ukwest\n            - westcentralus\n            - westeurope\n            - westindia\n            - westus\n            - westus2\n          type: string\n          x-ms-enum:\n            name: RunLocation\n            modelAsString: false\n        userConfirmation:\n          description: Enum to detect if user confirmation is required. If not passed will default to NotRequired.\n          default: NotRequired\n          enum:\n            - NotRequired\n            - Required\n          type: string\n          x-ms-enum:\n            name: UserConfirmation\n            modelAsString: false\n        dataServiceInput:\n          description: A generic json used differently by each data service type.\n          type: object\n        customerSecrets:\n          description: List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerSecret'\n      type: object\n    JobDefinitionFilter:\n      description: Contains the supported job definition filters.\n      required:\n        - state\n      type: object\n      properties:\n        state:\n          description: The state of the job definition.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        dataSource:\n          description: The data source associated with the job definition\n          type: string\n        lastModified:\n          format: date-time\n          description: The last modified date time of the data source.\n          type: string\n    JobDefinitionList:\n      description: Job Definition Collection.\n      type: object\n      properties:\n        value:\n          description: List of job definitions.\n          type: array\n          items:\n            $ref: '#/components/schemas/JobDefinition'\n        nextLink:\n          description: Link for the next set of job definitions.\n          type: string\n    JobDefinitionProperties:\n      description: Job Definition\n      required:\n        - dataSourceId\n        - dataSinkId\n        - state\n      type: object\n      properties:\n        dataSourceId:\n          description: Data Source Id associated to the job definition.\n          type: string\n        dataSinkId:\n          description: Data Sink Id associated to the job definition.\n          type: string\n        schedules:\n          description: Schedule for running the job definition\n          type: array\n          items:\n            $ref: '#/components/schemas/Schedule'\n        state:\n          description: State of the job definition.\n          enum:\n            - Disabled\n            - Enabled\n            - Supported\n          type: string\n          x-ms-enum:\n            name: State\n            modelAsString: false\n        lastModifiedTime:\n          format: date-time\n          description: Last modified time of the job definition.\n          type: string\n        runLocation:\n          description: This is the preferred geo location for the job to run.\n          enum:\n            - none\n            - australiaeast\n            - australiasoutheast\n            - brazilsouth\n            - canadacentral\n            - canadaeast\n            - centralindia\n            - centralus\n            - eastasia\n            - eastus\n            - eastus2\n            - japaneast\n            - japanwest\n            - koreacentral\n            - koreasouth\n            - southeastasia\n            - southcentralus\n            - southindia\n            - northcentralus\n            - northeurope\n            - uksouth\n            - ukwest\n            - westcentralus\n            - westeurope\n            - westindia\n            - westus\n            - westus2\n          type: string\n          x-ms-enum:\n            name: RunLocation\n            modelAsString: false\n        userConfirmation:\n          description: Enum to detect if user confirmation is required. If not passed will default to NotRequired.\n          default: NotRequired\n          enum:\n            - NotRequired\n            - Required\n          type: string\n          x-ms-enum:\n            name: UserConfirmation\n            modelAsString: false\n        dataServiceInput:\n          description: A generic json used differently by each data service type.\n          type: object\n        customerSecrets:\n          description: List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerSecret'\n    JobDetails:\n      description: Job details.\n      type: object\n      properties:\n        jobStages:\n          description: List of stages that ran in the job\n          type: array\n          items:\n            $ref: '#/components/schemas/JobStages'\n        jobDefinition:\n          $ref: '#/components/schemas/JobDefinition'\n          description: JobDefinition at the time of the run\n        errorDetails:\n          description: Error details for failure. This is optional.\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorDetails'\n        itemDetailsLink:\n          description: Item Details Link to download files or see details\n          type: string\n    JobFilter:\n      description: Contains the information about the filters for the job.\n      required:\n        - status\n      type: object\n      properties:\n        status:\n          description: The status of the job.\n          enum:\n            - None\n            - InProgress\n            - Succeeded\n            - WaitingForAction\n            - Failed\n            - Cancelled\n            - Cancelling\n            - PartiallySucceeded\n          type: string\n          x-ms-enum:\n            name: JobStatus\n            modelAsString: false\n        startTime:\n          format: date-time\n          description: The start time of the job.\n          type: string\n    JobList:\n      description: Job Collection.\n      type: object\n      properties:\n        value:\n          description: List of jobs.\n          type: array\n          items:\n            $ref: '#/components/schemas/Job'\n        nextLink:\n          description: Link for the next set of jobs.\n          type: string\n    JobProperties:\n      description: Job Properties\n      required:\n        - isCancellable\n      type: object\n      properties:\n        isCancellable:\n          description: Describes whether the job is cancellable.\n          enum:\n            - NotCancellable\n            - Cancellable\n          type: string\n          x-ms-enum:\n            name: IsJobCancellable\n            modelAsString: false\n        bytesProcessed:\n          format: int64\n          description: Number of bytes processed by the job as of now.\n          type: integer\n        itemsProcessed:\n          format: int64\n          description: Number of items processed by the job as of now\n          type: integer\n        totalBytesToProcess:\n          format: int64\n          description: Number of bytes to be processed by the job in total.\n          type: integer\n        totalItemsToProcess:\n          format: int64\n          description: Number of items to be processed by the job in total\n          type: integer\n        details:\n          $ref: '#/components/schemas/JobDetails'\n          description: Details of a job run. This field will only be sent for expand details filter.\n        dataSourceName:\n          description: Name of the data source on which the job was triggered.\n          type: string\n        dataSinkName:\n          description: Name of the data sink on which the job was triggered.\n          type: string\n    JobStages:\n      description: Job stages.\n      required:\n        - stageStatus\n      type: object\n      properties:\n        stageName:\n          description: Name of the job stage.\n          type: string\n        stageStatus:\n          description: Status of the job stage.\n          enum:\n            - None\n            - InProgress\n            - Succeeded\n            - WaitingForAction\n            - Failed\n            - Cancelled\n            - Cancelling\n            - PartiallySucceeded\n          type: string\n          x-ms-enum:\n            name: JobStatus\n            modelAsString: false\n        jobStageDetails:\n          description: Job Stage Details\n          type: object\n        errorDetails:\n          description: Error details for the stage. This is optional\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorDetails'\n    Key:\n      description: Encryption Key.\n      required:\n        - keyModulus\n        - keyExponent\n        - encryptionChunkSizeInBytes\n      type: object\n      properties:\n        keyModulus:\n          description: Modulus of the encryption key.\n          type: string\n        keyExponent:\n          description: Exponent of the encryption key.\n          type: string\n        encryptionChunkSizeInBytes:\n          format: int32\n          description: 'The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt each chunk, append each encrypted chunk with : to mark the end of the chunk.'\n          type: integer\n    PublicKey:\n      description: Public key\n      required:\n        - properties\n      properties:\n        name:\n          description: Name of the object.\n          type: string\n          readOnly: true\n        id:\n          description: Id of the object.\n          type: string\n          readOnly: true\n        type:\n          description: Type of the object.\n          type: string\n          readOnly: true\n        dataServiceLevel1Key:\n          $ref: '#/components/schemas/Key'\n          description: Level one public key for encryption\n        dataServiceLevel2Key:\n          $ref: '#/components/schemas/Key'\n          description: Level two public key for encryption\n      type: object\n    PublicKeyList:\n      description: PublicKey Collection\n      type: object\n      properties:\n        value:\n          description: List of public keys.\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicKey'\n        nextLink:\n          description: Link for the next set of public keys.\n          type: string\n    PublicKeyProperties:\n      description: PublicKey Properties\n      required:\n        - dataServiceLevel1Key\n        - dataServiceLevel2Key\n      type: object\n      properties:\n        dataServiceLevel1Key:\n          $ref: '#/components/schemas/Key'\n          description: Level one public key for encryption\n        dataServiceLevel2Key:\n          $ref: '#/components/schemas/Key'\n          description: Level two public key for encryption\n    Resource:\n      description: Model of the Resource.\n      required:\n        - location\n      type: object\n      properties:\n        id:\n          description: The Resource Id.\n          type: string\n          readOnly: true\n        name:\n          description: The Resource Name.\n          type: string\n          readOnly: true\n        type:\n          description: The Resource type.\n          type: string\n          readOnly: true\n        location:\n          description: \"The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East\\r\\nUS, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo\\r\\nregion is specified on update the request will succeed.\"\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n        tags:\n          description: \"The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\\r\\n(across resource groups).\"\n          type: object\n          additionalProperties:\n            type: string\n        sku:\n          $ref: '#/components/schemas/Sku'\n          description: The sku type.\n      x-ms-azure-resource: true\n    RunParameters:\n      description: Run parameters for a job.\n      type: object\n      properties:\n        userConfirmation:\n          description: Enum to detect if user confirmation is required. If not passed will default to NotRequired.\n          default: NotRequired\n          enum:\n            - NotRequired\n            - Required\n          type: string\n          x-ms-enum:\n            name: UserConfirmation\n            modelAsString: false\n        dataServiceInput:\n          description: A generic json used differently by each data service type.\n          type: object\n        customerSecrets:\n          description: List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomerSecret'\n    Schedule:\n      description: Schedule for the job run.\n      type: object\n      properties:\n        name:\n          description: Name of the schedule.\n          type: string\n        policyList:\n          description: A list of repetition intervals in ISO 8601 format.\n          type: array\n          items:\n            type: string\n    Sku:\n      description: The sku type.\n      type: object\n      properties:\n        name:\n          description: The sku name. Required for data manager creation, optional for update.\n          type: string\n        tier:\n          description: The sku tier. This is based on the SKU name.\n          type: string\n  x-stackQL-resources:\n    operations:\n      id: azure.hybrid_data_manager.operations\n      name: operations\n      title: Operations\n      methods:\n        Operations_List:\n          operation:\n            $ref: '#/paths/~1providers~1Microsoft.HybridData~1operations~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'\n        insert: []\n        update: []\n        delete: []\n    data_managers:\n      id: azure.hybrid_data_manager.data_managers\n      name: data_managers\n      title: Data_managers\n      methods:\n        DataManagers_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridData~1dataManagers~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        DataManagers_ListByResourceGroup:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        DataManagers_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        DataManagers_Create:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1?api-version=2019-06-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        DataManagers_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1?api-version=2019-06-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        DataManagers_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1?api-version=2019-06-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/data_managers/methods/DataManagers_ListByResourceGroup'\n          - $ref: '#/components/x-stackQL-resources/data_managers/methods/DataManagers_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/data_managers/methods/DataManagers_Create'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/data_managers/methods/DataManagers_Delete'\n    data_services:\n      id: azure.hybrid_data_manager.data_services\n      name: data_services\n      title: Data_services\n      methods:\n        DataServices_ListByDataManager:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        DataServices_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/data_services/methods/DataServices_ListByDataManager'\n        insert: []\n        update: []\n        delete: []\n    job_definitions:\n      id: azure.hybrid_data_manager.job_definitions\n      name: job_definitions\n      title: Job_definitions\n      methods:\n        JobDefinitions_ListByDataService:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        JobDefinitions_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        JobDefinitions_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2019-06-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        JobDefinitions_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2019-06-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        JobDefinitions_Run:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1run~1?api-version=2019-06-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        JobDefinitions_ListByDataManager:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1jobDefinitions~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/JobDefinitions_ListByDataService'\n          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/JobDefinitions_ListByDataManager'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/JobDefinitions_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/JobDefinitions_Delete'\n    jobs:\n      id: azure.hybrid_data_manager.jobs\n      name: jobs\n      title: Jobs\n      methods:\n        Jobs_ListByJobDefinition:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1jobs~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Jobs_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1jobs~1{jobId}~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Jobs_Cancel:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1jobs~1{jobId}~1cancel~1?api-version=2019-06-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Jobs_Resume:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1jobs~1{jobId}~1resume~1?api-version=2019-06-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Jobs_ListByDataService:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobs~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Jobs_ListByDataManager:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1jobs~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/jobs/methods/Jobs_ListByJobDefinition'\n          - $ref: '#/components/x-stackQL-resources/jobs/methods/Jobs_ListByDataService'\n          - $ref: '#/components/x-stackQL-resources/jobs/methods/Jobs_ListByDataManager'\n        insert: []\n        update: []\n        delete: []\n    data_stores:\n      id: azure.hybrid_data_manager.data_stores\n      name: data_stores\n      title: Data_stores\n      methods:\n        DataStores_ListByDataManager:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStores~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        DataStores_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStores~1{dataStoreName}~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        DataStores_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStores~1{dataStoreName}~1?api-version=2019-06-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        DataStores_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStores~1{dataStoreName}~1?api-version=2019-06-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/data_stores/methods/DataStores_ListByDataManager'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/data_stores/methods/DataStores_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/data_stores/methods/DataStores_Delete'\n    data_store_types:\n      id: azure.hybrid_data_manager.data_store_types\n      name: data_store_types\n      title: Data_store_types\n      methods:\n        DataStoreTypes_ListByDataManager:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStoreTypes~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        DataStoreTypes_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStoreTypes~1{dataStoreTypeName}~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/data_store_types/methods/DataStoreTypes_ListByDataManager'\n        insert: []\n        update: []\n        delete: []\n    public_keys:\n      id: azure.hybrid_data_manager.public_keys\n      name: public_keys\n      title: Public_keys\n      methods:\n        PublicKeys_ListByDataManager:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1publicKeys~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        PublicKeys_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1publicKeys~1{publicKeyName}~1?api-version=2019-06-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/public_keys/methods/PublicKeys_ListByDataManager'\n        insert: []\n        update: []\n        delete: []\npaths:\n  /providers/Microsoft.HybridData/operations/?api-version=2019-06-01:\n    get:\n      tags:\n        - Operations\n      summary: The list of operations for Microsoft.HybridData provider.\n      operationId: Operations_List\n      parameters: []\n      responses:\n        '200':\n          description: The list of operations for Microsoft.HybridData provider.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AvailableProviderOperations'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: operations\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/providers/Microsoft.HybridData/dataManagers/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataManagers\n      description: Lists all the data manager resources available under the subscription.\n      operationId: DataManagers_List\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n      responses:\n        '200':\n          description: List of data manager resources available under the subscription.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataManagerList'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: data_managers\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataManagers\n      description: Lists all the data manager resources available under the given resource group.\n      operationId: DataManagers_ListByResourceGroup\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n      responses:\n        '200':\n          description: List of data manager resources by resource group.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataManagerList'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: data_managers\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataManagers\n      description: Gets information about the specified data manager resource.\n      operationId: DataManagers_Get\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: Data Manager Resource object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataManager'\n      x-stackQL-resource: data_managers\n      x-stackQL-verb: exec\n    put:\n      tags:\n        - DataManagers\n      description: \"Creates a new data manager resource with the specified parameters. Existing resources cannot be updated with this API\\r\\nand should instead be updated with the Update data manager resource API.\"\n      operationId: DataManagers_Create\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      requestBody:\n        description: Data manager resource details from request body.\n        required: true\n        x-ms-requestBody-name: dataManager\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataManager'\n      responses:\n        '200':\n          description: Completed request for Create. Returns the Data Manager Resource object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataManager'\n        '202':\n          description: Accepted request for Create.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: data_managers\n      x-stackQL-verb: insert\n    delete:\n      tags:\n        - DataManagers\n      description: Deletes a data manager resource in Microsoft Azure.\n      operationId: DataManagers_Delete\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '202':\n          description: Data Manager Resource deleted.\n        '204':\n          description: Data Manager Resource deleted.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: data_managers\n      x-stackQL-verb: delete\n    patch:\n      tags:\n        - DataManagers\n      description: Updates the properties of an existing data manager resource.\n      operationId: DataManagers_Update\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n        - name: If-Match\n          in: header\n          description: Defines the If-Match condition. The patch will be performed only if the ETag of the data manager resource on the server matches this value.\n          schema:\n            type: string\n      requestBody:\n        description: Data manager resource details from request body.\n        required: true\n        x-ms-requestBody-name: dataManagerUpdateParameter\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataManagerUpdateParameter'\n      responses:\n        '200':\n          description: Completed request for Updated. Returns the Data Manager Resource object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataManager'\n        '202':\n          description: Accepted request for Data Manager Update.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: data_managers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataServices\n      description: This method gets all the data services.\n      operationId: DataServices_ListByDataManager\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: The list of data services.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataServiceList'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: data_services\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataServices\n      description: Gets the data service that matches the data service name given.\n      operationId: DataServices_Get\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The name of the data service that is being queried.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: The data service that matches the name.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataService'\n      x-stackQL-resource: data_services\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/?api-version=2019-06-01:\n    get:\n      tags:\n        - JobDefinitions\n      description: This method gets all the job definitions of the given data service name.\n      operationId: JobDefinitions_ListByDataService\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The data service type of interest.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n        - name: $filter\n          in: query\n          description: OData Filter options\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The list of job definitions of the given data service type.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobDefinitionList'\n      x-ms-odata: '#/components/schemas/JobDefinitionFilter'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: job_definitions\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/?api-version=2019-06-01:\n    get:\n      tags:\n        - JobDefinitions\n      description: This method gets job definition object by name.\n      operationId: JobDefinitions_Get\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The data service name of the job definition\n          required: true\n          schema:\n            type: string\n        - name: jobDefinitionName\n          in: path\n          description: The job definition name that is being queried.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: The job definition that matches the criteria.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobDefinition'\n      x-stackQL-resource: job_definitions\n      x-stackQL-verb: exec\n    put:\n      tags:\n        - JobDefinitions\n      description: Creates or updates a job definition.\n      operationId: JobDefinitions_CreateOrUpdate\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The data service type of the job definition.\n          required: true\n          schema:\n            type: string\n        - name: jobDefinitionName\n          in: path\n          description: The job definition name to be created or updated.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      requestBody:\n        description: Job Definition object to be created or updated.\n        required: true\n        x-ms-requestBody-name: jobDefinition\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JobDefinition'\n      responses:\n        '200':\n          description: Completed request for Create or Update. Returns the JobDefinition object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobDefinition'\n        '202':\n          description: Accepted request for create/update.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: job_definitions\n      x-stackQL-verb: insert\n    delete:\n      tags:\n        - JobDefinitions\n      description: This method deletes the given job definition.\n      operationId: JobDefinitions_Delete\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The data service type of the job definition.\n          required: true\n          schema:\n            type: string\n        - name: jobDefinitionName\n          in: path\n          description: The job definition name to be deleted.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '202':\n          description: Accepted request for JobDefinition deletion.\n        '204':\n          description: Completed request for Delete JobDefinition.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: job_definitions\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/?api-version=2019-06-01:\n    get:\n      tags:\n        - Jobs\n      description: This method gets all the jobs of a given job definition.\n      operationId: Jobs_ListByJobDefinition\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The name of the data service of the job definition.\n          required: true\n          schema:\n            type: string\n        - name: jobDefinitionName\n          in: path\n          description: The name of the job definition for which jobs are needed.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n        - name: $filter\n          in: query\n          description: OData Filter options\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The list of jobs.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobList'\n      x-ms-odata: '#/components/schemas/JobFilter'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: jobs\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/?api-version=2019-06-01:\n    get:\n      tags:\n        - Jobs\n      description: This method gets a data manager job given the jobId.\n      operationId: Jobs_Get\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The name of the data service of the job definition.\n          required: true\n          schema:\n            type: string\n        - name: jobDefinitionName\n          in: path\n          description: The name of the job definition of the job.\n          required: true\n          schema:\n            type: string\n        - name: jobId\n          in: path\n          description: The job id of the job queried.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n        - name: $expand\n          in: query\n          description: $expand is supported on details parameter for job, which provides details on the job stages.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The job that matches the given criteria.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Job'\n      x-stackQL-resource: jobs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/cancel/?api-version=2019-06-01:\n    post:\n      tags:\n        - Jobs\n      description: Cancels the given job.\n      operationId: Jobs_Cancel\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The name of the data service of the job definition.\n          required: true\n          schema:\n            type: string\n        - name: jobDefinitionName\n          in: path\n          description: The name of the job definition of the job.\n          required: true\n          schema:\n            type: string\n        - name: jobId\n          in: path\n          description: The job id of the job queried.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '202':\n          description: Accepted job cancellation request.\n        '204':\n          description: Completed request for job Cancel.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: jobs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/resume/?api-version=2019-06-01:\n    post:\n      tags:\n        - Jobs\n      description: Resumes the given job.\n      operationId: Jobs_Resume\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The name of the data service of the job definition.\n          required: true\n          schema:\n            type: string\n        - name: jobDefinitionName\n          in: path\n          description: The name of the job definition of the job.\n          required: true\n          schema:\n            type: string\n        - name: jobId\n          in: path\n          description: The job id of the job queried.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '202':\n          description: Accepted job resume request.\n        '204':\n          description: Complete request for Job resume.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: jobs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/run/?api-version=2019-06-01:\n    post:\n      tags:\n        - JobDefinitions\n      description: This method runs a job instance of the given job definition.\n      operationId: JobDefinitions_Run\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The data service type of the job definition.\n          required: true\n          schema:\n            type: string\n        - name: jobDefinitionName\n          in: path\n          description: Name of the job definition.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      requestBody:\n        description: Run time parameters for the job definition.\n        required: true\n        x-ms-requestBody-name: runParameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RunParameters'\n      responses:\n        '202':\n          description: Job run accepted.\n        '204':\n          description: Completed request for Job run. Run has started.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: job_definitions\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobs/?api-version=2019-06-01:\n    get:\n      tags:\n        - Jobs\n      description: This method gets all the jobs of a data service type in a given resource.\n      operationId: Jobs_ListByDataService\n      parameters:\n        - name: dataServiceName\n          in: path\n          description: The name of the data service of interest.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n        - name: $filter\n          in: query\n          description: OData Filter options\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The list of jobs that match the service and resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobList'\n      x-ms-odata: '#/components/schemas/JobFilter'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: jobs\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataStores\n      description: Gets all the data stores/repositories in the given resource.\n      operationId: DataStores_ListByDataManager\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n        - name: $filter\n          in: query\n          description: OData Filter options\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The list of data stores/repositories in the given resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStoreList'\n      x-ms-odata: '#/components/schemas/DataStoreFilter'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: data_stores\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores/{dataStoreName}/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataStores\n      description: This method gets the data store/repository by name.\n      operationId: DataStores_Get\n      parameters:\n        - name: dataStoreName\n          in: path\n          description: The data store/repository name queried.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: The data store/repository which matches the name given.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStore'\n      x-stackQL-resource: data_stores\n      x-stackQL-verb: exec\n    put:\n      tags:\n        - DataStores\n      description: Creates or updates the data store/repository in the data manager.\n      operationId: DataStores_CreateOrUpdate\n      parameters:\n        - name: dataStoreName\n          in: path\n          description: The data store/repository name to be created or updated.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      requestBody:\n        description: The data store/repository object to be created or updated.\n        required: true\n        x-ms-requestBody-name: dataStore\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataStore'\n      responses:\n        '200':\n          description: Completed request for Create/Update. Returns the Data Store/Repository object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStore'\n        '202':\n          description: Accepted request for create/update.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: data_stores\n      x-stackQL-verb: insert\n    delete:\n      tags:\n        - DataStores\n      description: This method deletes the given data store/repository.\n      operationId: DataStores_Delete\n      parameters:\n        - name: dataStoreName\n          in: path\n          description: The data store/repository name to be deleted.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '202':\n          description: Accepted request for DataStore deletion.\n        '204':\n          description: Completed request for Delete Data Store.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: data_stores\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStoreTypes/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataStoreTypes\n      description: Gets all the data store/repository types that the resource supports.\n      operationId: DataStoreTypes_ListByDataManager\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: The list of data store types that are supported.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStoreTypeList'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: data_store_types\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStoreTypes/{dataStoreTypeName}/?api-version=2019-06-01:\n    get:\n      tags:\n        - DataStoreTypes\n      description: Gets the data store/repository type given its name.\n      operationId: DataStoreTypes_Get\n      parameters:\n        - name: dataStoreTypeName\n          in: path\n          description: The data store/repository type name for which details are needed.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: The data store/repository type.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStoreType'\n      x-stackQL-resource: data_store_types\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/jobDefinitions/?api-version=2019-06-01:\n    get:\n      tags:\n        - JobDefinitions\n      description: This method gets all the job definitions of the given data manager resource.\n      operationId: JobDefinitions_ListByDataManager\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n        - name: $filter\n          in: query\n          description: OData Filter options\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The list of job definitions in that resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobDefinitionList'\n      x-ms-odata: '#/components/schemas/JobDefinitionFilter'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: job_definitions\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/jobs/?api-version=2019-06-01:\n    get:\n      tags:\n        - Jobs\n      description: This method gets all the jobs at the data manager resource level.\n      operationId: Jobs_ListByDataManager\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n        - name: $filter\n          in: query\n          description: OData Filter options\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The list of jobs in the resource specified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobList'\n      x-ms-odata: '#/components/schemas/JobFilter'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: jobs\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/publicKeys/?api-version=2019-06-01:\n    get:\n      tags:\n        - PublicKeys\n      description: This method gets the list view of public keys, however it will only have one element.\n      operationId: PublicKeys_ListByDataManager\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: The list of public keys.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicKeyList'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: public_keys\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/publicKeys/{publicKeyName}/?api-version=2019-06-01:\n    get:\n      tags:\n        - PublicKeys\n      description: This method gets the public keys.\n      operationId: PublicKeys_Get\n      parameters:\n        - name: publicKeyName\n          in: path\n          description: Name of the public key.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/subscriptionIdParameter'\n        - $ref: '#/components/parameters/resourceGroupNameParameter'\n        - $ref: '#/components/parameters/dataManagerNameParameter'\n      responses:\n        '200':\n          description: The public keys.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicKey'\n      x-stackQL-resource: public_keys\n      x-stackQL-verb: exec\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@e5179141fc8f11e177fa608414aa3177e17c38b7/-/blob/providers/src/azure/v0.2.0/services/hybrid_data_manager.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/e5179141fc8f11e177fa608414aa3177e17c38b7/providers/src/azure/v0.2.0/services/hybrid_data_manager.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/providers/Microsoft.HybridData/operations/?api-version=2019-06-01\": get: operation \"Operations_List\": at providers/src/azure/v0.2.0/services/hybrid_data_manager.yaml:1347:7: parse path \"/providers/Microsoft.HybridData/operations/?api-version=2019-06-01\": path MUST NOT contain a query string"
}