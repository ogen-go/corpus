{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hiromaily/go-goa"
		},
		"file": {
			"name": "openapi3.yaml",
			"size": 0,
			"path": "internal/goa/service/resume/gen/http/openapi3.yaml",
			"byteSize": 39301,
			"content": "openapi: 3.0.3\ninfo:\n  title: resume API\n  description: go-goa API with goa framework\n  contact:\n    name: hiromaily\n    url: https://hiromaily.github.io/\n    email: hiromaily@gmail.com\n  license:\n    name: MIT\n    url: https://github.com/goadesign/goa/blob/master/LICENSE\n  version: \"1.0\"\nservers:\n- url: http://localhost:8080/api\npaths:\n  /*filepath:\n    get:\n      tags:\n      - public\n      summary: Download public/\n      operationId: public#/*filepath\n      responses:\n        \"200\":\n          description: File downloaded\n  /company:\n    get:\n      tags:\n      - hy_company\n      summary: companyList hy_company\n      description: List all companies\n      operationId: hy_company#companyList\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseDetailidCollection,\n                  #/components/schemas/CompanyResponseIDCollection or #/components/schemas/CompanyResponseIdnameCollection'\n                $ref: '#/components/schemas/CompanyCollection'\n              example:\n              - address: Shinagawa Tokyo\n                company_id: 10\n                country_name: Aut est qui.\n                created_at: \"2017-03-10T15:00:00Z\"\n                id: 10\n                is_hq: Quas laudantium laudantium.\n                name: Company\n                updated_at: \"2017-03-10T15:00:00Z\"\n              - address: Shinagawa Tokyo\n                company_id: 10\n                country_name: Aut est qui.\n                created_at: \"2017-03-10T15:00:00Z\"\n                id: 10\n                is_hq: Quas laudantium laudantium.\n                name: Company\n                updated_at: \"2017-03-10T15:00:00Z\"\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    post:\n      tags:\n      - hy_company\n      summary: createCompany hy_company\n      description: Create new company\n      operationId: hy_company#createCompany\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCompanyRequestBody'\n            example:\n              address: Shinagawa Tokyo\n              country_id: 110\n              name: Company\n      responses:\n        \"200\":\n          description: OK response.\n        \"201\":\n          description: Created response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /company/{company_id}:\n    delete:\n      tags:\n      - hy_company\n      summary: deleteCompany hy_company\n      description: Delete company\n      operationId: hy_company#deleteCompany\n      parameters:\n      - name: company_id\n        in: path\n        description: Company ID\n        required: true\n        schema:\n          type: integer\n          description: Company ID\n          example: 6763947644746848901\n          format: int64\n        example: 6134424320549833260\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    get:\n      tags:\n      - hy_company\n      summary: getCompanyGroup hy_company\n      description: Retrieve company with given company_id\n      operationId: hy_company#getCompanyGroup\n      parameters:\n      - name: company_id\n        in: path\n        description: Company ID\n        required: true\n        schema:\n          type: integer\n          description: Company ID\n          example: 7970605398215243334\n          format: int64\n        example: 8847253164913023580\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetCompanyGroupRequestBody'\n            example:\n              is_hq: \"1\"\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseDetailidCollection,\n                  #/components/schemas/CompanyResponseIDCollection or #/components/schemas/CompanyResponseIdnameCollection'\n                $ref: '#/components/schemas/CompanyCollection'\n              example:\n              - address: Shinagawa Tokyo\n                company_id: 10\n                country_name: Aut est qui.\n                created_at: \"2017-03-10T15:00:00Z\"\n                id: 10\n                is_hq: Quas laudantium laudantium.\n                name: Company\n                updated_at: \"2017-03-10T15:00:00Z\"\n              - address: Shinagawa Tokyo\n                company_id: 10\n                country_name: Aut est qui.\n                created_at: \"2017-03-10T15:00:00Z\"\n                id: 10\n                is_hq: Quas laudantium laudantium.\n                name: Company\n                updated_at: \"2017-03-10T15:00:00Z\"\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    put:\n      tags:\n      - hy_company\n      summary: updateCompany hy_company\n      description: Change company properties\n      operationId: hy_company#updateCompany\n      parameters:\n      - name: company_id\n        in: path\n        description: Company ID\n        required: true\n        schema:\n          type: integer\n          description: Company ID\n          example: 7084011176868396483\n          format: int64\n        example: 2757422062948952115\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCompanyRequestBody'\n            example:\n              address: Shinagawa Tokyo\n              country_id: 110\n              name: Company\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /company/branch:\n    post:\n      tags:\n      - hy_companybranch\n      summary: createCompanyBranch hy_companybranch\n      description: Create new company branch\n      operationId: hy_companybranch#createCompanyBranch\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCompanyBranchRequestBody'\n            example:\n              address: Shinagawa Tokyo\n              company_id: 6011793900613907701\n              country_id: 110\n      responses:\n        \"200\":\n          description: OK response.\n        \"201\":\n          description: Created response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /company/branch/{company_branch_id}:\n    delete:\n      tags:\n      - hy_companybranch\n      summary: deleteCompanyBranch hy_companybranch\n      description: Delete company branch\n      operationId: hy_companybranch#deleteCompanyBranch\n      parameters:\n      - name: company_branch_id\n        in: path\n        description: Company branch ID\n        required: true\n        schema:\n          type: integer\n          description: Company branch ID\n          example: 1562921229189618774\n          format: int64\n        example: 7946992711935194034\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    get:\n      tags:\n      - hy_companybranch\n      summary: getCompanyBranch hy_companybranch\n      description: Get company branch with given id\n      operationId: hy_companybranch#getCompanyBranch\n      parameters:\n      - name: company_branch_id\n        in: path\n        description: Company branch ID\n        required: true\n        schema:\n          type: integer\n          description: Company branch ID\n          example: 7383113135744317998\n          format: int64\n        example: 469196482056083390\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    put:\n      tags:\n      - hy_companybranch\n      summary: updateCompanyBranch hy_companybranch\n      description: Change company branch properties\n      operationId: hy_companybranch#updateCompanyBranch\n      parameters:\n      - name: company_branch_id\n        in: path\n        description: Company branch ID\n        required: true\n        schema:\n          type: integer\n          description: Company branch ID\n          example: 5210892081005084632\n          format: int64\n        example: 2656058846715516806\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCompanyBranchRequestBody'\n            example:\n              address: Shinagawa Tokyo\n              country_id: 110\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /health:\n    get:\n      tags:\n      - health\n      summary: health health\n      operationId: health#health\n      responses:\n        \"200\":\n          description: OK response.\n  /login:\n    post:\n      tags:\n      - auth\n      summary: login auth\n      operationId: auth#login\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequestBody'\n            example:\n              email: hy@gmail.com\n              password: xxxxxxxx\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorized'\n              example:\n                id: 10\n                token: token.string\n  /openapi.json:\n    get:\n      tags:\n      - public\n      summary: Download ../gen/http/openapi.json\n      operationId: public#/openapi.json\n      responses:\n        \"200\":\n          description: File downloaded\n  /swagger-ui/*filepath:\n    get:\n      tags:\n      - public\n      summary: Download resources/swagger-ui/dist/\n      operationId: public#/swagger-ui/*filepath\n      responses:\n        \"200\":\n          description: File downloaded\n  /tech:\n    get:\n      tags:\n      - hy_tech\n      summary: techList hy_tech\n      description: List all techs\n      operationId: hy_tech#techList\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                description: 'Response body may alternatively be #/components/schemas/TechResponseIDCollection'\n                $ref: '#/components/schemas/TechCollection'\n              example:\n              - created_at: \"2017-03-10T15:00:00Z\"\n                id: 10\n                name: Golang\n                updated_at: \"2017-03-10T15:00:00Z\"\n              - created_at: \"2017-03-10T15:00:00Z\"\n                id: 10\n                name: Golang\n                updated_at: \"2017-03-10T15:00:00Z\"\n              - created_at: \"2017-03-10T15:00:00Z\"\n                id: 10\n                name: Golang\n                updated_at: \"2017-03-10T15:00:00Z\"\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    post:\n      tags:\n      - hy_tech\n      summary: createTech hy_tech\n      description: Create new tech\n      operationId: hy_tech#createTech\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTechRequestBody'\n            example:\n              name: Golang\n      responses:\n        \"200\":\n          description: OK response.\n        \"201\":\n          description: Created response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /tech/{techID}:\n    delete:\n      tags:\n      - hy_tech\n      summary: deleteTech hy_tech\n      description: Delete tech\n      operationId: hy_tech#deleteTech\n      parameters:\n      - name: techID\n        in: path\n        description: Tech ID\n        required: true\n        schema:\n          type: integer\n          description: Tech ID\n          example: 6116355096526901817\n          format: int64\n        example: 4648861197157981088\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    get:\n      tags:\n      - hy_tech\n      summary: getTech hy_tech\n      description: get tech with given tech id\n      operationId: hy_tech#getTech\n      parameters:\n      - name: techID\n        in: path\n        description: Tech ID\n        required: true\n        schema:\n          type: integer\n          description: Tech ID\n          example: 8029950485983377782\n          format: int64\n        example: 4639867356943733610\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseDetailid,\n                  #/components/schemas/CompanyResponseID or #/components/schemas/CompanyResponseIdname'\n                $ref: '#/components/schemas/Company'\n              example:\n                address: Shinagawa Tokyo\n                company_id: 10\n                country_name: Ut rerum architecto numquam quis eveniet veritatis.\n                created_at: \"2017-03-10T15:00:00Z\"\n                id: 10\n                is_hq: Qui sint id hic quis.\n                name: Company\n                updated_at: \"2017-03-10T15:00:00Z\"\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    put:\n      tags:\n      - hy_tech\n      summary: updateTech hy_tech\n      description: Change tech properties\n      operationId: hy_tech#updateTech\n      parameters:\n      - name: techID\n        in: path\n        description: Tech ID\n        required: true\n        schema:\n          type: integer\n          description: Tech ID\n          example: 1967994081909438883\n          format: int64\n        example: 8605882206884086331\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTechRequestBody'\n            example:\n              name: Golang\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /user:\n    get:\n      tags:\n      - hy_user\n      summary: userList hy_user\n      description: List all users\n      operationId: hy_user#userList\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                description: 'Response body may alternatively be #/components/schemas/UserResponseIDCollection'\n                $ref: '#/components/schemas/UserCollection'\n              example:\n              - created_at: \"2017-03-10T15:00:00Z\"\n                email: hy@gmail.com\n                id: 10\n                password: xxxxxxxx\n                updated_at: \"2017-03-10T15:00:00Z\"\n                user_name: Hiroki\n              - created_at: \"2017-03-10T15:00:00Z\"\n                email: hy@gmail.com\n                id: 10\n                password: xxxxxxxx\n                updated_at: \"2017-03-10T15:00:00Z\"\n                user_name: Hiroki\n              - created_at: \"2017-03-10T15:00:00Z\"\n                email: hy@gmail.com\n                id: 10\n                password: xxxxxxxx\n                updated_at: \"2017-03-10T15:00:00Z\"\n                user_name: Hiroki\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    post:\n      tags:\n      - hy_user\n      summary: createUser hy_user\n      description: Create new user\n      operationId: hy_user#createUser\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserRequestBody'\n            example:\n              email: hy@gmail.com\n              password: xxxxxxxx\n              user_name: Hiroki\n              userID: 6881235799436279149\n      responses:\n        \"200\":\n          description: OK response.\n        \"201\":\n          description: Created response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /user/{userID}:\n    delete:\n      tags:\n      - hy_user\n      summary: deleteUser hy_user\n      description: Delete user\n      operationId: hy_user#deleteUser\n      parameters:\n      - name: userID\n        in: path\n        description: User ID\n        required: true\n        schema:\n          type: integer\n          description: User ID\n          example: 593430944792941212\n          minimum: 1\n        example: 7269573567001543154\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    get:\n      tags:\n      - hy_user\n      summary: getUser hy_user\n      description: get user with given user id\n      operationId: hy_user#getUser\n      parameters:\n      - name: userID\n        in: path\n        description: User ID\n        required: true\n        schema:\n          type: integer\n          description: User ID\n          example: 2919063293485881591\n          minimum: 1\n        example: 6333285541576646153\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                description: 'Response body may alternatively be #/components/schemas/UserResponseID'\n                $ref: '#/components/schemas/User'\n              example:\n                created_at: \"2017-03-10T15:00:00Z\"\n                email: hy@gmail.com\n                id: 10\n                password: xxxxxxxx\n                updated_at: \"2017-03-10T15:00:00Z\"\n                user_name: Hiroki\n      security:\n      - jwt_header_Authorization:\n        - api:access\n    put:\n      tags:\n      - hy_user\n      summary: updateUser hy_user\n      description: Change user properties\n      operationId: hy_user#updateUser\n      parameters:\n      - name: userID\n        in: path\n        description: User ID\n        required: true\n        schema:\n          type: integer\n          description: User ID\n          example: 4191435041156265864\n          minimum: 1\n        example: 6514641667117027534\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequestBody'\n            example:\n              email: hy@gmail.com\n              password: xxxxxxxx\n              user_name: Hiroki\n      responses:\n        \"200\":\n          description: OK response.\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /user/{userID}/disliketech:\n    get:\n      tags:\n      - hy_usertech\n      summary: getUserDisLikeTech hy_usertech\n      description: get user's dislike techs\n      operationId: hy_usertech#getUserDisLikeTech\n      parameters:\n      - name: userID\n        in: path\n        description: User ID\n        required: true\n        schema:\n          type: integer\n          description: User ID\n          example: 5854107702879996899\n          minimum: 1\n        example: 7230230423308254101\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                description: 'Response body may alternatively be #/components/schemas/UsertechResponseTechCollection'\n                $ref: '#/components/schemas/UsertechCollection'\n              example:\n              - id: 10\n                tech_name: Golang\n              - id: 10\n                tech_name: Golang\n              - id: 10\n                tech_name: Golang\n              - id: 10\n                tech_name: Golang\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /user/{userID}/liketech:\n    get:\n      tags:\n      - hy_usertech\n      summary: getUserLikeTech hy_usertech\n      description: get user's favorite techs\n      operationId: hy_usertech#getUserLikeTech\n      parameters:\n      - name: userID\n        in: path\n        description: User ID\n        required: true\n        schema:\n          type: integer\n          description: User ID\n          example: 6935787000632153390\n          minimum: 1\n        example: 1366824251425323\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                description: 'Response body may alternatively be #/components/schemas/UsertechResponseTechCollection'\n                $ref: '#/components/schemas/UsertechCollection'\n              example:\n              - id: 10\n                tech_name: Golang\n              - id: 10\n                tech_name: Golang\n              - id: 10\n                tech_name: Golang\n              - id: 10\n                tech_name: Golang\n      security:\n      - jwt_header_Authorization:\n        - api:access\n  /user/{userID}/workhistory:\n    get:\n      tags:\n      - hy_userWorkHistory\n      summary: getUserWorkHistory hy_userWorkHistory\n      description: get user's work history\n      operationId: hy_userWorkHistory#getUserWorkHistory\n      parameters:\n      - name: userID\n        in: path\n        description: User ID\n        required: true\n        schema:\n          type: integer\n          description: User ID\n          example: 6592695931303571731\n          minimum: 1\n        example: 8958573997563044880\n      responses:\n        \"200\":\n          description: OK response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserworkhistoryCollection'\n              example:\n              - company: Company\n                country: nl\n                description: '[\"Developed resume site for job seeking.\"]'\n                techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\",\n                  \"Travis-CI\"]'\n                term: Jul 2017 - Aug 2017\n                title: Developer\n              - company: Company\n                country: nl\n                description: '[\"Developed resume site for job seeking.\"]'\n                techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\",\n                  \"Travis-CI\"]'\n                term: Jul 2017 - Aug 2017\n                title: Developer\n      security:\n      - jwt_header_Authorization:\n        - api:access\ncomponents:\n  schemas:\n    Authorized:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n        token:\n          type: string\n          description: JWT token\n          example: token.string\n      example:\n        id: 10\n        token: token.string\n      required:\n      - token\n      - id\n    Company:\n      type: object\n      properties:\n        address:\n          type: string\n          description: Company Address\n          example: Shinagawa Tokyo\n          minLength: 2\n          maxLength: 80\n        company_id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n        country_name:\n          type: string\n          example: Repudiandae animi.\n        created_at:\n          type: string\n          description: Datetime\n          example: \"2017-03-10T15:00:00Z\"\n          format: date-time\n        id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n        is_hq:\n          type: string\n          example: Corporis voluptatum.\n        name:\n          type: string\n          description: Company name\n          example: Company\n          minLength: 2\n          maxLength: 40\n        updated_at:\n          type: string\n          description: Datetime\n          example: \"2017-03-10T15:00:00Z\"\n          format: date-time\n      description: A company information\n      example:\n        address: Shinagawa Tokyo\n        company_id: 10\n        country_name: Nobis fuga totam quae assumenda ea nemo.\n        created_at: \"2017-03-10T15:00:00Z\"\n        id: 10\n        is_hq: Et corrupti rerum et cumque.\n        name: Company\n        updated_at: \"2017-03-10T15:00:00Z\"\n      required:\n      - name\n      - address\n    CompanyCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/Company'\n      example:\n      - address: Shinagawa Tokyo\n        company_id: 10\n        country_name: Aut est qui.\n        created_at: \"2017-03-10T15:00:00Z\"\n        id: 10\n        is_hq: Quas laudantium laudantium.\n        name: Company\n        updated_at: \"2017-03-10T15:00:00Z\"\n      - address: Shinagawa Tokyo\n        company_id: 10\n        country_name: Aut est qui.\n        created_at: \"2017-03-10T15:00:00Z\"\n        id: 10\n        is_hq: Quas laudantium laudantium.\n        name: Company\n        updated_at: \"2017-03-10T15:00:00Z\"\n    CompanyResponseDetailid:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n      description: A company information (detailid view)\n      example:\n        id: 10\n    CompanyResponseDetailidCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/CompanyResponseDetailid'\n      description: CompanyListResponseBody is the result type for an array of CompanyResponse\n        (detailid view)\n      example:\n      - id: 10\n      - id: 10\n      - id: 10\n      - id: 10\n    CompanyResponseID:\n      type: object\n      properties:\n        company_id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n      description: A company information (id view)\n      example:\n        company_id: 10\n    CompanyResponseIDCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/CompanyResponseID'\n      description: CompanyListResponseBody is the result type for an array of CompanyResponse\n        (id view)\n      example:\n      - company_id: 10\n      - company_id: 10\n      - company_id: 10\n      - company_id: 10\n    CompanyResponseIdname:\n      type: object\n      properties:\n        company_id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n        name:\n          type: string\n          description: Company name\n          example: Company\n          minLength: 2\n          maxLength: 40\n      description: A company information (idname view)\n      example:\n        company_id: 10\n        name: Company\n      required:\n      - name\n    CompanyResponseIdnameCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/CompanyResponseIdname'\n      description: CompanyListResponseBody is the result type for an array of CompanyResponse\n        (idname view)\n      example:\n      - company_id: 10\n        name: Company\n      - company_id: 10\n        name: Company\n    CreateCompanyBranchRequestBody:\n      type: object\n      properties:\n        address:\n          type: string\n          description: Company Address\n          example: Shinagawa Tokyo\n          minLength: 2\n          maxLength: 80\n        company_id:\n          type: integer\n          description: Company ID\n          example: 8141190378156703523\n          format: int64\n        country_id:\n          type: integer\n          description: Country ID\n          example: 110\n          minimum: 1\n          maximum: 999\n      example:\n        address: Shinagawa Tokyo\n        company_id: 6043875545815660442\n        country_id: 110\n      required:\n      - country_id\n      - address\n    CreateCompanyRequestBody:\n      type: object\n      properties:\n        address:\n          type: string\n          description: Company Address\n          example: Shinagawa Tokyo\n          minLength: 2\n          maxLength: 80\n        country_id:\n          type: integer\n          description: Country ID\n          example: 110\n          minimum: 1\n          maximum: 999\n        name:\n          type: string\n          description: Company name\n          example: Company\n          minLength: 2\n          maxLength: 40\n      example:\n        address: Shinagawa Tokyo\n        country_id: 110\n        name: Company\n      required:\n      - name\n      - country_id\n      - address\n    CreateTechRequestBody:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Tech name\n          example: Golang\n          minLength: 1\n          maxLength: 40\n      example:\n        name: Golang\n      required:\n      - name\n    CreateUserRequestBody:\n      type: object\n      properties:\n        email:\n          type: string\n          description: E-mail of user\n          example: hy@gmail.com\n          format: email\n        password:\n          type: string\n          description: Password\n          example: xxxxxxxx\n          minLength: 8\n          maxLength: 20\n        user_name:\n          type: string\n          description: User name\n          example: Hiroki\n          minLength: 2\n          maxLength: 20\n        userID:\n          type: integer\n          description: User ID\n          example: 6135738360653216341\n          minimum: 1\n      example:\n        email: hy@gmail.com\n        password: xxxxxxxx\n        user_name: Hiroki\n        userID: 241664589225917859\n      required:\n      - user_name\n      - email\n      - password\n    GetCompanyGroupRequestBody:\n      type: object\n      properties:\n        is_hq:\n          type: string\n          description: Head Quarters flag\n          example: \"1\"\n          enum:\n          - \"1\"\n          - \"0\"\n      example:\n        is_hq: \"0\"\n    LoginRequestBody:\n      type: object\n      properties:\n        email:\n          type: string\n          description: E-mail of user\n          example: hy@gmail.com\n          format: email\n        password:\n          type: string\n          description: Password\n          example: xxxxxxxx\n          minLength: 8\n          maxLength: 20\n      example:\n        email: hy@gmail.com\n        password: xxxxxxxx\n      required:\n      - email\n      - password\n    Tech:\n      type: object\n      properties:\n        created_at:\n          type: string\n          description: Datetime\n          example: \"2017-03-10T15:00:00Z\"\n          format: date-time\n        id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n        name:\n          type: string\n          description: Tech name\n          example: Golang\n          minLength: 1\n          maxLength: 40\n        updated_at:\n          type: string\n          description: Datetime\n          example: \"2017-03-10T15:00:00Z\"\n          format: date-time\n      description: A tech information\n      example:\n        created_at: \"2017-03-10T15:00:00Z\"\n        id: 10\n        name: Golang\n        updated_at: \"2017-03-10T15:00:00Z\"\n      required:\n      - name\n    TechCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tech'\n      example:\n      - created_at: \"2017-03-10T15:00:00Z\"\n        id: 10\n        name: Golang\n        updated_at: \"2017-03-10T15:00:00Z\"\n      - created_at: \"2017-03-10T15:00:00Z\"\n        id: 10\n        name: Golang\n        updated_at: \"2017-03-10T15:00:00Z\"\n      - created_at: \"2017-03-10T15:00:00Z\"\n        id: 10\n        name: Golang\n        updated_at: \"2017-03-10T15:00:00Z\"\n      - created_at: \"2017-03-10T15:00:00Z\"\n        id: 10\n        name: Golang\n        updated_at: \"2017-03-10T15:00:00Z\"\n    TechResponseID:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n      description: A tech information (id view)\n      example:\n        id: 10\n    TechResponseIDCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/TechResponseID'\n      description: TechListResponseBody is the result type for an array of TechResponse\n        (id view)\n      example:\n      - id: 10\n      - id: 10\n      - id: 10\n      - id: 10\n    UpdateCompanyBranchRequestBody:\n      type: object\n      properties:\n        address:\n          type: string\n          description: Company Address\n          example: Shinagawa Tokyo\n          minLength: 2\n          maxLength: 80\n        country_id:\n          type: integer\n          description: Country ID\n          example: 110\n          minimum: 1\n          maximum: 999\n      example:\n        address: Shinagawa Tokyo\n        country_id: 110\n      required:\n      - country_id\n      - address\n    UpdateUserRequestBody:\n      type: object\n      properties:\n        email:\n          type: string\n          description: E-mail of user\n          example: hy@gmail.com\n          format: email\n        password:\n          type: string\n          description: Password\n          example: xxxxxxxx\n          minLength: 8\n          maxLength: 20\n        user_name:\n          type: string\n          description: User name\n          example: Hiroki\n          minLength: 2\n          maxLength: 20\n      example:\n        email: hy@gmail.com\n        password: xxxxxxxx\n        user_name: Hiroki\n      required:\n      - user_name\n      - email\n      - password\n    User:\n      type: object\n      properties:\n        created_at:\n          type: string\n          description: Datetime\n          example: \"2017-03-10T15:00:00Z\"\n          format: date-time\n        email:\n          type: string\n          description: E-mail of user\n          example: hy@gmail.com\n          format: email\n        id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n        password:\n          type: string\n          description: Password\n          example: xxxxxxxx\n          minLength: 8\n          maxLength: 20\n        updated_at:\n          type: string\n          description: Datetime\n          example: \"2017-03-10T15:00:00Z\"\n          format: date-time\n        user_name:\n          type: string\n          description: User name\n          example: Hiroki\n          minLength: 2\n          maxLength: 20\n      description: A user information\n      example:\n        created_at: \"2017-03-10T15:00:00Z\"\n        email: hy@gmail.com\n        id: 10\n        password: xxxxxxxx\n        updated_at: \"2017-03-10T15:00:00Z\"\n        user_name: Hiroki\n      required:\n      - user_name\n      - email\n      - password\n    UserCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/User'\n      example:\n      - created_at: \"2017-03-10T15:00:00Z\"\n        email: hy@gmail.com\n        id: 10\n        password: xxxxxxxx\n        updated_at: \"2017-03-10T15:00:00Z\"\n        user_name: Hiroki\n      - created_at: \"2017-03-10T15:00:00Z\"\n        email: hy@gmail.com\n        id: 10\n        password: xxxxxxxx\n        updated_at: \"2017-03-10T15:00:00Z\"\n        user_name: Hiroki\n      - created_at: \"2017-03-10T15:00:00Z\"\n        email: hy@gmail.com\n        id: 10\n        password: xxxxxxxx\n        updated_at: \"2017-03-10T15:00:00Z\"\n        user_name: Hiroki\n      - created_at: \"2017-03-10T15:00:00Z\"\n        email: hy@gmail.com\n        id: 10\n        password: xxxxxxxx\n        updated_at: \"2017-03-10T15:00:00Z\"\n        user_name: Hiroki\n    UserResponseID:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n      description: A user information (id view)\n      example:\n        id: 10\n    UserResponseIDCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/UserResponseID'\n      description: UserListResponseBody is the result type for an array of UserResponse\n        (id view)\n      example:\n      - id: 10\n      - id: 10\n      - id: 10\n      - id: 10\n    Usertech:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID\n          example: 10\n          minimum: 1\n        tech_name:\n          type: string\n          description: Tech name\n          example: Golang\n          minLength: 1\n          maxLength: 40\n      description: A user information\n      example:\n        id: 10\n        tech_name: Golang\n      required:\n      - tech_name\n    UsertechCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/Usertech'\n      example:\n      - id: 10\n        tech_name: Golang\n      - id: 10\n        tech_name: Golang\n      - id: 10\n        tech_name: Golang\n      - id: 10\n        tech_name: Golang\n    UsertechResponseTech:\n      type: object\n      properties:\n        tech_name:\n          type: string\n          description: Tech name\n          example: Golang\n          minLength: 1\n          maxLength: 40\n      description: A user information (tech view)\n      example:\n        tech_name: Golang\n      required:\n      - tech_name\n    UsertechResponseTechCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/UsertechResponseTech'\n      description: GetUserLikeTechResponseBody is the result type for an array of\n        UsertechResponse (tech view)\n      example:\n      - tech_name: Golang\n      - tech_name: Golang\n      - tech_name: Golang\n      - tech_name: Golang\n    Userworkhistory:\n      type: object\n      properties:\n        company:\n          type: string\n          description: Company name\n          example: Company\n          minLength: 2\n          maxLength: 40\n        country:\n          type: string\n          description: Country code\n          example: nl\n          minLength: 2\n          maxLength: 2\n        description:\n          type: string\n          description: job description\n          example: '[\"Developed resume site for job seeking.\"]'\n          format: binary\n        techs:\n          type: string\n          description: used techs\n          example: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\",\n            \"Travis-CI\"]'\n          format: binary\n        term:\n          type: string\n          description: worked period\n          example: Jul 2017 - Aug 2017\n          minLength: 10\n          maxLength: 20\n        title:\n          type: string\n          description: Job Title\n          example: Developer\n          minLength: 2\n          maxLength: 40\n      description: A user information\n      example:\n        company: Company\n        country: nl\n        description: '[\"Developed resume site for job seeking.\"]'\n        techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n        term: Jul 2017 - Aug 2017\n        title: Developer\n      required:\n      - title\n      - company\n      - country\n    UserworkhistoryCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/Userworkhistory'\n      example:\n      - company: Company\n        country: nl\n        description: '[\"Developed resume site for job seeking.\"]'\n        techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n        term: Jul 2017 - Aug 2017\n        title: Developer\n      - company: Company\n        country: nl\n        description: '[\"Developed resume site for job seeking.\"]'\n        techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n        term: Jul 2017 - Aug 2017\n        title: Developer\n  securitySchemes:\n    jwt_header_Authorization:\n      type: http\n      scheme: bearer\n",
			"canonicalURL": "/github.com/hiromaily/go-goa@4bbd3f506c46315a068416a0833ec56b1aefd0c8/-/blob/internal/goa/service/resume/gen/http/openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hiromaily/go-goa/blob/4bbd3f506c46315a068416a0833ec56b1aefd0c8/internal/goa/service/resume/gen/http/openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/user/{userID}/workhistory\": get: operation \"hy_userWorkHistory#getUserWorkHistory\": security: at 1:30273: list of scopes MUST be empty for \"type\" \"http\""
}