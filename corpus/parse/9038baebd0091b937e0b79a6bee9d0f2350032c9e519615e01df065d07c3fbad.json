{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-core"
		},
		"file": {
			"name": "petstore-3.0-v2_withoutModels.json",
			"size": 0,
			"path": "modules/swagger-core/src/test/resources/specFiles/petstore-3.0-v2_withoutModels.json",
			"byteSize": 4049,
			"content": "{\n    \"openapi\": \"3.0.1\",\n    \"paths\": {\n        \"/pet/{petId}\": {\n            \"get\": {\n                \"summary\": \"Find pet by ID\",\n                \"description\": \"Returns a pet when 0 \u003c ID \u003c= 10.  ID \u003e 10 or nonintegers will simulate API error conditions\",\n                \"operationId\": \"getPetById\",\n                \"parameters\": [\n                    {\n                        \"name\": \"petId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of pet that needs to be fetched\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"Pet not found\"\n                    }\n                }\n            }\n        },\n        \"/pet\": {\n            \"put\": {\n                \"summary\": \"Update an existing pet\",\n                \"operationId\": \"updatePet\",\n                \"parameters\": [\n                    {\n                        \"name\": \"petId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of pet that needs to be fetched\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"Pet not found\"\n                    },\n                    \"405\": {\n                        \"description\": \"Validation exception\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Add a new pet to the store\",\n                \"operationId\": \"addPet\",\n                \"parameters\": [\n                    {\n                        \"name\": \"petId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of pet that needs to be fetched\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"405\": {\n                        \"description\": \"Invalid input\"\n                    }\n                }\n            }\n        },\n        \"/pet/findByStatus\": {\n            \"get\": {\n                \"summary\": \"Finds Pets by status\",\n                \"description\": \"Multiple status values can be provided with comma separated strings\",\n                \"operationId\": \"findPetsByStatus\",\n                \"parameters\": [\n                    {\n                        \"name\": \"status\",\n                        \"in\": \"query\",\n                        \"description\": \"Status values that need to be considered for filter\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"skip\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid status value\"\n                    }\n                }\n            }\n        },\n        \"/pet/findByTags\": {\n            \"get\": {\n                \"summary\": \"Finds Pets by tags\",\n                \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n                \"operationId\": \"findPetsByTags\",\n                \"parameters\": [\n                    {\n                        \"name\": \"tags\",\n                        \"in\": \"query\",\n                        \"description\": \"Tags to filter by\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid tag value\"\n                    }\n                }\n            }\n        }\n    }\n}\n",
			"canonicalURL": "/github.com/swagger-api/swagger-core@d8e3eb10f1efb7d4ff60282d82d08939c7eff714/-/blob/modules/swagger-core/src/test/resources/specFiles/petstore-3.0-v2_withoutModels.json",
			"externalURLs": [
				{
					"url": "https://github.com/swagger-api/swagger-core/blob/d8e3eb10f1efb7d4ff60282d82d08939c7eff714/modules/swagger-core/src/test/resources/specFiles/petstore-3.0-v2_withoutModels.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/pet\": put: operation \"updatePet\": parameters: parse parameter \"petId\": at 32:21: parameter MUST contain either a schema property, or a content property"
}