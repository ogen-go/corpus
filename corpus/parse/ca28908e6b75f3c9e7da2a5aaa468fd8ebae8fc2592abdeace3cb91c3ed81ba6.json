{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/citizenos/citizenos-api"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "swagger.json",
			"byteSize": 220539,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.1\",\n    \"description\": \"CitizenOS API endpoints and descriptions\",\n    \"title\": \"CitizenOS API\",\n    \"termsOfService\": \"https://app.citizenos.com/en/topics/7abdd244-d45b-40d3-997c-a6290d4e972c\",\n    \"contact\": {\n      \"email\": \"info@citizenos.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"CitizenOS\",\n      \"description\": \"Everything about CitizenOS API\"\n    },\n    {\n      \"name\": \"auth\",\n      \"description\": \"User authorization endpoints\"\n    },\n    {\n      \"name\": \"topic\",\n      \"description\": \"Topic endpoints\"\n    },\n    {\n      \"name\": \"topicMembers\",\n      \"description\": \"Topic Members endpoints\"\n    },\n    {\n      \"name\": \"attachments\",\n      \"description\": \"Topic Attachments endpoints\"\n    },\n    {\n      \"name\": \"comments\",\n      \"description\": \"Topic Comments endpoints\"\n    },\n    {\n      \"name\": \"mentions\",\n      \"description\": \"Topic Mentions endpoints\"\n    },\n    {\n      \"name\": \"vote\",\n      \"description\": \"Topic Votes endpoints\"\n    },\n    {\n      \"name\": \"events\",\n      \"description\": \"Topic Events endpoints\"\n    },\n    {\n      \"name\": \"pinned\",\n      \"description\": \"Pinned endpoints\"\n    },\n    {\n      \"name\": \"activities\",\n      \"description\": \"Activities endpoints\"\n    },\n    {\n      \"name\": \"groups\",\n      \"description\": \"Groups endpoints\"\n    },\n    {\n      \"name\": \"search\",\n      \"description\": \"search endpoints\"\n    },\n    {\n      \"name\": \"partners\",\n      \"description\": \"partners endpoints\"\n    },\n    {\n      \"name\": \"users\",\n      \"description\": \"users endpoints\"\n    }\n  ],\n  \"paths\": {\n    \"/api/auth/signup\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Create new user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"example\": \"user@gmail.com\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"example\": \"anything secure\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"John Smith\"\n                  },\n                  \"company\": {\n                    \"type\": \"string\",\n                    \"example\": \"CitizenOS\"\n                  },\n                  \"language\": {\n                    \"type\": \"string\",\n                    \"example\": \"en\"\n                  },\n                  \"redirectSuccess\": {\n                    \"type\": \"string\",\n                    \"example\": \"https://mysite.com/success\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Email address allready in use\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 40001\n                        }\n                      }\n                    },\n                    \"errors\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"email\": {\n                          \"type\": \"string\",\n                          \"example\": \"The email address is already in use.\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"User login\",\n        \"description\": \"User login endpoint\",\n        \"operationId\": \"loginUser\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"example\": \"user@gmail.com\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"example\": \"anything secure\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User loged in successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Email address allready in use\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 40000\n                        }\n                      }\n                    },\n                    \"errors\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"example\": \"Invalid email\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/auth/logout\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"User logout\",\n        \"description\": \"User logout endpoint\",\n        \"operationId\": \"logoutUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User logged out successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/auth/verify/{code}\": {\n      \"get\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Verify user\",\n        \"description\": \"Verify user by verification code sent to email\",\n        \"operationId\": \"verifyUser\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"code\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"verification code sent to email\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"token\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"verification token that contains redirect success path\"\n          }\n        ],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"Redirect to URI set in token, also authorized cookie is set containing user id\"\n          }\n        }\n      }\n    },\n    \"/api/auth/password\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Create new user password\",\n        \"description\": \"Create new user password\",\n        \"operationId\": \"renewPasswordUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"currentPassword\": {\n                    \"type\": \"string\",\n                    \"example\": \"password1234\"\n                  },\n                  \"newPassword\": {\n                    \"type\": \"string\",\n                    \"example\": \"Password must be at least 6 character long, containing at least 1 digit, 1 lower and upper case character.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New password saved successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Email address allready in use\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 40000\n                        }\n                      }\n                    },\n                    \"errors\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"example\": \"Invalid email or new password.\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/auth/password/reset/send\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Request password reset\",\n        \"description\": \"Request password reset\",\n        \"operationId\": \"requestPasswordResetUser\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"example\": \"john.smith@gmail.com\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Password recovery request sent successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"example\": \"Success! Please check your email :email to complete your password recovery.\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Email address allready in use\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 40000\n                        }\n                      }\n                    },\n                    \"errors\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"example\": \"Invalid email\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/auth/password/reset\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Reset password\",\n        \"description\": \"Reset password\",\n        \"operationId\": \"passwordReset\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"example\": \"john.smith@gmail.com\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"example\": \"Password must be at least 6 character long, containing at least 1 digit, 1 lower and upper case character.\"\n                  },\n                  \"passwordResetCode\": {\n                    \"type\": \"string\",\n                    \"example\": \"Reset code sent on email\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Password recovery request sent successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Email address allready in use\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 40000\n                        }\n                      }\n                    },\n                    \"errors\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"email\": {\n                          \"type\": \"string\",\n                          \"example\": \"Invalid email, password or password reset code.\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/auth/status\": {\n      \"get\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Request password reset\",\n        \"description\": \"Request password reset\",\n        \"operationId\": \"authStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Password recovery request sent successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics\": {\n      \"post\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Create new topic\",\n        \"description\": \"Logged in user can create a new topic\",\n        \"operationId\": \"createTopic\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"visibility\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"public\",\n                      \"private\"\n                    ],\n                    \"default\": \"private\"\n                  },\n                  \"categories\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    },\n                    \"default\": []\n                  },\n                  \"hashtag\": {\n                    \"type\": \"string\",\n                    \"example\": \"banana\",\n                    \"nullable\": true\n                  },\n                  \"endsAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"timestamp\",\n                    \"nullable\": true,\n                    \"example\": \"2018-08-06T04:11:41.568Z\"\n                  },\n                  \"sourcePartnerObjectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"related object id on partner\",\n                    \"example\": 123\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New topic created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Topic\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"All user topics\",\n        \"description\": \"Get all topics user belongs to\",\n        \"operationId\": \"readTopics\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"include\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"if return objects should include vote, event fields\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"creatorId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"return only topics created by user with creatorId value\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"visibility\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return all user related topics\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\",\n                          \"example\": 1,\n                          \"description\": \"number of returned topics\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Topic\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId\": {\n      \"get\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Read a topic with users permissions\",\n        \"description\": \"Read a topic with logged in users permissions\",\n        \"operationId\": \"readTopic\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested topics id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"include\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"vote\",\n            \"description\": \"To include vote data in response if available\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New topic created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Topic\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Update topic\",\n        \"description\": \"Update a topic\",\n        \"operationId\": \"updateTopic\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested topics id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"status\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"inProgress\",\n                      \"voting\",\n                      \"followUp\",\n                      \"closed\"\n                    ]\n                  },\n                  \"visibility\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"public\",\n                      \"private\"\n                    ],\n                    \"default\": \"private\"\n                  },\n                  \"categories\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    },\n                    \"default\": []\n                  },\n                  \"hashtag\": {\n                    \"type\": \"string\",\n                    \"example\": \"banana\",\n                    \"nullable\": true\n                  },\n                  \"endsAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"timestamp\",\n                    \"nullable\": true,\n                    \"example\": \"2018-08-06T04:11:41.568Z\"\n                  },\n                  \"sourcePartnerObjectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"related object id on partner\",\n                    \"example\": 123\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Topic updated successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Update topic\",\n        \"description\": \"Update a topic\",\n        \"operationId\": \"patchTopic\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested topics id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"status\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"inProgress\",\n                      \"voting\",\n                      \"followUp\",\n                      \"closed\"\n                    ]\n                  },\n                  \"visibility\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"public\",\n                      \"private\"\n                    ],\n                    \"default\": \"private\"\n                  },\n                  \"categories\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    },\n                    \"default\": []\n                  },\n                  \"hashtag\": {\n                    \"type\": \"string\",\n                    \"example\": \"banana\",\n                    \"nullable\": true\n                  },\n                  \"endsAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"timestamp\",\n                    \"nullable\": true,\n                    \"example\": \"2018-08-06T04:11:41.568Z\"\n                  },\n                  \"sourcePartnerObjectId\": {\n                    \"type\": \"string\",\n                    \"description\": \"related object id on partner\",\n                    \"example\": 123\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/components/responses/NoContent\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Delete topic\",\n        \"description\": \"Delete a topic\",\n        \"operationId\": \"deleteTopic\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested topics id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId\": {\n      \"get\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Read a public topic\",\n        \"description\": \"Read a public topic\",\n        \"operationId\": \"readTopicUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested topics id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"include\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"vote\",\n            \"description\": \"To include vote data in response if available\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New topic created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Topic\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/join\": {\n      \"put\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Update topic join token\",\n        \"description\": \"Create and update new topic join token\",\n        \"operationId\": \"updateTopicTokenJoin\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested topics id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Topics join token updated successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        },\n                        \"data\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token\": {\n                              \"type\": \"string\",\n                              \"example\": \"as1AbCA1012\"\n                            },\n                            \"level\": {\n                              \"type\": \"string\",\n                              \"example\": \"edit\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/join/:token\": {\n      \"put\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Update level of a topic join token\",\n        \"description\": \"Update level of a topic join token\",\n        \"operationId\": \"updateTopicTokenJoinLevel\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested topics id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"access token\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Topics join token updated successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        },\n                        \"data\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token\": {\n                              \"type\": \"string\",\n                              \"example\": \"as1AbCA1012\"\n                            },\n                            \"level\": {\n                              \"type\": \"string\",\n                              \"example\": \"admin\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/topics\": {\n      \"get\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Get all public topics\",\n        \"description\": \"Get all public topics\",\n        \"operationId\": \"readTopicsUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"include\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"if return objects should include vote, event fields\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"description\": \"Offset index of results for paggination purposes\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"maximum\": 500,\n              \"default\": 26\n            },\n            \"description\": \"number of results to return\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"statuses\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"description\": \"Offset index of results for paggination purposes\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"categories\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"description\": \"Array of categories that topics are included in\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sourcePartnerId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"return only topics created by source partner\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"title\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"can be used for search\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return all user related topics\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\",\n                          \"example\": 1,\n                          \"description\": \"number of returned topics\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Topic\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/NoPermission\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/members/users\": {\n      \"post\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Create new member Users to a Topic\",\n        \"description\": \"You can add User with e-mail or User id. If e-mail does not exist, User is created in the DB with NULL password.\",\n        \"operationId\": \"createTopicMemberUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to add new members to\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"email\": {\n                      \"description\": \"Member email or user id\"\n                    },\n                    \"level\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"read\",\n                        \"edit\",\n                        \"admin\",\n                        \"none\"\n                      ],\n                      \"default\": \"read\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"$ref\": \"#/components/responses/Created\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Get member Users of the Topic\",\n        \"description\": \"Returns all users of the topic\",\n        \"operationId\": \"getTopicMemberUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to return members\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Topic members users data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\",\n                        \"example\": 1,\n                        \"description\": \"returned users count\"\n                      },\n                      \"rows\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"format\": \"uuid\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\"\n                            },\n                            \"levelUser\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"read\",\n                                \"edit\",\n                                \"admin\",\n                                \"none\"\n                              ]\n                            },\n                            \"company\": {\n                              \"type\": \"string\"\n                            },\n                            \"imageUrl\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/members/users/:memberId\": {\n      \"put\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Update User membership information\",\n        \"description\": \"Update User membership information\",\n        \"operationId\": \"updateTopicMemberUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to add new members to\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"memberId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"member User id to update\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"level\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"read\",\n                      \"edit\",\n                      \"admin\",\n                      \"none\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Delete User membership information\",\n        \"description\": \"Delete User membership information\",\n        \"operationId\": \"deleteTopicMemberUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to add new members to\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"memberId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"member User id to delete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/members/groups\": {\n      \"post\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Create new member Groups to a Topic\",\n        \"description\": \"Add new member groups to a Topic\",\n        \"operationId\": \"createTopicMemberGroups\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to add new members to\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"groupId\": {\n                      \"description\": \"Group id to add as a member to the topic\"\n                    },\n                    \"level\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"read\",\n                        \"edit\",\n                        \"admin\",\n                        \"none\"\n                      ],\n                      \"default\": \"read\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"$ref\": \"#/components/responses/Created\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Get member Users of the Topic\",\n        \"description\": \"Returns all users of the topic\",\n        \"operationId\": \"getTopicMemberUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to return members\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Topic members users data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\",\n                        \"example\": 1,\n                        \"description\": \"returned groups count\"\n                      },\n                      \"rows\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"format\": \"uuid\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\"\n                            },\n                            \"level\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"read\",\n                                \"edit\",\n                                \"admin\",\n                                \"none\"\n                              ]\n                            },\n                            \"visibility\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"private\",\n                                \"public\"\n                              ]\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/members/groups/:memberId\": {\n      \"put\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Update Group membership information\",\n        \"description\": \"Update Group membership information\",\n        \"operationId\": \"updateTopicMemberGroup\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to add new members to\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"memberId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"member group id to update\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"level\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"read\",\n                      \"edit\",\n                      \"admin\",\n                      \"none\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Delete Group membership information\",\n        \"description\": \"Delete Group membership information\",\n        \"operationId\": \"deleteTopicMemberGroup\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to add new members to\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"memberId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"member Group id to delete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/members\": {\n      \"get\": {\n        \"tags\": [\n          \"topicMembers\"\n        ],\n        \"summary\": \"Get all members of the Topic'\",\n        \"description\": \"Get all member users and groups of the Topic\",\n        \"operationId\": \"getTopicMembers\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id to add new members to\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return all member users and groups of topic\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"groups\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\",\n                          \"example\": 1,\n                          \"description\": \"returned groups count\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"uuid\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"level\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"read\",\n                                  \"edit\",\n                                  \"admin\",\n                                  \"none\"\n                                ]\n                              },\n                              \"visibility\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"private\",\n                                  \"public\"\n                                ]\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n                    \"users\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\",\n                          \"example\": 1,\n                          \"description\": \"returned users count\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\",\n                                \"format\": \"uuid\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"levelUser\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"read\",\n                                  \"edit\",\n                                  \"admin\",\n                                  \"none\"\n                                ]\n                              },\n                              \"company\": {\n                                \"type\": \"string\"\n                              },\n                              \"imageUrl\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/topics/join/:token\": {\n      \"post\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Join authenticated User to Topic with a given token.\",\n        \"description\": \"Allows sharing of private join urls for example in forums, on conference screen...\",\n        \"operationId\": \"userJoinTopic\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"token\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Join token of the topic to join\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns topic that user has joined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\",\n                          \"format\": \"uuid\",\n                          \"example\": \"c2eb6752-7d88-4153-93ae-fe47aee26573\"\n                        },\n                        \"title\": {\n                          \"type\": \"string\",\n                          \"example\": \"My topic title\",\n                          \"nullable\": true\n                        },\n                        \"description\": {\n                          \"type\": \"string\",\n                          \"format\": \"html\",\n                          \"example\": \"\u003chtml\u003e\u003chead\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003eMy topic title\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\"\n                        },\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"inProgress\",\n                            \"voting\",\n                            \"followUp\",\n                            \"closed\"\n                          ],\n                          \"default\": \"inProgress\"\n                        },\n                        \"visibility\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"public\",\n                            \"private\"\n                          ],\n                          \"default\": \"private\"\n                        },\n                        \"categories\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          },\n                          \"default\": []\n                        },\n                        \"sourcePartnerId\": {\n                          \"type\": \"string\",\n                          \"format\": \"uuid\"\n                        },\n                        \"sourcePartnerObjectId\": {\n                          \"type\": \"string\"\n                        },\n                        \"creator\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"format\": \"uuid\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\",\n                              \"example\": \"John Smith\"\n                            }\n                          }\n                        },\n                        \"padUrl\": {\n                          \"type\": \"string\",\n                          \"maxLength\": 255\n                        },\n                        \"url\": {\n                          \"type\": \"string\",\n                          \"description\": \"link to topic\"\n                        },\n                        \"endsAt\": {\n                          \"type\": \"string\",\n                          \"example\": \"2018-08-06T04:11:41.568Z\"\n                        },\n                        \"hashtag\": {\n                          \"type\": \"string\",\n                          \"example\": \"banana\"\n                        },\n                        \"createdAt\": {\n                          \"type\": \"string\",\n                          \"example\": \"2018-08-06T04:11:41.568Z\"\n                        },\n                        \"updatedAt\": {\n                          \"type\": \"string\",\n                          \"example\": \"2018-08-06T04:11:41.568Z\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Matching token not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 40001\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"example\": \"Matching token not found\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/attachments\": {\n      \"post\": {\n        \"tags\": [\n          \"attachments\"\n        ],\n        \"summary\": \"Add Topic Attachment\",\n        \"description\": \"Add an Attachment to the topic\",\n        \"operationId\": \"addTopicAttachment\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Topici id to add attachment to\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\"\n                  },\n                  \"size\": {\n                    \"type\": \"integer\"\n                  },\n                  \"source\": {\n                    \"type\": \"string\"\n                  },\n                  \"link\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New Attachment added successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Attachment\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"attachments\"\n        ],\n        \"summary\": \"get user topic attachments\",\n        \"description\": \"returns all attachments of the topic where user has permissions\",\n        \"operationId\": \"getUserTopicAttachments\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\",\n              \"edit\",\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id that has attachments\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns attachments list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\",\n                          \"description\": \"attachments count\",\n                          \"example\": 1\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Attachment\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/attachments/:attachmentId\": {\n      \"put\": {\n        \"tags\": [\n          \"attachments\"\n        ],\n        \"summary\": \"Update Topic Attachment information\",\n        \"description\": \"Update Topic Attachment information\",\n        \"operationId\": \"updateTopicAttachment\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"attachmentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"attachment id to update\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New Attachment added successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Attachment\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"attachments\"\n        ],\n        \"summary\": \"Delete Topic attachment\",\n        \"description\": \"Delete Topic attachment\",\n        \"operationId\": \"deleteTopicAttachment\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"attachmentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"attachment id to delete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/attachments\": {\n      \"get\": {\n        \"tags\": [\n          \"attachments\"\n        ],\n        \"summary\": \"get public topic attachments\",\n        \"description\": \"returns all attachments of the public topic\",\n        \"operationId\": \"getTopicAttachments\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id that has attachments\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns attachments list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\",\n                          \"description\": \"attachments count\",\n                          \"example\": 1\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Attachment\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/comments\": {\n      \"post\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Add Topic Comment\",\n        \"description\": \"Add an Comment to the topic\",\n        \"operationId\": \"addTopicComment\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\",\n              \"edit\",\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Topic id to add Comment\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"pro\",\n                      \"con\",\n                      \"reply\"\n                    ]\n                  },\n                  \"parentId\": {\n                    \"type\": \"string\",\n                    \"description\": \"parent comment id if comment is a reply\"\n                  },\n                  \"parentVersion\": {\n                    \"type\": \"integer\",\n                    \"description\": \"if comment is reply then parent version can show exact version that was replied in case parent comment is edited\"\n                  },\n                  \"subject\": {\n                    \"type\": \"string\",\n                    \"description\": \"comments subject\"\n                  },\n                  \"text\": {\n                    \"type\": \"string\",\n                    \"description\": \"comments content\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New Comment added successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Comment\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v2/users/:userId/topics/:topicId/comments\": {\n      \"get\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Read (List) Topic Comments\",\n        \"description\": \"returns all comments of the topic user has access to\",\n        \"operationId\": \"getTopicComments\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\",\n              \"edit\",\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id that has comments\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"orderBy\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"rating\",\n                \"popularity\",\n                \"date\"\n              ]\n            },\n            \"description\": \"how to order comments in result\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns comments list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\",\n                          \"description\": \"comments count\",\n                          \"example\": 1\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/CommentInList\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v2/topics/:topicId/comments\": {\n      \"get\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Read (List) public Topic Comments\",\n        \"description\": \"returns all public topic comments\",\n        \"operationId\": \"getTopicCommentsUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id that has comments\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"orderBy\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"rating\",\n                \"popularity\",\n                \"date\"\n              ]\n            },\n            \"description\": \"how to order comments in result\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns comments list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\",\n                          \"description\": \"comments count\",\n                          \"example\": 1\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/CommentInList\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/comments/:commentId\": {\n      \"put\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Update Topic Comment\",\n        \"description\": \"Update Topic Comment\",\n        \"operationId\": \"updateTopicComment\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"commentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Comment id to update\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"subject\": {\n                    \"type\": \"string\"\n                  },\n                  \"text\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"pro\",\n                      \"con\",\n                      \"reply\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Delete Topic Comment\",\n        \"description\": \"Delete Topic Comment\",\n        \"operationId\": \"deleteTopicComment\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"commentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Comment id to delete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/comments/:commentId/reports\": {\n      \"post\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Report Topic Comment\",\n        \"description\": \"Report Topic Comment\",\n        \"operationId\": \"reportTopicComment\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"commentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Comment id to report\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"text\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"abuse\",\n                      \"obscene\",\n                      \"spam\",\n                      \"hate\",\n                      \"netiquette\",\n                      \"duplicate\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New Comment added successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Report\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/comments/:commentId/reports\": {\n      \"post\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Report Topic Comment\",\n        \"description\": \"Report Topic Comment\",\n        \"operationId\": \"reportTopicComment\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"commentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Comment id to report\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"text\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"abuse\",\n                      \"obscene\",\n                      \"spam\",\n                      \"hate\",\n                      \"netiquette\",\n                      \"duplicate\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New Comment added successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Report\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/comments/:commentId/reports/:reportId\": {\n      \"get\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Read Report\",\n        \"description\": \"Read Report\",\n        \"operationId\": \"getTopicCommentsReportUnauthorized\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id that has\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"commentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"comment id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"reportId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"report to read id\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"authorization token\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns comments report\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ReportWithComment\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/comments/:commentId/reports/:reportId\": {\n      \"get\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Read Report logged in\",\n        \"description\": \"Read Report\",\n        \"operationId\": \"getTopicCommentsReport\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id that has\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"commentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"comment id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"reportId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"report to read id\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"authorization token\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns comments report\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ReportWithComment\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/comments/:commentId/reports/:reportId/moderate\": {\n      \"put\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Moderate Topic Comment\",\n        \"description\": \"Moderate Topic Comment\",\n        \"operationId\": \"moderateTopicComment\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"commentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Comment id to moderate\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"reportId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Report id\"\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"authorization\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"authorization token\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"text\": {\n                    \"type\": \"string\",\n                    \"description\": \"comment delete reason text\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"abuse\",\n                      \"obscene\",\n                      \"spam\",\n                      \"hate\",\n                      \"netiquette\",\n                      \"duplicate\"\n                    ],\n                    \"description\": \"comment delete reason type\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/comments/:commentId/votes\": {\n      \"post\": {\n        \"tags\": [\n          \"comments\"\n        ],\n        \"summary\": \"Create a Comment Vote\",\n        \"description\": \"Create a Comment Vote\",\n        \"operationId\": \"createTopicCommentVote\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"commentId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Comment id to vote on\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"value\": {\n                    \"type\": \"integer\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New Comment vote added successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"up\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"count\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        },\n                        \"down\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"count\": {\n                              \"type\": \"integer\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/mentions\": {\n      \"get\": {\n        \"tags\": [\n          \"mentions\"\n        ],\n        \"summary\": \"Read Topic Mentions\",\n        \"description\": \"Read Topic Mentions\",\n        \"operationId\": \"getTopicMentions\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\",\n              \"edit\",\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id that has\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns topic mentions\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        },\n                        \"createdAt\": {\n                          \"type\": \"string\"\n                        },\n                        \"hashtag\": {\n                          \"type\": \"string\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Mention\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/mentions\": {\n      \"get\": {\n        \"tags\": [\n          \"mentions\"\n        ],\n        \"summary\": \"Read (List) public Topic Mentions\",\n        \"description\": \"Read (List) public Topic Mentions\",\n        \"operationId\": \"getTopicMentionsUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id that has\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns topic mentions\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        },\n                        \"createdAt\": {\n                          \"type\": \"string\"\n                        },\n                        \"hashtag\": {\n                          \"type\": \"string\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/Mention\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/votes\": {\n      \"post\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Create a Vote\",\n        \"description\": \"Create a Vote\",\n        \"operationId\": \"createTopicVote\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"options\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"value\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  },\n                  \"authType\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"soft\",\n                      \"hard\"\n                    ]\n                  },\n                  \"minChoices\": {\n                    \"type\": \"integer\",\n                    \"default\": 1\n                  },\n                  \"maxChoices\": {\n                    \"type\": \"integer\",\n                    \"default\": 1\n                  },\n                  \"delegationIsAllowed\": {\n                    \"type\": \"boolean\",\n                    \"default\": false\n                  },\n                  \"endsAt\": {\n                    \"type\": \"string\",\n                    \"example\": \"2018-08-06T04:11:41.568Z\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"regular\",\n                      \"multiple\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New Vote created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Vote\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/votes/:voteId\": {\n      \"get\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Read a Vote\",\n        \"description\": \"Read a Vote\",\n        \"operationId\": \"readTopicVote\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\",\n              \"edit\",\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return vote data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Vote\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Update a Vote\",\n        \"description\": \"Update a Vote\",\n        \"operationId\": \"updateTopicVote\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"endsAt\": {\n                    \"type\": \"string\",\n                    \"example\": \"2018-08-06T04:11:41.568Z\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Vote update successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Vote\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/votes/:voteId\": {\n      \"post\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Vote\",\n        \"description\": \"Vote\",\n        \"operationId\": \"voteTopicVote\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"options\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Read a public Topics Vote\",\n        \"description\": \"Read a public Topics Vote\",\n        \"operationId\": \"readTopicVoteUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"voteId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"vote id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return vote data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Vote\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/votes/:voteId/downloads/zip/final\": {\n      \"get\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Download votes final results zip\",\n        \"description\": \"Download votes final results zip\",\n        \"operationId\": \"downloadTopicVoteFinalZip\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"voteId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"vote id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"starts zip download\"\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/votes/:voteId/downloads/zip/final\": {\n      \"get\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Download votes final results zip\",\n        \"description\": \"Download votes final results zip\",\n        \"operationId\": \"downloadTopicVoteFinalZipUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"voteId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"vote id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"starts zip download\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/votes/:voteId/delegations\": {\n      \"post\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Delegate a Vote\",\n        \"description\": \"Delegate a Vote\",\n        \"operationId\": \"delegateTopicVote\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\",\n              \"edit\",\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"voteId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"vote id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"userId\": {\n                    \"type\": \"string\",\n                    \"description\": \"users id to delegate vote to\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"vote\"\n        ],\n        \"summary\": \"Delete Vote delegation\",\n        \"description\": \"Delete Vote delegation\",\n        \"operationId\": \"deleteTopicVoteDelegation\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\",\n              \"edit\",\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"voteId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"vote id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/events\": {\n      \"post\": {\n        \"tags\": [\n          \"events\"\n        ],\n        \"summary\": \"Create an Event\",\n        \"description\": \"Create an Event\",\n        \"operationId\": \"createTopicEvent\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"subject\": {\n                    \"type\": \"string\"\n                  },\n                  \"text\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20100\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/TopicEvent\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"events\"\n        ],\n        \"summary\": \"List Events\",\n        \"description\": \"List Events\",\n        \"operationId\": \"getTopicEvents\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\",\n              \"edit\",\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/TopicEvent\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/events\": {\n      \"post\": {\n        \"tags\": [\n          \"events\"\n        ],\n        \"summary\": \"Create an Event with a token issued to a 3rd party\",\n        \"description\": \"Create an Event with a token issued to a 3rd party\",\n        \"operationId\": \"createTopicEventToken\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"subject\": {\n                    \"type\": \"string\"\n                  },\n                  \"text\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20100\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/TopicEvent\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"events\"\n        ],\n        \"summary\": \"Read (List) public Topic Events\",\n        \"description\": \"Read (List) public Topic Events\",\n        \"operationId\": \"getTopicEventsUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"$ref\": \"#/components/schemas/TopicEvent\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/events/:eventId\": {\n      \"delete\": {\n        \"tags\": [\n          \"events\"\n        ],\n        \"summary\": \"Delete Topic Event\",\n        \"description\": \"Delete Topic Event\",\n        \"operationId\": \"deleteTopicEvent\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"eventId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"event id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/pin\": {\n      \"post\": {\n        \"tags\": [\n          \"pinned\"\n        ],\n        \"summary\": \"Add Topic as pinned\",\n        \"description\": \"Add Topic as pinned\",\n        \"operationId\": \"pinTopic\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pinned\"\n        ],\n        \"summary\": \"Remove Topic from Pinned\",\n        \"description\": \"Remove Topic from Pinned\",\n        \"operationId\": \"removeTopicPin\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"read\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/topics/:topicId/activities\": {\n      \"get\": {\n        \"tags\": [\n          \"activities\"\n        ],\n        \"summary\": \"Read (List) public Topic Activities\",\n        \"description\": \"Read (List) public Topic Activities\",\n        \"operationId\": \"getTopicActivitiesUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"offset where to start returning results\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"number of results to return\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/topics/:topicId/activities\": {\n      \"get\": {\n        \"tags\": [\n          \"activities\"\n        ],\n        \"summary\": \"Read Topic Activities\",\n        \"description\": \"Read Topic Activities\",\n        \"operationId\": \"getTopicActivities\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"topicId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"topic id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"offset where to start returning results\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"number of results to return\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/activities/unread\": {\n      \"get\": {\n        \"tags\": [\n          \"activities\"\n        ],\n        \"summary\": \"Get number on unread activities\",\n        \"description\": \"Get number on unread activities\",\n        \"operationId\": \"unreadActivities\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"user id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sourcePartnerId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Partner id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/activities\": {\n      \"get\": {\n        \"tags\": [\n          \"activities\"\n        ],\n        \"summary\": \"Get activities list\",\n        \"description\": \"Get activities list\",\n        \"operationId\": \"getActivities\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"user id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sourcePartnerId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Partner id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"description\": \"page nr of results to return\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"offset where to start returning results\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"number of results to return\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"include\",\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\"\n                }\n              ],\n              \"default\": [\n                \"topics\",\n                \"groups\",\n                \"user\",\n                \"self\"\n              ]\n            },\n            \"description\": \"activities types to return possible ['topics', 'groups', 'user', 'self']\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\"\n                }\n              ]\n            },\n            \"description\": \"activities types to return possible ['Topic', 'Group', 'TopicComment', 'Vote', 'User']\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/activities\": {\n      \"get\": {\n        \"tags\": [\n          \"activities\"\n        ],\n        \"summary\": \"Get public activities list\",\n        \"description\": \"Get public activities list\",\n        \"operationId\": \"getPublicActivities\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"user id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sourcePartnerId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Partner id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"description\": \"page nr of results to return\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"offset where to start returning results\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"number of results to return\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"include\",\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\"\n                }\n              ],\n              \"default\": [\n                \"topics\",\n                \"groups\"\n              ]\n            },\n            \"description\": \"activities types to return possible ['topics', 'groups']\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\"\n                }\n              ]\n            },\n            \"description\": \"activities types to return possible ['Topic', 'Group', 'TopicComment', 'Vote', 'User']\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/groups\": {\n      \"post\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Create a new Group\",\n        \"description\": \"Create a new Group\",\n        \"operationId\": \"createGroup\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"parentId\": {\n                    \"type\": \"string\"\n                  },\n                  \"visibility\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"public\",\n                      \"private\"\n                    ],\n                    \"default\": \"private\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20100\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Group\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Get all Groups User belongs to\",\n        \"description\": \"Get all Groups User belongs to\",\n        \"operationId\": \"getGroups\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"include\",\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\"\n                }\n              ]\n            },\n            \"description\": \"what groups to include possible values ['member.topic', 'member.user']\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return groups list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"creator\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"name\": {\n                                    \"type\": \"string\"\n                                  },\n                                  \"email\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"parent\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"id\": {\n                                    \"type\": \"string\"\n                                  }\n                                }\n                              },\n                              \"permissions\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"level\": {\n                                    \"type\": \"string\",\n                                    \"enum\": [\n                                      \"admin\",\n                                      \"edit\",\n                                      \"read\",\n                                      \"none\"\n                                    ]\n                                  }\n                                }\n                              },\n                              \"visibility\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                  \"public\",\n                                  \"private\"\n                                ]\n                              },\n                              \"members\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"topics\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"count\": {\n                                        \"type\": \"integer\"\n                                      },\n                                      \"latest\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                          \"title\": {\n                                            \"type\": \"string\"\n                                          }\n                                        }\n                                      }\n                                    }\n                                  },\n                                  \"users\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                      \"count\": {\n                                        \"type\": \"integer\"\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/groups/:groupId\": {\n      \"get\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Read a Group\",\n        \"description\": \"Read a Group\",\n        \"operationId\": \"getGroup\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return group data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Group\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Update Group info\",\n        \"description\": \"Update Group info\",\n        \"operationId\": \"updateGroup\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Group\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Delete Group\",\n        \"description\": \"Delete Group\",\n        \"operationId\": \"deleteGroup\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/groups/:groupId/members/users\": {\n      \"post\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Create new members (GroupMember) to a Group\",\n        \"description\": \"Create new members (GroupMember) to a Group\",\n        \"operationId\": \"createMembersGroup\",\n        \"security\": [\n          {\n            \"ApiKeyAuth\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"userId\": {\n                      \"type\": \"string\",\n                      \"description\": \"can be email or user id\"\n                    },\n                    \"level\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"admin\",\n                        \"edit\",\n                        \"read\",\n                        \"none\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"$ref\": \"#/components/responses/Created\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Get member Users of the Group\",\n        \"description\": \"Returns all member users of the group\",\n        \"operationId\": \"getGroupMemberUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id to return members\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Group members users data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\",\n                        \"example\": 1,\n                        \"description\": \"returned users count\"\n                      },\n                      \"rows\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"format\": \"uuid\"\n                            },\n                            \"name\": {\n                              \"type\": \"string\"\n                            },\n                            \"level\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"read\",\n                                \"edit\",\n                                \"admin\",\n                                \"none\"\n                              ]\n                            },\n                            \"company\": {\n                              \"type\": \"string\"\n                            },\n                            \"imageUrl\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/groups/:groupId/members/users/:memberId\": {\n      \"put\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Update User membership information\",\n        \"description\": \"Update User membership information\",\n        \"operationId\": \"updateGroupMemberUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"memberId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"member User id to update\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"level\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"read\",\n                      \"edit\",\n                      \"admin\",\n                      \"none\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Delete User membership information\",\n        \"description\": \"Delete User membership information\",\n        \"operationId\": \"deleteGroupMemberUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"memberId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"member User id to delete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/groups/:groupId/topics\": {\n      \"get\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Get member Topics of the Group\",\n        \"description\": \"Returns all member Topics of the group\",\n        \"operationId\": \"getGroupMemberTopics\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id to return topics\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Group topics data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"count\": {\n                        \"type\": \"integer\",\n                        \"example\": 1,\n                        \"description\": \"returned topics count\"\n                      },\n                      \"rows\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"id\": {\n                              \"type\": \"string\",\n                              \"format\": \"uuid\",\n                              \"example\": \"c2eb6752-7d88-4153-93ae-fe47aee26573\"\n                            },\n                            \"title\": {\n                              \"type\": \"string\",\n                              \"example\": \"My topic title\",\n                              \"nullable\": true\n                            },\n                            \"visibility\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"public\",\n                                \"private\"\n                              ],\n                              \"default\": \"private\"\n                            },\n                            \"status\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"inProgress\",\n                                \"voting\",\n                                \"followUp\",\n                                \"closed\"\n                              ],\n                              \"default\": \"inProgress\"\n                            },\n                            \"categories\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"string\"\n                              },\n                              \"default\": []\n                            },\n                            \"endsAt\": {\n                              \"type\": \"string\",\n                              \"example\": \"2018-08-06T04:11:41.568Z\"\n                            },\n                            \"hashtag\": {\n                              \"type\": \"string\",\n                              \"example\": \"banana\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\",\n                              \"example\": \"2018-08-06T04:11:41.568Z\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\",\n                              \"example\": \"2018-08-06T04:11:41.568Z\"\n                            },\n                            \"permission\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"level\": {\n                                  \"type\": \"string\",\n                                  \"enum\": [\n                                    \"read\",\n                                    \"edit\",\n                                    \"admin\",\n                                    \"none\"\n                                  ]\n                                }\n                              }\n                            },\n                            \"members\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"users\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"count\": {\n                                      \"type\": \"integer\"\n                                    }\n                                  }\n                                },\n                                \"groups\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"count\": {\n                                      \"type\": \"integer\"\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/groups/:groupId/join\": {\n      \"put\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Update group join token\",\n        \"description\": \"Create and update new group join token\",\n        \"operationId\": \"updateGroupTokenJoin\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested group id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Groups join token updated successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        },\n                        \"data\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token\": {\n                              \"type\": \"string\",\n                              \"example\": \"as1AbCA1012\"\n                            },\n                            \"level\": {\n                              \"type\": \"string\",\n                              \"example\": \"edit\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/groups/:groupId/join/:token\": {\n      \"put\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Update level of a group join token\",\n        \"description\": \"Update level of a group join token\",\n        \"operationId\": \"updateGroupTokenJoinLevel\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"requested group id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"access token\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Groups join token updated successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        },\n                        \"data\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"token\": {\n                              \"type\": \"string\",\n                              \"example\": \"as1AbCA1012\"\n                            },\n                            \"level\": {\n                              \"type\": \"string\",\n                              \"example\": \"admin\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/groups/join/:token\": {\n      \"post\": {\n        \"tags\": [\n          \"topic\"\n        ],\n        \"summary\": \"Join authenticated User to Group with a given token.\",\n        \"description\": \"Allows sharing of private join urls for example in forums, on conference screen...\",\n        \"operationId\": \"userJoinGroup\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"token\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Join token of the group to join\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns group that user has joined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Group\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Matching token not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"integer\",\n                          \"example\": 40001\n                        },\n                        \"message\": {\n                          \"type\": \"string\",\n                          \"example\": \"Matching token not found\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/groups\": {\n      \"get\": {\n        \"tags\": [\n          \"groups\"\n        ],\n        \"summary\": \"Get Groups list\",\n        \"description\": \"Returns groups\",\n        \"operationId\": \"getGroups\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"description\": \"Offset index of results for paggination purposes\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"maximum\": 500,\n              \"default\": 26\n            },\n            \"description\": \"number of results to return\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sourcePartnerId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"return only groups created by source partner\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"name\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"can be used for search\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Groups list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\",\n                        \"example\": \"c2eb6752-7d88-4153-93ae-fe47aee26573\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\",\n                        \"example\": \"CitizenOS members\"\n                      },\n                      \"parentId\": {\n                        \"type\": \"string\",\n                        \"format\": \"uuid\",\n                        \"nullable\": true,\n                        \"description\": \"Parent Groups id.\"\n                      },\n                      \"creator\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"id\": {\n                            \"type\": \"string\",\n                            \"format\": \"uuid\",\n                            \"example\": \"c2eb6752-7d88-4153-93ae-fe47aee26573\",\n                            \"description\": \"Group creators id\"\n                          },\n                          \"name\": {\n                            \"type\": \"string\"\n                          },\n                          \"company\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      },\n                      \"visibility\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"public\",\n                          \"private\"\n                        ],\n                        \"default\": \"private\"\n                      },\n                      \"sourcePartnerId\": {\n                        \"type\": \"string\"\n                      },\n                      \"createdAt\": {\n                        \"type\": \"string\",\n                        \"example\": \"2018-08-06T04:11:41.568Z\"\n                      },\n                      \"updatedAt\": {\n                        \"type\": \"string\",\n                        \"example\": \"2018-08-06T04:11:41.568Z\"\n                      },\n                      \"deletedAt\": {\n                        \"type\": \"string\",\n                        \"example\": \"2018-08-06T04:11:41.568Z\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/groups/:groupId/activities\": {\n      \"get\": {\n        \"tags\": [\n          \"activities\"\n        ],\n        \"summary\": \"Read (List) public Group Activities\",\n        \"description\": \"Read (List) public Group Activities\",\n        \"operationId\": \"getGroupActivitiesUnauth\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"group id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"offset where to start returning results\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"number of results to return\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Public groups activities list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/groups/:groupId/activities\": {\n      \"get\": {\n        \"tags\": [\n          \"activities\"\n        ],\n        \"summary\": \"Read Group Activities\",\n        \"description\": \"Read Group Activities\",\n        \"operationId\": \"getGroupActivities\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"user id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"groupId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"Group id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"offset where to start returning results\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"number of results to return\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Users Groups activities list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/api/v2/search\": {\n      \"get\": {\n        \"tags\": [\n          \"search\"\n        ],\n        \"summary\": \"Search topics and groups\",\n        \"description\": \"Search topics and groups\",\n        \"operationId\": \"search\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"str\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"user id\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"include\",\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"array\"\n                }\n              ]\n            },\n            \"required\": true,\n            \"description\": \"items to include in results\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 0\n            },\n            \"description\": \"offset where to start returning results\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"default\": 10\n            },\n            \"description\": \"number of results to return\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"description\": \"page of results to return\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Users Groups activities list\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"results\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"my\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"topics\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"count\": {\n                                      \"type\": \"integer\"\n                                    },\n                                    \"rows\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"$ref\": \"#/components/schemas/Topic\"\n                                      }\n                                    }\n                                  }\n                                },\n                                \"groups\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"count\": {\n                                      \"type\": \"integer\"\n                                    },\n                                    \"rows\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"$ref\": \"#/components/schemas/Group\"\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            },\n                            \"public\": {\n                              \"type\": \"object\",\n                              \"properties\": {\n                                \"topics\": {\n                                  \"type\": \"object\",\n                                  \"properties\": {\n                                    \"count\": {\n                                      \"type\": \"integer\"\n                                    },\n                                    \"rows\": {\n                                      \"type\": \"array\",\n                                      \"items\": {\n                                        \"$ref\": \"#/components/schemas/Topic\"\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/partners/:partnerId/topics/:sourcePartnerObjectId\": {\n      \"get\": {\n        \"tags\": [\n          \"partners\"\n        ],\n        \"summary\": \"Get Partner Topic mapping\",\n        \"description\": \"Enables Partner to map its object id to CitizenOS topic\",\n        \"operationId\": \"getPartnerTopicMapping\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"partnerId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"partner id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"sourcePartnerObjectId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"id of the partner object linked to topic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Topic that has partner object id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Topic\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId\": {\n      \"put\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Update User information\",\n        \"description\": \"Update User information\",\n        \"operationId\": \"updateUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"company\": {\n                    \"type\": \"string\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"language\": {\n                    \"type\": \"string\"\n                  },\n                  \"imageUrl\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Updated  user data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"get User information\",\n        \"description\": \"Get User information\",\n        \"operationId\": \"getUser\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/consents\": {\n      \"post\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Create UserConsent\",\n        \"description\": \"Create UserConsent\",\n        \"operationId\": \"createUserConsent\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"partnerId\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"get User consents\",\n        \"description\": \"Get User consents\",\n        \"operationId\": \"getUserConsents\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User data\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"code\": {\n                          \"type\": \"string\",\n                          \"example\": 20000\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"count\": {\n                          \"type\": \"integer\"\n                        },\n                        \"rows\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                              \"id\": {\n                                \"type\": \"string\"\n                              },\n                              \"website\": {\n                                \"type\": \"string\"\n                              },\n                              \"createdAt\": {\n                                \"type\": \"string\"\n                              },\n                              \"updatedAt\": {\n                                \"type\": \"string\"\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/:userId/consents/:partnerId\": {\n      \"delete\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Delete User consent\",\n        \"description\": \"Delete User consent\",\n        \"operationId\": \"deleteUserConsent\",\n        \"security\": [\n          {\n            \"oAuth2\": [\n              \"admin\"\n            ]\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"logged in users id\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"partnerId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"description\": \"partner id of consent to delete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/Ok\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"responses\": {\n      \"NotFound\": {\n        \"description\": \"The specified resource was not found\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": 40400\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Not Found\"\n                    }\n                  }\n                }\n              },\n              \"required\": [\n                \"code\",\n                \"message\"\n              ]\n            }\n          }\n        }\n      },\n      \"Unauthorized\": {\n        \"description\": \"Unauthorized\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": 40100\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Unauthorized\"\n                    }\n                  }\n                }\n              },\n              \"required\": [\n                \"code\",\n                \"message\"\n              ]\n            }\n          }\n        }\n      },\n      \"Forbidden\": {\n        \"description\": \"Unauthorized\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": 40300\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Forbidden\"\n                    }\n                  }\n                }\n              },\n              \"required\": [\n                \"code\",\n                \"message\"\n              ]\n            }\n          }\n        }\n      },\n      \"Ok\": {\n        \"description\": \"Ok\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": 20000\n                    }\n                  }\n                }\n              },\n              \"required\": [\n                \"code\",\n                \"message\"\n              ]\n            }\n          }\n        }\n      },\n      \"Created\": {\n        \"description\": \"Created\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": 20100\n                    }\n                  }\n                }\n              },\n              \"required\": [\n                \"code\",\n                \"message\"\n              ]\n            }\n          }\n        }\n      },\n      \"NoContent\": {\n        \"description\": \"No content\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": 20400\n                    }\n                  }\n                }\n              },\n              \"required\": [\n                \"code\",\n                \"message\"\n              ]\n            }\n          }\n        }\n      },\n      \"NoPermission\": {\n        \"description\": \"No Permission\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"example\": 40000\n                    },\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"No Permission\"\n                    }\n                  }\n                }\n              },\n              \"required\": [\n                \"code\",\n                \"message\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"2345-23523-25-235-\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"John Smith\"\n          },\n          \"company\": {\n            \"type\": \"string\",\n            \"example\": \"CitizenOS\"\n          },\n          \"language\": {\n            \"type\": \"string\",\n            \"example\": \"en\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"example\": \"john.smith@gmail.com\"\n          },\n          \"imageUrl\": {\n            \"type\": \"string\",\n            \"example\": \"https://images.com/john-smith.jpg\"\n          }\n        }\n      },\n      \"Topic\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"c2eb6752-7d88-4153-93ae-fe47aee26573\"\n          },\n          \"title\": {\n            \"type\": \"string\",\n            \"example\": \"My topic title\",\n            \"nullable\": true\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"format\": \"html\",\n            \"example\": \"\u003chtml\u003e\u003chead\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003eMy topic title\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"inProgress\",\n              \"voting\",\n              \"followUp\",\n              \"closed\"\n            ],\n            \"default\": \"inProgress\"\n          },\n          \"visibility\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"public\",\n              \"private\"\n            ],\n            \"default\": \"private\"\n          },\n          \"categories\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"default\": []\n          },\n          \"sourcePartnerId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"sourcePartnerObjectId\": {\n            \"type\": \"string\"\n          },\n          \"creator\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"name\": {\n                \"type\": \"string\",\n                \"example\": \"John Smith\"\n              }\n            }\n          },\n          \"tokenJoin\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"maxLength\": 8,\n            \"description\": \"This value is only returned by authorized endpoints\"\n          },\n          \"padUrl\": {\n            \"type\": \"string\",\n            \"maxLength\": 255\n          },\n          \"endsAt\": {\n            \"type\": \"string\",\n            \"example\": \"2018-08-06T04:11:41.568Z\"\n          },\n          \"pinned\": {\n            \"type\": \"boolean\",\n            \"example\": \"true\",\n            \"description\": \"This value is only returned by authorized endpoints\"\n          },\n          \"hashtag\": {\n            \"type\": \"string\",\n            \"example\": \"banana\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"example\": \"2018-08-06T04:11:41.568Z\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"example\": \"2018-08-06T04:11:41.568Z\"\n          }\n        }\n      },\n      \"Group\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"example\": \"c2eb6752-7d88-4153-93ae-fe47aee26573\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"CitizenOS members\"\n          },\n          \"parentId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"nullable\": true,\n            \"description\": \"Parent Groups id.\"\n          },\n          \"creator\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\",\n                \"example\": \"c2eb6752-7d88-4153-93ae-fe47aee26573\",\n                \"description\": \"Group creators id\"\n              }\n            }\n          },\n          \"visibility\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"public\",\n              \"private\"\n            ],\n            \"default\": \"private\"\n          },\n          \"sourcePartnerObjectId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Attachment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"size\": {\n            \"type\": \"integer\"\n          },\n          \"source\": {\n            \"type\": \"string\"\n          },\n          \"creatorId\": {\n            \"type\": \"string\"\n          },\n          \"link\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Comment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"integer\"\n          },\n          \"parent\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"version\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"creator\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"company\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"edits\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"createdAt\": {\n                  \"type\": \"string\"\n                },\n                \"subject\": {\n                  \"type\": \"string\"\n                },\n                \"text\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"pro\",\n                    \"con\",\n                    \"reply\"\n                  ]\n                }\n              }\n            }\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\"\n          },\n          \"deletedAt\": {\n            \"type\": \"string\"\n          },\n          \"deletedBy\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"deletedReasonText\": {\n            \"type\": \"string\"\n          },\n          \"deletedReasonType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"abuse\",\n              \"obscene\",\n              \"spam\",\n              \"hate\",\n              \"netiquette\",\n              \"duplicate\"\n            ]\n          },\n          \"report\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              }\n            }\n          }\n        }\n      },\n      \"CommentInList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"integer\"\n          },\n          \"parent\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"version\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"creator\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"company\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"edits\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"createdAt\": {\n                  \"type\": \"string\"\n                },\n                \"subject\": {\n                  \"type\": \"string\"\n                },\n                \"text\": {\n                  \"type\": \"string\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"pro\",\n                    \"con\",\n                    \"reply\"\n                  ]\n                }\n              }\n            }\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\"\n          },\n          \"deletedAt\": {\n            \"type\": \"string\"\n          },\n          \"deletedBy\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"deletedReasonText\": {\n            \"type\": \"string\"\n          },\n          \"deletedReasonType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"abuse\",\n              \"obscene\",\n              \"spam\",\n              \"hate\",\n              \"netiquette\",\n              \"duplicate\"\n            ]\n          },\n          \"replies\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CommentInList\"\n            }\n          },\n          \"report\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              }\n            }\n          },\n          \"votes\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"count\": {\n                \"type\": \"integer\"\n              },\n              \"up\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"count\": {\n                    \"type\": \"integer\"\n                  }\n                }\n              },\n              \"down\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"count\": {\n                    \"type\": \"integer\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Report\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"creator\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"abuse\",\n              \"obscene\",\n              \"spam\",\n              \"hate\",\n              \"netiquette\",\n              \"duplicate\"\n            ]\n          }\n        }\n      },\n      \"ReportWithComment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"abuse\",\n              \"obscene\",\n              \"spam\",\n              \"hate\",\n              \"netiquette\",\n              \"duplicate\"\n            ]\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"comment\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              },\n              \"subject\": {\n                \"type\": \"string\"\n              },\n              \"text\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"Mention\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"integer\"\n              }\n            ]\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"creator\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"profilePictureUrl\": {\n                \"type\": \"string\"\n              },\n              \"profileUrl\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"sourceId\": {\n            \"type\": \"string\",\n            \"description\": \"where mention is loaded from eg. twitter\"\n          },\n          \"sourceUrl\": {\n            \"type\": \"string\",\n            \"description\": \"link to mention\"\n          },\n          \"text\": {\n            \"type\": \"string\",\n            \"description\": \"mentions content\"\n          }\n        }\n      },\n      \"Vote\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"minChoices\": {\n            \"type\": \"integer\"\n          },\n          \"maxChoices\": {\n            \"type\": \"integer\"\n          },\n          \"delegationIsAllowed\": {\n            \"type\": \"boolean\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"endsAt\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"regular\",\n              \"multiple\"\n            ]\n          },\n          \"authType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"soft\",\n              \"hard\"\n            ]\n          },\n          \"downloads\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"bdocVote\": {\n                \"type\": \"string\"\n              },\n              \"bdocFinal\": {\n                \"type\": \"string\"\n              },\n              \"zipFinal\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"options\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"count\": {\n                  \"type\": \"integer\"\n                },\n                \"rows\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": {\n                        \"type\": \"string\"\n                      },\n                      \"voteCount\": {\n                        \"type\": \"integer\"\n                      },\n                      \"selected\": {\n                        \"type\": \"boolean\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"TopicEvent\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Activity\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"context\": {\n                \"type\": \"string\"\n              },\n              \"object\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"@type\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"actor\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"company\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"type\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"createdAt\": {\n            \"type\": \"string\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\"\n          },\n          \"deletedAt\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"OAuth2\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n            \"tokenUrl\": \"https://example.com/oauth/token\",\n            \"scopes\": {\n              \"read\": \"Grants read access\",\n              \"edit\": \"Grants edit access\",\n              \"admin\": \"Grants access to admin operations\"\n            }\n          }\n        }\n      },\n      \"ApiKeyAuth\": {\n        \"type\": \"apiKey\",\n        \"in\": \"header\",\n        \"name\": \"authorization\"\n      }\n    }\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about CitizenOS\",\n    \"url\": \"http://citizenos.com\"\n  }\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/users/:userId/topics/:topicId/members/groups: get: operation \"getTopicMemberUser\": security: unknown security schema \"oAuth2\""
}