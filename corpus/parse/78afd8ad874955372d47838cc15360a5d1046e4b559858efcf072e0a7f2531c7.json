{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restqa/restqa"
		},
		"file": {
			"name": "restqa.yml",
			"size": 0,
			"path": "src/http-server/openapi/restqa/restqa.yml",
			"byteSize": 39676,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.0.1\n  contact:\n    name: RestQA support\n    email: hello@mailqa.io\n  license:\n    name: RestQA\n    url: \"https://restqa.io\"\n  title: RestQA ü¶è\n  description: |\n    ## Description\n\n    RestQA also provide a way to control your framework through a set of RestQA API.\n\n    ### Why ?\n\n    Actually some project are very specific and could face issue to run the test close to the target environment through Continuous integration.\n    But maybe we can think of a project that is on premise and the best way to test this api is to have an access from inside. Then you can just deploy RestQA on the same server and start playing with the api üöÄ\n\n    ### Installation.\n\n    You only need 3 steps to access to theses apis:\n\n    1. Install RestQA `npm i -g @restqa/restqa`\n    2. Initiate a RestQA project `restqa init`\n    3. Run the RestQA server  `restqa serve`\n\n\n    From there you should be able to access RestQA from it default port 8081 (https://localhot:8081)\n\n    If you face any issue feel free to connect with us on [Discord](https://restqa.io/chat)\n\nservers:\n  - url: \"http://localhost:8081\"\n    description: The Dashboard API host\n    variables:\n      environment:\n        enum:\n          - local\n        default: local\ntags:\n  - name: RestQA\n    description: Main feature of RestQA\n  - name: Reports\n    description: Server feature to use the output http-html-report\n  #- name: Dashboard\n  #  description: Api supporting the Dashboard\npaths:\n  /version:\n    get:\n      tags:\n        - RestQA\n      deprecated: false\n      operationId: version\n      summary: retrieve the current version of RestQA\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/version\"\n  /config:\n    get:\n      tags:\n        - RestQA\n      deprecated: false\n      operationId: config\n      summary: Retrieve the Restqa Configuration\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/config\"\n        \"403\":\n          description: Forbiden Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error403\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /preferences:\n    get:\n      tags:\n        - RestQA\n      deprecated: false\n      operationId: preferences\n      summary: Retrieve the user Preferences\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/preferences\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /api/project/features:\n    get:\n      tags:\n        - Project\n      deprecated: false\n      operationId: projectFeatures\n      summary: Retrieve the list of features available on the current project\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/features\"\n        \"403\":\n          description: Forbiden Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error403\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /api/project/features/{path}:\n    get:\n      tags:\n        - Project\n      deprecated: false\n      operationId: getProjectFeatureFile\n      summary: Return the content of a specific feature\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/definitions/featureFile\"\n        \"403\":\n          description: Forbiden Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error403\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n    put:\n      tags:\n        - Project\n      deprecated: false\n      operationId: updateProjectFeatureFile\n      summary: Update the content of a specific feature\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              $ref: \"#/definitions/featureFile\"\n      responses:\n        \"204\":\n          description: Success\n        \"403\":\n          description: Forbiden Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error403\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n\n  /api/restqa/initialize:\n    post:\n      tags:\n        - RestQA\n      deprecated: false\n      operationId: initialize\n      summary: Initialize a RestQA project\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - description\n                - env\n                - url\n              properties:\n                name:\n                  description: The project name\n                  example: \"Backend api\"\n                  type: \"string\"\n                description:\n                  description: The project description\n                  example: \"All the API used by the different frontends\"\n                  type: \"string\"\n                env:\n                  description: Define the first environement required to be setup\n                  example: \"local\"\n                  type: \"string\"\n                url:\n                  description: The host url of the api that required to be tested\n                  example: \"https://api.example.com\"\n                  type: \"string\"\n                ci:\n                  description: Define the continuous integration setup wanted\n                  example: \"github-action\"\n                  type: \"string\"\n                  enum:\n                    - \"github-action\"\n                    - \"gitlab-ci\"\n                    - \"bitbucket-pipeline\"\n                    - \"circle-ci\"\n                    - \"travis\"\n                    - \"jenkins\"\n                folder:\n                  description: Define the location where the project needs to be initialized\n                  example: \"./test-integrations\"\n                  type: \"string\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  configuration:\n                    type: string\n                    description: \"Location of the restqa configuration file\"\n                    example: \"/home/john/project/.restqa.yml\"\n                  folder:\n                    type: string\n                    description: \"Location of the restqa project folder\"\n                    example: \"/home/john/project\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /api/restqa/steps:\n    get:\n      tags:\n        - RestQA\n      deprecated: false\n      operationId: stepDefinition\n      summary: Retrieve the list of step definition\n      parameters:\n        - name: keyword\n          in: query\n          required: false\n          schema:\n            type: string\n            example: when\n            enum:\n              - given\n              - when\n              - then\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/steps\"\n        \"403\":\n          description: Forbiden Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error403\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /api/restqa/generate:\n    post:\n      tags:\n        - RestQA\n      deprecated: false\n      operationId: generateScenario\n      summary: Generate a scenario from a curl command\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                cmd:\n                  description: \"Curl command to share\"\n                  example: \"curl https://jsonplaceholder.typicode.com/todos/1\"\n                  type: \"string\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/generate\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /api/restqa/install:\n    post:\n      tags:\n        - RestQA\n      deprecated: false\n      operationId: InstallIntegration\n      summary: Install an integration into the current configuration file\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: The name of the integration to install\n                  example: \"slack\"\n                  type: \"string\"\n                env:\n                  description: The target environment to install the integration\n                  example: \"slack\"\n                  type: \"string\"\n                config:\n                  description: Depending on the integration you will need to provide some parameters, check the documentation\n                  example: {\"url\": \"https://test.webhook.com\"}\n                  type: \"object\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/install\"\n        \"403\":\n          description: Forbiden Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error403\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /api/restqa/run:\n    post:\n      tags:\n        - RestQA\n      deprecated: false\n      operationId: RunTest\n      summary: Run the test suite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                path:\n                  description: The path of the feature file that need to be tested\n                  example: \"./test.feature\"\n                  type: \"string\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/example/reportJSON\"\n        \"403\":\n          description: Forbiden Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error403\"\n        \"406\":\n          description: Processing Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error406\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /reports:\n    get:\n      tags:\n        - Reports\n      deprecated: false\n      operationId: GetReportList\n      summary: Retrieve a list existing report on the server\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/definitions/report\"\n        \"500\":\n          description: Sever Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n    post:\n      tags:\n        - Reports\n      deprecated: false\n      operationId: CreateReport\n      summary: Create an html report from a RestQA Json test result\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/example/reportJSON\"\n\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/report\"\n        \"500\":\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /api/info:\n    get:\n      tags:\n        - API\n      deprecated: false\n      operationId: Information\n      summary: Retrieve a list usefull information\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/info\"\n        \"500\":\n          description: Sever Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n  /api/tips:\n    get:\n      tags:\n        - API\n      deprecated: false\n      operationId: Tips\n      summary: Retrieve a random tips\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/tips\"\n        \"500\":\n          description: Sever Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/error500\"\n\ndefinitions:\n  error403:\n    type: object\n    properties:\n      message:\n        type: string\n        example: \"You can't perform this action\"\n  error406:\n    type: object\n    properties:\n      message:\n        type: string\n        example: \"The configuration file has an issue\"\n  error500:\n    type: object\n    properties:\n      message:\n        type: string\n        example: \"Internal server error\"\n  version:\n    type: object\n    properties:\n      version:\n        type: string\n        example: 0.0.1\n  preferences:\n    type: object\n    properties:\n      telemetry:\n        type: boolean\n        example: true\n  steps:\n    type: array\n    items:\n      type: object\n      properties:\n        plugin:\n          type: string\n          example: \"@restqa/restapi\"\n          description: \"The plugin supporting the step definition\"\n        keyword:\n          type: string\n          example: \"when\"\n          description: \"The keyword matching the step definition\"\n        step:\n          type: string\n          example: \"i run the request\"\n          description: \"The step definition matching phrase\"\n        comment:\n          type: string\n          example: \"Perform the api request\"\n          description: \"A comment about the step definition\"\n  generate:\n    type: object\n    properties:\n      scenario:\n        type: string\n        example: 'Given I have the api gateway hosted on \\\"https://jsonplaceholder.typicode.com\\\"\\n  And I have the path \\\"/todos/1\\\"\\n  And I have the method \\\"GET\\\"\\nWhen I run the API\\nThen I should receive a response with the status 200\\n  And the response body should be equal to:\\n  \\\"\\\"\\\"\\n{\\n  \\\"userId\\\": 1,\\n  \\\"id\\\": 1,\\n  \\\"title\\\": \\\"delectus aut autem\\\",\\n  \\\"completed\\\": false\\n}\\n  \\\"\\\"\\\"'\n        description: \"The scenario generated from the curl command\"\n  install:\n    type: object\n    properties:\n      config:\n        type: string\n        example: 'version: 0.0.1\\nmetadata:\\n  code: APP\\n  name: app\\n  description: Configuration generated by restqa init\\nenvironments:\\n  - name: local\\n    default: true\\n    plugins:\\n      - name: \\\"@restqa/restqapi\\\"\\n        config:\\n          url: https://api.restqa.io\\n    outputs:\\n      - type: html\\n        enabled: true\\n      - type: slack\\n        enabled: true\\n        config:\\n          url: http://test.com\\n          onlyFailed: false\\'\n        description: \"The new version of the file generated\"\n  tips:\n    type: object\n    properties:\n      message:\n        type: string\n        example: \"Run the dashboard using restqa dashboard\"\n        description: \"A random message sharing a tip\"\n  report:\n    type: object\n    properties:\n      id:\n        type: string\n        example: 27e2d826-a2fd-4f01-abec-8471333112a5\n        description: \"The Id of the suite report\"\n      url:\n        type: string\n        example: \"https://exmaple.com/reports/27e2d826-a2fd-4f01-abec-8471333112a5\"\n        description: \"The url of the generated html report\"\n  config:\n    type: object\n    properties:\n      version:\n        type: string\n        example: 0.0.1\n        description: \"The version of the configuration\"\n      metadata:\n        type: object\n        properties:\n          code:\n            type: string\n            example: \"BACKEND-API\"\n            description: \"Code of the project\"\n          name:\n            type: string\n            example: \"backend api\"\n            description: \"Name of the project\"\n          description:\n            type: string\n            example: \"Backend api used by all the frontends\"\n            description: \"Description of your project\"\n      environments:\n        type: array\n        items:\n          type: object\n          properties:\n            name:\n              type: string\n              example: \"uat\"\n              description: \"The name of the environements\"\n            default:\n              type: boolean\n              example: true\n              description: \"Define is this environment is the default env\"\n            plugins:\n              type: array\n              description: \"List of plugin enabled for the current environement\"\n              items:\n                type: object\n                description: \"Plugin definition\"\n                properties:\n                  name:\n                    type: string\n                    description: \"Name of the plugin\"\n                    example: \"@restqa/restqapi\"\n                  config:\n                    type: object\n                    description: \"The configuration of the plugin\"\n                    properties:\n                      url:\n                        type: string\n                        description: \"The url of api that required to be tested\"\n                        example: \"https://api.example.com\"\n            outputs:\n              type: array\n              items:\n                type: object\n                description: \"The url of the generated html report\"\n                properties:\n                  type:\n                    type: string\n                    example: \"html\"\n                  enabled:\n                    type: boolean\n                    examplpe: true\n                  config:\n                    type: object\n  info:\n    type: object\n    properties:\n      team:\n        type: object\n        properties:\n          blog:\n            type: object\n            properties:\n              url:\n                type: string\n                example: \"https://medium.com/restqa\"\n              lastest:\n                type: object\n                properties:\n                  title:\n                    type: string\n                    example: \"RestQA is here! Do your end-to-end API test integration, the right way!\"\n                  date:\n                    type: string\n                    example: \"2021-02-02 02:24:19\"\n                    format: datetime\n                  image:\n                    type: string\n                    example: \"https://cdn-images-1.medium.com/max/1024/1*iyyY6QkAAE2bOzNRevfCuw.png\"\n                  author:\n                    type: object\n                    properties:\n                      username:\n                        type: string\n                        example: \"@Olivierodo\"\n                      avatar:\n                        type: string\n                        example: \"https://cdn-images-1.medium.com/fit/c/150/150/1*acYALd6w84KRScRNMpFLUg.jpeg\"\n                  url:\n                    type: string\n                    example: \"https://medium.com/restqa/restqa-is-here-do-your-end-to-end-api-test-integration-the-right-way-84b7313e1291\"\n          video:\n            type: object\n            properties:\n              url:\n                type: string\n                example: \"https://www.youtube.com/channel/UCdT6QenNLmnxNT-aT8nYq_Q\"\n              lastest:\n                type: object\n                properties:\n                  title:\n                    type: string\n                    example: \"RestQA\"\n                  date:\n                    type: string\n                    example: \"2021-04-17 03:00:30\"\n                    format: datetime\n                  image:\n                    type: string\n                    example: \"https://i2.ytimg.com/vi/EberYFGPZPo/hqdefault.jpg\"\n                  url:\n                    type: string\n                    example: \"https://www.youtube.com/watch?v=EberYFGPZPo\"\n          note:\n            type: object\n            properties:\n              message:\n                type: string\n                description: The team note to share\n                example: \"We love RestQA\"\n              from:\n                type: string\n                description: Team member that representing the note\n                example: \"John Doe\"\n              avatar:\n                type: string\n                description: Team member avatar\n                example: \"/avatar/john.png\"\n      sponsors:\n        type: array\n        items:\n          type: object\n          properties:\n            url:\n              type: string\n              description: The url of the sponsors website\n              example: \"https://atalent-consulting.com\"\n            name:\n              type: string\n              description: The name of the sponsor\n              example: \"RestQA is here! Do your end-to-end API test integration, the right way!\"\n            logo:\n              type: string\n              description: The logo of the sponsor\n              example: \"https://atalent-consulting.com/logo.png\"\n\n  features:\n    type: array\n    items:\n      type: string\n      example: \"./tests/customer-info.feature\"\n  featureFile:\n    type: string\n    example: \u003e\n      Feature: Example Feature\n\n\n      Scenario: My first scenario\n\n      Given I have the api gateway\n      ...\n\nexample:\n  reportJSON:\n    type: object\n    example:\n      {\n        \"id\": \"27e2d826-a2fd-4f01-abec-8471333112a5\",\n        \"startTime\": \"2021-05-11T07:41:00+00:00\",\n        \"name\": \"jsonplaceholder from typecode\",\n        \"key\": \"JSON-PLACEHOLDER\",\n        \"env\": \"local\",\n        \"duration\": 5.142,\n        \"success\": true,\n        \"durationFormat\": \"00:00\",\n        \"timestamp\": \"2021-05-11T07:41:00+00:00\",\n        \"type\": \"testSuite\",\n        \"total\": 6,\n        \"passed\": 5,\n        \"failed\": 1,\n        \"scenarios\": {\"passed\": 12, \"failed\": 0, \"skipped\": 1, \"undefined\": 0},\n        \"features\":\n          [\n            {\n              \"keyword\": \"Feature\",\n              \"line\": 1,\n              \"id\": \"delete-/todos/{id}\",\n              \"tags\": [],\n              \"uri\": \"../example/tests/integration/delete-todos-id.feature\",\n              \"elements\":\n                [\n                  {\n                    \"id\": \"delete-/todos/{id};delete-todos-by-id\",\n                    \"keyword\": \"Scenario\",\n                    \"line\": 3,\n                    \"name\": \"Delete todos by id\",\n                    \"tags\": [],\n                    \"type\": \"scenario\",\n                    \"steps\":\n                      [\n                        {\n                          \"keyword\": \"Before\",\n                          \"hidden\": true,\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/hooks.js:5\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 1000000}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"Given \",\n                          \"line\": 4,\n                          \"name\": \"I have the api gateway\",\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 1000000}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"And \",\n                          \"line\": 5,\n                          \"name\": 'I have the path \"/todos/45\"',\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"And \",\n                          \"line\": 6,\n                          \"name\": 'I have the method \"DELETE\"',\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"When \",\n                          \"line\": 7,\n                          \"name\": \"I run the API\",\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:11\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 686000000}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"Then \",\n                          \"line\": 8,\n                          \"name\": \"I should receive a response with the status 200\",\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0}\n                        },\n                        {\n                          \"keyword\": \"After\",\n                          \"hidden\": true,\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/hooks.js:39\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0},\n                          \"embeddings\":\n                            [\n                              {\n                                \"data\": \"{\\\"apis\\\":[{\\\"request\\\":{\\\"hostname\\\":\\\"jsonplaceholder.typicode.com\\\",\\\"port\\\":\\\"\\\",\\\"protocol\\\":\\\"https:\\\",\\\"pathname\\\":\\\"/todos/45\\\",\\\"hooks\\\":{\\\"afterResponse\\\":[null]},\\\"method\\\":\\\"delete\\\",\\\"headers\\\":{\\\"x-correlation-id\\\":\\\"test-e2e-delete-383-1620718855702\\\",\\\"user-agent\\\":\\\"restqa (https://github.com/restqa/restqa)\\\"},\\\"responseType\\\":\\\"json\\\"},\\\"response\\\":{\\\"body\\\":{},\\\"timing\\\":677,\\\"headers\\\":{\\\"date\\\":\\\"Tue, 11 May 2021 07:40:56 GMT\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"2\\\",\\\"connection\\\":\\\"close\\\",\\\"x-powered-by\\\":\\\"Express\\\",\\\"x-ratelimit-limit\\\":\\\"1000\\\",\\\"x-ratelimit-remaining\\\":\\\"999\\\",\\\"x-ratelimit-reset\\\":\\\"1620718895\\\",\\\"vary\\\":\\\"Origin, Accept-Encoding\\\",\\\"access-control-allow-credentials\\\":\\\"true\\\",\\\"cache-control\\\":\\\"no-cache\\\",\\\"pragma\\\":\\\"no-cache\\\",\\\"expires\\\":\\\"-1\\\",\\\"x-content-type-options\\\":\\\"nosniff\\\",\\\"etag\\\":\\\"W/\\\\\\\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\\\\\\\"\\\",\\\"via\\\":\\\"1.1 vegur\\\",\\\"cf-cache-status\\\":\\\"DYNAMIC\\\",\\\"cf-request-id\\\":\\\"09fbf83ec50000037ae3a20000000001\\\",\\\"expect-ct\\\":\\\"max-age=604800, report-uri=\\\\\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\\\\\"\\\",\\\"report-to\\\":\\\"{\\\\\\\"endpoints\\\\\\\":[{\\\\\\\"url\\\\\\\":\\\\\\\"https:\\\\\\\\/\\\\\\\\/a.nel.cloudflare.com\\\\\\\\/report?s=0%2FfuB6MyFZDepzy%2BuXzf6LoyyulRIabOJ6MWDe6c2hBRl%2Fm686xJ7EXrqqWrK6DyStn%2BYbxcdMPPHOUmI3CfQPs%2BMI2r82qFbnKXhlMYbkAtGe3Ec2qOe%2BbTIJa%2F\\\\\\\"}],\\\\\\\"group\\\\\\\":\\\\\\\"cf-nel\\\\\\\",\\\\\\\"max_age\\\\\\\":604800}\\\",\\\"nel\\\":\\\"{\\\\\\\"report_to\\\\\\\":\\\\\\\"cf-nel\\\\\\\",\\\\\\\"max_age\\\\\\\":604800}\\\",\\\"server\\\":\\\"cloudflare\\\",\\\"cf-ray\\\":\\\"64d9c3113e7e037a-SIN\\\",\\\"alt-svc\\\":\\\"h3-27=\\\\\\\":443\\\\\\\"; ma=86400, h3-28=\\\\\\\":443\\\\\\\"; ma=86400, h3-29=\\\\\\\":443\\\\\\\"; ma=86400\\\"},\\\"statusCode\\\":200,\\\"request\\\":{\\\"path\\\":\\\"/todos/45\\\",\\\"method\\\":\\\"delete\\\",\\\"prefix\\\":\\\"[DELETE /todos/45]\\\"}}}]}\",\n                                \"mime_type\": \"application/json\"\n                              }\n                            ]\n                        }\n                      ],\n                    \"step_passed\": 7,\n                    \"step_failed\": 0,\n                    \"step_skipped\": 0,\n                    \"step_undefined\": 0,\n                    \"result\": true,\n                    \"status\": \"passed\",\n                    \"duration\": 0.688,\n                    \"timestamp\": \"2021-05-11T07:41:00+00:00\",\n                    \"metadata\":\n                      {\n                        \"id\": \"27e2d826-a2fd-4f01-abec-8471333112a5\",\n                        \"startTime\": \"2021-05-11T07:41:00+00:00\",\n                        \"name\": \"jsonplaceholder from typecode\",\n                        \"key\": \"JSON-PLACEHOLDER\",\n                        \"env\": \"local\",\n                        \"duration\": 5.142,\n                        \"success\": true,\n                        \"durationFormat\": \"00:00\"\n                      }\n                  },\n                  {\n                    \"id\": \"delete-/todos/{id};get-todos-by-id-but-id-doesn't-exist\",\n                    \"keyword\": \"Scenario\",\n                    \"line\": 10,\n                    \"name\": \"Get todos by id but id doesn't exist\",\n                    \"tags\": [],\n                    \"type\": \"scenario\",\n                    \"steps\":\n                      [\n                        {\n                          \"keyword\": \"Before\",\n                          \"hidden\": true,\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/hooks.js:5\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"Given \",\n                          \"line\": 11,\n                          \"name\": \"I have the api gateway\",\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"And \",\n                          \"line\": 12,\n                          \"name\": 'I have the path \"/todos/300000\"',\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"And \",\n                          \"line\": 13,\n                          \"name\": 'I have the method \"DELETE\"',\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:6\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"When \",\n                          \"line\": 14,\n                          \"name\": \"I run the API\",\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:11\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 620000000}\n                        },\n                        {\n                          \"arguments\": [],\n                          \"keyword\": \"Then \",\n                          \"line\": 15,\n                          \"name\": \"I should receive a response with the status 200\",\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/steps/index.js:16\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0}\n                        },\n                        {\n                          \"keyword\": \"After\",\n                          \"hidden\": true,\n                          \"match\":\n                            {\n                              \"location\": \"../node_modules/@restqa/restqapi/src/restqapi/hooks.js:39\"\n                            },\n                          \"result\": {\"status\": \"passed\", \"duration\": 0},\n                          \"embeddings\":\n                            [\n                              {\n                                \"data\": \"{\\\"apis\\\":[{\\\"request\\\":{\\\"hostname\\\":\\\"jsonplaceholder.typicode.com\\\",\\\"port\\\":\\\"\\\",\\\"protocol\\\":\\\"https:\\\",\\\"pathname\\\":\\\"/todos/300000\\\",\\\"hooks\\\":{\\\"afterResponse\\\":[null]},\\\"method\\\":\\\"delete\\\",\\\"headers\\\":{\\\"x-correlation-id\\\":\\\"test-e2e-delete-174-1620718856391\\\",\\\"user-agent\\\":\\\"restqa (https://github.com/restqa/restqa)\\\"},\\\"responseType\\\":\\\"json\\\"},\\\"response\\\":{\\\"body\\\":{},\\\"timing\\\":617,\\\"headers\\\":{\\\"date\\\":\\\"Tue, 11 May 2021 07:40:57 GMT\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"2\\\",\\\"connection\\\":\\\"close\\\",\\\"x-powered-by\\\":\\\"Express\\\",\\\"x-ratelimit-limit\\\":\\\"1000\\\",\\\"x-ratelimit-remaining\\\":\\\"998\\\",\\\"x-ratelimit-reset\\\":\\\"1620718895\\\",\\\"vary\\\":\\\"Origin, Accept-Encoding\\\",\\\"access-control-allow-credentials\\\":\\\"true\\\",\\\"cache-control\\\":\\\"no-cache\\\",\\\"pragma\\\":\\\"no-cache\\\",\\\"expires\\\":\\\"-1\\\",\\\"x-content-type-options\\\":\\\"nosniff\\\",\\\"etag\\\":\\\"W/\\\\\\\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\\\\\\\"\\\",\\\"via\\\":\\\"1.1 vegur\\\",\\\"cf-cache-status\\\":\\\"DYNAMIC\\\",\\\"cf-request-id\\\":\\\"09fbf8415b0000e26c76968000000001\\\",\\\"expect-ct\\\":\\\"max-age=604800, report-uri=\\\\\\\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\\\\\\\"\\\",\\\"report-to\\\":\\\"{\\\\\\\"endpoints\\\\\\\":[{\\\\\\\"url\\\\\\\":\\\\\\\"https:\\\\\\\\/\\\\\\\\/a.nel.cloudflare.com\\\\\\\\/report?s=duxVRycwVgiKrQjLV%2B2bydqSsJstGUr3qGZH4O%2BGZv2QPaCHoDOnbOSfTBnW2A7hlSYATl6Kfy4M07aFn9lHKjPWwp4SPRjVN4n84CrRgr1xsQA1Ez1VPnjOYI2N\\\\\\\"}],\\\\\\\"group\\\\\\\":\\\\\\\"cf-nel\\\\\\\",\\\\\\\"max_age\\\\\\\":604800}\\\",\\\"nel\\\":\\\"{\\\\\\\"report_to\\\\\\\":\\\\\\\"cf-nel\\\\\\\",\\\\\\\"max_age\\\\\\\":604800}\\\",\\\"server\\\":\\\"cloudflare\\\",\\\"cf-ray\\\":\\\"64d9c3155e5ce26c-SIN\\\",\\\"alt-svc\\\":\\\"h3-27=\\\\\\\":443\\\\\\\"; ma=86400, h3-28=\\\\\\\":443\\\\\\\"; ma=86400, h3-29=\\\\\\\":443\\\\\\\"; ma=86400\\\"},\\\"statusCode\\\":200,\\\"request\\\":{\\\"path\\\":\\\"/todos/300000\\\",\\\"method\\\":\\\"delete\\\",\\\"prefix\\\":\\\"[DELETE /todos/300000]\\\"}}}]}\",\n                                \"mime_type\": \"application/json\"\n                              }\n                            ]\n                        }\n                      ],\n                    \"step_passed\": 7,\n                    \"step_failed\": 0,\n                    \"step_skipped\": 0,\n                    \"step_undefined\": 0,\n                    \"result\": true,\n                    \"status\": \"passed\",\n                    \"duration\": 0.62,\n                    \"timestamp\": \"2021-05-11T07:41:00+00:00\",\n                    \"metadata\":\n                      {\n                        \"id\": \"27e2d826-a2fd-4f01-abec-8471333112a5\",\n                        \"startTime\": \"2021-05-11T07:41:00+00:00\",\n                        \"name\": \"jsonplaceholder from typecode\",\n                        \"key\": \"JSON-PLACEHOLDER\",\n                        \"env\": \"local\",\n                        \"duration\": 5.142,\n                        \"success\": true,\n                        \"durationFormat\": \"00:00\"\n                      }\n                  }\n                ],\n              \"total\": 2,\n              \"passed\": 2,\n              \"failed\": 0,\n              \"skipped\": 0,\n              \"undefined\": 0,\n              \"result\": true,\n              \"duration\": 1.3079999999999998,\n              \"timestamp\": \"2021-05-11T07:41:00+00:00\",\n              \"type\": \"feature\",\n              \"feature_name\": \"DELETE /todos/{id}\",\n              \"metadata\":\n                {\n                  \"id\": \"27e2d826-a2fd-4f01-abec-8471333112a5\",\n                  \"startTime\": \"2021-05-11T07:41:00+00:00\",\n                  \"name\": \"jsonplaceholder from typecode\",\n                  \"key\": \"JSON-PLACEHOLDER\",\n                  \"env\": \"local\",\n                  \"duration\": 5.142,\n                  \"success\": true,\n                  \"durationFormat\": \"00:00\"\n                }\n            }\n          ]\n      }\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/project/features/{path}: get: operation \"getProjectFeatureFile\": parse path \"/api/project/features/{path}\": path parameter not specified: \"path\""
}