{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AICPA-ADS/AuditData-API"
		},
		"file": {
			"name": "index.yml",
			"size": 0,
			"path": "GL/index.yml",
			"byteSize": 4945,
			"content": "#------LICENSE--------\n#MIT License\n#\n#Copyright (c) 2020 AICPA\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nopenapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  title: Audit Data Open Api Project (AICPA) - General Ledger Module\n  description: This is an initial API specification for requesting GL data \n\npaths:\n  /Journals:\n    get:\n      operationId: GetGLDetails\n      tags: [General Ledger]      \n      description: \u003e\n       Allows searching for General Ledger Journal Transactions\n      parameters:\n        - name: startDate\n          in: query\n          description: Start date for GL transactions.  Returns all transactions with an `EffectiveDate` after `the startDate`.\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: endDate\n          in: query\n          description: End date for GL transactions.  Returns all transactions with an `EffectiveDate` before `the endDate`.\n          required: false\n          schema:\n            type: string\n            format: date\n\n        - $ref: '../shared/parameters/index.yml#/entityIdRequiredParam'\n           \n        \n      responses:\n        '200':\n          description: __GLDetails__ successfully accepted\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/index.yml#/GLDetails'\n\n        '400':\n          $ref: '../shared/responses/index.yml#/BadRequest'\n\n  /TrialBalance:\n    get:\n      operationId: GetTBDetails\n      tags: [General Ledger]      \n      description: \u003e\n        Allows searching for General Ledger Trial Balance Totals. Returns JSON responses (required for all implementation). Optionally, returns XBRL-formatted JSON documents, which should be requested by the calling client using the `Accept: application/xbrl+json` HTTP header.\n      parameters:\n        - name: startDate\n          in: query\n          description: Start date (No time) for Trial Balance.  Returns balances at the start of the year after opening adjustments to retained earnings and adjustments for changes in accounting standards.\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: endDate\n          in: query\n          description: End date for the trial balance.  Returns all the values at the provided `endDate`, which may also be treated as an \"as of\" date.\n          required: true\n          schema:\n            type: string\n            format: date\n        \n        - name: BudgetFlag\n          in: query\n          description: Flag to indicate if budget data should be returned. If not provided the default is actual data. To get budget data only a parameter of \"budget\" is used. To get both a parameter of \"both\" is passed.\n          required: false\n          schema:\n            type: string\n            enum: [budget, both]\n\n        - $ref: '../shared/parameters/index.yml#/entityIdRequiredParam'            \n        \n      responses:\n        '200':\n          description: __GetTBDetails__ successfully accepted\n          content:  \n            application/json:\n              schema:\n                $ref: './schemas/index.yml#/GLAccountBalances'\n            application/xbrl+json:\n              schema:\n                $ref: \"./schemas/index.yml#/XbrlTbResponse\"\n        '400':\n          $ref: '../shared/responses/index.yml#/BadRequest'\n\n  /Accounts:\n    get:\n      operationId: GetChartAccounts\n      tags: [General Ledger]      \n      description: \u003e\n        Allows requesting a listing of chart of accounts \n      parameters:\n        - $ref: '../shared/parameters/index.yml#/entityIdRequiredParam' \n        \n      responses:\n        '200':\n          description: _GLChartOfAccounts_ successfully accepted\n          content:  \n            application/json:\n              schema:\n                $ref: './schemas/index.yml#/GLChartOfAccounts'\n        '400':\n          $ref: '../shared/responses/index.yml#/BadRequest'"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /Journals: get: operation \"GetGLDetails\": parameters: parse parameter \"\": resolve \"../shared/parameters/index.yml#/entityIdRequiredParam\" reference: invalid parameter reference: \"../shared/parameters/index.yml#/entityIdRequiredParam\""
}