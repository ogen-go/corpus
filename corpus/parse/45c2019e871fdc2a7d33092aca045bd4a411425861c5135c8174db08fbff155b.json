{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/syndesisio/syndesis"
		},
		"file": {
			"name": "kie-server.json",
			"size": 0,
			"path": "app/server/api-generator/src/test/resources/openapi/v3/kie-server.json",
			"byteSize": 635902,
			"content": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"Kie Server API\",\n        \"version\": \"7.0.0\",\n        \"description\": \"All endpoints that can be used with the Kie Server\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"/kie-server/services/rest\"\n        }\n    ],\n    \"paths\": {\n        \"/server\": {\n            \"get\": {\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getInfo\",\n                \"summary\": \"Retrieves KIE Server information - id, name, location, capabilities, messages\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/cases/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Administration of cases :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional case instance status (open, closed, canceled) - defaults ot open (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"open\",\n                                    \"closed\",\n                                    \"cancelled\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstances\",\n                \"summary\": \"Retrieves case instances without authntication checks and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/errors\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that errors belong to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"includeAck\",\n                        \"description\": \"optional flag that indicates if acknowledged errors should also be collected, defaults to false\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getExecutionErrors\",\n                \"summary\": \"Retrieves execution errors for container, applies pagination\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that errors belong to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"errorId\",\n                        \"description\": \"list of error identifiers to be acknowledged\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Execution error or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"acknowledgeErrors\",\n                \"summary\": \"Acknowledges given execution errors\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/errors/{errorId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process error belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"errorId\",\n                        \"description\": \"identifier of error to be loaded\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getExecutionErrorById\",\n                \"summary\": \"Retrieve execution error by its identifier\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that error belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"errorId\",\n                        \"description\": \"identifier of error to be acknowledged\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Execution error or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"acknowledgeError\",\n                \"summary\": \"Acknowledge execution error by given id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"node mapping - unique ids of old definition to new definition given as Map\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instances belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"list of identifiers of process instance to be migrated\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int64\",\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"targetContainerId\",\n                        \"description\": \"container id that new process definition belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"targetProcessId\",\n                        \"description\": \"process definition that process instances should be migrated to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/migration-report-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/migration-report-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"migrateProcessInstances\",\n                \"summary\": \"Migrates process instances to new container and process definition with optional node mapping\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances/{pInstanceId}\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"node mapping - unique ids of old definition to new definition given as Map\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance to be migrated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"targetContainerId\",\n                        \"description\": \"container id that new process definition belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"targetProcessId\",\n                        \"description\": \"process definition that process instance should be migrated to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/migration-report-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/migration-report-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"migrateProcessInstance\",\n                \"summary\": \"Migrates process instance to new container and process definition with optional node mapping\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances/{pInstanceId}/errors\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance that errors should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"includeAck\",\n                        \"description\": \"optional flag that indicates if acknowledged errors should also be collected, defaults to false\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"node\",\n                        \"description\": \"optional name of the node in the process instance to filter by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getExecutionErrorsByProcessInstance\",\n                \"summary\": \"Retrieves execution errors for process instance and container, applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances/{pInstanceId}/nodeinstances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance that active nodes instances should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getActiveNodeInstances\",\n                \"summary\": \"Retrieves all active node instances from process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances/{pInstanceId}/nodeinstances/{nodeInstanceId}\": {\n            \"put\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance that node instance belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"nodeInstanceId\",\n                        \"description\": \"identifier of node instance that should be retriggered\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance, node instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"retriggerNodeInstance\",\n                \"summary\": \"Retriggers given node instance within process instance and container\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance that node instance belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"nodeInstanceId\",\n                        \"description\": \"identifier of node instance that should be canceled\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance, node instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"cancelNodeInstance\",\n                \"summary\": \"Cancels given node instance within process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances/{pInstanceId}/nodes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance that process nodes should be collected from\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-node-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-node-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getNodes\",\n                \"summary\": \"Retrieves all nodes from process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances/{pInstanceId}/nodes/{nodeId}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance where node should be triggered\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"nodeId\",\n                        \"description\": \"identifier of the node to be triggered\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance, node instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"triggerNode\",\n                \"summary\": \"Triggers node within process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances/{pInstanceId}/timers\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance that timer instances should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/timer-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/timer-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTimerInstances\",\n                \"summary\": \"Retrieves all active timer instance from process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/processes/instances/{pInstanceId}/timers/{timerId}\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"Map of timer expressions - deplay, perios and repeat are allowed values in the map\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Process instances administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of process instance that timer belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"timerId\",\n                        \"description\": \"identifier of timer instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"relative\",\n                        \"description\": \"optional flag that indicates if the time expression is relative to the current date or not, defaults to true\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance, node instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"updateTimer\",\n                \"summary\": \"Updates timer instance within process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/errors\": {\n            \"get\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"includeAck\",\n                        \"description\": \"optional flag that indicates if acknowledged errors should also be collected, defaults to false\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"name\",\n                        \"description\": \"optional name of the task to filter by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"process\",\n                        \"description\": \"optional process id that the task belongs to to filter by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getExecutionErrors\",\n                \"summary\": \"Retrieves execution errors for container, allows to filter by task name and/or process id, applies pagination\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that errors belong to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"errorId\",\n                        \"description\": \"list of identifiers of execution errors to be acknowledged\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"acknowledgeErrors\",\n                \"summary\": \"Acknowledges given execution errors\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/errors/{errorId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that error belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"errorId\",\n                        \"description\": \"identifier of the execution error to load\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getExecutionErrorById\",\n                \"summary\": \"Retrieve execution error by its identifier\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that error belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"errorId\",\n                        \"description\": \"identifier of the execution error to be acknowledged\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"acknowledgeError\",\n                \"summary\": \"Acknowledges given execution error\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/admins\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"list of users/groups to be added as business admins, as OrgEntities type\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"remove\",\n                        \"description\": \"optional flag that indicates if existing business admins should be removed, defaults to false\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addAdmins\",\n                \"summary\": \"Adds business admins to given task instance, optionally removing existing ones\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/admins/groups/{entityId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"entityId\",\n                        \"description\": \"list of groups to be removed from business admin list\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removeAdminsGroups\",\n                \"summary\": \"Removes business admin groups from given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/admins/users/{entityId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"entityId\",\n                        \"description\": \"list of users to be removed from business admin list\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removeAdminsUsers\",\n                \"summary\": \"Removes business admins from given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/contents/input\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"map of data to be set as task inputs, as Map\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addTaskInputs\",\n                \"summary\": \"Adds task inputs to given task instance\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"name\",\n                        \"description\": \"one or more names of task inputs to be removed\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removeTaskInputs\",\n                \"summary\": \"Removes task inputs referenced by names from given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/contents/output\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"name\",\n                        \"description\": \"one or more names of task outputs to be removed\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removeTaskOutputs\",\n                \"summary\": \"Removes task outputs referenced by names from given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/errors\": {\n            \"get\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that errors should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"includeAck\",\n                        \"description\": \"optional flag that indicates if acknowledged errors should also be collected, defaults to false\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/execution-error-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getExecutionErrorsByTask\",\n                \"summary\": \"Retrieves execution errors for task instance and container, applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/exl-owners\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"list of users/groups to be added as excluded owners, as OrgEntities type\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"remove\",\n                        \"description\": \"optional flag that indicates if existing excluded owners should be removed, defaults to false\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addExcludedOwners\",\n                \"summary\": \"Adds excluded owners to given task instance, optionally removing existing ones\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/exl-owners/groups/{entityId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"entityId\",\n                        \"description\": \"list of groups to be removed from excluded owners list\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removeExcludedOwnersGroups\",\n                \"summary\": \"Removes excluded owners groups from given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/exl-owners/users/{entityId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"entityId\",\n                        \"description\": \"list of users to be removed from excluded owners list\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removeExcludedOwnersUsers\",\n                \"summary\": \"Removes excluded owners from given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/notifications\": {\n            \"get\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"activeOnly\",\n                        \"description\": \"optional flag that indicates if active only notifications should be collected, defaults to true\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-notification-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-notification-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskNotifications\",\n                \"summary\": \"Retrieves notifications for given task\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"email notification details, as EmailNotification type\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"expiresAt\",\n                        \"description\": \"time expression for notification\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"whenNotStarted\",\n                        \"description\": \"optional flag that indicates the type of notification, either whenNotStarted or whenNotCompleted must be set\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"whenNotCompleted\",\n                        \"description\": \"optional flag that indicates the type of notification, either whenNotStarted or whenNotCompleted must be set\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"notify\",\n                \"summary\": \"Schedules new notification for given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/notifications/{notificationId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"notificationId\",\n                        \"description\": \"identifier of notification to be canceled\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"cancelNotification\",\n                \"summary\": \"Cancels notification for given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/pot-owners\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"list of users/groups to be added as potential owners, as OrgEntities type\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"remove\",\n                        \"description\": \"optional flag that indicates if existing potential owners should be removed, defaults to false\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addPotentialOwners\",\n                \"summary\": \"Adds potential owners to given task instance, optionally removing existing ones\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/pot-owners/groups/{entityId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"entityId\",\n                        \"description\": \"list of groups to be removed from potantial owners list\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removePotentialOwnersGroups\",\n                \"summary\": \"Removes potential owner groups from given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/pot-owners/users/{entityId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"entityId\",\n                        \"description\": \"list of users to be removed from potantial owners list\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removePotentialOwnersUsers\",\n                \"summary\": \"Removes potential owners from given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/reassignments\": {\n            \"get\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"activeOnly\",\n                        \"description\": \"optional flag that indicates if active only reassignmnets should be collected, defaults to true\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-reassignment-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-reassignment-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskReassignments\",\n                \"summary\": \"Retrieves reassignments for given task\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"list of users/groups that task should be reassined to, as OrgEntities type\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"expiresAt\",\n                        \"description\": \"time expression for reassignmnet\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"whenNotStarted\",\n                        \"description\": \"optional flag that indicates the type of reassignment, either whenNotStarted or whenNotCompleted must be set\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"whenNotCompleted\",\n                        \"description\": \"optional flag that indicates the type of reassignment, either whenNotStarted or whenNotCompleted must be set\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"reassign\",\n                \"summary\": \"Schedules new reassign of given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/admin/containers/{id}/tasks/{tInstanceId}/reassignments/{reassignmentId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User tasks administration :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"reassignmentId\",\n                        \"description\": \"identifier of reassignment to be canceled\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"cancelReassignment\",\n                \"summary\": \"Cancels reassignment for given task instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/config\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"command script payload\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"KIE Server Script :: Core\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/responses\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/responses\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"executeCommands\",\n                \"summary\": \"Executes command script on execution server, usually used as a batch to configure KIE Server\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers\": {\n            \"get\": {\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"groupId\",\n                        \"description\": \"optional groupId to filter containers by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"artifactId\",\n                        \"description\": \"optional artifactId to filter containers by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"version\",\n                        \"description\": \"optional version to filter containers by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"status\",\n                        \"description\": \"optional status to filter containers by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"listContainers\",\n                \"summary\": \"Retrieves containers deployed to this server, optionally filtered by group, artifact, version or status\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/instances/{id}\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"Commands to be executed on rule engine given as BatchExecutionCommand type\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Rules evaluation :: BRM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id where rules should be evaluated on\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"manageContainer\",\n                \"summary\": \"Evaluates rules by executing commands on the rule session\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id to be retrieved\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getContainerInfo\",\n                \"summary\": \"Retrieves container with given id\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"KIE Container resource to be deployed as KieContainerResource\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id to be assigned to deployed KIE Container\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"container could not be created\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"createContainer\",\n                \"summary\": \"Creates (deploys) new KIE container to this server\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id to be disposed (undeployed)\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"disposeContainer\",\n                \"summary\": \"Disposes (undeploys) container with given id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/definitions\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that should be used to filter case definitions\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-definition-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-definition-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseDefinitionsByContainer\",\n                \"summary\": \"Retrieves case definition for given container only, applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/definitions/{caseDefId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that should be used to filter case definitions\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseDefId\",\n                        \"description\": \"case definition id that should be loaded\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-definition\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-definition\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseDefinitionsByDefinition\",\n                \"summary\": \"Retrieves case definition for given container and case definition id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that should be used to filter case instances\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional case instance status (open, closed, canceled) - defaults ot open (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"open\",\n                                    \"closed\",\n                                    \"cancelled\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstancesByContainer\",\n                \"summary\": \"Retrieves case instances for given container only, allows to filter by case instance status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"withData\",\n                        \"description\": \"optional flag to load data when loading case instance\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"withRoles\",\n                        \"description\": \"optional flag to load roles when loading case instance\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"withMilestones\",\n                        \"description\": \"optional flag to load milestones when loading case instance\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"withStages\",\n                        \"description\": \"optional flag to load stages when loading case instance\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstance\",\n                \"summary\": \"Retrieves active case instance by given identifier (case id) with optionally loading data, roles, milestones and stages\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"optional comment when closing a case instance as String\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"closeCaseInstance\",\n                \"summary\": \"Closes case instance with given identifier (case id) optionally with comment\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"destroy\",\n                        \"description\": \"allows to destroy (permanently) case instance as part of the cancel operation, defaults to false\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"cancelCaseInstance\",\n                \"summary\": \"Cancels case instance with given identifier (case id) it can also when intructed permanently destroy the case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/adhocfragments\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-adhoc-fragment-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-adhoc-fragment-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceAdHocFragments\",\n                \"summary\": \"Retrieves adhoc fragments from case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/caseFile\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"name\",\n                        \"description\": \"optional name(s) of the data items to retrieve\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceData\",\n                \"summary\": \"Retrieves case instance data as map where key is the name of data item and value is actual instance of the data item from case file\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"map of data to be placed in case file as Map\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"restrictedTo\",\n                        \"description\": \"optional role name(s) that given data should be restricted to\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"putCaseInstanceData\",\n                \"summary\": \"Puts new data (map of variables) into case instance's case file\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"dataId\",\n                        \"description\": \"one or more names of the data items to be removed from case file\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"deleteCaseInstanceData\",\n                \"summary\": \"Removes data items identified by name(s) from case instance's case file\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/caseFile/{dataId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"dataId\",\n                        \"description\": \"name of the data item within case file to retrieve\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceDataByName\",\n                \"summary\": \"Retrieves case instance data by data item name\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"data to be placed in case file, any type can be provided\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"dataId\",\n                        \"description\": \"name of the data item to be added to case file\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"restrictedTo\",\n                        \"description\": \"optional role name(s) that given data should be restricted to\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"putCaseInstanceDataByName\",\n                \"summary\": \"Puts new data (single data identified by name) into case instance's case file\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/comments\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-comment-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-comment-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceComments\",\n                \"summary\": \"Retrieves comments from case instance\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"actual content of the comment to be added as String\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"author\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"restrictedTo\",\n                        \"description\": \"optional role name(s) that given comment should be restricted to\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addComment\",\n                \"summary\": \"Adds new comment to given case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/comments/{caseCommentId}\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"actual content of the comment to be updated to as String\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseCommentId\",\n                        \"description\": \"identifier of the comment to be updated\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"author\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"restrictedTo\",\n                        \"description\": \"optional role name(s) that given comment should be restricted to\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"updateComment\",\n                \"summary\": \"Updates comment within case instance\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseCommentId\",\n                        \"description\": \"identifier of the comment to be removed\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removeComment\",\n                \"summary\": \"Removes given comment from case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/milestones\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"achievedOnly\",\n                        \"description\": \"optional flag that allows to control which milestones to load - achieved only or actives ones too, defaults to true\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-milestone-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-milestone-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceMilestones\",\n                \"summary\": \"Retrieves milestones from case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/nodes/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"completed\",\n                        \"description\": \"optional flag that allows to control which node instances to load - active or completed, defaults to false loading only active ones\",\n                        \"schema\": {\n                            \"default\": false,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceActiveNodes\",\n                \"summary\": \"Retrieves node instances from case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/processes/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional process instance status (active, completed, aborted) - defaults ot active (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int32\",\n                                \"enum\": [\n                                    \"1\",\n                                    \"2\",\n                                    \"3\"\n                                ],\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceProcessInstance\",\n                \"summary\": \"Retrieves process isntances that compose complete case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/processes/{pId}\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"data for dynamic subprocess\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id of the subprocess to be added\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addDynamicProcessToCase\",\n                \"summary\": \"Adds dynamic subprocess identified by process id to case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/roles\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-role-assignment-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-role-assignment-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceRoleAssignments\",\n                \"summary\": \"Retrieves role assignments from case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/roles/{caseRoleName}\": {\n            \"put\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseRoleName\",\n                        \"description\": \"name of the case role the assignment should be set\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"user to be aded to case role for given case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"group\",\n                        \"description\": \"group to be aded to case role for given case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addRoleAssignment\",\n                \"summary\": \"Adds new role assignment for given case, it can be either user or group based assignment\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseRoleName\",\n                        \"description\": \"name of the case role the assignment should be removed\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"user to be removed from case role for given case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"group\",\n                        \"description\": \"group to be removed from case role for given case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"removeRoleAssignment\",\n                \"summary\": \"Removes role assignment from user or group for given case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/stages\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"activeOnly\",\n                        \"description\": \"optional flag that allows to control which stages to load - active only or completed ones too, defaults to true\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-stage-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-stage-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceStages\",\n                \"summary\": \"Retrieves stages from case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/stages/{caseStageId}/processes/{pId}\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"data for dynamic subprocess\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseStageId\",\n                        \"description\": \"identifier of the stage within case instance where dynamic subprocess should be added\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id of the subprocess to be added\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addDynamicProcessToCase\",\n                \"summary\": \"Adds dynamic subprocess identified by process id to stage within case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/stages/{caseStageId}/tasks\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"data for dynamic task (it represents task specification that drives the selection of the type of task)\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseStageId\",\n                        \"description\": \"identifier of the stage within case instance where dynamic task should be added\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addDynamicTaskToCase\",\n                \"summary\": \"Adds dynamic task (user or service depending on the payload) to given stage within case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/stages/{caseStageId}/tasks/{nodeName}\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"optional data to be given when triggering adhoc fragment\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseStageId\",\n                        \"description\": \"identifier of the stage within case instance where adhoc fragment should be triggered\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"nodeName\",\n                        \"description\": \"name of the adhoc fragment to be triggered\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"triggerAdHocNodeInStage\",\n                \"summary\": \"Triggers ad hoc fragment in stage within case instance with optional data\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/tasks\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"data for dynamic task (it represents task specification that drives the selection of the type of task)\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addDynamicTaskToCase\",\n                \"summary\": \"Adds dynamic task (user or service depending on the payload) to case instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/instances/{caseId}/tasks/{nodeName}\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"optional data to be given when triggering adhoc fragment\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that case instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"nodeName\",\n                        \"description\": \"name of the adhoc fragment to be triggered\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"triggerAdHocNode\",\n                \"summary\": \"Triggers ad hoc fragment in case instance with optional data\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/{caseDefId}/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that should be used to filter case instances\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseDefId\",\n                        \"description\": \"case definition id that should be used to filter case instances\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional case instance status (open, closed, canceled) - defaults ot open (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"open\",\n                                    \"closed\",\n                                    \"cancelled\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstancesByDefinition\",\n                \"summary\": \"Retrieves case instances for given case definition only, allows to filter by case instance status and applies pagination\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"optional CaseFile with variables and/or case role assignments\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the case definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseDefId\",\n                        \"description\": \"case definition id that new instance should be created from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Case definition or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"startCase\",\n                \"summary\": \"Starts new case instance of given case definition within given container with optional initial CaseFile (that provides variables and case role assignment)\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/cases/{caseDefId}/instances/{caseId}\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"optional CaseFile with variables and/or case role assignments\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Case instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the case definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseDefId\",\n                        \"description\": \"case definition id that new instance should be created from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"identifier of the case instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Case instance not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"reopenCase\",\n                \"summary\": \"Reopens case instance with given identifier (case id) by initiating given case definition\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/dmn\": {\n            \"get\": {\n                \"tags\": [\n                    \"Decision Service :: DMN\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id that modesl should be loaded from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Models or container not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getModels\",\n                \"summary\": \"Retrieves DMN model for given container\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"DMN context to be used while evaluation decisions as DMNContextKS type\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Decision Service :: DMN\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id to be used to evaluate decisions on\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Container not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"evaluateDecisions\",\n                \"summary\": \"Evaluates decisions for given imput\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/forms/processes/{pId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task forms :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process definition belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"identifier of process definition that form should be fetched for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"lang\",\n                        \"description\": \"optional language that the form should be found for\",\n                        \"schema\": {\n                            \"default\": \"en\",\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"filter\",\n                        \"description\": \"optional filter flag if form should be filtered or returned as is\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"type\",\n                        \"description\": \"optional type of the form, defaults to ANY so system will find the most current one\",\n                        \"schema\": {\n                            \"default\": \"ANY\",\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"marshallContent\",\n                        \"description\": \"optional marshall content flag if the content should be transformed or not, defaults to true\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process definition, form or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessForm\",\n                \"summary\": \"Retrieves form for process definition within a container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/forms/tasks/{tInstanceId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task forms :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of task instance that form should be fetched for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"lang\",\n                        \"description\": \"optional language that the form should be found for\",\n                        \"schema\": {\n                            \"default\": \"en\",\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"filter\",\n                        \"description\": \"optional filter flag if form should be filtered or returned as is\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"type\",\n                        \"description\": \"optional type of the form, defaults to ANY so system will find the most current one\",\n                        \"schema\": {\n                            \"default\": \"ANY\",\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"marshallContent\",\n                        \"description\": \"optional marshall content flag if the content should be transformed or not, defaults to true\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task, form or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskForm\",\n                \"summary\": \"Retrieves form for task instance within a container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/images/processes/instances/{pInstanceId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process definition and instance images :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that image should be loaded for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/svg+xml\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance, image or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstanceImage\",\n                \"summary\": \"Retrieves process instance image\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/images/processes/{pId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process definition and instance images :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process definition belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"identifier of the process definition that image should be loaded for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/svg+xml\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process definition, image or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessImage\",\n                \"summary\": \"Retrieves process definition image\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definitions\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definitions\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessesByDeploymentId\",\n                \"summary\": \"Retrieves process definitions that belong to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/definitions/{pId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task definitions :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that the definition should be retrieved for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definition\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definition\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessDefinition\",\n                \"summary\": \"Retrieves process definition identified by given process id within given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/definitions/{pId}/entities\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task definitions :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that the involved actors and groups should be retrieved from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-associated-entities\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-associated-entities\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getAssociatedEntities\",\n                \"summary\": \"Retrieves actors and groups that are involved in given process and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/definitions/{pId}/subprocesses\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task definitions :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that subprocesses should be retrieved from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-subprocesses\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-subprocesses\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getReusableSubProcesses\",\n                \"summary\": \"Retrieves sub process definitions that are defined in given process within given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/definitions/{pId}/tasks/service\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task definitions :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that the service task definitions should be retrieved from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-service-tasks\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-service-tasks\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getServiceTasks\",\n                \"summary\": \"Retrieves service tasks definitions that are present in given process and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/definitions/{pId}/tasks/users\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task definitions :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that the user task definitions should be retrieved from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/user-task-definitions\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/user-task-definitions\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTasksDefinitions\",\n                \"summary\": \"Retrieves user tasks definitions that are present in given process and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/definitions/{pId}/tasks/users/{taskName}/inputs\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task definitions :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that given task belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"taskName\",\n                        \"description\": \"task name that input variable definitions should be retrieved for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-task-inputs\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-task-inputs\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskInputMappings\",\n                \"summary\": \"Retrieves input variables defined on a given user task\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/definitions/{pId}/tasks/users/{taskName}/outputs\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task definitions :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that given task belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"taskName\",\n                        \"description\": \"task name that output variable definitions should be retrieved for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-task-outputs\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-task-outputs\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskOutputMappings\",\n                \"summary\": \"Retrieves output variables defined on a given user task\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/definitions/{pId}/variables\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process and task definitions :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that the variable definitions should be retrieved from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-variables\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-variables\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessVariables\",\n                \"summary\": \"Retrieves process variables definitions that are present in given process and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional process instance status (active, completed, aborted) - defaults ot active (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int32\",\n                                \"enum\": [\n                                    \"1\",\n                                    \"2\",\n                                    \"3\"\n                                ],\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstancesByDeploymentId\",\n                \"summary\": \"Retrieves process instances that belong to given container\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"instanceId\",\n                        \"description\": \"list of identifiers of the process instances to be aborted\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int64\",\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"abortProcessInstances\",\n                \"summary\": \"Aborts active process instances identified by given list of identifiers\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/signal/{sName}\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"optional event data - any type can be provided\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"instanceId\",\n                        \"description\": \"list of identifiers of the process instances to be signaled\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int64\",\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"sName\",\n                        \"description\": \"signal name to be send to process instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"signalProcessInstances\",\n                \"summary\": \"Signals active process instances identified by given ids with singal name and optional event data\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance to be fetched\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"withVars\",\n                        \"description\": \"indicates if process instance variables should be loaded or not\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstance\",\n                \"summary\": \"Retrieves process instance identified by given id optionally with variables (variables will be loaded only for active process instance)\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance to be aborted\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"abortProcessInstance\",\n                \"summary\": \"Aborts active process instance identified by given id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/nodes/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that history should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"activeOnly\",\n                        \"description\": \"instructs if active nodes only should be collected, defaults to false\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"completedOnly\",\n                        \"description\": \"instructs if completed nodes only should be collected, defaults to false\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstanceHistory\",\n                \"summary\": \"Retrieves node instances for given process instance. Depending on provided query parameters (activeOnly or completedOnly) will return active and/or completes nodes\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/processes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the parent process instance that process instances should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional process instance status (active, completed, aborted) - defaults ot active (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int32\",\n                                \"enum\": [\n                                    \"1\",\n                                    \"2\",\n                                    \"3\"\n                                ],\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstances\",\n                \"summary\": \"Retrieves process instances that belong to given container and have given parent process instance, optionally allow to filter by process instance state.\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/signal/{sName}\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"optional event data - any type can be provided\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance to be signaled\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"sName\",\n                        \"description\": \"signal name to be send to process instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"signalProcessInstance\",\n                \"summary\": \"Signals active process instance identified by given id with singal name and optional event data\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/signals\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that signals should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getAvailableSignals\",\n                \"summary\": \"Retrieves active process instance's (identified by given id) active signals\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/variable/{varName}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that variable should be retrieved from\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"varName\",\n                        \"description\": \"variable name to be retrieved\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstanceVariable\",\n                \"summary\": \"Retrieves active process instance's (identified by given id) variable given as variable name\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"variable data - any type can be provided\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"varName\",\n                        \"description\": \"name of the variable to be set/updated\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"setProcessVariable\",\n                \"summary\": \"Updates active process instance's (identified by given id) variable with given name\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/variables\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that variables should be retrieved from\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstanceVariables\",\n                \"summary\": \"Retrieves active process instance's (identified by given id) variables, variables are returned as map where key is the variable name (string) and value is variable value (any type)\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"variable data give as map\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"setProcessVariables\",\n                \"summary\": \"Updates active process instance's (identified by given id) variables given as map in the body\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/variables/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that variables state should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/variable-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/variable-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getVariablesCurrentState\",\n                \"summary\": \"Retrieves variables last value (from audit logs) for given process instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/variables/instances/{varName}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that variable history should be collected for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"varName\",\n                        \"description\": \"name of the variables that history should be collected for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/variable-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/variable-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getVariableHistory\",\n                \"summary\": \"Retrieves variable history (from audit logs) for given variable name that belongs to process instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/workitems\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that work items belong to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/work-item-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/work-item-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance, Work Item or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getWorkItemByProcessInstance\",\n                \"summary\": \"Retrieves work items within process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/workitems/{workItemId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that work item belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"workItemId\",\n                        \"description\": \"identifier of the work item to retrieve\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/work-item-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/work-item-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance, Work Item or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getWorkItem\",\n                \"summary\": \"Retrieves work item identified by workItemId within process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/workitems/{workItemId}/aborted\": {\n            \"put\": {\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that work item belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"workItemId\",\n                        \"description\": \"identifier of the work item to abort\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance, Work Item or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"abortWorkItem\",\n                \"summary\": \"Aborts work item identified by workItemId within process instance and container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/instances/{pInstanceId}/workitems/{workItemId}/completed\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"optional outcome data give as map\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that work item belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"workItemId\",\n                        \"description\": \"identifier of the work item to complete\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Process instance, Work Item or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"completeWorkItem\",\n                \"summary\": \"Completes work item identified by workItemId within process instance and container. Optionally completion can provide outcome data - as map\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/{pId}/instances\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"optional map of process variables\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that new instance should be created from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process ID or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"startProcess\",\n                \"summary\": \"Starts new process instance of given process definition within given container with optional variables\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/processes/{pId}/instances/correlation/{correlationKey}\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"optional map of process variables\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Process instances :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the process definition resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id that new instance should be created from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"correlationKey\",\n                        \"description\": \"correlation key to be assigned to process instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process ID or Container Id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"startProcessWithCorrelation\",\n                \"summary\": \"Starts new process instance with correlation key of given process definition within given container with optional variables\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/release-id\": {\n            \"get\": {\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id that release id should be loaded from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getReleaseId\",\n                \"summary\": \"Retrieves release id of the KIE container with given id\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"Release Id to be upgraded to as ReleaseId type\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id that release id should be upgraded\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"updateReleaseId\",\n                \"summary\": \"Updates release id of the KIE container with given id to provided release id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/scanner\": {\n            \"get\": {\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id for scanner to be loaded\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getScannerInfo\",\n                \"summary\": \"Retrieves stanner information for given container\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"Scanner information given as KieScannerResource type\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"Container id for scanner to be updated\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"updateScanner\",\n                \"summary\": \"Updates scanner for given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/solvers\": {\n            \"get\": {\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solvers reside\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/solvers\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/solvers\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getSolvers\",\n                \"summary\": \"Retrieves solvers from given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/solvers/{solverId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solver resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"solverId\",\n                        \"description\": \"identifier of the solver\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/solver-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/solver-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getSolver\",\n                \"summary\": \"Retrieves solver by its identifier from given container\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"solver instance details as SolverInstance type\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solver config resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"solverId\",\n                        \"description\": \"identifier of the solver to create\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/solver-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/solver-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"createSolver\",\n                \"summary\": \"Creates solver within given container\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solver resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"solverId\",\n                        \"description\": \"identifier of the solver\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"disposeSolver\",\n                \"summary\": \"Disposes given solver\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/solvers/{solverId}/bestsolution\": {\n            \"get\": {\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solver resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"solverId\",\n                        \"description\": \"identifier of the solver\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/solver-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/solver-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getSolverWithBestSolution\",\n                \"summary\": \"Retrieves best solution from solver within container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/solvers/{solverId}/problemfactchanges\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"Problem fact changes, either single one or a list of them\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solver resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"solverId\",\n                        \"description\": \"identifier of the solver\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addProblemFactChanges\",\n                \"summary\": \"Adds problem fact changes to given solver\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/solvers/{solverId}/problemfactchanges/processed\": {\n            \"get\": {\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solver resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"solverId\",\n                        \"description\": \"identifier of the solver\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"boolean\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"isEveryProblemFactChangeProcessed\",\n                \"summary\": \"Retrieves status if problem fact changes have been processed in given solver\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/solvers/{solverId}/state/solving\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"planning problem\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solver resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"solverId\",\n                        \"description\": \"identifier of the solver\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"solvePlanningProblem\",\n                \"summary\": \"Solves given planning problem with given solver\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/solvers/{solverId}/state/terminating-early\": {\n            \"post\": {\n                \"tags\": [\n                    \"Planning and solvers :: BRP\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id where the solver resides\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"solverId\",\n                        \"description\": \"identifier of the solver\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Container does not exist or failure in creating solver\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"terminateSolverEarly\",\n                \"summary\": \"Terminates early running solver with given id within container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be loaded\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"withInputData\",\n                        \"description\": \"optionally loads task input data\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"withOutputData\",\n                        \"description\": \"optionally loads task output data\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"withAssignments\",\n                        \"description\": \"optionally loads task people assignments\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTask\",\n                \"summary\": \"Retrieves task with given id that belongs to given container, optionally loads its input, output data and assignments\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"task instance with updates as TaskInstance type\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"update\",\n                \"summary\": \"Updates task with given id that belongs to given container with given task instance details in body, updates name, description, priority, expiration date, form name, input and output variables\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/attachments\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that attachments should be loaded for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-attachment-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-attachment-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getAttachmentsByTaskId\",\n                \"summary\": \"Retrieves attachments from task with given id that belongs to given container\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"attachment content, any type can be provided\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that attachment should be added to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"name\",\n                        \"description\": \"name of the attachment to be added\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addAttachment\",\n                \"summary\": \"Adds attachment to task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/attachments/{attachmentId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that attachment belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"attachmentId\",\n                        \"description\": \"identifier of the attachment to be loaded\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-attachment\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-attachment\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getAttachmentById\",\n                \"summary\": \"Retrieves attachment with given id from task with given id that belongs to given container\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that attachment belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"attachmentId\",\n                        \"description\": \"identifier of the attachment to be deleted\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"deleteAttachment\",\n                \"summary\": \"Deletes attachment from task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/attachments/{attachmentId}/content\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that attachment belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"attachmentId\",\n                        \"description\": \"identifier of the attachment that content should be loaded from\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getAttachmentContentById\",\n                \"summary\": \"Retrieves attachment's content with given id from task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/comments\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that comments should be loaded for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-comment-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-comment-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCommentsByTaskId\",\n                \"summary\": \"Retrieves comments from task with given id that belongs to given container\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"comment data as TaskComment\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that comment should be added to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"addComment\",\n                \"summary\": \"Adds comment to task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/comments/{commentId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that comment belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"commentId\",\n                        \"description\": \"identifier of the comment to be loaded\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-comment\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-comment\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCommentById\",\n                \"summary\": \"Retrieves comment with given id from task with given id that belongs to given container\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that comment belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"commentId\",\n                        \"description\": \"identifier of the comment to be deleted\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"deleteComment\",\n                \"summary\": \"Deletes comment from task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/contents/input\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that input data should be loaded from\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskInputContentByTaskId\",\n                \"summary\": \"Retrieves input date from task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/contents/output\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that output data should be loaded from\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskOutputContentByTaskId\",\n                \"summary\": \"Retrieves output date from task with given id that belongs to given container\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"output data to be saved as Map \",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that data should be saved into\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"saveContent\",\n                \"summary\": \"Saves content on task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/contents/{contentId}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that content belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"contentId\",\n                        \"description\": \"identifier of the content to be deleted\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"deleteContent\",\n                \"summary\": \"Deletes content from task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/description\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"description as String\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance where description should be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"setDescription\",\n                \"summary\": \"Sets description on task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/events\": {\n            \"get\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that events should be loaded for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-event-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-event-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskEvents\",\n                \"summary\": \"Retrieves task events for given task id and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/expiration\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"expiration date as Date\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance where expiration date should be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"setExpirationDate\",\n                \"summary\": \"Sets expiration date on task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/name\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"name as String\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance where name should be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"setName\",\n                \"summary\": \"Sets name on task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/priority\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"priority as Integer\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance where priority should be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"setPriority\",\n                \"summary\": \"Sets priority on task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/skipable\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"skipable flag as Boolean\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance where skipable flag should be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"setSkipable\",\n                \"summary\": \"Sets skipable flag on task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/activated\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be activated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"activate\",\n                \"summary\": \"Activates task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/claimed\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be claimed\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"claim\",\n                \"summary\": \"Claims task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/completed\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"optional map of output variables\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be completed\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"auto-progress\",\n                        \"description\": \"optional flag that allows to directlu claim and start task (if needed) before completion\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"complete\",\n                \"summary\": \"Completes task with given id that belongs to given container, optionally it can claim and start task when auto-progress is used\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/delegated\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be delegated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"targetUser\",\n                        \"description\": \"user that task should be dalegated to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"delegate\",\n                \"summary\": \"Delegates task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/exited\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be exited\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"exit\",\n                \"summary\": \"Exists task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/failed\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"optional map of output variables\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be failed\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"fail\",\n                \"summary\": \"Fails task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/forwarded\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be forwarded\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"targetUser\",\n                        \"description\": \"user that the task should be forwarded to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"forward\",\n                \"summary\": \"Forwards task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/nominated\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be nominated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"potOwner\",\n                        \"description\": \"list of users that the task should be nominated to\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"nominate\",\n                \"summary\": \"Nominates task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/released\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be released\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"release\",\n                \"summary\": \"Releases task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/resumed\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be resumed\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"resume\",\n                \"summary\": \"Resumes task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/skipped\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be skipped\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"skip\",\n                \"summary\": \"Skips task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/started\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be started\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"start\",\n                \"summary\": \"Starts task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/stopped\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be stopped\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"stop\",\n                \"summary\": \"Stops task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/containers/{id}/tasks/{tInstanceId}/states/suspended\": {\n            \"put\": {\n                \"tags\": [\n                    \"User task operations and queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that task instance belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"identifier of the task instance that should be suspended\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Task with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"suspend\",\n                \"summary\": \"Suspends task with given id that belongs to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/documents\": {\n            \"get\": {\n                \"tags\": [\n                    \"Documents :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/document-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/document-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"listDocuments\",\n                \"summary\": \"Retrieves documents that are stored in the system, with pagination\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"document content represented as DocumentInstance\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Documents :: BPM\"\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"createDocument\",\n                \"summary\": \"Creates new document based on given content (body)\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/documents/{documentId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Documents :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"documentId\",\n                        \"description\": \"document id of a document that should be retruned\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/document-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/document-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Document with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getDocument\",\n                \"summary\": \"Retrieves document identified by given documentId\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"document content represented as DocumentInstance\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Documents :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"documentId\",\n                        \"description\": \"document id of a document that should be updated\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Document with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"updateDocument\",\n                \"summary\": \"Updates document identified by given document id based on given content (body)\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Documents :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"documentId\",\n                        \"description\": \"document id of a document that should be deleted\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Document with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"deleteDocument\",\n                \"summary\": \"Deletes document identified by given document id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/documents/{documentId}/content\": {\n            \"get\": {\n                \"tags\": [\n                    \"Documents :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"documentId\",\n                        \"description\": \"document id of a document that content should be retruned from\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/octet-stream\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"format\": \"byte\",\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Document with given id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getDocumentContent\",\n                \"summary\": \"Retrieves document's content identified by given documentId\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/jobs\": {\n            \"get\": {\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING, RUNNING)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"QUEUED\",\n                                    \"DONE\",\n                                    \"CANCELLED\",\n                                    \"ERROR\",\n                                    \"RETRYING\",\n                                    \"RUNNING\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getRequestsByStatus\",\n                \"summary\": \"Retrieves asynchronous jobs filtered by status\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"asynchronous job definition represented as JobRequestInstance\",\n                    \"content\": {\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"containerId\",\n                        \"description\": \"optional container id that the job should be associated with\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"format\": \"int64\",\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"scheduleRequest\",\n                \"summary\": \"Schedules new asynchronous job based on given body\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/jobs/commands/{cmd}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"cmd\",\n                        \"description\": \"name of the command that asynchornous jobs should be found for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING, RUNNING)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"QUEUED\",\n                                    \"DONE\",\n                                    \"CANCELLED\",\n                                    \"ERROR\",\n                                    \"RETRYING\",\n                                    \"RUNNING\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getRequestsByCommand\",\n                \"summary\": \"Retrieves asynchronous jobs by command\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/jobs/containers/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"identifier of the container that asynchornous jobs should be found for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING, RUNNING)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"QUEUED\",\n                                    \"DONE\",\n                                    \"CANCELLED\",\n                                    \"ERROR\",\n                                    \"RETRYING\",\n                                    \"RUNNING\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getRequestsByContainer\",\n                \"summary\": \"Retrieves asynchronous jobs by container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/jobs/keys/{key}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"key\",\n                        \"description\": \"identifier of the business key that asynchornous jobs should be found for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING, RUNNING)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"QUEUED\",\n                                    \"DONE\",\n                                    \"CANCELLED\",\n                                    \"ERROR\",\n                                    \"RETRYING\",\n                                    \"RUNNING\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getRequestsByBusinessKey\",\n                \"summary\": \"Retrieves asynchronous jobs by business key\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/jobs/processes/instances/{pInstanceId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"identifier of the process instance that asynchornous jobs should be found for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING, RUNNING)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"QUEUED\",\n                                    \"DONE\",\n                                    \"CANCELLED\",\n                                    \"ERROR\",\n                                    \"RETRYING\",\n                                    \"RUNNING\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getRequestsByProcessInstance\",\n                \"summary\": \"Retrieves asynchronous jobs by process instance id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/jobs/{jobId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"jobId\",\n                        \"description\": \"identifier of the asynchronous job to be retrieved\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"withErrors\",\n                        \"description\": \"optional flag that indicats if errors should be loaded as well\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"withData\",\n                        \"description\": \"optional flag that indicats if input/output data should be loaded as well\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/request-info-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getRequestById\",\n                \"summary\": \"Retrieves asynchronous job by given jobId\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"jobId\",\n                        \"description\": \"identifier of the asynchronous job to be requeued\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"requeueRequest\",\n                \"summary\": \"Requeues failed asynchronous job identified by given jobId\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"jobId\",\n                        \"description\": \"identifier of the asynchronous job to be canceled\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"cancelRequest\",\n                \"summary\": \"Cancels active asynchronous job identified by given jobId\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/jobs/{jobId}/data\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"data to be updated on the asynchronous job represented as Map\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Asynchronous jobs :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"jobId\",\n                        \"description\": \"identifier of the asynchronous job to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"containerId\",\n                        \"description\": \"optional container id that the job should be associated with\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"updateRequestData\",\n                \"summary\": \"Updates active asynchronous job's data (identified by given jobId)\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"description\": \"case definition id or name that case definitions will be filtered by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseDefinitions\",\n                \"summary\": \"Retrieves case definitions with filtering by name or id of the case definition and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"dataItemName\",\n                        \"description\": \"data item name that case instances will be filtered by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"dataItemValue\",\n                        \"description\": \"data item value that case instances will be filtered by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"owner\",\n                        \"description\": \"case instance owner that case instances will be filtered by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional case instance status (open, closed, canceled) - defaults ot open (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"open\",\n                                    \"closed\",\n                                    \"cancelled\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstances\",\n                \"summary\": \"Retrieves case instances with authntication checks and applies pagination, allows to filter by data (case file) name and value, owner and case instance status\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases/instances/{caseId}/caseFile\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"case instance identifier that data items should belong to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"name\",\n                        \"description\": \"optionally filter by data item names\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"type\",\n                        \"description\": \"optionally filter by data item types\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceDataItems\",\n                \"summary\": \"Retrieves case instance data items, allows to filter by name or type of data and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases/instances/{caseId}/tasks/instances/admins\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"case instance identifier that tasks should belong to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional task status (Created, Ready, Reserved, InProgress, Suspended, Completed, Failed, Error, Exited, Obsolete)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"Created\",\n                                    \"Ready\",\n                                    \"Reserved\",\n                                    \"InProgress\",\n                                    \"Suspended\",\n                                    \"Completed\",\n                                    \"Failed\",\n                                    \"Error\",\n                                    \"Exited\",\n                                    \"Obsolete\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceTasksAsAdmin\",\n                \"summary\": \"Retrieves case instance tasks assigned as business admin, allows to filter by task status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases/instances/{caseId}/tasks/instances/pot-owners\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"case instance identifier that tasks should belong to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional task status (Created, Ready, Reserved, InProgress, Suspended, Completed, Failed, Error, Exited, Obsolete)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"Created\",\n                                    \"Ready\",\n                                    \"Reserved\",\n                                    \"InProgress\",\n                                    \"Suspended\",\n                                    \"Completed\",\n                                    \"Failed\",\n                                    \"Error\",\n                                    \"Exited\",\n                                    \"Obsolete\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceTasksAsPotentialOwner\",\n                \"summary\": \"Retrieves case instance tasks assigned as potential owner, allows to filter by task status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases/instances/{caseId}/tasks/instances/stakeholders\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"caseId\",\n                        \"description\": \"case instance identifier that tasks should belong to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional task status (Created, Ready, Reserved, InProgress, Suspended, Completed, Failed, Error, Exited, Obsolete)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"Created\",\n                                    \"Ready\",\n                                    \"Reserved\",\n                                    \"InProgress\",\n                                    \"Suspended\",\n                                    \"Completed\",\n                                    \"Failed\",\n                                    \"Error\",\n                                    \"Exited\",\n                                    \"Obsolete\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstanceTasksAsStakeholder\",\n                \"summary\": \"Retrieves case instance tasks assigned as stakeholder, allows to filter by task status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases/processes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"description\": \"process definition id or name that process definitions will be filtered by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessDefinitions\",\n                \"summary\": \"Retrieves process definitions with filtering by name or id of the process definition and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases/{caseRoleName}/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"caseRoleName\",\n                        \"description\": \"case role that instances should be found for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional case instance status (open, closed, canceled) - defaults ot open (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"open\",\n                                    \"closed\",\n                                    \"cancelled\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getCaseInstancesByRole\",\n                \"summary\": \"Retrieves case instances where given user is involed in given role and applies pagination, allows to filter by case instance status\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/cases/{id}/processes\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - case definitions and instances :: Case Management\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process definitions should be filtered by\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/case-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessDefinitionsByContainer\",\n                \"summary\": \"Retrieves process definitions that belong to given container and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/containers/{id}/process/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id to filter process instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional process instance status (active, completed, aborted) - defaults ot active (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int32\",\n                                \"enum\": [\n                                    \"1\",\n                                    \"2\",\n                                    \"3\"\n                                ],\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstancesByDeploymentId\",\n                \"summary\": \"Retrieves process instances filtered by container. Applies pagination by default and allows to specify sorting\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/containers/{id}/processes/definitions\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id to filter process definitions\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definitions\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definitions\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessesByDeploymentId\",\n                \"summary\": \"Retrieves process definitions that belong to given container\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/containers/{id}/processes/definitions/{pId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"description\": \"container id that process definition belongs to\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id to load process definition\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definition\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definition\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessesByDeploymentIdProcessId\",\n                \"summary\": \"Retrieves process definition that belong to given container and has matching process id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/definitions\": {\n            \"get\": {\n                \"tags\": [\n                    \"Custom queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/query-definitions\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/query-definitions\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getQueries\",\n                \"summary\": \"Retruns all custom queries defined in the system\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/definitions/{queryName}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Custom queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"queryName\",\n                        \"description\": \"identifier of the query definition to be retrieved\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/query-definition\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/query-definition\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Query definition with given name not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getQuery\",\n                \"summary\": \"Retrieves existing query definition from the system with given queryName\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"query definition represented as QueryDefinition\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Custom queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"queryName\",\n                        \"description\": \"identifier of the query definition to be replaced\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"replaceQueryDefinition\",\n                \"summary\": \"Replaces existing query definition or registers new if not exists in the system with given queryName\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"query definition represented as QueryDefinition\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"Custom queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"queryName\",\n                        \"description\": \"identifier of the query definition to be registered\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"409\": {\n                        \"description\": \"Query with given name already exists\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"createQueryDefinition\",\n                \"summary\": \"Registers new query definition in the system with given queryName\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"Custom queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"queryName\",\n                        \"description\": \"identifier of the query definition to be deleted\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Query definition with given name not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"dropQueryDefinition\",\n                \"summary\": \"Deletes existing query definition from the system with given queryName\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/definitions/{queryName}/data\": {\n            \"get\": {\n                \"tags\": [\n                    \"Custom queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"queryName\",\n                        \"description\": \"identifier of the query definition to be used for query\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"mapper\",\n                        \"description\": \"identifier of the query mapper to be used when transforming results\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"orderBy\",\n                        \"description\": \"optional sort order\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Query definition with given name not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"runQuery\",\n                \"summary\": \"Queries using query definition identified by queryName. Maps the result to concrete objects based on provided mapper.\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/definitions/{queryName}/filtered-data\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"optional query filter specification represented as QueryFilterSpec\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"required\": false\n                },\n                \"tags\": [\n                    \"Custom queries :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"queryName\",\n                        \"description\": \"identifier of the query definition to be used for query\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"mapper\",\n                        \"description\": \"identifier of the query mapper to be used when transforming results\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"builder\",\n                        \"description\": \"optional identifier of the query builder to be used for query conditions\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Query parameters or filter spec provide invalid conditions\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"runQueryFiltered\",\n                \"summary\": \"Queries using query definition identified by queryName. Maps the result to concrete objects based on provided mapper. Query is additional altered by the filter spec and/or builder\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/definitions\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"filter\",\n                        \"description\": \"process id or name to filter process definitions\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definitions\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definitions\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessesByFilter\",\n                \"summary\": \"Retrieves process definitions filtered by process id or name\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/definitions/{pId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id to load process definition\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definitions\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-definitions\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessesById\",\n                \"summary\": \"Retrieves process definitions filtered by process id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instance/correlation/{correlationKey}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"correlationKey\",\n                        \"description\": \"correlation key associated with process instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstanceByCorrelationKey\",\n                \"summary\": \"Retrieves process instance by exactly matched correlation key\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional process instance status (active, completed, aborted) - defaults ot active (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int32\",\n                                \"enum\": [\n                                    \"1\",\n                                    \"2\",\n                                    \"3\"\n                                ],\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"initiator\",\n                        \"description\": \"optional process instance initiator - user who started process instance to filter process instances\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"processName\",\n                        \"description\": \"optional process name to filter process instances\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstances\",\n                \"summary\": \"Retrieves process instances filtered by status, initiator, processName - depending what query parameters are given. Applies pagination by default and allows to specify sorting\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instances/correlation/{correlationKey}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"correlationKey\",\n                        \"description\": \"correlation key to filter process instance, can be given as partial correlation key like in starts with approach\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstancesByCorrelationKey\",\n                \"summary\": \"Retrieves process instances filtered by correlation key, retrieves all process instances that match correlationkey*. Applies pagination by default and allows to specify sorting\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instances/variables/{varName}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"varName\",\n                        \"description\": \"variable name to filter process instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"varValue\",\n                        \"description\": \"variable value to filter process instance, optional when filtering by name only required when filtering by name and value\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional process instance status (active, completed, aborted) - defaults ot active (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int32\",\n                                \"enum\": [\n                                    \"1\",\n                                    \"2\",\n                                    \"3\"\n                                ],\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstanceByVariables\",\n                \"summary\": \"Retrieves process instances filtered by by variable or by variable and its value. Applies pagination by default and allows to specify sorting\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instances/{pInstanceId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"process instance id to retrieve process instance\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"withVars\",\n                        \"description\": \"load process instance variables or not, defaults to false\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Process instance id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstanceById\",\n                \"summary\": \"Retrieves process instance for given process instance id and optionally loads its variables\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instances/{pInstanceId}/nodes/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"process instance id to to retrive history for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"activeOnly\",\n                        \"description\": \"include active nodes only\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"completedOnly\",\n                        \"description\": \"include completed nodes only\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstanceHistory\",\n                \"summary\": \"Retrieves node instances for given process instance. Depending on provided query parameters (activeOnly or completedOnly) will return active and/or completes nodes\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instances/{pInstanceId}/variables/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"process instance id to load variables current state (latest value) for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/variable-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/variable-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getVariablesCurrentState\",\n                \"summary\": \"Retrieves variables last value (from audit logs) for given process instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instances/{pInstanceId}/variables/instances/{varName}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"process instance id to load variable history for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"varName\",\n                        \"description\": \"variable name that history should be loaded for\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/variable-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/variable-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getVariableHistory\",\n                \"summary\": \"Retrieves variable history (from audit logs) for given variable name that belongs to process instance\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/instances/{pInstanceId}/wi-nodes/instances/{workItemId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"process instance id that work item belongs to\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"workItemId\",\n                        \"description\": \"work item id to retrieve node instance for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/node-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Node instance id not found\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getNodeInstanceForWorkItem\",\n                \"summary\": \"Retrieves node instance for given process instance id and work item id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/processes/{pId}/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pId\",\n                        \"description\": \"process id to filter process instance\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional process instance status (active, completed, aborted) - defaults ot active (1) only\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"format\": \"int32\",\n                                \"enum\": [\n                                    \"1\",\n                                    \"2\",\n                                    \"3\"\n                                ],\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"initiator\",\n                        \"description\": \"optinal process instance initiator - user who started process instance to filtr process instances\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/process-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getProcessInstancesByProcessId\",\n                \"summary\": \"Retrieves process instances filtered by process id. Applies pagination by default and allows to specify sorting\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getAllAuditTask\",\n                \"summary\": \"Retrieves tasks, optionally filters by status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances/admins\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional task status (Created, Ready, Reserved, InProgress, Suspended, Completed, Failed, Error, Exited, Obsolete)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"Created\",\n                                    \"Ready\",\n                                    \"Reserved\",\n                                    \"InProgress\",\n                                    \"Suspended\",\n                                    \"Completed\",\n                                    \"Failed\",\n                                    \"Error\",\n                                    \"Exited\",\n                                    \"Obsolete\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTasksAssignedAsBusinessAdministratorByStatus\",\n                \"summary\": \"Retrieves tasks assigned as business administrator, optionally filters by status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances/owners\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional task status (Created, Ready, Reserved, InProgress, Suspended, Completed, Failed, Error, Exited, Obsolete)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"Created\",\n                                    \"Ready\",\n                                    \"Reserved\",\n                                    \"InProgress\",\n                                    \"Suspended\",\n                                    \"Completed\",\n                                    \"Failed\",\n                                    \"Error\",\n                                    \"Exited\",\n                                    \"Obsolete\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTasksOwnedByStatus\",\n                \"summary\": \"Retrieves tasks owned, optionally filters by status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances/pot-owners\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional task status (Created, Ready, Reserved, InProgress, Suspended, Completed, Failed, Error, Exited, Obsolete)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"Created\",\n                                    \"Ready\",\n                                    \"Reserved\",\n                                    \"InProgress\",\n                                    \"Suspended\",\n                                    \"Completed\",\n                                    \"Failed\",\n                                    \"Error\",\n                                    \"Exited\",\n                                    \"Obsolete\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"groups\",\n                        \"description\": \"optional group names to include in the query\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"filter\",\n                        \"description\": \"optional custom filter for task data\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTasksAssignedAsPotentialOwner\",\n                \"summary\": \"Retrieves tasks assigned as potential owner, optionally filters by status and given groups and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances/process/{pInstanceId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"pInstanceId\",\n                        \"description\": \"process instance id to filter task instances\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional task status (Created, Ready, Reserved, InProgress, Suspended, Completed, Failed, Error, Exited, Obsolete)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"Created\",\n                                    \"Ready\",\n                                    \"Reserved\",\n                                    \"InProgress\",\n                                    \"Suspended\",\n                                    \"Completed\",\n                                    \"Failed\",\n                                    \"Error\",\n                                    \"Exited\",\n                                    \"Obsolete\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTasksByStatusByProcessInstanceId\",\n                \"summary\": \"Retrieves tasks associated with given process instance, optionally filters by status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances/variables/{varName}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"varName\",\n                        \"description\": \"name of the variable used to fiter tasks\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"varValue\",\n                        \"description\": \"value of the variable used to fiter tasks, optional when filtering only by name, required when filtering by both name and value\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"optional task status (Created, Ready, Reserved, InProgress, Suspended, Completed, Failed, Error, Exited, Obsolete)\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"enum\": [\n                                    \"Created\",\n                                    \"Ready\",\n                                    \"Reserved\",\n                                    \"InProgress\",\n                                    \"Suspended\",\n                                    \"Completed\",\n                                    \"Failed\",\n                                    \"Error\",\n                                    \"Exited\",\n                                    \"Obsolete\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"user\",\n                        \"description\": \"optional user id to be used instead of authenticated user - only when bypass authenticated user is enabled\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-summary-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTasksByVariables\",\n                \"summary\": \"Retrieves tasks by variable name and optionally by variable value, optionally filters by status and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances/workitem/{workItemId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"workItemId\",\n                        \"description\": \"work item id to load task associated with\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task not found for given work item id\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskByWorkItemId\",\n                \"summary\": \"Retrieves task by associated work item id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances/{tInstanceId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"task id to load task instance\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-instance\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-instance\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"404\": {\n                        \"description\": \"Task not found for given id\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskById\",\n                \"summary\": \"Retrieves task by task id\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/queries/tasks/instances/{tInstanceId}/events\": {\n            \"get\": {\n                \"tags\": [\n                    \"Queries - processes, nodes, variables and tasks :: BPM\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"tInstanceId\",\n                        \"description\": \"task id to load task events for\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"page\",\n                        \"description\": \"optional pagination - at which page to start, defaults to 0 (meaning first)\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"pageSize\",\n                        \"description\": \"optional pagination - size of the result, defaults to 10\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"default\": 10,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sort\",\n                        \"description\": \"optional sort column, no default\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"sortOrder\",\n                        \"description\": \"optional sort direction (asc, desc) - defaults to asc\",\n                        \"schema\": {\n                            \"default\": true,\n                            \"type\": \"boolean\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": false\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-event-instance-list\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/task-event-instance-list\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getTaskEvents\",\n                \"summary\": \"Retrieves task events for given task id and applies pagination\",\n                \"description\": \"\"\n            }\n        },\n        \"/server/state\": {\n            \"get\": {\n                \"tags\": [\n                    \"KIE Server :: Core\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/response\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"500\": {\n                        \"description\": \"Unexpected error\"\n                    }\n                },\n                \"operationId\": \"getServerState\",\n                \"summary\": \"Retrieves server state - configuration that the server is currently running with\",\n                \"description\": \"\"\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"ScoreWrapper\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"case-adhoc-fragment\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-adhoc-fragment\"\n                }\n            },\n            \"case-adhoc-fragment-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"fragments\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-adhoc-fragment\",\n                            \"xml\": {\n                                \"name\": \"fragments\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-adhoc-fragment-list\"\n                }\n            },\n            \"case-comment\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"added-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"author\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"restricted-to\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"restricted-to\"\n                            }\n                        }\n                    },\n                    \"text\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-comment\"\n                }\n            },\n            \"case-comment-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"comments\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-comment\",\n                            \"xml\": {\n                                \"name\": \"comments\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-comment-list\"\n                }\n            },\n            \"case-definition\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"adhoc-fragments\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-adhoc-fragment\",\n                            \"xml\": {\n                                \"name\": \"adhoc-fragments\"\n                            }\n                        }\n                    },\n                    \"case-id-prefix\": {\n                        \"type\": \"string\"\n                    },\n                    \"container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"milestones\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-milestone-def\",\n                            \"xml\": {\n                                \"name\": \"milestones\"\n                            }\n                        }\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"roles\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"format\": \"int32\",\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"stages\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-stage-def\",\n                            \"xml\": {\n                                \"name\": \"stages\"\n                            }\n                        }\n                    },\n                    \"version\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-definition\"\n                }\n            },\n            \"case-definition-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"definitions\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-definition\",\n                            \"xml\": {\n                                \"name\": \"definitions\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-definition-list\"\n                }\n            },\n            \"case-file\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"case-data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"case-data-restrictions\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"case-group-assignments\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"case-user-assignments\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-file\"\n                }\n            },\n            \"case-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"case-completed-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"case-completion-msg\": {\n                        \"type\": \"string\"\n                    },\n                    \"case-definition-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"case-description\": {\n                        \"type\": \"string\"\n                    },\n                    \"case-file\": {\n                        \"$ref\": \"#/components/schemas/case-file\"\n                    },\n                    \"case-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"case-milestones\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-milestone\",\n                            \"xml\": {\n                                \"name\": \"case-milestones\"\n                            }\n                        }\n                    },\n                    \"case-owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"case-roles\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-role-assignment\",\n                            \"xml\": {\n                                \"name\": \"case-roles\"\n                            }\n                        }\n                    },\n                    \"case-stages\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-stage\",\n                            \"xml\": {\n                                \"name\": \"case-stages\"\n                            }\n                        }\n                    },\n                    \"case-started-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"case-status\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"container-id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-instance\"\n                }\n            },\n            \"case-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"instances\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-instance\",\n                            \"xml\": {\n                                \"name\": \"instances\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-instance-list\"\n                }\n            },\n            \"case-milestone\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"milestone-achieved\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"milestone-achieved-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"milestone-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"milestone-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"milestone-status\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-milestone\"\n                }\n            },\n            \"case-milestone-def\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"milestone-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"milestone-mandatory\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"milestone-name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-milestone-def\"\n                }\n            },\n            \"case-milestone-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"milestones\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-milestone\",\n                            \"xml\": {\n                                \"name\": \"milestones\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-milestone-list\"\n                }\n            },\n            \"case-role-assignment\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"groups\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"groups\"\n                            }\n                        }\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"users\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"users\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-role-assignment\"\n                }\n            },\n            \"case-role-assignment-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"role-assignments\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-role-assignment\",\n                            \"xml\": {\n                                \"name\": \"role-assignments\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-role-assignment-list\"\n                }\n            },\n            \"case-stage\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"active-nodes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/node-instance\",\n                            \"xml\": {\n                                \"name\": \"active-nodes\"\n                            }\n                        }\n                    },\n                    \"adhoc-fragments\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-adhoc-fragment\",\n                            \"xml\": {\n                                \"name\": \"adhoc-fragments\"\n                            }\n                        }\n                    },\n                    \"stage-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"stage-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"stage-status\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-stage\"\n                }\n            },\n            \"case-stage-def\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"adhoc-fragments\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-adhoc-fragment\",\n                            \"xml\": {\n                                \"name\": \"adhoc-fragments\"\n                            }\n                        }\n                    },\n                    \"stage-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"stage-name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-stage-def\"\n                }\n            },\n            \"case-stage-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"stages\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/case-stage\",\n                            \"xml\": {\n                                \"name\": \"stages\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"case-stage-list\"\n                }\n            },\n            \"document-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"document-content\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"format\": \"byte\",\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"document-content\"\n                            }\n                        }\n                    },\n                    \"document-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"document-last-mod\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"document-link\": {\n                        \"type\": \"string\"\n                    },\n                    \"document-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"document-size\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"document-instance\"\n                }\n            },\n            \"document-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"document-instances\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/document-instance\",\n                            \"xml\": {\n                                \"name\": \"document-instances\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"document-instance-list\"\n                }\n            },\n            \"error-info-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"error-date\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"error-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"error-message\": {\n                        \"type\": \"string\"\n                    },\n                    \"error-stacktrace\": {\n                        \"type\": \"string\"\n                    },\n                    \"request-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"error-info-instance\"\n                }\n            },\n            \"error-info-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"error-info-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/error-info-instance\",\n                            \"xml\": {\n                                \"name\": \"error-info-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"error-info-instance-list\"\n                }\n            },\n            \"execution-error\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"acknowledged\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"acknowledged-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"acknowledged-by\": {\n                        \"type\": \"string\"\n                    },\n                    \"activity-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"activity-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"error\": {\n                        \"type\": \"string\"\n                    },\n                    \"error-date\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"error-msg\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"job-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"process-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"execution-error\"\n                }\n            },\n            \"execution-error-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"error-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/execution-error\",\n                            \"xml\": {\n                                \"name\": \"error-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"execution-error-list\"\n                }\n            },\n            \"migration-report-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"migration-end\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"migration-logs\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"migration-logs\"\n                            }\n                        }\n                    },\n                    \"migration-start\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"migration-successful\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"migration-report-instance\"\n                }\n            },\n            \"migration-report-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"migration-report-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/migration-report-instance\",\n                            \"xml\": {\n                                \"name\": \"migration-report-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"migration-report-instance-list\"\n                }\n            },\n            \"node-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"node-completed\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"node-connection\": {\n                        \"type\": \"string\"\n                    },\n                    \"node-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"node-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"node-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"node-type\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"reference-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"start-date\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"work-item-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"node-instance\"\n                }\n            },\n            \"node-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"node-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/node-instance\",\n                            \"xml\": {\n                                \"name\": \"node-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"node-instance-list\"\n                }\n            },\n            \"process-associated-entities\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"associatedEntities\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"xml\": {\n                            \"name\": \"associated-entities\",\n                            \"wrapped\": true\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-associated-entities\"\n                }\n            },\n            \"process-definition\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"associatedEntities\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"xml\": {\n                            \"name\": \"associated-entities\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"dynamic\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"package\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-version\": {\n                        \"type\": \"string\"\n                    },\n                    \"processVariables\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"process-variables\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"reusableSubProcesses\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"process-subprocesses\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"serviceTasks\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"service-tasks\",\n                            \"wrapped\": true\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-definition\"\n                }\n            },\n            \"process-definitions\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"processes\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/process-definition\",\n                            \"xml\": {\n                                \"name\": \"processes\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-definitions\"\n                }\n            },\n            \"process-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"active-user-tasks\": {\n                        \"$ref\": \"#/components/schemas/task-summary-list\"\n                    },\n                    \"container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"correlation-key\": {\n                        \"type\": \"string\"\n                    },\n                    \"initiator\": {\n                        \"type\": \"string\"\n                    },\n                    \"parent-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"process-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-instance-desc\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"process-instance-state\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"process-instance-variables\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"process-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-version\": {\n                        \"type\": \"string\"\n                    },\n                    \"start-date\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-instance\"\n                }\n            },\n            \"process-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"process-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/process-instance\",\n                            \"xml\": {\n                                \"name\": \"process-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-instance-list\"\n                }\n            },\n            \"process-node\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-node\"\n                }\n            },\n            \"process-node-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"process-node\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/process-node\",\n                            \"xml\": {\n                                \"name\": \"process-node\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-node-list\"\n                }\n            },\n            \"process-service-tasks\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"serviceTasks\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"tasks\",\n                            \"wrapped\": true\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-service-tasks\"\n                }\n            },\n            \"process-subprocesses\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"subProcesses\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"subprocesses\",\n                            \"wrapped\": true\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-subprocesses\"\n                }\n            },\n            \"process-task-inputs\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"taskInputs\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"inputs\",\n                            \"wrapped\": true\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-task-inputs\"\n                }\n            },\n            \"process-task-outputs\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"taskOutputs\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"outputs\",\n                            \"wrapped\": true\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-task-outputs\"\n                }\n            },\n            \"process-variables\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"variables\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"wrapped\": true\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"process-variables\"\n                }\n            },\n            \"query-definition\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"query-expression\": {\n                        \"type\": \"string\"\n                    },\n                    \"query-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"query-source\": {\n                        \"type\": \"string\"\n                    },\n                    \"query-target\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"query-definition\"\n                }\n            },\n            \"query-definitions\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"queries\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/query-definition\",\n                            \"xml\": {\n                                \"name\": \"queries\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"query-definitions\"\n                }\n            },\n            \"request-info-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"request-business-key\": {\n                        \"type\": \"string\"\n                    },\n                    \"request-command\": {\n                        \"type\": \"string\"\n                    },\n                    \"request-container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"request-data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"request-errors\": {\n                        \"$ref\": \"#/components/schemas/error-info-instance-list\"\n                    },\n                    \"request-executions\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"request-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"request-message\": {\n                        \"type\": \"string\"\n                    },\n                    \"request-retries\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"request-scheduled-date\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"request-status\": {\n                        \"type\": \"string\"\n                    },\n                    \"response-data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"request-info-instance\"\n                }\n            },\n            \"request-info-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"request-info-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/request-info-instance\",\n                            \"xml\": {\n                                \"name\": \"request-info-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"request-info-instance-list\"\n                }\n            },\n            \"response\": {\n                \"type\": \"object\",\n                \"xml\": {\n                    \"name\": \"response\"\n                }\n            },\n            \"responses\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"response\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/response\",\n                            \"xml\": {\n                                \"name\": \"response\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"responses\"\n                }\n            },\n            \"solver-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"best-solution\": {\n                        \"type\": \"object\"\n                    },\n                    \"container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"score\": {\n                        \"$ref\": \"#/components/schemas/ScoreWrapper\"\n                    },\n                    \"solver-config-file\": {\n                        \"type\": \"string\"\n                    },\n                    \"solver-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"NOT_SOLVING\",\n                            \"TERMINATING_EARLY\",\n                            \"SOLVING\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"solver-instance\"\n                }\n            },\n            \"solvers\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"solver\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/solver-instance\",\n                            \"xml\": {\n                                \"name\": \"solver\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"solvers\"\n                }\n            },\n            \"task-attachment\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"attachment-added-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"attachment-added-by\": {\n                        \"type\": \"string\"\n                    },\n                    \"attachment-content-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"attachment-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"attachment-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"attachment-size\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"attachment-type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-attachment\"\n                }\n            },\n            \"task-attachment-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-attachment\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/task-attachment\",\n                            \"xml\": {\n                                \"name\": \"task-attachment\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-attachment-list\"\n                }\n            },\n            \"task-comment\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"comment-added-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"comment-added-by\": {\n                        \"type\": \"string\"\n                    },\n                    \"comment-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-comment\"\n                }\n            },\n            \"task-comment-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-comment\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/task-comment\",\n                            \"xml\": {\n                                \"name\": \"task-comment\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-comment-list\"\n                }\n            },\n            \"task-event-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-event-date\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"task-event-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-event-message\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-event-type\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-event-user\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-process-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-work-item-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-event-instance\"\n                }\n            },\n            \"task-event-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-event-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/task-event-instance\",\n                            \"xml\": {\n                                \"name\": \"task-event-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-event-instance-list\"\n                }\n            },\n            \"task-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-activation-time\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"task-actual-owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-business-admins\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"task-business-admins\"\n                            }\n                        },\n                        \"xml\": {\n                            \"name\": \"business-admins\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"task-container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-correlation-key\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-created-by\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-created-on\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"task-description\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-excl-owners\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"task-excl-owners\"\n                            }\n                        },\n                        \"xml\": {\n                            \"name\": \"excluded-owners\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"task-expiration-time\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"task-form\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-input-data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"task-last-modificaiton-date\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"task-last-modification-user\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-output-data\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"task-parent-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-pot-owners\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"task-pot-owners\"\n                            }\n                        },\n                        \"xml\": {\n                            \"name\": \"potential-owners\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"task-priority\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-process-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-process-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-skippable\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"task-status\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-subject\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-type\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-workitem-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-instance\"\n                }\n            },\n            \"task-notification\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"active\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"content\": {\n                        \"type\": \"string\"\n                    },\n                    \"groups\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"groups\"\n                            }\n                        }\n                    },\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"notify-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"subject\": {\n                        \"type\": \"string\"\n                    },\n                    \"users\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"users\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-notification\"\n                }\n            },\n            \"task-notification-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-notification\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/task-notification\",\n                            \"xml\": {\n                                \"name\": \"task-notification\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-notification-list\"\n                }\n            },\n            \"task-reassignment\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"active\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"groups\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"groups\"\n                            }\n                        }\n                    },\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"reassign-at\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"users\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"users\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-reassignment\"\n                }\n            },\n            \"task-reassignment-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-reassignment\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/task-reassignment\",\n                            \"xml\": {\n                                \"name\": \"task-reassignment\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-reassignment-list\"\n                }\n            },\n            \"task-summary\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-activation-time\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"task-actual-owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-created-by\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-created-on\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"task-description\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-expiration-time\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"task-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-is-skipable\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"task-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-parent-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-priority\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-proc-def-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-proc-inst-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-status\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-subject\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-summary\"\n                }\n            },\n            \"task-summary-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task-summary\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/task-summary\",\n                            \"xml\": {\n                                \"name\": \"task-summary\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"task-summary-list\"\n                }\n            },\n            \"timer-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"activation-time\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"delay\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"last-fire-time\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"next-fire-time\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"period\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"process-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"repeat-limit\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"session-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"timer-instance\"\n                }\n            },\n            \"timer-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"timer-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/timer-instance\",\n                            \"xml\": {\n                                \"name\": \"timer-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"timer-instance-list\"\n                }\n            },\n            \"user-task-definition\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"associatedEntities\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"associated-entities\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"task-comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-created-by\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-form-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"task-priority\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"task-skippable\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"taskInputMappings\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"task-inputs\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"taskOutputMappings\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"task-outputs\",\n                            \"wrapped\": true\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"user-task-definition\"\n                }\n            },\n            \"user-task-definitions\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"task\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/user-task-definition\",\n                            \"xml\": {\n                                \"name\": \"task\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"user-task-definitions\"\n                }\n            },\n            \"variable-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"modification-date\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"old-value\": {\n                        \"type\": \"string\"\n                    },\n                    \"process-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"variable-instance\"\n                }\n            },\n            \"variable-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"variable-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/variable-instance\",\n                            \"xml\": {\n                                \"name\": \"variable-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"variable-instance-list\"\n                }\n            },\n            \"work-item-instance\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"container-id\": {\n                        \"type\": \"string\"\n                    },\n                    \"node-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"node-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"process-instance-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"work-item-id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"work-item-name\": {\n                        \"type\": \"string\"\n                    },\n                    \"work-item-params\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"work-item-state\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"work-item-instance\"\n                }\n            },\n            \"work-item-instance-list\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"work-item-instance\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/work-item-instance\",\n                            \"xml\": {\n                                \"name\": \"work-item-instance\"\n                            }\n                        }\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"work-item-instance-list\"\n                }\n            }\n        }\n    },\n    \"tags\": [\n        {\n            \"name\": \"Administration of cases :: Case Management\"\n        },\n        {\n            \"name\": \"Queries - case definitions and instances :: Case Management\"\n        },\n        {\n            \"name\": \"Case instances :: Case Management\"\n        },\n        {\n            \"name\": \"KIE Server Script :: Core\"\n        },\n        {\n            \"name\": \"KIE Server :: Core\"\n        },\n        {\n            \"name\": \"Decision Service :: DMN\"\n        },\n        {\n            \"name\": \"Rules evaluation :: BRM\"\n        },\n        {\n            \"name\": \"Process and task definitions :: BPM\"\n        },\n        {\n            \"name\": \"Documents :: BPM\"\n        },\n        {\n            \"name\": \"Asynchronous jobs :: BPM\"\n        },\n        {\n            \"name\": \"Process instances :: BPM\"\n        },\n        {\n            \"name\": \"Custom queries :: BPM\"\n        },\n        {\n            \"name\": \"Queries - processes, nodes, variables and tasks :: BPM\"\n        },\n        {\n            \"name\": \"User task operations and queries :: BPM\"\n        },\n        {\n            \"name\": \"Process instances administration :: BPM\"\n        },\n        {\n            \"name\": \"User tasks administration :: BPM\"\n        },\n        {\n            \"name\": \"Process and task forms :: BPM\"\n        },\n        {\n            \"name\": \"Process definition and instance images :: BPM\"\n        },\n        {\n            \"name\": \"Planning and solvers :: BRP\"\n        }\n    ]\n}\n",
			"canonicalURL": "/github.com/syndesisio/syndesis@564488060622ebd3710f47dd40372b3acfdd47d8/-/blob/app/server/api-generator/src/test/resources/openapi/v3/kie-server.json",
			"externalURLs": [
				{
					"url": "https://github.com/syndesisio/syndesis/blob/564488060622ebd3710f47dd40372b3acfdd47d8/app/server/api-generator/src/test/resources/openapi/v3/kie-server.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/server/admin/containers/{id}/tasks/errors\": at 1023:55: get: duplicate operationId: \"getExecutionErrors\""
}