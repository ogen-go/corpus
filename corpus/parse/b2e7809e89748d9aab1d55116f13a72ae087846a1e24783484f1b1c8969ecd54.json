{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Deutsche-Boerse-Risk/CloudPrismaMarginEstimator"
		},
		"file": {
			"name": "swagger2-openapi3.yaml",
			"size": 0,
			"path": "swagger2-openapi3.yaml",
			"byteSize": 117154,
			"content": "openapi: 3.0.0\ninfo:\n  title: Cloud Prisma Margin Estimator API\n  version: 2.0-openapi3\n  description: \u003e-\n    Cloud Prisma Margin Estimator (CPME) calculates margin for an uploaded\n    portfolio according to Eurex PRISMA methodology. The application is\n    available to both members and non-members of Eurex Clearing. It can be\n    accessed via web user interface, see [CPME\n    GUI](https://eurexmargins.prod.dbgservice.com), or directly through API,\n    described here.\n\n    The key request is `/estimator`, it is the only request you need to\n    calculate the margin. Other requests provide lists or details of\n    instruments, available dates etc. CPME supports also greek and stress price\n    calculation - these analytical tools are not related to the margin.\n\n    Part of the API is also Cloud Default Fund Estimator (CPDE) which\n    *estimates* Default Fund contribution for an uploaded portfolio according\n    to Eurex methodology. Its key resource is `/default_fund`, similar `/estimator`\n    up to the following differences: historical calculation is not possible\n    for Default Fund; OTC portfolio support is planned only in future.\n\n\n    [FAQ](https://deutsche-boerse-risk.github.io/CloudPrismaMarginEstimator/)\n\n    ## API Key\n\n    For API access please register at [Deutsche Boerse API\n    website](https://console.developer.deutsche-boerse.com/apis).\n\n    There you create your project, subscribe to \"Prisma Margin Estimator\" API\n    and get a key. Use the key in a request header as `X-DBP-APIKEY`, e.g.:\n\n\n    \u003cpre\u003e curl --header 'X-DBP-APIKEY: your-key' \\\n      https://risk.developer.deutsche-boerse.com/prisma-margin-estimator-2-0-0/products\n    \u003c/pre\u003e\n\n\n    Requests from web API portals (Apiary, SwaggerHub) must contain the key as\n    well.\n\n    ## Example in Python\n\n    The\n    **[crossmargining.py](https://github.com/Deutsche-Boerse-Risk/CloudPrismaMarginEstimator-API/blob/master/examples/python/crossmargining.py)**\n    generates a portfolio in CSV format. The portfolio consists of a 10Y EUR\n    interest rate swap starting two days from today and a short position in\n    Euro-Bund futures. Initial margin is calculated with and without cross\n    margining (xm = True and xm = False, respectively) and results are printed.\n    Replace xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx by your API key (see above).\n\n\n    ## Compressing request and response\n\n    Both requests and responses can be compressed by gzip which can reduce\n    response time for large requests and bypass request size limits. Use of\n    compression in submitted request is indicated by `Content-Encoding: gzip`\n    header. Compressed response is requested by `Accept-Encoding: gzip` header.\n    For example:\n\n\n    \u003cpre\u003eecho\n    '{\"portfolio_components\":[{\"type\":\"etd_portfolio\",\"etd_portfolio\":[{\"line_no\":1,\"product_id\":\"FEXD\",\"contract_date\":20301220,\"net_ls_balance\":1}]}]}'\n    \\\n      | gzip \\\n      | curl -s -H \"X-DBP-APIKEY: your-key\" -H \"Content-Type: application/json\" \\\n        https://risk.developer.deutsche-boerse.com/prisma-margin-estimator-2-0-0/estimator \\\n        --data-binary @- -H \"Content-Encoding: gzip\" -H \"Accept-Encoding: gzip\" \\\n      | gunzip\n    \u003c/pre\u003e\n\n\n    It is also possible to use compression only for request or only for\n    response.\n\n    ## Business date and time\n\n    The requests can contain optional business date and time attributes. The\n    application finds the latest snapshot from the requested business date with\n    timestamp equal or smaller than the requested time. If time is not given\n    then the latest timestamp of the business date is used.\n\n    It takes several minutes to start the instance for a specified snapshot,\n    That instance can then serve subsequent requests for the same snapshot.\n    After some inactive time the instance is shutdown. It is recommended not to\n    specify a date and time and calculate current margin or margin as of last\n    end-of-day, see below.\n\n    Example of requesting the latest snapshot of given date, in GET and POST\n    type of request:\n\n    \u003cpre\u003ecurl -H 'X-DBP-APIKEY: your-key' \\\n      'https://risk.developer.deutsche-boerse.com/prisma-margin-estimator-2-0-0/series?products=FGBM\u0026business_date=20190307'\n    echo\n    '{\"snapshot\":{\"business_date\":20190307},\"portfolio_components\":[{\"type\":\"etd_portfolio\",\"etd_portfolio\":[{\"line_no\":1,\"product_id\":\"FEXD\",\"contract_date\":20301220,\"net_ls_balance\":1}]}]}'\n    \\\n      | curl -H 'X-DBP-APIKEY: your-key' \\\n        'https://risk.developer.deutsche-boerse.com/prisma-margin-estimator-2-0-0/estimator' \\\n        --data-binary @-\n    \u003c/pre\u003e\n\n\n    If business date is not given, the latest business date is used. If only\n    live=False is specified, last end-of-day is used. Calculation instance for\n    these two requests is always up, you should not experience any delay.\n\n    Response contains identification of the selected snapshot, see attributes\n    `business_date`, `live` and `live_timestamp`.\n\n    ## Change log\n\n    - 6.8.0 Security Basket ISIN, errors explained\n\n    - 6.5.0 ETD maturity specified preferably by contract_date\n\n    - 6.3.1 Indicative margin resource\n\n    - 6.2.0 Cash Market Repo, ETD CP005 and ETD CSV added to API v2\n\n    - 6.1.1 default 1T payment period for inflation swaps, ignore unknown\n    calendars\n\n    - 5.7.0 support for inflation swaps\n\n    - 5.2.0 request with live=false without date means last end-of-day\n\n    - 4.2.2 list of snapshots can be requested, OTC sensitivities\n\n    - 4.2.1 OTC trade details resource and also included in estimator response\n\n    - 4.1.1 historical snapshots also for list of products, series and\n    currencies\n  termsOfService: https://eurexmargins.prod.dbgservice.com/terms\nservers:\n  - url: https://risk.developer.deutsche-boerse.com/prisma-margin-estimator-2-0-0\n    description: production API with static IP\npaths:\n  /products:\n    get:\n      summary: List All Products\n      description: \u003e-\n        Lists all exchange-traded products, Eurex and ECC. Only `product` and\n        `instrument_type` are returned by default. Remaining attributes (see\n        response) are returned only if specified in `extrafields`.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n        - $ref: '#/components/parameters/extrafields'\n        - $ref: '#/components/parameters/business_date'\n        - $ref: '#/components/parameters/live'\n        - $ref: '#/components/parameters/live_timestamp'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                products:\n                  - product: OSMI\n                    instrument_type: option\n                    clearing_house: EUXCDEFF\n                    prod_name: OPT ON SWISS MARKET INDEX\n                    prod_isin: CH0008616382\n                    underlying_isin: CH0009980894\n                    currency: CHF\n                    product_type: OINX\n                    extended_product_type: null\n                    margin_style_flag: T\n                    exercise_style_flag: E\n                    product_settlement_type: CASH\n                    final_settlement_time: '09:00'\n                    product_tick_size: 0.1\n                    product_tick_value: 1\n                    liquidation_group: PEQ01\n                    xm_eligibility: false\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  products:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        product:\n                          $ref: '#/components/schemas/product_id'\n                        instrument_type:\n                          type: string\n                          enum:\n                            - future\n                            - option\n                          description: Product line, i.e. either future or option\n                        clearing_house:\n                          type: string\n                        prod_name:\n                          type: string\n                        prod_isin:\n                          type: string\n                        underlying_isin:\n                          type: string\n                        currency:\n                          $ref: '#/components/schemas/currency'\n                        product_type:\n                          type: string\n                        extended_product_type:\n                          type: string\n                          description: refinement of product type, can be empty\n                        margin_style_flag:\n                          type: string\n                          enum:\n                            - T\n                            - F\n                          description: T for traditional, F for future-style\n                        exercise_style_flag:\n                          $ref: '#/components/schemas/exercise_style_flag'\n                        product_settlement_type:\n                          type: string\n                          enum:\n                            - PHYSICAL\n                            - CASH\n                        final_settlement_time:\n                          type: string\n                        product_tick_size:\n                          type: number\n                        product_tick_value:\n                          type: number\n                        liquidation_group:\n                          $ref: '#/components/schemas/liquidation_group'\n                        xm_eligibility:\n                          type: boolean\n                      required:\n                        - product\n                        - instrument_type\n  /series:\n    get:\n      summary: List Series of a Product\n      description: \u003e-\n        List all series of exchange traded product(s). Attributes upto `iid` are\n        returned by default. Remaining attributes (see response) are returned\n        only if specified in `extrafields`.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n        - $ref: '#/components/parameters/extrafields'\n        - $ref: '#/components/parameters/business_date'\n        - $ref: '#/components/parameters/live'\n        - $ref: '#/components/parameters/live_timestamp'\n        - name: products\n          in: query\n          description: \u003e-\n            Product ID, there can be multiple instances of the parameter to\n            request series for several products\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                list_series:\n                  - product_id: OGBL\n                    contract_date: 20190621\n                    contract_maturity: 201906\n                    expiry_maturity: 201906\n                    call_put_flag: C\n                    exercise_price: 160\n                    version_number: '0'\n                    iid: 18249016\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  list_series:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        product_id:\n                          $ref: '#/components/schemas/product_id'\n                        contract_date:\n                          $ref: '#/components/schemas/contract_date'\n                        contract_maturity:\n                          $ref: '#/components/schemas/contract_maturity'\n                        expiry_maturity:\n                          $ref: '#/components/schemas/expiry_maturity'\n                        call_put_flag:\n                          $ref: '#/components/schemas/call_put_flag'\n                        exercise_price:\n                          $ref: '#/components/schemas/exercise_price'\n                        version_number:\n                          $ref: '#/components/schemas/version_number'\n                        iid:\n                          $ref: '#/components/schemas/iid'\n                        act_trade_unit_no:\n                          type: number\n                        days_to_expiration:\n                          type: number\n                        trade_unit_value:\n                          type: number\n                        exercise_style_flag:\n                          $ref: '#/components/schemas/exercise_style_flag'\n                        contract_frequency:\n                          $ref: '#/components/schemas/contract_frequency'\n                      required:\n                        - product_id\n                        - contract_date\n                        - contract_maturity\n                        - expiry_maturity\n                        - version_number\n                        - iid\n  /securities:\n    get:\n      summary: Get attributes of securities\n      description: \u003e-\n        Get attributes of securities (equities, bonds, subscription rights) for\n        given ISIN, or all active securities known to the Risk system if ISIN is\n        not specified\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n        - $ref: '#/components/parameters/business_date'\n        - $ref: '#/components/parameters/live'\n        - $ref: '#/components/parameters/live_timestamp'\n        - name: isin\n          in: query\n          schema:\n            type: string\n          description: Security ISIN\n          required: false\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                securities:\n                  - sec_id: DB1\n                    sec_isin: DE0005810055\n                    sec_type: SAKT\n                    sec_name: DEUTSCHE BOERSE AG\n                    iid: 1769\n                    currency: EUR\n                    security_mnemonic: DB1\n                    standard_settlement_period: 2\n                    price_unit: ABSOLUTE\n                    security_subtype: EQUITY\n                    margin_class_code: DB10\n                    basket_isin: false\n                  - sec_id: null\n                    sec_isin: CH0224397171\n                    sec_type: BCNF\n                    sec_name: EIDGENOSSENSCHAFT 15-30\n                    iid: 13528248\n                    currency: CHF\n                    security_mnemonic: null\n                    standard_settlement_period: 3\n                    price_unit: PERCENTAGE\n                    security_subtype: BOND\n                    margin_class_code: S0055\n                    basket_isin: false\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  securities:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        sec_id:\n                          $ref: '#/components/schemas/sec_id'\n                        sec_isin:\n                          $ref: '#/components/schemas/sec_isin'\n                        sec_type:\n                          $ref: '#/components/schemas/sec_type'\n                        sec_name:\n                          $ref: '#/components/schemas/sec_name'\n                        iid:\n                          $ref: '#/components/schemas/iid'\n                        currency:\n                          $ref: '#/components/schemas/currency'\n                        security_mnemonic:\n                          $ref: '#/components/schemas/security_mnemonic'\n                        standard_settlement_period:\n                          $ref: '#/components/schemas/standard_settlement_period'\n                        price_unit:\n                          $ref: '#/components/schemas/price_unit'\n                        security_subtype:\n                          $ref: '#/components/schemas/security_subtype'\n                        margin_class_code:\n                          $ref: '#/components/schemas/margin_class_code'\n                        basket_isin:\n                          $ref: '#/components/schemas/basket_isin'\n  /clearing_currencies:\n    get:\n      summary: List All Clearing Currencies\n      description: List of clearing currencies that can be used in `estimator` request.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n        - $ref: '#/components/parameters/business_date'\n        - $ref: '#/components/parameters/live'\n        - $ref: '#/components/parameters/live_timestamp'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                clearing_currencies:\n                  - EUR\n                  - CHF\n                  - USD\n                  - GBP\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  clearing_currencies:\n                    type: array\n                    items:\n                      type: string\n  /snapshots:\n    get:\n      summary: List Available Snapshots\n      description: \u003e-\n        List of end-of-day or start-of-day snapshots that can be used in other\n        requests.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n        - $ref: '#/components/parameters/business_date_from'\n        - $ref: '#/components/parameters/business_date_to'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              example:\n                snapshots:\n                  - business_date: 20180809\n                    live: false\n                    otc_available: true\n                    cash_available: false\n                  - business_date: 20180810\n                    live: true\n                    otc_available: true\n                    cash_available: false\n              schema:\n                type: object\n                properties:\n                  snapshots:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        business_date:\n                          $ref: '#/components/schemas/business_date'\n                        live:\n                          $ref: '#/components/schemas/live'\n                        otc_available:\n                          $ref: '#/components/schemas/otc_available'\n                        cash_available:\n                          $ref: '#/components/schemas/cash_available'\n  /live_snapshots:\n    get:\n      summary: List Available Live Snapshots for Given Day\n      description: \u003e-\n        List of live (intraday) snapshots for given business_date. Contains also\n        start-of-day snapshot.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n        - $ref: '#/components/parameters/business_date'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              example:\n                snapshots:\n                  - business_date: 20180809\n                    live: true\n                    otc_available: true\n                    cash_available: false\n                    live_timestamp: 0\n                  - business_date: 20180809\n                    live: true\n                    otc_available: true\n                    cash_available: false\n                    live_timestamp: 1562162876\n              schema:\n                type: object\n                properties:\n                  snapshots:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        business_date:\n                          $ref: '#/components/schemas/business_date'\n                        live:\n                          $ref: '#/components/schemas/live'\n                        otc_available:\n                          $ref: '#/components/schemas/otc_available'\n                        cash_available:\n                          $ref: '#/components/schemas/cash_available'\n                        live_timestamp:\n                          $ref: '#/components/schemas/live_timestamp'\n  /estimator:\n    post:\n      summary: Margin Calculation Request\n      description: \u003e-\n        # Margin Calculation\n\n        Portfolio is sent in the request and margin is returned as a response.\n        The request can contain exchange traded derivatives (ETD) portfolio, OTC\n        portfolio or Cash Market portfolio (equities and bonds) or any\n        combination of these assets:\n\n        - ETD is submitted as\n          - `etd_portfolio` JSON array, see request model\n          - or `etd_csv` with positions in CSV format\n          - or `etd_cp005`, i.e. using Eurex CP005 XML report\n\n        - OTC is submitted as\n          - `otc_csv` with trades in CSV format known from Margin Calculator or Prisma Margin Estimator, see description bellow\n          - or `otc_sensitivities` with sensitivities in CSV format\n          - or `otc_fpml`\n          - or `otc_cb202`, i.e. EurexOTC CB202 or CB207 report\n\n        - Cash Market is submitted as\n          - `repo_json` JSON array of `repo_json_position` objects, see the model\n          - other Cash Market instruments are currently not supported\n\n        ## ETD portfolio as JSON array\n\n        `etd_portfolio` instruments are specified either by full key  or by\n        technical `iid`. The technical `iid` takes precedence if both keys are\n        sent. The position always needs `line_no` and `net_ls_balance`.\n\n        The full key for series depends on instrument type, these are the\n        mandatory fields:\n\n        - Future: `product`, `contract_date` as YYYYMMDD, `version_number`\n        (defaults to 0)\n\n        - Option: `product`, `contract_date` as YYYYMMDD, `call_put_flag`,\n        `exercise_price`, `version_number` (defaults to 0)\n\n        - Flex Future: `instrument_type`: \"Flex Future\", `product`,\n        `contract_date` as YYYYMMDD, `version_number` (defaults to 0)\n\n        - Flex Option: `instrument_type`: \"Flex Option\", `product`,\n        `contract_date` as YYYYMMDD, `call_put_flag`, `exercise_price`,\n        `exercise_style`, `version_number` (defaults to 0)\n\n\n        Only already existing Flex Future or Flex Option can be submitted, not a\n        new one (e.g. different strike or expiry day).\n\n        For backward compatibility `maturity` as YYYYMM (DD added for flex) can\n        be used instead of `contract_date`, however it is not recommended as\n        uniqueness is not guaranteed.\n\n        Example of minimal request with one future contract:\n\n\n        \u003cpre\u003e curl --header 'X-DBP-APIKEY: your-key' \\\n          https://risk.developer.deutsche-boerse.com/prisma-margin-estimator-2-0-0/estimator \\\n          -d '{\"portfolio_components\":[{\"type\":\"etd_portfolio\",\"etd_portfolio\":[{\"line_no\":1,\"product_id\":\"FEXD\",\"contract_date\":20301220,\"net_ls_balance\":1}]}]}'\n        \u003c/pre\u003e\n\n\n        ## OTC CSV format\n\n        The CSV describing all trades is submitted as one string in `csv`\n        attribute of `otc_csv` structure starting with header. Lines separated\n        by `\\n`.\n\n        One line contains all information for one trade, including both its\n        legs. All columns must be present, although some can be empty. Mandatory\n        columns are marked by asterisk *. For certain trade types, even some\n        optional columns must be filled, see the description. If unsure about\n        possible combinations of attribute values please refer to\n          [EurexOTC Clear IRS Product List](https://www.eurexclearing.com/resource/blob/227404/ff4638f2a3bfedbf511868ef54c6a153/data/ec15075e_Attach.pdf)\n          or the [OTC template description](https://github.com/Deutsche-Boerse-Risk/CloudPrismaMarginEstimator/raw/master/templates/otc/OTC_template_description.xls).\n\n\n        ### Basic OTC trade attributes\n\n        - internalTradeID*: id of the trade to distinguish it in drilldown, must\n        be unique\n\n        - tradeType*: IRS, Basis swap, OIS, FRA, VNS, ZCIS\n\n        - currency*: ISO code of currency, e.g. EUR, CHF, USD, GBP\n\n        - effectiveDate*: effective date as DD/MM/YYYY, e.g. 20/12/2018\n\n        - terminationDate*: termination date as DD/MM/YYYY, e.g. 20/12/2028\n\n\n        ### Pay leg attributes\n\n        - payLegType*: fixedLeg or floatingLeg\n\n        - payLegSpread: rate for fixedLeg in %, or spread (optional) for\n        floatingLeg in bp\n\n        - payLegIndex: index for floatingLeg, if empty, default index for the\n        currency is selected\n\n        - payInterestFixedAmount: allowed for fixedLeg only, lump sum paid at\n        maturity of zero coupon swap\n\n        - payNotional*: notional\n\n        - payPaymentPeriod*: 1M, 3M, 6M, 12M, 1Y, 1T (for zero-coupon);\n        inflation swaps always use 1T no matter what period is given\n\n        - payPeriodStartVNS: fill only for VNS\n\n        - payCompounding: fill only for compounding swap, Flat or Straight\n\n        - payCompoundingIndexPeriod: period for compounding swap, 1M, 3M, 6M,\n        12M, 1Y\n\n        - payStub: fill only if the leg has a stub, LongFinal, LongInitial,\n        ShortInitial, ShortFinal\n\n        - payFirstRate: first pre-defined rate\n\n        - payFirstInterpolationTenor: stub interpolation tenor for floatingLeg,\n        1W, 1M, 3M, 6M, ...\n\n        - paySecondInterpolationTenor: stub interpolation tenor for floatingLeg,\n        1W, 1M, 3M, 6M, ...\n\n        - payDayCountMethod*: 30/360, 30E/360, 30E/360.ISDA, ACT/360,\n        ACT/365.FIXED, ACT/ACT.ISDA, ACT/365.ISDA, ACT/ACT.ICMA, ACT/ACT.ISMA,\n        1/1, ...\n\n        - payBusinessDayConvention: MODFOLLOWING, FOLLOWING, PRECEDING, ...\n\n        - payPaymentCalendar: EUTA, CHZU, GBLO, USNY, DEFR, ITMI, FRPA, ESMA,\n        BEBR, JPTO, DKCO, NOOS, SEST, PLWA, ... calendars can be combined with\n        \"+\"; unknown calendar is ignored\n\n        - payAdjustment: ADJUSTED, UNADJUSTED, MAT_UNADJUSTED, ...\n\n        - payRollMethod: Standard, IMM, EOM, ...\n\n\n        ### Receive leg attributes\n\n        The receive leg has the same attributes as pay leg above, except prefix\n        \"pay\" is replaced by \"rcv\".\n\n        ## OTC sensitivities in CSV format\n\n        The whole portfolio is described by a table of DV01 sensitivities,\n        submitted in CSV format known from Margin Calculator. The columns are\n        curves and rows maturities - see the example in request model.\n\n        ## OTC reports CB202, CB207\n\n        See Eurex OTC member documentation for CB202 and CB207 reports. Only\n        positions from one specified account or risk netting unit (ARNU) will be\n        evaluated, see the attributes of `otc_cb202` structure below. We\n        recommend using gzip compression in the request, see above.\n\n        ## OTC FpML\n\n        See the public definition for FpML format. It is submitted as\n        `otc_fpml`. The `party` attribute is mandatory, see below. We recommend\n        using gzip compression in the request, see above.\n\n        ## Repo JSON\n\n        `portfolio_components/repo_json` defines special Repo (single-ISIN Repo)\n        positions. For attribute details see the model below.\n\n        # What-If analysis\n\n        Estimator request allows to perform what-if analysis for ETD and OTC, i.e. it answers the question what would be the portfolio margin when a set of positions or trades is added to a base portfolio. The added trades are submitted a separate portfolio component(s) marked by non-zero whatif_id. Multiple scenarios (different sets of trades to add) can be tested with one request, the scenarios are distinguished by whatif_id.\n\n        Results for the base portfolio are returned in portfolio_margin as for standard request. Portfolio margins for the scenarios are returned in array whatif_portfolio_margin. They are total margins for the base portfolio plus the added trades. To learn the margin increase or decrease caused by the added trades, subtract margin of the base portfolio from the what-if portfolio margin. Drilldowns are returned only for the base portfolio.\n\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            example:\n              portfolio_components:\n                - type: etd_portfolio\n                  etd_portfolio:\n                    - line_no: 1\n                      product_id: FEXD\n                      contract_date: 20301220\n                      net_ls_balance: 10\n                    - line_no: 2\n                      product_id: OESD\n                      contract_date: 20311222\n                      call_put_flag: C\n                      exercise_price: 90\n                      net_ls_balance: -10\n            schema:\n              type: object\n              properties:\n                snapshot:\n                  $ref: '#/components/schemas/snapshot'\n                clearing_currency:\n                  $ref: '#/components/schemas/clearing_currency'\n                is_cross_margined:\n                  type: boolean\n                  description: enable cross-margining between OTC and Fixed Income\n                  example: true\n                simulated_settlement_date:\n                  $ref: '#/components/schemas/simulated_settlement_date'\n                portfolio_components:\n                  type: array\n                  description: array of portfolio components\n                  items:\n                    type: object\n                    description: \u003e-\n                      one portfolio component, only type and one structure\n                      relevant for the type is filled\n                    required:\n                      - type\n                    properties:\n                      type:\n                        type: string\n                        description: type of this component\n                        example: etd_portfolio\n                        enum:\n                          - etd_portfolio\n                          - etd_csv\n                          - etd_cp005\n                          - otc_csv\n                          - otc_sensitivities\n                          - otc_cb202\n                          - otc_fpml\n                          - cash_json\n                          - cash_csv\n                          - repo_json\n                      etd_portfolio:\n                        $ref: '#/components/schemas/etd_portfolio'\n                      etd_csv:\n                        $ref: '#/components/schemas/etd_csv'\n                      etd_cp005:\n                        $ref: '#/components/schemas/etd_cp005'\n                      otc_csv:\n                        $ref: '#/components/schemas/otc_csv'\n                      otc_sensitivities:\n                        $ref: '#/components/schemas/otc_sensitivities'\n                      otc_cb202:\n                        $ref: '#/components/schemas/otc_cb202'\n                      otc_fpml:\n                        $ref: '#/components/schemas/otc_fpml'\n                      cash_json:\n                        $ref: '#/components/schemas/cash_json'\n                      cash_csv:\n                        $ref: '#/components/schemas/cash_csv'\n                      repo_json:\n                        $ref: '#/components/schemas/repo_json'\n                      whatif_id:\n                        $ref: '#/components/schemas/whatif_id'\n              required:\n                - portfolio_components \n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                clearing_currency: EUR\n                errors:\n                  - line_no: 2\n                    error_msg: 'Line 1 instrument iid not recognized: 736947'\n                portfolio_margin:\n                  - liquidation_group: PEQ01\n                    liquidation_group_split: PFI01_HP2_T0-99999\n                    initial_margin: 3161.708587\n                    market_risk: 3155.266149\n                    liquidity_addon: 6.442439\n                    long_option_credit: 0\n                    time_to_expiry_adjustment: 0\n                    premium_margin: 0\n                    market_risk_per_rms:\n                      - rms_name: FILTERED_HISTORICAL_VAR_2\n                        simulation_type: Historical\n                        rms_market_risk: 4991.692879\n                        weighting_factor: 0.51\n                        rms_components:\n                          - subsample_id: 1\n                            risk_measure_value: 4481.692879\n                            correlation_break_adjustment: 500\n                            compression_adjustment: 10\n                rbm_margin:\n                  margin_classes:\n                    - margin_class_code: DB10\n                      margin_group_code: null\n                      margin_parameter: 5.5\n                      margin_parameter_flag: P\n                      cash_interest_rate: -0.566\n                      additional_margin: 1026812\n                      additional_margin_before_grouping: 1026812\n                      current_liquidating_margin: 851977\n                      margin_class_currency: EUR\n                      positions:\n                        - line_no: 1\n                          sec_isin: DE0005810055\n                          sec_name: DEUTSCHE BOERSE AG\n                          settlement_date: 20210312\n                          net_security_position: 64100\n                          net_cash_position: -10310484\n                          amount_clv_secu: 62100\n                          amount_clv_cash: -10310484\n                          current_liquidating_margin: 851977\n                    - margin_class_code: C004I\n                      margin_group_code: null\n                      margin_parameter: 2.35\n                      margin_parameter_flag: P\n                      cash_interest_rate: 0.02\n                      additional_margin: 6\n                      additional_margin_before_grouping: 6\n                      current_liquidating_margin: -9592\n                      margin_class_currency: USD\n                      positions:\n                        - line_no: 2\n                          sec_isin: US240718A929\n                          sec_name: null\n                          settlement_date: 20210312\n                          net_security_position: -1066\n                          net_cash_position: 10661\n                          amount_clv_secu: 10680\n                          amount_clv_cash: 10661\n                          current_liquidating_margin: -9592\n                drilldowns:\n                  - line_no: 1\n                    product_id: OEXD\n                    call_put_flag: C\n                    exercise_price: 90\n                    version_number: '0'\n                    iid: 18249016\n                    contract_date: 20311222\n                    maturity: 203112\n                    net_ls_balance: 10\n                    liquidation_group: PFI01\n                    liquidation_group_split: PFI01_HP2_T0-99999\n                    component_margin: 2382.083819\n                    component_margin_currency: EUR\n                    premium_margin: 0\n                    premium_margin_currency: EUR\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  clearing_currency:\n                    $ref: '#/components/schemas/clearing_currency'\n                  error:\n                    $ref: '#/components/schemas/error'                    \n                  errors:\n                    $ref: '#/components/schemas/errors'\n                  portfolio_margin:\n                    $ref: '#/components/schemas/portfolio_margin'\n                  rbm_margin:\n                    $ref: '#/components/schemas/rbm_margin'\n                  what_if_portfolio_margin:\n                    $ref: '#/components/schemas/whatif_portfolio_margin'\n                  drilldowns:\n                    $ref: '#/components/schemas/etd_positions'\n                  otc_drilldowns:\n                    type: array\n                    description: \u003e-\n                      Margin figures and short trade desription on OTC trade\n                      level. Internal Trade Id is used as a key.\n                    items:\n                      type: object\n                      properties:\n                        trade_id:\n                          $ref: '#/components/schemas/trade_id'\n                        liquidation_group:\n                          $ref: '#/components/schemas/liquidation_group'\n                        liquidation_group_split:\n                          $ref: '#/components/schemas/liquidation_group_split'\n                        npv:\n                          type: number\n                          description: Net Present Value of the trade in notional currency\n                        dv01:\n                          type: number\n                          description: DV01 (interest rate) sensitivity of the trade in notional currency\n                        ie01:\n                          type: number\n                          description: IE01 (inflation rate) sensitivity of the trade in notional currency - optional\n                        component_margin:\n                          $ref: '#/components/schemas/component_margin'\n                        component_margin_currency:\n                          $ref: '#/components/schemas/component_margin_currency'\n                        type:\n                          $ref: '#/components/schemas/otc_type'\n                        pay:\n                          $ref: '#/components/schemas/pay'\n                        receive:\n                          $ref: '#/components/schemas/receive'\n                        notional:\n                          $ref: '#/components/schemas/notional'\n                        notional_currency:\n                          $ref: '#/components/schemas/notional_currency'\n                        maturity:\n                          $ref: '#/components/schemas/otc_maturity'\n\n  /otc_trade_details:\n    post:\n      summary: OTC Trade Details\n      description: \u003e-\n        Return a short human-readable description of OTC trade, e.g. to display\n        on a GUI. The description is not complete, i.e. it is not sufficient to\n        evaluate the trade.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        content:\n          application/json:\n            example:\n              portfolio_components:\n                - type: otc_csv\n                  otc_csv:\n                    csv: \u003e-\n                      internalTradeID,tradeType,currency,effectiveDate,terminationDate,legType,legSpread,legIndex,interestFixedAmount,notional,paymentPeriod,periodStartVNS,compounding,compoundingIndexPeriod,stub,firstRate,firstInterpolationTenor,secondInterpolationTenor,dayCountMethod,businessDayConvention,paymentCalendar,adjustment,rollMethod,legType,legSpread,legIndex,interestFixedAmount,notional,paymentPeriod,periodStartVNS,compounding,compoundingIndexPeriod,stub,firstRate,firstInterpolationTenor,secondInterpolationTenor,dayCountMethod,businessDayConvention,paymentCalendar,adjustment,rollMethod\\n1,FRA,EUR,20/12/2018,20/08/2019,fixedLeg,0.15,,,100000000,3M,,,,,,,,ACT/360,,,,,floatingLeg,,,,100000000,3M,,,,,,,,ACT/360,,,,\n            schema:\n              type: object\n              properties:\n                snapshot:\n                  $ref: '#/components/schemas/snapshot'\n                portfolio_components:\n                  type: array\n                  description: array of portfolio components\n                  items:\n                    type: object\n                    description: \u003e-\n                      one portfolio component, only type and one structure\n                      relevant for the type is filled\n                    required:\n                      - type\n                    properties:\n                      type:\n                        type: string\n                        description: type of this component\n                        example: etd_portfolio\n                      otc_csv:\n                        $ref: '#/components/schemas/otc_csv'\n                      otc_cb202:\n                        $ref: '#/components/schemas/otc_cb202'\n                      otc_fpml:\n                        $ref: '#/components/schemas/otc_fpml'\n              required:\n                - portfolio_components \n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                otc_trade_details:\n                  - trade_id: '1'\n                    type: FRA\n                    pay: Fixed 0.15%\n                    receive: EUR-EURIBOR-3M\n                    notional: 100000000\n                    notional_currency: EUR\n                    maturity: 0.8Y\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  otc_trade_details:\n                    $ref: '#/components/schemas/otc_trade_details'\n                  error:\n                    $ref: '#/components/schemas/error'\n                  errors:\n                    $ref: '#/components/schemas/errors'\n\n  /otc_sensitivities:\n    post:\n      summary: OTC Sensitivities\n      description: \u003e-\n        Return a table of DV01 (delta) sensitivities of OTC portfolio, per curve\n        and maturity bucket. The sensitivity table is accepted as\n        `otc_sensitivities` input for `estimator` request and can be used\n        instead of the whole OTC portfolio for faster margin computation.\n      externalDocs:\n        url: \u003e-\n          https://github.com/Deutsche-Boerse-Risk/CloudPrismaMarginEstimator/raw/master/templates/otc/OTC_sensitivities_template.xlsm\n        description: Example of the DV01 Sensitivities table as Excel sheet\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        content:\n          application/json:\n            example:\n              portfolio_components:\n                - type: otc_csv\n                  otc_csv:\n                    csv: \u003e-\n                      internalTradeID,tradeType,currency,effectiveDate,terminationDate,legType,legSpread,legIndex,interestFixedAmount,notional,paymentPeriod,periodStartVNS,compounding,compoundingIndexPeriod,stub,firstRate,firstInterpolationTenor,secondInterpolationTenor,dayCountMethod,businessDayConvention,paymentCalendar,adjustment,rollMethod,legType,legSpread,legIndex,interestFixedAmount,notional,paymentPeriod,periodStartVNS,compounding,compoundingIndexPeriod,stub,firstRate,firstInterpolationTenor,secondInterpolationTenor,dayCountMethod,businessDayConvention,paymentCalendar,adjustment,rollMethod\\n1,FRA,EUR,20/12/2018,20/08/2019,fixedLeg,0.15,,,100000000,3M,,,,,,,,ACT/360,,,,,floatingLeg,,,,100000000,3M,,,,,,,,ACT/360,,,,\n            schema:\n              type: object\n              properties:\n                snapshot:\n                  $ref: '#/components/schemas/snapshot'\n                portfolio_components:\n                  type: array\n                  description: array of portfolio components\n                  items:\n                    type: object\n                    description: \u003e-\n                      one portfolio component, only type and one structure\n                      relevant for the type is filled\n                    required:\n                      - type\n                    properties:\n                      type:\n                        type: string\n                        description: type of this component\n                        example: otc_csv\n                      otc_csv:\n                        $ref: '#/components/schemas/otc_csv'\n                      otc_cb202:\n                        $ref: '#/components/schemas/otc_cb202'\n                      otc_fpml:\n                        $ref: '#/components/schemas/otc_fpml'\n              required:\n                - portfolio_components \n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                curves:\n                  - EUR.ESTR\n                dv01_per_maturity:\n                  - maturity: 'ON'\n                    dv01:\n                      - 123.456\n                csv: Maturity,EUR.ESTR\\nON,123.456\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  curves:\n                    type: array\n                    items:\n                      type: string\n                      description: name of a interest rate curve\n                      example: EUR.EURIBOR.1M\n                  dv01_per_maturity:\n                    type: array\n                    items:\n                      type: object\n                      description: DV01 for different curves of one maturity\n                      properties:\n                        maturity:\n                          $ref: '#/components/schemas/otc_maturity'\n                        dv01:\n                          type: array\n                          items:\n                            type: number\n                            example: -284.4\n                  csv:\n                    type: string\n                    description: \u003e-\n                      the DV01 table as one string in format that can be\n                      directly submitted to margin estimation\n                  error:\n                    $ref: '#/components/schemas/error'\n                  errors:\n                    $ref: '#/components/schemas/errors'\n\n  /greeks:\n    post:\n      summary: Greek Calculation Request\n      description: \u003e-\n        Calculate analytical greeks (sensitivities) for given exchange traded\n        instruments. The instruments are specified by a technical `iid` that can\n        be obtained by `series` query. Two types of greeks are offered:\n\n        - numerical derivative of change in instrument price in product currency\n        w.r.t. change in given variable, e.g. DELTA is w.r.t. change in\n        underlying price\n\n        - the above greek converted to EUR:\n          - EURO_DELTA, EURO_GAMMA: (_underlying price_ + _price offset_) \\* _greek_ \\* _fx conversion to EUR_\n          - EURO_RHO, EURO_THETA, EURO_VEGA: _greek_ \\* _fx conversion to EUR_\n\n        Optionally, vector of relative underlying shifts can be supplied to\n        calculate stress greeks (except DV01, there shifts are ignored) in\n        scenarios where underlying price moved. Note that the method of\n        calculation is slightly different, therefore the result for request\n        without shift may differ from result with zero shift.\n\n        To get a position greek, the instrument greek has to be multiplied by\n        position size and trade unit value (TUV).\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        content:\n          application/json:\n            example:\n              greek_types:\n                - EURO_DELTA\n                - EURO_VEGA\n              underlying_shifts_rel:\n                - -0.01\n                - 0.01\n              iids:\n                - 26807581\n                - 27471356\n            schema:\n              type: object\n              properties:\n                snapshot:\n                  $ref: '#/components/schemas/snapshot'\n                greek_types:\n                  $ref: '#/components/schemas/greek_types'\n                underlying_shifts_rel:\n                  $ref: '#/components/schemas/underlying_shifts_rel'\n                iids:\n                  $ref: '#/components/schemas/iids'\n              required:\n                - greek_types\n                - iids\n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                greek_types:\n                  - EURO_DELTA\n                underlying_shifts_rel:\n                  - -0.01\n                  - 0.01\n                greeks:\n                  - iid: 26807581\n                    values:\n                      - - 674\n                        - 565\n                  - iid: 27471356\n                    values:\n                      - - 0.65957\n                        - 0.6809\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  greek_types:\n                    $ref: '#/components/schemas/greek_types'\n                  underlying_shifts_rel:\n                    $ref: '#/components/schemas/underlying_shifts_rel'\n                  greeks:\n                    type: array\n                    items:\n                      type: object\n                      description: \u003e-\n                        Array of arrays of greeks for given instrument per greek\n                        type and per underlying shift rel, in the order given by\n                        type and shift vectors\n                    properties:\n                      iid:\n                        $ref: '#/components/schemas/iid'\n                      values:\n                        type: array\n                        items:\n                          type: array\n                          items:\n                            type: number\n                  error:\n                    $ref: '#/components/schemas/error'\n                  errors:\n                    $ref: '#/components/schemas/errors'\n\n  /stressmatrix:\n    post:\n      summary: Stress Matrix Request\n      description: \u003e-\n        Calculate theoretical prices of given exchange traded instruments in\n        stressed scenarios. The scenario can have shifted underlying price\n        and/or volatility. In one request, vector of underlying price shifts and\n        volatility shifts is specified and the result then contains stress\n        matrix with prices for each combination of the underlying price and\n        volatility shift.\n\n        The volatility shift can be either relative or absolute. For example,\n        when current volatility is 20%:\n\n        - relative shift 0.1 means the stressed volatility is 20% \\* (1+0.1) =\n        22%\n\n        - absolute shift 0.1 means stressed volatility is 20% + 0.1% = 20.1%\n\n\n        For futures, volatility shift has no effect and the underlying price\n        shift changes directly the future price, theoretical pricing model is\n        not used.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        content:\n          application/json:\n            example:\n              underlying_shifts_rel:\n                - 0.01\n              volatility_shifts:\n                - -0.1\n                - 0.1\n              volatility_shift_type: ABSOLUTE\n              iids:\n                - 26807581\n                - 27471356\n            schema:\n              type: object\n              properties:\n                snapshot:\n                  $ref: '#/components/schemas/snapshot'\n                underlying_shifts_rel:\n                  $ref: '#/components/schemas/underlying_shifts_rel'\n                volatility_shifts:\n                  $ref: '#/components/schemas/volatility_shifts'\n                volatility_shift_type:\n                  $ref: '#/components/schemas/volatility_shift_type'\n                iids:\n                  $ref: '#/components/schemas/iids'\n              required:\n                - iids\n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              example:\n                business_date: 20180809\n                live: false\n                live_timestamp: 0\n                underlying_shifts_rel:\n                  - 0.01\n                volatility_shifts:\n                  - -0.1\n                  - 0.1\n                volatility_shift_type: RELATIVE\n                stress_matrix:\n                  - iid: 26807581\n                    values:\n                      - - 0.65957\n                      - - 0.6809\n                  - iid: 27471356\n                    values:\n                      - - 0.65957\n                      - - 0.6809\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  underlying_shifts_rel:\n                    $ref: '#/components/schemas/underlying_shifts_rel'\n                  volatility_shifts:\n                    $ref: '#/components/schemas/volatility_shifts'\n                  volatility_shift_type:\n                    $ref: '#/components/schemas/volatility_shift_type'\n                  stress_matrix:\n                    type: array\n                    items:\n                      type: object\n                      description: \u003e-\n                        Array of arrays of prices for given instrument per\n                        underlying price shift and volatility shift, in the\n                        order given by price and vola shift vectors\n                      properties:\n                        iid:\n                          $ref: '#/components/schemas/iid'\n                        values:\n                          type: array\n                          items:\n                            type: array\n                            items:\n                              type: number\n                  error:\n                    $ref: '#/components/schemas/error'\n                  errors:\n                    $ref: '#/components/schemas/errors'\n\n  /convert/etd/cp005:\n    post:\n      summary: \u003e-\n        Convert Eurex ETD CP005 position report to JSON ETD representation for\n        CPME\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                member:\n                  type: string\n                  description: \u003e-\n                    optional attribute to process only positions of the member,\n                    if not given the clearing member is used\n                account:\n                  type: string\n                  description: \u003e-\n                    optional attribute to process only positions on that\n                    account, if not given \"PP\" account is used\n                xml:\n                  type: string\n                  description: exchange traded portfolio as Eurex report CP005\n              required:\n                - xml\n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/etd_portfolio'\n\n  /convert/otc/shorthand:\n    post:\n      summary: Convert a short text description of the trade to OTC CSV\n      description: \u003e-\n        Text description of a trade similar to Clarus Quick Trade format is\n        converted to OTC CSV representation that can be used for margin\n        calculation. Response contains also trade details. The expected trade\n        format is contains currency, notional, maturity, side and optionaly rate.\n        E.g. \"USD 200m 10Y pay 1.5%\". When the rate is not given, CPME uses par-rate.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                otc_shorthand_lines:\n                  type: string\n                  description: Text description of OTC trade(s), separated by newline\n                  example: USD 200m 10Y pay 1.5%\n              required:\n                - otc_shorthand_lines\n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: '#/components/schemas/error'\n                  errors:\n                    $ref: '#/components/schemas/errors'\n                  otc_csv:\n                    $ref: '#/components/schemas/otc_csv_string'\n                  otc_trade_details:\n                    $ref: '#/components/schemas/otc_trade_details'\n\n  /convert/cash/csv:\n    post:\n      summary: \u003e-\n        Convert cash market portfolio in CSV format to JSON representation\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                csv:\n                  $ref: '#/components/schemas/cash_csv'\n              required:\n                - csv\n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cash_json'\n\n  /indicative_margin:\n    get:\n      summary: Indicative margin for front month future contracts\n      description: \u003e-\n        Get indicative margin for one future contract (front month contract of\n        given future product) in EUR. By default all Eurex futures are included,\n        unless ECC clearing house is selected or a specific product or products\n        is requested.\n\n        The resulting long_initial_margin_cash and short_initial_margin_cash is\n        equivalent to the margin calculated by individual /estimator requests\n        for portfolio of one long or short contract, respectively.\n\n        The relative long_initial_margin and short_initial_margin is the cash\n        margin divided by (current underlying price converted to EUR * trade\n        unit value).\n\n        Optionally business date can be specified to get historical indicative\n        margins, by default CPME returns the most recent values. In contrast to\n        estimator request, which uses end-of-day for historical calculation\n        (unless time is specified), indicative margin is always for start-of-day\n        (published in the morning to indicate margin during the day).\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n        - name: clearing_house\n          in: query\n          description: \u003e-\n            Either EUXCDEFF (i.e. Eurex, the default choice) or EEXCDE8L (i.e.\n            European Commodity Clearing, linked to EEX = European Energy\n            Exchange).\n          required: false\n          schema:\n            type: string\n            enum:\n              - EUXCDEFF\n              - EEXCDE8L\n            default: EUXCDEFF\n        - name: products\n          in: query\n          description: \u003e-\n            Product ID of the future, there can be multiple instances of the\n            parameter to request margin for several future products. If not\n            provided the result will contain margin for all future products.\n          required: false\n          schema:\n            type: string\n        - name: format\n          in: query\n          description: Required result format, JSON (default), XLS or XLSX spreadsheet.\n          required: false\n          schema:\n            type: string\n            enum:\n              - JSON\n              - XLS\n              - XLSX\n            default: JSON\n        - $ref: '#/components/parameters/business_date'\n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              example:\n                business_date: 20210622\n                live: false\n                live_timestamp: 0\n                list_margins:\n                  - liquidation_group: PEQ01\n                    product_id: DB1H\n                    prod_name: FUT ON DT. BOERSE AG\n                    margin_currency: EUR\n                    long_initial_margin: 0.100004254\n                    long_initial_margin_cash: 1479.062914\n                    short_initial_margin: 0.11544631\n                    short_initial_margin_cash: 1707.450925\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  list_margins:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        liquidation_group:\n                          $ref: '#/components/schemas/liquidation_group'\n                        product_id:\n                          $ref: '#/components/schemas/product_id'\n                        prod_name:\n                          type: string\n                        margin_currency:\n                          $ref: '#/components/schemas/currency'\n                        long_initial_margin:\n                          type: number\n                        long_initial_margin_cash:\n                          type: number\n                        short_initial_margin:\n                          type: number\n                        short_initial_margin_cash:\n                          type: number\n  \n  /config/{param}:\n    get:\n      summary: Read configuration parameter\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n        - name: param\n          in: path\n          description: name of the parameter\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              example:\n                max_body_size: 262144000\n              schema:\n                type: object\n                properties:\n                  max_body_size:\n                    type: number\n                    description: maximum allowed body size of request in bytes\n\n  /default_fund:\n    post:\n      summary: Approximate Calculation of Default Fund contribution\n      description: \u003e-\n        Portfolio is sent in the request and Default Fund contribution is returned as a response.\n        The request can contain exchange traded derivatives (ETD) portfolio, or Cash Market portfolio (equities, bonds, repos) or any combination of these assets:\n\n        - ETD is submitted as\n          - `etd_portfolio` JSON array, see request model\n          - or `etd_csv` with positions in CSV format\n          - or `etd_cp005`, i.e. using Eurex CP005 XML report\n\n        - Cash Market is submitted as\n          - `repo_json` JSON array of `repo_json_position` objects, see the model\n          - `cash_json` JSON array of `cash_json_position` objects, see the model\n          - or `cash_csv` with cash market positions in CSV format\n\n        See the `/estimator` request for description of the input structures\n\n        Example of minimal request with one future contract:\n\n\n        \u003cpre\u003e curl --header 'X-DBP-APIKEY: your-key' \\\n          https://risk.developer.deutsche-boerse.com/prisma-margin-estimator-2-0-0/default_fund \\\n          -d '{\"portfolio_components\":[{\"type\":\"etd_portfolio\",\"etd_portfolio\":[{\"line_no\":1,\"product_id\":\"FEXD\",\"contract_date\":20301220,\"net_ls_balance\":1}]}]}'\n        \u003c/pre\u003e\n\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            example:\n              portfolio_components:\n                - type: etd_portfolio\n                  etd_portfolio:\n                    - line_no: 1\n                      product_id: FEXD\n                      contract_date: 20301220\n                      net_ls_balance: 10\n                    - line_no: 2\n                      product_id: OEXD\n                      contract_date: 20311222\n                      call_put_flag: C\n                      exercise_price: 90\n                      net_ls_balance: -10\n            schema:\n              type: object\n              properties:\n                clearing_currency:\n                  $ref: '#/components/schemas/clearing_currency'\n                is_cross_margined:\n                  type: boolean\n                  description: enable cross-margining between OTC and Fixed Income\n                  example: true\n                include_drilldowns:\n                  type: boolean\n                  description: include results on position level in the response\n                  example: false\n                  default: false\n                portfolio_components:\n                  type: array\n                  description: array of portfolio components\n                  items:\n                    type: object\n                    description: \u003e-\n                      one portfolio component, only type and one structure\n                      relevant for the type is filled\n                    required:\n                      - type\n                    properties:\n                      type:\n                        type: string\n                        description: type of this component\n                        example: etd_portfolio\n                        enum:\n                          - etd_portfolio\n                          - etd_csv\n                          - etd_cp005\n                          - cash_json\n                          - repo_json\n                      etd_portfolio:\n                        $ref: '#/components/schemas/etd_portfolio'\n                      etd_csv:\n                        $ref: '#/components/schemas/etd_csv'\n                      etd_cp005:\n                        $ref: '#/components/schemas/etd_cp005'\n                      repo_json:\n                        $ref: '#/components/schemas/repo_json'\n                      cash_json:\n                        $ref: '#/components/schemas/cash_json'\n                      cash_csv:\n                        $ref: '#/components/schemas/cash_csv'\n              required:\n                - portfolio_components \n      responses:\n        '200':\n          description: response from CPME API, can be error if \"error\" element or \"errors\" array is present, otherwise OK \n          content:\n            application/json:\n              example:\n                business_date: 20220905\n                live: false\n                live_timestamp: 0\n                clearing_currency: EUR\n                errors:\n                  - line_no: 2\n                    error_msg: 'Line 1 instrument iid not recognized: 736947'\n                portfolio_margin:\n                  - liquidation_group: PEQ01\n                    liquidation_group_split: PFI01_HP2_T0-99999\n                    initial_margin: 3161.708587\n                    market_risk: 3155.266149\n                    liquidity_addon: 6.442439\n                    long_option_credit: 0\n                    time_to_expiry_adjustment: 0\n                    premium_margin: 0\n                    market_risk_per_rms:\n                      - rms_name: FILTERED_HISTORICAL_VAR_2\n                        simulation_type: Historical\n                        rms_market_risk: 4991.692879\n                        weighting_factor: 0.51\n                        rms_components:\n                          - subsample_id: 1\n                            risk_measure_value: 4481.692879\n                            correlation_break_adjustment: 500\n                            compression_adjustment: 10\n                rbm_margin:\n                  margin_classes:\n                    - margin_class_code: DB10\n                      margin_group_code: null\n                      margin_parameter: 5.5\n                      margin_parameter_flag: P\n                      cash_interest_rate: -0.566\n                      additional_margin: 1026812\n                      additional_margin_before_grouping: 1026812\n                      current_liquidating_margin: 851977\n                      margin_class_currency: EUR\n                      positions:\n                        - line_no: 1\n                          sec_isin: DE0005810055\n                          sec_name: DEUTSCHE BOERSE AG\n                          settlement_date: 20210312\n                          net_security_position: 64100\n                          net_cash_position: -10310484\n                          amount_clv_secu: 62100\n                          amount_clv_cash: -10310484\n                          current_liquidating_margin: 851977\n                default_fund_contribution:\n                  worst_global_scenario: Lehman crash 15.09.2008\n                  currency: EUR\n                  stress_loss_over_margin: -101808201.00\n                  default_fund_requirement: 16634756\n                  slom_drilldown:\n                    - global_scenario: Lehman crash 15.09.2008\n                      stress_value: -107168880.00\n                      total_margin_requirement: 5362113.00\n                      stress_loss_over_margin: -101808201.00\n                      slom_per_lg_mg:\n                        - liquidation_group: PEQ01\n                          margin_group_code:\n                          stress_value_market_risk: 53.00\n                          stress_value_liquidity_risk: -121.00\n                          total_margin_requirement: 167539.00\n                          stress_loss_over_margin: 167471.00\n                          slom_per_lgs_mc:\n                          - liquidation_group_split: \"PEQ01_HP3\"\n                            margin_class_code:\n                            stress_value_market_risk: 53.00\n                            stress_value_liquidity_risk: -121.00\n                            total_margin_requirement: 167539.00\n                            stress_loss_over_margin: 167471.00\n                            worst_system_scnid: 1475\n                        - liquidation_group:\n                          margin_group_code: \"!DB10\"\n                          stress_value_market_risk: -107168880.00\n                          stress_value_liquidity_risk: -1310.00\n                          total_margin_requirement: 5194185.00\n                          stress_loss_over_margin: -101976005.00\n                          slom_per_lgs_mc:\n                          - liquidation_group_split:\n                            margin_class_code: DB10\n                            stress_value_market_risk: -107168880.00\n                            stress_value_liquidity_risk: -1310.00\n                            total_margin_requirement: 5194185.00\n                            stress_loss_over_margin: -101976005.00\n                            worst_system_scnid: 449\n                etd_positions:\n                  - line_no: 1\n                    product_id: OEXD\n                    call_put_flag: C\n                    exercise_price: 90\n                    version_number: '0'\n                    iid: 18249016\n                    contract_date: 20311222\n                    maturity: 203112\n                    net_ls_balance: 10\n                    liquidation_group: PEQ01\n                    liquidation_group_split: PEQ01_HP3\n                    stress_value_per_global_scenario:\n                      - gscnid: 1\n                        stress_value: 53.0\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  clearing_currency:\n                    $ref: '#/components/schemas/clearing_currency'\n                  error:\n                    $ref: '#/components/schemas/error'\n                  errors:\n                    $ref: '#/components/schemas/errors'\n                  portfolio_margin:\n                    $ref: '#/components/schemas/portfolio_margin'\n                  rbm_margin:\n                    $ref: '#/components/schemas/rbm_margin'\n                  default_fund_contribution:\n                    $ref: '#/components/schemas/default_fund_contribution'\n                  etd_positions:\n                    $ref: '#/components/schemas/etd_positions_stress'\n\n  /global_scenarios:\n    get:\n      summary: List global scenarios used by Default Fund Estimator\n      description: \u003e-\n        The numerical id (gscnid) is used in `stress_value_per_global_scenario` array in POST `/default_fund` response.\n      parameters:\n        - $ref: '#/components/parameters/x_dbp_apikey'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              example:\n                business_date: 20220912\n                live: false\n                live_timestamp: 0\n                scenarios:\n                  - global_scenario: Lehman crash 15.09.2008\n                    gscnid: 1\n              schema:\n                type: object\n                properties:\n                  business_date:\n                    $ref: '#/components/schemas/business_date'\n                  live:\n                    $ref: '#/components/schemas/live'\n                  live_timestamp:\n                    $ref: '#/components/schemas/live_timestamp'\n                  scenarios:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        global_scenario:\n                          $ref: '#/components/schemas/global_scenario'\n                        gscnid:\n                          $ref: '#/components/schemas/gscnid'\n\n\ncomponents:\n\n  parameters:\n    x_dbp_apikey:\n      name: X-DBP-APIKEY\n      in: header\n      description: \u003e-\n        your key, obtain it by registering at [DBG Digital Business\n        Platform](https://console.developer.deutsche-boerse.com/)\n      schema:\n        type: string\n      required: true\n    extrafields:\n      name: extrafields\n      in: query\n      description: \u003e-\n        comma-separated list of optional fields that should be returned in\n        addition to the default set of response fields. Alternatively can be\n        specified also as multiple parameter instances instead of\n        comma-separated list.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n    business_date:\n      name: business_date\n      in: query\n      schema:\n        type: number\n      description: Business date as of which the result is calculated, in YYYYMMDD format\n    live:\n      name: live\n      in: query\n      description: \u003e-\n        Is the snapshot live (meaning intraday or start-of-day)? False for\n        end-of-day.\n      schema:\n        type: boolean\n    live_timestamp:\n      name: live_timestamp\n      in: query\n      schema:\n        type: number\n      description: \u003e-\n        Timestamp as of which the result is calculated, in milliseconds from\n        epoch. Zero means start-of-day.\n    business_date_from:\n      name: business_date_from\n      in: query\n      schema:\n        type: number\n      description: Start of a date range, in YYYYMMDD format\n    business_date_to:\n      name: business_date_to\n      in: query\n      schema:\n        type: number\n      description: End of a date range, in YYYYMMDD format\n\n\n  schemas:\n\n    business_date:\n      type: number\n      description: Business date as of which the result is calculated, in YYYYMMDD format\n      example: 20181205\n    live:\n      type: boolean\n      description: \u003e-\n        Is the snapshot live (meaning intraday or start-of-day)? False for\n        end-of-day. In request, False without any date means last end-of-day.\n      example: false\n    live_timestamp:\n      type: number\n      description: \u003e-\n        Timestamp as of which the result is calculated, in milliseconds from\n        epoch. Zero means start-of-day.\n      example: 0\n    otc_available:\n      type: boolean\n      description: \u003e-\n        Is OTC available in the snapshot? Snapshot can exist without OTC, then\n        only ETD portfolio can be evaluated. Snapshot without ETD is not\n        possible. Live snapshots can be marked as otc_available which means OTC\n        portfolio will be evaluated, however the OTC market data are from\n        start-of-day, not from the particular timestamp.\n      example: true\n    cash_available:\n      type: boolean\n      description: \u003e-\n        Is Cash Market available in the snapshot? Cash Market was introduced\n        later to CPME and is not available for earlier snapshots. Live snapshots\n        can be marked as cash_available which means Repo portfolio will be\n        evaluated, however the Cash Market market data are from start-of-day,\n        not from the particular timestamp.\n    snapshot:\n      type: object\n      description: \u003e-\n        Optional point in time as of which the result is calculated. If only\n        business_date is specified, latest snapshot from that business date is\n        used. If only live=False is specified, last EOD is used. The timestamp\n        is used only when live is true.\n      properties:\n        business_date:\n          $ref: '#/components/schemas/business_date'\n        live:\n          $ref: '#/components/schemas/live'\n        live_timestamp:\n          $ref: '#/components/schemas/live_timestamp'\n    clearing_currency:\n      type: string\n      description: currency code of the currency in which the result should be calculated\n      default: EUR\n      example: EUR\n    product_id:\n      type: string\n      description: Unique identifier of a product\n      example: OESX\n    contract_date:\n      type: number\n      description: \u003e-\n        Contract date of the instrument in YYYYMMDD format. Introduced with Next\n        Generation ETD contracts initiative as part of the series primary key.\n        Maturity (meaning contract_maturity) can still be used alternatives to\n        contract_date, however only contract_date guarantees uniqueness.\n      example: 20281215\n    contract_frequency:\n      type: string\n      enum:\n        - MONTHLY\n        - WEEKLY\n        - DAILY\n        - FLEX\n        - END_OF_MONTH\n      description: Contract frequency\n      example: MONTHLY\n    contract_maturity:\n      type: number\n      description: \u003e-\n        Maturity of the instrument in YYYYMM format. Corresponds to contract\n        year/month as shown on Eurex webpage\n      example: 202812\n    expiry_maturity:\n      type: number\n      description: Internal value used by Prisma\n      example: 202812\n    call_put_flag:\n      type: string\n      enum:\n        - C\n        - P\n        - ''\n      description: Call or put flag for options. Empty for futures\n      example: P\n    exercise_price:\n      type: number\n      description: Exercise price for options, e.g. 10038.77. Empty for futures\n      example: 2400\n    version_number:\n      type: string\n      description: Version number. Valid for both options and futures\n      example: '0'\n      default: '0'\n    iid:\n      type: number\n      description: \u003e-\n        Technical instrument ID. Needed for analytical requests - greeks, stress\n        prices. If provided in request, all other key attributes are ignored\n      example: 27471356\n    currency:\n      type: string\n      description: currency code\n      example: EUR\n    sec_id:\n      type: string\n      description: security ticker, upto 4 characters, can be empty\n      example: DB1\n    sec_isin:\n      type: string\n      description: security ISIN, unique identifier, mandatory, upto 16 characters\n      example: DE0005810055\n    sec_type:\n      type: string\n      description: security type, internal categorization\n      example: SAKT\n    sec_name:\n      type: string\n      description: security name, can be empty\n      example: DEUTSCHE BOERSE AG\n    security_mnemonic:\n      type: string\n      description: security mnemonic, can be empty\n      example: DB1\n    standard_settlement_period:\n      type: number\n      description: standard settlement period in days\n      example: 2\n    price_unit:\n      type: string\n      enum:\n        - ABSOLUTE\n        - PERCENTAGE\n      description: price unit, typically absolute for stocks and percentage for bonds\n      example: ABSOLUTE\n    security_subtype:\n      type: string\n      enum:\n        - BOND\n        - EQUITY\n        - SUBSCRIPTION_RIGHT\n      description: security subtype\n      example: EQUITY\n    basket_isin:\n      type: boolean\n      description: is the security GC-pooling basket ISIN?\n      example: false\n    margin_class_code:\n      type: string\n      description: margin class code, up to 5 characters\n      example: DB10\n    margin_group_code:\n        type: string\n        description: \u003e-\n          Margin group that the margin class is assigned to. Can be\n          empty, that means no grouping\n    line_no:\n      type: number\n      description: Line number, used when reporting errors\n      example: 1\n    maturity:\n      type: number\n      description: \u003e-\n        Maturity of the instrument in YYYYMM or YYYYMMDD format. Day mandatory\n        for flex. Corresponds to contract year/month as shown on Eurex webpage\n      example: 202812\n    instrument_type:\n      type: string\n      enum:\n        - Future\n        - Option\n        - Flex Future\n        - Flex Option\n      description: Mandatory for flex, ignored otherwise\n      example: Flex Option\n    exercise_style:\n      type: string\n      enum:\n        - EUROPEAN\n        - AMERICAN\n        - ''\n      description: \u003e-\n        Exercise style for options. Mandatory for Flex Option, ignored for\n        standard options - product setup used\n      example: AMERICAN\n    exercise_style_flag:\n      type: string\n      enum:\n        - E\n        - A\n        - ''\n      description: \u003e-\n        E for European, A for American, empty for futures; can differ from\n        product exercise style for Flex Option\n      example: A\n    net_ea:\n      type: number\n      description: Exercised/Allocated minus Assigned/Notified balance\n      example: 0\n    net_ls_balance:\n      type: number\n      description: Long/short balance, negative for short\n      example: -100\n    etd_portfolio:\n      type: array\n      items:\n        type: object\n        properties:\n          line_no:\n            $ref: '#/components/schemas/line_no'\n          product_id:\n            $ref: '#/components/schemas/product_id'\n          contract_date:\n            $ref: '#/components/schemas/contract_date'\n          maturity:\n            $ref: '#/components/schemas/maturity'\n          call_put_flag:\n            $ref: '#/components/schemas/call_put_flag'\n          exercise_price:\n            $ref: '#/components/schemas/exercise_price'\n          version_number:\n            $ref: '#/components/schemas/version_number'\n          iid:\n            $ref: '#/components/schemas/iid'\n          instrument_type:\n            $ref: '#/components/schemas/instrument_type'\n          exercise_style:\n            $ref: '#/components/schemas/exercise_style'\n          net_ea:\n            $ref: '#/components/schemas/net_ea'\n          net_ls_balance:\n            $ref: '#/components/schemas/net_ls_balance'\n        required:\n          - line_no\n          - net_ls_balance\n    etd_csv:\n      type: object\n      properties:\n        csv:\n          type: string\n          description: \u003e-\n            ETD portfolio as one string in CSV, in Margin Calculator GUI format\n            or Margin Estimator GUI format\n          example: Product ID,Contract Date,Version Number,Call Put Flag,Exercise Price,Net LS Balance\\nFEXD,20311219,0,,,100\\nOESX,20311219,0,C,5000,-100\n      required:\n        - csv\n    etd_cp005:\n      type: object\n      properties:\n        member:\n          type: string\n          description: \u003e-\n            optional attribute to process only positions of the member, if not\n            given the clearing member is used\n        account:\n          type: string\n          description: \u003e-\n            optional attribute to process only positions on that account, if not\n            given \"PP\" account is used\n        xml:\n          type: string\n          description: exchange traded portfolio as Eurex report CP005\n      required:\n        - xml\n    otc_csv:\n      type: object\n      properties:\n        csv:\n          $ref: '#/components/schemas/otc_csv_string'\n      required:\n        - csv\n    portfolio_margin:\n      type: array\n      description: \u003e-\n        Margin on LGS level, higher levels can be summed on UI. Also initial\n        margin can be calculated as a sum of all components except premium\n        margin\n      items:\n        type: object\n        properties:\n          liquidation_group:\n            $ref: '#/components/schemas/liquidation_group'\n          liquidation_group_split:\n            $ref: '#/components/schemas/liquidation_group_split'\n          initial_margin:\n            type: number\n            description: \u003e-\n              Initial margin on liquidation group split level, equals to market\n              risk plus add ons\n          market_risk:\n            type: number\n            description: Market risk from ReportCP046\n          liquidity_addon:\n            type: number\n            description: Liqu risk from ReportCP046\n          long_option_credit:\n            type: number\n            description: Long option credit from ReportCP046\n          time_to_expiry_adjustment:\n            type: number\n            description: \u003e-\n              Time to Expiry Adjustment a.k.a. TEA from ReportCP046,\n              introduced with Prisma R8.0\n          premium_margin:\n            type: number\n            description: Premium margin from ReportCP046\n          market_risk_per_rms:\n            type: array\n            items:\n              type: object\n              properties:\n                rms_name:\n                  type: string\n                  description: Risk Measure Set name\n                simulation_type:\n                  type: string\n                  enum:\n                    - Historical\n                    - Stress\n                    - Event\n                  description: Risk Measure Set type\n                rms_market_risk:\n                  type: number\n                  description: RMS market risk before weighting\n                weighting_factor:\n                  type: number\n                  description: \u003e-\n                    RMS weighting factor to be applied before aggregation to LGS\n                    level\n                rms_components:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      subsample_id:\n                        type: number\n                        description: \u003e-\n                          id of the subsample (from 1 to risk horizon), or 1 if\n                          the RMS is not using subsampling\n                      risk_measure_value:\n                        type: number\n                        description: \u003e-\n                          the main risk measure value for this RMS, e.g.\n                          value-at-risk for Historical or Stress simulation_type\n                      correlation_break_adjustment:\n                        type: number\n                        description: Correlation Break Adjustment for this RMS\n                      compression_adjustment:\n                        type: number\n                        description: Compression Adjustment for this RMS\n\n    whatif_id:\n      type: number\n      description: id of the what-if scenario - marks the portfolio components that should be part of the scenario (on top on the base portfolio components, which are not labeled by whatif_id or have whatif_id=0) and marks the resulting portfolio margin for the scenario\n      example: 1\n      default: 0\n\n    whatif_portfolio_margin:\n      type: array\n      description: array of portfolio margins for what-if scenarios. Sent only if any portfolio component was marked with non-zero whatif_id in the estimator request\n      items:\n        type: object\n        properties:\n          whatif_id:\n            $ref: '#/components/schemas/whatif_id'\n          portfolio_margin:\n            $ref: '#/components/schemas/portfolio_margin'\n\n    otc_csv_string:\n      type: string\n      description: \u003e-\n        OTC portfolio as one string in CSV, format known from Margin Calculator\n        GUI\n      example: \u003e-\n        internalTradeID,tradeType,currency,effectiveDate,terminationDate,legType,legSpread,legIndex,interestFixedAmount,notional,paymentPeriod,periodStartVNS,compounding,compoundingIndexPeriod,stub,firstRate,firstInterpolationTenor,secondInterpolationTenor,dayCountMethod,businessDayConvention,paymentCalendar,adjustment,rollMethod,legType,legSpread,legIndex,interestFixedAmount,notional,paymentPeriod,periodStartVNS,compounding,compoundingIndexPeriod,stub,firstRate,firstInterpolationTenor,secondInterpolationTenor,dayCountMethod,businessDayConvention,paymentCalendar,adjustment,rollMethod\\n1,FRA,EUR,20/12/2018,20/08/2019,fixedLeg,0.15,,,100000000,3M,,,,,,,,ACT/360,,,,,floatingLeg,,,,100000000,3M,,,,,,,,ACT/360,,,,\n    otc_cb202:\n      type: object\n      properties:\n        member:\n          type: string\n          description: optional, will be matched against RC tag\n        account:\n          type: string\n          description: \u003e-\n            optional, will be matched against acctTypGrp tag or riskNettingUnit\n            tag, if not given P account is assumed\n          default: P\n        legal_entity:\n          type: string\n          description: optional, will be matched against srcSysLEId tag\n        xml:\n          type: string\n          description: \u003e-\n            EurexOTC report CB202 or report CB207 describing trades as a single\n            string\n      required:\n        - xml\n    otc_fpml:\n      type: object\n      properties:\n        party:\n          type: string\n          description: matched against partyId tag\n        xml:\n          type: string\n          description: FpML describing trades as a single string\n      required:\n        - party\n        - xml\n    otc_sensitivities:\n      type: object\n      description: \u003e-\n        Table of DV01 sensitivities (a.k.a. deltas) of the OTC portfolio. There\n        can be only one component of this type as input for margin calculation.\n      properties:\n        csv:\n          type: string\n          description: \u003e-\n            aggregated sensitivities in CSV format known from Margin Calculator\n            GUI, as a single string. Example shows the full header row with\n            curves and one row for 1M maturity. Supported maturities are 1M to\n            11M, 1Y, 15M, 18M, 21M, 2Y to 12Y, 15Y, 20Y, 25Y, 30Y, 40Y, 50Y\n          example: \u003e-\n            Maturity,CHF.SARON.ON,DKK.CIBOR.6M,EUR.ESTR.ON,EUR.EURIBOR.1M,EUR.EURIBOR.1Y,EUR.EURIBOR.3M,EUR.EURIBOR.6M,GBP.SONIA.ON,JPY.TONAR.ON,NOK.NIBOR.6M,PLN.WIBOR.6M,SEK.STIBOR.3M,USD.SOFR.ON,USD.LIBOR.1M,USD.LIBOR.3M,USD.LIBOR.6M\\n1M,100,,,,,,,,,,,,,,,\n      required:\n        - csv\n    otc_trade_details:\n      type: array\n      items:\n        type: object\n        description: details of one OTC trade\n        properties:\n          trade_id:\n            $ref: '#/components/schemas/trade_id'\n          type:\n            $ref: '#/components/schemas/otc_type'\n          pay:\n            $ref: '#/components/schemas/pay'\n          receive:\n            $ref: '#/components/schemas/receive'\n          notional:\n            $ref: '#/components/schemas/notional'\n          notional_currency:\n            $ref: '#/components/schemas/notional_currency'\n          maturity:\n            $ref: '#/components/schemas/otc_maturity'\n    repo_json:\n      type: array\n      items:\n        $ref: '#/components/schemas/repo_json_position'\n    repo_json_position:\n      type: object\n      description: \u003e-\n        Special Repo, also called single-ISIN Repo position (as opposed to\n        GC-Pooling Repo).\n      properties:\n        line_no:\n          $ref: '#/components/schemas/line_no'\n        sec_isin:\n          $ref: '#/components/schemas/sec_isin'\n        trade_date:\n          type: string\n          description: Trade date as YYYY-MM-DD or YYYYMMDD, mandatory\n          example: 20210315\n        settlement_date_frontleg:\n          type: string\n          description: \u003e-\n            Settlement date for the front leg as YYYY-MM-DD or YYYYMMDD,\n            mandatory\n          example: 20210316\n        settlement_date_termleg:\n          type: string\n          description: \u003e-\n            Settlement date for the term leg as YYYY-MM-DD or YYYYMMDD,\n            mandatory\n          example: 20210413\n        buy_sell_indicator:\n          type: string\n          enum:\n            - BUY\n            - SELL\n          description: \u003e-\n            mandatory, SELL = Sell securities, Cash taker; BUY = Buy securities,\n            Cash Provider\n          example: BUY\n        currency:\n          type: string\n          description: \u003e-\n            Currency code for the Repo currency, optional, if filled it is\n            validated that it is equal to currency of the ISIN\n          example: EUR\n        nominal:\n          type: number\n          description: Nominal value, mandatory\n          example: 500000000\n        fixed_repo_rate:\n          type: number\n          description: Fixed repo rate, in percent, mandatory\n          example: 2.25\n        trade_id:\n          type: string\n          description: user defined trade Id, optional\n          example: ABC123\n        clean_price_shift:\n          type: number\n          description: absolute shift of the risk system clean price, optional\n          example: -1\n      required:\n        - line_no\n        - sec_isin\n        - trade_date\n        - settlement_date_frontleg\n        - settlement_date_termleg\n        - buy_sell_indicator\n        - nominal\n        - fixed_repo_rate\n    simulated_settlement_date:\n      type: number\n      description: \u003e-\n        date as YYYYMMDD, optional and relevant only for Repos. If provided it\n        must be greater than the snapshot date and CPME will calculate margin as\n        if the number of calendar days between snapshot date and simulated\n        settlement date has passed. If any Repo legs have settlement date before\n        simulated settlement date, they will be considered as settled. Market\n        data are taken from the snapshot date (the simulated settlement date can\n        be in future).\n    additional_margin:\n      type: number\n      description: \u003e-\n        Forward looking margin component for cash market, including margin\n        grouping effect\n    additional_margin_before_grouping:\n      type: number\n      description: \u003e-\n        Forward looking margin component for cash market, as if there was no\n        margin grouping\n    current_liquidating_margin:\n      type: number\n      description: Current liquidating margin for cash market, covering current loss\n    settlement_date:\n      type: number\n      description: Settlement date as YYYYMMDD, mandatory\n      example: 20210312\n\n    cash_json:\n      type: array\n      items:\n        $ref: '#/components/schemas/cash_json_position'\n\n    cash_json_position:\n      type: object\n      description: \u003e-\n        Cash Market position - bond, equity, subscription right (security positions, SP)\n        or even pure cash position (CP). Some columns are relevant only for one type of record\n\n        - Security Quantity, Gross Amounts, Source and CCP Trade Number for SP\n        - Cash Position Type for CP\n\n        For the security positions, users have option to enter\n\n        - either Payable Cash Amount\n        - or Traded Price (which is then used by CPME to calculate the Payable Cash Amount)\n\n      properties:\n        line_no:\n          $ref: '#/components/schemas/line_no'\n        sec_isin:\n          $ref: '#/components/schemas/sec_isin'\n        settlement_date:\n          $ref: '#/components/schemas/settlement_date'\n        settlement_currency:\n          type: string\n          description: Settlement currency code, optional, used for GC pooling positions only, defaults to currency from Security\n          example: EUR\n        payable_cash_amount:\n          type: number\n          description: Payable cash amount, mandatory for leg_type S or C, otherwise empty\n          example: 1000\n        traded_price:\n          type: number\n          description: Traded price as alternative to payable_cash_amount, mandatory for empty leg_type, otherwise empty\n          example: 100\n        security_quantity:\n          type: number\n          description: Number of units bought (positive) or sold (negative), if leg_type is S or empty then mandatory, otherwise empty\n          example: -10\n        ccp_trade_mumber:\n          type: number\n          description: CCP trade number, Used as a flag, empty=net position, non-empty=gross trade, optional\n          default: 0\n        leg_type:\n          type: string\n          enum: [ 'C','S','' ]\n          description: Indicates whether the line is cash position or security position. C for cash, S for security with Payable Cash Amount, empty security with Traded Price. Unless you are familiar with DBG Risk representation of cash market positions, use empty leg type.\n\n    cash_csv:\n      type: string\n      description: \u003e-\n        Cash market portfolio in a CSV format, first row is header and following rows are positions,\n        also called \"settlements\" as from risk point of view cash market position is relevant only during settlement.\n        The rows are separated by `\\n` in the string, line breaks are not allowed inside JSON values.\n        The columns correspond to the attributes of `cash_json_position` object.\n      example: Security ISIN,Settlement Date,Settlement Currency,Payable Cash Amount,Traded Price,Security Quantity,CCP Trade Number,Leg Type\\nDE0005810055,20220630,,,100.23,100,,\n\n    rbm_margin:\n      type: object\n      description: \u003e-\n        RBM margin for cash market:\n\n        - for each margin class: AM and CLM in margin class currency,\n        corresponding to CI050 report\n          - for each ISIN/settlement date combination from the margin class: current liquidating margin, net cash position and net security position, corresponding to CC711 report (if there are multiple records for ISIN/settlement date in CC711, the values are summed)\n      properties:\n        margin_classes:\n          type: array\n          items:\n            type: object\n            description: Margin on margin class level\n            properties:\n              margin_class_code:\n                $ref: '#/components/schemas/margin_class_code'\n              margin_group_code:\n                $ref: '#/components/schemas/margin_group_code'\n              margin_parameter:\n                type: number\n                description: Margin parameter\n                example: 3.5\n              margin_parameter_flag:\n                type: string\n                enum:\n                  - A\n                  - P\n                description: Margin parameter flag - absolute (A) or percentage (P)\n                example: P\n              cash_interest_rate:\n                type: number\n                description: Cash interest rate (see report CC711)\n                example: -0.566\n              additional_margin:\n                $ref: '#/components/schemas/additional_margin'\n              additional_margin_before_grouping:\n                $ref: '#/components/schemas/additional_margin_before_grouping'\n              current_liquidating_margin:\n                $ref: '#/components/schemas/current_liquidating_margin'\n              margin_class_currency:\n                type: string\n                description: \u003e-\n                  Code of the margin class currency - margin is calculated in\n                  that currency\n                example: USD\n              positions:\n                type: array\n                items:\n                  type: object\n                  description: Positions of the margin class\n                  properties:\n                    line_no:\n                      $ref: '#/components/schemas/line_no'\n                    sec_isin:\n                      $ref: '#/components/schemas/sec_isin'\n                    sec_name:\n                      $ref: '#/components/schemas/sec_name'\n                    settlement_date:\n                      $ref: '#/components/schemas/settlement_date'\n                    net_security_position:\n                      type: number\n                      description: Net cash position (see report CC711)\n                    net_cash_position:\n                      type: number\n                      description: Net cash position (see report CC711)\n                    amount_clv_secu:\n                      type: number\n                      description: \u003e-\n                        CrtLiqValSecu i.e. Current Liquidating Value Secu (see\n                        report CC711)\n                    amount_clv_cash:\n                      type: number\n                      description: \u003e-\n                        CrtLiqValCash i.e. Current Liquidating Value Cash (see\n                        report CC711)\n                    current_liquidating_margin:\n                      $ref: '#/components/schemas/current_liquidating_margin'\n                    trade_id:\n                      $ref: '#/components/schemas/trade_id'\n    liquidation_group:\n      type: string\n      description: Liquidation group\n    liquidation_group_split:\n      type: string\n      description: Liquidation group split\n    component_margin:\n      type: number\n      description: \u003e-\n        Initial margin on position level is a approximation based on compVaR.\n        compVaR is calculated to split VaR among positions, then other add-ons\n        are added proportionally to compVaR\n    component_margin_currency:\n      type: string\n      description: Currency of component margin\n    trade_id:\n      type: string\n      description: internalTradeID or tradeId as submitted in the request\n      example: '1'\n    otc_type:\n      type: string\n      description: FRA, FixedFloat, Basis, OIS or Inflation\n      example: FRA\n    pay:\n      type: string\n      description: pay leg, either Fixed rate or index plus optional spread\n      example: Fixed 0.15%\n    receive:\n      type: string\n      description: receive leg, either Fixed rate or index plus optional spread\n      example: EUR-EURIBOR-3M +2bp\n    notional:\n      type: number\n      description: trade notional\n      example: 100000000\n    notional_currency:\n      type: string\n      description: notional currency\n      example: EUR\n    otc_maturity:\n      type: string\n      description: total maturity since effective date, in years\n      example: 0.8Y\n    greek_types:\n      type: array\n      description: Greek types, array with the following valid values\n      items:\n        type: string\n        enum:\n          - DELTA\n          - GAMMA\n          - RHO\n          - THETA\n          - VEGA\n          - DV01\n          - EURO_DELTA\n          - EURO_GAMMA\n          - EURO_RHO\n          - EURO_THETA\n          - EURO_VEGA\n      example:\n        - EURO_DELTA\n        - EURO_VEGA\n    underlying_shifts_rel:\n      type: array\n      description: \u003e-\n        Vector of underlying price shifts, optional. If not given then the\n        current underlying price is used\n      items:\n        type: number\n      example:\n        - -0.01\n        - 0.01\n    iids:\n      type: array\n      description: Technical ids of instruments, see series resource\n      items:\n        type: number\n      example:\n        - 26807581\n        - 27471356\n    volatility_shifts:\n      type: array\n      description: \u003e-\n        Vector of volatility shifts, the unit is specified by volatility shift\n        type. Shifted volatility is floored by 0.01 before theoretical price\n        calculation\n      items:\n        type: number\n      example:\n        - -0.05\n        - 0.05\n    volatility_shift_type:\n      type: string\n      enum:\n        - RELATIVE\n        - ABSOLUTE\n      description: \u003e-\n        Volatility shift type, either relative, vola 20% shifted by 0.1 relative\n        = 22%, or absolute, vola 20% shifted by 0.1 absolute = 20.1%\n      example: ABSOLUTE\n\n    error:\n      type: string\n      description: error message applicable to the whole request\n      example: missing portfolio_components JSON array in body JSON\n    errors:\n      type: array\n      items:\n        type: object\n        properties:\n          line_no:\n            type: string\n          error_msg:\n            type: string\n        required:\n          - error_msg\n      example:\n        - error_msg: Request data is invalid\n        - line_no: 1\n          error_msg: \"portfolio array item: missing net_ls_balance integer\"\n\n    global_scenario:\n      type: string\n      description: name of the global stress scenario\n      example: Lehman crash 15.09.2008\n    gscnid:\n      type: number\n      description: numerical id of the global scenario, used in /default_fund drilldown\n      example: 1\n    stress_loss_over_margin:\n      type: number\n      description: stress loss over margin in given scenario (negative means loss)\n      example: -101808201.00\n    stress_value:\n      type: number\n      description: stress value of the portfolio or position in given scenario (negative means loss)\n      example: -107168880.00\n    stress_value_market_risk:\n      type: number\n      description: stress value of the portfolio in given scenario (negative means loss), the market risk part (liquidity risk not included)\n      example: -107168880.00\n    stress_value_liquidity_risk:\n      type: number\n      description: additional liquidity risk in given scenario\n      example: -1310.00\n    total_margin_requirement:\n      type: number\n      description: additional liquidity risk in given scenario\n      example: 5362113.00\n    default_fund_requirement:\n      type: number\n      description: estimated default fund contribution (always non-negative)\n      example: 16634756\n\n    default_fund_contribution:\n      type: object\n      description: Estimated contribution to the Default Fund for submitted portfolio, based on the worst global scenario\n      properties:\n        worst_global_scenario:\n          $ref: '#/components/schemas/global_scenario'\n        currency:\n          $ref: '#/components/schemas/clearing_currency'\n        stress_loss_over_margin:\n          $ref: '#/components/schemas/stress_loss_over_margin'\n        default_fund_requirement:\n          $ref: '#/components/schemas/default_fund_requirement'\n        slom_drilldown:\n          type: array\n          items:\n            type: object\n            description: Result of the global scenario\n            properties:\n              global scenario:\n                $ref: '#/components/schemas/global_scenario'\n              stress_value:\n                $ref: '#/components/schemas/stress_value'\n              total_margin_requirement:\n                $ref: '#/components/schemas/total_margin_requirement'\n              stress_loss_over_margin:\n                $ref: '#/components/schemas/stress_loss_over_margin'\n              slom_per_lg_mg:\n                type: array\n                items:\n                  type: object\n                  description: \u003e-\n                    Result for the Liquidation Group (if ETD) or the Margin Group (if Cash Market)\n                    in given global scenario. Either the liquidation_group or margin_group is filled.\n                    Margin Classes that do not belong to a Margin Group are listed on this level\n                    as well and their margin_group_code is equal to margin_class_code prefixed by '!'.\n                  properties:\n                    liquidation_group:\n                      $ref: '#/components/schemas/liquidation_group'\n                    margin_group_code:\n                      $ref: '#/components/schemas/margin_group_code'\n                    stress_value_market_risk:\n                      $ref: '#/components/schemas/stress_value_market_risk'\n                    stress_value_liquidity_risk:\n                      $ref: '#/components/schemas/stress_value_liquidity_risk'\n                    total_margin_requirement:\n                      $ref: '#/components/schemas/total_margin_requirement'\n                    stress_loss_over_margin:\n                      $ref: '#/components/schemas/stress_loss_over_margin'\n                    slom_per_lgs_mc:\n                      type: array\n                      items:\n                        type: object\n                        description: Result for the Liquidation Group Split or Margin Class.\n                        properties:\n                          liquidation_group_split:\n                            $ref: '#/components/schemas/liquidation_group_split'\n                          margin_class_code:\n                            $ref: '#/components/schemas/margin_class_code'\n                          stress_value_market_risk:\n                            $ref: '#/components/schemas/stress_value_market_risk'\n                          stress_value_liquidity_risk:\n                            $ref: '#/components/schemas/stress_value_liquidity_risk'\n                          total_margin_requirement:\n                            $ref: '#/components/schemas/total_margin_requirement'\n                          stress_loss_over_margin:\n                            $ref: '#/components/schemas/stress_loss_over_margin'\n                          worst_system_scnid:\n                            type: number\n\n    etd_positions:\n      type: array\n      description: \u003e-\n        Margin figures on ETD position level. Full business key is used,\n        it is not possible to map to input line_no one to one because positions may be aggregated or split.\n      items:\n        type: object\n        properties:\n          line_no:\n            $ref: '#/components/schemas/line_no'\n          product_id:\n            $ref: '#/components/schemas/product_id'\n          contract_date:\n            $ref: '#/components/schemas/contract_date'\n          maturity:\n            $ref: '#/components/schemas/maturity'\n          call_put_flag:\n            $ref: '#/components/schemas/call_put_flag'\n          exercise_price:\n            $ref: '#/components/schemas/exercise_price'\n          version_number:\n            $ref: '#/components/schemas/version_number'\n          iid:\n            $ref: '#/components/schemas/iid'\n          instrument_type:\n            $ref: '#/components/schemas/instrument_type'\n          exercise_style:\n            $ref: '#/components/schemas/exercise_style'\n          net_ls_balance:\n            $ref: '#/components/schemas/net_ls_balance'\n          liquidation_group:\n            $ref: '#/components/schemas/liquidation_group'\n          liquidation_group_split:\n            $ref: '#/components/schemas/liquidation_group_split'\n          component_margin:\n            $ref: '#/components/schemas/component_margin'\n          component_margin_currency:\n            $ref: '#/components/schemas/component_margin_currency'\n          premium_margin:\n            type: number\n            description: Premium margin for the position\n          premium_margin_currency:\n            type: string\n            description: \u003e-\n              Currency of premium margin - currency of the\n              product, can be different from clearing currency\n\n    etd_positions_stress:\n      type: array\n      description: \u003e-\n        Stress values ETD position level. Full business key is used,\n        it is not possible to map to input line_no one to one because positions may be aggregated or split.\n      items:\n        type: object\n        properties:\n          line_no:\n            $ref: '#/components/schemas/line_no'\n          product_id:\n            $ref: '#/components/schemas/product_id'\n          contract_date:\n            $ref: '#/components/schemas/contract_date'\n          maturity:\n            $ref: '#/components/schemas/maturity'\n          call_put_flag:\n            $ref: '#/components/schemas/call_put_flag'\n          exercise_price:\n            $ref: '#/components/schemas/exercise_price'\n          version_number:\n            $ref: '#/components/schemas/version_number'\n          iid:\n            $ref: '#/components/schemas/iid'\n          instrument_type:\n            $ref: '#/components/schemas/instrument_type'\n          exercise_style:\n            $ref: '#/components/schemas/exercise_style'\n          net_ls_balance:\n            $ref: '#/components/schemas/net_ls_balance'\n          liquidation_group:\n            $ref: '#/components/schemas/liquidation_group'\n          liquidation_group_split:\n            $ref: '#/components/schemas/liquidation_group_split'\n          stress_values_per_global_scenario:\n            type: array\n            description: \u003e-\n              Stress value of the position in different scenarios, in `clearing_currency`.\n              For scenario names, use GET `/global_scenarios` resource and find the scenarios by gscnid.\n            items:\n              type: object\n              properties:\n                gscnid:\n                  $ref: '#/components/schemas/gscnid'\n                stress_value:\n                  $ref: '#/components/schemas/stress_value'\n",
			"canonicalURL": "/github.com/Deutsche-Boerse-Risk/CloudPrismaMarginEstimator@197168acfcf8d5cc679a6615e19124afd11e908e/-/blob/swagger2-openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Deutsche-Boerse-Risk/CloudPrismaMarginEstimator/blob/197168acfcf8d5cc679a6615e19124afd11e908e/swagger2-openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/greeks\": post: responses: 200: content: application/json: schema: parse schema: property \"greeks\": at swagger2-openapi3.yaml:1236:23: properties: array cannot contain properties"
}