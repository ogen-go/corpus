{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-guardduty-2017-11-28-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-guardduty-2017-11-28-swagger.yaml",
			"byteSize": 136274,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2017-11-28\n  x-release: v4\n  title: Amazon GuardDuty\n  description: 'Amazon GuardDuty is a continuous security monitoring service that analyzes\n    and processes the following data sources: VPC Flow Logs, AWS CloudTrail\n    event logs, and DNS logs. It uses threat intelligence feeds, such as lists\n    of malicious IPs and domains, and machine learning to identify unexpected\n    and potentially unauthorized and malicious activity within your AWS\n    environment. This can include issues like escalations of privileges, uses of\n    exposed credentials, or communication with malicious IPs, URLs, or domains.\n    For example, GuardDuty can detect compromised EC2 instances serving malware\n    or mining bitcoin. It also monitors AWS account access behavior for signs of\n    compromise, such as unauthorized infrastructure deployments, like instances\n    deployed in a region that has never been used, or unusual API calls, like a\n    password policy change to reduce password strength. GuardDuty informs you of\n    the status of your AWS environment by producing security findings that you\n    can view in the GuardDuty console or through Amazon CloudWatch events. For\n    more information, see \u003ca\n    href=\"https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html\"\u003e\n    Amazon GuardDuty User Guide\u003c/a\u003e. '\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: guardduty\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/guardduty-2017-11-28.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/guardduty/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  \"/detector/{detectorId}/master\":\n    post:\n      operationId: AcceptInvitation\n      description: Accepts the invitation to be monitored by a master GuardDuty account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AcceptInvitationResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty member account.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - masterId\n                - invitationId\n              properties:\n                masterId:\n                  description: The account ID of the master GuardDuty account whose\n                    invitation you're accepting.\n                  type: string\n                invitationId:\n                  description: This value is used to validate the master account to the\n                    member account.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetMasterAccount\n      description: Provides the details for the GuardDuty master account associated with\n        the current GuardDuty member account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetMasterAccountResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty member account.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n  \"/detector/{detectorId}/findings/archive\":\n    post:\n      operationId: ArchiveFindings\n      description: \u003cp\u003eArchives GuardDuty findings specified by the list of finding IDs.\u003c/p\u003e\n        \u003cnote\u003e \u003cp\u003eOnly the master account can archive findings. Member accounts\n        do not have permission to archive findings from their accounts.\u003c/p\u003e\n        \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArchiveFindingsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The ID of the detector that specifies the GuardDuty service whose\n            findings you want to archive.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - findingIds\n              properties:\n                findingIds:\n                  description: IDs of the findings that you want to archive.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/FindingId\"\n                  minItems: 0\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /detector:\n    post:\n      operationId: CreateDetector\n      description: Creates a single Amazon GuardDuty detector. A detector is a resource\n        that represents the GuardDuty service. To start using GuardDuty, you\n        must create a detector in each region that you enable the service. You\n        can have only one detector per account per region.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateDetectorResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - enable\n              properties:\n                enable:\n                  description: A boolean value that specifies whether the detector is to be\n                    enabled.\n                  type: boolean\n                clientToken:\n                  description: The idempotency token for the create request.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                findingPublishingFrequency:\n                  description: A enum value that specifies how frequently customer got\n                    Finding updates published.\n                  type: string\n                  enum:\n                    - FIFTEEN_MINUTES\n                    - ONE_HOUR\n                    - SIX_HOURS\n                tags:\n                  description: The tags to be added to a new detector resource.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListDetectors\n      description: Lists detectorIds of all the existing Amazon GuardDuty detector\n        resources.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListDetectorsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: You can use this parameter to indicate the maximum number of items\n            you want in the response. The default value is 50. The maximum value\n            is 50.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nextToken\n          in: query\n          required: false\n          description: You can use this parameter when paginating results. Set the value of\n            this parameter to null on your first call to the list action. For\n            subsequent calls to the action fill nextToken in the request with\n            the value of NextToken from the previous response to continue\n            listing data.\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  \"/detector/{detectorId}/filter\":\n    post:\n      operationId: CreateFilter\n      description: Creates a filter using the specified finding criteria.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateFilterResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account for which you\n            want to create a filter.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - findingCriteria\n              properties:\n                name:\n                  description: The name of the filter.\n                  type: string\n                  minLength: 3\n                  maxLength: 64\n                description:\n                  description: The description of the filter.\n                  type: string\n                  minLength: 0\n                  maxLength: 512\n                action:\n                  description: Specifies the action that is to be applied to the findings\n                    that match the filter.\n                  type: string\n                  enum:\n                    - NOOP\n                    - ARCHIVE\n                  minLength: 1\n                  maxLength: 300\n                rank:\n                  description: Specifies the position of the filter in the list of current\n                    filters. Also specifies the order in which this filter is\n                    applied to the findings.\n                  type: integer\n                  minimum: 1\n                  maximum: 100\n                findingCriteria:\n                  description: Contains finding criteria information.\n                  type: object\n                  properties:\n                    Criterion:\n                      $ref: \"#/components/schemas/Criterion\"\n                clientToken:\n                  description: The idempotency token for the create request.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                tags:\n                  description: The tags to be added to a new filter resource.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListFilters\n      description: Returns a paginated list of the current filters.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListFiltersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the filter is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: maxResults\n          in: query\n          required: false\n          description: You can use this parameter to indicate the maximum number of items\n            you want in the response. The default value is 50. The maximum value\n            is 50.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nextToken\n          in: query\n          required: false\n          description: You can use this parameter when paginating results. Set the value of\n            this parameter to null on your first call to the list action. For\n            subsequent calls to the action fill nextToken in the request with\n            the value of NextToken from the previous response to continue\n            listing data.\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  \"/detector/{detectorId}/ipset\":\n    post:\n      operationId: CreateIPSet\n      description: Creates a new IPSet - a list of trusted IP addresses that have been\n        whitelisted for secure communication with AWS infrastructure and\n        applications.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateIPSetResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account for which you\n            want to create an IPSet.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - format\n                - location\n                - activate\n              properties:\n                name:\n                  description: The user friendly name to identify the IPSet. This name is\n                    displayed in all findings that are triggered by activity\n                    that involves IP addresses included in this IPSet.\n                  type: string\n                  minLength: 1\n                  maxLength: 300\n                format:\n                  description: The format of the file that contains the IPSet.\n                  type: string\n                  enum:\n                    - TXT\n                    - STIX\n                    - OTX_CSV\n                    - ALIEN_VAULT\n                    - PROOF_POINT\n                    - FIRE_EYE\n                  minLength: 1\n                  maxLength: 300\n                location:\n                  description: The URI of the file that contains the IPSet. For example\n                    (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)\n                  type: string\n                  minLength: 1\n                  maxLength: 300\n                activate:\n                  description: A boolean value that indicates whether GuardDuty is to start\n                    using the uploaded IPSet.\n                  type: boolean\n                clientToken:\n                  description: The idempotency token for the create request.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                tags:\n                  description: The tags to be added to a new IP set resource.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListIPSets\n      description: Lists the IPSets of the GuardDuty service specified by the detector ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListIPSetsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the ipSet is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: maxResults\n          in: query\n          required: false\n          description: You can use this parameter to indicate the maximum number of items\n            you want in the response. The default value is 50. The maximum value\n            is 50.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nextToken\n          in: query\n          required: false\n          description: You can use this parameter when paginating results. Set the value of\n            this parameter to null on your first call to the list action. For\n            subsequent calls to the action fill nextToken in the request with\n            the value of NextToken from the previous response to continue\n            listing data.\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  \"/detector/{detectorId}/member\":\n    post:\n      operationId: CreateMembers\n      description: Creates member accounts of the current AWS account by specifying a list\n        of AWS account IDs. The current AWS account can then invite these\n        members to manage GuardDuty in their accounts.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateMembersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account with which\n            you want to associate member accounts.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountDetails\n              properties:\n                accountDetails:\n                  description: A list of account ID and email address pairs of the accounts\n                    that you want to associate with the master GuardDuty\n                    account.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountDetail\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListMembers\n      description: Lists details about all member accounts for the current GuardDuty master\n        account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListMembersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the member is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: maxResults\n          in: query\n          required: false\n          description: You can use this parameter to indicate the maximum number of items\n            you want in the response. The default value is 50. The maximum value\n            is 50.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nextToken\n          in: query\n          required: false\n          description: You can use this parameter when paginating results. Set the value of\n            this parameter to null on your first call to the list action. For\n            subsequent calls to the action fill nextToken in the request with\n            the value of NextToken from the previous response to continue\n            listing data.\n          schema:\n            type: string\n        - name: onlyAssociated\n          in: query\n          required: false\n          description: Specifies whether to only return associated members or to return all\n            members (including members which haven't been invited yet or have\n            been disassociated).\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  \"/detector/{detectorId}/findings/create\":\n    post:\n      operationId: CreateSampleFindings\n      description: Generates example findings of types specified by the list of finding\n        types. If 'NULL' is specified for findingTypes, the API generates\n        example findings of all supported finding types.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateSampleFindingsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The ID of the detector to create sample findings for.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                findingTypes:\n                  description: Types of sample findings that you want to generate.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/FindingType\"\n                  minItems: 0\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/threatintelset\":\n    post:\n      operationId: CreateThreatIntelSet\n      description: Create a new ThreatIntelSet. ThreatIntelSets consist of known malicious\n        IP addresses. GuardDuty generates findings based on ThreatIntelSets.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateThreatIntelSetResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account for which you\n            want to create a threatIntelSet.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - format\n                - location\n                - activate\n              properties:\n                name:\n                  description: A user-friendly ThreatIntelSet name that is displayed in all\n                    finding generated by activity that involves IP addresses\n                    included in this ThreatIntelSet.\n                  type: string\n                  minLength: 1\n                  maxLength: 300\n                format:\n                  description: The format of the file that contains the ThreatIntelSet.\n                  type: string\n                  enum:\n                    - TXT\n                    - STIX\n                    - OTX_CSV\n                    - ALIEN_VAULT\n                    - PROOF_POINT\n                    - FIRE_EYE\n                  minLength: 1\n                  maxLength: 300\n                location:\n                  description: The URI of the file that contains the ThreatIntelSet. For\n                    example\n                    (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).\n                  type: string\n                  minLength: 1\n                  maxLength: 300\n                activate:\n                  description: A boolean value that indicates whether GuardDuty is to start\n                    using the uploaded ThreatIntelSet.\n                  type: boolean\n                clientToken:\n                  description: The idempotency token for the create request.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                tags:\n                  description: The tags to be added to a new Threat List resource.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListThreatIntelSets\n      description: Lists the ThreatIntelSets of the GuardDuty service specified by the\n        detector ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListThreatIntelSetsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the threatIntelSet is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: maxResults\n          in: query\n          required: false\n          description: You can use this parameter to indicate the maximum number of items\n            you want in the response. The default value is 50. The maximum value\n            is 50.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nextToken\n          in: query\n          required: false\n          description: You can use this parameter when paginating results. Set the value of\n            this parameter to null on your first call to the list action. For\n            subsequent calls to the action fill nextToken in the request with\n            the value of NextToken from the previous response to continue\n            listing data.\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n  /invitation/decline:\n    post:\n      operationId: DeclineInvitations\n      description: Declines invitations sent to the current member account by AWS account\n        specified by their account IDs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeclineInvitationsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountIds\n              properties:\n                accountIds:\n                  description: A list of account IDs of the AWS accounts that sent\n                    invitations to the current member account that you want to\n                    decline invitations from.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountId\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}\":\n    delete:\n      operationId: DeleteDetector\n      description: Deletes a Amazon GuardDuty detector specified by the detector ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteDetectorResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector that you want to delete.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetDetector\n      description: Retrieves an Amazon GuardDuty detector specified by the detectorId.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDetectorResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector that you want to get.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n    post:\n      operationId: UpdateDetector\n      description: Updates an Amazon GuardDuty detector specified by the detectorId.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateDetectorResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector that you want to update.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                enable:\n                  description: Updated boolean value for the detector that specifies\n                    whether the detector is enabled.\n                  type: boolean\n                findingPublishingFrequency:\n                  description: A enum value that specifies how frequently customer got\n                    Finding updates published.\n                  type: string\n                  enum:\n                    - FIFTEEN_MINUTES\n                    - ONE_HOUR\n                    - SIX_HOURS\n        required: true\n  \"/detector/{detectorId}/filter/{filterName}\":\n    delete:\n      operationId: DeleteFilter\n      description: Deletes the filter specified by the filter name.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteFilterResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the filter is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: filterName\n          in: path\n          required: true\n          description: The name of the filter you want to delete.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetFilter\n      description: Returns the details of the filter specified by the filter name.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFilterResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the filter is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: filterName\n          in: path\n          required: true\n          description: The name of the filter you want to get.\n          schema:\n            type: string\n    post:\n      operationId: UpdateFilter\n      description: Updates the filter specified by the filter name.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateFilterResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector that specifies the GuardDuty service\n            where you want to update a filter.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: filterName\n          in: path\n          required: true\n          description: The name of the filter.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: The description of the filter.\n                  type: string\n                  minLength: 0\n                  maxLength: 512\n                action:\n                  description: Specifies the action that is to be applied to the findings\n                    that match the filter.\n                  type: string\n                  enum:\n                    - NOOP\n                    - ARCHIVE\n                  minLength: 1\n                  maxLength: 300\n                rank:\n                  description: Specifies the position of the filter in the list of current\n                    filters. Also specifies the order in which this filter is\n                    applied to the findings.\n                  type: integer\n                  minimum: 1\n                  maximum: 100\n                findingCriteria:\n                  description: Contains finding criteria information.\n                  type: object\n                  properties:\n                    Criterion:\n                      $ref: \"#/components/schemas/Criterion\"\n        required: true\n  \"/detector/{detectorId}/ipset/{ipSetId}\":\n    delete:\n      operationId: DeleteIPSet\n      description: Deletes the IPSet specified by the IPSet ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteIPSetResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the ipSet is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: ipSetId\n          in: path\n          required: true\n          description: The unique ID of the ipSet you want to delete.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetIPSet\n      description: Retrieves the IPSet specified by the IPSet ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIPSetResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the ipSet is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: ipSetId\n          in: path\n          required: true\n          description: The unique ID of the ipSet you want to get.\n          schema:\n            type: string\n    post:\n      operationId: UpdateIPSet\n      description: Updates the IPSet specified by the IPSet ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateIPSetResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The detectorID that specifies the GuardDuty service whose IPSet you\n            want to update.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: ipSetId\n          in: path\n          required: true\n          description: The unique ID that specifies the IPSet that you want to update.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: The unique ID that specifies the IPSet that you want to\n                    update.\n                  type: string\n                  minLength: 1\n                  maxLength: 300\n                location:\n                  description: The updated URI of the file that contains the IPSet. For\n                    example\n                    (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key).\n                  type: string\n                  minLength: 1\n                  maxLength: 300\n                activate:\n                  description: The updated boolean value that specifies whether the IPSet\n                    is active or not.\n                  type: boolean\n        required: true\n  /invitation/delete:\n    post:\n      operationId: DeleteInvitations\n      description: Deletes invitations sent to the current member account by AWS accounts\n        specified by their account IDs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteInvitationsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountIds\n              properties:\n                accountIds:\n                  description: A list of account IDs of the AWS accounts that sent\n                    invitations to the current member account that you want to\n                    delete invitations from.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountId\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/member/delete\":\n    post:\n      operationId: DeleteMembers\n      description: Deletes GuardDuty member accounts (to the current GuardDuty master\n        account) specified by the account IDs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteMembersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account whose members\n            you want to delete.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountIds\n              properties:\n                accountIds:\n                  description: A list of account IDs of the GuardDuty member accounts that\n                    you want to delete.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountId\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/threatintelset/{threatIntelSetId}\":\n    delete:\n      operationId: DeleteThreatIntelSet\n      description: Deletes ThreatIntelSet specified by the ThreatIntelSet ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteThreatIntelSetResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the threatIntelSet is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: threatIntelSetId\n          in: path\n          required: true\n          description: The unique ID of the threatIntelSet you want to delete.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetThreatIntelSet\n      description: Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetThreatIntelSetResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector the threatIntelSet is associated with.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: threatIntelSetId\n          in: path\n          required: true\n          description: The unique ID of the threatIntelSet you want to get.\n          schema:\n            type: string\n    post:\n      operationId: UpdateThreatIntelSet\n      description: Updates the ThreatIntelSet specified by ThreatIntelSet ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateThreatIntelSetResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The detectorID that specifies the GuardDuty service whose\n            ThreatIntelSet you want to update.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: threatIntelSetId\n          in: path\n          required: true\n          description: The unique ID that specifies the ThreatIntelSet that you want to\n            update.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: The unique ID that specifies the ThreatIntelSet that you\n                    want to update.\n                  type: string\n                  minLength: 1\n                  maxLength: 300\n                location:\n                  description: The updated URI of the file that contains the\n                    ThreateIntelSet. For example\n                    (https://s3.us-west-2.amazonaws.com/my-bucket/my-object-key)\n                  type: string\n                  minLength: 1\n                  maxLength: 300\n                activate:\n                  description: The updated boolean value that specifies whether the\n                    ThreateIntelSet is active or not.\n                  type: boolean\n        required: true\n  \"/detector/{detectorId}/master/disassociate\":\n    post:\n      operationId: DisassociateFromMasterAccount\n      description: Disassociates the current GuardDuty member account from its master\n        account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisassociateFromMasterAccountResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty member account.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/member/disassociate\":\n    post:\n      operationId: DisassociateMembers\n      description: Disassociates GuardDuty member accounts (to the current GuardDuty master\n        account) specified by the account IDs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisassociateMembersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account whose members\n            you want to disassociate from master.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountIds\n              properties:\n                accountIds:\n                  description: A list of account IDs of the GuardDuty member accounts that\n                    you want to disassociate from master.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountId\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/findings/get\":\n    post:\n      operationId: GetFindings\n      description: Describes Amazon GuardDuty findings specified by finding IDs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFindingsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The ID of the detector that specifies the GuardDuty service whose\n            findings you want to retrieve.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - findingIds\n              properties:\n                findingIds:\n                  description: IDs of the findings that you want to retrieve.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/FindingId\"\n                  minItems: 0\n                  maxItems: 50\n                sortCriteria:\n                  description: Contains information about the criteria for sorting.\n                  type: object\n                  properties:\n                    AttributeName:\n                      $ref: \"#/components/schemas/String\"\n                    OrderBy:\n                      $ref: \"#/components/schemas/OrderBy\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/findings/statistics\":\n    post:\n      operationId: GetFindingsStatistics\n      description: Lists Amazon GuardDuty findings' statistics for the specified detector\n        ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFindingsStatisticsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The ID of the detector that specifies the GuardDuty service whose\n            findings' statistics you want to retrieve.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - findingStatisticTypes\n              properties:\n                findingStatisticTypes:\n                  description: Types of finding statistics to retrieve.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/FindingStatisticType\"\n                  minItems: 0\n                  maxItems: 10\n                findingCriteria:\n                  description: Contains finding criteria information.\n                  type: object\n                  properties:\n                    Criterion:\n                      $ref: \"#/components/schemas/Criterion\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /invitation/count:\n    get:\n      operationId: GetInvitationsCount\n      description: Returns the count of all GuardDuty membership invitations that were sent\n        to the current member account except the currently accepted invitation.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetInvitationsCountResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/member/get\":\n    post:\n      operationId: GetMembers\n      description: Retrieves GuardDuty member accounts (to the current GuardDuty master\n        account) specified by the account IDs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetMembersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account whose members\n            you want to retrieve.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountIds\n              properties:\n                accountIds:\n                  description: A list of account IDs of the GuardDuty member accounts that\n                    you want to describe.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountId\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/member/invite\":\n    post:\n      operationId: InviteMembers\n      description: Invites other AWS accounts (created as members of the current AWS\n        account by CreateMembers) to enable GuardDuty and allow the current AWS\n        account to view and manage these accounts' GuardDuty findings on their\n        behalf as the master account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InviteMembersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account with which\n            you want to invite members.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountIds\n              properties:\n                accountIds:\n                  description: A list of account IDs of the accounts that you want to\n                    invite to GuardDuty as members.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountId\"\n                  minItems: 1\n                  maxItems: 50\n                disableEmailNotification:\n                  description: A boolean value that specifies whether you want to disable\n                    email notification to the accounts that you’re inviting to\n                    GuardDuty as members.\n                  type: boolean\n                message:\n                  description: The invitation message that you want to send to the accounts\n                    that you’re inviting to GuardDuty as members.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/findings\":\n    post:\n      operationId: ListFindings\n      description: Lists Amazon GuardDuty findings for the specified detector ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListFindingsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The ID of the detector that specifies the GuardDuty service whose\n            findings you want to list.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                findingCriteria:\n                  description: Contains finding criteria information.\n                  type: object\n                  properties:\n                    Criterion:\n                      $ref: \"#/components/schemas/Criterion\"\n                sortCriteria:\n                  description: Contains information about the criteria for sorting.\n                  type: object\n                  properties:\n                    AttributeName:\n                      $ref: \"#/components/schemas/String\"\n                    OrderBy:\n                      $ref: \"#/components/schemas/OrderBy\"\n                maxResults:\n                  description: You can use this parameter to indicate the maximum number of\n                    items you want in the response. The default value is 50. The\n                    maximum value is 50.\n                  type: integer\n                  minimum: 1\n                  maximum: 50\n                nextToken:\n                  description: You can use this parameter when paginating results. Set the\n                    value of this parameter to null on your first call to the\n                    list action. For subsequent calls to the action fill\n                    nextToken in the request with the value of NextToken from\n                    the previous response to continue listing data.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /invitation:\n    get:\n      operationId: ListInvitations\n      description: Lists all GuardDuty membership invitations that were sent to the current\n        AWS account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListInvitationsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: You can use this parameter to indicate the maximum number of items\n            you want in the response. The default value is 50. The maximum value\n            is 50.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nextToken\n          in: query\n          required: false\n          description: You can use this parameter when paginating results. Set the value of\n            this parameter to null on your first call to the list action. For\n            subsequent calls to the action fill nextToken in the request with\n            the value of NextToken from the previous response to continue\n            listing data.\n          schema:\n            type: string\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/tags/{resourceArn}\":\n    get:\n      operationId: ListTagsForResource\n      description: Lists tags for a resource. Tagging is currently supported for detectors,\n        finding filters, IP sets, and Threat Intel sets, with a limit of 50 tags\n        per resource. When invoked, this operation returns all assigned tags for\n        a given resource..\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: \"The Amazon Resource Name (ARN) for the given GuardDuty resource \"\n          schema:\n            type: string\n            pattern: ^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\\d+:detector/[A-Za-z0-9_/.-]{32,264}$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      operationId: TagResource\n      description: Adds tags to a resource.\n      responses:\n        \"204\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: \"The Amazon Resource Name (ARN) for the given GuardDuty resource \"\n          schema:\n            type: string\n            pattern: ^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\\d+:detector/[A-Za-z0-9_/.-]{32,264}$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: The tags to be added to a resource.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n        required: true\n  \"/detector/{detectorId}/member/start\":\n    post:\n      operationId: StartMonitoringMembers\n      description: Re-enables GuardDuty to monitor findings of the member accounts\n        specified by the account IDs. A master GuardDuty account can run this\n        command after disabling GuardDuty from monitoring these members'\n        findings by running StopMonitoringMembers.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartMonitoringMembersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account whom you want\n            to re-enable to monitor members' findings.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountIds\n              properties:\n                accountIds:\n                  description: A list of account IDs of the GuardDuty member accounts whose\n                    findings you want the master account to monitor.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountId\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/member/stop\":\n    post:\n      operationId: StopMonitoringMembers\n      description: Disables GuardDuty from monitoring findings of the member accounts\n        specified by the account IDs. After running this command, a master\n        GuardDuty account can run StartMonitoringMembers to re-enable GuardDuty\n        to monitor these members’ findings.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StopMonitoringMembersResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The unique ID of the detector of the GuardDuty account that you want\n            to stop from monitor members' findings.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accountIds\n              properties:\n                accountIds:\n                  description: A list of account IDs of the GuardDuty member accounts whose\n                    findings you want the master account to stop monitoring.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AccountId\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/findings/unarchive\":\n    post:\n      operationId: UnarchiveFindings\n      description: Unarchives Amazon GuardDuty findings specified by the list of finding\n        IDs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnarchiveFindingsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The ID of the detector that specifies the GuardDuty service whose\n            findings you want to unarchive.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - findingIds\n              properties:\n                findingIds:\n                  description: IDs of the findings that you want to unarchive.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/FindingId\"\n                  minItems: 0\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/tags/{resourceArn}#tagKeys\":\n    delete:\n      operationId: UntagResource\n      description: Removes tags from a resource.\n      responses:\n        \"204\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UntagResourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: \"The Amazon Resource Name (ARN) for the given GuardDuty resource \"\n          schema:\n            type: string\n            pattern: ^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\\d+:detector/[A-Za-z0-9_/.-]{32,264}$\n        - name: tagKeys\n          in: query\n          required: true\n          description: The tag keys to remove from a resource.\n          schema:\n            type: array\n            items:\n              type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/detector/{detectorId}/findings/feedback\":\n    post:\n      operationId: UpdateFindingsFeedback\n      description: Marks specified Amazon GuardDuty findings as useful or not useful.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateFindingsFeedbackResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n      parameters:\n        - name: detectorId\n          in: path\n          required: true\n          description: The ID of the detector that specifies the GuardDuty service whose\n            findings you want to mark as useful or not useful.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 300\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - findingIds\n                - feedback\n              properties:\n                findingIds:\n                  description: IDs of the findings that you want to mark as useful or not\n                    useful.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/FindingId\"\n                  minItems: 0\n                  maxItems: 50\n                feedback:\n                  description: \"Valid values: USEFUL | NOT_USEFUL\"\n                  type: string\n                  enum:\n                    - USEFUL\n                    - NOT_USEFUL\n                comments:\n                  description: Additional feedback about the GuardDuty findings.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://guardduty.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon GuardDuty multi-region endpoint\n  - url: https://guardduty.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon GuardDuty multi-region endpoint\n  - url: http://guardduty.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon GuardDuty endpoint for China (Beijing) and China (Ningxia)\n  - url: https://guardduty.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon GuardDuty endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AcceptInvitationResponse:\n      type: object\n      properties: {}\n    BadRequestException: {}\n    InternalServerErrorException: {}\n    ArchiveFindingsResponse:\n      type: object\n      properties: {}\n    FindingId:\n      type: string\n      minLength: 1\n      maxLength: 300\n    CreateDetectorResponse:\n      type: object\n      properties:\n        DetectorId:\n          $ref: \"#/components/schemas/DetectorId\"\n    TagValue:\n      type: string\n      maxLength: 256\n    CreateFilterResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/FilterName\"\n    Criterion:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/Condition\"\n    CreateIPSetResponse:\n      type: object\n      required:\n        - IpSetId\n      properties:\n        IpSetId:\n          $ref: \"#/components/schemas/String\"\n    CreateMembersResponse:\n      type: object\n      required:\n        - UnprocessedAccounts\n      properties:\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    AccountDetail:\n      type: object\n      required:\n        - AccountId\n        - Email\n      properties:\n        AccountId:\n          $ref: \"#/components/schemas/AccountId\"\n        Email:\n          $ref: \"#/components/schemas/Email\"\n      description: Contains information about the account.\n    CreateSampleFindingsResponse:\n      type: object\n      properties: {}\n    FindingType:\n      type: string\n      minLength: 1\n      maxLength: 50\n    CreateThreatIntelSetResponse:\n      type: object\n      required:\n        - ThreatIntelSetId\n      properties:\n        ThreatIntelSetId:\n          $ref: \"#/components/schemas/String\"\n    DeclineInvitationsResponse:\n      type: object\n      required:\n        - UnprocessedAccounts\n      properties:\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    AccountId:\n      type: string\n      minLength: 12\n      maxLength: 12\n    DeleteDetectorResponse:\n      type: object\n      properties: {}\n    DeleteFilterResponse:\n      type: object\n      properties: {}\n    DeleteIPSetResponse:\n      type: object\n      properties: {}\n    DeleteInvitationsResponse:\n      type: object\n      required:\n        - UnprocessedAccounts\n      properties:\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    DeleteMembersResponse:\n      type: object\n      required:\n        - UnprocessedAccounts\n      properties:\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    DeleteThreatIntelSetResponse:\n      type: object\n      properties: {}\n    DisassociateFromMasterAccountResponse:\n      type: object\n      properties: {}\n    DisassociateMembersResponse:\n      type: object\n      required:\n        - UnprocessedAccounts\n      properties:\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    GetDetectorResponse:\n      type: object\n      required:\n        - ServiceRole\n        - Status\n      properties:\n        CreatedAt:\n          $ref: \"#/components/schemas/String\"\n        FindingPublishingFrequency:\n          $ref: \"#/components/schemas/FindingPublishingFrequency\"\n        ServiceRole:\n          $ref: \"#/components/schemas/String\"\n        Status:\n          $ref: \"#/components/schemas/DetectorStatus\"\n        UpdatedAt:\n          $ref: \"#/components/schemas/String\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    GetFilterResponse:\n      type: object\n      required:\n        - Name\n        - Action\n        - FindingCriteria\n      properties:\n        Name:\n          $ref: \"#/components/schemas/FilterName\"\n        Description:\n          $ref: \"#/components/schemas/FilterDescription\"\n        Action:\n          $ref: \"#/components/schemas/FilterAction\"\n        Rank:\n          $ref: \"#/components/schemas/FilterRank\"\n        FindingCriteria:\n          $ref: \"#/components/schemas/FindingCriteria\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    GetFindingsResponse:\n      type: object\n      required:\n        - Findings\n      properties:\n        Findings:\n          $ref: \"#/components/schemas/Findings\"\n    String:\n      type: string\n    OrderBy:\n      type: string\n      enum:\n        - ASC\n        - DESC\n    GetFindingsStatisticsResponse:\n      type: object\n      required:\n        - FindingStatistics\n      properties:\n        FindingStatistics:\n          $ref: \"#/components/schemas/FindingStatistics\"\n    FindingStatisticType:\n      type: string\n      enum:\n        - COUNT_BY_SEVERITY\n    GetIPSetResponse:\n      type: object\n      required:\n        - Name\n        - Format\n        - Location\n        - Status\n      properties:\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        Format:\n          $ref: \"#/components/schemas/IpSetFormat\"\n        Location:\n          $ref: \"#/components/schemas/Location\"\n        Status:\n          $ref: \"#/components/schemas/IpSetStatus\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    GetInvitationsCountResponse:\n      type: object\n      properties:\n        InvitationsCount:\n          $ref: \"#/components/schemas/Integer\"\n    GetMasterAccountResponse:\n      type: object\n      required:\n        - Master\n      properties:\n        Master:\n          $ref: \"#/components/schemas/Master\"\n    GetMembersResponse:\n      type: object\n      required:\n        - Members\n        - UnprocessedAccounts\n      properties:\n        Members:\n          $ref: \"#/components/schemas/Members\"\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    GetThreatIntelSetResponse:\n      type: object\n      required:\n        - Name\n        - Format\n        - Location\n        - Status\n      properties:\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        Format:\n          $ref: \"#/components/schemas/ThreatIntelSetFormat\"\n        Location:\n          $ref: \"#/components/schemas/Location\"\n        Status:\n          $ref: \"#/components/schemas/ThreatIntelSetStatus\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    InviteMembersResponse:\n      type: object\n      required:\n        - UnprocessedAccounts\n      properties:\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    ListDetectorsResponse:\n      type: object\n      required:\n        - DetectorIds\n      properties:\n        DetectorIds:\n          $ref: \"#/components/schemas/DetectorIds\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n    ListFiltersResponse:\n      type: object\n      required:\n        - FilterNames\n      properties:\n        FilterNames:\n          $ref: \"#/components/schemas/FilterNames\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n    ListFindingsResponse:\n      type: object\n      required:\n        - FindingIds\n      properties:\n        FindingIds:\n          $ref: \"#/components/schemas/FindingIds\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n    ListIPSetsResponse:\n      type: object\n      required:\n        - IpSetIds\n      properties:\n        IpSetIds:\n          $ref: \"#/components/schemas/IpSetIds\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n    ListInvitationsResponse:\n      type: object\n      properties:\n        Invitations:\n          $ref: \"#/components/schemas/Invitations\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n    ListMembersResponse:\n      type: object\n      properties:\n        Members:\n          $ref: \"#/components/schemas/Members\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    ListThreatIntelSetsResponse:\n      type: object\n      required:\n        - ThreatIntelSetIds\n      properties:\n        ThreatIntelSetIds:\n          $ref: \"#/components/schemas/ThreatIntelSetIds\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n    StartMonitoringMembersResponse:\n      type: object\n      required:\n        - UnprocessedAccounts\n      properties:\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    StopMonitoringMembersResponse:\n      type: object\n      required:\n        - UnprocessedAccounts\n      properties:\n        UnprocessedAccounts:\n          $ref: \"#/components/schemas/UnprocessedAccounts\"\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UnarchiveFindingsResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$\n      minLength: 1\n      maxLength: 128\n    UpdateDetectorResponse:\n      type: object\n      properties: {}\n    UpdateFilterResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/FilterName\"\n    UpdateFindingsFeedbackResponse:\n      type: object\n      properties: {}\n    UpdateIPSetResponse:\n      type: object\n      properties: {}\n    UpdateThreatIntelSetResponse:\n      type: object\n      properties: {}\n    DetectorId:\n      type: string\n      minLength: 1\n      maxLength: 300\n    AcceptInvitationRequest:\n      type: object\n      required:\n        - MasterId\n        - InvitationId\n      properties:\n        MasterId:\n          $ref: \"#/components/schemas/String\"\n        InvitationId:\n          $ref: \"#/components/schemas/String\"\n    AccessKeyDetails:\n      type: object\n      properties:\n        AccessKeyId:\n          $ref: \"#/components/schemas/String\"\n        PrincipalId:\n          $ref: \"#/components/schemas/String\"\n        UserName:\n          $ref: \"#/components/schemas/String\"\n        UserType:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the access keys.\n    Email:\n      type: string\n      minLength: 1\n      maxLength: 64\n    AccountDetails:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AccountDetail\"\n      minItems: 1\n      maxItems: 50\n    AccountIds:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AccountId\"\n      minItems: 1\n      maxItems: 50\n    AwsApiCallAction:\n      type: object\n      properties:\n        Api:\n          $ref: \"#/components/schemas/String\"\n        CallerType:\n          $ref: \"#/components/schemas/String\"\n        DomainDetails:\n          $ref: \"#/components/schemas/DomainDetails\"\n        RemoteIpDetails:\n          $ref: \"#/components/schemas/RemoteIpDetails\"\n        ServiceName:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the API operation.\n    DnsRequestAction:\n      type: object\n      properties:\n        Domain:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the DNS request.\n    NetworkConnectionAction:\n      type: object\n      properties:\n        Blocked:\n          $ref: \"#/components/schemas/Boolean\"\n        ConnectionDirection:\n          $ref: \"#/components/schemas/String\"\n        LocalPortDetails:\n          $ref: \"#/components/schemas/LocalPortDetails\"\n        Protocol:\n          $ref: \"#/components/schemas/String\"\n        RemoteIpDetails:\n          $ref: \"#/components/schemas/RemoteIpDetails\"\n        RemotePortDetails:\n          $ref: \"#/components/schemas/RemotePortDetails\"\n      description: Contains information about the network connection.\n    PortProbeAction:\n      type: object\n      properties:\n        Blocked:\n          $ref: \"#/components/schemas/Boolean\"\n        PortProbeDetails:\n          $ref: \"#/components/schemas/PortProbeDetails\"\n      description: Contains information about the port probe.\n    Action:\n      type: object\n      properties:\n        ActionType:\n          $ref: \"#/components/schemas/String\"\n        AwsApiCallAction:\n          $ref: \"#/components/schemas/AwsApiCallAction\"\n        DnsRequestAction:\n          $ref: \"#/components/schemas/DnsRequestAction\"\n        NetworkConnectionAction:\n          $ref: \"#/components/schemas/NetworkConnectionAction\"\n        PortProbeAction:\n          $ref: \"#/components/schemas/PortProbeAction\"\n      description: Contains information about action.\n    FindingIds:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FindingId\"\n      minItems: 0\n      maxItems: 50\n    ArchiveFindingsRequest:\n      type: object\n      required:\n        - FindingIds\n      properties:\n        FindingIds:\n          $ref: \"#/components/schemas/FindingIds\"\n    DomainDetails:\n      type: object\n      properties:\n        Domain:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the domain.\n    RemoteIpDetails:\n      type: object\n      properties:\n        City:\n          $ref: \"#/components/schemas/City\"\n        Country:\n          $ref: \"#/components/schemas/Country\"\n        GeoLocation:\n          $ref: \"#/components/schemas/GeoLocation\"\n        IpAddressV4:\n          $ref: \"#/components/schemas/String\"\n        Organization:\n          $ref: \"#/components/schemas/Organization\"\n      description: Continas information about the remote IP address.\n    Boolean:\n      type: boolean\n    City:\n      type: object\n      properties:\n        CityName:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the city associated with the IP address.\n    ClientToken:\n      type: string\n      minLength: 0\n      maxLength: 64\n    Eq:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    Neq:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    Integer:\n      type: integer\n    Equals:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    NotEquals:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    Long:\n      type: integer\n    Condition:\n      type: object\n      properties:\n        Eq:\n          $ref: \"#/components/schemas/Eq\"\n        Neq:\n          $ref: \"#/components/schemas/Neq\"\n        Gt:\n          $ref: \"#/components/schemas/Integer\"\n        Gte:\n          $ref: \"#/components/schemas/Integer\"\n        Lt:\n          $ref: \"#/components/schemas/Integer\"\n        Lte:\n          $ref: \"#/components/schemas/Integer\"\n        Equals:\n          $ref: \"#/components/schemas/Equals\"\n        NotEquals:\n          $ref: \"#/components/schemas/NotEquals\"\n        GreaterThan:\n          $ref: \"#/components/schemas/Long\"\n        GreaterThanOrEqual:\n          $ref: \"#/components/schemas/Long\"\n        LessThan:\n          $ref: \"#/components/schemas/Long\"\n        LessThanOrEqual:\n          $ref: \"#/components/schemas/Long\"\n      description: Contains information about the condition.\n    CountBySeverity:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/Integer\"\n    Country:\n      type: object\n      properties:\n        CountryCode:\n          $ref: \"#/components/schemas/String\"\n        CountryName:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the country.\n    FindingPublishingFrequency:\n      type: string\n      enum:\n        - FIFTEEN_MINUTES\n        - ONE_HOUR\n        - SIX_HOURS\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 200\n      additionalProperties:\n        $ref: \"#/components/schemas/TagValue\"\n    CreateDetectorRequest:\n      type: object\n      required:\n        - Enable\n      properties:\n        Enable:\n          $ref: \"#/components/schemas/Boolean\"\n        ClientToken:\n          $ref: \"#/components/schemas/ClientToken\"\n        FindingPublishingFrequency:\n          $ref: \"#/components/schemas/FindingPublishingFrequency\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    FilterName:\n      type: string\n      minLength: 3\n      maxLength: 64\n    FilterDescription:\n      type: string\n      minLength: 0\n      maxLength: 512\n    FilterAction:\n      type: string\n      enum:\n        - NOOP\n        - ARCHIVE\n      minLength: 1\n      maxLength: 300\n    FilterRank:\n      type: integer\n      minimum: 1\n      maximum: 100\n    FindingCriteria:\n      type: object\n      properties:\n        Criterion:\n          $ref: \"#/components/schemas/Criterion\"\n      description: Contains finding criteria information.\n    CreateFilterRequest:\n      type: object\n      required:\n        - Name\n        - FindingCriteria\n      properties:\n        Name:\n          $ref: \"#/components/schemas/FilterName\"\n        Description:\n          $ref: \"#/components/schemas/FilterDescription\"\n        Action:\n          $ref: \"#/components/schemas/FilterAction\"\n        Rank:\n          $ref: \"#/components/schemas/FilterRank\"\n        FindingCriteria:\n          $ref: \"#/components/schemas/FindingCriteria\"\n        ClientToken:\n          $ref: \"#/components/schemas/ClientToken\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    Name:\n      type: string\n      minLength: 1\n      maxLength: 300\n    IpSetFormat:\n      type: string\n      enum:\n        - TXT\n        - STIX\n        - OTX_CSV\n        - ALIEN_VAULT\n        - PROOF_POINT\n        - FIRE_EYE\n      minLength: 1\n      maxLength: 300\n    Location:\n      type: string\n      minLength: 1\n      maxLength: 300\n    CreateIPSetRequest:\n      type: object\n      required:\n        - Name\n        - Format\n        - Location\n        - Activate\n      properties:\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        Format:\n          $ref: \"#/components/schemas/IpSetFormat\"\n        Location:\n          $ref: \"#/components/schemas/Location\"\n        Activate:\n          $ref: \"#/components/schemas/Boolean\"\n        ClientToken:\n          $ref: \"#/components/schemas/ClientToken\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    CreateMembersRequest:\n      type: object\n      required:\n        - AccountDetails\n      properties:\n        AccountDetails:\n          $ref: \"#/components/schemas/AccountDetails\"\n    UnprocessedAccounts:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UnprocessedAccount\"\n      minItems: 0\n      maxItems: 50\n    FindingTypes:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FindingType\"\n      minItems: 0\n      maxItems: 50\n    CreateSampleFindingsRequest:\n      type: object\n      properties:\n        FindingTypes:\n          $ref: \"#/components/schemas/FindingTypes\"\n    ThreatIntelSetFormat:\n      type: string\n      enum:\n        - TXT\n        - STIX\n        - OTX_CSV\n        - ALIEN_VAULT\n        - PROOF_POINT\n        - FIRE_EYE\n      minLength: 1\n      maxLength: 300\n    CreateThreatIntelSetRequest:\n      type: object\n      required:\n        - Name\n        - Format\n        - Location\n        - Activate\n      properties:\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        Format:\n          $ref: \"#/components/schemas/ThreatIntelSetFormat\"\n        Location:\n          $ref: \"#/components/schemas/Location\"\n        Activate:\n          $ref: \"#/components/schemas/Boolean\"\n        ClientToken:\n          $ref: \"#/components/schemas/ClientToken\"\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    DeclineInvitationsRequest:\n      type: object\n      required:\n        - AccountIds\n      properties:\n        AccountIds:\n          $ref: \"#/components/schemas/AccountIds\"\n    DeleteDetectorRequest:\n      type: object\n      properties: {}\n    DeleteFilterRequest:\n      type: object\n      properties: {}\n    DeleteIPSetRequest:\n      type: object\n      properties: {}\n    DeleteInvitationsRequest:\n      type: object\n      required:\n        - AccountIds\n      properties:\n        AccountIds:\n          $ref: \"#/components/schemas/AccountIds\"\n    DeleteMembersRequest:\n      type: object\n      required:\n        - AccountIds\n      properties:\n        AccountIds:\n          $ref: \"#/components/schemas/AccountIds\"\n    DeleteThreatIntelSetRequest:\n      type: object\n      properties: {}\n    DetectorIds:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DetectorId\"\n      minItems: 0\n      maxItems: 50\n    DetectorStatus:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n      minLength: 1\n      maxLength: 300\n    DisassociateFromMasterAccountRequest:\n      type: object\n      properties: {}\n    DisassociateMembersRequest:\n      type: object\n      required:\n        - AccountIds\n      properties:\n        AccountIds:\n          $ref: \"#/components/schemas/AccountIds\"\n    Double:\n      type: number\n      format: double\n    ThreatIntelligenceDetails:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ThreatIntelligenceDetail\"\n    Evidence:\n      type: object\n      properties:\n        ThreatIntelligenceDetails:\n          $ref: \"#/components/schemas/ThreatIntelligenceDetails\"\n      description: Contains information about the reason that the finding was generated.\n    Feedback:\n      type: string\n      enum:\n        - USEFUL\n        - NOT_USEFUL\n    FilterNames:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FilterName\"\n      minItems: 0\n      maxItems: 50\n    Resource:\n      type: object\n      properties:\n        AccessKeyDetails:\n          $ref: \"#/components/schemas/AccessKeyDetails\"\n        InstanceDetails:\n          $ref: \"#/components/schemas/InstanceDetails\"\n        ResourceType:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the resource.\n    Service:\n      type: object\n      properties:\n        Action:\n          $ref: \"#/components/schemas/Action\"\n        Evidence:\n          $ref: \"#/components/schemas/Evidence\"\n        Archived:\n          $ref: \"#/components/schemas/Boolean\"\n        Count:\n          $ref: \"#/components/schemas/Integer\"\n        DetectorId:\n          $ref: \"#/components/schemas/DetectorId\"\n        EventFirstSeen:\n          $ref: \"#/components/schemas/String\"\n        EventLastSeen:\n          $ref: \"#/components/schemas/String\"\n        ResourceRole:\n          $ref: \"#/components/schemas/String\"\n        ServiceName:\n          $ref: \"#/components/schemas/String\"\n        UserFeedback:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the service.\n    Finding:\n      type: object\n      required:\n        - AccountId\n        - Arn\n        - CreatedAt\n        - Id\n        - Region\n        - Resource\n        - SchemaVersion\n        - Severity\n        - Type\n        - UpdatedAt\n      properties:\n        AccountId:\n          $ref: \"#/components/schemas/String\"\n        Arn:\n          $ref: \"#/components/schemas/String\"\n        Confidence:\n          $ref: \"#/components/schemas/Double\"\n        CreatedAt:\n          $ref: \"#/components/schemas/String\"\n        Description:\n          $ref: \"#/components/schemas/String\"\n        Id:\n          $ref: \"#/components/schemas/String\"\n        Partition:\n          $ref: \"#/components/schemas/String\"\n        Region:\n          $ref: \"#/components/schemas/String\"\n        Resource:\n          $ref: \"#/components/schemas/Resource\"\n        SchemaVersion:\n          $ref: \"#/components/schemas/String\"\n        Service:\n          $ref: \"#/components/schemas/Service\"\n        Severity:\n          $ref: \"#/components/schemas/Double\"\n        Title:\n          $ref: \"#/components/schemas/String\"\n        Type:\n          $ref: \"#/components/schemas/FindingType\"\n        UpdatedAt:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the finding.\n    FindingStatisticTypes:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FindingStatisticType\"\n      minItems: 0\n      maxItems: 10\n    FindingStatistics:\n      type: object\n      properties:\n        CountBySeverity:\n          $ref: \"#/components/schemas/CountBySeverity\"\n      description: Contains information about finding statistics.\n    Findings:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Finding\"\n      minItems: 0\n      maxItems: 50\n    GeoLocation:\n      type: object\n      properties:\n        Lat:\n          $ref: \"#/components/schemas/Double\"\n        Lon:\n          $ref: \"#/components/schemas/Double\"\n      description: \"Contains information about the \"\n    GetDetectorRequest:\n      type: object\n      properties: {}\n    GetFilterRequest:\n      type: object\n      properties: {}\n    SortCriteria:\n      type: object\n      properties:\n        AttributeName:\n          $ref: \"#/components/schemas/String\"\n        OrderBy:\n          $ref: \"#/components/schemas/OrderBy\"\n      description: Contains information about the criteria for sorting.\n    GetFindingsRequest:\n      type: object\n      required:\n        - FindingIds\n      properties:\n        FindingIds:\n          $ref: \"#/components/schemas/FindingIds\"\n        SortCriteria:\n          $ref: \"#/components/schemas/SortCriteria\"\n    GetFindingsStatisticsRequest:\n      type: object\n      required:\n        - FindingStatisticTypes\n      properties:\n        FindingStatisticTypes:\n          $ref: \"#/components/schemas/FindingStatisticTypes\"\n        FindingCriteria:\n          $ref: \"#/components/schemas/FindingCriteria\"\n    GetIPSetRequest:\n      type: object\n      properties: {}\n    IpSetStatus:\n      type: string\n      enum:\n        - INACTIVE\n        - ACTIVATING\n        - ACTIVE\n        - DEACTIVATING\n        - ERROR\n        - DELETE_PENDING\n        - DELETED\n      minLength: 1\n      maxLength: 300\n    GetInvitationsCountRequest:\n      type: object\n      properties: {}\n    GetMasterAccountRequest:\n      type: object\n      properties: {}\n    Master:\n      type: object\n      properties:\n        AccountId:\n          $ref: \"#/components/schemas/AccountId\"\n        InvitationId:\n          $ref: \"#/components/schemas/String\"\n        RelationshipStatus:\n          $ref: \"#/components/schemas/String\"\n        InvitedAt:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the Master account and invitation.\n    GetMembersRequest:\n      type: object\n      required:\n        - AccountIds\n      properties:\n        AccountIds:\n          $ref: \"#/components/schemas/AccountIds\"\n    Members:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Member\"\n      minItems: 0\n      maxItems: 50\n    GetThreatIntelSetRequest:\n      type: object\n      properties: {}\n    ThreatIntelSetStatus:\n      type: string\n      enum:\n        - INACTIVE\n        - ACTIVATING\n        - ACTIVE\n        - DEACTIVATING\n        - ERROR\n        - DELETE_PENDING\n        - DELETED\n      minLength: 1\n      maxLength: 300\n    GuardDutyArn:\n      type: string\n      pattern: ^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\\d+:detector/[A-Za-z0-9_/.-]{32,264}$\n    IamInstanceProfile:\n      type: object\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/String\"\n        Id:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the instance profile.\n    NetworkInterfaces:\n      type: array\n      items:\n        $ref: \"#/components/schemas/NetworkInterface\"\n    ProductCodes:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ProductCode\"\n    Tags:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tag\"\n    InstanceDetails:\n      type: object\n      properties:\n        AvailabilityZone:\n          $ref: \"#/components/schemas/String\"\n        IamInstanceProfile:\n          $ref: \"#/components/schemas/IamInstanceProfile\"\n        ImageDescription:\n          $ref: \"#/components/schemas/String\"\n        ImageId:\n          $ref: \"#/components/schemas/String\"\n        InstanceId:\n          $ref: \"#/components/schemas/String\"\n        InstanceState:\n          $ref: \"#/components/schemas/String\"\n        InstanceType:\n          $ref: \"#/components/schemas/String\"\n        LaunchTime:\n          $ref: \"#/components/schemas/String\"\n        NetworkInterfaces:\n          $ref: \"#/components/schemas/NetworkInterfaces\"\n        Platform:\n          $ref: \"#/components/schemas/String\"\n        ProductCodes:\n          $ref: \"#/components/schemas/ProductCodes\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n      description: Contains information about the details of an instance.\n    Invitation:\n      type: object\n      properties:\n        AccountId:\n          $ref: \"#/components/schemas/AccountId\"\n        InvitationId:\n          $ref: \"#/components/schemas/String\"\n        RelationshipStatus:\n          $ref: \"#/components/schemas/String\"\n        InvitedAt:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the invitation.\n    Invitations:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Invitation\"\n      minItems: 0\n      maxItems: 50\n    InviteMembersRequest:\n      type: object\n      required:\n        - AccountIds\n      properties:\n        AccountIds:\n          $ref: \"#/components/schemas/AccountIds\"\n        DisableEmailNotification:\n          $ref: \"#/components/schemas/Boolean\"\n        Message:\n          $ref: \"#/components/schemas/String\"\n    IpSetIds:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n      minItems: 0\n      maxItems: 50\n    Ipv6Addresses:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    ListDetectorsRequest:\n      type: object\n      properties: {}\n    ListFiltersRequest:\n      type: object\n      properties: {}\n    ListFindingsRequest:\n      type: object\n      properties:\n        FindingCriteria:\n          $ref: \"#/components/schemas/FindingCriteria\"\n        SortCriteria:\n          $ref: \"#/components/schemas/SortCriteria\"\n        MaxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n        NextToken:\n          $ref: \"#/components/schemas/String\"\n    ListIPSetsRequest:\n      type: object\n      properties: {}\n    ListInvitationsRequest:\n      type: object\n      properties: {}\n    ListMembersRequest:\n      type: object\n      properties: {}\n    ListTagsForResourceRequest:\n      type: object\n      properties: {}\n    ListThreatIntelSetsRequest:\n      type: object\n      properties: {}\n    ThreatIntelSetIds:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n      minItems: 0\n      maxItems: 50\n    LocalPortDetails:\n      type: object\n      properties:\n        Port:\n          $ref: \"#/components/schemas/Integer\"\n        PortName:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the port for the local connection.\n    Member:\n      type: object\n      required:\n        - AccountId\n        - MasterId\n        - Email\n        - RelationshipStatus\n        - UpdatedAt\n      properties:\n        AccountId:\n          $ref: \"#/components/schemas/AccountId\"\n        DetectorId:\n          $ref: \"#/components/schemas/DetectorId\"\n        MasterId:\n          $ref: \"#/components/schemas/String\"\n        Email:\n          $ref: \"#/components/schemas/Email\"\n        RelationshipStatus:\n          $ref: \"#/components/schemas/String\"\n        InvitedAt:\n          $ref: \"#/components/schemas/String\"\n        UpdatedAt:\n          $ref: \"#/components/schemas/String\"\n      description: \"Continas information about the member account \"\n    RemotePortDetails:\n      type: object\n      properties:\n        Port:\n          $ref: \"#/components/schemas/Integer\"\n        PortName:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the remote port.\n    PrivateIpAddresses:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PrivateIpAddressDetails\"\n    SecurityGroups:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SecurityGroup\"\n    NetworkInterface:\n      type: object\n      properties:\n        Ipv6Addresses:\n          $ref: \"#/components/schemas/Ipv6Addresses\"\n        NetworkInterfaceId:\n          $ref: \"#/components/schemas/String\"\n        PrivateDnsName:\n          $ref: \"#/components/schemas/String\"\n        PrivateIpAddress:\n          $ref: \"#/components/schemas/String\"\n        PrivateIpAddresses:\n          $ref: \"#/components/schemas/PrivateIpAddresses\"\n        PublicDnsName:\n          $ref: \"#/components/schemas/String\"\n        PublicIp:\n          $ref: \"#/components/schemas/String\"\n        SecurityGroups:\n          $ref: \"#/components/schemas/SecurityGroups\"\n        SubnetId:\n          $ref: \"#/components/schemas/String\"\n        VpcId:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the network interface.\n    Organization:\n      type: object\n      properties:\n        Asn:\n          $ref: \"#/components/schemas/String\"\n        AsnOrg:\n          $ref: \"#/components/schemas/String\"\n        Isp:\n          $ref: \"#/components/schemas/String\"\n        Org:\n          $ref: \"#/components/schemas/String\"\n      description: Continas information about the organization.\n    PortProbeDetails:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PortProbeDetail\"\n    PortProbeDetail:\n      type: object\n      properties:\n        LocalPortDetails:\n          $ref: \"#/components/schemas/LocalPortDetails\"\n        RemoteIpDetails:\n          $ref: \"#/components/schemas/RemoteIpDetails\"\n      description: Contains information about the port probe details.\n    PrivateIpAddressDetails:\n      type: object\n      properties:\n        PrivateDnsName:\n          $ref: \"#/components/schemas/String\"\n        PrivateIpAddress:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the private IP address.\n    ProductCode:\n      type: object\n      properties:\n        Code:\n          $ref: \"#/components/schemas/String\"\n        ProductType:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the product code.\n    SecurityGroup:\n      type: object\n      properties:\n        GroupId:\n          $ref: \"#/components/schemas/String\"\n        GroupName:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the security group.\n    StartMonitoringMembersRequest:\n      type: object\n      required:\n        - AccountIds\n      properties:\n        AccountIds:\n          $ref: \"#/components/schemas/AccountIds\"\n    StopMonitoringMembersRequest:\n      type: object\n      required:\n        - AccountIds\n      properties:\n        AccountIds:\n          $ref: \"#/components/schemas/AccountIds\"\n    Tag:\n      type: object\n      properties:\n        Key:\n          $ref: \"#/components/schemas/String\"\n        Value:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the tag associated with the resource.\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n      minItems: 1\n      maxItems: 200\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/TagMap\"\n    ThreatNames:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    ThreatIntelligenceDetail:\n      type: object\n      properties:\n        ThreatListName:\n          $ref: \"#/components/schemas/String\"\n        ThreatNames:\n          $ref: \"#/components/schemas/ThreatNames\"\n      description: An instance of a threat intelligence detail that constitutes evidence\n        for the finding.\n    UnarchiveFindingsRequest:\n      type: object\n      required:\n        - FindingIds\n      properties:\n        FindingIds:\n          $ref: \"#/components/schemas/FindingIds\"\n    UnprocessedAccount:\n      type: object\n      required:\n        - AccountId\n        - Result\n      properties:\n        AccountId:\n          $ref: \"#/components/schemas/AccountId\"\n        Result:\n          $ref: \"#/components/schemas/String\"\n      description: Contains information about the accounts that were not processed.\n    UntagResourceRequest:\n      type: object\n      properties: {}\n    UpdateDetectorRequest:\n      type: object\n      properties:\n        Enable:\n          $ref: \"#/components/schemas/Boolean\"\n        FindingPublishingFrequency:\n          $ref: \"#/components/schemas/FindingPublishingFrequency\"\n    UpdateFilterRequest:\n      type: object\n      properties:\n        Description:\n          $ref: \"#/components/schemas/FilterDescription\"\n        Action:\n          $ref: \"#/components/schemas/FilterAction\"\n        Rank:\n          $ref: \"#/components/schemas/FilterRank\"\n        FindingCriteria:\n          $ref: \"#/components/schemas/FindingCriteria\"\n    UpdateFindingsFeedbackRequest:\n      type: object\n      required:\n        - FindingIds\n        - Feedback\n      properties:\n        FindingIds:\n          $ref: \"#/components/schemas/FindingIds\"\n        Feedback:\n          $ref: \"#/components/schemas/Feedback\"\n        Comments:\n          $ref: \"#/components/schemas/String\"\n    UpdateIPSetRequest:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        Location:\n          $ref: \"#/components/schemas/Location\"\n        Activate:\n          $ref: \"#/components/schemas/Boolean\"\n    UpdateThreatIntelSetRequest:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/Name\"\n        Location:\n          $ref: \"#/components/schemas/Location\"\n        Activate:\n          $ref: \"#/components/schemas/Boolean\"\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-guardduty-2017-11-28-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-guardduty-2017-11-28-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/tags/{resourceArn}#tagKeys\": at 1:102543: duplicate path: \"/tags/{resourceArn}#tagKeys\""
}