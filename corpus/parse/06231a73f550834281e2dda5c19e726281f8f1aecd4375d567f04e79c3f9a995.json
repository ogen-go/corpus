{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OdyseeTeam/transcoder"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 2791,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: LBRY Video Transcoder\n  version: \"0.0.1\"\nservers:\n  - url: https://api.example.com/api/v1\n\npaths:\n  /video/{type}/{url}:\n    get:\n      summary: Get a video stream\n      responses:\n        \"200\":\n          description: transcoded stream found and can be delivered\n          content:\n            application/x-mpegURL: {}\n        \"202\":\n          description: transcoding is underway\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TranscodingProgress\"\n        \"403\":\n          description: transcoded stream was not found but will not be queued for processing\n        \"404\":\n          description: stream not found\n      parameters:\n      - name: url\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: type\n        in: path\n        required: true\n        schema:\n          type: string\n          enum:\n           - dash\n           - hls\n           - range\n      - name: touch\n        in: query\n        required: false\n        description: \u003e\n          if present in the query, will only return http/transcoding status,\n          omitting video data even if present\n        schema:\n          type: boolean\n          default: false\n\ncomponents:\n  schemas:\n    URL:\n      description: LBRY content URL\n      type: string\n      pattern: ^lbry://.+\n    TranscodingProgress:\n      type: object\n      properties:\n        progress:\n          type: integer\n          minimum: 0\n          maximum: 100\n        speed:\n          type: number\n          minimum: 0\n        started:\n          type: string\n          format: date-time\n    TranscodingTask:\n      type: object\n      required:\n        - claim_id\n        - signed_channel_address\n      properties:\n        url:\n          $ref: \"#/components/schemas/URL\"\n        claim_id:\n          type: string\n          format: byte\n          maxLength: 41\n        progress:\n         $ref: \"#/components/schemas/TranscodingProgress\"\n        encoding_parameters:\n          nullable: true\n          type: object\n          properties:\n            resolution:\n              type: array\n              enum:\n                - 1080p\n                - 720p\n                - 360p\n        created:\n          type: string\n          format: date-time\n        status:\n          type: string\n          enum:\n            - waiting\n            - abandoned\n            - encoding\n            - done\n        signed_channel_address:\n          type: string\n          format: byte\n          description: |\n            Signed channel address should be a channel address signed\n            by channel's key owner.\n            Transcoder will validate this signature against channel's public key \n            to prevent unauthorized requests.",
			"canonicalURL": "/github.com/OdyseeTeam/transcoder@ccfdd0a05386dbb1cb7db6fc4c740d6d3998b7c1/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OdyseeTeam/transcoder/blob/ccfdd0a05386dbb1cb7db6fc4c740d6d3998b7c1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"TranscodingTask\": parse schema: property \"encoding_parameters\": parse schema: property \"resolution\": parse enum values: parse value \"\\\"1080p\\\"\": expected type \"array\", got \"string\""
}