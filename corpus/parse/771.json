{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/yakworks/gorm-tools"
		},
		"file": {
			"name": "api.yaml",
			"path": "examples/restify/src/api-docs/openapi/api.yaml",
			"content": "openapi: 3.0.3\nservers:\n  - url: //demo.9ci.io/api\n    description: Default server\n  - url: //sanbox.9ci.io/api\n    description: Sandbox server\ninfo:\n  version: 1.0.0\n  title: 9ci Rest Api\n  termsOfService: 'http://9ci.com/terms/'\n  contact:\n    name: 9ci Inc\n    url: 'https://9ci.com'\n    email: connect@9ci.com\n  x-logo:\n    url: 'https://www.9ci.com/assets/img/logo.svg'\n    altText: 9ci logo\n  license:\n    name: 9ci Proprietary and Confidential\n    url: 'http://www.9ci.com/licenses/LICENSE-2.0.html'\n  description:\n    $ref: Intro.md\nexternalDocs:\n  description: 9ci Documentation\n  url: 'https://9ci.com/documentation/2.0/'\ntags: []\nx-tagGroups: []\n\npaths: {}\n\ncomponents:\n  schemas:\n    # common\n#    Pager:\n#      $ref: components/schemas/Pager.yaml\n\n#  parameters:\n#    id: { $ref: components/parameters/id.yaml }\n#    q: { $ref: components/parameters/q.yaml }\n#    page: { $ref: components/parameters/page.yaml }\n#    max: { $ref: components/parameters/max.yaml }\n#    sort: { $ref: components/parameters/sort.yaml }\n#    order: { $ref: components/parameters/order.yaml }\n\n#  responses:\n#    '204': { $ref: ./components/responses/204_NoContent.yaml }\n#    '403': { $ref: ./components/responses/403_Forbidden.yaml }\n#    '404': { $ref: ./components/responses/404_NotFound.yaml }\n#    '422': { $ref: ./components/responses/422_ValidationError.yaml }\n\n  securitySchemes:\n    main_auth:\n      description: |\n        Get access to data while protecting your account credentials.\n        OAuth2 is also a safer and more secure way to give you access.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'\n          scopes:\n            'write:pets': modify pets in your account\n            'read:pets': read your pets\n    api_key:\n      description: \u003e\n        For this sample, you can use the api key `special-key` to test the\n        authorization filters.\n      type: apiKey\n      name: api_key\n      in: header\n"
		}
	},
	"Error": "json: cannot unmarshal object into Go struct field Info.info.description of type string"
}