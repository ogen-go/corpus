{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geneontology/go-api"
		},
		"file": {
			"name": "swagger-orthology.yaml",
			"size": 0,
			"path": "swagger-orthology.yaml",
			"byteSize": 3663,
			"content": "openapi: 3.0.1\ninfo:\n  title: GOC Orthology Service\n  description: |-\n    The ortholog web service can be used to search for matching orthologs in target organisms. The system searches for matching orthologs in the gene family that contains the search gene associated with the search terms. The matching ortholog web service returns ortholog genes in target organisms given a search organism, the search terms and a list of target organisms.\n    It is recommended that response from previous web service request is received before sending a new request.  Failure to comply with this policy may result in the IP address being blocked from accessing PANTHER.\n  version: \"1.1\"\nservers: \n  - url: http://panthertest2.usc.edu/services\npaths:\n  /ortholog/matchOrtho.jsp:\n    description: URL for accessing ortholog web service\n    post:\n      parameters:\n        - name: geneInputList\n          in: query\n          description: 'Each identifier to be delimited by newline.  Maximum of 10 Identifiers. Can be any of the following:  Ensemble gene idenfifier, Ensemble protein identifier, Ensemble transcript identifier, Entrez gene id, gene symbol, NCBI GI, HGNC Id, International protein index id, NCBI UniGene id, UniProt accession, UniProt id'\n          required: true\n          schema:\n            type: string\n        - name: format\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - json\n              - xml\n            default: json\n        - name: organism\n          in: query\n          description: \"Taxon ID (e.g. 9606)\"\n          required: true\n          schema:\n            type: integer\n            description: Get list of supported taxon ids from /services/supportedGenomes/\n            format: int32\n        - name: targetOrganism\n          in: query\n          description: \"Taxon ID (e.g. 10090, 10090, 83333)\"\n          required: true\n          schema:\n            minItems: 1\n            type: array\n            items:\n              type: integer\n              description: Get list of supported taxon ids from /services/supportedGenomes/\n              format: int32\n          style: form\n          explode: false\n        - name: orthologType\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - all\n              - LDO\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                properties:\n                  search_type:\n                    type: string\n                  product:\n                    properties:\n                      content:\n                        type: string\n                      version:\n                        type: string\n                  mapping:\n                    properties:\n                      unmapped_ids:\n                        type: array\n                        enum:\n                          - properties:\n                              id:\n                                type: string\n                              organism:\n                                type: string\n                      mapped:\n                        type: array\n                        properties:\n                          id:\n                            type: string\n                          target_gene:\n                            type: string\n                          gene:\n                            type: string\n                          ortholog:\n                            type: string\n                          target_gene_symbol:\n                            type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /ortholog/matchOrtho.jsp: post: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: property \"mapping\": parse schema: property \"unmapped_ids\": parse enum values: parse value \"{\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"string\\\"},\\\"organism\\\":{\\\"type\\\":\\\"string\\\"}}}\": expected type \"array\", got \"object\""
}