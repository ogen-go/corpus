{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Images_ImageDbId_ImageContent_PUT.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/Images/Images_ImageDbId_ImageContent_PUT.yaml",
			"byteSize": 1446,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /images/{imageDbId}/imagecontent:\n    put:\n      summary: Update an image with the image file content\n      description: |-\n        Update an image with the image file content\n        \n        Implementation Notes\n        \n        - This call should be paired with 'PUT /images/{imageDbId}' for full capability\n        \n        - A server may choose to modify the image meta data object based on the actually image which has been uploaded. \n        \n        - Image data may be stored in a database or file system. Servers should generate and provide the \"imageURL\" for retrieving the image, wherever it happens to live.\n      parameters:\n      - description: The unique identifier for a image\n        in: path\n        name: imageDbId\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          image/*:\n            schema:\n              format: binary\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/ImageSingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Images\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /images/{imageDbId}/imagecontent: put: operation \"\": parameters: parse parameter \"\": resolve \"#/components/parameters/authorizationHeader\" reference: component by reference \"#/components/parameters/authorizationHeader\" not found"
}