{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/9seconds/topographer"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 8481,
			"content": "---\n\nopenapi: \"3.0.0\"\n\ninfo:\n  version: 1.0.0\n  title: Topographer\n  description: A lenient IP geolocation service\n  contact:\n    name: Sergey Arkhipov\n    email: nineseconds@yandex.ru\n    url: https://github.com/9seconds/topographer\n  license:\n    name: MIT\n    url: https://github.com/9seconds/topographer/blob/master/LICENSE\n\npaths:\n  /:\n    get:\n      description: \u003e\n        Resolve IP geolocation of the caller. This is done based on\n        http.Request.RemoteAddr so please check golang's documentation\n        on how this field is populated. All providers are used.\n      operationId: getSelf\n      responses:\n        \"200\":\n          description: Results of resolved geolocation\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - result\n                additionalProperties: false\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/GeolocationResult\"\n        default:\n          description: Error response in case if geolocation is impossible\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResponseError\"\n    post:\n      description: \u003e\n        Resolve IP geolocation of given IP addresses with a chosen\n        set of providers.\n      operationId: postIPs\n      requestBody:\n        description: IPs to resolve\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ips\n              additionalProperties: false\n              properties:\n                ips:\n                  title: A list of IPs to resolve\n                  minItems: 1\n                  items:\n                    $ref: \"#/components/schemas/IP\"\n                providers:\n                  title: Codes of providers to use\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/ProviderName\"\n      responses:\n        \"200\":\n          description: Results of resolved geolocation\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - results\n                additionalProperties: false\n                properties:\n                  results:\n                    type: array\n                    minItems: 1\n                    items:\n                      $ref: \"#/components/schemas/GeolocationResult\"\n        default:\n          description: Error response in case if geolocation is impossible\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResponseError\"\n\n  /{ip}:\n    get:\n      description: Resolve a single IP address\n      operationId: getIP\n      parameters:\n        - in: path\n          name: ip\n          required: true\n          description: IP address to resolve\n          schema:\n            $ref: \"#/components/schemas/IP\"\n      responses:\n        \"200\":\n          description: Results of resolved geolocation\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - result\n                additionalProperties: false\n                properties:\n                  result:\n                    $ref: \"#/components/schemas/GeolocationResult\"\n        default:\n          description: Error response in case if geolocation is impossible\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResponseError\"\n\n  /stats:\n    get:\n      description: Different statistics on provider usage\n      operationId: getStats\n      responses:\n        \"200\":\n          description: Statistics\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - results\n                additionalProperties: false\n                properties:\n                  results:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/StatsResult\"\n        default:\n          description: Error response in case if something went wrong\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResponseError\"\n\ncomponents:\n  schemas:\n    GeolocationResult:\n      title: Geolocation result\n      type: object\n      required:\n        - ip\n        - country\n        - city\n        - details\n      additionalProperties: false\n      properties:\n        ip:\n          $ref: \"#/components/schemas/IP\"\n        country:\n          title: Information about country\n          type: object\n          required:\n            - alpha2_code\n            - alpha3_code\n            - common_name\n            - official_name\n          additionalProperties: false\n          properties:\n            alpha2_code:\n              $ref: \"#/components/schemas/Alpha2Code\"\n            alpha3_code:\n              title: ISO3166 3-letter country code\n              type: string\n              anyOf:\n                - minLength: 3\n                  maxLength: 3\n                - maxLength: 0\n              example: RUS\n            common_name:\n              title: A common name we use in talks\n              type: string\n              example: Russia\n            official_name:\n              title: A name of the country in official papers\n              type: string\n              example: Russian Federation\n        city:\n          $ref: \"#/components/schemas/City\"\n        details:\n          title: Additional information about votes made by all providers\n          type: array\n          items:\n            type: object\n            required:\n              - provider_name\n              - country_code\n              - city\n            additionalProperties: false\n            properties:\n              provider_name:\n                $ref: \"#/components/schemas/ProviderName\"\n              country_code:\n                $ref: \"#/components/schemas/Alpha2Code\"\n              city:\n                $ref: \"#/components/schemas/City\"\n\n    IP:\n      title: IP address to resolve\n      type: string\n      anyOf:\n        - format: ipv4\n          minLength: 7\n          maxLength: 15\n        - format: ipv6\n          minLength: 2\n          maxLength: 36\n      example: 80.81.82.83\n\n    ProviderName:\n      type: string\n      minLength: 1\n      example: maxmind_lite\n\n    Alpha2Code:\n      title: ISO3166 2-letter country code\n      type: string\n      anyOf:\n        - minLength: 2\n          maxLength: 2\n        - maxLength: 0\n      example: RU\n\n    City:\n      title: A name of the city where this IP is operated\n      type: string\n      example: Moscow\n\n    StatsResult:\n      type: object\n      required:\n        - provider_name\n        - last_updated\n        - last_used\n        - success_count\n        - failure_count\n      additionalProperties: false\n      properties:\n        provider_name:\n          $ref: \"#/components/schemas/ProviderName\"\n        last_updated:\n          title: A unix timestamp of time when provider was updated last time\n          type: integer\n          minimum: 0\n          example: 123233423\n        last_used:\n          title: A unix timestamp of time when provider was used last time\n          type: integer\n          minimum: 0\n          example: 2347283913\n        success_count:\n          title: \u003e\n            A number of times when provider lookup was finished successfully\n          type: integer\n          minimum: 0\n          example: 100\n        failure_count:\n          title: A number of times when provider lookup was failed\n          type: integer\n          minimum: 0\n          example: 100\n\n    ResponseError:\n      title: A common structure for all errors produced by topographer\n      type: object\n      required:\n        - error\n      additionalProperties: false\n      properties:\n        error:\n          type: object\n          required:\n            - message\n            - context\n          additionalProperties: false\n          properties:\n            message:\n              title: A desciption why this error has happened\n              type: string\n              minLength: 1\n            context:\n              title: \u003e\n                Some optional context text which helps to understand a\n                reason better.\n              type: string\n",
			"canonicalURL": "/github.com/9seconds/topographer@17fb92994da69ddd9027a66a123be82a57b36cd2/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/9seconds/topographer/blob/17fb92994da69ddd9027a66a123be82a57b36cd2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /{ip}: get: operation \"getIP\": parameters: parse parameter \"ip\": invalid schema:style:explode combination: (\"\":\"simple\":false)"
}