{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ZeusWPI/g2-backend"
		},
		"file": {
			"name": "Default.v1.yaml",
			"size": 0,
			"path": "openapi/reference/Default.v1.yaml",
			"byteSize": 25674,
			"content": "openapi: 3.0.0\ninfo:\n  title: Default\n  version: '1.0'\nservers:\n  - url: 'http://localhost:3000'\npaths:\n  /projects:\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Project.v1.yaml\n      operationId: get-projects\n      description: Get a list with available projects.\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - recent\n              - popular\n              - alphabetical\n          in: query\n          description: Sort the data according to a given value. Default is alphabetical.\n          name: sort\n        - schema:\n            type: number\n          in: query\n          name: limit\n          description: Amount of projects to return.\n    post:\n      summary: ''\n      operationId: post-projects\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Project.v1.yaml\n      description: Create a new project.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n  '/projects/{id}':\n    parameters:\n      - schema:\n          type: number\n          example: 1\n        name: id\n        in: path\n        description: ''\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Project.v1.yaml\n      operationId: get-project-id\n      description: Get a project by id.\n    patch:\n      summary: ''\n      operationId: patch-project-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Project.v1.yaml\n      description: Modify a project by id.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n        description: |-\n          Every property is optional.\n          Only the given properties are updated with a new value.\n    delete:\n      summary: ''\n      operationId: delete-project-id\n      responses:\n        '200':\n          description: OK\n      description: Delete a project by id.\n  '/projects/{id}/repositories':\n    parameters:\n      - schema:\n          type: number\n          example: 1\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Repository.v1.yaml\n      operationId: get-projects-id-repositories\n      description: Get a list with repositories for a given project.\n      parameters: [ ]\n  '/projects/{id}/issues':\n    parameters:\n      - schema:\n          type: number\n          example: 1\n        name: id\n        in: path\n        required: true\n        description: ''\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Issue.v1.yaml\n      operationId: get-projects-id-issues\n      description: Get a list with issues for a given project.\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - recent\n              - popular\n              - alphabetical\n          in: query\n          name: sort\n          description: Sort the data according to a given value. Default is alphabetical.\n        - schema:\n            type: number\n          in: query\n          name: limit\n          description: Amount of issues to return.\n  '/projects/{id}/pulls':\n    parameters:\n      - schema:\n          type: number\n          example: 1\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Pull.v1.yaml\n      operationId: get-projects-id-pulls\n      description: Get a list of pull requests for a given project.\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - recent\n              - popular\n              - alphabetical\n          in: query\n          name: sort\n          description: Sort the data according to a given value. Default is alphabetical.\n        - schema:\n            type: number\n          in: query\n          name: limit\n          description: Amount of pulls to return.\n  '/projects/{id}/branches':\n    parameters:\n      - schema:\n          type: number\n          example: 1\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Branch.v1.yaml\n      operationId: get-projects-id-branches\n      description: Get a list with branches for a given project.\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - recent\n              - popular\n              - alphabetical\n          in: query\n          name: sort\n          description: Sort the data according to a given value. Default is alphabetical.\n        - schema:\n            type: number\n          in: query\n          name: limit\n          description: Amount of branches to return.\n  /repositories:\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Repository.v1.yaml\n      operationId: get-repositories\n      description: Get a list with available repositories.\n  '/repositories/{id}':\n    parameters:\n      - schema:\n          type: number\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Repository.v1.yaml\n      operationId: get-repositories-id\n      description: Get a repository by id.\n  '/repositories/{id}/projects/{projectId}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n      - schema:\n          type: integer\n        name: projectId\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-repositories-id-link-projectId\n      responses:\n        '200':\n          description: OK\n      description: Link a given project id to a given repository.\n    delete:\n      summary: ''\n      operationId: delete-repositories-id-tags-tagid\n      responses:\n        '200':\n          description: OK\n  /repositories/sync:\n    post:\n      summary: ''\n      operationId: post-repositories-sync\n      responses:\n        '200':\n          description: OK\n      description: Sync the repositories with the git providers.\n  /user:\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/User.v1.yaml\n        '401':\n          description: Unauthorized\n      operationId: get-user\n      description: Get the logged in user.\n  '/projects/{id}/maintainers':\n    parameters:\n      - schema:\n          type: number\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Author.v1.yaml\n      operationId: get-project-id-maintainers\n      description: Get a list with maintainers for a given project.\n  '/projects/{id}/contributors':\n    parameters:\n      - schema:\n          type: number\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Author.v1.yaml\n      operationId: get-projects-id-contributors\n      description: Get a list with contributors for a given project.\n  '/projects/{id}/features':\n    parameters:\n      - schema:\n          type: number\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Feature.v1.yaml\n      operationId: get-projects-id-featured\n      description: Get a list with features for a given project.\n  /tags:\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Tag.v1.yaml\n      operationId: get-tags\n      description: Get a list with tags.\n      parameters: [ ]\n    post:\n      summary: ''\n      operationId: post-tags\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Tag.v1.yaml\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                color:\n                  type: string\n                type:\n                  type: string\n                description:\n                  type: string\n      description: Create a new tag.\n  '/tags/{id}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    patch:\n      summary: ''\n      operationId: patch-tags-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Tag.v1.yaml\n              examples: { }\n      description: Update a given tag by id.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                color:\n                  type: string\n                type:\n                  type: string\n        description: |-\n          Every property is optional.\n          Only the given properties are updated with a new value.\n    get:\n      summary: ''\n      operationId: get-tags-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Tag.v1.yaml\n      description: Get a tag by id.\n    delete:\n      summary: ''\n      operationId: delete-tags-id\n      responses:\n        '204':\n          description: No Content\n      description: Delete a given tag by id.\n  '/issues/{id}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Issue.v1.yaml\n      operationId: get-issues-id\n      description: Get an issue by id.\n  '/issues/{id}/tags':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Tag.v1.yaml\n      operationId: get-issues-id-tags\n      description: Get a list with linked tags for a given issue.\n  '/issues/{id}/link/{tagId}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n      - schema:\n          type: integer\n        name: tagId\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-issues-id-tags-tagId\n      responses:\n        '200':\n          description: OK\n      description: Link a given tag by id to a given issue.\n    delete:\n      summary: ''\n      operationId: delete-issues-id-tags-tagId\n      responses:\n        '200':\n          description: OK\n      description: Unlink a given tag by id to a given issue.\n  '/pulls/{id}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Pull.v1.yaml\n              examples: { }\n      operationId: get-pulls-id\n      description: Get a pull request by id.\n  '/pulls/{id}/tags':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Pull.v1.yaml\n      operationId: get-pulls-id-tags\n      description: Get a list with linked tags for a given pull request.\n  '/pulls/{id}/link/{tagId}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n      - schema:\n          type: integer\n        name: tagId\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-pulls-id-tags-tagId\n      responses:\n        '200':\n          description: OK\n      description: Link a given tag by id to a given pull request.\n    delete:\n      summary: ''\n      operationId: delete-pulls-id-tags-tagId\n      responses:\n        '200':\n          description: OK\n      description: Unlink a given tag by id to a given pull request.\n  '/branches/{id}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Branch.v1.yaml\n      operationId: get-branches-id\n      description: Get a branch by id.\n  '/branches/{id}/tags':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Tag.v1.yaml\n      operationId: get-branches-id-tags\n      description: Get a list with linked tags for a given branch.\n  '/branches/{id}/link/{tagId}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n      - schema:\n          type: integer\n        name: tagId\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-branches-id-tags-tagId\n      responses:\n        '200':\n          description: OK\n      description: Link a given tag by id to a given branch.\n    delete:\n      summary: ''\n      operationId: delete-branches-id-tags-tagId\n      responses:\n        '200':\n          description: OK\n      description: Unlink a given tag by id to a given branch.\n  '/projects/{id}/tags':\n    parameters:\n      - schema:\n          type: number\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Tag.v1.yaml\n      operationId: get-projects-id-tags\n      description: Get a list with linked tags for a given project.\n  '/projects/{id}/link/{tagId}':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n      - schema:\n          type: integer\n        name: tagId\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-projects-id-tags-tagId\n      responses:\n        '200':\n          description: OK\n      description: Link a given tag by id to a given project.\n    delete:\n      summary: ''\n      operationId: delete-projects-id-tags-tagId\n      responses:\n        '200':\n          description: OK\n      description: Unlink a given tag by id to a given project.\n  /search:\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  issues:\n                    type: array\n                    items:\n                      $ref: ../models/Issue.v1.yaml\n                  pulls:\n                    type: array\n                    items:\n                      $ref: ../models/Pull.v1.yaml\n                  projects:\n                    type: array\n                    items:\n                      $ref: ../models/Project.v1.yaml\n                  branches:\n                    type: array\n                    items:\n                      $ref: ../models/Branch.v1.yaml\n      operationId: get-search\n      description: Search for specific data using a given query.\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: q\n          description: |-\n            Query search string.\n            Filter options are seperated by a space.\n\n            Available options are:\n            - \u003cstring\u003e: display all the items that have the given string inside their name\n            - label:\"\u003cname\u003e\": display all items matching the label with given name.\n            - tag:\"\u003cname\u003e\": display all items matching the tag with given name.\n            - project:\"\u003cname\u003e\": display all items matching the project with given name.\n\n            All filters are inclusive, meaning that the items that are returned must match all given filters.\n        - schema:\n            type: integer\n          in: query\n          name: limit\n          description: 'Limit for each array of data. (eg: 5: only return 5 issues + 5 pulls + ...)'\n        - schema:\n            type: integer\n          in: query\n          name: page\n          description: 'Page of data, based on the given limit (start: (page - 1) x limit; end: page x limit'\n  '/issues/{id}/feature':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-issues-id-feature\n      responses:\n        '204':\n          description: No Content\n      description: Feature the issue with given id.\n    delete:\n      summary: ''\n      operationId: delete-issues-id-feature\n      responses:\n        '200':\n          description: OK\n      description: Unfeature the issue with given id.\n  '/pulls/{id}/feature':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-pulls-id-feature\n      responses:\n        '200':\n          description: OK\n      description: Feature the pull request with given id.\n    delete:\n      summary: ''\n      operationId: delete-pulls-id-feature\n      responses:\n        '200':\n          description: OK\n      description: Unfeature the pull request with given id.\n  '/branches/{id}/feature':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-branches-id-feature\n      responses:\n        '200':\n          description: OK\n      description: Feature the branch with given id.\n    delete:\n      summary: ''\n      operationId: delete-branches-id-feature\n      responses:\n        '200':\n          description: OK\n      description: Unfeature the branch with given id.\n  '/projects/{id}/feature':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    post:\n      summary: ''\n      operationId: post-projects-id-feature\n      responses:\n        '200':\n          description: OK\n      description: Feature the projects with given id.\n    delete:\n      summary: ''\n      operationId: delete-projects-id-feature\n      responses:\n        '200':\n          description: OK\n      description: Unfeature the projects with given id.\n  '/repositories/{id}/tags':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Get tags linked to a specific repository\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Tag.v1.yaml\n      operationId: get-repositories-id-tags\n  '/oauth/{provider}':\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '307':\n          description: Temporary Redirect\n          headers: { }\n      operationId: get-oauth-zeus\n      description: |-\n        OAuth endpoint for login with {provider}.\n        This should redirect to the backend /oauth/callback after completion.\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: frontendSuccessCallback\n          description: Callback to the frontend after authentication is successful\n        - schema:\n            type: string\n          in: query\n          name: frontendErrorCallback\n          description: Callback to the frontend after authentication has failed\n    parameters:\n      - schema:\n          type: string\n          enum:\n            - zeus\n            - github\n        name: provider\n        in: path\n        required: true\n        description: 'OAuth provider (zeus, github, ...)'\n  /oauth/callback:\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      operationId: get-oauth-callback\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: frontendSuccessCallback\n          description: Callback to the frontend after authentication is successful\n        - schema:\n            type: string\n          in: query\n          name: frontendErrorCallback\n          description: Callback to the frontend after authentication has failed\n        - schema:\n            type: string\n          in: query\n          name: error\n          description: 'Only when failed: the error code received by the OAuth provider.'\n        - schema:\n            type: string\n          in: query\n          name: code\n          description: 'Only when succeeded: the OAuth access token'\n      description: |-\n        Callback after OAuth completion.\n        This should redirect to the correct frontend callback (provided using query params).\n      responses:\n        '307':\n          description: Temporary Redirect\n    parameters: []\n  /oauth/logout:\n    post:\n      summary: ''\n      operationId: post-oauth-logout\n      responses:\n        '200':\n          description: OK\n      description: Delete the current OAuth session\n  '/projects/{id}/subprojects':\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      tags: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../models/Project.v1.yaml\n      operationId: get-projects-id-subprojects\n      description: Get a list with subprojects for a given project.\ncomponents:\n  schemas: { }\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /projects/{id}/tags: get: operation \"get-projects-id-tags\": responses: 200: content: application/json: schema: parse schema: item: parse schema: resolve \"../models/Tag.v1.yaml\": find schema: external base \"../models/Tag.v1.yaml\" is not supported"
}