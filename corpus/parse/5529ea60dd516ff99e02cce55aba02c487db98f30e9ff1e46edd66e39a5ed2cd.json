{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openl-tablets/openl-tablets"
		},
		"file": {
			"name": "EPBDS-11015.json",
			"size": 0,
			"path": "STUDIO/org.openl.rules.webstudio.web/test-resources/openapi/functionality/EPBDS-11015.json",
			"byteSize": 8543,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/webservice\",\n      \"variables\": {}\n    }\n  ],\n  \"paths\": {\n    \"/statement/{a}/{b}/{c}\": {\n      \"get\": {\n        \"tags\": [\n          \"accounts\"\n        ],\n        \"summary\": \"Выписка по счетам\",\n        \"description\": \"Возвращает список транзакций по одному либо нескольким счетам\",\n        \"operationId\": \"getStatement\",\n        \"parameters\": [\n          {\n            \"name\": \"a\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"b\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\",\n              \"format\": \"double\"\n            }\n          },\n          {\n            \"name\": \"c\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Успешное выполнение запроса\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StatementResponse\"\n                },\n                \"example\": {\n                  \"message\": \"Failed to load lazy method.\",\n                  \"type\": \"COMPILATION\"\n                }\n              }\n            }\n          }\n        },\n        \"x-st-position\": 5,\n        \"x-st-code-samples\": [\n          {\n            \"lang\": \"cURL\",\n            \"sample\": \"curl -X GET \\\\\\r\\n  'https://developerhub.alfabank.by:8273/partner/1.0.2/accounts/statement/?number=\u003cnumber1\u003e,\u003cnumber2\u003e\u0026dateFrom=30.09.2018Z\u0026dateTo=30.10.2018\u0026pageNo=1\u0026pageRowCount=50\u0026transactions=0\u0026cacheKey=\u003ccacheKey\u003e' \\\\\\r\\n  -H 'Authorization: Bearer \u003caccessToken\u003e'\\r\\n\"\n          },\n          {\n            \"lang\": \"Java\",\n            \"sample\": \"OkHttpClient client = new OkHttpClient();\\r\\n\\r\\nRequest request = new Request.Builder()\\r\\n  .url(\\\"https://developerhub.alfabank.by:8273/partner/1.0.2/accounts/statement/?number=\u003cnumber1\u003e,\u003cnumber2\u003e\u0026dateFrom=30.09.2018\u0026dateTo=30.10.2018\u0026pageNo=1\u0026pageRowCount=50\u0026transactions=0\u0026cacheKey=\u003ccacheKey\u003e\\\")\\r\\n  .get()\\r\\n  .addHeader(\\\"Authorization\\\", \\\"Bearer \u003caccessToken\u003e\\\")\\r\\n  .build();\\r\\n\\r\\nResponse response = client.newCall(request).execute();\\r\\n\"\n          },\n          {\n            \"lang\": \"Node\",\n            \"sample\": \"var request = require(\\\"request\\\");\\r\\n\\r\\nvar options = { method: 'GET',\\r\\n  url: 'https://developerhub.alfabank.by:8273/partner/1.0.2/accounts/statement/',\\r\\n  qs:\\r\\n   { number: '\u003cnumber1\u003e,\u003cnumber2\u003e',\\r\\n     dateFrom: '30.09.2018',\\r\\n     dateTo: '30.10.2018',\\r\\n     pageNo: '1',\\r\\n     pageRowCount: '50',\\r\\n     transactions: '0',\\r\\n     cacheKey: '\u003ccacheKey\u003e' },\\r\\n  headers:\\r\\n   { Authorization: 'Bearer \u003caccessToken\u003e' } };\\r\\n\\r\\nrequest(options, function (error, response, body) {\\r\\n  if (error) throw new Error(error);\\r\\n\\r\\n  console.log(body);\\r\\n});\\r\\n\"\n          },\n          {\n            \"lang\": \"Swift\",\n            \"sample\": \"import Foundation\\r\\n\\r\\nlet headers = [\\r\\n  \\\"Authorization\\\": \\\"Bearer \u003caccessToken\u003e\\\"\\r\\n]\\r\\n\\r\\nlet request = NSMutableURLRequest(url: NSURL(string: \\\"https://developerhub.alfabank.by:8273/partner/1.0.2/accounts/statement/?number=\u003cnumber1\u003e,\u003cnumber2\u003e\u0026dateFrom=30.09.2018\u0026dateTo=30.10.2018\u0026pageNo=1\u0026pageRowCount=50\u0026transactions=0\u0026cacheKey=\u003ccacheKey\u003e\\\")! as URL,\\r\\n                                        cachePolicy: .useProtocolCachePolicy,\\r\\n                                    timeoutInterval: 10.0)\\r\\nrequest.httpMethod = \\\"GET\\\"\\r\\nrequest.allHTTPHeaderFields = headers\\r\\n\\r\\nlet session = URLSession.shared\\r\\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -\u003e Void in\\r\\n  if (error != nil) {\\r\\n    print(error)\\r\\n  } else {\\r\\n    let httpResponse = response as? HTTPURLResponse\\r\\n    print(httpResponse)\\r\\n  }\\r\\n})\\r\\n\\r\\ndataTask.resume()\\r\\n\"\n          }\n        ],\n        \"x-scope\": \"accounts\",\n        \"x-auth-type\": \"Application \u0026 Application User\",\n        \"x-throttling-tier\": \"Unlimited\",\n        \"security\": [\n          {\n            \"default\": [\n              \"accounts\"\n            ]\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Statement\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"number\": {\n            \"type\": \"string\",\n            \"description\": \"Номер счета\"\n          },\n          \"operType\": {\n            \"type\": \"string\",\n            \"description\": \"Тип операции (D - дебет, C - кредит)\"\n          },\n          \"operCode\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"Код вида операции\"\n          },\n          \"operCodeName\": {\n            \"type\": \"string\",\n            \"description\": \"Наименование вида операции\"\n          },\n          \"operDate\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"example\": \"06.08.2019\",\n            \"description\": \"Дата исполнения документа\"\n          },\n          \"acceptDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-08-06T09:00:00.000\",\n            \"description\": \"Дата и время проведения операции\"\n          },\n          \"docId\": {\n            \"type\": \"string\",\n            \"description\": \"Идентификатор документа\"\n          },\n          \"docNum\": {\n            \"type\": \"string\",\n            \"description\": \"Номер документа\"\n          },\n          \"docType\": {\n            \"type\": \"string\",\n            \"description\": \"Код типа документа\"\n          },\n          \"amount\": {\n            \"type\": \"number\",\n            \"description\": \"Сумма\"\n          },\n          \"amountEq\": {\n            \"type\": \"number\",\n            \"description\": \"Сумма эквивалент\"\n          },\n          \"currCode\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"Код валюты (цифр.)\"\n          },\n          \"currIso\": {\n            \"type\": \"string\",\n            \"description\": \"Код валюты (симв.)\"\n          },\n          \"purpose\": {\n            \"type\": \"string\",\n            \"description\": \"Назначение\"\n          },\n          \"corrName\": {\n            \"type\": \"string\",\n            \"description\": \"Наименование корреспондента\"\n          },\n          \"corrUnp\": {\n            \"type\": \"string\",\n            \"description\": \"УНП корреспондента\"\n          },\n          \"corrNumber\": {\n            \"type\": \"string\",\n            \"description\": \"Счет корреспондента\"\n          },\n          \"corrBic\": {\n            \"type\": \"string\",\n            \"description\": \"Код банка корреспондента\"\n          },\n          \"corrBank\": {\n            \"type\": \"string\",\n            \"description\": \"Наименование банка корреспондента\"\n          },\n          \"budgetCode\": {\n            \"type\": \"string\",\n            \"description\": \"Код платежа в бюджет\"\n          },\n          \"printId\": {\n            \"type\": \"string\",\n            \"description\": \"Идентификатор для печати приложения\"\n          }\n        },\n        \"description\": \"Модель операции в выписке\"\n      },\n      \"StatementResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"totalRowCount\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"Полное количество строк в выборке\"\n          },\n          \"cacheKey\": {\n            \"type\": \"string\",\n            \"description\": \"Ключ кэша\"\n          },\n          \"page\": {\n            \"type\": \"array\",\n            \"description\": \"Список строк на странице\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Statement\"\n            }\n          }\n        },\n        \"description\": \"Выходная модель, содержащая выписку\"\n      }\n    }\n  }\n}"
		}
	},
	"Error": "parse: parse spec: paths: /statement/{a}/{b}/{c}: get: operation \"getStatement\": security: parse operation security: unknown security schema \"default\""
}