{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wangjoshuah/Amazon-Ads-Sponsored-Products-API-Python-Client"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 162170,
			"content": "openapi: 3.0.2\ninfo:\n  version: \"2.0\"\n  title: Amazon Ads API - Sponsored Products\n  description: |-\n    Use the Amazon Ads API for Sponsored Products for campaign, ad group, keyword, negative keyword, and product ad management operations. For more information about Sponsored Products, see the [Sponsored Products Support Center](https://advertising.amazon.com/help?entityId=ENTITY3CWETCZD9HEG2#GWGFKPEWVWG2CLUJ). For onboarding information, see the [account setup](setting-up/account-setup) topic.\u003cbr/\u003e\u003cbr/\u003e\n  contact:\n    name: Amazon Ads API Support\n    url: https://amzn-clicks.atlassian.net/servicedesk/customer/portals\n  license:\n    name: Amazon Ads API License Agreement\n    url: https://advertising.amazon.com/API/docs/license-agreement\nservers:\n  - url: \"https://advertising-api-test.amazon.com\"\n  - url: \"https://advertising-api.amazon.com\"\n  - url: \"https://advertising-api-eu.amazon.com\"\n  - url: \"https://advertising-api-fe.amazon.com\"\ntags:\n  - name: Campaigns\n  - name: Ad groups\n  - name: Bid recommendations\n  - name: Keywords\n  - name: Negative keywords\n  - name: Campaign negative keywords\n  - name: Suggested keywords\n  - name: Product ads\n  - name: Product targeting\n  - name: Negative product targeting\n  - name: Reports\n  - name: Snapshots\nsecurity:\n  - bearer: []\npaths:\n  /v2/sp/campaigns:\n    post:\n      tags:\n        - Campaigns\n      operationId: createCampaigns\n      summary: Creates one or more campaigns.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of campaigns.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 0\n              maxItems: 100\n              items:\n                $ref: '#/components/schemas/CreateCampaign'\n      responses:\n        207:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CampaignResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    put:\n      tags:\n        - Campaigns\n      operationId: updateCampaigns\n      summary: Updates one or more campaigns.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of campaigns with updated values.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 0\n              maxItems: 100\n              items:\n                $ref: '#/components/schemas/UpdateCampaign'\n      responses:\n        207:\n          description: Multi-status. An array of campaign response objects reflecting the same order as the request.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CampaignResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    get:\n      tags:\n        - Campaigns\n      operationId: listCampaigns\n      summary: Gets an array of campaigns.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/name'\n        - $ref: '#/components/parameters/portfolioIdFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Campaign'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/campaigns/{campaignId}:\n    get:\n      tags:\n        - Campaigns\n      operationId: getCampaign\n      summary: Gets a campaign specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: campaignId\n          in: path\n          description: The identifier of an existing campaign.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Campaign'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags:\n        - Campaigns\n      operationId: archiveCampaign\n      summary: Archives a campaign.\n      description: Sets the campaign status to `archived`. Archived entities cannot be made active again. See [developer notes](https://advertising.amazon.com/API/docs/en-us/get-started/developer-notes#Archiving) for more information.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: campaignId\n          in: path\n          description: The identifier of an existing campaign.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CampaignResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/campaigns/extended:\n    get:\n      tags:\n        - Campaigns\n      operationId: listCampaignsEx\n      summary: Gets an array of campaigns with extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/name'\n        - $ref: '#/components/parameters/portfolioIdFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CampaignEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/campaigns/extended/{campaignId}:\n    get:\n      tags:\n        - Campaigns\n      operationId: getCampaignEx\n      summary: Gets a campaign with extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: campaignId\n          in: path\n          description: The identifier of an existing campaign.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CampaignEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/adGroups:\n    post:\n      tags:\n        - Ad groups\n      operationId: createAdGroups\n      summary: Creates one or more ad groups.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of ad groups.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 0\n              maxItems: 100\n              items:\n                $ref: '#/components/schemas/CreateAdGroup'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdGroupResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    put:\n      tags:\n        - Ad groups\n      operationId: updateAdGroups\n      summary: Updates one or more ad groups.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of ad groups that have updated field values.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 0\n              maxItems: 100\n              items:\n                $ref: '#/components/schemas/UpdateAdGroup'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdGroupResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    get:\n      tags:\n        - Ad groups\n      operationId: getAdGroups\n      summary: Gets one or more ad groups.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/campaignType'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/name'\n        - $ref: '#/components/parameters/campaignIdFilter'\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdGroup'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/adGroups/{adGroupId}:\n    get:\n      tags:\n        - Ad groups\n      operationId: getAdGroup\n      summary: Gets an ad group specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: adGroupId\n          in: path\n          description: The identifier of an existing ad group.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdGroup'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags:\n        - Ad groups\n      operationId: archiveAdGroup\n      summary: Archives an ad group.\n      description: Sets the ad group status to `archived`. Archived entities cannot be made active again. See developer notes for more information.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: adGroupId\n          in: path\n          description: The identifier of an existing ad group.\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdGroupResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/adGroups/extended:\n    get:\n      tags:\n        - Ad groups\n      operationId: getAdGroupsEx\n      summary: Gets ad groups that have extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/campaignType'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/name'\n        - $ref: '#/components/parameters/campaignIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdGroupEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/adGroups/extended/{adGroupId}:\n    get:\n      tags:\n        - Ad groups\n      operationId: getAdGroupEx\n      summary: Gets an ad group that has extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: adGroupId\n          in: path\n          description: The identifier of an existing ad group.\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdGroupEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/adGroups/{adGroupId}/bidRecommendations:\n    get:\n      tags:\n        - Bid recommendations\n      operationId: getAdGroupBidRecommendations\n      summary: Gets a bid recommendation for an ad group.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: adGroupId\n          in: path\n          description: The identifier of an existing ad group.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdGroupBidRecommendationsResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          description: Either the specified ad group identifier was not found, or the specified ad group was found but no associated bid was found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v2/sp/keywords/{keywordId}/bidRecommendations:\n    get:\n      tags:\n        - Bid recommendations\n      operationId: getKeywordBidRecommendations\n      summary: Gets a bid recommendation for a keyword.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing keyword.\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeywordBidRecommendationsResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n  /v2/sp/keywords/bidRecommendations:\n    post:\n      tags:\n        - Bid recommendations\n      operationId: createKeywordBidRecommendations\n      summary: Gets bid recommendations for keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of keyword bid recommendation objects.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeywordBidRecommendationsData'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BidRecommendationsResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/keywords/{keywordId}:\n    get:\n      tags:\n        - Keywords\n      operationId: getKeyword\n      summary: Gets a keyword specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing keyword.\n          required: true\n          schema:\n            type: number\n        - name: locale\n          in: query\n          description: The locale preference of the advertiser.\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Keyword'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags:\n        - Keywords\n      operationId: archiveKeyword\n      summary: Archives a keyword.\n      description: Set the status of the specified keyword to `archived`. Note that once the status for a keyword is set to `archived` it cannot be changed.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing keyword.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/keywords/extended/{keywordId}:\n    get:\n      tags:\n        - Keywords\n      operationId: getKeywordEx\n      summary: Gets a keyword with extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing keyword.\n          required: true\n          schema:\n            type: number\n        - name: locale\n          in: query\n          description: The locale preference of the advertiser.\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeywordEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/keywords/extended:\n    get:\n      tags:\n        - Keywords\n      operationId: listKeywordsEx\n      summary: Gets a list of keywords that have extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/matchTypeFilter'\n        - $ref: '#/components/parameters/keywordText'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n        - $ref: '#/components/parameters/adGroupIdFilter'\n        - $ref: '#/components/parameters/keywordIdFilter'\n        - $ref: '#/components/parameters/locale'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/KeywordEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/keywords:\n    get:\n      tags:\n        - Keywords\n      operationId: listKeywords\n      description: Gets a list of keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/matchTypeFilter'\n        - $ref: '#/components/parameters/keywordText'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n        - $ref: '#/components/parameters/adGroupIdFilter'\n        - $ref: '#/components/parameters/keywordIdFilter'\n        - $ref: '#/components/parameters/locale'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Keyword'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    post:\n      tags:\n        - Keywords\n      operationId: createKeywords\n      summary: Creates one or more keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of keyword objects.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 1000\n              items:\n                $ref: '#/components/schemas/CreateKeyword'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/KeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    put:\n      tags:\n        - Keywords\n      operationId: updateKeywords\n      summary: Updates one or more keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of update keyword objects.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 1000\n              items:\n                $ref: '#/components/schemas/UpdateKeyword'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/KeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/negativeKeywords/{keywordId}:\n    get:\n      tags:\n        - Negative keywords\n      operationId: getNegativeKeyword\n      summary: Gets a negative keyword specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing negative keyword.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NegativeKeyword'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags:\n        - Negative keywords\n      operationId: archiveNegativeKeyword\n      summary: Archives a negative keyword.\n      description: Set the status of the specified negative keyword to `archived`. Note that once the status for a keyword is set to `archived` it cannot be changed.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing negative keyword.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NegativeKeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/negativeKeywords/extended/{keywordId}:\n    get:\n      tags:\n        - Negative keywords\n      operationId: getNegativeKeywordEx\n      summary: Gets a negative keyword that has extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing negative keyword.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NegativeKeywordEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/negativeKeywords/extended:\n    get:\n      tags:\n        - Negative keywords\n      operationId: listNegativeKeywordsEx\n      summary: Gets a list of negative keywords that have extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/negativeMatchTypeFilter'\n        - $ref: '#/components/parameters/negativeKeywordText'\n        - $ref: '#/components/parameters/negativeStateFilter'\n        - $ref: '#/components/parameters/negativeCampaignIdFilter'\n        - $ref: '#/components/parameters/negativeAdGroupIdFilter'\n        - $ref: '#/components/parameters/negativeKeywordIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NegativeKeywordEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/negativeKeywords:\n    get:\n      tags:\n        - Negative keywords\n      operationId: listNegativeKeywords\n      summary: Gets a list of negative keyword objects.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/negativeMatchTypeFilter'\n        - $ref: '#/components/parameters/negativeKeywordText'\n        - $ref: '#/components/parameters/negativeStateFilter'\n        - $ref: '#/components/parameters/negativeCampaignIdFilter'\n        - $ref: '#/components/parameters/negativeAdGroupIdFilter'\n        - $ref: '#/components/parameters/negativeKeywordIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NegativeKeyword'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    post:\n      tags:\n        - Negative keywords\n      operationId: createNegativeKeywords\n      summary: Creates one or more negative keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of negative keyword objects.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 1000\n              items:\n                $ref: '#/components/schemas/CreateNegativeKeyword'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NegativeKeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    put:\n      tags:\n        - Negative keywords\n      operationId: updateNegativeKeywords\n      summary: Updates one or more negative keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array negative keywords with updated values.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 1000\n              items:\n                $ref: '#/components/schemas/UpdateNegativeKeyword'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NegativeKeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/campaignNegativeKeywords/{keywordId}:\n    get:\n      tags:\n        - Campaign negative keywords\n      operationId: getCampaignNegativeKeyword\n      summary: Gets a campaign negative keyword specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing campaign negative keyword.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CampaignNegativeKeyword'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags:\n        - Campaign negative keywords\n      operationId: archiveCampaignNegativeKeyword\n      summary: Archives a campaign negative keyword.\n      description: Set the status of the specified campaign negative keyword to `archived`. Note that once the status for a keyword is set to `archived` it cannot be changed.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing campaign negative keyword.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CampaignNegativeKeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/campaignNegativeKeywords/extended/{keywordId}:\n    get:\n      tags:\n        - Campaign negative keywords\n      operationId: getCampaignNegativeKeywordEx\n      summary: Gets a campaign negative keyword that has extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keywordId\n          in: path\n          description: The identifier of an existing campaign negative keyword.\n          required: true\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CampaignNegativeKeywordEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/campaignNegativeKeywords/extended:\n    get:\n      tags:\n        - Campaign negative keywords\n      operationId: listCampaignNegativeKeywordsEx\n      summary: Gets a list of campaign negative keywords that have extended data fields.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/negativeMatchTypeFilter'\n        - $ref: '#/components/parameters/negativeKeywordText'\n        - $ref: '#/components/parameters/negativeCampaignIdFilter'\n        - $ref: '#/components/parameters/negativeKeywordIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CampaignNegativeKeywordEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/campaignNegativeKeywords:\n    get:\n      tags:\n        - Campaign negative keywords\n      operationId: listCampaignNegativeKeywords\n      summary: Gets a list of campaign negative keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/negativeMatchTypeFilter'\n        - $ref: '#/components/parameters/negativeKeywordText'\n        - $ref: '#/components/parameters/negativeCampaignIdFilter'\n        - $ref: '#/components/parameters/negativeKeywordIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CampaignNegativeKeyword'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    post:\n      tags:\n        - Campaign negative keywords\n      operationId: createCampaignNegativeKeywords\n      summary: Creates one or more campaign negative keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of campaign negative keyword objects.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 1000\n              items:\n                $ref: '#/components/schemas/CreateCampaignNegativeKeyword'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CampaignNegativeKeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    put:\n      tags:\n        - Campaign negative keywords\n      operationId: updateCampaignNegativeKeywords\n      summary: Updates one or more campaign negative keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: An array of campaign negative keywords with updated values.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 1000\n              items:\n                $ref: '#/components/schemas/UpdateCampaignNegativeKeyword'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CampaignNegativeKeywordResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/adGroups/{adGroupId}/suggested/keywords:\n    get:\n      tags:\n        - Suggested keywords\n      operationId: getAdGroupSuggestedKeywords\n      summary: Gets suggested keywords for the specified ad group.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/adGroupId'\n        - $ref: '#/components/parameters/maxNumSuggestions'\n        - $ref: '#/components/parameters/adStateFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdGroupSuggestedKeywordsResponse'\n        400:\n          $ref: '#/components/responses/ResourceNotFound'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/adGroups/{adGroupId}/suggested/keywords/extended:\n    get:\n      tags:\n        - Suggested keywords\n      operationId: getAdGroupSuggestedKeywordsEx\n      summary: Gets suggested keywords with extended data for the specified ad group.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/adGroupId'\n        - $ref: '#/components/parameters/maxNumSuggestions'\n        - name: suggestBids\n          in: query\n          description: Set to `yes` to include a suggest bid for the suggested keyword in the response. Otherwise, set to `no`.\n          schema:\n            type: string\n            default: \"no\"\n            enum:\n              - \"yes\"\n              - \"no\"\n        - $ref: '#/components/parameters/adStateFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdGroupSuggestedKeywordsResponseEx'\n        400:\n          $ref: '#/components/responses/InvalidQueryParam'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/asins/{asinValue}/suggested/keywords:\n    get:\n      tags:\n        - Suggested keywords\n      operationId: getAsinSuggestedKeywords\n      summary: Gets suggested keywords for the specified ASIN.\n      description: Suggested keywords are returned in an array ordered by descending effectiveness.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: asinValue\n          in: path\n          required: true\n          description: An ASIN.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/maxNumSuggestions'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAsinSuggestedKeywordsResponse'\n        400:\n          $ref: '#/components/responses/InvalidQueryParam'\n  /v2/sp/asins/suggested/keywords:\n    post:\n      tags:\n        - Suggested keywords\n      operationId: bulkGetAsinSuggestedKeywords\n      summary: Gets suggested keyword for a specified list of ASINs.\n      description: Suggested keywords are returned in an array ordered by descending effectiveness.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  asins:\n                    description: A list of ASINs.\n                    type: array\n                    items:\n                      type: string\n                  maxNumSuggestions:\n                    description: The maximum number of suggested keywords in the response.\n                    type: integer\n                    minItems: 1\n                    maxItems: 1000\n                    default: 100\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkGetAsinSuggestedKeywordsResponse'\n        400:\n          $ref: '#/components/responses/InvalidQueryParam'\n  /v2/sp/productAds/{adId}:\n    get:\n      tags:\n        - Product ads\n      operationId: getProductAd\n      summary: Gets a product ad specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/adId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductAd'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags:\n        - Product ads\n      operationId: archiveProductAd\n      summary: Archives a product ad.\n      description: Sets the state of a specified product ad to `archived`. Note that once the state is set to `archived` it cannot be changed.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/adId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductAdResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/productAds:\n    get:\n      tags:\n        - Product ads\n      operationId: listProductAds\n      summary: Gets a list of product ads filtered by specified criteria.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n        - $ref: '#/components/parameters/adGroupIdFilter'\n        - $ref: '#/components/parameters/adIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductAd'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    post:\n      tags:\n        - Product ads\n      operationId: CreateProductAds\n      summary: Creates one or more product ads.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: A list of product ads for creation. Note that the `SKU` field is used by sellers and the `ASIN` field is used by vendors.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 1000\n              items:\n                $ref: '#/components/schemas/CreateProductAd'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The list of product ads in the same order as the request.\n                items:\n                  $ref: '#/components/schemas/ProductAdResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    put:\n      tags:\n        - Product ads\n      operationId: updateProductAds\n      summary: Updates one or more product ads specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: A list of product ad objects with updated values for the `state` field.\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 1000\n              items:\n                $ref: '#/components/schemas/UpdateProductAd'\n      responses:\n        207:\n          description: Multi-status. A list of product ad objects with updated fields, in the same order as the list in the request body.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductAdResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/productAds/extended/{adId}:\n    get:\n      tags:\n        - Product ads\n      operationId: getProductAdEx\n      summary: Gets extended data for a product ad specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/adId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductAdEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/productAds/extended:\n    get:\n      tags:\n        - Product ads\n      operationId: listProductAdsEx\n      summary: Gets extended data for a list of product ads filtered by specified criteria.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n        - $ref: '#/components/parameters/adGroupIdFilter'\n        - $ref: '#/components/parameters/adIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductAdEx'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/targets/bidRecommendations:\n    post:\n      tags:\n        - Bid recommendations\n      operationId: getBidRecommendations\n      summary: Gets a list of bid recommendations for keyword, product, or auto targeting expressions.\n      requestBody:\n        description: An ad group identifier and list of associated targeting expressions for which to generate bid recommendations. Note that targeting expressions are required to be of the same type. That is, all targeting expressions in the list must be one of **keyword**, **product**, or **auto** target types.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                adGroupId:\n                  description: The ad group identifier.\n                  type: number\n                expressions:\n                  description: The list of targeting expressions.\n                  type: array\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TargetingExpressionPredicate'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  adGroupId:\n                    description: The ad group identifier.\n                    type: number\n                  recommendations:\n                    description: The list of recommended bids with associated targeting expressions.\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        suggestedBid:\n                          $ref: '#/components/schemas/SuggestedBid'\n                        expression:\n                          $ref: '#/components/schemas/TargetingExpressionPredicate'\n                        code:\n                          description: The response code.\n                          type: string\n                          enum:\n                            - SUCCESS\n                            - INVALID_ARGUMENT\n                            - NOT_FOUND\n                            - INTERNAL_ERROR\n                            - SERVER_IS_BUSY\n                            - UNAUTHORIZED\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n  /v2/sp/targets:\n    post:\n      tags:\n        - Product targeting\n      operationId: createTargetingClauses\n      summary: Creates one or more targeting expressions.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: A list of targeting clauses.\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/CreateTargetingClause'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TargetingClauseResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    put:\n      tags:\n        - Product targeting\n      operationId: updateTargetingClause\n      summary: Updates one or more targeting clauses.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: A list of targeting clauses with updated values.\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdateTargetingClause'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TargetingClauseResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n    get:\n      tags:\n        - Product targeting\n      operationId: listTargetingClauses\n      summary: Gets a list of targeting clauses filtered by specified criteria.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n        - $ref: '#/components/parameters/adGroupIdFilter'\n        - $ref: '#/components/parameters/targetIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TargetingClause'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/targets/{targetId}:\n    get:\n      tags:\n        - Product targeting\n      operationId: getTargetingClause\n      summary: Get a targeting clause specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/targetId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TargetingClause'\n        404:\n          $ref: '#/components/responses/NotFound'\n    delete:\n      tags:\n        - Product targeting\n      operationId: archiveTargetingClause\n      summary: Archives a targeting clause.\n      description: Set the `status` of a targeting clause to `archived`. Note that once a targeting clause `status` is set to `archived`, it cannot be changed.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/targetId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TargetingClauseResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/targets/extended:\n    get:\n      tags:\n        - Product targeting\n      operationId: listTargetingClausesEx\n      summary: Gets a list of targeting clauses filtered by specified criteria.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/stateFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n        - $ref: '#/components/parameters/adGroupIdFilter'\n        - $ref: '#/components/parameters/targetIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TargetingClauseEx'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/targets/extended/{targetId}:\n    get:\n      tags:\n        - Product targeting\n      operationId: getTargetingClauseEx\n      summary: Get a targeting clause specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/targetId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TargetingClauseEx'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/targets/productRecommendations:\n    post:\n      tags:\n        - Product targeting\n      operationId: createTargetRecommendations\n      summary: Gets a list of recommended products for targeting.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: A list of ASINs.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pageSize:\n                  description: The number or recommendations returned in a single page.\n                  type: number\n                pageNumber:\n                  description: The page number in the result set to return.\n                  type: number\n                asins:\n                  description: A list of ASINs.\n                  type: array\n                  items:\n                    type: string\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductRecommendationsResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/targets/brands:\n    get:\n      tags:\n        - Product targeting\n      operationId: getBrandRecommendations\n      summary: Get recommended brands for Sponsored Products.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: keyword\n          in: query\n          schema:\n            type: string\n          description: A keyword for which to get recommended brands.\n        - name: categoryId\n          in: query\n          schema:\n            type: number\n          description: Gets the top 50 brands for the specified category identifier.\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BrandResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/negativeTargets:\n    post:\n      tags:\n        - Negative product targeting\n      operationId: createNegativeTargetingClauses\n      summary: Creates one ore more negative targeting expressions.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: A list of negative targeting clauses.\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/CreateNegativeTargetingClause'\n      responses:\n        207:\n          description: Multi-status.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NegativeTargetingClauseResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    put:\n      tags:\n        - Negative product targeting\n      operationId: updateNegativeTargetingClause\n      summary: Updates one or more negative targeting clauses.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n      requestBody:\n        description: A list of negative targeting clauses with updated values.\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/UpdateNegativeTargetingClause'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NegativeTargetingClauseResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    get:\n      tags:\n        - Negative product targeting\n      operationId: listNegativeTargetingClauses\n      summary: Gets a list of negative targeting clauses filtered by specified criteria.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/negativeStateFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n        - $ref: '#/components/parameters/adGroupIdFilter'\n        - $ref: '#/components/parameters/targetIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NegativeTargetingClause'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/negativeTargets/{targetId}:\n    get:\n      tags:\n        - Negative product targeting\n      operationId: getNegativeTargetingClause\n      summary: Get a negative targeting clause specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/targetId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NegativeTargetingClause'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n    delete:\n      tags:\n        - Negative product targeting\n      operationId: archiveNegativeTargetingClause\n      summary: Archives a negative targeting clause.\n      description: Set the `status` of a negative targeting clause to `archived`. Note that once a negative targeting clause `status` is set to `archived`, it cannot be changed.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/targetId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NegativeTargetingClauseResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/negativeTargets/extended:\n    get:\n      tags:\n        - Negative product targeting\n      operationId: listNegativeTargetingClausesEx\n      summary: Gets a list of negative targeting clauses filtered by specified criteria.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/negativeStateFilter'\n        - $ref: '#/components/parameters/campaignIdFilter'\n        - $ref: '#/components/parameters/adGroupIdFilter'\n        - $ref: '#/components/parameters/targetIdFilter'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NegativeTargetingClauseEx'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/negativeTargets/extended/{targetId}:\n    get:\n      tags:\n        - Negative product targeting\n      operationId: getNegativeTargetingClauseEx\n      summary: Get a negative targeting clause specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - $ref: '#/components/parameters/targetId'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NegativeTargetingClauseEx'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/sp/{recordType}/report:\n    post:\n      tags:\n        - Reports\n      operationId: requestReport\n      summary: Requests a Sponsored Products report.\n      description: |-\n        Request the creation of a performance report for all entities of a single type which have performance data to report. Record types can be one of `campaigns`, `adGroups`, `keywords`, `productAds`, `asins`, and `targets`. **Note** that for `asin` reports, the report currently can **not** include metrics associated with both keywords and targets. If the `targetingId` value is set in the request, the report filters on targets and does not return sales associated with keywords. If the `targetingId` value is **not** set in the request, the report filters on keywords and does not return sales associated with targets. Therefore, the default behavior filters the report on keywords. Also note that if both `keywordId` **and** `targetingId` values are passed, the report filters on targets only and does **not** return keywords.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: recordType\n          in: path\n          required: true\n          description: The type of entity for which the report should be generated.\n          schema:\n            type: string\n            enum:\n              - campaigns\n              - adGroups\n              - keywords\n              - productAds\n              - asins\n              - targets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Report'\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reportId:\n                    type: string\n                    description: The unique ID for your requested report.\n                  recordType:\n                    type: string\n                    description: The record type of the report. It can be `campaign`, `adGroup`, `keyword`, `productAd`, or `targets`.\n                  status:\n                    type: string\n                    description: The status of the report. Status is one of `IN_PROGRESS`, `SUCCESS`, or `FAILURE`.\n                  statusDetails:\n                    type: string\n                    description: Description of the status.\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        406:\n          $ref: '#/components/responses/NotAcceptable'\n        422:\n          $ref: '#/components/responses/UnprocessableEntity'\n  /v2/reports/{reportId}:\n    get:\n      tags:\n        - Reports\n      operationId: getReport\n      summary: Gets a previously requested report specified by identifier.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: reportId\n          in: path\n          required: true\n          description: The report identifier.\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reportId:\n                    type: string\n                    description: The unique ID for your requested report.\n                  status:\n                    type: string\n                    description: The status of the report. Status is one of `IN_PROGRESS`, `SUCCESS`, or `FAILURE`.\n                  statusDetails:\n                    type: string\n                    description: Description of the status.\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n  /v2/reports/{reportId}/download:\n    get:\n      tags:\n      - Reports\n      summary: Downloads a previously requested report identified by report ID.\n      description: |-\n                    Gets a `307 Temporary Redirect` response that includes a `location` header with the value set to an AWS S3 path where the report is located. The path expires after 30 seconds. If the path expires before the report is downloaded, a new report request must be created.\n\n                    The report file contains one row per entity for which performance data is present. These records are represented as JSON containing the ID attribute corresponding to the `recordType`, the segment (if specified), and each of the metrics in the request.\n\n                    **Note**: The report files in S3 are gzipped.\n\n                    *Example report download*\n\n                    ```\n                    $ curl -o /tmp/report.json.gz \"https://sandboxreports.s3.amazonaws.com/amzn1.clicksAPI.v1.m1.xxxxxxx.xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxx?AWSAccessKeyId=XXXXXXXXXXXXXXX\u0026amp;Expires=1476479900\u0026amp;Signature=xxxxxxxxxxxxxxxxxxxx\"\n                    ```\n      operationId: downloadReport\n      parameters:\n      - $ref: '#/components/parameters/clientHeader'\n      - $ref: '#/components/parameters/profileHeader'\n      - name: reportId\n        in: path\n        description: The identifier of the requested report.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        307:\n          description: Successful operation.\n          headers:\n            Location:\n              schema:\n                type: string\n              description: Redirect URI with S3 file location containing report data\n        400:\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not found - requested resource does not exist or is not visible for the authenticated user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        429:\n          description: Too many requests - request was rate-limited. Retry later.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal server error - something went wrong on the server. Retry later and report an error if unresolved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v2/sp/{recordType}/snapshot:\n    post:\n      tags:\n        - Snapshots\n      operationId: requestSnapshot\n      summary: Request a file-based snapshot of all entities of the specified type.\n      description: Request a file-based snapshot of all entities of the specified type in the account satisfying the filtering criteria.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: recordType\n          in: path\n          required: true\n          description: The type of entity for which the snapshot is generated.\n          schema:\n            type: string\n            enum:\n              - \"campaigns\"\n              - \"adGroups\"\n              - \"keywords\"\n              - \"negativeKeywords\"\n              - \"campaignNegativeKeywords\"\n              - \"productAds\"\n              - \"targets\"\n              - \"negativeTargets\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SnapshotRequest'\n      responses:\n        202:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotResponse'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n  /v2/sp/snapshots/{snapshotId}:\n    get:\n      tags:\n         - Snapshots\n      operationId: getSnapshotStatus\n      summary: Gets the status of a requested snapshot.\n      parameters:\n        - $ref: '#/components/parameters/clientHeader'\n        - $ref: '#/components/parameters/profileHeader'\n        - name: snapshotId\n          in: path\n          required: true\n          description: The snapshot identifier.\n          schema:\n            type: number\n      responses:\n        200:\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotResponse'\n        307:\n          description: Temporary redirect.\n          headers:\n            Location:\n              schema:\n                type: string\n                description: The download location of the requested snapshot.\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\ncomponents:\n  securitySchemes:\n    bearer:\n      type: http\n      scheme: bearer\n  parameters:\n    adId:\n      name: adId\n      in: path\n      required: true\n      description: A product ad identifier.\n      schema:\n        type: number\n    adIdFilter:\n      name: adIdFilter\n      in: query\n      required: false\n      description: Restricts results to product ads associated with the product ad identifiers specified in the comma-delimited list.\n      schema:\n        type: string\n    adGroupId:\n      name: adGroupId\n      in: path\n      description: The identifier of a valid ad group.\n      required: true\n      schema:\n        type: number\n    adGroupIdFilter:\n      name: adGroupIdFilter\n      in: query\n      description: Restricts results to keywords associated with ad groups specified by identifier in the comma-delimited list.\n      required: false\n      schema:\n        type: string\n    adStateFilter:\n      name: adStateFilter\n      in: query\n      description: Filters results to ad groups with state matching the comma-delimited list.\n      schema:\n        type: string\n        enum:\n          - \"enabled\"\n          - \"paused\"\n          - \"archived\"\n          - \"enabled, paused\"\n          - \"enabled, archived\"\n          - \"paused, archived\"\n          - \"enabled, paused, archived\"\n    campaignIdFilter:\n      name: campaignIdFilter\n      in: query\n      description: A comma-delimited list of campaign identifiers.\n      required: false\n      schema:\n        type: string\n    campaignType:\n      name: campaignType\n      in: query\n      description: Restricts results to ad groups within campaign types specified in comma-separated list.\n      required: false\n      schema:\n        type: string\n    clientHeader:\n      name: Amazon-Advertising-API-ClientId\n      in: header\n      description: The identifier of a client associated with a \"Login with Amazon\" developer account.\n      required: true\n      schema:\n        type: string\n    count:\n      name: count\n      in: query\n      description: Number of records to include in the paged response. Defaults to max page size.\n      required: false\n      schema:\n        type: number\n    keywordIdFilter:\n      name: keywordIdFilter\n      in: query\n      description: Restricts results to keywords associated with campaigns specified by identifier in the comma-delimited list.\n      required: false\n      schema:\n        type: string\n    locale:\n      name: locale\n      in: query\n      description: Restricts results to keywords associated with locale.\n      required: false\n      schema:\n        type: string\n    keywordText:\n      name: keywordText\n      in: query\n      description: Restricts results to keywords that match the specified text exactly.\n      schema:\n        type: string\n    matchTypeFilter:\n      name: matchTypeFilter\n      in: query\n      description:  Restricts results to keywords with match types within the specified comma-separated list. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Ads support center.\n      schema:\n        type: string\n        enum:\n          - broad\n          - phrase\n          - exact\n    maxNumSuggestions:\n      name: maxNumSuggestions\n      in: query\n      description: The maxiumum number of suggested keywords for the response.\n      schema:\n        type: integer\n        default: 100\n        minimum: 1\n        maximum: 1000\n    name:\n      name: name\n      in: query\n      description: Restricts results to campaigns with the specified name.\n      required: false\n      schema:\n        type: string\n    negativeAdGroupIdFilter:\n      name: adGroupIdFilter\n      in: query\n      description: Restricts results to negative keywords associated with ad groups specified by identifier in the comma-delimited list.\n      required: false\n      schema:\n        type: string\n    negativeCampaignIdFilter:\n      name: campaignIdFilter\n      in: query\n      description: Restricts results to negative keywords associated with campaigns specified by identifier in the comma-delimited list.\n      required: false\n      schema:\n        type: string\n    negativeKeywordText:\n      name: keywordText\n      in: query\n      description: Restricts results to negative keywords that match the specified text.\n      schema:\n        type: string\n    negativeMatchTypeFilter:\n      name: matchTypeFilter\n      in: query\n      description:  Restricts results to negative keywords with match types within the specified comma-separated list. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Ads support center.\n      schema:\n        type: string\n        enum:\n          - negativePhrase\n          - negativeExact\n    negativeStateFilter:\n      name: stateFilter\n      in: query\n      description: Restricts results to negative resources with state within the specified comma-separated list. Default includes all.\n      required: false\n      schema:\n        type: string\n        enum:\n          - enabled\n          - archived\n    negativeKeywordIdFilter:\n      name: keywordIdFilter\n      in: query\n      description: Restricts results to negative keywords associated with campaigns specified by identifier in the comma-delimited list.\n      required: false\n      schema:\n        type: string\n    portfolioIdFilter:\n      name: portfolioIdFilter\n      in: query\n      description: A comma-delimited list of portfolio identifiers.\n      required: false\n      schema:\n        type: string\n    profileHeader:\n      name: Amazon-Advertising-API-Scope\n      in: header\n      description: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.\n      required: true\n      schema:\n        type: string\n    startIndex:\n      name: startIndex\n      in: query\n      description: 0-indexed record offset for the result set.\n      schema:\n        type: number\n        default: 0\n    stateFilter:\n      name: stateFilter\n      in: query\n      description: Restricts results to resources with state within the specified comma-separated list.\n      required: false\n      schema:\n        type: string\n        enum:\n          - \"enabled\"\n          - \"paused\"\n          - \"archived\"\n          - \"enabled, paused\"\n          - \"enabled, archived\"\n          - \"paused, archived\"\n          - \"enabled, paused, archived\"\n    targetId:\n      name: targetId\n      in: path\n      required: true\n      description: The target identifier.\n      schema:\n        type: number\n    targetIdFilter:\n      name: targetIdFilter\n      in: query\n      description: A comma-delimited list of target identifiers.\n      schema:\n        type: string\n  responses:\n    BadRequest:\n      description: Bad request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotAcceptable:\n      description: One or more values specified for a parameter was not within the specified acceptable range.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    UnprocessableEntity:\n      description: An invalid parameter was specified.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: The requested resource was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InvalidQueryParam:\n      description: One or more query parameters contained an invalid value.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    ResourceNotFound:\n      description: The requested resource was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    AdGroup:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group.\n          type: number\n        name:\n          description: The name of the ad group.\n          type: string\n        campaignId:\n          description: The identifier of the campaign that the ad group is associated with.\n          type: number\n        defaultBid:\n          description: The bid value used when no bid is specified for keywords in the ad group.\n          type: number\n          format: float\n        state:\n          $ref: '#/components/schemas/State'\n    AdGroupEx:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group.\n          type: number\n        name:\n          description: The name of the ad group.\n          type: string\n        campaignId:\n          description: The identifier of the campaign that the ad group is associated with.\n          type: number\n        defaultBid:\n          description: The bid value used when no bid is specified for keywords in the ad group.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        creationDate:\n          description: The creation date of the ad group in epoch time.\n          type: number\n        lastUpdatedDate:\n          description: The date that any value associated with the ad group was last changed, in epoch time.\n          type: number\n        servingStatus:\n          description: The computed status. See developer notes for more information.\n          type: string\n          enum:\n            - AD_GROUP_ARCHIVED\n            - AD_GROUP_PAUSED\n            - AD_GROUP_STATUS_ENABLED\n            - AD_POLICING_SUSPENDED\n            - AD_GROUP_INCOMPLETE\n            - CAMPAIGN_OUT_OF_BUDGET\n            - CAMPAIGN_PAUSED\n            - CAMPAIGN_ARCHIVED\n            - CAMPAIGN_INCOMPLETE\n            - ACCOUNT_OUT_OF_BUDGET\n            - PENDING_START_DATE\n    AdGroupResponse:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group.\n          type: number\n        code:\n          description: An enumerated success or error code for machine use.\n          type: string\n        details:\n          description: A human-readable description of the code.\n          type: string\n        description:\n          description: A human-readable description of the code.\n          type: string\n    AdGroupBidRecommendationsResponse:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group.\n          type: number\n        suggestedBid:\n          $ref: '#/components/schemas/SuggestedBid'\n    AdGroupSuggestedKeywordsResponse:\n      properties:\n        adGroupId:\n          description: The ad group identifier.\n          type: number\n        suggestededKeywords:\n          description: An array of suggested keywords.\n          type: array\n          items:\n            type: string\n    AdGroupSuggestedKeywordsResponseEx:\n      properties:\n        adGroupId:\n          description: The ad group identifier.\n          type: number\n        campaignId:\n          description: The campaign identifier.\n          type: number\n        keywordText:\n          description: The suggested keyword.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/MatchType'\n        state:\n          description: The state of the ad for which the keyword is suggested.\n          type: string\n          enum:\n            - enabled\n            - paused\n        bid:\n          description: The suggested bid for the suggested keyword. Note that this field will not be included in the response if the `suggestBids` query parameter is set to `no` in the request.\n          type: number\n    ProductAdResponse:\n      properties:\n        adId:\n          description: The product ad identifier.\n          type: number\n        code:\n          description: The enumerated success or error code.\n          type: string\n        details:\n          description: A human-readable description of the code.\n          type: string\n        description:\n          description: A human-readable description of the code.\n          type: string\n    Bidding:\n      description: Specifies bidding controls.\n      type: object\n      properties:\n        strategy:\n          description: |-\n            The bidding strategy.\n            | Value | Strategy name | Description |\n            |----------------|---------------|-------------|\n            | `legacyForSales` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. |\n            | `autoForSales` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. |\n            | `manual` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. |\n          type: string\n          enum:\n            - legacyForSales\n            - autoForSales\n            - manual\n        adjustments:\n          type: array\n          items:\n            type: object\n            properties:\n              predicate:\n                type: string\n                description: |-\n                  You can enable controls to adjust your bid based on the placement location. Specify a location where you want to use bid controls. The percentage value set is the percentage of the original bid for which you want to have your bid adjustment increased. For example, a 50% adjustment on a $1.00 bid would increase the bid to $1.50 for the opportunity to win a specified placement.\n                  | Predicate |  Placement |\n                  |-----------|------------|\n                  | `placementTop` | Top of search (first page) |\n                  | `placementProductPage` | Product pages |\n                enum:\n                  - placementTop\n                  - placementProductPage\n              percentage:\n                  type: number\n                  format: float\n                  description: The bid adjustment percentage value.\n    BidRecommendationsResponse:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group that the recommendations are associated with.\n          type: string\n        recommendations:\n          description: An array of bid recommendation objects.\n          type: array\n          items:\n            properties:\n              code:\n                description: The resulting status code for retrieving the bid.\n                type: string\n                enum:\n                  - SUCCESS\n                  - NOT_FOUND\n              keyword:\n                description: The keyword text.\n                type: string\n              matchType:\n                $ref: '#/components/schemas/MatchType'\n              suggestedBid:\n                $ref: '#/components/schemas/SuggestedBid'\n    BidRecommendationRequest:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group that is associated with the targeting expression used to generate the bid recommendation.\n          type: number\n        expressions:\n          $ref: '#/components/schemas/TargetingExpression'\n    BidRecommendationsForTargetsResponse:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group that the recommended bid are associated with.\n          type: number\n        recommendations:\n          description: An array of recommendation objects.\n          type: array\n          items:\n            type: object\n            properties:\n              suggestedBid:\n                $ref: '#/components/schemas/SuggestedBid'\n              expressions:\n                $ref: '#/components/schemas/TargetingExpression'\n    BrandResponse:\n      properties:\n        id:\n          description: The brand identifier.\n          type: number\n        name:\n          description: The brand name.\n          type: string\n    BulkGetAsinSuggestedKeywordsResponse:\n      type: array\n      items:\n        type: object\n        properties:\n          keywordText:\n            description: The keyword text.\n            type: string\n          matchType:\n            $ref: '#/components/schemas/MatchType'\n    CreateAdGroup:\n      properties:\n        name:\n          description: A name for the ad group.\n          type: string\n        campaignId:\n          description: An existing campaign to which the ad group is associated.\n          type: number\n        defaultBid:\n          description: A bid value for use when no bid is specified for keywords in the ad group.\n          type: number\n          format: float\n          minimum: 0.02\n        state:\n          $ref: '#/components/schemas/State'\n    UpdateAdGroup:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group.\n          type: number\n        name:\n          description: The name of the ad group.\n          type: string\n        defaultBid:\n          description: The bid value used when no bid is specified for keywords in the ad group.\n          type: number\n          format: float\n        state:\n          $ref: '#/components/schemas/State'\n    CampaignTags:\n      description: A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.\n      type: object\n      additionalProperties:\n        type: string\n      example:\n        PONumber: examplePONumber\n        accountManager: exampleAccountManager\n    CreateCampaign:\n      properties:\n        portfolioId:\n          description: The identifier of an existing portfolio to which the campaign is associated.\n          type: number\n        name:\n          description: A name for the campaign.\n          type: string\n        tags:\n          $ref: \"#/components/schemas/CampaignTags\"\n        campaignType:\n          description: The advertising product managed by this campaign.\n          type: string\n          required:\n            - sponsoredProducts\n          enum:\n            - sponsoredProducts\n        targetingType:\n          description: The type of targeting for the campaign.\n          type: string\n          enum:\n            - manual\n            - auto\n        state:\n          $ref: '#/components/schemas/State'\n        dailyBudget:\n          description: A daily budget for the campaign.\n          type: number\n          format: float\n        startDate:\n          description: A starting date for the campaign to go live. The format of the date is YYYYMMDD.\n          type: string\n        endDate:\n          description: An ending date for the campaign to stop running. The format of the date is YYYYMMDD.\n          type: string\n          nullable: true\n        premiumBidAdjustment:\n          description: If set to true, Amazon increases the default bid for ads that are eligible to appear in this placement. See developer notes for more information.\n          type: boolean\n        bidding:\n          $ref: '#/components/schemas/Bidding'\n    Campaign:\n      properties:\n        portfolioId:\n          description: The identifier of an existing portfolio to which the campaign is associated.\n          type: number\n        campaignId:\n          description: The identifier of the campaign.\n          type: number\n        name:\n          description: The name of the campaign.\n          type: string\n        tags:\n          $ref: '#/components/schemas/CampaignTags'\n        campaignType:\n          description: The advertising product managed by this campaign.\n          type: string\n          enum:\n            - sponsoredProducts\n        targetingType:\n          description: The type of targeting of the campaign.\n          type: string\n          enum:\n            - manual\n            - auto\n        state:\n          $ref: '#/components/schemas/State'\n        dailyBudget:\n          description: The daily budget of the campaign.\n          type: number\n          format: float\n          minimum: 1.00\n        startDate:\n          description: The starting date of the campaign. The format of the date is YYYYMMDD.\n          type: string\n        endDate:\n          description: The ending date of the campaign to stop running. The format of the date is YYYYMMDD.\n          type: string\n        premiumBidAdjustment:\n          description: If set to true, Amazon increases the default bid for ads that are eligible to appear in this placement. See developer notes for more information.\n          type: boolean\n        bidding:\n          $ref: '#/components/schemas/Bidding'\n    CampaignEx:\n      properties:\n        portfolioId:\n          description: The identifier of an existing portfolio to which the campaign is associated.\n          type: number\n        campaignId:\n          description: The identifier of the campaign.\n          type: number\n        tags:\n          $ref: '#/components/schemas/CampaignTags'\n        name:\n          description: The name of the campaign.\n          type: string\n        campaignType:\n          description: The advertising product managed by this campaign.\n          type: string\n          enum:\n            - sponsoredProducts\n        targetingType:\n          description: The type of targeting of the campaign.\n          type: string\n          enum:\n            - manual\n            - auto\n        state:\n          $ref: '#/components/schemas/State'\n        dailyBudget:\n          description: The daily budget of the campaign.\n          type: number\n          format: float\n          minimum: 1.00\n        startDate:\n          description: The starting date of the campaign. The format of the date is YYYYMMDD.\n          type: string\n        endDate:\n          description: The ending date of the campaign to stop running. The format of the date is YYYYMMDD.\n          type: string\n        premiumBidAdjustment:\n          description: If set to true, Amazon increases the default bid for ads that are eligible to appear in this placement. See developer notes for more information.\n          type: boolean\n        bidding:\n          $ref: '#/components/schemas/Bidding'\n        creationDate:\n          description: The creation date of the campaign, in epoch time.\n          type: number\n        lastUpdatedDate:\n          description: The date that any value associated with the campaign was last changed, in epoch time.\n          type: number\n        servingStatus:\n          description: The computed status of the campaign. See developer notes for more information.\n          type: string\n          enum:\n            - CAMPAIGN_ARCHIVED\n            - CAMPAIGN_PAUSED\n            - CAMPAIGN_STATUS_ENABLED\n            - ADVERTISER_PAYMENT_FAILED\n            - ADVERTISER_PAYMENT_FAILURE\n            - CAMPAIGN_OUT_OF_BUDGET\n            - PENDING_START_DATE\n            - CAMPAIGN_INCOMPLETE\n            - ENDED\n    CampaignNegativeKeyword:\n      properties:\n        keywordId:\n          description: The identifier of the campaign negative keyword.\n          type: number\n        campaignId:\n          description: The identifer of the campaign to which the campaign negative keyword is associated.\n          type: number\n        state:\n          description: The campaign negative keyword state.\n          type: string\n          enum:\n            - enabled\n        keywordText:\n          description: The text of the expression to match against a search query.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/NegativeMatchType'\n    CreateCampaignNegativeKeyword:\n      properties:\n        campaignId:\n          description: The identifer of the campaign to which the campaign negative keyword is associated.\n          type: number\n        state:\n          description: The campaign negative keyword state.\n          type: string\n          enum:\n            - enabled\n        keywordText:\n          description: The text of the expression to match against a search query.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/NegativeMatchType'\n    UpdateCampaignNegativeKeyword:\n      properties:\n        keywordId:\n          description: The identifier of the campaign negative keyword.\n          type: number\n        state:\n          description: The campaign negative keyword state.\n          type: string\n          enum:\n            - deleted\n    CampaignNegativeKeywordEx:\n      properties:\n        keywordId:\n          description: The identifier of the campaign negative keyword.\n          type: number\n        campaignId:\n          description: The identifer of the campaign to which the campaign negative keyword is associated.\n          type: number\n        state:\n          description: The campaign negative keyword state.\n          type: string\n          enum:\n            - enabled\n        keywordText:\n          description: The text of the expression to match against a search query.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/NegativeMatchType'\n        creationDate:\n          description: Creation date in epoch time.\n          type: number\n        lastUpdatedDate:\n          description:  Date of last update in epoch time.\n          type: number\n        servingStatus:\n          description: The serving status of the campaign negative keyword. See the **computed status** section of the [developer notes](https://advertising.amazon.com/API/docs/en-us/get-started/developer-notes) for definitions.\n          type: string\n          enum:\n            - TARGETING_CLAUSE_STATUS_LIVE\n            - PENDING_START_DATE\n    CampaignNegativeKeywordResponse:\n      properties:\n        keywordId:\n          description: The identifier of the campaign negative keyword.\n          type: number\n        code:\n          description: An enumerated success or error code for machine use.\n          type: string\n        details:\n          description: A human-readable description of the code.\n          type: string\n        description:\n          description: A human-readable description of the code.\n          type: string\n    CampaignResponse:\n      properties:\n        campaignId:\n          description: The identifier of the campaign.\n          type: number\n        code:\n          description: An enumerated success or error code for machine use.\n          type: string\n        description:\n          description: A human-readable description of the code.\n          type: string\n    CategoryResponse:\n      properties:\n        id:\n          description: The category identifier.\n          type: number\n        name:\n          description: The category name.\n          type: string\n        isTargetable:\n          description: If set to `true`, indicates this category can be targeted in a targeting expression. Otherwise, set to false.\n          type: string\n          enum:\n            - true\n            - false\n        path:\n          description: The path of this category within the category catalog.\n          type: string\n    Error:\n      properties:\n        code:\n          description: An enumerated error for machine use.\n          type: string\n          readOnly: true\n        details:\n          description: A human-readable description of the error.\n          type: string\n          readOnly: true\n    ExpressionType:\n      description: The type of expression.\n      type: string\n      enum:\n        - auto\n        - manual\n    GetAsinSuggestedKeywordsResponse:\n      properties:\n        asin:\n          description: The ASIN for which keywords are suggested.\n          type: string\n        suggestedKeywords:\n          description: The list of suggested keywords.\n          type: array\n          items:\n            type: object\n            properties:\n              keywordText:\n                description: The text of the suggested keyword.\n                type: string\n              matchType:\n                $ref: '#/components/schemas/MatchType'\n    Keyword:\n      properties:\n        keywordId:\n          description: The identifier of the keyword.\n          type: number\n        campaignId:\n          description: The identifer of the campaign to which the keyword is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this keyword is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        keywordText:\n          description: The keyword text.\n          type: string\n        nativeLanguageKeyword:\n          description: The unlocalized keyword text in the preferred locale of the advertiser.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/MatchType'\n        bid:\n          description: Bid associated with this keyword. Applicable to biddable match types only.\n          type: number\n          format: float\n          minimum: 0.02\n    CreateKeyword:\n      properties:\n        campaignId:\n          description: The identifer of the campaign to which the keyword is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this keyword is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        keywordText:\n          description: The keyword text.\n          type: string\n        nativeLanguageKeyword:\n          description: The unlocalized keyword text in the preferred locale of the advertiser.\n          type: string\n        nativeLanguageLocale:\n          description: |-\n            The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to `zh_CN`. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/MatchType'\n        bid:\n          description: Bid associated with this keyword. Applicable to biddable match types only.\n          type: number\n          format: float\n          nullable: true\n          minimum: 0.02\n    UpdateKeyword:\n      properties:\n        keywordId:\n          description: The identifier of the keyword.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        bid:\n          description: Bid associated with this keyword. Applicable to biddable match types only.\n          type: number\n          format: float\n          nullable: true\n          minimum: 0.02\n    KeywordEx:\n      properties:\n        keywordId:\n          description: The identifier of the keyword.\n          type: number\n        campaignId:\n          description: The identifer of the campaign to which the keyword is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this keyword is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        keywordText:\n          description: The text of the expression to match against a search query.\n          type: string\n        nativeLanguageKeyword:\n          description: The unlocalized keyword text in the preferred locale of the advertiser.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/MatchType'\n        bid:\n          description: |-\n            Bid associated with this keyword. This table details the maximum allowable bid (in local currency) for keywords by marketplace:\n            | Marketplace | Currency | Min / Max bid for SP |\n            | --- | --- | --- |\n            | US | USD | 0.02 / 1000 |\n            | CA | CAD | 0.02 / 1000 |\n            | UK | GBP | 0.02 / 1000 |\n            | DE | EUR | 0.02 / 1000 |\n            | FR | EUR | 0.02 / 1000 |\n            | ES | EUR | 0.02 / 1000 |\n            | IT | EUR | 0.02 / 1000 |\n            | JP | JPY | 2.0 / 100000 |\n            | AU | AUD | 0.10 / 1410 |\n            | AE | AED | 0.24 / 184.0 |\n          type: number\n          format: float\n          minimum: 0.02\n        creationDate:\n          description: Creation date in epoch time.\n          type: number\n        lastUpdatedDate:\n          description:  Date of last update in epoch time.\n          type: number\n        servingStatus:\n          description: The serving status of the keyword. See the **computed status** section of the [developer notes](https://advertising.amazon.com/API/docs/en-us/get-started/developer-notes) for definitions.\n          type: string\n          enum:\n            - TARGETING_CLAUSE_ARCHIVED\n            - TARGETING_CLAUSE_PAUSED\n            - TARGETING_CLAUSE_STATUS_LIVE\n            - TARGETING_CLAUSE_POLICING_SUSPENDED\n            - CAMPAIGN_OUT_OF_BUDGET\n            - AD_GROUP_PAUSED\n            - AD_GROUP_ARCHIVED\n            - CAMPAIGN_PAUSED\n            - CAMPAIGN_ARCHIVED\n            - ACCOUNT_OUT_OF_BUDGET\n            - PENDING_START_DATE\n    KeywordBidRecommendationsResponse:\n      properties:\n        keywordId:\n          description: The identifier of the keyword that the bid is associated with.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group that the bid is associated with.\n          type: number\n        suggestedBid:\n          $ref: '#/components/schemas/SuggestedBid'\n    KeywordBidRecommendationsData:\n      properties:\n        adGroupId:\n          description: The identifier of the ad group that the keywords are associated with.\n          type: number\n        keywords:\n          description: An array of keyword data objects.\n          type: array\n          items:\n            type: object\n            properties:\n              keyword:\n                description: The keyword text.\n                type: string\n              matchType:\n                $ref: '#/components/schemas/MatchType'\n            minItems: 0\n            maxItems: 5000\n    KeywordResponse:\n      properties:\n        keywordId:\n          description: The identifer of the keyword.\n          type: number\n        code:\n          description: The success or error code for the operation.\n          type: string\n        details:\n          description: The human-readable description of the error.\n          type: string\n        description:\n          description: The human-readable description of the error.\n          type: string\n    MatchType:\n      description: The type of match. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Ads support center.\n      type: string\n      enum:\n        - exact\n        - phrase\n        - broad\n    NegativeMatchType:\n      description: The type of match. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Ads support center.\n      type: string\n      enum:\n        - negativeExact\n        - negativePhrase\n    NegativeKeyword:\n      properties:\n        keywordId:\n          description: The identifier of the negative keyword.\n          type: number\n        campaignId:\n          description: The identifer of the campaign to which the negative keyword is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which the negative keyword is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        keywordText:\n          description: The text of the expression to match against a search query.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/NegativeMatchType'\n    NegativeKeywordEx:\n      properties:\n        keywordId:\n          description: The identifier of the keyword.\n          type: number\n        campaignId:\n          description: The identifer of the campaign to which the keyword is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this keyword is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        keywordText:\n          description: The text of the expression to match against a search query.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/NegativeMatchType'\n        creationDate:\n          description: Creation date in epoch time.\n          type: number\n        lastUpdatedDate:\n          description:  Date of last update in epoch time.\n          type: number\n        servingStatus:\n          description: The serving status of the keyword. See the **computed status** section of the [developer notes](https://advertising.amazon.com/API/docs/en-us/get-started/developer-notes) for definitions.\n          type: string\n          enum:\n            - TARGETING_CLAUSE_ARCHIVED\n            - TARGETING_CLAUSE_PAUSED\n            - TARGETING_CLAUSE_STATUS_LIVE\n            - TARGETING_CLAUSE_POLICING_SUSPENDED\n            - CAMPAIGN_OUT_OF_BUDGET\n            - AD_GROUP_PAUSED\n            - AD_GROUP_ARCHIVED\n            - CAMPAIGN_PAUSED\n            - CAMPAIGN_ARCHIVED\n            - ACCOUNT_OUT_OF_BUDGET\n            - PENDING_START_DATE\n    CreateNegativeKeyword:\n      properties:\n        campaignId:\n          description: The identifier of the campaign to which the negative keyword is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which the negative keyword is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        keywordText:\n          description: The text of the expression to match against a search query.\n          type: string\n        matchType:\n          $ref: '#/components/schemas/NegativeMatchType'\n    UpdateNegativeKeyword:\n      properties:\n        keywordId:\n          description: The identifer of the keyword.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n    NegativeKeywordResponse:\n      properties:\n        keywordId:\n          description: The identifier of the keyword.\n          type: number\n        code:\n          description: The success or error code for the operation.\n          type: string\n        details:\n          description: The human-readable description of the error.\n          type: string\n        description:\n          description: The human-readable description of the error.\n          type: string\n    NegativeTargetingClauseResponse:\n      properties:\n        targetId:\n          description: The negative target identifier.\n          type: number\n        code:\n          description: An enumerated response code.\n          type: string\n        details:\n          description: A human-readable description of the value in the `code` field.\n          type: string\n        description:\n          description: A human-readable description of the value in the `code` field.\n          type: string\n    CreateNegativeTargetingClause:\n      properties:\n        campaignId:\n          description: The identifier of the campaign to which this negative target is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this negative target is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        expression:\n          description: The negative targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        expressionType:\n          $ref: '#/components/schemas/ExpressionType'\n    UpdateNegativeTargetingClause:\n      properties:\n        targetId:\n          description: The target identifier.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        expression:\n          description: The targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        expressionType:\n          $ref: '#/components/schemas/ExpressionType'\n    NegativeTargetingClause:\n      properties:\n        targetId:\n          description: The negative target identifier.\n          type: number\n        campaignId:\n          description: The identifier of the campaign to which this negative target is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this negative target is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        expression:\n          description: The negative targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        resolvedExpression:\n          description: The resolved targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        expressionType:\n          $ref: '#/components/schemas/ExpressionType'\n    NegativeTargetingClauseEx:\n      properties:\n        targetId:\n          description: The negative target identifier.\n          type: number\n        campaignId:\n          description: The identifier of the campaign to which this negative target is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this negative target is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        expression:\n          description: The negative targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        resolvedExpression:\n          description: The resolved targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        expressionType:\n          $ref: '#/components/schemas/ExpressionType'\n        creationDate:\n          description: The epoch time that the negative targeting clause was created.\n          type: number\n        lastUpdatedDate:\n          description: The epoch time that the negative targeting clause was updated.\n          type: number\n        servingStatus:\n          description: The computed status of the negative targeting clause. See the [developer notes](https://advertising.amazon.com/API/docs/en-us/get-started/developer-notes) for more information.\n          type: string\n          enum:\n            - TARGETING_CLAUSE_ARCHIVED\n            - TARGETING_CLAUSE_PAUSED\n            - TARGETING_CLAUSE_STATUS_LIVE\n            - TARGETING_CLAUSE_POLICING_SUSPENDED\n            - CAMPAIGN_OUT_OF_BUDGET\n            - AD_GROUP_PAUSED\n            - AD_GROUP_ARCHIVED\n            - CAMPAIGN_PAUSED\n            - CAMPAIGN_ARCHIVED\n            - ACCOUNT_OUT_OF_BUDGET\n            - PENDING_START_DATE\n    ProductAd:\n      properties:\n        adId:\n          description: The product ad identifier.\n          type: number\n        campaignId:\n          description: The campaign identifier.\n          type: number\n        adGroupId:\n          description: The ad group identifier.\n          type: number\n        sku:\n          description: The SKU associated with the product. Defined for seller accounts only.\n          type: string\n        asin:\n          description: The ASIN associated with the product. Defined for vendors only.\n          type: string\n        state:\n          $ref: '#/components/schemas/State'\n    CreateProductAd:\n      properties:\n        campaignId:\n          description: The campaign identifier.\n          type: number\n        adGroupId:\n          description: The ad group identifier.\n          type: number\n        sku:\n          description: The SKU associated with the product. Defined for seller accounts only.\n          type: string\n        asin:\n          description: The ASIN associated with the product. Defined for vendors only.\n          type: string\n        state:\n          $ref: '#/components/schemas/State'\n    UpdateProductAd:\n      properties:\n        adId:\n          description: The product ad identifier.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n    ProductAdEx:\n      properties:\n        adId:\n          description: The product ad identifier.\n          type: number\n        campaignId:\n          description: The campaign identifier.\n          type: number\n        adGroupId:\n          description: The ad group identifier.\n          type: number\n        sku:\n          description: The SKU associated with the product. Defined for seller accounts only.\n          type: string\n        asin:\n          description: The ASIN associated with the product. Defined for vendors only.\n          type: string\n        state:\n          $ref: '#/components/schemas/State'\n        creationDate:\n          description: The epoch date the product ad was created.\n          type: number\n        lastUpdatedDate:\n          description: The epoch date the product ad was last updated.\n          type: number\n        servingStatus:\n          description: The computed status of the product ad. See the [developer notes](https://advertising.amazon.com/API/docs/en-us/get-started/developer-notes) for more information.\n          type: string\n          enum:\n            - AD_ARCHIVED\n            - AD_PAUSED\n            - AD_STATUS_LIVE\n            - AD_POLICING_SUSPENDED\n            - CAMPAIGN_OUT_OF_BUDGET\n            - AD_GROUP_PAUSED\n            - AD_GROUP_ARCHIVED\n            - CAMPAIGN_PAUSED\n            - CAMPAIGN_ARCHIVED\n            - ACCOUNT_OUT_OF_BUDGET\n            - MISSING_DECORATION\n            - PENDING_START_DATE\n        servingStatusDetails:\n          description: Details of serving status. Only statuses related to moderation according to the ad policy are currently included.\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                description: The status identifier.\n              severity:\n                type: string\n                description: An enumerated advertising eligibility severity status. If set to `INELIGIBLE`, the product cannot be included in an advertisement. If set to `ELIGIBLE_WITH_WARNING`, the product may not receive impressions when included in an advertisement.\n              message:\n                type: string\n                description: A human-readable description of the status identifier specified in the `name` field.\n              helpUrl:\n                type: string\n                description: A URL with additional information about the status identifier. May not be present for all status identifiers.\n    ProductRecommendationsResponse:\n      properties:\n        totalResultCount:\n          description: The total number of recommendations in the response.\n          type: number\n        recommendedProducts:\n          type: array\n          items:\n            type: object\n            properties:\n              recommendedTargetAsin:\n                description: The recommended ASIN for targeting.\n                type: string\n    RefinementsResponse:\n      properties:\n        categoryId:\n          description: The category identifier.\n          type: number\n        brands:\n          description: The brands found in this category.\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                description: The brand identifier. Note that this is not the same identifier returned from the [getBrands](sponsored-brands/3-0/openapi#/Brands/getBrands) operation.\n                type: number\n              name:\n                description: The brand name.\n                type: string\n    ReportMetrics:\n      description: |-\n        A comma-separated list of the metrics to be included in the report.\n        The following tables summarize report metrics which can be requested via the reports interface. Different report types can use different metrics.\n        Note that ASIN reports only return data for either keywords or targets, but not both.\n        |Report Type | Metric | Details |\n        | --- | --- | --- |\n        | campaigns | bidPlus | A dimensional metric. See the [premium bid adjustment](get-started/developer-notes) section in the developer notes. |\n        | campaigns | `campaignName` | Unique name of the campaign |\n        | campaigns | `campaignId` | Unique numerical ID of the campaign |\n        | campaigns | `campaignStatus` | Status of the campaign |\n        | campaigns | `campaignBudget` | Total budget allotted to the campaign |\n        | campaigns | `campaignRuleBasedBudget` | The value of the rule-based budget. |\n        | campaigns | `applicableBudgetRuleId` | The identifier of the active rule. |\n        | campaigns | `applicableBudgetRuleName` | The name of the active rule. |\n        | campaigns | `impressions` | Total ad impressions. |\n        | campaigns | `clicks` | Total ad clicks. |\n        | campaigns | `cost` | Total cost of all clicks. Can be divided by clicks to obtain average CPC. |\n        | campaigns | `attributedConversions1d` | Number of attributed conversion events occurring within 1 day of click on ad. |\n        | campaigns | `attributedConversions7d` | Number of attributed conversion events occurring within 7 days of click on ad. |\n        | campaigns | `attributedConversions14d` | Number of attributed conversion events occurring within 14 days of click on ad. |\n        | campaigns | `attributedConversions30d` | Number of attributed conversion events occurring within 30 days of click on ad. |\n        | campaigns | `attributedConversions1dSameSKU` | Number of attributed conversion events occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedConversions7dSameSKU` | Number of attributed conversion events occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedConversions14dSameSKU` | Number of attributed conversion events occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedConversions30dSameSKU` | Number of attributed conversion events occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedUnitsOrdered1d` | Number of attributed units ordered within 1 day of click on ad. |\n        | campaigns | `attributedUnitsOrdered7d` | Number of attributed units ordered within 7 days of click on ad. |\n        | campaigns | `attributedUnitsOrdered14d` | Number of attributed units ordered within 14 days of click on ad. |\n        | campaigns | `attributedUnitsOrdered30d` | Number of attributed units ordered within 30 days of click on ad. |\n        | campaigns | `attributedSales1d` | Number of attributed sales occurring within 1 day of click on ad. |\n        | campaigns | `attributedSales7d` | Number of attributed sales occurring within 7 days of click on ad. |\n        | campaigns | `attributedSales14d` | Number of attributed sales occurring within 14 days of click on ad. |\n        | campaigns | `attributedSales30d` | Number of attributed sales occurring within 30 days of click on ad. |\n        | campaigns | `attributedSales1dSameSKU` | Aggregate value of attributed sales occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedSales7dSameSKU` | Aggregate value of attributed sales occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedSales14dSameSKU` | Aggregate value of attributed sales occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedSales30dSameSKU` | Aggregate value of attributed sales occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedUnitsOrdered1dSameSKU` | Number of attributed units ordered within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedUnitsOrdered7dSameSKU` | Number of attributed units ordered within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedUnitsOrdered14dSameSKU` | Number of attributed units ordered within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedUnitsOrdered30dSameSKU` | Number of attributed units ordered within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | campaigns | `attributedKindleEditionNormalizedPagesRead14d` | Number of attributed kindle edition normalized pages read within 14 days of click on ad. |\n        | campaigns | `attributedKindleEditionNormalizedPagesRoyalties14d` | The estimated Royalties of attributed estimated kindle edition normalized pages with in 14 days of click on ad.|\n        |          |                           |               |\n        | adGroups | `campaignName` | Unique name of the campaign |\n        | adGroups | `campaignId` | Unique numerical ID of the campaign |\n        | adGroups | `adGroupName` | Unique name of the ad group |\n        | adGroups | `adGroupId` | Unique numerical ID of the ad group |\n        | adGroups | `impressions` | Total ad impressions. |\n        | adGroups | `clicks` | Total ad clicks. |\n        | adGroups | `cost` | Total cost of all clicks. Can be divided by clicks to obtain average CPC. |        |          |                           |               |\n        | adGroups | `attributedConversions1d` | Number of attributed conversion events occurring within 1 day of click on ad. |\n        | adGroups | `attributedConversions7d` | Number of attributed conversion events occurring within 7 days of click on ad. |\n        | adGroups | `attributedConversions14d` | Number of attributed conversion events occurring within 14 days of click on ad. |\n        | adGroups | `attributedConversions30d` | Number of attributed conversion events occurring within 30 days of click on ad. |\n        | adGroups | `attributedConversions1dSameSKU` | Number of attributed conversion events occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedConversions7dSameSKU` | Number of attributed conversion events occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedConversions14dSameSKU` | Number of attributed conversion events occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedConversions30dSameSKU` | Number of attributed conversion events occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedUnitsOrdered1d` | Number of attributed units ordered within 1 day of click on ad. |\n        | adGroups | `attributedUnitsOrdered7d` | Number of attributed units ordered within 7 days of click on ad. |\n        | adGroups | `attributedUnitsOrdered14d` | Number of attributed units ordered within 14 days of click on ad. |\n        | adGroups | `attributedUnitsOrdered30d` | Number of attributed units ordered within 30 days of click on ad. |\n        | adGroups | `attributedSales1d` | Number of attributed sales occurring within 1 day of click on ad. |\n        | adGroups | `attributedSales7d` | Number of attributed sales occurring within 7 days of click on ad. |\n        | adGroups | `attributedSales14d` | Number of attributed sales occurring within 14 days of click on ad. |\n        | adGroups | `attributedSales30d` | Number of attributed sales occurring within 30 days of click on ad. |\n        | adGroups | `attributedSales1dSameSKU` | Aggregate value of attributed sales occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedSales7dSameSKU` | Aggregate value of attributed sales occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedSales14dSameSKU` | Aggregate value of attributed sales occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedSales30dSameSKU` | Aggregate value of attributed sales occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedUnitsOrdered1dSameSKU` | Number of attributed units ordered within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedUnitsOrdered7dSameSKU` | Number of attributed units ordered within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedUnitsOrdered14dSameSKU` | Number of attributed units ordered within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedUnitsOrdered30dSameSKU` | Number of attributed units ordered within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | adGroups | `attributedKindleEditionNormalizedPagesRead14d` | Number of attributed kindle edition normalized pages read within 14 days of click on ad. |\n        | adGroups | `attributedKindleEditionNormalizedPagesRoyalties14d` | The estimated Royalties of attributed estimated kindle edition normalized pages with in 14 days of click on ad.|\n        |           |              |              |\n        | keywords | `campaignName` | Unique name of the campaign |\n        | keywords | `campaignId` | Unique numerical ID of the campaign |\n        | keywords | `adGroupName` | Unique name of the ad group |\n        | keywords | `adGroupId` | Unique numerical ID of the ad group |\n        | keywords | `keywordId` | ID of the keyword used in bid |\n        | keywords | `keywordText` | Text of the keyword or phrase used in bid |\n        | keywords | `matchType` | Type of matching for the keyword or phrase used in bid. Must be one of: broad, phrase, or exact |\n        | keywords | `impressions` | Total ad impressions. |\n        | keywords | `clicks` | Total ad clicks. |\n        | keywords | `cost` | Total cost of all clicks. Can be divided by clicks to obtain average CPC. |\n        | keywords | `attributedConversions1d` | Number of attributed conversion events occurring within 1 day of click on ad. |\n        | keywords | `attributedConversions7d` | Number of attributed conversion events occurring within 7 days of click on ad. |\n        | keywords | `attributedConversions14d` | Number of attributed conversion events occurring within 14 days of click on ad. |\n        | keywords | `attributedConversions30d` | Number of attributed conversion events occurring within 30 days of click on ad. |\n        | keywords | `attributedConversions1dSameSKU` | Number of attributed conversion events occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedConversions7dSameSKU` | Number of attributed conversion events occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedConversions14dSameSKU` | Number of attributed conversion events occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedConversions30dSameSKU` | Number of attributed conversion events occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedUnitsOrdered1d` | Number of attributed units ordered within 1 day of click on ad. |\n        | keywords | `attributedUnitsOrdered7d` | Number of attributed units ordered within 7 days of click on ad. |\n        | keywords | `attributedUnitsOrdered14d` | Number of attributed units ordered within 14 days of click on ad. |\n        | keywords | `attributedUnitsOrdered30d` | Number of attributed units ordered within 30 days of click on ad. |\n        | keywords | `attributedSales1d` | Number of attributed sales occurring within 1 day of click on ad. |\n        | keywords | `attributedSales7d` | Number of attributed sales occurring within 7 days of click on ad. |\n        | keywords | `attributedSales14d` | Number of attributed sales occurring within 14 days of click on ad. |\n        | keywords | `attributedSales30d` | Number of attributed sales occurring within 30 days of click on ad. |\n        | keywords | `attributedSales1dSameSKU` | Aggregate value of attributed sales occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedSales7dSameSKU` | Aggregate value of attributed sales occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedSales14dSameSKU` | Aggregate value of attributed sales occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedSales30dSameSKU` | Aggregate value of attributed sales occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedUnitsOrdered1dSameSKU` | Number of attributed units ordered within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedUnitsOrdered7dSameSKU` | Number of attributed units ordered within 7 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedUnitsOrdered14dSameSKU` | Number of attributed units ordered within 14 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedUnitsOrdered30dSameSKU` | Number of attributed units ordered within 30 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | keywords | `attributedKindleEditionNormalizedPagesRead14d` | Number of attributed kindle edition normalized pages read within 14 days of click on ad. |\n        | keywords | `attributedKindleEditionNormalizedPagesRoyalties14d` | The estimated Royalties of attributed estimated kindle edition normalized pages with in 14 days of click on ad.|\n        |                |             |               |\n        | productAds | `campaignName` | Unique name of the campaign |\n        | productAds | `campaignId` | Unique numerical ID of the campaign |\n        | productAds | `adGroupName` | Unique name of the ad group |\n        | productAds | `adGroupId` | Unique numerical ID of the ad group |\n        | productAds | `impressions` | Total ad impressions. |\n        | productAds | `clicks` | Total ad clicks. |\n        | productAds | `cost` | Total cost of all clicks. Can be divided by clicks to obtain average CPC. |\n        | productAds | `currency` | A dimensional metric |\n        | productAds | `asin` | The ASIN that is being advertised. |\n        | productAds | `sku` | The SKU that is being advertised. Not available for vendors. |\n        | productAds | `attributedConversions1d` | Number of attributed conversion events occurring within 1 day of click on ad. |\n        | productAds | `attributedConversions7d` | Number of attributed conversion events occurring within 7 days of click on ad. |\n        | productAds | `attributedConversions14d` | Number of attributed conversion events occurring within 14 days of click on ad. |\n        | productAds | `attributedConversions30d` | Number of attributed conversion events occurring within 30 days of click on ad. |\n        | productAds | `attributedConversions1dSameSKU` | Number of attributed conversion events occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedConversions7dSameSKU` | Number of attributed conversion events occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedConversions14dSameSKU` | Number of attributed conversion events occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedConversions30dSameSKU` | Number of attributed conversion events occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedUnitsOrdered1d` | Number of attributed units ordered within 1 day of click on ad. |\n        | productAds | `attributedUnitsOrdered7d` | Number of attributed units ordered within 7 days of click on ad. |\n        | productAds | `attributedUnitsOrdered14d` | Number of attributed units ordered within 14 days of click on ad. |\n        | productAds | `attributedUnitsOrdered30d` | Number of attributed units ordered within 30 days of click on ad. |\n        | productAds | `attributedSales1d` | Number of attributed sales occurring within 1 day of click on ad. |\n        | productAds | `attributedSales7d` | Number of attributed sales occurring within 7 days of click on ad. |\n        | productAds | `attributedSales14d` | Number of attributed sales occurring within 14 days of click on ad. |\n        | productAds | `attributedSales30d` | Number of attributed sales occurring within 30 days of click on ad. |\n        | productAds | `attributedSales1dSameSKU` | Aggregate value of attributed sales occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedSales7dSameSKU` | Aggregate value of attributed sales occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedSales14dSameSKU` | Aggregate value of attributed sales occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedSales30dSameSKU` | Aggregate value of attributed sales occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedUnitsOrdered1dSameSKU` | Number of attributed units ordered within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedUnitsOrdered7dSameSKU` | Number of attributed units ordered within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedUnitsOrdered14dSameSKU` | Number of attributed units ordered within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedUnitsOrdered30dSameSKU` | Number of attributed units ordered within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | productAds | `attributedKindleEditionNormalizedPagesRead14d` | Number of attributed kindle edition normalized pages read within 14 days of click on ad. |\n        | productAds | `attributedKindleEditionNormalizedPagesRoyalties14d` | The estimated Royalties of attributed estimated kindle edition normalized pages with in 14 days of click on ad.|\n        |              |               |              |\n        | asins | `campaignName` | Unique name of the campaign |\n        | asins | `campaignId` | Unique numerical ID of the campaign |\n        | asins | `adGroupName` | Unique name of the ad group |\n        | asins | `adGroupId` | Unique numerical ID of the ad group |\n        | asins | `keywordId` | Unique numerical ID of the keyword |\n        | asins | `keywordText` | Keyword or phrase used in bid |\n        | asins | `asin` | Unique ASIN advertised |\n        | asins | `otherAsin` | A non-dimensional metric for ASINs other than the one advertised |\n        | asins | `sku` | Unique SKU advertised. Not available for vendors. |\n        | asins | `currency` | A dimensional metric |\n        | asins | `matchType` | One of: broad, phrase, or exact |\n        | asins | `attributedUnitsOrdered1d` | Number of ASIN (SKU) units sold. 1 day.|\n        | asins | `attributedUnitsOrdered7d` | Number of ASIN (SKU) units sold. 7 days.|\n        | asins | `attributedUnitsOrdered14d` | Number of ASIN (SKU) units sold. 14 days.|\n        | asins | `attributedUnitsOrdered30d` | Number of ASIN (SKU) units sold. 30 days.|\n        | asins | `attributedUnitsOrdered1dOtherSKU` | Number of other ASIN (SKU) units sold. 1 day. |\n        | asins | `attributedUnitsOrdered7dOtherSKU` | Number of other ASIN (SKU) units sold. 7 days. |\n        | asins | `attributedUnitsOrdered14dOtherSKU` | Number of other ASIN (SKU) units sold. 14 days. |\n        | asins | `attributedUnitsOrdered30dOtherSKU` | Number of other ASIN (SKU) units sold. 30 days. |\n        | asins | `attributedSales1dOtherSKU` | Sales for another ASIN (SKU). 1 day. |\n        | asins | `attributedSales7dOtherSKU` | Sales for another ASIN (SKU). 7 days. |\n        | asins | `attributedSales14dOtherSKU` | Sales for another ASIN (sku). 14 days. |\n        | asins | `attributedSales30dOtherSKU` | Sales for another ASIN (sku). 30 days. |\n        | asins | `targetId` | The target identifier. |\n        | asins | `targetingText` | The targeting text. |\n        | asins | `targetingType` | The targeting type. |\n        | asins | `attributedKindleEditionNormalizedPagesRead14d` | Number of attributed kindle edition normalized pages read within 14 days of click on ad. |\n        | asins | `attributedKindleEditionNormalizedPagesRoyalties14d` | The estimated Royalties of attributed estimated kindle edition normalized pages with in 14 days of click on ad.|\n        |                      |              |              |\n        | targets | `campaignName` | Unique name of the campaign |\n        | targets | `campaignId` | Unique numerical ID of the campaign |\n        | targets | `adGroupName` | Unique name of the ad group |\n        | targets | `adGroupId` | Unique numerical ID of the ad group |\n        | targets | `targetId` | ID of the targeting expression used in a bid |\n        | targets | `targetingExpression` | A string representation of your expression object in targeting clauses |\n        | targets | `targetingText` | A resolved string representation of your expression object in targeting clauses |\n        | targets | `targetingType` | Type of matching for the targeting expression used in bid. For manually created expressions this value is: `TARGETING_EXPRESSION`. For auto-targeting expressions this value is: `TARGETING_EXPRESSION_PREDEFINED` |\n        | targets | `impressions` | Total ad impressions |\n        | targets | `clicks` | Total ad clicks |\n        | targets | `cost` | Total cost of all clicks. Can be divided by clicks to obtain average CPC |\n        | targets | `attributedConversions1d` | Number of attributed conversion events occurring within 1 day of click on ad |\n        | targets | `attributedConversions7d` | Number of attributed conversion events occurring within 7 days of click on ad |\n        | targets | `attributedConversions14d` | Number of attributed conversion events occurring within 14 days of click on ad |\n        | targets | `attributedConversions30d` | Number of attributed conversion events occurring within 30 days of click on ad |\n        | targets | `attributedConversions1dSameSKU` | Number of attributed conversion events occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised |\n        | targets | `attributedConversions7dSameSKU` | Number of attributed conversion events occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised |\n        | targets | `attributedConversions14dSameSKU` | Number of attributed conversion events occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised |\n        | targets | `attributedConversions30dSameSKU` | Number of attributed conversion events occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised |\n        | targets | `attributedUnitsOrdered1d` | Number of attributed units ordered within 1 day of click on ad |\n        | targets | `attributedUnitsOrdered7d` | Number of attributed units ordered within 7 days of click on ad |\n        | targets | `attributedUnitsOrdered14d` | Number of attributed units ordered within 14 days of click on ad |\n        | targets | `attributedUnitsOrdered30d` | Number of attributed units ordered within 30 days of click on ad |\n        | targets | `attributedSales1d` | Number of attributed sales occurring within 1 day of click on ad |\n        | targets | `attributedSales7d` | Number of attributed sales occurring within 7 days of click on ad |\n        | targets | `attributedSales14d` | Number of attributed sales occurring within 14 days of click on ad |\n        | targets | `attributedSales30d` | Number of attributed sales occurring within 30 days of click on ad |\n        | targets | `attributedSales1dSameSKU` | Aggregate value of attributed sales occurring within 1 day of click on ad where the purchased SKU was the same as the one advertised |\n        | targets | `attributedSales7dSameSKU` | Aggregate value of attributed sales occurring within 7 days of click on ad where the purchased SKU was the same as the one advertised |\n        | targets | `attributedSales14dSameSKU` | Aggregate value of attributed sales occurring within 14 days of click on ad where the purchased SKU was the same as the one advertised |\n        | targets | `attributedSales30dSameSKU` | Aggregate value of attributed sales occurring within 30 days of click on ad where the purchased SKU was the same as the one advertised |\n        | targets | `attributedUnitsOrdered1dSameSKU` | Number of attributed units ordered within 1 day of click on ad where the purchased SKU was the same as the one advertised. |\n        | targets | `attributedUnitsOrdered7dSameSKU` | Number of attributed units ordered within 7 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | targets | `attributedUnitsOrdered14dSameSKU` | Number of attributed units ordered within 14 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | targets | `attributedUnitsOrdered30dSameSKU` | Number of attributed units ordered within 30 days of click on ad where the purchased SKU was the same as the one advertised. |\n        | targets | `attributedKindleEditionNormalizedPagesRead14d` | Number of attributed kindle edition normalized pages read within 14 days of click on ad. |\n        | targets | `attributedKindleEditionNormalizedPagesRoyalties14d` | The estimated Royalties of attributed estimated kindle edition normalized pages with in 14 days of click on ad.|\n      type: string\n    Report:\n      properties:\n        stateFilter:\n          type: string\n          description: |-\n            Filters the response to include reports with `stateFilter` set to one of the values in the comma-delimited list. `stateFilter` and `segment` cannot be used in the same report request.\n            `asins` report types do not support the use of `stateFilter`.\n          enum:\n            - enabled\n            - paused\n            - archived\n        campaignType:\n          type: string\n          description: The type of campaign. Only required for `asins` reports - don't use with other report types.\n          required:\n            - sponsoredProducts\n          enum:\n            - sponsoredProducts\n        segment:\n          description: |-\n            A secondary dimension used to further segment certain types of reports. `stateFilter` and `segment` cannot be used in the same report request. Keyword search term reports only return search terms that have generated at least one click or sale.\n\n            **Note**: Search term reports for auto-targeted campaigns created before 11/14/2018 can be accessed from the `/v2/sp/keywords/report` resource. Search term reports for auto-targeted campaigns generated on-and-after 11/14/2018 can be accessed from the `/v2/sp/targets/report` resource.\n\n            | Dimension | Valid report types | Description |\n            |-----------|-------------|-------------|\n            | query | keywords, targets | Segments a report based on customer search term. |\n            | placement | campaigns | Segments a `campaigns` report based on the page location where the ad appeared. |\n          type: string\n          enum:\n            - query\n            - placement\n        reportDate:\n          description: The date for which to retrieve the performance report in YYYYMMDD format. The time zone is specified by the profile used to request the report. If this date is today, then the performance report may contain partial information. Reports are not available for data older than 60 days. For details on data latency, see the Service Guarantees in the [developer notes](https://advertising.amazon.com/API/docs/en-us/get-started/developer-notes) section.\n          type: string\n        metrics:\n          $ref: '#/components/schemas/ReportMetrics'\n    SnapshotRequest:\n      properties:\n        stateFilter:\n          type: string\n          enum:\n            - \"enabled\"\n            - \"paused\"\n            - \"archived\"\n            - \"enabled, paused\"\n            - \"enabled, archived\"\n            - \"paused, archived\"\n            - \"enabled, paused, archived\"\n    SnapshotResponse:\n      properties:\n        snapshotId:\n          description: The snapshot identifier.\n          type: string\n        recordType:\n          description: The record type of the report.\n          type: string\n          enum:\n            - campaigns\n            - adGroups\n            - keywords\n            - negativeKeywords\n            - campaignNegativeKeywords\n            - productAds\n            - targets\n            - negativeTargets\n        status:\n          description: The generation status of the snapshot.\n          type: string\n          enum:\n            - IN_PROGRESS\n            - SUCCESS\n            - FAILURE\n    State:\n      description: The current resource state.\n      type: string\n      enum:\n        - enabled\n        - paused\n        - archived\n    SuggestedBid:\n      description: Information about the recommended bid.\n      type: object\n      properties:\n        suggested:\n          description: The bid recommendation.\n          type: number\n        rangeStart:\n          description: The lower bound bid recommendation.\n          type: number\n        rangeEnd:\n          description: The upper bound bid recommendation.\n          type: number\n    TargetingExpression:\n      properties:\n        expressions:\n          description: List of targeting expressions for which to generate bid recommendations.\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                description: The type.\n                type: array\n                items:\n                  type: string\n                  enum:\n                    - queryBroadMatches\n                    - queryPhraseMatches\n                    - queryExactMatches\n                    - asinCategorySameAs\n                    - asinBrandSameAs\n                    - asinPriceLessThan\n                    - asinPriceBetween\n                    - asinPriceGreaterThan\n                    - asinReviewRatingLessThan\n                    - asinReviewRatingBetween\n                    - asinReviewRatingGreaterThan\n                    - asinSameAs\n                    - queryBroadRelMatches\n                    - queryHighRelMatches\n                    - asinSubstituteRelated\n                    - asinAccessoryRelated\n              value:\n                description: The expression value\n                type: string\n    TargetingExpressionPredicate:\n      properties:\n        value:\n          description: The expression value\n          type: string\n        type:\n          description: |-\n             The type of targeting expression. You can specify values for the following predicates:\n             | Predicate | Description |\n             | --- | --- |\n             | `queryBroadMatches` |\n             | `asinCategorySameAs` | Negatively Target the same category as the category expressed. |\n             | `asinBrandSameAs` | Target the brand that is the same as the brand expressed. |\n             | `asinPriceLessThan` | Target a price that is less than the price expressed. |\n             | `asinPriceBetween` | Target a price that is between the prices expressed. |\n             | `asinPriceGreaterThan` | Target a price that is greater than the price expressed. |\n             | `asinReviewRatingLessThan` | Target a review rating less than the review rating that is expressed. |\n             | `asinReviewRatingBetween` | Target a review rating that is between the review ratings expressed. |\n             | `asinReviewRatingGreaterThan` | Target a review rating that is greater than the review rating expressed. |\n             | `asinSameAs` | Target an ASIN that is the same as the ASIN expressed. |\n             | `asinIsPrimeShippingEligible` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. |\n             | `asinAgeRangeSameAs` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. |\n             | `asinGenreSameAs` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   |\n          type: string\n          enum:\n            - queryBroadMatches\n            - queryPhraseMatches\n            - queryExactMatches\n            - asinCategorySameAs\n            - asinBrandSameAs\n            - asinPriceLessThan\n            - asinPriceBetween\n            - asinPriceGreaterThan\n            - asinReviewRatingLessThan\n            - asinReviewRatingBetween\n            - asinReviewRatingGreaterThan\n            - asinSameAs\n            - queryBroadRelMatches\n            - queryHighRelMatches\n            - asinSubstituteRelated\n            - asinAccessoryRelated\n            - asinAgeRangeSameAs\n            - asinGenreSameAs\n            - asinIsPrimeShippingEligible\n    TargetingClause:\n      properties:\n        targetId:\n          description: The target identifier.\n          type: number\n        campaignId:\n          description: The identifier of the campaign to which this target is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this target is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        expression:\n          description: The targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        resolvedExpression:\n          description: The resolved targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        expressionType:\n          $ref: '#/components/schemas/ExpressionType'\n        bid:\n          $ref: '#/components/schemas/Bid'\n    CreateTargetingClause:\n      properties:\n        campaignId:\n          description: The identifier of the campaign to which this target is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this target is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        expression:\n          description: The targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        resolvedExpression:\n          description: The resolved targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        expressionType:\n          $ref: '#/components/schemas/ExpressionType'\n        bid:\n          $ref: '#/components/schemas/Bid'\n    UpdateTargetingClause:\n      properties:\n        targetId:\n          description: The target identifier.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        expression:\n          description: The targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        resolvedExpression:\n          description: The resolved targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        expressionType:\n          $ref: '#/components/schemas/ExpressionType'\n        bid:\n          $ref: '#/components/schemas/Bid'\n    TargetingClauseEx:\n      properties:\n        targetId:\n          description: The target identifier.\n          type: number\n        campaignId:\n          description: The identifier of the campaign to which this target is associated.\n          type: number\n        adGroupId:\n          description: The identifier of the ad group to which this target is associated.\n          type: number\n        state:\n          $ref: '#/components/schemas/State'\n        expression:\n          description: The targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        resolvedExpression:\n          description: The resolved targeting expression.\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetingExpressionPredicate'\n        expressionType:\n          $ref: '#/components/schemas/ExpressionType'\n        bid:\n          $ref: '#/components/schemas/Bid'\n        creationDate:\n          description: The epoch time that the targeting clause was created.\n          type: number\n        lastUpdatedDate:\n          description: The epoch time that the targeting clause was updated.\n          type: number\n        servingStatus:\n          description: The computed status of the targeting clause. See the [developer notes](https://advertising.amazon.com/API/docs/en-us/get-started/developer-notes) for more information.\n          type: string\n          enum:\n            - TARGETING_CLAUSE_ARCHIVED\n            - TARGETING_CLAUSE_PAUSED\n            - TARGETING_CLAUSE_STATUS_LIVE\n            - TARGETING_CLAUSE_POLICING_SUSPENDED\n            - CAMPAIGN_OUT_OF_BUDGET\n            - AD_GROUP_PAUSED\n            - AD_GROUP_ARCHIVED\n            - CAMPAIGN_PAUSED\n            - CAMPAIGN_ARCHIVED\n            - ACCOUNT_OUT_OF_BUDGET\n            - PENDING_START_DATE\n    TargetingClauseResponse:\n      properties:\n        targetId:\n          description: The target identifier.\n          type: number\n        code:\n          description: An enumerated response code.\n          type: string\n        details:\n          description: A human-readable description of the value in the `code` field.\n          type: string\n        description:\n          description: A human-readable description of the value in the `code` field.\n          type: string\n    UpdateCampaign:\n      properties:\n        campaignId:\n          description: The identifier of an existing campaign to update.\n          type: number\n        portfolioId:\n          description: The identifier of an existing portfolio to which the campaign is associated.\n          type: number\n        name:\n          description: The name of the campaign.\n          type: string\n        tags:\n          $ref: '#/components/schemas/CampaignTags'\n        state:\n          $ref: '#/components/schemas/State'\n        dailyBudget:\n          description: The daily budget of the campaign.\n          type: number\n          format: float\n          minimum: 1.00\n        startDate:\n          description: The starting date of the campaign. The format of the date is YYYYMMDD.\n          type: string\n        endDate:\n          description: The ending date of the campaign to stop running. The format of the date is YYYYMMDD.\n          type: string\n          nullable: true\n        premiumBidAdjustment:\n          description: If set to true, Amazon increases the default bid for ads that are eligible to appear in this placement. See developer notes for more information.\n          type: boolean\n        bidding:\n          $ref: '#/components/schemas/Bidding'\n    Bid:\n      description: |-\n        The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. This table details the maximum allowable bid (in local currency) for keywords by marketplace:\n        | Marketplace | Currency | Min / Max bid for SP |\n        | --- | --- | --- |\n        | US | USD | 0.02 / 1000 |\n        | CA | CAD | 0.02 / 1000 |\n        | UK | GBP | 0.02 / 1000 |\n        | DE | EUR | 0.02 / 1000 |\n        | FR | EUR | 0.02 / 1000 |\n        | ES | EUR | 0.02 / 1000 |\n        | IT | EUR | 0.02 / 1000 |\n        | JP | JPY | 2.0 / 100000 |\n        | AU | AUD | 0.10 / 1410 |\n        | AE | AED | 0.24 / 184.0 |\n      type: number\n      format: float\n      minimum: 0.02\n      nullable: true\n",
			"canonicalURL": "/github.com/wangjoshuah/Amazon-Ads-Sponsored-Products-API-Python-Client@98a511a0544d28aac06529c13f4921c19ae8ec66/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wangjoshuah/Amazon-Ads-Sponsored-Products-API-Python-Client/blob/98a511a0544d28aac06529c13f4921c19ae8ec66/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"CategoryResponse\": resolve \"#/components/schemas/CategoryResponse\": property \"isTargetable\": at openapi.yaml:2824:13: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}