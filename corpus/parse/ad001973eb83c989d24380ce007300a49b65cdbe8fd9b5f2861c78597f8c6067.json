{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/OCWA"
		},
		"file": {
			"name": "api-docs.yaml",
			"size": 0,
			"path": "microservices/requestApi/routes/v2/spec/api-docs.yaml",
			"byteSize": 9399,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Request API\n  description: |\n    This is a request api that provides access to requests, for the OCWA it manages comments ands files as well.\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Brandon Sharratt\nservers:\n  - url: /v2\n    description: This Server\npaths:\n  /:\n    get:\n      summary: List all requests\n      operationId: listRequests\n      tags:\n        - Requests\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: page\n          in: query\n          description: Which page to start on (relative to limit)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of requests that the user has access to\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Requests\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a request\n      operationId: createRequest\n      tags:\n        - Requests\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RequestPost\"\n      responses:\n        '200':\n          description: Success Message\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /forms:\n    get:\n      summary: List all forms\n      tags:\n        - Forms\n      # parameters:\n      #   - name: limit\n      #     in: query\n      #     description: How many items to return at one time (max 100)\n      #     required: false\n      #     schema:\n      #       type: integer\n      #       format: int32\n      responses:\n        '200':\n          description: An array of forms\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Forms\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a form. Requires admin group.\n      tags:\n        - Forms\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FormPost\"\n      responses:\n        '200':\n          description: Success Message\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /forms/default:\n    summary: Get the default form. See /forms/{name} for more information\n    tags:\n      - Forms\n    responses:\n        '200':\n          description: Success Message\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \n  /forms/code_default:\n    summary: Get the default code form. See /forms/{name} for more information\n    tags:\n      - Forms\n    responses:\n        '200':\n          description: Success Message\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /forms/{name}:\n    get:\n      summary: Get the form for the given name. See https://apidocs.form.io/ for more information\n      tags:\n        - Forms\n      responses:\n          '200':\n            description: Success Message\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Success\"\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Updates the form for the given name. See https://apidocs.form.io/ for more information. Requires admin group\n      tags:\n        - Forms\n      responses:\n          '200':\n            description: Success Message\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Success\"\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Error\"\n    \n    delete:\n      summary: Deletes the form for the given name. See https://apidocs.form.io/ for more information. Requires admin group\n      tags:\n        - Forms\n      responses:\n          '200':\n            description: Success Message\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Success\"\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Error\"\n                \n\n\ncomponents:\n  schemas:\n    Forms:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Form\"\n\n    Form:\n      type: object\n      properties:\n        note: \n          type: none\n          description: \"See the formio docs for the fields returned https://apidocs.form.io/\"\n\n\n    FormPost:\n      type: object\n      properties:\n        note: \n          type: object\n          description: \"See the formio docs for the fields returned https://apidocs.form.io/\"\n        \n\n\n    Request:\n      required:\n        - _id\n        - name\n        - state\n        - files\n        - __v\n      properties:\n        _id:\n          type: string\n          description: Object id\n        name:\n          type: string\n          description: Name of the request for user convinience (not required to be unique)\n        state:\n          type: number\n          description: Number reflecting the state of the request, 0 is draft, 1 is wip, 2 is awaiting review, 3 is in review, 4 is approved, 5 is denied, 6 is cancelled\n        tags:\n          type: array\n          items:\n            type: string\n          description: Array of strings containing the tags currently applied to the request.\n        files:\n          type: array\n          items:\n            type: string\n          description: Array of file ids that the request knows about\n        supportingFiles:\n          type: array\n          items:\n            type: string\n          description: Array of file ids that the request knows about as supporting files\n        purpose:\n          type: string\n          description: Purpose of the request\n        variableDescriptions:\n          type: string\n          description: Description of variables in the request\n        selectionCriteria:\n          type: string\n          description: Selection criteria and sample size description for the request\n        steps:\n          type: string\n          description: Annotation of steps taken\n        freq:\n          type: string\n          description: Weighted results and unweighted frequencies\n        confidentiality:\n          type: string\n          description: Confidentiality disclosure to describe how it's upheld when criteria isn't met\n        author:\n          type: string\n          description: Author of the request\n        __v:\n          type: string\n          description: version of the request (increments with changes)\n    Requests:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Request\"\n\n    RequestPost:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: Name of the request for user convinience\n        files:\n          type: array\n          description: An array of file ids attached to the request\n        supportingFiles:\n          type: array\n          description: An array of file ids for supporting files attached to the request\n        other:\n          type: any\n          description: Any other fields passed along to the post will be passed on to formio, which should be configured to save the fields you want to keep\n\n    Success:\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          description: Contains message about the success, normally \"Written successfully\"\n    Error:\n      required:\n        - error\n      properties:\n        error:\n          type: string\n          description: contains a message about the failure",
			"canonicalURL": "/github.com/bcgov/OCWA@e0bd0763ed1e3c0acc498cb1689778b4e22a475c/-/blob/microservices/requestApi/routes/v2/spec/api-docs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bcgov/OCWA/blob/e0bd0763ed1e3c0acc498cb1689778b4e22a475c/microservices/requestApi/routes/v2/spec/api-docs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Form\": parse schema: property \"note\": parse schema: unexpected schema type: \"none\""
}