{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/WeBankPartners/wecube-plugins-terminal"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "api/terminal/etc/openapi.yml",
			"byteSize": 89238,
			"content": "openapi: 3.0.0\ninfo:\n  title: WeCube Terminal API\n  version: 0.3.0\n  contact:\n    name: Support\n    email: fintech@webank.com\n    url: https://github.com/WeBankPartners/wecube-plugins-terminal\n  license:\n    name: Apache 2.0\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\npaths:\n  /terminal/v1/login:\n    post:\n      description: \"Login\"\n      operationId: \"Login\"\n      tags:\n        - Login\n      requestBody:\n        description: \"login with username \u0026 password\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/UserPassword\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Tokens\"\n        \"401\":\n          description: Login Deny\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorUserPass\"\n\n  /terminal/v1/refresh-token:\n    get:\n      description: \"Refresh Login\"\n      operationId: \"Refresh Login\"\n      tags:\n        - Login\n      security:\n        - refresh: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Tokens\"\n        \"401\":\n          description: Login Deny\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/assets:\n    get:\n      description: List assets that you are authorized to execute\n      operationId: \"List Assets\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Assets\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/view-assets:\n    get:\n      description: List assets that you are authorized to view\n      operationId: \"List View-Only Assets\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Assets\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/assets/{id}/file:\n    get:\n      description: \"Download File from an Asset\"\n      operationId: \"Download File from an Asset\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"1\"\n        - name: path\n          in: query\n          description: file path\n          required: true\n          schema:\n            type: string\n            example: \"/tmp/file\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Upload File to an Asset\"\n      operationId: \"Upload File to an Asset\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      parameters:\n        - name: path\n          in: query\n          description: file path\n          required: true\n          schema:\n            type: string\n            example: \"/tmp/file\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/assets/{id}/permissions:\n    get:\n      description: List permissions of the {id} asset\n      operationId: \"List Permissions of an Asset\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"1\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    items:\n                      type: string\n                      example:\n                        - \"execute\"\n                        - \"download\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/mgmt-assets:\n    get:\n      description: \"List All Asset\"\n      operationId: \"List All Asset\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Assets\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Create Asset\"\n      operationId: \"Create Asset\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      requestBody:\n        description: Assets to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Assets\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Assets\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update Assets\"\n      operationId: \"Update Assets\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      requestBody:\n        description: Assets to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Assets\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Assets\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/mgmt-assets/{id}:\n    get:\n      description: \"Get One Asset\"\n      operationId: \"Get One Asset\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"1\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/Asset\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    delete:\n      description: \"Delete One Asset\"\n      operationId: \"Delete One Asset\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items deleted\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Assets\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update One Asset\"\n      operationId: \"Update One Asset\"\n      tags:\n        - Asset\n      security:\n        - access: []\n      requestBody:\n        description: Asset to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/Asset\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/Asset\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/jumpservers:\n    get:\n      description: \"List JumpServers\"\n      operationId: \"List JumpServers\"\n      tags:\n        - JumpServer\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/JumpServers\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Create JumpServers\"\n      operationId: \"Create JumpServers\"\n      tags:\n        - JumpServer\n      security:\n        - access: []\n      requestBody:\n        description: JumpServers to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/JumpServers\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/JumpServers\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update JumpServers\"\n      operationId: \"Update JumpServers\"\n      tags:\n        - JumpServer\n      security:\n        - access: []\n      requestBody:\n        description: JumpServers to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/JumpServers\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/JumpServers\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/jumpservers/{id}:\n    get:\n      description: \"Get One JumpServer\"\n      operationId: \"Get One JumpServer\"\n      tags:\n        - JumpServer\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"1\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/JumpServer\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    delete:\n      description: \"Delete One JumpServer\"\n      operationId: \"Delete One JumpServer\"\n      tags:\n        - JumpServer\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items deleted\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/JumpServers\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update One JumpServer\"\n      operationId: \"Update One JumpServer\"\n      tags:\n        - JumpServer\n      security:\n        - access: []\n      requestBody:\n        description: JumpServer to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/JumpServer\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/JumpServer\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/bookmarks:\n    get:\n      description: List Bookmarks\n      operationId: \"List Bookmarks\"\n      tags:\n        - Bookmark\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Bookmarks\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Create Bookmarks\"\n      operationId: \"Create Bookmarks\"\n      tags:\n        - Bookmark\n      security:\n        - access: []\n      requestBody:\n        description: Bookmarks to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Bookmarks\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Bookmarks\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update Bookmarks\"\n      operationId: \"Update Bookmarks\"\n      tags:\n        - Bookmark\n      security:\n        - access: []\n      requestBody:\n        description: Bookmarks to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Bookmarks\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Bookmarks\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/bookmarks/{id}:\n    get:\n      description: \"Get One Bookmark\"\n      operationId: \"Get One Bookmark\"\n      tags:\n        - Bookmark\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"1\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/Bookmark\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    delete:\n      description: \"Delete One Bookmark\"\n      operationId: \"Delete One Bookmark\"\n      tags:\n        - Bookmark\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items deleted\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Bookmarks\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update One Bookmark\"\n      operationId: \"Update One Bookmark\"\n      tags:\n        - Bookmark\n      security:\n        - access: []\n      requestBody:\n        description: Bookmark to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/Bookmark\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/Bookmark\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/transfer-records:\n    get:\n      description: \"List File-transfer records\"\n      operationId: \"List File-transfer records\"\n      tags:\n        - Audit\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/FileTransfer\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/session-records:\n    get:\n      description: \"List Session records\"\n      operationId: \"List Session records\"\n      tags:\n        - Audit\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/SessionRecord\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/session-records/{id}/file:\n    get:\n      description: \"Get Session replay file\"\n      operationId: \"Get Session replay file\"\n      tags:\n        - Audit\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"1\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/permissions:\n    get:\n      description: List Permissions\n      operationId: \"List Permissions\"\n      tags:\n        - Permission\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Permissions\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Create Permissions\"\n      operationId: \"Create Permissions\"\n      tags:\n        - Permission\n      security:\n        - access: []\n      requestBody:\n        description: Permissions to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Permissions\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Permissions\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update Permissions\"\n      operationId: \"Update Permissions\"\n      tags:\n        - Permission\n      security:\n        - access: []\n      requestBody:\n        description: Permissions to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Permissions\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Permissions\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/permissions/{id}:\n    get:\n      description: \"Get One Permission\"\n      operationId: \"Get One Permission\"\n      tags:\n        - Permission\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"1\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/Permission\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    delete:\n      description: \"Delete One Permission\"\n      operationId: \"Delete One Permission\"\n      tags:\n        - Permission\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items deleted\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Permissions\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update One Permission\"\n      operationId: \"Update One Permission\"\n      tags:\n        - Permission\n      security:\n        - access: []\n      requestBody:\n        description: Permissions to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/Permission\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Permission\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/ssh:\n    get:\n      description: Get SSH Connection(websocket)\n      operationId: \"Get SSH Connection(websocket)\"\n      tags:\n        - Console\n      parameters:\n        - name: Connection\n          in: header\n          required: true\n          schema:\n            type: string\n            example: Upgrade\n        - name: Upgrade\n          in: header\n          required: true\n          schema:\n            type: string\n            example: websocket\n      responses:\n        \"101\":\n          description: |\n            \u003cbr/\u003enext use websocket message to communicate with server\u003cbr/\u003e\u003cbr/\u003e\n\n            1. client send: {\"type\": \"init/resize/console/listdir\", \"data\": \"\"}\u003cbr/\u003e\n              init: init shell \u0026 sftp\u003cbr/\u003e\n                data: {token: \"your jwt token\", cols: 80, rows: 20, asset_id: \"host000001\"}\u003cbr/\u003e\n              resize: resize shell cols \u0026 rows\u003cbr/\u003e\n                data: {cols: 80, rows: 20}\u003cbr/\u003e\n              console: send user input\u003cbr/\u003e\n                data: xxxxxx\u003cbr/\u003e\n              listdir: send list dir request\u003cbr/\u003e\n                data: dirpath\u003cbr/\u003e\u003cbr/\u003e\n            2. client recv: {\"type\": \"console/listdir/warn/error\", \"data\": \"\"}\u003cbr/\u003e\n              console: recv console output\u003cbr/\u003e\n                data: xxxx\u003cbr/\u003e\n              listdir: recv file list\u003cbr/\u003e\n                data: {pwd: xxx, filelist: [{...}]}\u003cbr/\u003e\n              warn: recv warnning message, should be comfirm by user\u003cbr/\u003e\n                data: message\u003cbr/\u003e\n              error: error output\u003cbr/\u003e\n                data: message\u003cbr/\u003e\n\n  /terminal/v1/users:\n    get:\n      description: \"List Users\"\n      operationId: \"List Users\"\n      tags:\n        - User\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Users\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Create Users\"\n      operationId: \"Create Users\"\n      tags:\n        - User\n      security:\n        - access: []\n      requestBody:\n        description: Users to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Users\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Users\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update Users\"\n      operationId: \"Update Users\"\n      tags:\n        - User\n      security:\n        - access: []\n      requestBody:\n        description: Users to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Users\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Users\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/users/{id}:\n    get:\n      description: \"Get One User\"\n      operationId: \"Get One User\"\n      tags:\n        - User\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"admin\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/User\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    delete:\n      description: \"Delete One User\"\n      operationId: \"Delete One User\"\n      tags:\n        - User\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items deleted\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Users\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update One User\"\n      operationId: \"Update One User\"\n      tags:\n        - User\n      security:\n        - access: []\n      requestBody:\n        description: User to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/User\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/User\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/user-password:\n    post:\n      description: \"Update My Password\"\n      operationId: \"Update My Password\"\n      tags:\n        - User\n      security:\n        - access: []\n      requestBody:\n        description: \"update your own password\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/UpdatePassword\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/User\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/users/{id}/reset-password:\n    post:\n      description: \"Reset User Password\"\n      operationId: \"Reset User Password\"\n      tags:\n        - User\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"admin\"\n      requestBody:\n        description: \"password to reset, random password will be use if not specific\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/ResetPassword\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/User\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/users/{id}/menus:\n    get:\n      description: \"Get User Menus\"\n      operationId: \"Get User Menus\"\n      tags:\n        - User\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"admin\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Menus\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/users/{id}/roles:\n    get:\n      description: \"Get User Roles\"\n      operationId: \"Get User Roles\"\n      tags:\n        - User\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"admin\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Roles\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Set User Roles\"\n      operationId: \"Set User Roles\"\n      tags:\n        - User\n      security:\n        - access: []\n      requestBody:\n        description: Roles to set\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/UserRole\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Roles\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/roles:\n    get:\n      description: \"List Roles\"\n      operationId: \"List Roles\"\n      tags:\n        - Role\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Roles\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Create Roles\"\n      operationId: \"Create Roles\"\n      tags:\n        - Role\n      security:\n        - access: []\n      requestBody:\n        description: Roles to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Roles\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Roles\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update Roles\"\n      operationId: \"Update Roles\"\n      tags:\n        - Role\n      security:\n        - access: []\n      requestBody:\n        description: Roles to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Roles\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Roles\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/roles/{id}:\n    get:\n      description: \"Get One Role\"\n      operationId: \"Get One Role\"\n      tags:\n        - Role\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"SUPER_ADMIN\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/Role\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    delete:\n      description: \"Delete One Role\"\n      operationId: \"Delete One Role\"\n      tags:\n        - Role\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items deleted\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Roles\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n    patch:\n      description: \"Update One Role\"\n      operationId: \"Update One Role\"\n      tags:\n        - Role\n      security:\n        - access: []\n      requestBody:\n        description: Role to update\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/Role\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    $ref: \"#/components/schemas/Role\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/roles/{id}/menus:\n    get:\n      description: \"Get Role Menus\"\n      operationId: \"Get Role Menus\"\n      tags:\n        - Role\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"SUPER_ADMIN\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Menus\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Set Role Menus\"\n      operationId: \"Set Role Menus\"\n      tags:\n        - Role\n      security:\n        - access: []\n      requestBody:\n        description: Menus to set\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/RoleMenu\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Menus\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/roles/{id}/users:\n    get:\n      description: \"Get Role Users\"\n      operationId: \"Get Role Users\"\n      tags:\n        - Role\n      security:\n        - access: []\n      parameters:\n        - name: id\n          in: path\n          description: object id\n          required: true\n          schema:\n            type: string\n            example: \"SUPER_ADMIN\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Users\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n    post:\n      description: \"Set Role Users\"\n      operationId: \"Set Role Users\"\n      tags:\n        - Role\n      security:\n        - access: []\n      requestBody:\n        description: Users to set\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              $ref: \"#/components/schemas/RoleUser\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: array\n                    $ref: \"#/components/schemas/Users\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/menus:\n    get:\n      description: \"List Menus\"\n      operationId: \"List Menus\"\n      tags:\n        - Menu\n      security:\n        - access: []\n      parameters:\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/offset\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/orders\"\n        - $ref: \"#/components/parameters/fields\"\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Menus\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\n  /terminal/v1/user-menus:\n    get:\n      description: \"List My Menus\"\n      operationId: \"List My Menus\"\n      tags:\n        - Menu\n      security:\n        - access: []\n      responses:\n        \"200\":\n          description: Successed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    example: 200\n                  status:\n                    type: string\n                    example: \"OK\"\n                  message:\n                    type: string\n                    example: \"successed\"\n                  data:\n                    type: object\n                    properties:\n                      count:\n                        description: \"number of items found\"\n                        type: integer\n                        example: 1\n                      data:\n                        type: array\n                        $ref: \"#/components/schemas/Menus\"\n        \"401\":\n          description: Token Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: \"#/components/schemas/ErrorLogin\"\n\ncomponents:\n  securitySchemes:\n    access:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    refresh:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  parameters:\n    offset:\n      name: __offset\n      in: query\n      description: number of items to skip\n      required: false\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n        example: 0\n    limit:\n      name: __limit\n      in: query\n      description: max items to return\n      required: false\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n        example: 10\n    orders:\n      name: __orders\n      in: query\n      description: order by fields, eg. __orders=id,-created_time\n      required: false\n      schema:\n        type: string\n        example: \"-id\"\n    fields:\n      name: __fields\n      in: query\n      description: fields to return, eg. __fields=id,name\n      required: false\n      schema:\n        type: string\n    token:\n      name: authorization\n      in: header\n      description: access token\n      required: true\n      schema:\n        type: string\n        example: \"Bearer jwt-token\"\n    filter:\n      name: \"name__icontains\"\n      in: query\n      description: |\n        field to filter, eg. field__operator=value\u003cbr/\u003e\n        field scope: fields in model\u003cbr/\u003e\n        operator scope:  icontains/contains/istarts/starts/iends/ends/excludes/iexcludes/eq/ne/lt/lte/gt/gte/in/nin/null/nnull\u003cbr/\u003e\n        or shortcut for eq: field=value, shortcut for in: field[]=value1\u0026field[]=value2\u003cbr/\u003e\u003cbr/\u003e\n        icontains/contains: field like '%value%', i means ignorecase\u003cbr/\u003e\n        istarts/starts: field like 'value%', i means ignorecase\u003cbr/\u003e\n        iends/ends: field like '%value', i means ignorecase\u003cbr/\u003e\n        excludes/iexcludes: field not like '%value%', i means ignorecase\u003cbr/\u003e\n        eq/ne/lt/lte/gt/gte: obviously, means '=' / '!=' / '\u003c' / '\u003c=' / '\u003e' / '\u003e='\u003cbr/\u003e\n        in/nin: obviously\u003cbr/\u003e\n        null/nnull: value is null/ not null, eg. field__null=\n\n      required: false\n      schema:\n        type: string\n        example: \"test\"\n\n  schemas:\n    ErrorLogin:\n      type: object\n      properties:\n        title:\n          type: string\n          example: \"Unauthorized\"\n        code:\n          type: integer\n          example: 401\n        status:\n          type: string\n          example: \"ERROR\"\n        data:\n          type: object\n          example: null\n        message:\n          type: string\n          example: \"you are unauthenticated, login needed\"\n    ErrorUserPass:\n      type: object\n      properties:\n        title:\n          type: string\n          example: \"Unauthorized\"\n        code:\n          type: integer\n          example: 401\n        status:\n          type: string\n          example: \"ERROR\"\n        data:\n          type: object\n          example: null\n        message:\n          type: string\n          example: \"ops, username or password error, login deny\"\n    Assets:\n      description: \"list of assets\"\n      type: array\n      items:\n        type: object\n        $ref: \"#/components/schemas/Asset\"\n    Asset:\n      description: \"One Asset\"\n      type: object\n      required:\n        - name\n        - ip_address\n        - port\n        - username\n        - password\n      properties:\n        id:\n          description: \"id\"\n          type: string\n          example: \"host000001\"\n        name:\n          description: \"name\"\n          type: string\n          example: \"host-app-1\"\n        display_name:\n          description: \"display_name\"\n          type: string\n          example: \"subsys01-unit01-host-app-1\"\n        ip_address:\n          description: \"ssh ip address\"\n          type: string\n          example: \"127.0.0.1\"\n        port:\n          description: \"ssh port\"\n          type: integer\n          example: 22\n        username:\n          description: \"ssh user name\"\n          type: string\n          example: \"root\"\n        password:\n          description: \"ssh user password\"\n          type: string\n          example: \"password\"\n        description:\n          description: \"description\"\n          type: string\n          example: \"app-1 of something\"\n\n    FileTransfer:\n      description: \"Record of File-transfer\"\n      type: object\n      properties:\n        id:\n          description: \"id\"\n          type: integer\n          example: 1\n        asset_id:\n          description: \"asset id\"\n          type: string\n          example: \"host000001\"\n        filepath:\n          description: \"file path\"\n          type: string\n          example: \"/tmp/file\"\n        filesize:\n          description: \"file size\"\n          type: integer\n          example: 123456\n        user:\n          description: \"operation user\"\n          type: string\n          example: \"admin\"\n        operation_type:\n          description: \"operation type\"\n          type: string\n          example: \"download\"\n        started_time:\n          description: \"time when transfer started\"\n          type: string\n          example: \"2021-01-01 00:00:00\"\n        ended_time:\n          description: \"time when transfer ended\"\n          type: string\n          example: \"2021-01-01 00:01:00\"\n        status:\n          description: \"transfer status\"\n          type: string\n          example: \"OK\"\n        message:\n          description: \"transfer error message\"\n          type: string\n          example: \"\"\n        asset:\n          description: \"asset object\"\n          type: object\n          $ref: \"#/components/schemas/Asset\"\n\n    SessionRecord:\n      description: \"Record of Session Operation\"\n      type: object\n      properties:\n        id:\n          description: \"id\"\n          type: integer\n          example: 1\n        asset_id:\n          description: \"asset id\"\n          type: string\n          example: \"host000001\"\n        filepath:\n          description: \"file path\"\n          type: string\n          example: \"s3://ip:port/bucket/object_key\"\n        filesize:\n          description: \"file size\"\n          type: integer\n          example: 123456\n        user:\n          description: \"operation user\"\n          type: string\n          example: \"admin\"\n        started_time:\n          description: \"time when transfer started\"\n          type: string\n          example: \"2021-01-01 00:00:00\"\n        ended_time:\n          description: \"time when transfer ended\"\n          type: string\n          example: \"2021-01-01 00:01:00\"\n        asset:\n          description: \"asset object\"\n          type: object\n          $ref: \"#/components/schemas/Asset\"\n\n    Bookmarks:\n      description: \"list of bookmarks\"\n      type: array\n      items:\n        type: object\n        $ref: \"#/components/schemas/Bookmark\"\n    Bookmark:\n      description: \"One Bookmark\"\n      type: object\n      required:\n        - \"name\"\n        - \"expression\"\n        - \"roles\"\n      properties:\n        id:\n          description: \"id\"\n          type: integer\n          example: 1\n        name:\n          description: \"name\"\n          type: string\n          example: \"sys01 hosts\"\n        description:\n          description: \"description\"\n          type: string\n          example: \"hosts of sys01 that created\"\n        expression:\n          description: \"expression of wecube\"\n          type: string\n          example: \"wecmdb:host_resource_instance\"\n        roles:\n          description: \"auth roles\"\n          type: object\n          properties:\n            owner:\n              type: array\n              items:\n                type: string\n                example: \"SUPER_ADMIN\"\n            executor:\n              type: array\n              items:\n                type: string\n                example: \"SUPER_ADMIN\"\n\n    Permissions:\n      description: \"list of permissions\"\n      type: array\n      items:\n        type: object\n        $ref: \"#/components/schemas/Permission\"\n    Permission:\n      description: \"One Permission\"\n      type: object\n      required:\n        - name\n        - auth_upload\n        - auth_download\n        - auth_execute\n        - enabled\n      properties:\n        id:\n          description: \"id\"\n          type: integer\n          example: 1\n        name:\n          description: \"name\"\n          type: string\n          example: \"\"\n        description:\n          description: \"description\"\n          type: string\n          example: \"\"\n        auth_upload:\n          description: \"upload enabled\"\n          type: integer\n          example: 1\n        auth_download:\n          description: \"download enabled\"\n          type: integer\n          example: 1\n        auth_execute:\n          description: \"execute enabled(ssh connection)\"\n          type: integer\n          example: 1\n        enabled:\n          description: \"enabled\"\n          type: integer\n          example: 1\n        assets:\n          description: \"auth assets\"\n          type: array\n          items:\n            type: string\n            example: \"host000001\"\n        roles:\n          description: \"auth roles\"\n          type: array\n          items:\n            type: string\n            example: \"SUPER_ADMIN\"\n\n    JumpServers:\n      description: \"list of jump servers\"\n      type: array\n      items:\n        type: object\n        $ref: \"#/components/schemas/JumpServer\"\n    JumpServer:\n      description: \"One JumpServer\"\n      type: object\n      required:\n        - name\n        - scope\n        - ip_address\n        - port\n        - username\n        - password\n      properties:\n        id:\n          description: \"id\"\n          type: string\n          example: \"jserver-01\"\n        name:\n          description: \"name\"\n          type: string\n          example: \"j-dev01\"\n        scope:\n          description: \"list of cidrs\"\n          type: string\n          example: \"10.0.0.0/16;10.1.0.0/16\"\n        ip_address:\n          description: \"ssh ip address\"\n          type: string\n          example: \"127.0.0.1\"\n        port:\n          description: \"ssh port\"\n          type: integer\n          example: 22\n        username:\n          description: \"ssh user name\"\n          type: string\n          example: \"root\"\n        password:\n          description: \"ssh user password\"\n          type: string\n          example: \"password\"\n\n    Menus:\n      description: \"list of menus\"\n      type: array\n      items:\n        type: object\n        $ref: \"#/components/schemas/Menu\"\n    Menu:\n      description: \"One Menu\"\n      type: object\n      properties:\n        id:\n          description: \"id\"\n          type: string\n          example: \"menu-02\"\n        display_name:\n          description: \"display name\"\n          type: string\n          example: \"menu of asset\"\n        url:\n          description: \"url of menu\"\n          type: string\n          example: \"/assets\"\n        seq_no:\n          description: \"order of menu\"\n          type: integer\n          example: 1\n        parent:\n          description: \"parent of menu\"\n          type: string\n          example: \"menu-01\"\n        is_active:\n          description: \"is active [yes or no]\"\n          type: string\n          example: \"yes\"\n\n    Roles:\n      description: \"list of roles\"\n      type: array\n      items:\n        type: object\n        $ref: \"#/components/schemas/Role\"\n    Role:\n      description: \"One Role\"\n      type: object\n      required:\n        - id\n        - description\n        - is_system\n      properties:\n        id:\n          description: \"id\"\n          type: string\n          example: \"config_manager\"\n        description:\n          description: \"description\"\n          type: string\n          example: \"role of config manager\"\n        is_system:\n          description: \"is system [yes or no]\"\n          type: string\n          example: \"yes\"\n\n    Users:\n      description: \"list of users\"\n      type: array\n      items:\n        type: object\n        $ref: \"#/components/schemas/User\"\n    User:\n      description: \"One User\"\n      type: object\n      required:\n        - id\n        - display_name\n        - password\n      properties:\n        id:\n          description: \"id\"\n          type: string\n          example: \"test01\"\n        display_name:\n          description: \"name\"\n          type: string\n          example: \"test user 01\"\n        password:\n          description: \"password\"\n          type: string\n          example: \"password\"\n        description:\n          description: \"description\"\n          type: string\n          example: \"description\"\n        is_system:\n          description: \"is system [yes or no]\"\n          type: string\n          example: \"yes\"\n    ResetPassword:\n      description: \"Reset Password\"\n      type: object\n      properties:\n        password:\n          description: \"password\"\n          type: string\n          example: \"password\"\n    UserRole:\n      description: \"Bind Role of User\"\n      type: array\n      items:\n        type: string\n        example: \"config_manager\"\n    RoleMenu:\n      description: \"Bind Menu of Role\"\n      type: array\n      items:\n        type: string\n        example: \"menu02\"\n    RoleUser:\n      description: \"Bind User of Role\"\n      type: array\n      items:\n        type: string\n        example: \"test01\"\n    Tokens:\n      description: \"List of token\"\n      type: array\n      items:\n        type: object\n        $ref: \"#/components/schemas/Token\"\n    Token:\n      description: \"Token\"\n      type: object\n      properties:\n        expiration:\n          description: \"unix time of expiration\"\n          type: string\n          example: \"1629700000\"\n        token:\n          description: \"token\"\n          type: string\n          example: \"jwt token here\"\n        tokenType:\n          description: \"tokenType[accessToken or refreshToken]\"\n          type: string\n          example: \"accessToken\"\n    UpdatePassword:\n      description: \"Reset Password\"\n      type: object\n      required:\n        - newPassword\n        - oldPassword\n      properties:\n        newPassword:\n          description: \"newPassword\"\n          type: string\n          example: \"newPassword\"\n        oldPassword:\n          description: \"oldPassword\"\n          type: string\n          example: \"oldPassword\"\n    UserPassword:\n      description: \"User Password\"\n      type: object\n      required:\n        - username\n        - password\n      properties:\n        username:\n          description: \"username\"\n          type: string\n          example: \"username\"\n        password:\n          description: \"password\"\n          type: string\n          example: \"password\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /terminal/v1/jumpservers/{id}: delete: operation \"Delete One JumpServer\": parse path: path parameter not specified: \"id\""
}