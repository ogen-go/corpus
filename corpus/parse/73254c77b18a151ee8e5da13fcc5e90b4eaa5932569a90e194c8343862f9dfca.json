{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kurusugawa-computer/annofab-api-python-client"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "generate/swagger/swagger.yaml",
			"byteSize": 218010,
			"content": "\nopenapi: \"3.0.0\"\ninfo:\n  description: |\n    [Annofab](https://annofab.com) のWeb APIです。\n    キャッシュが有効になって[大幅に高速化された v2 はこちら](/docs/api/v2/) です。\n\n    APIベースURL: https://annofab.com/api/v1\u003cbr\u003e\n    例） /projects というAPIを使う場合、 https://annofab.com/api/v1/projects をリクエストします。\n\n\n    ■APIの変更ポリシー\n\n    **現在、APIは開発途上版です。予告なく互換性のない変更がある可能性をご了承ください。**\n    ご要望の実現、あるいは、セキュリティやパフォーマンスの改善などを実現するにあたり、互換性のない変更が必要になる場合があります。\n    その場合、開発途上版では開発リソースを改善に集中するため、古いバージョンを共存させずに互換性のない変更を行う場合があります。\n\n\n    ■機能の要望や不具合報告\n\n    「こんな機能が欲しい」というご要望や、「APIが予期せぬ動作をする」といった不具合報告などは、[こちらのお問い合わせフォーム](https://docs.google.com/forms/d/e/1FAIpQLSePryikS_wo_H11pxL2ewUe2d0ud0jxZlBQwH2rVVfcifKyQw/viewform)からご連絡ください。\n\n    # SDKとツール\n    * [annofab-api-python-client](https://github.com/kurusugawa-computer/annofab-api-python-client)：AnnofabのPython SDKです。\n    * [annofab-cli](https://github.com/kurusugawa-computer/annofab-cli)：AnnofabのCLIです。\n\n    # API Convention\n\n    ## 用語\n\n    * **属性○○○を必須**とは、「JSONに属性キー○○○を含め、かつ、その値が`null`以外」であること\n    * **属性○○○を未指定**とは、「JSONに属性キー○○○を含めない」または「属性○○○のキーはあるが値は`null`」のどちらかであること\n\n    ## 更新系APIのリクエストボディに必須の属性\n\n    * 更新系APIとは、HTTPメソッドが **PUT** または **POST** のAPIです。\n    * 更新系APIでは、更新対象の「リソースの最終更新日」を必須とする場合があります。\n      * これは、複数ユーザーからのAPIリクエストのデータ競合を避けるための、一般的なAPI設計慣習によるものです。\n      * ここで「リソースの最終更新日」とは、`last_updated_datetime` または `updated_datetime` という名前の属性です。\n      * 一部のAPIでは、操作対象リソースと別のリソースの最終更新日を必要とします。\n        その場合は、`last_***_update_datetime` のような名前です（***には別リソースが入ります）。\n      * **新規作成のとき**は、リクエストボディの「リソースの最終更新日」を未指定にします。\n        * リソースがすでに作成されているときは、新規作成リクエストは失敗します。\n      * **存在するリソースを更新または削除するとき**は、リクエストボディの「リソースの最終更新日」に、そのリソースの現在の`updated_datetime`を指定します。\n        * 更新しようとしたリソースが存在しないとき、またはすでに更新されているときは、更新リクエストは失敗します。\n    * 「リソースの最終更新日」以外の属性については、新規作成/更新それぞれで必須が異なる場合、API個別に特筆されています。\n\n    ## APIのリクエストボディに指定する _type 属性について\n\n    * 一部のAPIではリクエストボディに `_type` 属性を任意で指定することができます。\n    * `_type` 属性を指定する場合は、`_type` 属性で指定された型にデコードします。\n      例えば、`_type` 属性に `ByDirectory` を指定すると `TaskGenerateRuleByDirectory` にデコードされ、`Polyline` を指定すると `InspectionDataPolyline` にデコードされます。\n      リクエストボディが誤っている場合はエラーになります。\n    * `_type` 属性を指定しない場合は、リクエストボディで指定された `_type` 以外の属性からデコードすべき型を推論します。適切な型が見つからない場合はエラーになります。\n    * `_type` 属性は「推論が失敗して別の型にデコードされる」ことを防ぐために指定することを推奨します。しかし、利便性のために一部APIを除き指定は必須ではありません。\n\n    ## APIに指定するID/名前の制約\n\n    * APIで使用する各データのIDに使用できる文字種は次の通りです。\n      * 半角英数字\n      * `_` (アンダースコア)\n      * `-` (ハイフン)\n      * `.` (ドット)\n    * 特に制限がない限り、IDはUUID version4形式とすることを推奨します。\n      * 例） `b048c6b3-b36f-4c8d-97ea-96828a50a44c`\n    * 各データのIDは、以下のように特定のデータに対して一意な値である必要があります。\n\n    ID/名前 | 一意制約\n    ---|---\n    組織名 | Annofab内で一意\n    組織ID | Annofab内で一意\n    ユーザーID | Annofab内で一意\n    アカウントID  | Annofab内で一意\n    プロジェクトID | Annofab内で一意\n    タスクID（プレフィックス含む） | プロジェクト内で一意\n    入力データID | プロジェクト内で一意\n    アノテーションID | フレーム内（タスクID、入力データIDの組み合わせ）で一意\n    検査ID | プロジェクト内で一意\n    補助情報ID | プロジェクト内で一意\n    WebhookID | プロジェクト内で一意\n    作業ガイド画像ID | プロジェクト内で一意\n    ラベルID | プロジェクト内で一意\n    属性ID | プロジェクト内で一意\n    選択肢ID | 属性内で一意\n    ジョブID | プロジェクト内で一意\n    入力データセットID | 組織内で一意\n    プラグインID | 組織内で一意\n\n    ## 検索結果の集約を表す AggregationResult\n\n    いくつかの検索系 API の検索結果レスポンスは、`AggregationResult` というデータ構造のフィールドを持っています。\n    `AggregationResult` は、検索対象リソースをある観点で集約した結果を表します。\n    このような集約は、「検索結果を属性 XXX の件数別に分類」などするために使われます。\n\n    例えば、タスクを検索する API には、以下のような「タスクの現在担当者での集約 `account_id_count`」などの `AggregationResult` がいくつか含まれています。\n\n    ```json\n    {\n      \"list\": [ ... ],\n      \"aggregations\": [\n        {\n          \"_type\": \"CountResult\",\n          \"name\": \"account_id_count\",\n          \"field\": \"account_id\",\n          \"docCount\": 15,\n          \"items\": [\n            {\"key\":\"c5eee002\", \"count\":9, \"aggregations\":[], \"_type\":\"...\"},\n            {\"key\":\"9f110e48\", \"count\":5, \"aggregations\":[], \"_type\":\"...\"},\n            {\"key\":\"b25dfeb3\", \"count\":1, \"aggregations\":[], \"_type\":\"...\"}\n          ]\n        }\n      ]\n    }\n    ```\n\n    上記例 `account_id_count` は、タスクのフィールド `account_id` でタスクを分類したところ「`account_id` が `c5eee002` であるタスクが9件、`9f110e48` であるタスクが5件、`b25dfeb3` であるタスクが1件」だったという結果を表しています。\n    また、AggregationResultの集約の件数は、合計で10000件以下に制限されており、それを超える件数がある場合は上位10000件が取得されます。もし、省略された部分を取得したい場合は、検索条件を縛って結果に上る集約の数を減らしてください。\n\n  version: 0.146.0\n  title: AnnoFab Web API\n  x-logo:\n    url: \"https://annofab.com/resource/images/logo_landscape.png\"\n    href: \"https://annofab.com/\"\n  contact:\n    url: \"https://annofab.com/docs/forms/trouble-shooting.html\"\nservers:\n- url: https://annofab.com/api/v1\ntags:\n- name: af-annotation\n  x-displayName: Annotation\n  description: アノテーションに対する操作\n- name: af-annotation-specs\n  x-displayName: Annotation Specs\n  description: アノテーション仕様に対する操作\n- name: af-comment\n  x-displayName: Comment\n  description: コメントに対する操作\n- name: af-input\n  x-displayName: Input\n  description: |\n    入力データに対する操作\n\n    入力データは、Annofabにファイルをアップロードして利用します。ビジネスプランでは、プライベートストレージにあるファイルを入力データとして利用することも可能です。\n\n- name: af-inspection\n  x-displayName: Inspection\n  description: 検査コメントに対する操作\n- name: af-instruction\n  x-displayName: Instruction\n  description: 作業ガイドに対する操作\n- name: af-job\n  x-displayName: Job\n  description: バッチ処理ジョブに対する操作\n- name: af-login\n  x-displayName: Login\n  description: ログイン関連の操作\n- name: af-my\n  x-displayName: My\n  description: 自身のリソースに対する操作\n- name: af-organization\n  x-displayName: Organization\n  description: 組織に対する操作\n- name: af-organization-input\n  x-displayName: Organization Input\n  description: |\n    入力データセットと入力データに対する操作\n\n    **入力データセットに関するAPIは開発中のため、予告なく変更されることがあります。**\n\n    **入力データセット**とは、プロジェクトが用いる入力データの集合です。入力データセットは組織に所属します。\n    現時点では入力データセットはプロジェクトを新規作成するごとに一つずつ作成されるようになっています。\n    将来的にプロジェクトの新規作成時に同じ組織の別のプロジェクトの入力データセットを指定して入力データを共有できるようにする機能のリリースを予定しています。\n- name: af-organization-member\n  x-displayName: Organization Member\n  description: 組織メンバーに対する操作\n- name: af-organization-plugin\n  x-displayName: Organization Plugin\n  description: |\n    組織で使用するプラグインに対する操作\n\n    **このAPIは Annofab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n- name: af-project\n  x-displayName: Project\n  description: プロジェクトに対する操作\n- name: af-project-member\n  x-displayName: Project Member\n  description: プロジェクトメンバーに対する操作\n- name: af-statistics\n  x-displayName: Statistics\n  description: 統計に関する操作\n- name: af-supplementary\n  x-displayName: Supplementary\n  description: |\n    補助情報に対する操作です。\n\n    補助情報とは、アノテーションする対象となる[入力データ](#tag/af-input)では*ありません*が、\n    アノテーションするときに何らかの手がかりや文脈を与えるデータのことです。\n    例えば、次のようなものです。\n    * 現在の写真に対する、過去の写真\n    * 光学写真に対する、暗視写真\n    * 前方を撮影した写真に対する、左側面・右側面・後方の写真\n    * 写真や動画を撮影した日時、緯度経度、撮影者などのメタデータ（テキスト）\n\n    補助情報は入力データに紐付けられています。\n\n    補助情報は、Annofabにファイルをアップロードして利用します。ビジネスプランでは、プライベートストレージにあるファイルを補助情報として利用することも可能です。\n\n\n- name: af-task\n  x-displayName: Task\n  description: タスクに対する操作\n- name: af-webhook\n  x-displayName: Webhook\n  description: Webhookに対する操作\n- name: x-annotation-zip\n  x-displayName: Annotation ZIP\n  description: |\n    Annofabで作成したアノテーションは、元となった入力データ（画像や動画など）に対応する形で1ファイルのJSONとなります。\n    これらのJSONはZIP形式で圧縮され、一括で取得できます。\n\n    アノテーションZIPには、SimpleアノテーションとFullアノテーションの2種類があります。ただし、Fullアノテーションは非推奨です。\n\n    ## Simple Annotation ZIP\n    [getAnnotationArchive](#operation/getAnnotationArchive) APIで取得できます。\n\n    ### ZIPファイル内の構造\n\n    ```\n    SimpleアノテーションZIP/\n    ├── {タスクID}/\n    │   ├── {入力データID}.json              アノテーションのデータ\n    │   ├── {入力データID}/\n    │   │   ├── {アノテーションデータID}    塗りつぶしのPNG画像\n    ```\n\n    ### アノテーションJSONデータの構造\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/SimpleAnnotation\" /\u003e\n\n    ## Full Annotation ZIP\n    Fullアノテーションに含まれるアノテーションJSONは、画像やアノテーションやアノテーション作成者など管理用の詳細情報が付随しています。\n    [getArchiveFullWithProId](#operation/getArchiveFullWithProId) APIで取得できます。\n\n    **Fullアノテーションは非推奨です。**\n\n    ### ZIPファイル内の構造\n    ```\n    FullアノテーションZIP/\n    ├── {タスクID}/\n    │   ├── {入力データID}.json              アノテーションのデータ\n    │   ├── {入力データID}/\n    │   │   ├── {アノテーションデータID}    塗りつぶしのPNG画像\n    ```\n\n    ### アノテーションJSONデータの構造\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/FullAnnotation\" /\u003e\n\n- name: x-data-types\n  x-displayName: Data Types\n  description: |\n    # Task\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/Task\" /\u003e\n\n    # TaskHistory\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/TaskHistory\" /\u003e\n\n    # TaskHistoryEvent\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/TaskHistoryEvent\" /\u003e\n\n    # Inspection\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/Inspection\" /\u003e\n\n    # InputDataType\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/InputDataType\" /\u003e\n\n    # Comment\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/Comment\" /\u003e\n\n    # TaskStatus\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/TaskStatus\" /\u003e\n\n    # TaskPhase\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/TaskPhase\" /\u003e\n\n    # AnnotationId\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/AnnotationId\" /\u003e\n\n    # InputData\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/InputData\" /\u003e\n\n    # ProjectJobType\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ProjectJobType\" /\u003e\n\n    # OrganizationJobType\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/OrganizationJobType\" /\u003e\n\n    # GraphType\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/GraphType\" /\u003e\n\n    # AnnotationQuery\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/AnnotationQuery\" /\u003e\n\n\n    # ArrayOfLabelStatistics\n\n    アノテーションラベルごとに以下の項目を集計したデータです。\n    * 受入が完了したアノテーション数\n    * 受入が完了していないアノテーション数\n\n    \u003cSchemaDefinition schemaRef=\"swagger-api-components.yaml#/components/schemas/ArrayOfLabelStatistics\" /\u003e\n\nx-tagGroups:\n  - name: API\n    tags:\n      - af-annotation\n      - af-annotation-specs\n      - af-comment\n      - af-input\n      - af-inspection\n      - af-instruction\n      - af-job\n      - af-login\n      - af-my\n      - af-organization\n      - af-organization-input\n      - af-organization-member\n      - af-organization-plugin\n      - af-project\n      - af-project-member\n      - af-statistics\n      - af-supplementary\n      - af-task\n      - af-webhook\n  - name: Appendix\n    tags:\n      - x-annotation-zip\n      - x-data-types\ncomponents:\n  securitySchemes:\n    EveryoneRequestBody:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/EveryoneRequestBody\"\n    EveryoneQueryParameter:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/EveryoneQueryParameter\"\n    Everyone:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/Everyone\"\n    AnnofabAdminOnly:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/AnnofabAdminOnly\"\n    AllProjectMember:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/AllProjectMember\"\n    ProjectAccepter:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/ProjectAccepter\"\n    ProjectDataUser:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/ProjectDataUser\"\n    ProjectAccepterOrDataUser:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/ProjectAccepterOrDataUser\"\n    ProjectOwner:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/ProjectOwner\"\n    AllOrganizationMember:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/AllOrganizationMember\"\n    OrganizationAdministrator:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/OrganizationAdministrator\"\n    OrganizationOwner:\n      $ref: \"swagger-api-components.yaml#/components/securitySchemes/OrganizationOwner\"\npaths:\n  /login:\n    post:\n      tags:\n      - af-login\n      summary: ログイン\n      description: |\n        ログインして、APIの認証に必要なトークンを取得します。\n\n        なりすましなどの悪用を防ぐため、トークンは他人に教えたり外部に公開しないでください。\n      security:\n      - EveryoneRequestBody: []\n      operationId: login\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/LoginRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/LoginResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /logout:\n    post:\n      tags:\n      - af-login\n      summary: ログアウト\n      description: ログアウトします。\n      security:\n      - EveryoneRequestBody: []\n      operationId: logout\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/Token\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /refresh-token:\n    post:\n      tags:\n      - af-login\n      summary: トークンの再発行\n      description: |\n        トークンを再発行します。\n        IDトークンやアクセストークンの有効期限が切れた場合に使います。\n\n        リフレッシュトークンの有効期限が切れた場合は、本APIでは再発行できません。代わりに、[login API](#operation/login)を実行してください。\n      security:\n      - EveryoneRequestBody: []\n      operationId: refreshToken\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/RefreshTokenRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Token\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorRefreshTokenExpired\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /plugin-token:\n    post:\n      tags:\n        - af-login\n      summary: プラグイン用トークン発行\n      description: |\n        プラグイン用のトークンを発行します。\n        ここで発行されるアクセストークンは、プラグインの種別に応じた範囲のAPIアクセスに使用することができます。\n\n        現時点ではカスタムアノテーションエディタ用のプラグインのみに対応しています。\n\n        #### authorization_code を使う場合 (PluginTokenRequestAuthorizationCode)\n        1. プラグイン: PKCE (RFC 7636) の code_challenge_method=S256 の場合に準ずる形で `code_verifier` `code_challenge`  を生成\n        1. プラグイン: `https://annofab.com/project/{project_id}/authorize-plugin?plugin_type={plugin_type}\u0026code_challenge={code_challenge}` へリダイレクト\n          - `plugin_type` はカスタムアノテーションエディタの場合は `AnnotationEditor` を、カスタムアノテーション仕様の場合は `AnnotationSpecs` を指定\n        1. Annofab: リクエストやユーザー権限の確認後、プラグインの auth_redirect_url に設定されたURLへクエリパラメータ `code` つきでリダイレクト\n        1. プラグイン: 本APIに上記 code および1で生成した code_verifier を渡し、access_token と refresh_token を得る\n\n        code付きでカスタムエディタにリダイレクトする際のURLは、タスク一覧等からのリダイレクトに使うURLとは別に設定し、projectIdやtaskIdは含まれません。\n        Annofabへリダイレクトする前に `location.href` などを保存しておき、トークン取得後にURL書き換えやリダイレクトを行うことを推奨します。\n\n        この手順で取得したaccess_tokenを使って他のAPIをリクエストする際には `Authorization: Bearer \u003caccess_token\u003e` としてBearer付きでアクセスしてください。\n\n        #### refresh_token を使う場合 (PluginTokenRequestRefreshToken)\n        1. プラグイン: 前回のトークン発行時に access_token と共に発行される refresh_token を記憶しておく\n        1. プラグイン: 本APIに上記 refresh_token を渡し、 access_token と refresh_token を得る\n      security:\n        - EveryoneRequestBody: []\n      operationId: requestPluginToken\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PluginTokenRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/PluginTokenResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/account:\n    get:\n      tags:\n      - af-my\n      summary: 自分のアカウント取得\n      description: |\n        自分のアカウント情報を取得します。\n      security:\n      - Everyone: []\n      operationId: getMyAccount\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/MyAccount\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-my\n      summary: 自分のアカウント情報更新\n      description: |\n        自分のアカウント情報を更新します。\n      security:\n      - Everyone: []\n      operationId: putMyAccount\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutMyAccountRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/MyAccount\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/project-members:\n    get:\n      tags:\n      - af-my\n      summary: 自分のプロジェクトメンバー情報一括取得\n      description: |\n        自分が所属するプロジェクトのメンバー情報を一括で取得します。\n      security:\n      - Everyone: []\n      operationId: getMyProjectMembers\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMember\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n  /organizations:\n    post:\n      tags:\n        - af-organization\n      summary: 組織の作成\n      description: |\n        組織を作成します。\n\n        リクエストボディの`price_plan`には、`free`のみ指定できます。\n        ビジネスプランの組織を作成する場合は、[セールスチーム](https://annofab.com/docs/forms/contact-sales.html)までお問い合わせください。\n\n        既に存在する組織名をリクエストボディに指定すると、400エラーが発生します。\n      security:\n        - Everyone: []\n      operationId: createNewOrganization\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationRegistrationRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/organizations:\n    get:\n      tags:\n      - af-my\n      summary: 所属組織の一括取得\n      description: |\n        自分が所属している組織を一括で取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getMyOrganizations\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/MyOrganizationList\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      deprecated: true\n      tags:\n      - af-my\n      summary: 組織名の変更\n      description: |\n        組織名を変更します。\n\n        2022/04/19以降に廃止する予定です。\n      security:\n      - OrganizationOwner: []\n      operationId: updateOrganization\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/UpdateOrganizationNameRequest\"\n      responses:\n        \"200\":\n          description: 変更に成功すると、その組織\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: 先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorAlreadyUpdated\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}:\n    get:\n      tags:\n      - af-organization\n      summary: 組織の取得\n      description: |\n        組織を取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganization\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n        - af-organization\n      summary: 組織の更新\n      description: |\n        組織を更新します。\n      security:\n        - OrganizationOwner: []\n      operationId: putOrganization\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutOrganizationRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: 先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorAlreadyUpdated\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n        - af-organization\n      summary: 組織の削除\n      description: |\n        組織を完全に削除します。\n\n        組織内のプロジェクトが1件も存在しない場合のみ削除できます。\n        組織を削除したい場合は全てのプロジェクトを削除してください。\n\n\n        **削除された組織は元に戻せません。ご注意ください。**\n      security:\n        - OrganizationOwner: []\n      operationId: deleteOrganization\n      parameters:\n        - name: organization_name\n          in: path\n          description: 組織名\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: プロジェクトが存在する組織を削除しようとした\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/projects:\n    get:\n      tags:\n      - af-organization\n      summary: 組織配下プロジェクトの一括取得\n      description: |\n        指定した組織のプロジェクトを一括で取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getProjectsOfOrganization\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n      - name: page\n        in: query\n        description: |\n          表示するページ番号\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 30\n          maximum: 200\n      - name: account_id\n        in: query\n        description: |\n          指定したアカウントIDをメンバーに持つプロジェクトで絞り込む。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n      - name: except_account_id\n        in: query\n        description: |\n          指定したアカウントIDをメンバーに持たないプロジェクトで絞り込む。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n      - name: title\n        in: query\n        description: |\n          プロジェクトタイトルでの部分一致検索。大文字小文字は区別しません。\n        required: false\n        schema:\n          type: string\n          minLength: 1\n      - name: status\n        in: query\n        description: |\n          指定した状態のプロジェクトで絞り込む。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectStatus\"\n      - name: plugin_id\n        in: query\n        description: |\n          指定したプラグインIDを使用しているプロジェクトで絞り込む。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/PluginId\"\n      - name: input_data_type\n        in: query\n        description: |\n          入力データの種類でプロジェクトを絞り込みます。[詳細はこちら](#section/InputDataType)を参照してください。\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataType\"\n      - name: sort_by\n        in: query\n        description: |\n          `date` を指定することでプロジェクトの最新のタスク更新時間の順にソートして出力する。\n          未指定時はプロジェクト名でソートする。\n        required: false\n        schema:\n          type: string\n          example: date\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members:\n    get:\n      tags:\n      - af-organization-member\n      summary: 組織メンバー一括取得\n      description: |\n        組織メンバーを一括で取得します。\n\n        ただし、組織から脱退したメンバーは取得できません。\n\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganizationMembers\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMemberList\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members/{user_id}:\n    get:\n      tags:\n      - af-organization-member\n      summary: 組織メンバー取得\n      description: |\n        組織メンバーを取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganizationMember\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザーID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMember\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-organization-member\n      summary: 組織メンバーの削除\n      description: |\n        組織メンバーを削除します。削除された組織メンバーの`status`は`inactive`になります。\n      security:\n      - OrganizationAdministrator: []\n      operationId: deleteOrganizationMember\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザーID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      responses:\n        \"200\":\n          description: 正常。削除したメンバーを返します\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMember\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members/{user_id}/role:\n    put:\n      tags:\n      - af-organization-member\n      summary: 組織メンバーのロール更新\n      description: |\n        組織メンバーのロールを変更します。\n      security:\n      - OrganizationOwner: []\n      operationId: updateOrganizationMemberRole\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザーID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutOrganizationMemberRoleRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMember\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members/{user_id}/invitation:\n    post:\n      tags:\n      - af-organization-member\n      summary: ユーザーを組織に招待\n      description: |\n        指定したユーザーを組織に招待します。招待されたユーザーにはメールが届きます。メールに記載されたURLにアクセスすることで組織に参加することができます。\n      security:\n      - OrganizationAdministrator: []\n      operationId: inviteOrganizationMember\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザーID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/InviteOrganizationMemberRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationMember\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/members/{user_id}/invitation/accept:\n    post:\n      tags:\n      - af-organization-member\n      summary: 組織への招待の受諾\n      description: |\n        組織への招待を受諾し、組織へのメンバー登録を完了します。\n\n      security:\n      - EveryoneRequestBody: []\n      operationId: acceptOrganizationInvitation\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          type: string\n      - name: user_id\n        in: path\n        description: ユーザーID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/AcceptOrganizationInvitationRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/activity:\n    get:\n      tags:\n      - af-organization\n      summary: 組織の活動状況の取得\n      description: |\n        Annofabストレージの使用量など、組織の活動状況を取得します。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganizationActivity\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationActivity\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/plugins:\n    get:\n      operationId: getOrganizationPlugins\n      summary: プラグインの一括取得\n      description: |\n        プラグインを一括で取得します。\n\n        **この API は Annofab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n      tags:\n        - af-organization-plugin\n      security:\n        - AllOrganizationMember: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationPluginList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/plugins/{plugin_id}:\n    get:\n      operationId: getOrganizationPlugin\n      summary: プラグインの取得\n      description: |\n        プラグインを取得します。\n\n        **この API は Annofab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n      tags:\n        - af-organization-plugin\n      security:\n        - AllOrganizationMember: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: plugin_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/PluginId\"\n          description: プラグインID\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationPlugin\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      operationId: putOrganizationPlugin\n      summary: プラグインの作成/更新\n      description: |\n        プラグインを作成または更新します。\n\n        **この API は Annofab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n      tags:\n        - af-organization-plugin\n      security:\n        - OrganizationAdministrator: []\n        - OrganizationOwner: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: plugin_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/PluginId\"\n          description: プラグインID\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutOrganizationPluginRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationPlugin\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      operationId: deleteOrganizationPlugin\n      summary: プラグインの削除\n      description: |\n        プラグインを削除します。\n\n        **この API は Annofab に許可された組織だけで使用できます。またアルファ版につき、予告なく変更されることがあります。**\n      tags:\n        - af-organization-plugin\n      security:\n        - OrganizationAdministrator: []\n        - OrganizationOwner: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: plugin_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/PluginId\"\n          description: プラグインID\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationPlugin\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/input_data_set:\n    get:\n      operationId: getInputDataSetList\n      summary: 入力データセットの一括取得\n      description: |\n        入力データセットを一括で取得します。\n      tags:\n        - af-organization-input\n      security:\n        - OrganizationAdministrator: []\n        - OrganizationOwner: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSet\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/input_data_set/{input_data_set_id}:\n    get:\n      operationId: getInputDataSet\n      summary: 入力データセット情報取得\n      description: |\n        入力データセットを取得します。\n\n        組織オーナーまたは組織管理者でない場合は、自身が所属するプロジェクトの入力データセットのみが取得できます。\n      tags:\n        - af-organization-input\n      security:\n        - AllOrganizationMember: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSet\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      operationId: putInputDataSet\n      summary: 入力データセットの作成/更新\n      description: |\n        入力データセットを作成または更新します。\n      tags:\n        - af-organization-input\n      security:\n        - OrganizationAdministrator: []\n        - OrganizationOwner: []\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutInputDataSetRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSet\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/input_data_set/{input_data_set_id}/inputs:\n    get:\n      tags:\n        - af-organization-input\n      summary: 入力データセット内の入力データの一括取得\n      description: |\n        入力データセットに含まれる入力データを一括で取得します。\n\n        組織オーナーまたは組織管理者でない場合は自身が所属するプロジェクトの入力データセット内の入力データのみが取得できます。\n      security:\n        - AllOrganizationMember: []\n      operationId: getOrganizationInputDataList\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n        - name: input_data_id\n          in: query\n          description: 入力データIDでの部分一致検索で使用。\n          required: false\n          schema:\n            type: string\n            minLength: 1\n        - name: input_data_name\n          in: query\n          description: 入力データ名での部分一致検索で使用。\n          required: false\n          schema:\n            type: string\n            minLength: 1\n        - name: input_data_path\n          in: query\n          description: 入力データパスでの部分一致検索で使用。\n          required: false\n          schema:\n            type: string\n            minLength: 1\n        - name: task_id\n          in: query\n          description: 入力データが紐づくタスクIDの部分一致検索で使用。条件に合致した先頭100件のタスクに使われている入力データを検索します。\n          required: false\n          schema:\n            type: string\n            minLength: 1\n        - name: from\n          in: query\n          description: 指定した日時以降に更新された入力データを取得します。日時のフォーマットはISO 8601 拡張形式です。\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: 指定した日時以前に更新された入力データを取得します。日時のフォーマットはISO 8601 拡張形式です。\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: page\n          in: query\n          description: 検索結果のうち、取得したいページの番号(1始まり）\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            default: 1\n        - name: limit\n          in: query\n          description: 1ページあたりの取得するデータ件数\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 200\n            default: 30\n      responses:\n        \"200\":\n          description: 指定された条件にあてはまる入力データを返します。条件にあてはまる入力データが多数に及ぶことがあるので、すべての結果を得るにはページングしてください。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/input_data_set/{input_data_set_id}/inputs/{input_data_id}:\n    get:\n      tags:\n        - af-organization-input\n      summary: 入力データセット内の入力データの取得\n      description: |\n        入力データセットに含まれる入力データを取得します。\n\n        組織オーナーまたは組織管理者でない場合は自身が所属するプロジェクトの入力データセット内の入力データのみが取得できます。\n      security:\n        - AllOrganizationMember: []\n      operationId: getOrganizationInputData\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n        - af-organization-input\n      summary: 入力データセット内の入力データの削除\n      description: |\n        入力データセットに含まれる入力データ情報を削除します。\n      security:\n        - OrganizationAdministrator: []\n        - ProjectOwner: []\n      operationId: deleteOrganizationInputData\n      parameters:\n        - name: organization_name\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n          description: 組織名\n        - name: input_data_set_id\n          in: path\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataSetId\"\n          description: 入力データセットID\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/projects:\n    get:\n      tags:\n      - af-my\n      summary: 所属プロジェクトの一括取得\n      description: |\n        自分が所属しているプロジェクトを一括で取得します。\n      security:\n      - Everyone: []\n      operationId: getMyProjects\n      parameters:\n      - name: page\n        in: query\n        description: |\n          表示するページ番号\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 0\n          default: 30\n          maximum: 200\n      - name: organization_id\n        in: query\n        description: |\n          指定した組織に属するプロジェクトに絞り込む。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationId\"\n      - name: title\n        in: query\n        description: |\n          プロジェクトタイトルでの部分一致検索。大文字小文字は区別しません。\n        required: false\n        schema:\n          type: string\n          minLength: 1\n      - name: status\n        in: query\n        description: |\n          指定した状態のプロジェクトで絞り込む。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectStatus\"\n      - name: input_data_type\n        in: query\n        description: |\n          入力データの種類でプロジェクトを絞り込みます。[詳細はこちら](#section/InputDataType)を参照してください。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataType\"\n      - name: sort_by\n        in: query\n        description: |\n          `date` を指定することでプロジェクトの最新のタスク更新時間の順にソートして出力する。\n          未指定時はプロジェクト名でソートする。\n        required: false\n        schema:\n          type: string\n          example: date\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectContainer\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}:\n    get:\n      tags:\n      - af-project\n      summary: プロジェクト取得\n      description: |\n        プロジェクトを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getProject\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Project\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-project\n      summary: プロジェクト作成/更新\n      description: |\n        プロジェクトを新規作成または更新します。\n\n        ### 新規作成する場合\n        ユーザーは、作成するプロジェクトをひもづける組織の [OrganizationAdministrator](#section/Authentication/OrganizationAdministrator) である必要があります。\n\n        ### 更新する場合\n        ユーザーは、更新するプロジェクトの [ProjectOwner](#section/Authentication/ProjectOwner) である必要があります。\n        また所属組織を変更する場合は、新しくひもづける組織の [OrganizationAdministrator](#section/Authentication/OrganizationAdministrator) である必要があります。\n\n        なお、プロジェクト状態を「停止中」にした場合、アノテーションZIPやタスク進捗状況などの集計情報は自動更新されなくなります。\n\n        所属組織が変更された場合バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`move-project`）。\n\n        APIの制限事項は、以下の通りです。\n         * `status`を`initializing`に変更できません。\n         * `status`が`initializing`のときは、所属組織を変更できません。\n\n      security:\n      - OrganizationAdministrator: []\n        ProjectOwner: []\n      operationId: putProject\n      parameters:\n      - name: project_id\n        in: path\n        description: |\n          プロジェクトID。[値の制約についてはこちら。](#section/API-Convention/APIID)\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: v\n        in: query\n        description: |\n          APIの戻り型のバージョンを指定します。\n          値と戻り型の対応は以下です。\n          - \"1\"：Project\n          - \"2\"：PutProjectResponse\n        required: false\n        schema:\n          type: string\n          default: \"1\"\n          example: \"2\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutProjectRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Project\"\n        \"202\":\n          description: 組織変更実施時\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/PutProjectResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"409\":\n          description: 現在のプロジェクトやタスクの状態ではできない操作をしようとした、またはジョブの同時実行制限による失敗（所属組織を変更した場合）\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-project\n      summary: プロジェクト削除\n      description: |\n        プロジェクトを完全に削除します。\n        アノテーション仕様、タスク、入力データ、アノテーションなど、プロジェクト配下のリソースがすべて削除されます。\n\n        **削除されたプロジェクトは元に戻せません。**\n        完了したプロジェクトは削除せず、プロジェクトの状態を「停止中」に変更するのを推奨します。\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`delete-project`）。\n\n      security:\n      - ProjectOwner: []\n      operationId: deleteProject\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"202\":\n          description: バッチにてプロジェクトの削除開始\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/DeleteProjectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: 停止中ではないプロジェクトを削除しようとした、またはジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/organization:\n    get:\n      tags:\n      - af-project\n      summary: プロジェクトの所属組織取得\n      description: |\n        プロジェクトが所属する組織を取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getOrganizationOfProject\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Organization\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/copy:\n    post:\n      tags:\n      - af-project\n      summary: プロジェクトのコピー\n      description: |\n        プロジェクトをコピーします。\n\n        以下のデータがコピーされます。\n        * プロジェクト設定\n        * プロジェクトメンバー\n        * アノテーション仕様\n\n        オプションを指定することで、以下のデータもコピーできます。\n\n        |コピー対象のデータ|同時にコピーする必要があるデータ|\n        |:--|:--|\n        |入力データ||\n        |タスク|入力データ|\n        |アノテーション|入力データ、タスク|\n        |補助情報|入力データ|\n        |作業ガイド||\n        |Webhook||\n\n        このAPIを利用するには、以下のロールが必要です。\n        * コピー元プロジェクトのプロジェクトオーナーロール\n        * コピー元プロジェクトが所属している組織の組織管理者または組織オーナーロール\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`copy-project`）。\n      security:\n      - OrganizationAdministrator: []\n        ProjectOwner: []\n      operationId: initiateProjectCopy\n      parameters:\n      - name: project_id\n        in: path\n        description: コピー元となるプロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ProjectCopyRequest\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectCopyResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"409\":\n          description: ジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/inputs:\n    get:\n      tags:\n        - af-project\n      summary: 入力データ情報全件ファイルの取得\n      description: |\n        入力データ全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        入力データ全件ファイルは、すべての入力データが記載されたJSONファイルです。SON構造は、[InputData](#section/InputData)の配列です。\n        ただしInputData中のurlは常にnullです。\n\n        毎日AM02:00(JST)頃に更新されます。\n        [postProjectInputsUpdate](#operation/postProjectInputsUpdate) APIを利用すれば、手動で入力データ全件ファイルを更新できます。\n\n      security:\n        - ProjectDataUser: []\n      operationId: getProjectInputsUrl\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n        - af-project\n      summary: 入力データ全件ファイルの更新開始\n      description: |\n        入力データ全件ファイルの更新を開始します。\n        ファイルの更新には、データ量に応じて数分～数十分程度かかります。\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-inputs-list`）。\n\n        入力データ全件ファイルについては、[getProjectInputsUrl](#operation/getProjectInputsUrl) APIを参照ください。\n      security:\n        - ProjectDataUser: []\n      operationId: postProjectInputsUpdate\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectInputsUpdateResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: ジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/tasks:\n    get:\n      tags:\n      - af-project\n      summary: タスク全件ファイルの取得\n      description: |\n        タスク全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        タスク全件ファイルは、すべてのタスクが記載されたJSONファイルです。JSON構造は、[Task](#section/Task)の配列です。\n\n        毎日AM02:00(JST)頃に更新されます。\n        [postProjectTasksUpdate](#operation/postProjectTasksUpdate) APIを利用すれば、手動でタスク全件ファイルを更新できます。\n\n      security:\n      - ProjectDataUser: []\n      operationId: getProjectTasksUrl\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-project\n      summary: タスク全件ファイルの更新開始\n      description: |\n        タスク全件ファイルの更新を開始します。\n        ファイルの更新には、データ量に応じて数分～数十分程度かかります。\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-tasks-list`）。\n\n        タスク全件ファイルについては、[getProjectTasksUrl](#operation/getProjectTasksUrl) APIを参照ください。\n      security:\n        - ProjectDataUser: []\n      operationId: postProjectTasksUpdate\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/PostProjectTasksUpdateResponse\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: ジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/inspections:\n    get:\n      deprecated: true\n      tags:\n      - af-project\n      summary: 検査コメント全件ファイルの取得\n      description: |\n        検査コメント全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        検査コメント全件ファイルには、すべての検査コメントが記載されたファイルです。\n        JSON構造は、[Inspection](#section/Inspection)の配列です。\n\n        毎日AM02:00(JST)頃に更新されます。\n      security:\n      - ProjectDataUser: []\n      operationId: getProjectInspectionsUrl\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/comments:\n    get:\n      tags:\n        - af-project\n      summary: コメント全件ファイルの取得\n      description: |\n        コメント全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n        コメント全件ファイルは、すべてのコメントが記載されたJSONファイルです。\n        JSON構造は、[Comment](#section/Comment)の配列です。\n\n        毎日AM02:00(JST)頃に更新されます。\n      security:\n        - ProjectDataUser: []\n      operationId: getProjectCommentsUrl\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/task_history_events:\n    get:\n      deprecated: true\n      tags:\n      - af-project\n      summary: プロジェクトのタスク履歴イベント全件ファイルの取得\n      description: |\n        タスク履歴イベント全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n\n        タスク履歴イベント全件ファイルは、すべてのタスク履歴イベント情報が記載されたJSONファイルです。\n        JSON構造は、[TaskHistoryEvent](#section/TaskHistoryEvent)の配列です。\n\n        毎日AM02:00(JST)頃に更新されます。\n      security:\n      - ProjectDataUser: []\n      operationId: getProjectTaskHistoryEventsUrl\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/rawdata/task_histories:\n    get:\n      tags:\n        - af-project\n      summary: プロジェクトのタスク履歴全件ファイルの取得\n      description: |\n        タスク履歴全件ファイルにアクセスするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効し、アクセスできなくなります。\n\n\n        タスク履歴イベント全件ファイルは、すべてのタスク履歴情報が記載されたJSONファイルです。JSON構造は、キーがタスクID、値が[TaskHistory](#section/TaskHistory)の配列となるマップです。\n\n        毎日AM02:00(JST)頃に更新されます。\n      security:\n        - ProjectDataUser: []\n      operationId: getProjectTaskHistoriesUrl\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /my/projects/{project_id}/member:\n    get:\n      tags:\n      - af-my\n      summary: 自分のプロジェクトメンバー取得\n      description: |\n        自分のプロジェクトメンバー情報を取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getMyMemberInProject\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMember\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/members:\n    get:\n      tags:\n      - af-project-member\n      summary: プロジェクトメンバー一括取得\n      description: |\n        プロジェクトメンバを一括で取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getProjectMembers\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: include_inactive_member\n        in: query\n        description: 脱退したプロジェクトメンバーも取得する時に、キーのみ指定します（値は無視されます）。\n        required: false\n        allowEmptyValue: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMemberList\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/members/{user_id}:\n    get:\n      tags:\n      - af-project-member\n      summary: プロジェクトメンバー取得\n      description: |\n        プロジェクトメンバーを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getProjectMember\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: user_id\n        in: path\n        description: ユーザーID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMember\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-project-member\n      summary: プロジェクトメンバー追加/更新\n      description: |\n        プロジェクトにメンバーを新規に追加、または存在するメンバーの設定を変更します。\n      security:\n      - ProjectOwner: []\n      operationId: putProjectMember\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: user_id\n        in: path\n        description: ユーザーID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/UserId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMemberRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectMember\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/dates:\n    get:\n      tags:\n        - af-statistics\n      summary: 統計情報の期間の取得\n      description: |\n        統計情報が存在する期間を取得します。\n\n        たとえば、プロジェクトの状態が以下のように変化したとします。\n\n        1. 2022/01/01にプロジェクトを作成した。\n        2. 2022/02/01にプロジェクトの状態を停止中にした。\n        3. 2022/03/01にプロジェクトの状態を進行中にした。\n        4. 2022/04/01にプロジェクトの状態を停止中にした。\n\n        このAPIを実行すると、以下のJSONが取得されます。\n\n        ```\n        [\n          {\"from\":\"2022-01-01\", \"to\":\"2022-02-01\"},\n          {\"from\":\"2022-03-01\", \"to\":\"2022-04-01\"}\n        ]\n        ```\n\n        プロジェクトを停止中にすると統計情報は記録されないので、統計情報が存在する期間は複数になります。\n\n\n      security:\n        - AllProjectMember: []\n      operationId: getStatisticsAvailableDates\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfDateRanges\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/tasks/daily:\n    get:\n      tags:\n      - af-statistics\n      summary: フェーズ別タスク数の取得\n      description: |\n        タスクのフェーズごと、タスクのステータスごとのタスク数などを取得します。\n\n        取得期間は最大3か月です。\n\n      security:\n      - AllProjectMember: []\n      operationId: getTaskDailyStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: from\n        in: query\n        description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n        required: true\n        schema:\n          type: string\n      - name: to\n        in: query\n        description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfProjectTaskStatisticsHistory\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/accounts/daily:\n    get:\n      tags:\n        - af-statistics\n      summary: メンバー別作業時間の取得\n      description: |\n        プロジェクトメンバーごとの作業時間やタスクの提出回数を取得します。\n\n        * 作業時間\n        * 教師付フェーズのタスクを提出した回数、または検査/受入フェーズのタスクを合格/差戻にした回数\n        * 教師付フェーズを担当して提出したタスクが差し戻された回数、または受入フェーズを担当して合格にしたタスクが受入完了状態を取り消された回数\n\n        取得期間は最大3か月です。\n\n      security:\n        - AllProjectMember: [ ]\n      operationId: getAccountDailyStatistics\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: from\n          in: query\n          description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n          required: true\n          schema:\n            type: string\n        - name: to\n          in: query\n          description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfProjectAccountStatistics\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/inspections/daily:\n    get:\n      tags:\n      - af-statistics\n      summary: ラベル別検査コメント数の取得\n      description: |\n        ラベルごとの検査コメント数を取得します。\n\n        取得期間は最大3か月です。\n      security:\n      - AllProjectMember: [ ]\n      operationId: getInspectionDailyStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: from\n        in: query\n        description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n        required: true\n        schema:\n          type: string\n      - name: to\n        in: query\n        description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfInspectionStatistics\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/task-phases/daily:\n    get:\n      tags:\n      - af-statistics\n      summary: フェーズ別作業時間の取得\n      description: |\n        フェーズごとの累積作業時間を取得します。\n\n        取得期間は最大3か月です。\n      security:\n      - AllProjectMember: [ ]\n      operationId: getPhaseDailyStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: from\n        in: query\n        description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n        required: true\n        schema:\n          type: string\n      - name: to\n        in: query\n        description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ArrayOfTaskPhaseStatistics\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/labels:\n    get:\n      tags:\n      - af-statistics\n      summary: ラベル別アノテーション数の取得\n      description: |\n        [ラベル別アノテーション数集計データ](#section/ArrayOfLabelStatistics) を取得するための認証済み一時URLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getLabelStatistics\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/worktimes/daily:\n    get:\n      tags:\n        - af-statistics\n      summary: 単位あたり作業時間の取得\n      description: |\n        プロジェクトの単位あたり作業時間情報を取得します。\n\n        以下の作業時間情報を取得できます。\n        * タスク1個あたりの作業時間情報\n        * 画像1枚あたりの作業時間情報（画像プロジェクトのみ）\n        * 動画1分あたりの作業時間情報（動画プロジェクトのみ）\n\n        取得期間は最大3か月です。\n      security:\n        - AllProjectMember: [ ]\n      operationId: getWorktimeDailyStatistics\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: from\n          in: query\n          description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n          required: true\n          schema:\n            type: string\n        - name: to\n          in: query\n          description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/WorktimeStatisticsByProject\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/worktimes-by-account/{account_id}/daily:\n    get:\n      tags:\n        - af-statistics\n      summary: メンバーの単位あたり作業時間の取得\n      description: |\n        プロジェクトメンバーの単位あたり作業時間情報を取得します。\n\n        以下の作業時間情報を取得できます。\n        * タスク1個あたりの作業時間情報\n        * 画像1枚あたりの作業時間情報（画像プロジェクトのみ）\n        * 動画1分あたりの作業時間情報（動画プロジェクトのみ）\n\n        取得期間は最大3か月です。\n      security:\n        - AllProjectMember: [ ]\n      operationId: getWorktimeDailyStatisticsByAccount\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: account_id\n          in: path\n          description: アカウントID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n        - name: from\n          in: query\n          description: 取得する統計の区間の開始日 - `YYYY-MM-DD`\n          required: true\n          schema:\n            type: string\n        - name: to\n          in: query\n          description: 取得する統計の区間の終了日 - `YYYY-MM-DD` 。この日は含まれます。\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/WorktimeStatisticsByAccount\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/statistics/markers:\n    get:\n      tags:\n      - af-statistics\n      summary: 統計グラフマーカー一括取得\n      description: |\n        統計グラフマーカーをすべて取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getMarkers\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Markers\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-statistics\n      summary: 統計グラフマーカー更新\n      description: |\n        統計グラフマーカーを更新します。\n      security:\n      - ProjectOwner: []\n      operationId: putMarkers\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutMarkersRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Markers\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /organizations/{organization_name}/jobs:\n    get:\n      tags:\n      - af-job\n      summary: 組織のバックグラウンドジョブ情報取得\n      description: |\n        組織のバックグラウンドジョブの情報を取得します。\n\n        バックグラウンドジョブ情報は、完了(失敗含む)から14日経過後に自動で削除されます。\n      security:\n      - AllOrganizationMember: []\n      operationId: getOrganizationJob\n      parameters:\n      - name: organization_name\n        in: path\n        description: 組織名\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationName\"\n      - name: type\n        in: query\n        description: 取得するジョブの種別。[詳細はこちら](#section/OrganizationJobType)。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationJobType\"\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数。\n          未指定時は1件のみ取得。\n        required: false\n        schema:\n          type: integer\n          minimum: 0\n          maximum: 200\n          default: 1\n      - name: exclusive_start_created_datetime\n        in: query\n        description: 作成日時が、指定した日付より古いジョブを取得します。\n        required: false\n        schema:\n          type: string\n          format: date-time\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/OrganizationJobInfoContainer\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/jobs:\n    get:\n      tags:\n      - af-job\n      summary: プロジェクトのバックグラウンドジョブ情報取得\n      description: |\n        プロジェクトのバックグラウンドジョブの情報を取得します。\n\n        バックグラウンドジョブ情報は、完了(失敗含む)から14日経過後に自動で削除されます。\n      security:\n      - AllProjectMember: []\n      operationId: getProjectJob\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: type\n        in: query\n        description: 取得するジョブの種別。[詳細はこちら](#section/ProjectJobType)。\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectJobType\"\n      - name: limit\n        in: query\n        description: |\n          1ページあたりの取得するデータ件数。\n          未指定時は1件のみ取得。\n        required: false\n        schema:\n          type: integer\n          minimum: 0\n          maximum: 200\n          default: 1\n      - name: exclusive_start_created_datetime\n        in: query\n        description: 作成日時が、指定した日付より古いジョブを取得します。\n        required: false\n        schema:\n          type: string\n          format: date-time\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectJobInfoContainer\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/jobs/{job_type}/{job_id}:\n    delete:\n      tags:\n      - af-job\n      summary: プロジェクトのバックグラウンドジョブ情報削除\n      description: |\n        プロジェクトのバックグラウンドジョブ情報を削除します。\n\n        なお、バックグラウンドジョブ情報は、完了(失敗含む)から14日経過後に自動で削除されます。\n      security:\n      - ProjectOwner: []\n      operationId: deleteProjectJob\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: job_type\n        in: path\n        description: ジョブの種別。[詳細はこちら](#section/ProjectJobType)。\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectJobType\"\n      - name: job_id\n        in: path\n        description: ジョブID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/JobId\"\n      responses:\n        \"200\":\n          description: 正常\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/webhooks:\n    get:\n      tags:\n      - af-webhook\n      summary: Webhookの一括取得\n      description: |\n        Webhookをすべて取得します。\n      security:\n      - ProjectOwner: []\n      operationId: getWebhooks\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Webhook\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/webhooks/{webhook_id}:\n    put:\n      tags:\n      - af-webhook\n      summary: Webhookの作成/更新\n      description: |\n        Webhookを新規作成/更新します。\n\n        Webhookが送信するHTTPリクエストのボディには、以下のプレースホルダーを含めることができます。\n\n        * task-completed\n          * {{PROJECT_ID}} :  プロジェクトID\n          * {{TASK_ID}}\t: タスクID\n          * {{PROJECT_TITLE}}\t: プロジェクトタイトル\n          * {{COMPLETE_DATETIME}}\t: 完了日時\n            * 例 : 2019-05-08T10:00:00.000+09:00\n          * {{LAST_ACCOUNT}} : 最終作業者のアカウントID\n\n        * annotation-archive-updated\n          * {{PROJECT_ID}} :  プロジェクトID\n          * {{PROJECT_TITLE}}\t: プロジェクトタイトル\n          * {{COMPLETE_DATETIME}}\t: 完了日時\n            * 例 : 2019-05-08T10:00:00.000+09:00\n\n        * input-data-zip-registered\n          * {{PROJECT_ID}} :  プロジェクトID\n          * {{PROJECT_TITLE}}\t: プロジェクトタイトル\n          * {{COMPLETE_DATETIME}}\t: 完了日時\n            * 例 : 2019-05-08T10:00:00.000+09:00\n          * {{ZIP_NAME}} : ZIPファイル名\n            * 例 : input_data.zip\n\n        * project-copy-completed\n          * {{PROJECT_ID}} :  プロジェクトID\n          * {{DEST_PROJECT_ID}} :  コピー先プロジェクトID\n          * {{DEST_PROJECT_TITLE}}\t: コピー先プロジェクトタイトル\n          * {{COMPLETE_DATETIME}}\t: 完了日時\n            * 例 : 2019-05-08T10:00:00.000+09:00\n\n        Webhookが起動されると、ジョブ種別が`invoke-hook`のバックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます。\n      security:\n      - ProjectOwner: []\n      operationId: putWebhook\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: webhook_id\n        in: path\n        description: |\n          WebhookID。[値の制約についてはこちら。](#section/API-Convention/APIID)\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/WebhookId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutWebhookRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Webhook\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-webhook\n      summary: Webhookの削除\n      description: |\n        Webhookを削除します。\n      security:\n      - ProjectOwner: []\n      operationId: deleteWebhook\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: webhook_id\n        in: path\n        description: WebhookID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/WebhookId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Webhook\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/webhooks/{webhook_id}/test:\n    post:\n      tags:\n        - af-webhook\n      summary: Webhookのテスト実行\n      description: |\n        Webhookが実際にHTTPリクエストを送信します。\n\n        Webhookが送信するHTTPリクエストのボディに含まれるプレースホルダーは、このAPIで指定されたプレースホルダーの値に置き換えられます。\n      security:\n        - ProjectOwner: []\n      operationId: testWebhook\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: webhook_id\n          in: path\n          description: WebhookID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/WebhookId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/WebhookTestRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/WebhookTestResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/annotation-specs:\n    get:\n      tags:\n      - af-annotation-specs\n      summary: アノテーション仕様取得\n      description: |\n        アノテーション仕様を取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getAnnotationSpecs\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: history_id\n        in: query\n        description: |\n          アノテーション仕様の履歴ID。過去のアノテーション仕様を取得する場合は、[getAnnotationSpecsHistories](#operation/getAnnotationSpecsHistories) APIで取得した `history_id` の値を指定してください。\n          未指定時は最新のアノテーション仕様を取得します。\n        required: false\n        schema:\n          type: string\n          example: \"1234567890\"\n      - name: v\n        in: query\n        description: |\n          取得するアノテーション仕様のフォーマットバージョンを指定します。`v=1`は将来廃止する予定なので、非推奨です。\n        required: false\n        schema:\n          type: string\n          enum:\n            - \"1\"\n            - \"2\"\n          default: \"1\"\n          example: \"2\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationSpecs\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-annotation-specs\n      summary: アノテーション仕様更新\n      description: |\n        アノテーション仕様を更新します。\n      security:\n      - ProjectOwner: []\n      operationId: putAnnotationSpecs\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationSpecsRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationSpecsV2\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/annotation-specs-histories:\n    get:\n      tags:\n      - af-annotation-specs\n      summary: アノテーション仕様履歴一括取得\n      description: |\n        アノテーション仕様のすべての更新履歴を取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getAnnotationSpecsHistories\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationSpecsHistory\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks:\n    get:\n      tags:\n      - af-task\n      summary: タスクの一括取得\n      description: |\n        タスクを一括で取得します。\n\n      security:\n      - AllProjectMember: []\n      operationId: getTasks\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: page\n        in: query\n        description: 検索結果のうち、取得したいページの番号(1始まり）\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: 1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 200\n          default: 30\n      - name: task_id\n        in: query\n        description: タスクIDでの部分一致検索で使用。大文字小文字は区別しません\n        required: false\n        schema:\n          type: string\n          minLength: 1\n          maxLength: 300\n      - name: input_data_ids\n        in: query\n        description: 指定された入力データIDを使用しているタスクを絞り込みます。カンマ区切りで複数の入力データIDを指定可能です。大文字小文字は区別しません\n        required: false\n        schema:\n          type: string\n          minLength: 1\n      - name: phase\n        in: query\n        description: 絞り込み条件となるフェーズ名\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskPhase\"\n      - name: phase_stage\n        in: query\n        description: 絞り込み条件となるステージ\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskPhaseStage\"\n      - name: status\n        in: query\n        description: 絞り込み条件となる状態名\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskStatus\"\n      - name: account_id\n        in: query\n        description: 絞り込み条件となる作業中のアカウントID\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n      - name: no_user\n        in: query\n        description: 未割り当てのタスクを絞り込む時に、キーのみ指定します（値は無視されます）。\n        required: false\n        allowEmptyValue: true\n        schema:\n          type: string\n      - name: previous_account_id\n        in: query\n        description: そのタスクをこれまでに担当したことのあるユーザー（現在の担当者含む）のアカウントID\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/AccountId\"\n      - name: previous_phase\n        in: query\n        description: そのタスクがこれまでに遷移したことのあるフェーズ名（現在のフェーズ含む）\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskPhase\"\n      - name: previous_phase_stage\n        in: query\n        description: そのタスクがこれまでに遷移したことのあるステージ（現在のステージ含む）\n        required: false\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskPhaseStage\"\n      - name: rejected_only\n        in: query\n        description: 差し戻されたタスクだけを絞り込む時に、キーのみ指定します（値は無視されます）。\n        required: false\n        allowEmptyValue: true\n        schema:\n          type: string\n      - name: auto_accepted_only\n        in: query\n        description: 「抜取検査の対象外となり、自動受入されたタスク」だけを絞り込む時に、キーのみ指定します（値は無視されます）。\n        required: false\n        allowEmptyValue: true\n        schema:\n          type: string\n      - name: metadata\n        in: query\n        example: priority:\u003e=1 assignable:true\n        description: |\n          メタデータからタスクを検索できます。\n\n          例えば、 `priority` (数値) や `assignable` (真偽値) といったメタデータを個々のタスクに登録していたとします。\n          その場合、次のように検索できます。\n\n          ```\n          // priorityが5のタスクを検索\n          priority:5\n\n          // priorityが5以外のタスクを検索\n          -priority:5\n\n          // priorityが1より大きいタスクを検索\n          priority:\u003e1\n\n          // priorityが1以上のタスクを検索\n          priority:\u003e=1\n\n          // priorityが100未満のタスクを検索\n          priority:\u003c100\n\n          // priorityが100以下のタスクを検索\n          priority:\u003c=100\n\n          // priorityが1~100のタスクを検索 (複数の検索条件は半角スペースで区切ります)\n          priority:\u003e=1 priority:\u003c=100\n\n          // priorityが1以上、且つ、assignableがtrueのタスクを検索\n          priority:\u003e=1 assignable:true\n          ```\n\n          (注意) これらの例は、説明の都合上「URLエンコード」を施していません。実際には、URLエンコードを施してください。\n        required: false\n        schema:\n          type: string\n      - name: sort\n        in: query\n        description: |\n          ソート順の指定。以下のキーを使用できます。\n          * `task_id`\n          * `updated_datetime`\n          * `number_of_rejections`\n          * `phase`\n          * `phase_stage`\n          * `account_id`\n          * `metadata.{メタデータのキー}`\n\n\n          * キーの先頭に`-`を付けると、降順でソートされます。\n          * `,`でキーを区切ると、複数のキーでソートされます。先頭のキーから順に優先順位が割り振られます。\n\n        required: false\n        example: metadata.priority,-updated_datetime\n        schema:\n          type: string\n      - name: annotation\n        in: query\n        description: |\n          アノテーションの絞り込み条件をJSON形式([AnnotationQuery](#section/AnnotationQuery))で指定したもの。指定した条件に合致するアノテーションを持つタスクを絞り込む際に指定する。\n        required: false\n        example: '{\"label_id\":\"b048c6b3-b36f-4c8d-97ea-96828a50a44c\"}'\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 指定された条件にあてはまるタスクを返します。条件にあてはまるタスクが多数に及ぶことがあるので、すべての結果を得るにはページングしてください。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/TaskList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-task\n      summary: タスク一括更新\n      description: |\n        タスクを一括更新します。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、現在「削除」の1通りのみがあります。\n        これら操作オブジェクトを複数含めることで、1リクエストで複数の削除ができます。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n      security:\n      - ProjectOwner: []\n      operationId: batchUpdateTasks\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchTaskRequestItem\"\n      responses:\n        \"200\":\n          description: |\n            正常。レスポンスには更新されたタスクが含まれます。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/generate-tasks:\n    post:\n      tags:\n      - af-task\n      summary: タスク一括作成\n      description: |\n        タスク作成ルールに基づいて、タスクを一括で作成します。\n\n        タスク作成ルールは、以下の3つです。\n\n        * `ByCount`：1つのタスクに割り当てる入力データの個数を指定してタスクを生成します。この作成ルールは、画像を同じ枚数均等にタスクに割り振りたい場合に便利です。\n        * `ByDirectory`：入力データ名をファイルパスに見立て、ディレクトリ単位でタスクを生成します。この作成ルールは、動画などから切り出した画像をディレクトリ別に格納し、その動画（ディレクトリ）の単位でタスクを作りたい場合に便利です。\n        * `ByInputDataCsv`：入力データを各タスクに割り振ったCSVへのS3パスを指定してタスクを生成できます。この作成ルールは、特定のデータの組み合わせを持ったタスクを作成したい場合に便利です。\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-tasks`）。\n\n        #### ByDirectory: ディレクトリ単位でのタスク一括生成の使い方\n        例えば、次のような `input_data_name` の入力データが登録されているとします。\n\n        * a.zip/dir1/image1.png\n        * a.zip/dir1/image2.png\n        * a.zip/dir1/subdir/image3.png\n        * a.zip/dir1/subdir/image4.png\n        * a.zip/dir1/subdir/image5.png\n        * b.zip/dir2/subdir1/image6.png\n        * b.zip/dir2/subdir1/image7.png\n        * b.zip/dir2/subdir1/image8.png\n        * b.zip/dir2/subdir2/image9.png\n        * b.zip/dir2/subdir2/image10.png\n\n        ここで、`input_data_name_prefix`フィールド に `a.zip` を指定すると、次の2タスクが生成されます。\n\n        1. タスク: `{task_id_prefix}_a.zip_dir1`\n          * a.zip/dir1/image1.png\n          * a.zip/dir1/image2.png\n        2. タスク: `{task_id_prefix}_a.zip_dir1_subdir`\n          * a.zip/dir1/subdir/image3.png\n          * a.zip/dir1/subdir/image4.png\n          * a.zip/dir1/subdir/image5.png\n\n        次に、`input_data_name_prefix` に `b.zip/dir2` を指定すると、次の2タスクが生成されます。\n\n        1. タスク: `{task_id_prefix}_b.zip_dir2_subdir1`\n          * b.zip/dir2/subdir1/image6.png\n          * b.zip/dir2/subdir1/image7.png\n          * b.zip/dir2/subdir1/image8.png\n        2. タスク: `{task_id_prefix}_b.zip_dir2_subdir2`\n          * b.zip/dir2/subdir2/image9.png\n          * b.zip/dir2/subdir2/image10.png\n\n        `input_data_name_prefix` が未指定の時は、全ディレクトリごとにタスクが作成されます。つまり次のように4つのタスクが生成されます。\n\n        1. タスク: `{task_id_prefix}_a.zip_dir1`\n          * a.zip/dir1/image1.png\n          * a.zip/dir1/image2.png\n        2. タスク: `{task_id_prefix}_a.zip_dir1_subdir`\n          * a.zip/dir1/subdir/image3.png\n          * a.zip/dir1/subdir/image4.png\n          * a.zip/dir1/subdir/image5.png\n        3. タスク: `{task_id_prefix}_b.zip_dir2_subdir1`\n          * b.zip/dir2/subdir1/image6.png\n          * b.zip/dir2/subdir1/image7.png\n          * b.zip/dir2/subdir1/image8.png\n        4. タスク: `{task_id_prefix}_b.zip_dir2_subdir2`\n          * b.zip/dir2/subdir2/image9.png\n          * b.zip/dir2/subdir2/image10.png\n\n        タスクに割り当てられる「ディレクトリ内の入力データ」の順序は、名前の昇順となります。\n\n        **注意:** `ByDirectory`では、入力データ名がファイルパス形式になっていない入力データはタスクの作成対象になりません。\n        例えば、`foo/bar.png` はタスクの作成対象になりますが、ディレクトリを含まない`bar.png` や、最後がディレクトリになっている`foo/bar.png/` は対象になりません。\n\n        **注意:** `ByDirectory`では、一つのディレクトリに200ファイルより多くの入力データがある場合、複数のタスクに分かれます。\n        例えば、`foo/` の中に201ファイルがある場合、fooから２つのタスクが作成されます。１つ目は最初の200ファイルを割り当て、２つ目は最後の１ファイルのタスクに分かれます。\n        分かれたタスクは、 `{上述のタスクIDの付与則}_連番` の形式でタスクIDが付与されます。連番は、対象の入力データ数の桁数まで0埋めされます。\n\n        **注意:** 動画プロジェクトの場合、ディレクトリに含まれる動画の入力データは1つに制限してください。\n        これが守られない場合、作成されたタスクで動画を再生できない場合があります。\n\n        #### ByInputDataCsv: CSVによるタスク一括生成の使い方\n        以下のように「タスクID,入力データ名,入力データID」を1行毎に指定したCSVを作成します。\n\n        ```\n        task_1,a001.jpg,ca0cb2f9-fec5-49b4-98df-dc34490f9785\n        task_1,a002.jpg,5ac1987e-ca7c-42a0-9c19-b5b23a41836b\n        task_1,centinel.jpg,81d6407b-2172-4fa8-8525-2e43c49267ee\n        task_2,b001.jpg,4f2ae4d0-7a38-4f9a-be6f-170ba76aba73\n        task_2,b002.jpg,45ac5852-f20c-4938-9ee9-cc0274401df7\n        task_2,centinel.jpg,81d6407b-2172-4fa8-8525-2e43c49267ee\n        task_3,c001.jpg,3260c7a0-4820-424d-a26e-db7e91dbc139\n        task_3,centinel.jpg,81d6407b-2172-4fa8-8525-2e43c49267ee\n        ```\n        CSVのエンコーディングは UTF-8(BOM付き)、UTF-8(BOMなし)、UTF-16(BOM付きLE) のいずれかのみ対応しています。\n\n        リクエストボディの`csv_data_path`には、[createTempPath](#operation/createTempPath) APIで取得したS3パスを指定してください。[createTempPath](#operation/createTempPath) APIで取得したURLに、事前にCSVファイルをアップロードする必要があります。\n\n      security:\n      - ProjectOwner: []\n      operationId: initiateTasksGeneration\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/TaskGenerateRequest\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/TaskGenerateResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}:\n    get:\n      tags:\n      - af-task\n      summary: タスク取得\n      description: |\n        タスクを取得します。\n\n      security:\n      - AllProjectMember: []\n      operationId: getTask\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-task\n      summary: タスク作成/更新\n      description: |\n        タスクを作成または更新します。\n\n        大量のタスクを一括で生成する場合は、[initiateTasksGeneration](#operation/initiateTasksGeneration) APIの使用を検討してください。\n\n      security:\n      - ProjectOwner: []\n      operationId: putTask\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: |\n          タスクID。[値の制約についてはこちら。](#section/API-Convention/APIID)\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/TaskRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"409\":\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-task\n      summary: タスク削除\n      description: |\n        タスクを削除します。\n      security:\n      - ProjectOwner: []\n      operationId: deleteTask\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      responses:\n        \"200\":\n          description: 正常。削除したタスクを返します\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/assign-tasks:\n    post:\n      tags:\n        - af-task\n      summary: タスク割当\n      description: |\n        自分自身またはメンバーにタスクを割り当てます。\n\n      security:\n        - AllProjectMember: []\n      operationId: assignTasks\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/TaskAssignRequest\"\n      responses:\n        \"200\":\n          description: 正常。割り当てられたタスクを返します。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: プロジェクトが停止中のため、タスクの割当ができない。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/metadata:\n    patch:\n      tags:\n        - af-task\n      summary: タスクメタデータの一括更新\n      description: |\n        複数のタスクのメタデータを一括で更新します。\n      security:\n        - ProjectDataUser: []\n      operationId: patchTasksMetadata\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PatchTasksMetadataRequest\"\n      responses:\n        \"200\":\n          $ref: \"swagger-api-components.yaml#/components/responses/SuccessMessage\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"409\":\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/operate:\n    post:\n      tags:\n      - af-task\n      summary: タスク状態変更\n      description: |\n        タスクのステータスやフェーズ、担当者を変更できます。\n\n        ユースケースごとのリクエストボディのサンプルを、以下に記載します。\n\n        ### タスクのステータスを作業中に変更\n\n        ```\n        {\"status\": \"working\", \"account_id\": \"{現在の担当者のアカウントID}\", \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        APIの制約は以下の通りです。\n        * API実行者は、現在のタスクの担当者\n        * 現在のタスクのステータスが`not_started`, `break`, `on_hold` のいずれか\n\n        ### タスクのステータスを休憩中に変更\n\n        ```\n        {\"status\": \"break\", \"account_id\": \"{現在の担当者のアカウントID}\", \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        APIの制約は以下の通りです。\n        * API実行者は、現在のタスクの担当者\n        * 現在のタスクのステータスが`working`\n\n        ### タスクのステータスを保留中に変更\n\n        ```\n        {\"status\": \"on_hold\", \"account_id\": \"{現在の担当者のアカウントID}\", \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        APIの制約は以下の通りです。\n        * API実行者は、現在のタスクの担当者\n        * 現在のタスクのステータスが`working`\n\n\n        ### タスクの提出\n\n        ```\n        {\"status\": \"complete\", \"account_id\": \"{現在の担当者のアカウントID}\", \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        APIの制約は以下の通りです。\n        * API実行者は、現在のタスクの担当者\n        * 現在のタスクのステータスが`working`\n\n        ### タスクの提出取り消し\n\n        ```\n        {\"status\": \"cancelled\", \"account_id\": \"{タスクを提出したユーザーのアカウントID}\", \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        APIの制約は以下の通りです。\n        * API実行者は、タスクを提出したユーザー\n        * 現在のタスクのステータスが`not_started`\n        * 現在のタスクのフェーズが`inspection`または`acceptance`\n        * タスクの提出後に、検査/受入(抜取含む)等の作業が一切行われていない\n\n        ### タスクの差し戻し\n\n        ```\n        {\"status\": \"rejected\", \"account_id\": \"{現在の担当者のアカウントID}\", \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        APIの制約は以下の通りです。\n        * API実行者は、現在のタスクの担当者\n        * 現在のタスクのステータスが`working`\n        * 現在のタスクのフェーズが`inspection`または`acceptance`\n\n\n        ### タスクの強制差し戻し\n\n        ```\n        {\"status\": \"rejected\", \"force\": true, \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        「強制差し戻し」は、通常の「差し戻し」と比較して以下の点が異なります。\n        * 現在のタスクのステータスやフェーズに関わらず、タスクを差し戻せる\n        * 検査コメントを付与しなくても、タスクを指し戻せる\n        * 抜取検査・抜取受入のスキップ判定に影響を及ぼさない\n\n\n        APIの制約は以下の通りです。\n        * API実行者は、プロジェクトオーナーロールを持つ\n\n        ### タスクの受入取り消し\n\n        ```\n        {\"status\": \"not_started\", \"account_id\": \"{受入取り消し後の担当者のアカウントID}\", \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        APIの制約は以下の通りです。\n        * API実行者は、プロジェクトオーナーロールを持つ\n        * 現在のタスクのステータスが`completed`\n        * 現在のタスクのフェーズが`acceptance`\n\n        ### タスクの担当者の変更\n\n        ```\n        {\"status\": \"not_started\", \"account_id\": \"{担当させるユーザーのアカウントID}\", \"last_updated_datetime\": \"2018-08-14T19:01:51.775+09:00\"}\n        ```\n\n        タスクに担当者を割り当てない場合は、`account_id`を未指定にしてください。\n\n        このAPIは、メンバー1人に割り当てられるタスク数の上限を無視して、担当者を変更できます。\n\n        APIの制約は以下の通りです。\n        * API実行者は、プロジェクトオーナーまたはチェッカーロールを持つ\n\n      security:\n      - AllProjectMember: []\n      operationId: operateTask\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/TaskOperation\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Task\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: 指定された現在の状態が実際の現在の状態と食い違っている\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/histories:\n    get:\n      tags:\n      - af-task\n      summary: タスク履歴一括取得\n      description: |\n        タスクの作業履歴をすべて取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getTaskHistories\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/TaskHistory\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/annotations:\n    get:\n      tags:\n      - af-annotation\n      summary: アノテーション一括取得\n      description:\n        アノテーションを一括で取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getAnnotationList\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: page\n        in: query\n        description: 検索結果のうち、取得したいページの番号(1始まり）\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: 1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 200\n          default: 30\n      - name: aggregate_by_task_and_input\n        in: query\n        description: |\n          `true`を指定すると、「タスクIDと入力データIDの組」ごとに検索結果を集計します。\n        required: false\n        schema:\n          type: boolean\n          default: false\n      - name: no_aggregate_label_and_input\n        in: query\n        description: |\n          `true`を指定すると、ラベルIDによるアノテーション検索数の集約結果、および属性IDによるアノテーション検索数の集約結果を取得しません。\n\n          このパラメーターを`true`に指定することで集約計算は行われなくなるので、アノテーションの検索が速くなる可能性があります。\n        required: false\n        schema:\n          type: boolean\n          default: false\n      - name: query\n        in: query\n        description: |\n          絞り込み条件([AnnotationQuery](#section/AnnotationQuery))をJSON形式で表した文字列。\n        required: false\n        example: '{\"label_id\":\"b048c6b3-b36f-4c8d-97ea-96828a50a44c\"}'\n        schema:\n          type: string\n      - name: sort\n        in: query\n        description: |\n          ソート順の指定。\n          以下のキーを使用できます。\n          * `task_id`\n          * `input_data_id`\n          * `detail.annotation_id`\n          * `detail.account_id`\n          * `detail.label_id`\n          * `detail.data_holding_type`\n          * `detail.created_datetime`\n          * `detail.updated_datetime`\n\n\n          キーの先頭に`-`を付けると、降順でソートされます。\n\n          `,`でキーを区切ると、複数のキーでソートされます。先頭のキーから順に優先順位が割り振られます。\n        required: false\n        example: task_id,input_data_id,detail.annotation_id,-detail.updated_datetime\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: 指定された条件にあてはまるアノテーションを返します。条件にあてはまるアノテーションが多数に及ぶことがあるので、すべての結果を得るにはページングしてください。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/AnnotationList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-annotation\n      summary: アノテーション一括更新\n      description: |\n        複数のアノテーションを一括更新します。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、「更新」と「削除」の2通りがあり、それぞれJSONオブジェクト構造が異なります。\n        これら操作オブジェクトを複数含めることで、1つのリクエストで複数の更新や削除ができます。\n\n        APIの制約は以下の通りです。\n        * アノテーションラベルの以下の変更はできない\n          * 異なるアノテーションの種類のラベルへの変更\n          * 「全体」アノテーションラベルの変更\n          * 「塗りつぶしv2」アノテーションラベルの変更\n        * 受入完了タスクのアノテーションは、プロジェクトオーナーロールを持つユーザーのみ更新/削除できる。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n\n      security:\n      - ProjectAccepter: []\n      operationId: batchUpdateAnnotations\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchAnnotationRequestItem\"\n      responses:\n        \"200\":\n          description: |\n            正常。レスポンスには、更新されたアノテーションが含まれます。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/SingleAnnotation\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作、または、先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/inputs/{input_data_id}/annotation:\n    get:\n      tags:\n        - af-annotation\n      summary: アノテーションの取得\n      description: |\n        アノテーションを取得します。\n      security:\n        - AllProjectMember: []\n      operationId: getEditorAnnotation\n      parameters:\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: task_id\n          in: path\n          description: タスクID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n        - name: task_history_id\n          in: query\n          description: |\n            過去のフェーズのアノテーションを取得する場合、タスク履歴IDを指定します。未指定時は最新のアノテーションを取得します。\n\n            過去のアノテーションデータは最後に保存してから30日前のデータまで取得できます。\n            30日より前のデータを取得しようとした場合はアノテーションデータは空リストとなります。\n          required: false\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/TaskHistoryId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Annotation\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-annotation\n      summary: アノテーション更新\n      description: |\n        アノテーションを更新します。\n\n        APIを実行できるユーザーは、以下の通りです。\n        * 過去に誰にも割り当てられていないタスク：プロジェクトオーナーロールを持つユーザー\n        * 過去に誰かに割り当てられたことがあるタスク：タスクの現在の担当者\n\n        ただし、`is_protected`は、プロジェクトオーナーロールを持つユーザーのみ変更可能です。\n      security:\n      - AllProjectMember: []\n      operationId: putAnnotation\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutAnnotationRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Annotation\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作、または、先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/inputs/{input_data_id}/annotation/simple:\n    get:\n      tags:\n      - af-annotation\n      summary: Simpleアノテーションの取得\n      description: |\n        Simpleアノテーションを取得します。\n\n        [getAnnotationArchive](#operation/getAnnotationArchive) APIでダウンロードできるSimpleアノテーションZIPの一部を、取得することができます。\n\n        **注意:** このAPIでは、塗りつぶし画像をダウンロードするためのURLを取得できません。\n\n      security:\n      - AllProjectMember: []\n      operationId: getAnnotation\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/SimpleAnnotation\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/archive/full:\n    get:\n      tags:\n      - af-annotation\n      summary: FullアノテーションZIP取得\n      description: |\n        FullアノテーションZIPをダウンロードするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効します。\n\n        アノテーションZIPの更新中に、このAPIを実行すると409エラーが発生します。\n\n        FullアノテーションZIPのデータ構造については、[Full Annotation ZIP](#section/Full-Annotation-ZIP)を参照ください。\n      security:\n      - ProjectDataUser: []\n      operationId: getArchiveFullWithProId\n      deprecated: true\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: アノテーションZIPを更新中のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/archive/simple:\n    get:\n      tags:\n      - af-annotation\n      summary: SimpleアノテーションZIP取得\n      description: |\n        SimpleアノテーションZIPをダウンロードするための、認証済み一時URLを取得します。\n        取得したURLは1時間で失効します。\n\n        アノテーションZIPの更新中に、このAPIを実行すると409エラーが発生します。\n\n        SimpleアノテーションZIPのデータ構造については、[Simple Annotation ZIP](#section/Simple-Annotation-ZIP)を参照ください。\n\n      security:\n      - ProjectDataUser: []\n      operationId: getAnnotationArchive\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"201\":\n          $ref: \"swagger-api-components.yaml#/components/responses/FileRedirectResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: アノテーションZIPを更新中のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/archive/update:\n    post:\n      tags:\n      - af-annotation\n      summary: アノテーションZIP更新開始\n      description: |\n        アノテーションZIPの更新を開始します。\n        アノテーションZIPの更新は、データ量によっては数十分以上かかる場合もあります。\n\n        アノテーションZIPは毎日AM03:00(JST)頃に自動更新されますが、本APIを用いると、自動更新を待たずにアノテーションZIPの更新を要求できます。\n\n        本APIを実行すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-annotation`）。\n\n      security:\n      - ProjectDataUser: []\n      operationId: postAnnotationArchiveUpdate\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"202\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/PostAnnotationArchiveUpdateResponse\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"409\":\n          description: ジョブの同時実行制限による失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorStateMismatch\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/inputs/{input_data_id}/inspections:\n    get:\n      deprecated: true\n      tags:\n      - af-inspection\n      summary: 検査コメント一括取得\n      description: |\n        指定されたタスクで、指定された入力データにつけられた検査コメントをすべて取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getInspections\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Inspection\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      deprecated: true\n      tags:\n      - af-inspection\n      summary: 検査コメント一括更新\n      description: |\n        検査コメントを一括更新します。\n        タスクの現在の担当者でない場合、またはタスクの状態が「作業中」でない場合は409エラーになります。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、「更新（作成含む）」と「削除」の2通りがあり、それぞれJSONオブジェクト構造が異なります。\n        これら操作オブジェクトを複数含めることで、1リクエストで複数の更新や削除ができます。\n\n        既に作成済みの検査コメントのうち、リクエストボディの配列に含まれないものは更新されません。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n      security:\n      - AllProjectMember: []\n      operationId: batchUpdateInspections\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: task_id\n        in: path\n        description: タスクID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchInspectionRequestItem\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Inspection\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作、または、先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/tasks/{task_id}/inputs/{input_data_id}/comments:\n    get:\n      tags:\n        - af-comment\n      summary: コメント一括取得\n      description: |\n        指定されたタスクで、指定された入力データにつけられたコメントをすべて取得します。\n      security:\n        - AllProjectMember: [ ]\n      operationId: getComments\n      parameters:\n        - name: v\n          in: query\n          description: |\n            2 を指定した場合、検査コメントのデータも含めたコメントデータを返します。\n\n            パラメーターの指定がない、あるいは値が 2 以外の場合は検査コメントを除いたコメントデータを返します。\n          required: false\n          schema:\n            type: string\n            example: \"2\"\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: task_id\n          in: path\n          description: タスクID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Comment\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n        - af-comment\n      summary: コメント一括更新\n      description: |\n        コメントを一括更新します。\n        タスクの現在の担当者でない場合、またはタスクの状態が「作業中」でない場合は409エラーになります。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、「更新（作成含む）」と「削除」の2通りがあり、それぞれJSONオブジェクト構造が異なります。\n        これら操作オブジェクトを複数含めることで、1リクエストで複数の更新や削除ができます。\n\n        既に作成済みのコメントのうち、リクエストボディの配列に含まれないものは更新されません。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n      security:\n        - AllProjectMember: [ ]\n      operationId: batchUpdateComments\n      parameters:\n        - name: v\n          in: query\n          description: |\n            2 を指定した場合、検査コメントのデータも含めたコメントデータを返します。\n\n            パラメーターの指定がない、あるいは値が 2 以外の場合は検査コメントを除いたコメントデータを返します。\n          required: false\n          schema:\n            type: string\n            example: \"2\"\n        - name: project_id\n          in: path\n          description: プロジェクトID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n        - name: task_id\n          in: path\n          description: タスクID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/TaskId\"\n        - name: input_data_id\n          in: path\n          description: 入力データID\n          required: true\n          schema:\n            $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchCommentRequestItem\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/Comment\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作、または、先に更新されているため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/inputs:\n    get:\n      tags:\n      - af-input\n      summary: 入力データの一括取得\n      description: |\n        入力データを一括で取得します。\n\n      security:\n      - AllProjectMember: []\n      operationId: getInputDataList\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: query\n        description: 入力データIDでの部分一致検索で使用。大文字小文字は区別しません。\n        required: false\n        schema:\n          type: string\n          minLength: 1\n          maxLength: 300\n      - name: input_data_name\n        in: query\n        description: 入力データ名での部分一致検索で使用。大文字小文字は区別しません。\n        required: false\n        schema:\n          type: string\n          minLength: 1\n          maxLength: 300\n      - name: input_data_path\n        in: query\n        description: 入力データパスでの部分一致検索で使用。\n        required: false\n        schema:\n          type: string\n          minLength: 1\n          maxLength: 300\n      - name: task_id\n        in: query\n        description: 入力データが紐づくタスクIDの部分一致検索で使用。大文字小文字は区別しません。条件に合致した先頭100件のタスクに使われている入力データを検索します。\n        required: false\n        schema:\n          type: string\n          minLength: 1\n          maxLength: 300\n      - name: from\n        in: query\n        description: 指定した日時以降に更新された入力データを取得します。日時のフォーマットはISO 8601 拡張形式です。\n        required: false\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        description: 指定した日時以前に更新された入力データを取得します。日時のフォーマットはISO 8601 拡張形式です。\n        required: false\n        schema:\n          type: string\n          format: date-time\n      - name: page\n        in: query\n        description: 検索結果のうち、取得したいページの番号(1始まり）\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          default: 1\n      - name: limit\n        in: query\n        description: 1ページあたりの取得するデータ件数\n        required: false\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 200\n          default: 30\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputDataList\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    post:\n      tags:\n      - af-input\n      summary: 入力データの一括更新\n      description: |\n        入力データを一括更新します。\n\n        リクエストボディは、1個以上の「操作」オブジェクトを含むJSON配列になります。\n        操作オブジェクトには、現在「削除」しかありません。\n        これら操作オブジェクトを複数含めることで、1個のリクエストで複数の削除ができます。\n\n        複数の操作のうち、1つでも失敗するとAPIのレスポンス全体としては失敗になります。 成功した部分までは反映されます。\n      security:\n      - ProjectOwner: []\n      operationId: batchUpdateInputs\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"swagger-api-components.yaml#/components/schemas/BatchInputDataRequestItem\"\n      responses:\n        \"200\":\n          description: 正常。レスポンスには、更新された入力データが含まれます。\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          # TODO Error定義構造化(KRSANNOFAC-1502)\n          description: 停止中プロジェクトに対する操作のため失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Errors\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/inputs/{input_data_id}:\n    get:\n      tags:\n      - af-input\n      summary: 入力データの取得\n      description: |\n        入力データを取得します。\n\n      security:\n      - AllProjectMember: []\n      operationId: getInputData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-input\n      summary: |\n        入力データの作成/更新\n      description: |\n        入力データを作成または更新します。\n\n        Annofabにファイルをアップロードして入力データを作成する場合は、事前に[createTempPath](#operation/createTempPath) APIを実行してください。\n\n        ### 画像のリサイズ\n        Annofabにアップロードした画像は、自動的に「長辺4096px以内」になるよう縮小されます。\n        アノテーションの座標値は、縮小前の画像サイズに対応する値に復元されます。\n\n        ### ZIPファイルで入力データをまとめて作成する\n        複数のファイルをZIPで圧縮してAnnofabにアップロードすると、入力データをまとめて作成できます。\n\n        パスパラメータの`input_data_id`、リクエストボディの`input_data_name`には、適当な値を指定してください。\n\n        ZIPファイルを入力データとして登録すると、バックグラウンドジョブが登録されます。ジョブは [getProjectJob](#operation/getProjectJob) APIで確認できます（ジョブ種別は`gen-inputs`）。\n\n        ZIPファイルの制限事項は、以下の通りです。\n        * アップロードできるZIPファイルのサイズは、最大5GBです。\n        * UTF-8エンコーディングのみ対応しています。\n        * ZIPファイル内の次の名前のファイルは、入力データとして登録されません。\n            * `Thumbs.db`\n            * `__MACOSX`\n            * `.DS_Store`\n            * `desktop.ini`\n            * 上記以外の、ファイル名先頭が `.`（ドット）で始まるファイル\n        * ZIPファイル内の `.`（ドット）から始まるフォルダ以下のファイルは、入力データとして登録されません。\n\n        ### ストリーミング形式の動画を入力データとして登録する\n        ストリーミング形式の動画をAnnofabにアップロードして、入力データとして登録できます。\n\n        ただし、ZIPで圧縮する必要があります。ZIPファイルには、m3u8ファイルとtsファイルの両方を含めてください。\n        m3u8ファイルに記述された相対パスでtsファイルは、参照可能である必要があります。\n\n        以下に、フォルダ構成のサンプルを記載します。\n\n        ```\n          hoge.zip/\n          ├── hoge.ts\n          ├── fuga/\n          │   ├── foo.m3u8    (hoge.ts, fuga/foo1.ts, fuga/foo2.tsを参照)\n          │   ├── foo1.ts\n          │   ├── foo2.ts\n          │   └── lib\n          ├── piyo1/\n          │   ├── piyo2\n          │   │   ├── bar.ts\n          │   ├── bar.m3u8    (hoge.ts, piyo1/piyo2/bar.tsを参照)\n        ```\n\n        ### 注意事項\n        * `input_data_path`のスキーマが`https`の場合、`input_data_name`もしくは`input_data_path`の末尾にファイルの拡張子を含むようにしてください。\n        Annofabは拡張子からファイル形式を識別します。`input_data_name`と`input_data_path`の両方に拡張子が含まれている場合は、`input_data_name`の拡張子がファイル形式の識別に使われます。\n      security:\n      - ProjectOwner: []\n      operationId: putInputData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: |\n          入力データID。[値の制約についてはこちら。](#section/API-Convention/APIID)\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/InputDataRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"202\":\n          description: zipファイルを受領、バッチにて登録開始。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ProjectJobInfo\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"409\":\n          description: 先に更新されているため、またはジョブの同時実行制御（zipファイルをアップロードした場合）により失敗\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/ErrorAlreadyUpdated\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-input\n      summary: 入力データの削除\n      description: |\n        入力データを削除します。\n\n      security:\n      - ProjectOwner: []\n      operationId: deleteInputData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常。削除した入力データを返します\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InputData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"403\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorForbiddenResource\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/inputs/{input_data_id}/supplementary-data:\n    get:\n      tags:\n      - af-supplementary\n      summary: 補助情報一括取得\n      description: |\n        入力データに紐付けられた補助情報をすべて取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getSupplementaryDataList\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/inputs/{input_data_id}/supplementary-data/{supplementary_data_id}:\n    put:\n      tags:\n      - af-supplementary\n      summary: 補助情報作成/更新\n      description: |\n        補助情報を作成または更新します。\n      security:\n      - ProjectOwner: []\n      operationId: putSupplementaryData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      - name: supplementary_data_id\n        in: path\n        description: 補助情報ID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryDataId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryDataRequest\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryData\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    delete:\n      tags:\n      - af-supplementary\n      summary: 補助情報削除\n      description: |\n        補助情報を削除します。\n      security:\n      - ProjectOwner: []\n      operationId: deleteSupplementaryData\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: input_data_id\n        in: path\n        description: 入力データID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InputDataId\"\n      - name: supplementary_data_id\n        in: path\n        description: 補助情報ID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/SupplementaryDataId\"\n      responses:\n        \"200\":\n          description: 正常\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/create-temp-path:\n    post:\n      tags:\n      - af-input\n      summary: アップロード先URLの取得\n      description: |\n        Annofabにファイルをアップロードするのに必要な情報を取得します。\n\n        このAPIは、Annofabにファイルをアップロードして、入力データや補助情報を作成する際に使用します。\n\n        Annofabにファイルをアップロードして入力データを作成する手順は、以下の通りです。\n\n        1. APIを実行して、ファイルのアップロードに必要な情報を取得する。\n\n        ```\n        $ curl --request POST 'https://annofab.com/api/v1/projects/{project_id}/create-temp-path'\n        {\n          \"url\": \"https://s3.\u003cREGION\u003e.amazonaws.com/\u003cANNOFAB-TEMP-BUCKET\u003e/\u003cUUID\u003e/\u003cUUID\u003e?param1=...\u0026param2=...\",\n          \"path\": \"s3://\u003cANNOFAB-TEMPORARY-BUCKET-NAME\u003e/\u003cUUID\u003e/\u003cUUID\u003e\"\n        }\n        ```\n\n        2. 手順1で取得した`url`に対して、HTTP PUTメソッドで、ファイルをアップロードする。\n\n        ```\n        $ curl --request PUT --header 'Content-Type: {CONTENT_TYPE_HERE}' --data-binary @/hoge.zip 'https://{手順1で取得したurl}'\n        ```\n\n        3. 手順1で取得した`path`を、[putInputData](#operation/putInputData) APIのリクエストボディ`input_data_path`に指定して、putInputData APIを実行する。\n\n        ```\n        $ curl --request PUT --header 'Content-Type: text/json' \\\n         --data '{\"input_data_name\":\"{input_data_name}\", \"input_data_path\":\"{手順1で取得したpath}\" }' \\\n         'https://annofab.com/api/v1/projects/{project_id}/inputs/{input_data_id}'\n        ```\n\n        #### 注意事項\n        * 手順2を実行してから24時間以内に、手順3の操作を完了させてください。手順2でアップロードしたファイルは、24時間経過すると削除されます。\n\n      security:\n      - AllProjectMember: []\n      operationId: createTempPath\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: |\n            正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/DataPath\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction:\n    get:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの取得\n      description: |\n        作業ガイドのHTMLを取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getInstruction\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: history_id\n        in: query\n        description: |\n          [getInstructionHistory](#operation/getInstructionHistory) APIで取得した、作業ガイドの履歴ID\n        required: true\n        schema:\n          type: string\n        example: \"ed55914c-9f04-470e-8af2-373c8def3e8b\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/Instruction\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n    put:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの更新\n      description: |\n        作業ガイドのHTMLを更新します。\n      security:\n      - ProjectOwner: []\n      - ProjectAccepter: []\n      operationId: putInstruction\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"swagger-api-components.yaml#/components/schemas/PutInstructionRequest\"\n      responses:\n        \"200\":\n          description: 作業ガイドの更新が成功した。\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InstructionHistory\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction-history:\n    get:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの編集履歴の取得\n      description: |\n        作業ガイドの編集履歴を取得します。\n        取得される編集履歴は日付の新しい順にソートされます。\n      security:\n      - AllProjectMember: []\n      operationId: getInstructionHistory\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: limit\n        in: query\n        description: 取得する編集履歴の件数\n        required: false\n        schema:\n          type: integer\n          default: 30\n          minimum: 0\n          maximum: 10000\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/InstructionHistory\"\n        \"400\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorInvalidRequest\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction-images:\n    get:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの画像一覧の取得\n      description: |\n        作業ガイドの画像一覧を取得します。\n      security:\n      - AllProjectMember: []\n      operationId: getInstructionImages\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"swagger-api-components.yaml#/components/schemas/InstructionImage\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction-images/{image_id}:\n    delete:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの画像削除\n      description: |\n        作業ガイドの画像を削除します。\n      security:\n      - ProjectOwner: []\n      - ProjectAccepter: []\n      operationId: deleteInstructionImage\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: image_id\n        in: path\n        description: 作業ガイド画像ID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InstructionImageId\"\n      responses:\n        \"200\":\n          description: 正常\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n  /projects/{project_id}/instruction-images/{image_id}/put-url:\n    get:\n      tags:\n      - af-instruction\n      summary: 作業ガイドの画像登録・更新用URL取得\n      description: |\n        プロジェクトの作業ガイドの画像を登録するためのput先URLを取得します。\n\n        作業ガイド画像の登録/更新方法は以下の通りです。\n        1. APIを実行して、ファイルアップロード用のURLを取得する。\n\n        ```\n        $ curl -X GET -H 'Content-Type: {CONTENT_TYPE_HERE}' 'https://annofab.com/api/v1/projects/{project_id}/instruction-images/{image_id}/put-url'\n        ```\n\n        2. 手順1で取得したファイルアップロード用のURLに対して、登録/更新する作業ガイド画像ファイル(`hoge.jpg`)をPUTする。\n\n        ```\n        $ curl -X PUT -H 'Content-Type: {CONTENT_TYPE_HERE}' --data-binary @/hoge.jpg '{ファイルアップロード用のURL}'\n        ```\n\n\n      security:\n      - ProjectOwner: []\n      - ProjectAccepter: []\n      operationId: getInstructionImageUrlForPut\n      parameters:\n      - name: project_id\n        in: path\n        description: プロジェクトID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/ProjectId\"\n      - name: image_id\n        in: path\n        description: 作業ガイド画像ID\n        required: true\n        schema:\n          $ref: \"swagger-api-components.yaml#/components/schemas/InstructionImageId\"\n      responses:\n        \"200\":\n          description: 正常\n          content:\n            application/json:\n              schema:\n                $ref: \"swagger-api-components.yaml#/components/schemas/InstructionImagePath\"\n        \"401\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnauthorizedApi\"\n        \"404\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorMissingResource\"\n        \"503\":\n          $ref: \"swagger-api-components.yaml#/components/responses/ErrorUnderMaintenance\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /projects/{project_id}/instruction-images: get: operation \"getInstructionImages\": parameters: parse parameter \"project_id\": schema: parse schema: resolve \"swagger-api-components.yaml#/components/schemas/ProjectId\": find schema: external base \"swagger-api-components.yaml\" is not supported"
}