{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "installedapp.json",
			"size": 0,
			"path": "openapi3_autogen/installedapp.json",
			"byteSize": 9379,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"installedapp\": {\n        \"description\": \"Represents an installed application.\",\n        \"properties\": {\n          \"ID\": {\n            \"description\": \"Identifier of the object.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"additionalConfiguration\": {\n            \"description\": \"Additional configuration of the app is needed by the app itself.\",\n            \"type\": \"boolean\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Stores additional information about an entity.\",\n            \"type\": \"object\"\n          },\n          \"associatedTags\": {\n            \"description\": \"List of tags attached to an entity.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"categoryID\": {\n            \"description\": \"The category ID of the application.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"checkPublicEndpoint\": {\n            \"description\": \"If true, will look for the public endpoints and store them as annotations in the\\ninstalled app.\",\n            \"type\": \"boolean\"\n          },\n          \"createTime\": {\n            \"description\": \"Creation date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"currentVersion\": {\n            \"description\": \"Version of the installed application.\",\n            \"type\": \"string\"\n          },\n          \"externalWindowButton\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Adds a button in the UI.\",\n            \"type\": \"object\"\n          },\n          \"name\": {\n            \"description\": \"Name of the entity.\",\n            \"example\": \"the name\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace tag attached to an entity.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"normalizedTags\": {\n            \"description\": \"Contains the list of normalized tags of the entities.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"parameters\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Contains the computed parameters to start the application.\",\n            \"type\": \"object\"\n          },\n          \"protected\": {\n            \"description\": \"Defines if the object is protected.\",\n            \"type\": \"boolean\"\n          },\n          \"status\": {\n            \"default\": \"Unknown\",\n            \"description\": \"Status of the application.\",\n            \"enum\": [\n              \"Unknown\",\n              \"Deploying\",\n              \"Initializing\",\n              \"Running\",\n              \"Undeploying\",\n              \"Error\"\n            ],\n            \"readOnly\": true\n          },\n          \"statusMessage\": {\n            \"description\": \"Reason for the status of the application.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"updateTime\": {\n            \"description\": \"Last update date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"installedapp\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/installedapps\": {\n      \"get\": {\n        \"description\": \"Retrieves the list of installed apps.\",\n        \"operationId\": \"get-all-installedapps\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"List of tags to filter on. This parameter is deprecated.\",\n            \"example\": \"a=a\",\n            \"in\": \"query\",\n            \"name\": \"tag\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/installedapp\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/app\",\n          \"highwind\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Installs a new app.\",\n        \"operationId\": \"create-a-new-installedapp\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/installedapp\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/installedapp\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/app\",\n          \"highwind\"\n        ]\n      }\n    },\n    \"/installedapps/{id}\": {\n      \"delete\": {\n        \"description\": \"Deletes the application with the given ID.\",\n        \"operationId\": \"delete-installedapp-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/installedapp\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/app\",\n          \"highwind\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieves the application with the given ID.\",\n        \"operationId\": \"get-installedapp-by-ID\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/installedapp\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/app\",\n          \"highwind\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"put\": {\n        \"description\": \"Updates the application with the given ID.\",\n        \"operationId\": \"update-installedapp-by-ID\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/installedapp\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/installedapp\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/app\",\n          \"highwind\"\n        ]\n      }\n    },\n    \"/installedapps/{id}/logs\": {\n      \"get\": {\n        \"description\": \"Returns the logs for an application.\",\n        \"operationId\": \"get-all-logs-for-a-given-installedapp\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"./log#/components/schemas/log\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/app\",\n          \"highwind\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'integration/app'\",\n      \"name\": \"integration/app\"\n    },\n    {\n      \"description\": \"This tag is for package 'highwind'\",\n      \"name\": \"highwind\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /installedapps/{id}/logs: get: operation \"get-all-logs-for-a-given-installedapp\": responses: 200: content: application/json: schema: parse schema: item: parse schema: resolve \"./log#/components/schemas/log\": find schema: external base \"./log\" is not supported"
}