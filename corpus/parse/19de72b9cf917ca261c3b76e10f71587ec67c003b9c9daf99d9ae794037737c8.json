{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pingcap/tiflow"
		},
		"file": {
			"name": "dm.yaml",
			"size": 0,
			"path": "engine/jobmaster/dm/openapi/spec/dm.yaml",
			"byteSize": 7883,
			"content": "openapi: \"3.0.0\"\ntags:\n  - name: job\n    description: job\n  - name: task\n    description: task\n\npaths:\n  /config:\n    get:\n      tags:\n        - job\n      summary: \"get job config\"\n      operationId: \"DMAPIGetJobConfig\"\n      responses:\n        \"200\":\n          description: \"job\"\n          content:\n            \"application/json\":\n              schema:\n                type: json\n        \"404\":\n          description: \"config not found\"\n    put:\n      tags:\n        - job\n      summary: \"update job config\"\n      operationId: \"DMAPIUpdateJobConfig\"\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/UpdateJobConfigRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"500\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /status:\n    get:\n      tags:\n        - job\n      summary: \"get the current status of the job\"\n      operationId: \"DMAPIGetJobStatus\"\n      parameters:\n        - name: \"tasks\"\n          in: query\n          description: \"globally unique data source name\"\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                type: json\n        \"500\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    put:\n      tags:\n        - job\n      summary: \"operate the stage of the job\"\n      operationId: \"DMAPIOperateJob\"\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/OperateJobRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n        \"500\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /schema/tasks/{task-name}:\n    get:\n      tags:\n        - task\n      summary: \"get schema\"\n      operationId: \"DMAPIGetSchema\"\n      parameters:\n        - name: \"task-name\"\n          in: path\n          description: \"task name\"\n          required: true\n          schema:\n            type: string\n        - name: \"database\"\n          in: query\n          description: \"database name\"\n          required: false\n          schema:\n            type: string\n        - name: \"table\"\n          in: query\n          description: \"table name\"\n          required: false\n          schema:\n            type: string\n        - name: \"target\"\n          in: query\n          description: \"target table\"\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                type: json\n        \"500\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    put:\n      tags:\n        - tasks\n      summary: \"set schema\"\n      operationId: \"DMAPISetSchema\"\n      parameters:\n        - name: \"task-name\"\n          in: path\n          description: \"task name\"\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/SetBinlogSchemaRequest\"\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                type: json\n        \"500\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n  /binlog/tasks/{task-name}:\n    get:\n      tags:\n        - task\n      summary: \"get binlog operator\"\n      operationId: \"DMAPIGetBinlogOperator\"\n      parameters:\n        - name: \"task-name\"\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: \"binlog_pos\"\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                type: json\n        \"500\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    post:\n      tags:\n        - task\n      summary: \"set binlog operator\"\n      operationId: \"DMAPISetBinlogOperator\"\n      parameters:\n        - name: \"task-name\"\n          in: path\n          description: \"task name\"\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: \"request body\"\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/SetBinlogOperatorRequest\"\n      responses:\n        \"201\":\n          description: \"success\"\n          content:\n            \"application/json\":\n              schema:\n                type: json\n        \"500\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n    delete:\n      tags:\n        - task\n      summary: \"delete binlog operator\"\n      operationId: \"DMAPIDeleteBinlogOperator\"\n      parameters:\n        - name: \"task-name\"\n          in: path\n          description: \"task name\"\n          required: true\n          schema:\n            type: string\n        - name: \"binlog_pos\"\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: \"success\"\n        \"500\":\n          description: \"failed\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/ErrorWithMessage\"\n\ncomponents:\n  schemas:\n    ErrorWithMessage:\n      description: \"operation error\"\n      type: object\n      properties:\n        code:\n          type: integer\n          description: \"error code\"\n        message:\n          type: string\n          description: \"error message\"\n        details:\n          type: array\n          items:\n            type: string\n      required:\n        - \"code\"\n        - \"message\"\n    UpdateJobConfigRequest:\n      type: object\n      properties:\n        config:\n          type: string\n      required:\n        - \"config\"\n    OperateJobRequest:\n      type: object\n      properties:\n        tasks:\n          type: array\n          items:\n            type: string\n        op:\n          type: string\n          enum:\n            - \"resume\"\n            - \"pause\"\n      required:\n        - \"op\"\n    SetBinlogOperatorRequest:\n      type: object\n      properties:\n        op:\n          type: string\n          enum:\n            - \"skip\"\n            - \"replace\"\n            - \"inject\"\n        binlog_pos:\n          type: string\n        sqls:\n          type: array\n          items:\n            type: string\n      required:\n        - \"op\"\n    SetBinlogSchemaRequest:\n      type: object\n      properties:\n        sql:\n          type: string\n        database:\n          type: string\n        table:\n          type: string\n        from_source:\n          type: boolean\n          default: false\n        from_target:\n          type: boolean\n          default: false\n      required:\n        - \"database\"\n        - \"table\"\n        - \"sql\"\n",
			"canonicalURL": "/github.com/pingcap/tiflow@6587d4ebb46baeeecf14158a14385f6f7870ef74/-/blob/engine/jobmaster/dm/openapi/spec/dm.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/pingcap/tiflow/blob/6587d4ebb46baeeecf14158a14385f6f7870ef74/engine/jobmaster/dm/openapi/spec/dm.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/binlog/tasks/{task-name}\": get: operation \"DMAPIGetBinlogOperator\": responses: 200: content: application/json: schema: parse schema: at 1:1883: unexpected schema type: \"json\""
}