{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "PersonSearchRequest.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Core/People/Schemas/PersonSearchRequest.yaml",
			"byteSize": 1930,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    PersonSearchRequest:\n      allOf:\n      - $ref: '#/components/schemas/SearchRequestParametersPaging'\n      - $ref: '#/components/schemas/SearchRequestParametersExternalReferences'\n      - type: object\n        properties:\n          emailAddresses:\n            description: email address for this person\n            type: array\n            items:\n              type: string\n            example: ['bob@bob.com', 'rob@bob.com']\n          firstNames:\n            description: Persons first name\n            type: array\n            items:\n              type: string\n            example: ['Bob', 'Rob']\n          lastNames:\n            description: Persons last name\n            type: array\n            items:\n              type: string\n            example: ['Robertson', 'Smith']\n          mailingAddresses:\n            description: physical address of this person\n            type: array\n            items:\n              type: string\n            example: ['123 Main Street', '456 Side Street']\n          middleNames:\n            description: Persons middle name\n            type: array\n            items:\n              type: string\n            example: ['Danger', 'Fight']\n          personDbIds:\n            description: Unique ID for this person\n            type: array\n            items:\n              type: string\n            example: ['1e7731ab', 'bc28cff8']\n          phoneNumbers:\n            description: phone number of this person\n            type: array\n            items:\n              type: string\n            example: ['9995555555', '8884444444']\n          userIDs:\n            description: A systems user ID associated with this person. Different from personDbId because you could have a person who is not a user of the system.\n            type: array\n            items:\n              type: string\n            example: ['bob', 'rob']\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"PersonSearchRequest\": parse schema: allOf: [0]: parse schema: resolve \"#/components/schemas/SearchRequestParametersPaging\": find schema: resolve \"#/components/schemas/SearchRequestParametersPaging\": can't find value for \"components/schemas/SearchRequestParametersPaging\""
}