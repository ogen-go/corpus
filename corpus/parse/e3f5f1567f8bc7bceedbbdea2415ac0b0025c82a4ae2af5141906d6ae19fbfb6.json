{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Khaled-Morad/Social-Media-Application"
		},
		"file": {
			"name": "api-docs.json",
			"size": 0,
			"path": "pied_piper_backend/storage/api-docs/api-docs.json",
			"byteSize": 50089,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Pied Piper\",\n        \"version\": \"1.0.0\"\n    },\n    \"paths\": {\n        \"/api/check/{type}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"summary\": \"check if code is true for reset / send\",\n                \"description\": \"Uchecking from code\",\n                \"operationId\": \"check\",\n                \"parameters\": [\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"path\",\n                        \"description\": \"reset or send\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"code\"\n                                ],\n                                \"properties\": {\n                                    \"code\": {\n                                        \"type\": \"integer\"\n                                    },\n                                    \"password\": {\n                                        \"type\": \"password\"\n                                    },\n                                    \"password_confirmation\": {\n                                        \"type\": \"password\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"operation done\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/login/{role}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"summary\": \"User login\",\n                \"description\": \"User login here\",\n                \"operationId\": \"2\",\n                \"parameters\": [\n                    {\n                        \"name\": \"role\",\n                        \"in\": \"path\",\n                        \"description\": \"user or admin\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"email\",\n                                    \"password\"\n                                ],\n                                \"properties\": {\n                                    \"email\": {\n                                        \"type\": \"text\"\n                                    },\n                                    \"password\": {\n                                        \"type\": \"password\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"loggedin successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/logout\": {\n            \"post\": {\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"summary\": \"logout user / admin\",\n                \"operationId\": \"logout\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"logged out\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/signup/{from}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"summary\": \"User signup\",\n                \"description\": \"User signup here\",\n                \"operationId\": \"Register\",\n                \"parameters\": [\n                    {\n                        \"name\": \"from\",\n                        \"in\": \"path\",\n                        \"description\": \"web or flutter\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"name\",\n                                    \"email\",\n                                    \"password\",\n                                    \"password_confirmation\"\n                                ],\n                                \"properties\": {\n                                    \"name\": {\n                                        \"type\": \"text\"\n                                    },\n                                    \"email\": {\n                                        \"type\": \"email\"\n                                    },\n                                    \"password\": {\n                                        \"type\": \"password\"\n                                    },\n                                    \"password_confirmation\": {\n                                        \"type\": \"password\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Register Successfully / user added to database\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Unprocessable Entity\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/code/{type}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"summary\": \"send code to user\",\n                \"description\": \"sending code code\",\n                \"operationId\": \"sendCode\",\n                \"parameters\": [\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"path\",\n                        \"description\": \"reset or send\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"email\"\n                                ],\n                                \"properties\": {\n                                    \"email\": {\n                                        \"type\": \"email\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"sended successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/verify/{user}'\": {\n            \"post\": {\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"summary\": \"verify user web\",\n                \"description\": \"verify user\",\n                \"operationId\": \"verify\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"user id\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"signature\",\n                                    \"expires\"\n                                ],\n                                \"properties\": {\n                                    \"signature\": {\n                                        \"type\": \"text\"\n                                    },\n                                    \"expires\": {\n                                        \"type\": \"text\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"verified successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/resend/{from}'\": {\n            \"post\": {\n                \"tags\": [\n                    \"Authentication\"\n                ],\n                \"summary\": \"resend code / link to verify\",\n                \"description\": \"verify user\",\n                \"operationId\": \"resend\",\n                \"parameters\": [\n                    {\n                        \"name\": \"from\",\n                        \"in\": \"path\",\n                        \"description\": \"web / flutter\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"email\"\n                                ],\n                                \"properties\": {\n                                    \"email\": {\n                                        \"type\": \"email\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"resended successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/friend/add/{id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"send request to a person\",\n                \"operationId\": \"add friend\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"enter the person id you want to add as a friend\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"request sended successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/friend/refuse/{id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"refuse friend request\",\n                \"operationId\": \"refuse friend request\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"enter the person id you want to refuse friend request\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"request refuesd successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/friend/cancel/{id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"cancel friend request\",\n                \"operationId\": \"cancel sended friend request\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"enter the person id you want to cancel friend request\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"request canceled successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/friend/accept/{id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"accept friend request\",\n                \"operationId\": \"accept friend request\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"enter the person id you want to accept his friend request\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"request accepted successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/friend/remove/{id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"remove friend\",\n                \"operationId\": \"remove friend\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"enter the friend id you want to remove\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"friend removed successfully\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/friend/suggested\": {\n            \"get\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"get all suggested friends\",\n                \"operationId\": \"suggested\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all suggested friends\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/friend/getMy\": {\n            \"get\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"get my friends\",\n                \"operationId\": \"getMyFriends\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"enter the person id you want to get mutual friends with\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all mutual friends\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/friend/getMutual/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"get mutule friends\",\n                \"operationId\": \"getMutualFriends\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"my friends\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/friend/getSentRequests\": {\n            \"get\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"get my sent requests\",\n                \"operationId\": \"getSentRequests\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all requests\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/friend/receivedRequests\": {\n            \"get\": {\n                \"tags\": [\n                    \"Friends\"\n                ],\n                \"summary\": \"get received requests\",\n                \"operationId\": \"receivedRequests\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all received requests\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/comment/create/{post_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Comments\"\n                ],\n                \"summary\": \"create comment\",\n                \"description\": \"User create comment here\",\n                \"operationId\": \"create_comment\",\n                \"parameters\": [\n                    {\n                        \"name\": \"post_id\",\n                        \"in\": \"path\",\n                        \"description\": \"the id of post you want comment on\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"properties\": {\n                                    \"text\": {\n                                        \"type\": \"text\"\n                                    },\n                                    \"image\": {\n                                        \"type\": \"file\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"post created successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/comment/delete/{comment_id}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"Comments\"\n                ],\n                \"summary\": \"delete comment\",\n                \"operationId\": \"delet_comment\",\n                \"parameters\": [\n                    {\n                        \"name\": \"comment_id\",\n                        \"in\": \"path\",\n                        \"description\": \"id of  comment you want to delete\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"comment deleted\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/create/{type}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Posts\"\n                ],\n                \"summary\": \"create post\",\n                \"description\": \"User create post here\",\n                \"operationId\": \"create post\",\n                \"parameters\": [\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"path\",\n                        \"description\": \"normal or job or profilePicture or coverPicture\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"properties\": {\n                                    \"text\": {\n                                        \"type\": \"text\"\n                                    },\n                                    \"images[]\": {\n                                        \"type\": \"file\"\n                                    },\n                                    \"video\": {\n                                        \"type\": \"file\"\n                                    },\n                                    \"voice_record\": {\n                                        \"type\": \"file\"\n                                    },\n                                    \"background\": {\n                                        \"type\": \"text\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"post created successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/update/{post_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Posts\"\n                ],\n                \"summary\": \"update post\",\n                \"description\": \"User update post here\",\n                \"operationId\": \"update post\",\n                \"parameters\": [\n                    {\n                        \"name\": \"post_id\",\n                        \"in\": \"path\",\n                        \"description\": \"id of the post\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"properties\": {\n                                    \"text\": {\n                                        \"type\": \"text\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"post Updated successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/delete/{post_id}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"Posts\"\n                ],\n                \"summary\": \"delete post\",\n                \"operationId\": \"deletePost\",\n                \"parameters\": [\n                    {\n                        \"name\": \"post_id\",\n                        \"in\": \"path\",\n                        \"description\": \"id of post you want to delete\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"post deleted\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/friendsPosts\": {\n            \"get\": {\n                \"tags\": [\n                    \"Posts\"\n                ],\n                \"summary\": \"get all posts\",\n                \"operationId\": \"friendsPosts\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all posts\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/reaction/toggle/{type}/{id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"reactions\"\n                ],\n                \"summary\": \"create/delete/updeate comment\",\n                \"description\": \"User create/delete/updeate reactions here\",\n                \"operationId\": \"create/delete/updeate_reaction\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"the id of post/comment you want create reaction on\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"properties\": {\n                                    \"type\": {\n                                        \"type\": \"text\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"reaction created successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/savePost/{Post_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"saved posts\"\n                ],\n                \"summary\": \"create saved post\",\n                \"description\": \"User create saved post here\",\n                \"operationId\": \"create_saved_post\",\n                \"parameters\": [\n                    {\n                        \"name\": \"post_id\",\n                        \"in\": \"path\",\n                        \"description\": \"post_id of the post that you want to save\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"saved post created successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/mySavedPosts\": {\n            \"get\": {\n                \"tags\": [\n                    \"saved posts\"\n                ],\n                \"summary\": \"get all Saved posts\",\n                \"operationId\": \"SavedPosts\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all Saved posts\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/DeleteSavedPost/{SavedPost_id}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"saved posts\"\n                ],\n                \"summary\": \"delete Savedpost\",\n                \"operationId\": \"delete_SavedPost\",\n                \"parameters\": [\n                    {\n                        \"name\": \"SavedPost_id\",\n                        \"in\": \"path\",\n                        \"description\": \"id of Savedpost you want to delete\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"saved post deleted\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/sharePost/{post_id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"shared posts\"\n                ],\n                \"summary\": \"shere post\",\n                \"description\": \"User shere saved  here\",\n                \"operationId\": \"shere_post\",\n                \"parameters\": [\n                    {\n                        \"name\": \"post_id\",\n                        \"in\": \"path\",\n                        \"description\": \"post_id of the post that you want to shere\",\n                        \"required\": true\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"post sherded successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/post/deleteSharedPost/{SharedPost_id}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"shared posts\"\n                ],\n                \"summary\": \"delete sharedpost\",\n                \"operationId\": \"delete_shaerdPost\",\n                \"parameters\": [\n                    {\n                        \"name\": \"SharedPost_id\",\n                        \"in\": \"path\",\n                        \"description\": \"id of SharedPost you want to delete\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"SharedPost deleted\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/story/create\": {\n            \"post\": {\n                \"tags\": [\n                    \"Stories\"\n                ],\n                \"summary\": \"create story\",\n                \"description\": \"User create story here\",\n                \"operationId\": \"create story\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"properties\": {\n                                    \"text\": {\n                                        \"type\": \"text\"\n                                    },\n                                    \"image\": {\n                                        \"type\": \"file\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"story created successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/story/delete/{story_id}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"Stories\"\n                ],\n                \"summary\": \"delete story\",\n                \"operationId\": \"delete_story\",\n                \"parameters\": [\n                    {\n                        \"name\": \"story_id\",\n                        \"in\": \"path\",\n                        \"description\": \"id of story you want to delete\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"story deleted\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/story/getAllStories\": {\n            \"get\": {\n                \"tags\": [\n                    \"Stories\"\n                ],\n                \"summary\": \"get all stories\",\n                \"operationId\": \"friends_Stories\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all stories\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/users\": {\n            \"get\": {\n                \"tags\": [\n                    \"Search\"\n                ],\n                \"summary\": \"get users by search\",\n                \"operationId\": \"search for users\",\n                \"parameters\": [\n                    {\n                        \"name\": \"searrch\",\n                        \"in\": \"query\",\n                        \"description\": \"enter name of user you want to search for\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all found users\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/search/add/{id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Search\"\n                ],\n                \"summary\": \"add to history\",\n                \"operationId\": \"addToHistory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"enter the user searched id to add\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"added to search history\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/search/delete/{id}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Search\"\n                ],\n                \"summary\": \"delete from search history\",\n                \"operationId\": \"deleteFromHistory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"enter the user searched id to remove from search history\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"removed from search history\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/search/all\": {\n            \"get\": {\n                \"tags\": [\n                    \"Search\"\n                ],\n                \"summary\": \"get users by search\",\n                \"operationId\": \"getSearchHistory\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"all search history\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/profile/{id}\": {\n            \"get\": {\n                \"tags\": [\n                    \"user_profile\"\n                ],\n                \"summary\": \"get user profile\",\n                \"operationId\": \"profile\",\n                \"parameters\": [\n                    {\n                        \"name\": \"id\",\n                        \"in\": \"path\",\n                        \"description\": \"id of your profile or of other user profile\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"user profile\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/updatePicture\": {\n            \"post\": {\n                \"tags\": [\n                    \"user_profile\"\n                ],\n                \"summary\": \"update picture\",\n                \"description\": \"User update his picutre here\",\n                \"operationId\": \"update_picture\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"properties\": {\n                                    \"picture\": {\n                                        \"type\": \"file\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"picture updated successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/updateCover\": {\n            \"post\": {\n                \"tags\": [\n                    \"user_profile\"\n                ],\n                \"summary\": \"update cover\",\n                \"description\": \"User update his cover here\",\n                \"operationId\": \"update_cover\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [],\n                                \"properties\": {\n                                    \"cover\": {\n                                        \"type\": \"file\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"cover updated successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/userPictures\": {\n            \"get\": {\n                \"tags\": [\n                    \"user_profile\"\n                ],\n                \"summary\": \"get user pictures\",\n                \"operationId\": \"profile_pictures\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"user pictures\"\n                    },\n                    \"401\": {\n                        \"description\": \"unauthorized.\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        },\n        \"/api/updateJobTitles\": {\n            \"post\": {\n                \"tags\": [\n                    \"user_profile\"\n                ],\n                \"summary\": \"update JobTitles\",\n                \"description\": \"User update his JobTitles here\",\n                \"operationId\": \"update_JobTitles\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"required\": [\n                                    \"available_to_hire\",\n                                    \"job_title\",\n                                    \"location\"\n                                ],\n                                \"properties\": {\n                                    \"available_to_hire\": {},\n                                    \"job_title\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"location\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"application/json\": {\n                            \"schema\": {}\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"JobTitles updated successfully!\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"JWT\": []\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"securitySchemes\": {\n            \"JWT\": {\n                \"type\": \"apiKey\",\n                \"description\": \"Enter token in format (Bearer \u003ctoken\u003e)\",\n                \"name\": \"Authorization\",\n                \"in\": \"header\"\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/Khaled-Morad/Social-Media-Application@1b6453f63b3e0db09ac6623d13e6a7a7e6a8bf52/-/blob/pied_piper_backend/storage/api-docs/api-docs.json",
			"externalURLs": [
				{
					"url": "https://github.com/Khaled-Morad/Social-Media-Application/blob/1b6453f63b3e0db09ac6623d13e6a7a7e6a8bf52/pied_piper_backend/storage/api-docs/api-docs.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/check/{type}\": post: operation \"check\": parameters: parse parameter \"type\": at pied_piper_backend/storage/api-docs/api-docs.json:17:21: parameter MUST contain either a schema property, or a content property"
}