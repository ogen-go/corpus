{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ConnectorIO/connectorio-addons"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "bundles/org.connectorio.addons.binding.smartme/src/main/openapi/v1/openapi.yaml",
			"byteSize": 109643,
			"content": "openapi: 3.0.0\ninfo:\n  version: v1\n  title: \"\"\npaths:\n  /api/AccessToken:\n    put:\n      tags:\n        - AccessToken\n      summary: Creates a Access Token to write on a Card (e.g. NFC)\n      description: Creates a Access Token to write on a Card (e.g. NFC)\n      operationId: AccessToken_Put\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccessTokenToPut\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AccessTokenToPut\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/AccessTokenToPut\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/AccessTokenToPut\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/AccessTokenToPut\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/xml:\n              schema:\n                type: string\n      deprecated: false\n  /api/Account/login:\n    get:\n      tags:\n        - Account\n      operationId: Account_Login\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      deprecated: false\n    post:\n      tags:\n        - Account\n      operationId: Account_Login\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      deprecated: false\n  \"/api/Actions/{id}\":\n    get:\n      tags:\n        - Actions\n      summary: Gets all available Actions of a Device\n      description: Gets all available Actions of a Device\n      operationId: Actions_Get\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ActionInformation\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ActionInformation\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ActionInformation\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ActionInformation\"\n      deprecated: false\n  /api/Actions:\n    post:\n      tags:\n        - Actions\n      summary: Set an action for the specified device.\n      description: Set an action for the specified device.\n      operationId: Actions_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ActionToPost\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ActionToPost\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/ActionToPost\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/ActionToPost\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/ActionToPost\"\n        description: The Action Data\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  \"/api/AdditionalDeviceInformation/{id}\":\n    get:\n      tags:\n        - AdditionalDeviceInformation\n      summary: Gets the additional information (e.g. Firmware Version) about a device.\n      description: Gets the additional information (e.g. Firmware Version) about a device.\n      operationId: AdditionalDeviceInformation_Get\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AdditionalDeviceInformation\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AdditionalDeviceInformation\"\n      deprecated: false\n  /api/CustomDevice:\n    get:\n      tags:\n        - CustomDevice\n      summary: Gets all Custom Devices\n      description: Gets all Devices\n      operationId: CustomDevice_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CustomDeviceToPost\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CustomDeviceToPost\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CustomDeviceToPost\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CustomDeviceToPost\"\n      deprecated: false\n    post:\n      tags:\n        - CustomDevice\n      summary: Creates or updates a Custom Device or updates it's values.\n      description: \"Creates or updates a Custom Device or updates it's values.\\r\n\n        \\            A Custom Device can be any device that like to add\n        some measurement values to the smart-me Cloud.\\r\n\n        \\            Only use a custom device for all non meters.\\r\n\n        \\            For a new device leave the ID empty. To create a\n        device you have to set the DeviceEnergyType.\\r\n\n        \\            To update values, add the ID of the device and the\n        values you like to set.  (See the Data Type Model for more Information)\"\n      operationId: CustomDevice_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomDeviceToPost\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/CustomDeviceToPost\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/CustomDeviceToPost\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/CustomDeviceToPost\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/CustomDeviceToPost\"\n        description: Device object with all the data\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomDeviceToPost\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CustomDeviceToPost\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomDeviceToPost\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomDeviceToPost\"\n        \"401\":\n          description: Unauthorized\n      deprecated: false\n  \"/api/CustomDevice/{id}\":\n    get:\n      tags:\n        - CustomDevice\n      summary: Gets a Custom Device by it's ID\n      description: Gets a Device by it's ID\n      operationId: CustomDevice_Get\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomDeviceToPost\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CustomDeviceToPost\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomDeviceToPost\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CustomDeviceToPost\"\n      deprecated: false\n  /api/DeviceBySerial:\n    get:\n      tags:\n        - DeviceBySerial\n      summary: Gets a Device by it's Serial Number. The Serial is the part before the\n        \"-\".\n      description: Gets a Device by it's Serial Number. The Serial is the part before the\n        \"-\".\n      operationId: DeviceBySerial_Get\n      parameters:\n        - name: serial\n          in: query\n          description: The Serial Number of the device\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n      deprecated: false\n  /api/Devices:\n    get:\n      tags:\n        - Devices\n      summary: Gets all Devices\n      description: Gets all Devices\n      operationId: Devices_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n      deprecated: false\n    post:\n      tags:\n        - Devices\n      summary: Creates or updates a Device or updates it's values.\n      description: \"Creates or updates a Device or updates it's values. \\r\n\n        \\            For a new device leave the ID empty. To create a\n        device you have to set the DeviceEnergyType.\\r\n\n        \\            To update values, add the ID of the device and the\n        values you like to set.  (See the Data Type Model for more Information)\"\n      operationId: Devices_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceToPost\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceToPost\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/DeviceToPost\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/DeviceToPost\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/DeviceToPost\"\n        description: Device object with all the data\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceToPost\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceToPost\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DeviceToPost\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DeviceToPost\"\n        \"401\":\n          description: Unauthorized\n      deprecated: false\n  \"/api/Devices/{id}\":\n    get:\n      tags:\n        - Devices\n      summary: Gets a Device by it's ID\n      description: Gets a Device by it's ID\n      operationId: Devices_Get\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n      deprecated: false\n    put:\n      tags:\n        - Devices\n      summary: \"Updates the On/Off Switch on a device. \\r\n\n        \\            For new implementations please use the \\\"actions\\\"\n        command\"\n      description: \"Updates the On/Off Switch on a device\\r\n\n        \\            For new implementations please use the \\\"actions\\\"\n        command\"\n      operationId: Devices_Put\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the device\n          required: true\n          schema:\n            type: string\n        - name: switchState\n          in: query\n          description: The new state of the switch\n          required: true\n          schema:\n            type: boolean\n        - name: switchNumber\n          in: query\n          description: The number of the switch if there are multiple (1 for L1, 3 for L3)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"401\":\n          description: Unauthorized\n        \"405\":\n          description: MethodNotAllowed\n      deprecated: false\n  /api/DevicesByEnergy:\n    get:\n      tags:\n        - DevicesByEnergy\n      summary: Gets all Devices for an Energy Type\n      description: Gets all Devices for an Etoolnergy Type\n      operationId: DevicesByEnergy_Get\n      parameters:\n        - name: meterEnergyType\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - MeterTypeUnknown\n              - MeterTypeElectricity\n              - MeterTypeWater\n              - MeterTypeGas\n              - MeterTypeHeat\n              - MeterTypeHCA\n              - MeterTypeAllMeters\n              - MeterTypeTemperature\n              - MeterTypeMBusGateway\n              - MeterTypeRS485Gateway\n              - MeterTypeCustomDevice\n              - MeterTypeCompressedAir\n              - MeterTypeSolarLog\n              - MeterTypeVirtualMeter\n              - MeterTypeWMBusGateway\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n      deprecated: false\n  /api/DevicesBySubType:\n    get:\n      tags:\n        - DevicesBySubType\n      summary: Gets all Devices by it's Sub Type (e.g. E-Charging Station)\n      description: Gets all Devices by it's Sub Type (e.g. E-Charging Station)\n      operationId: DevicesBySubType_Get\n      parameters:\n        - name: meterSubType\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - MeterSubTypeUnknown\n              - MeterSubTypeCold\n              - MeterSubTypeHeat\n              - MeterSubTypeChargingStation\n              - MeterSubTypeElectricity\n              - MeterSubTypeWater\n              - MeterSubTypeGas\n              - MeterSubTypeElectricityHeat\n              - MeterSubTypeTemperature\n              - MeterSubTypeVirtualBattery\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n      deprecated: false\n  \"/api/FastSendDeviceValues/{id}\":\n    get:\n      tags:\n        - FastSendDeviceValues\n      summary: \"Force a device to send the data every second (if supported). This for\n        about 30s.\\r\n\n        \\            Don't use this call to force a device to send the\n        data every second for a longer time.\"\n      operationId: FastSendDeviceValues_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  \"/api/Folder/{id}\":\n    get:\n      tags:\n        - Folder\n      summary: Gets the Values for a folder or a meter\n      description: Gets the Values for a folder or a meter\n      operationId: Folder_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderData\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FolderData\"\n      deprecated: false\n  /api/folder/assign:\n    post:\n      tags:\n        - FolderAssign\n      summary: Assign a folder (source) or meter to another folder (target). Can be\n        used to create a folder structure.\n      operationId: FolderAssign_Post\n      parameters:\n        - name: source\n          in: query\n          description: The ID of the meter or folder that should be assign\n          required: true\n          schema:\n            type: string\n        - name: target\n          in: query\n          description: The ID of the meter or folder that should be the parent\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  /api/FolderMenu:\n    get:\n      tags:\n        - FolderMenu\n      summary: Gets the folder menu items (each item might contain child items)\n      operationId: FolderMenu_Get\n      parameters:\n        - name: filter\n          in: query\n          description: \"(optional) Filter for the folders and meters: \\r\n\n            \\            all: load everything\\r\n\n            \\            assigned: load only folders and meters that\n            are assigend to a folder\\r\n\n            \\            unassigend: load only meters that are not\n            assigend to a folder\\r\n\n            \\            user: load only folder and all users\n            assigned to this folders\\r\n\n            \\            subuserlist: load all subusers as a list\"\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderMenuConfiguration\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FolderMenuConfiguration\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FolderMenuConfiguration\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/FolderMenuConfiguration\"\n      deprecated: false\n    post:\n      tags:\n        - FolderMenu\n      summary: Creates and updates the folder menu items\n      operationId: FolderMenu_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FolderMenuConfiguration\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/FolderMenuConfiguration\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/FolderMenuConfiguration\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/FolderMenuConfiguration\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/FolderMenuConfiguration\"\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  \"/api/folder/settings/{id}\":\n    get:\n      tags:\n        - FolderSettings\n      summary: Gets the settings of a folder or meter\n      operationId: FolderSettings_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderSettings\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FolderSettings\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FolderSettings\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/FolderSettings\"\n      deprecated: false\n    post:\n      tags:\n        - FolderSettings\n      summary: Add or edit a folder or a meter. To add a new folder use and empty ID\n      operationId: FolderSettings_Post\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the folder or meter to edit. Use and empty ID to add a new\n            folder\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FolderSettings\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/FolderSettings\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/FolderSettings\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/FolderSettings\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/FolderSettings\"\n        description: The folder or meter data\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderMenuItem\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/FolderMenuItem\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/FolderMenuItem\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/FolderMenuItem\"\n      deprecated: false\n    delete:\n      tags:\n        - FolderSettings\n      summary: Deletes a folder\n      operationId: FolderSettings_Delete\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the folder\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  /api/Health:\n    get:\n      tags:\n        - Health\n      summary: \"A method returning HTTP 200 OK when queried.\\r\n\n        \\            It is used by Kubernetes probes to determine\n        whether the app is healthy.\"\n      operationId: Health_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      deprecated: false\n  /api/MBus:\n    post:\n      tags:\n        - MBus\n      summary: \"M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\\r\n\n        \\            Just send us the M-BUS Telegram (RSP_UD) and we\n        will do the Rest.\"\n      description: \"M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\\r\n\n        \\            Just send us the M-BUS Telegram (RSP_UD) and we\n        will do the Rest.\"\n      operationId: MBus_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MBusData\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/MBusData\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/MBusData\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/MBusData\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/MBusData\"\n        description: The M-BUS Telegram\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"400\":\n          description: BadRequest\n        \"401\":\n          description: Unauthorized\n      deprecated: false\n  \"/api/MeterFolderInformation/{id}\":\n    get:\n      tags:\n        - MeterFolderInformation\n      summary: \"Beta: Gets the General Information for a Meter or a Folder\"\n      description: \"Beta: Gets the General Information for a Meter or a Folder\"\n      operationId: MeterFolderInformation_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MeterFolderInformation\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MeterFolderInformation\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/MeterFolderInformation\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MeterFolderInformation\"\n      deprecated: false\n  /api/MeterFolderInformation:\n    post:\n      tags:\n        - MeterFolderInformation\n      summary: Sets the Name of a Meter or a Folder\n      description: Sets the Name of a Meter or a Folder\n      operationId: MeterFolderInformation_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MeterFolderInformationToPost\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/MeterFolderInformationToPost\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/MeterFolderInformationToPost\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/MeterFolderInformationToPost\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/MeterFolderInformationToPost\"\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  \"/api/MeterValues/{id}\":\n    get:\n      tags:\n        - MeterValues\n      summary: \"Gets the Values for a Meter at a given Date. \\r\n\n        \\            The first Value found before the given Date is\n        returned.\"\n      description: Gets the Values for a Meter at a given Date. The first Value found\n        before the given Date is returned.\n      operationId: MeterValues_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: date\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceInPast\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceInPast\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DeviceInPast\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DeviceInPast\"\n      deprecated: false\n  /api/oauth/authorize:\n    get:\n      tags:\n        - OAuth\n      operationId: OAuth_Authorize\n      parameters:\n        - name: client_id\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: redirect_uri\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: state\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: scope\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: client_secret\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      deprecated: false\n    post:\n      tags:\n        - OAuth\n      operationId: OAuth_Authorize\n      parameters:\n        - name: client_id\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: redirect_uri\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: state\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: scope\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: client_secret\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      deprecated: false\n  /api/pico:\n    get:\n      tags:\n        - Pico\n      summary: Gets all pico charging stations for this user\n      operationId: Pico_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n      deprecated: false\n  \"/api/pico/charging/{id}\":\n    get:\n      tags:\n        - PicoCharging\n      summary: Gets the active charging data of a pico station\n      operationId: PicoCharging_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PicoChargingData\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PicoChargingData\"\n      deprecated: false\n  \"/api/pico/history/{id}\":\n    get:\n      tags:\n        - PicoChargingHistory\n      summary: Gets the last charging history for a pico station\n      operationId: PicoChargingHistory_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PicoChargingHistoryData\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PicoChargingHistoryData\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PicoChargingHistoryData\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PicoChargingHistoryData\"\n      deprecated: false\n  \"/api/pico/loadmanagementgroup/{id}\":\n    get:\n      tags:\n        - PicoLoadmanagementGroup\n      summary: \"GET: api/pico/loadmanagementgroup\\r\n\n        \\            \\r\n\n        \\            Returns a pico load management group by it's id\"\n      operationId: PicoLoadmanagementGroup_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PicoLoadmanagementGroupDto\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PicoLoadmanagementGroupDto\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PicoLoadmanagementGroupDto\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PicoLoadmanagementGroupDto\"\n      deprecated: false\n  /api/pico/loadmanagementgroup:\n    get:\n      tags:\n        - PicoLoadmanagementGroup\n      summary: \"GET: api/pico/loadmanagementgroup\\r\n\n        \\            \\r\n\n        \\            Returns all available load management groups\"\n      operationId: PicoLoadmanagementGroup_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PicoLoadmanagementGroupDto\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PicoLoadmanagementGroupDto\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PicoLoadmanagementGroupDto\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/PicoLoadmanagementGroupDto\"\n      deprecated: false\n  \"/api/pico/loadmanagementgroup/current/{serial}\":\n    post:\n      tags:\n        - PicoLoadmanagementSetDynamicCurrent\n      summary: Sets the dynamic current of a load management group or a single station.\n      operationId: PicoLoadmanagementSetDynamicCurrent_Post\n      parameters:\n        - name: serial\n          in: path\n          description: The serial number can be any pico serial in the group (e.g. 700001)\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: current\n          in: query\n          description: The dynamic current of the group (in mA)\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      deprecated: false\n  \"/api/pico/settings/{id}\":\n    get:\n      tags:\n        - PicoSettings\n      summary: \"GET: api/pico/settings\\r\n\n        \\            \\r\n\n        \\            Returns the settings of a pico charging station.\"\n      operationId: PicoSettings_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PicoSettingsDto\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PicoSettingsDto\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PicoSettingsDto\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PicoSettingsDto\"\n      deprecated: false\n  /api/RegisterForRealtimeApi:\n    get:\n      tags:\n        - RegisterForRealtimeApi\n      summary: Gets all registrations for the Realtime API.\n      description: Gets all registrations for the Realtime API.\n      operationId: RegisterForRealtimeApi_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n      deprecated: false\n    post:\n      tags:\n        - RegisterForRealtimeApi\n      summary: \"Creates a new registration for the realtime API. The Realtime API sends\n        you the data of the registred devices as soon as we have them on the\n        cloud.\\r\n\n        \\             More Information about the realtime API:\n        https://www.smart-me.com/Description/api/realtimeapi.aspx\"\n      description: \"Creates a new registration for the realtime API. The Realtime API sends\n        you the data of the registred devices as soon as we have them on the\n        cloud. More Information about the realtime API:\n        https://www.smart-me.com/Description/api/realtimeapi.aspx\"\n      operationId: RegisterForRealtimeApi_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/RegisterRealtimeApiData\"\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  \"/api/RegisterForRealtimeApi/{id}\":\n    delete:\n      tags:\n        - RegisterForRealtimeApi\n      summary: Deletes a realtime API registration.\n      description: Deletes a realtime API registration.\n      operationId: RegisterForRealtimeApi_Delete\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the realtime API registration\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  \"/api/SmartMeDeviceConfiguration/{id}\":\n    get:\n      tags:\n        - SmartMeDeviceConfiguration\n      summary: Gets the configuration of a smart-me device.\n      operationId: SmartMeDeviceConfiguration_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n      deprecated: false\n  /api/SmartMeDeviceConfiguration:\n    post:\n      tags:\n        - SmartMeDeviceConfiguration\n      summary: Sets the configuration of a smart-me device. The device needs to be\n        online.\n      operationId: SmartMeDeviceConfiguration_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/SmartMeDeviceConfigurationContainer\"\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  \"/api/SubUser/{id}\":\n    get:\n      tags:\n        - SubUser\n      summary: Get a sub user. The user must be assigend to the user that makes this\n        call.\n      operationId: SubUser_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubUserData\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SubUserData\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SubUserData\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SubUserData\"\n      deprecated: false\n    delete:\n      tags:\n        - SubUser\n      summary: Delete a subuser\n      operationId: SubUser_Delete\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  /api/SubUser:\n    post:\n      tags:\n        - SubUser\n      summary: \"Creates or updates a subuser.\\r\n\n        \\            To create a new user set no ID (empty)\"\n      operationId: SubUser_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubUserData\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SubUserData\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/SubUserData\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/SubUserData\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/SubUserData\"\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  /api/User:\n    get:\n      tags:\n        - User\n      summary: Gets the informations for the user.\n      description: Gets the informations for the user.\n      operationId: User_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n      deprecated: false\n  /api/folder/user/assign:\n    post:\n      tags:\n        - UserToFolderAssign\n      summary: Assign a user to a folder\n      operationId: UserToFolderAssign_Post\n      parameters:\n        - name: source\n          in: query\n          description: The ID of the user that should be assign\n          required: true\n          schema:\n            type: string\n        - name: target\n          in: query\n          description: The ID of the folder that should be the parent\n          required: true\n          schema:\n            type: string\n        - name: oldFolder\n          in: query\n          description: The ID of the old folder (in case of a drag and drop to a new folder)\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n    delete:\n      tags:\n        - UserToFolderAssign\n      summary: Deletes a user to folder assignement\n      operationId: UserToFolderAssign_Delete\n      parameters:\n        - name: source\n          in: query\n          description: The ID of the user that should be de-assign\n          required: true\n          schema:\n            type: string\n        - name: target\n          in: query\n          description: The ID of the folder\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n      deprecated: false\n  \"/api/Values/{id}\":\n    get:\n      tags:\n        - Values\n      summary: Gets all (last) values of a device\n      operationId: Values_Get\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValuesData\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ValuesData\"\n      deprecated: false\n  \"/api/ValuesInPast/{id}\":\n    get:\n      tags:\n        - ValuesInPast\n      summary: \"Gets all (last) values of a device\\r\n\n        \\            The first Value found before the given Date is\n        returned.\"\n      description: Gets the Values for a device at a given Date. The first Value found\n        before the given Date is returned.\n      operationId: ValuesInPast_Get\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the device\n          required: true\n          schema:\n            type: string\n        - name: date\n          in: query\n          description: the date of the value\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValuesData\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ValuesData\"\n      deprecated: false\n  \"/api/ValuesInPastMultiple/{id}\":\n    get:\n      tags:\n        - ValuesInPastMultiple\n      summary: Gets multiple values of a device. This call needs a smart-me\n        professional licence.\n      operationId: ValuesInPastMultiple_Get\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the device\n          required: true\n          schema:\n            type: string\n        - name: startDate\n          in: query\n          description: The date when the first value should start\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: endDate\n          in: query\n          description: The date when the last value should start\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: interval\n          in: query\n          description: The interval in minutes betwenn the values. 0 means as fast as\n            possible. Only 1000 values can be get in one call.\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ValuesData\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ValuesData\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ValuesData\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ValuesData\"\n      deprecated: false\n  /api/VirtualBillingMeterActive:\n    get:\n      tags:\n        - VirtualBillingMeterActive\n      summary: \"Beta: Gets all active virtual meters\"\n      description: \"Beta: Gets all active virtual meters.\"\n      operationId: VirtualBillingMeterActive_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n      deprecated: false\n    post:\n      tags:\n        - VirtualBillingMeterActive\n      summary: \"Beta: Virtual Meter API: Activates a Meter and add the Consumption to a\n        Virtual Meter assosiated with the User.\"\n      description: \"Beta: Virtual Meter API: Activates a Meter and add the Consumption to a\n        Virtual Meter assosiated with the User.\"\n      operationId: VirtualBillingMeterActive_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VMeterToActivate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/VMeterToActivate\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/VMeterToActivate\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/VMeterToActivate\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/VMeterToActivate\"\n        description: The Meter to activate\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n        \"400\":\n          description: BadRequest\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      deprecated: false\n  /api/VirtualBillingMeterDeactivate:\n    post:\n      tags:\n        - VirtualBillingMeterDeactivate\n      summary: \"Beta: Virtual Meter API: Deactivates a Virtual Meter.\"\n      description: \"Beta: Virtual Meter API: Deactivates a Virtual Meter.\"\n      operationId: VirtualBillingMeterDeactivate_Post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VMeterToDeactivate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/VMeterToDeactivate\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/VMeterToDeactivate\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/VMeterToDeactivate\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/VMeterToDeactivate\"\n        description: The Meter to activate\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n        \"400\":\n          description: BadRequest\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      deprecated: false\n  /api/VirtualBillingMeters:\n    get:\n      tags:\n        - VirtualBillingMeters\n      summary: \"Beta: Gets all Meters available to activate as a Virtual Meter.\"\n      description: \"Beta: Gets all Meters available to activate as a Virtual Meter.\"\n      operationId: VirtualBillingMeters_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Device\"\n      deprecated: false\n  /api/VirtualMeterCalculateFormula:\n    get:\n      tags:\n        - VirtualMeterCalculateFormula\n      summary: \"Calculates a virtual meter from a formula. \\r\n\n        \\            A meter is coded as ID(\\\"METERID\\\")\"\n      description: \"Calculates a virtual meter from a formula.\\r\n\n        \\            \\r\n\n        \\            A meter is coded as ID(\\\"METERID\\\")\\r\n\n        \\            Ariphmetical operators:\\r\n\n        \\             ()  parentheses;  \\r\n\n        \\             +   plus (a + b); \\r\n\n        \\             -  minus (a - b); \\r\n\n        \\             *  multiplycation symbol (a * b); \\r\n\n        \\             /  divide symbol (a / b); \\r\n\n        \\            Example:\n        (ID(\\\"63ac09cb-4e5f-4f3e-bd27-ad8c30bdfc0c\\\") +\n        ID(\\\"0209555e-9dc4-4e84-a166-a864488b4b12\\\")) * 2\"\n      operationId: VirtualMeterCalculateFormula_Get\n      parameters:\n        - name: formula\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n      deprecated: false\n  /api/VirtualTariff:\n    get:\n      tags:\n        - VirtualTariff\n      summary: Gets all Virtual Tariffs of a user\n      description: Gets all Virtual Tariffs of a user\n      operationId: VirtualTariff_Get\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n      deprecated: false\n  \"/api/VirtualTariff/{id}\":\n    get:\n      tags:\n        - VirtualTariff\n      summary: Gets all virtual tariffs of a folder\n      description: Gets all virtual tariffs of a folder\n      operationId: VirtualTariff_Get\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the Folder\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n      deprecated: false\n  /api/VirtualTariffConsumption:\n    get:\n      tags:\n        - VirtualTariffConsumption\n      summary: Gets the consumption of a folder with a virtuall tariffs.\n      description: Gets the consumption of a folder with a virtuall tariffs.\n      operationId: VirtualTariffConsumption_Get\n      parameters:\n        - name: folderId\n          in: query\n          description: The ID of the Folder\n          required: true\n          schema:\n            type: string\n        - name: startDate\n          in: query\n          description: The start date (UTC)\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: endDate\n          in: query\n          description: The end date (UTC)\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffConsumptionData\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffConsumptionData\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffConsumptionData\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffConsumptionData\"\n      deprecated: false\n  \"/api/VirtualTariffsForProperty/{id}\":\n    get:\n      tags:\n        - VirtualTariffsForProperty\n      summary: Gets all Virtual Tariffs for a property (folder)\n      description: Gets all Virtual Tariffs for a property (folder)\n      operationId: VirtualTariffsForProperty_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/VirtualTariffsOfFolder\"\n      deprecated: false\n  \"/api/VirtualTariffsStatusForProperty/{id}\":\n    get:\n      tags:\n        - VirtualTariffsStatusForProperty\n      summary: Gets the calculation status for a virtual tariff property\n      operationId: VirtualTariffsStatusForProperty_Get\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/xml:\n              schema:\n                type: string\n      deprecated: false\nservers:\n  - url: https://smart-me.com:443\ncomponents:\n  securitySchemes:\n    basic:\n      type: http\n      description: Basic HTTP Authentication\n      scheme: basic\n  schemas:\n    AccessTokenToPut:\n      description: Container Class for the Put action of an Access Token\n      type: object\n      properties:\n        UserId:\n          format: int64\n          description: \"The ID of the User. The credentials provided must have permission\n            to edit the user.\\r\n\n            \\            If no ID is provided, the user in the\n            credentials is taken.\"\n          type: integer\n        CardId:\n          format: int64\n          description: The ID of the Card\n          type: integer\n    Object:\n      type: object\n      properties: {}\n    ActionInformation:\n      description: The Information about an Action of a device\n      type: object\n      properties:\n        Name:\n          description: The Name of this action\n          type: string\n        ObisCode:\n          description: The Obis Code of this action. This is used as ID.\n          type: string\n        ActionType:\n          description: The Type of this action.\n          enum:\n            - OnOffAction\n            - AnalogAction\n          type: string\n        MinValue:\n          format: double\n          description: The minimum value of this action (e.g. for an AnalogAction)\n          type: number\n        MaxValue:\n          format: double\n          description: The maximum value of this action (e.g. for an AnalogAction)\n          type: number\n    ActionToPost:\n      description: Container Class for an action to post\n      type: object\n      properties:\n        DeviceID:\n          description: The ID of the Device\n          type: string\n        Actions:\n          description: List with all Actions for this device\n          type: array\n          items:\n            $ref: \"#/components/schemas/ActionToPostItem\"\n    ActionToPostItem:\n      description: Container class for an action item\n      type: object\n      properties:\n        ObisCode:\n          description: The ObisCode (ID) of the Action\n          type: string\n        Value:\n          format: double\n          description: The Value to Post\n          type: number\n    AdditionalDeviceInformation:\n      description: Additional Information For a device\n      type: object\n      properties:\n        ID:\n          description: The ID of the device\n          type: string\n        HardwareVersion:\n          format: int32\n          description: The Hardware Version of a Meter.\n          type: integer\n        FirmwareVersion:\n          format: int32\n          description: The Firmware Version of a Meter\n          type: integer\n        AdditionalMeterSerialNumber:\n          description: An additional Meter serial number. e.g. the number of a meter a\n            smart-me device is connected to.\n          type: string\n        NetworkConnection:\n          description: \"The mode how the device is connected to the network. Valid values\n            are:\\r\n\n            \\            wifi, gprs, ltecatm1, ltenbiot, meshmobile,\n            meshwifi\"\n          type: string\n        NetworkConnectionRSSI:\n          format: int32\n          description: The connection RSSI value (0 is bad, 100 is best)\n          type: integer\n    CustomDeviceToPost:\n      description: Container Class for the Web API\n      type: object\n      properties:\n        Id:\n          description: The ID of the device\n          type: string\n        Name:\n          description: The Name of the Device\n          type: string\n        Serial:\n          format: int64\n          description: The Serial number\n          type: integer\n        Values:\n          description: The Values of the custom Device\n          type: array\n          items:\n            $ref: \"#/components/schemas/CustomDeviceValues\"\n        ValueDate:\n          format: date-time\n          description: The Date of the Value (in UTC). If this is null the Server Time is\n            used.\n          type: string\n    CustomDeviceValues:\n      description: Container Class for the Custom Device Values\n      type: object\n      properties:\n        Name:\n          description: The Name of the Value.\n          type: string\n        Value:\n          format: double\n          description: The Value\n          type: number\n    Device:\n      description: Container Class for the Web API\n      type: object\n      properties:\n        Id:\n          description: The ID of the device\n          type: string\n        Name:\n          description: The Name of the Device\n          type: string\n        Serial:\n          format: int64\n          description: The Serial number\n          type: integer\n        DeviceEnergyType:\n          description: The Energy Type of this device\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 6\n            - 7\n            - 8\n            - 9\n            - 10\n            - 11\n            - 12\n            - 13\n            - 14\n          x-enum-varnames:\n            - MeterTypeUnknown\n            - MeterTypeElectricity\n            - MeterTypeWater\n            - MeterTypeGas\n            - MeterTypeHeat\n            - MeterTypeHCA\n            - MeterTypeAllMeters\n            - MeterTypeTemperature\n            - MeterTypeMBusGateway\n            - MeterTypeRS485Gateway\n            - MeterTypeCustomDevice\n            - MeterTypeCompressedAir\n            - MeterTypeSolarLog\n            - MeterTypeVirtualMeter\n            - MeterTypeWMBusGateway\n          type: integer\n        MeterSubType:\n          description: The sub meter type (e.g. warmwater or coldwater)\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 6\n            - 7\n            - 8\n            - 9\n          x-enum-varnames:\n            - MeterSubTypeUnknown\n            - MeterSubTypeCold\n            - MeterSubTypeHeat\n            - MeterSubTypeChargingStation\n            - MeterSubTypeElectricity\n            - MeterSubTypeWater\n            - MeterSubTypeGas\n            - MeterSubTypeElectricityHeat\n            - MeterSubTypeTemperature\n            - MeterSubTypeVirtualBattery\n          type: integer\n        FamilyType:\n          description: The Family Type of the device.\n          enum:\n            - 1001\n          x-enum-varnames:\n            - MeterFamilyTypeUnknown\n          type: string\n        ActivePower:\n          format: double\n          description: The Actvie Power or current flow rate\n          type: number\n        ActivePowerL1:\n          format: double\n          description: The Actvie Power Phase L1\n          type: number\n        ActivePowerL2:\n          format: double\n          description: The Actvie Power Phase L2\n          type: number\n        ActivePowerL3:\n          format: double\n          description: The Actvie Power Phase L3\n          type: number\n        ActivePowerUnit:\n          description: The Unit of the Active Power Value\n          type: string\n        CounterReading:\n          format: double\n          description: The Meter Counter Reading (Total Energy used)\n          type: number\n        CounterReadingUnit:\n          description: The Unit of the Counter Reading\n          type: string\n        CounterReadingT1:\n          format: double\n          description: The Meter Counter Reading Tariff 1\n          type: number\n        CounterReadingT2:\n          format: double\n          description: The Meter Counter Reading Tariff 2\n          type: number\n        CounterReadingT3:\n          format: double\n          description: The Meter Counter Reading Tariff 3\n          type: number\n        CounterReadingT4:\n          format: double\n          description: The Meter Counter Reading Tariff 4\n          type: number\n        CounterReadingImport:\n          format: double\n          description: The Meter Counter Reading only import\n          type: number\n        CounterReadingExport:\n          format: double\n          description: The Meter Counter Reading only export\n          type: number\n        SwitchOn:\n          description: Flag if the Switch is on on this device.\n          type: boolean\n        SwitchPhaseL1On:\n          description: Flag if the Phase L1 is on on this device.\n          type: boolean\n        SwitchPhaseL2On:\n          description: Flag if the Phase L2 is on on this device.\n          type: boolean\n        SwitchPhaseL3On:\n          description: Flag if the Phase L3 is on on this device.\n          type: boolean\n        Voltage:\n          format: double\n          description: The Voltage (in V)\n          type: number\n        VoltageL1:\n          format: double\n          description: The Voltage Phase L1 (in V)\n          type: number\n        VoltageL2:\n          format: double\n          description: The Voltage Phase L2 (in V)\n          type: number\n        VoltageL3:\n          format: double\n          description: The Voltage Phase L3 (in V)\n          type: number\n        Current:\n          format: double\n          description: The Current (in A)\n          type: number\n        CurrentL1:\n          format: double\n          description: The Current Phase L1 (in A)\n          type: number\n        CurrentL2:\n          format: double\n          description: The Current Phase L2 (in A)\n          type: number\n        CurrentL3:\n          format: double\n          description: The Current Phase L3 (in A)\n          type: number\n        PowerFactor:\n          format: double\n          description: \"The Power Factor (cos phi). Range: 0 - 1\"\n          type: number\n        PowerFactorL1:\n          format: double\n          description: \"The Power Factor (cos phi) Phase L1. Range: 0 - 1\"\n          type: number\n        PowerFactorL2:\n          format: double\n          description: \"The Power Factor (cos phi) Phase L2. Range: 0 - 1\"\n          type: number\n        PowerFactorL3:\n          format: double\n          description: \"The Power Factor (cos phi) Phase L3. Range: 0 - 1\"\n          type: number\n        Temperature:\n          format: double\n          description: The Temperature (in degree celsius)\n          type: number\n        ActiveTariff:\n          format: int32\n          description: The Number of the Active Tariff\n          type: integer\n        DigitalOutput1:\n          description: The digital output number 1\n          type: boolean\n        DigitalOutput2:\n          description: The digital output number 2\n          type: boolean\n        AnalogOutput1:\n          format: int32\n          description: The analog output number 1 (PWM signal) (0 - 32183)\n          type: integer\n        AnalogOutput2:\n          format: int32\n          description: The analog output number 2 (PWM signal) (0 - 32183)\n          type: integer\n        DigitalInput1:\n          description: The digital input number 1\n          type: boolean\n        DigitalInput2:\n          description: The digital input number 2\n          type: boolean\n        ValueDate:\n          format: date-time\n          description: Time of last successful connection the the smart-me Cloud.\n          type: string\n        AdditionalMeterSerialNumber:\n          description: An additional Meter serial number. e.g. the number of a meter a\n            smart-me device is connected to.\n          type: string\n        FlowRate:\n          format: double\n          description: The current flow rate (e.g. m3/h)\n          type: number\n        ChargingStationState:\n          description: The state of a pico charging station. (Only available for pico\n            charging stations)\n          enum:\n            - Booting\n            - ReadyNoCarConnected\n            - ReadyCarConnected\n            - StartedWaitForCar\n            - Charging\n            - Installation\n            - Authorize\n            - Offline\n          type: string\n    DeviceToPost:\n      description: Container Class for the Web API\n      type: object\n      properties:\n        Id:\n          description: The ID of the device\n          type: string\n        Name:\n          description: The Name of the Device\n          type: string\n        Serial:\n          format: int64\n          description: The Serial number\n          type: integer\n        DeviceEnergyType:\n          description: The Energy Type of this device\n          enum:\n            - MeterTypeUnknown\n            - MeterTypeElectricity\n            - MeterTypeWater\n            - MeterTypeGas\n            - MeterTypeHeat\n            - MeterTypeHCA\n            - MeterTypeAllMeters\n            - MeterTypeTemperature\n            - MeterTypeMBusGateway\n            - MeterTypeRS485Gateway\n            - MeterTypeCustomDevice\n            - MeterTypeCompressedAir\n            - MeterTypeSolarLog\n            - MeterTypeVirtualMeter\n            - MeterTypeWMBusGateway\n          type: string\n        MeterSubType:\n          description: The Sub Type of this Meter.\n          enum:\n            - MeterSubTypeUnknown\n            - MeterSubTypeCold\n            - MeterSubTypeHeat\n            - MeterSubTypeChargingStation\n            - MeterSubTypeElectricity\n            - MeterSubTypeWater\n            - MeterSubTypeGas\n            - MeterSubTypeElectricityHeat\n            - MeterSubTypeTemperature\n            - MeterSubTypeVirtualBattery\n          type: string\n        ActivePower:\n          format: double\n          description: The Active Power or current flow rate. In kW or m3/h\n          type: number\n        CounterReading:\n          format: double\n          description: The Meter Counter Reading (Total Energy used) in kWh or m3.\n          type: number\n        CounterReadingT1:\n          format: double\n          description: The Meter Counter Reading Tariff 1 in kWh or m3.\n          type: number\n        CounterReadingT2:\n          format: double\n          description: The Meter Counter Reading Tariff 2 in kWh or m3.\n          type: number\n        CounterReadingExport:\n          format: double\n          description: The Meter Counter Reading only export\n          type: number\n        CounterReadingExportT1:\n          format: double\n          description: The Meter Counter Reading only export (Tariff 1)\n          type: number\n        CounterReadingExportT2:\n          format: double\n          description: The Meter Counter Reading only export (Tariff 2)\n          type: number\n        Temperature:\n          format: double\n          description: The Temperature (in degree celsius)\n          type: number\n        ValueDate:\n          format: date-time\n          description: The Date of the Value (in UTC). If this is null the Server Time is\n            used.\n          type: string\n        Voltage:\n          format: double\n          description: The Voltage (in V)\n          type: number\n        VoltageL1:\n          format: double\n          description: The Voltage Phase L1 (in V)\n          type: number\n        VoltageL2:\n          format: double\n          description: The Voltage Phase L2 (in V)\n          type: number\n        VoltageL3:\n          format: double\n          description: The Voltage Phase L3 (in V)\n          type: number\n        Current:\n          format: double\n          description: The Current (in A)\n          type: number\n        CurrentL1:\n          format: double\n          description: The Current Phase L1 (in A)\n          type: number\n        CurrentL2:\n          format: double\n          description: The Current Phase L2 (in A)\n          type: number\n        CurrentL3:\n          format: double\n          description: The Current Phase L3 (in A)\n          type: number\n        PowerFactor:\n          format: double\n          description: \"The Power Factor (cos phi). Range: 0 - 1\"\n          type: number\n        PowerFactorL1:\n          format: double\n          description: \"The Power Factor (cos phi) Phase L1. Range: 0 - 1\"\n          type: number\n        PowerFactorL2:\n          format: double\n          description: \"The Power Factor (cos phi) Phase L2. Range: 0 - 1\"\n          type: number\n        PowerFactorL3:\n          format: double\n          description: \"The Power Factor (cos phi) Phase L3. Range: 0 - 1\"\n          type: number\n        DigitalInput1:\n          description: The digital input number 1\n          type: boolean\n    FolderData:\n      description: Container class for the folder API\n      type: object\n      properties:\n        ElectricityCounterValue:\n          format: double\n          description: The Counter values for electricity (kWh)\n          type: number\n        ElectricityPower:\n          format: double\n          description: The Power for electricity (kW)\n          type: number\n        HeatCounterValue:\n          format: double\n          description: The Counter values for Heat (kWh)\n          type: number\n        HeatPower:\n          format: double\n          description: The Power for Heat (kW)\n          type: number\n        WaterCounterValue:\n          format: double\n          description: The Counter values for Water (m3)\n          type: number\n        WaterFlowRate:\n          format: double\n          description: The Flow Rate for Water (m3/h)\n          type: number\n        GasCounterValue:\n          format: double\n          description: The Counter values for Gas (m3)\n          type: number\n        GasFlowRate:\n          format: double\n          description: The Flow Rate for Gas (m3/h)\n          type: number\n    FolderMenuConfiguration:\n      description: Container Class for the Web API representing a folder menu and it's items\n      type: object\n      properties:\n        Items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FolderMenuItem\"\n        BrowserUtcTime:\n          description: The UTC time taken from the browser\n          type: string\n        BrowserTimeZoneName:\n          description: The time zone name taken from the browser\n          type: string\n    FolderMenuItem:\n      description: A folder menu item\n      type: object\n      properties:\n        Id:\n          description: The id of the folder menu item\n          type: string\n        Name:\n          description: The Name of the item\n          type: string\n        Description:\n          description: The Description of the folder\n          type: string\n        Children:\n          description: Children folder menu items (sub folder menu items)\n          type: array\n          items:\n            $ref: \"#/components/schemas/FolderMenuItem\"\n        FolderType:\n          description: The folder type of the item\n          enum:\n            - Folder\n            - Location\n            - Factory\n            - House\n            - Office\n            - Machine\n            - VirtualMeter\n            - ElecticityFolder\n            - WaterFolder\n            - HeatFolder\n            - GasFolder\n            - TemperatureFolder\n            - Sun\n            - Light\n            - Ice\n            - Sofa\n            - Food\n            - Coffee\n            - Car\n            - ChargingStation\n            - Meter\n            - User\n            - Trash\n            - GridPhotovoltaicPowerSystem\n          type: string\n        Icon:\n          description: The path to the Icon of this folder\n          type: string\n        UserId:\n          description: The ID of the user of this folder (only for foldertype user)\n          type: string\n        MeterSerialNumber:\n          description: \"The serial number if the folder menu item is a meter. \\r\n\n            \\            Serial number is handled as a string, as\n            javascript on client side cannot handle long integers properly.\"\n          type: string\n        AutoExportSettings:\n          $ref: \"#/components/schemas/AutoExportSettings\"\n    AutoExportSettings:\n      description: Settings for the auto export functionality of a meter\n      type: object\n      properties:\n        MeterPointId:\n          description: The meter point id set by the user\n          type: string\n        ExportFormat:\n          description: The export format\n          type: string\n        UploadType:\n          description: The upload type\n          type: string\n        ExportInterval:\n          description: The export interval of the auto export\n          enum:\n            - NoExport\n            - Hourly\n            - Daily\n            - Weekly\n            - Monthly\n            - QuaterYearly\n            - HalfYearly\n            - Yearly\n          type: string\n    FolderSettings:\n      description: Container for the folder settings\n      type: object\n      properties:\n        Name:\n          description: The Name of the folder or meter\n          type: string\n        Description:\n          description: The Description of the folder or meter\n          type: string\n        FolderType:\n          description: The Type of the folder\n          enum:\n            - Folder\n            - Location\n            - Factory\n            - House\n            - Office\n            - Machine\n            - VirtualMeter\n            - ElecticityFolder\n            - WaterFolder\n            - HeatFolder\n            - GasFolder\n            - TemperatureFolder\n            - Sun\n            - Light\n            - Ice\n            - Sofa\n            - Food\n            - Coffee\n            - Car\n            - ChargingStation\n            - Meter\n            - User\n            - Trash\n            - GridPhotovoltaicPowerSystem\n          type: string\n        SerialNumber:\n          format: int64\n          description: The serial number (meter only)\n          type: integer\n        Enable:\n          description: Flag if the meter is enabled (folder not supported yet)\n          type: boolean\n        ValueCorrection:\n          format: double\n          description: The value correction on this meter\n          type: number\n        ValueCorrectionParentFolder:\n          format: double\n          description: The value correction on all parent folders. but not on the meter\n            itself\n          type: number\n        UseableForVirtualBillingMeters:\n          description: Flag if the meter is usable for virtual billing meters (e.g.\n            washroom)\n          type: boolean\n        ParentFolderId:\n          description: The parent folder ID of this item\n          type: string\n        VisualizationName:\n          description: The name of the visualization of the folder\n          type: string\n    MBusData:\n      type: object\n      properties:\n        Date:\n          format: date-time\n          description: The Date of the M-BUS Telegram Readout (in UTC). If this is null the\n            Server Time is used.\n          type: string\n        Telegram:\n          description: \"The M-BUS Telegram as Hex string. \\r\n\n            \\            Example: 68 1F 1F 68 08 02 72 78 56 34 12\n            24 40 01 07 55 00 00 00 03 13 15 31 00 DA 02 3B 13 01 8B 60 04 37 18\n            02 18 16\"\n          type: string\n    MeterFolderInformation:\n      description: Container Class for the Web API\n      type: object\n      properties:\n        Name:\n          description: Name of the Meter or Folder\n          type: string\n        IsFolder:\n          description: Flag if it's a Folder or a Meter\n          type: boolean\n        OutputInformations:\n          description: Informations about the available Outputs\n          type: array\n          items:\n            $ref: \"#/components/schemas/OutputInformation\"\n        InputInformations:\n          description: Informations about the available Inputs\n          type: array\n          items:\n            $ref: \"#/components/schemas/InputInformation\"\n        HardwareVersion:\n          format: int32\n          description: The Hardware Version of a Meter.\n          type: integer\n        FirmwareVersion:\n          format: int32\n          description: The Firmware Version of a Meter\n          type: integer\n        CommunicationModuleHardwareVersion:\n          format: int32\n          description: The Version of the Communication Module (if exists)\n          type: integer\n        CommunicationModuleFirmwareVersion:\n          format: int32\n          description: The Version of the Communication Module (if exists)\n          type: integer\n    OutputInformation:\n      description: Informations about the Outputs of a Meter or Folder\n      type: object\n      properties:\n        Number:\n          format: int32\n          description: The Number of this Output. Use this as ID to switch it on or off.\n          type: integer\n        Name:\n          description: The Name of the Output\n          type: string\n        ObisCode:\n          description: The Obis Code for this Output\n          type: string\n        ActionType:\n          description: The type of the Output\n          enum:\n            - OnOffAction\n            - AnalogAction\n          type: string\n    InputInformation:\n      description: Informations about the Inputs of a Meter or Folder\n      type: object\n      properties:\n        Number:\n          format: int32\n          description: The Number of this Input. Use this as ID to switch it on or off.\n          type: integer\n        Name:\n          description: The Name of the Input\n          type: string\n    MeterFolderInformationToPost:\n      description: Container for a Meter or Folder Information to Post\n      type: object\n      properties:\n        Id:\n          description: The ID of the device or folder\n          type: string\n        Name:\n          description: Name of the Meter or Folder\n          type: string\n    DeviceInPast:\n      description: Container Class for the Web API. Conatinas the MeterValues in the Past\n      type: object\n      properties:\n        Id:\n          description: The ID of the device\n          type: string\n        Serial:\n          format: int64\n          description: The Serial number\n          type: integer\n        Date:\n          format: date-time\n          description: The Date of the Values\n          type: string\n        CounterReading:\n          format: double\n          description: The Meter Counter Reading (Total Energy used)\n          type: number\n        CounterReadingUnit:\n          description: The Unit of the Counter Reading\n          type: string\n        CounterReadingT1:\n          format: double\n          description: The Meter Counter Reading Tariff 1\n          type: number\n        CounterReadingT2:\n          format: double\n          description: The Meter Counter Reading Tariff 2\n          type: number\n        CounterReadingT3:\n          format: double\n          description: The Meter Counter Reading Tariff 3\n          type: number\n        CounterReadingT4:\n          format: double\n          description: The Meter Counter Reading Tariff 4\n          type: number\n        CounterReadingImport:\n          format: double\n          description: The Meter Counter Reading Import\n          type: number\n        CounterReadingImportT1:\n          format: double\n          description: The Meter Counter Reading Import Tariff 1\n          type: number\n        CounterReadingImportT2:\n          format: double\n          description: The Meter Counter Reading Import Tariff 2\n          type: number\n        CounterReadingImportT3:\n          format: double\n          description: The Meter Counter Reading Import Tariff 3\n          type: number\n        CounterReadingImportT4:\n          format: double\n          description: The Meter Counter Reading Import Tariff 4\n          type: number\n        CounterReadingExport:\n          format: double\n          description: The Meter Counter Reading Export\n          type: number\n        CounterReadingExportT1:\n          format: double\n          description: The Meter Counter Reading Export Tariff 1\n          type: number\n        CounterReadingExportT2:\n          format: double\n          description: The Meter Counter Reading Export Tariff 2\n          type: number\n        CounterReadingExportT3:\n          format: double\n          description: The Meter Counter Reading Export Tariff 3\n          type: number\n        CounterReadingExportT4:\n          format: double\n          description: The Meter Counter Reading Export Tariff 4\n          type: number\n    PicoChargingData:\n      description: Container class for the pico charging station API\n      type: object\n      properties:\n        State:\n          description: The state of the charging station\n          enum:\n            - Booting\n            - ReadyNoCarConnected\n            - ReadyCarConnected\n            - StartedWaitForCar\n            - Charging\n            - Installation\n            - Authorize\n            - Offline\n          type: string\n          readOnly: true\n        ActiveChargingPower:\n          format: double\n          description: The power of the active charging (in kW)\n          type: number\n        ActiveChargingEnergy:\n          format: double\n          description: The energy used by this active charging (in kWh)\n          type: number\n        Duration:\n          format: int32\n          description: The duration of this charging in seconds\n          type: integer\n        ValueDate:\n          format: date-time\n          description: The date of this values\n          type: string\n        MaxAllowedChargingCurrent:\n          format: int32\n          description: Max allowed charging current in A\n          type: integer\n        MinStationCurrent:\n          format: int32\n          description: Min. current of the station in A\n          type: integer\n        MaxStationCurrent:\n          format: int32\n          description: Max. current of the station in A\n          type: integer\n        MaxLoadmanagementGroupCurrent:\n          format: int32\n          description: Max. current of the loadmanagement group of this station (if there\n            is any) in A\n          type: integer\n        MaxDynamicCurrent:\n          format: int32\n          description: Max. dynamic current (e.g. set over API or Modbus TCP) of this\n            station or the loadmanagement group of the station if the station is\n            in a group. in A\n          type: integer\n        LoadSheddingState:\n          description: Max. dynamic current (e.g. set over API or Modbus TCP) of this\n            station or the loadmanagement group of the station if the station is\n            in a group. in A\n          enum:\n            - MaxCurrent\n            - HalfCurrent\n            - MinCurrent\n            - NoCurrent\n          type: string\n        LoadmanagementGroupName:\n          description: The name of the loadmanagement group. Or string.empty if the station\n            is not in a group\n          type: string\n        ConnectionMode:\n          description: The mode how this station is connected to the cloud\n          enum:\n            - NetworkToCloudConnectionMode_NoConnection\n            - NetworkToCloudConnectionMode_DirectWiFiConnection\n            - NetworkToCloudConnectionMode_GPRSConnection\n            - NetworkToCloudConnectionMode_NBIotConnection\n            - NetworkToCloudConnectionMode_LteCatM1Connection\n            - NetworkToCloudConnectionMode_MeshWiFiConnection\n            - NetworkToCloudConnectionMode_MeshMobileConnection\n          type: string\n    PicoChargingHistoryData:\n      description: Api container for the charging station history\n      type: object\n      properties:\n        StartTime:\n          format: date-time\n          description: The starttime of the charging (in UTC)\n          type: string\n        Duration:\n          format: int32\n          description: The duration in seconds\n          type: integer\n        EnergyUsed:\n          format: double\n          description: The energy used (in kWh)\n          type: number\n    PicoLoadmanagementGroupDto:\n      description: DTO for the pico loadmanagement group\n      type: object\n      properties:\n        Id:\n          description: The ID of the loadmanagement group\n          type: string\n        Name:\n          description: The name of the station\n          type: string\n        MaxCurrent:\n          format: double\n          description: The max current of this loadmanagement group\n          type: number\n        NumberOfStations:\n          format: int32\n          description: The number of assigned stations\n          type: integer\n    PicoSettingsDto:\n      description: DTO for the pico charging station settings\n      type: object\n      properties:\n        Name:\n          description: The name of the station\n          type: string\n        SerialNumber:\n          description: The Serial number of the station\n          type: string\n        AuthenticationType:\n          description: The authentication type\n          enum:\n            - None\n            - Backend\n          type: string\n        DisplayBrightness:\n          format: byte\n          description: The Brightness of the LCD Matrix display. 0 = minimum, 255 = maximum\n          type: string\n        MinCurrent:\n          format: int32\n          description: The max current of this station (in A)\n          type: integer\n        MaxCurrent:\n          format: int32\n          description: The max current of this station (in A)\n          type: integer\n        IdleImageData:\n          description: The base 64 string for the \"no car connected\" image\n          type: string\n        IdleImageUrl:\n          description: The url of the idle image\n          type: string\n        LoadmanagementGroupId:\n          description: The ID of the loadmanagement group\n          type: string\n        ModbusTcp:\n          description: Flag if ModbusTcp is enabled\n          type: boolean\n        CarIdDetection:\n          description: Flag if the car id detection is enabled\n          type: boolean\n        InternalIp:\n          description: The internal IP address\n          type: string\n        DnsName:\n          description: The DNS name of the pico's internal ip\n          type: string\n    RegisterRealtimeApiData:\n      description: Container class for the register realtime API API\n      type: object\n      properties:\n        Id:\n          description: The ID of the registration\n          type: string\n        RegistrationType:\n          description: The Type of this registration (per meter, per user, ...)\n          enum:\n            - Disabled\n            - SingleMeterRegistration\n            - UserRegistration\n          type: string\n        MeterId:\n          description: The ID of the Meter. Just used if the RegistrationType is\n            \"SingleMeterRegistration\".\n          type: string\n        SerialNumber:\n          description: \"The serial number of the Meter. Just used if the RegistrationType\n            is \\\"SingleMeterRegistration\\\" and the MeterId is null. \\r\n\n            \\            Example: 1 SME 01 63000000 or 6300000\"\n          type: string\n        ApiUrl:\n          description: The URL of your endpoint. To this endpoint all the values are send\n            to.\n          type: string\n        BasicAuthUsername:\n          description: The Username (basic auth) of your endpoint. Leave empty of none.\n          type: string\n        BasicAuthPassword:\n          description: The Password (basic auth) of your endpoint. Leave empty of none.\n          type: string\n    SmartMeDeviceConfigurationContainer:\n      description: API Container class for the meter configuration\n      type: object\n      properties:\n        Id:\n          description: The ID of the device\n          type: string\n        UploadInterval:\n          description: Number of seconds the device will upload the data. For smaller\n            values maybe a professional license is needed.\n          enum:\n            - UploadInterval_1s\n            - UploadInterval_5s\n            - UploadInterval_10s\n            - UploadInterval_30s\n            - UploadInterval_60s\n            - UploadInterval_5min\n            - UploadInterval_15min\n            - UploadInterval_30min\n            - UploadInterval_60min\n            - UploadInterval_6h\n            - UploadInterval_12h\n            - UploadInterval_24h\n          type: string\n        SwitchConfiguration:\n          description: The configuration for the phase switches\n          type: array\n          items:\n            $ref: \"#/components/schemas/SwitchConfigurationContainer\"\n        OutputConfiguration:\n          description: The configuration for the external outputs\n          type: array\n          items:\n            $ref: \"#/components/schemas/OutputConfigurationContainer\"\n        InputConfiguration:\n          description: The configuration for the intput outputs\n          type: array\n          items:\n            $ref: \"#/components/schemas/InputConfigurationContainer\"\n        ShowReactiveEnergy:\n          description: Shows the reactive energy values (if the meter supports it).\n          type: boolean\n        EnableModbusTcp:\n          description: Enables or disables Modbus TCP (if the meter supports it).\n          type: boolean\n        DnsUpdateState:\n          description: \"Configuration of the dynamic DNS service. More information:\n            http://wiki.smart-me.com/index.php/Dynamisches_DNS\"\n          enum:\n            - NoUpdate\n            - DnsUpdatePublicIp\n            - DnsUpdateInternalIp\n          type: string\n        DevicePinCode:\n          description: PIN code to enter on a external meter (e.g. for the FNN meters)\n          type: string\n        DeviceEncryptionKey:\n          description: The encryption key used to decrypt messages received from an\n            external meter (used only for the smart-me modules)\n          type: string\n    SwitchConfigurationContainer:\n      description: The configuration for a phase switch\n      type: object\n      properties:\n        Number:\n          format: int32\n          description: The number of the phase. (e.g. 1 for Phase L1)\n          type: integer\n        CanSwitchOff:\n          description: Flag if the switch can be turned off or is always on.\n          type: boolean\n    OutputConfigurationContainer:\n      description: Configuration for the outputs of a meter (analog/digital outputs)\n      type: object\n      properties:\n        Number:\n          format: int32\n          description: The number of the Output. (1 for Output 1, 2 for Output 2)\n          type: integer\n        Name:\n          description: The Name of the Output\n          type: string\n        Type:\n          description: The Type of the output\n          enum:\n            - ImpulseOutputActiveEnergy\n            - ImpulseOutputActiveEnergyImport\n            - ImpulseOutputActiveEnergyExport\n            - ImpulseOutputReactiveEnergy\n            - DigitalOutput\n            - AnalogPwmSignalOutput\n            - Disabled\n          type: string\n        DigitalOutputNoConnectionAction:\n          description: The Action when the device has lost the connection\n          enum:\n            - Nothing\n            - TurnOff\n            - TurnOn\n            - SetPwmValue\n          type: string\n        S0PulseValue:\n          description: The S0 Pulse Value\n          enum:\n            - PulseValue1000Kwh\n            - PulseValue10000Kwh\n          type: string\n    InputConfigurationContainer:\n      description: Configuration for the input of a meter (digital inputs)\n      type: object\n      properties:\n        Number:\n          format: int32\n          description: The number of the Input. (1 for Input 1)\n          type: integer\n        Name:\n          description: The Name of the Input\n          type: string\n        Type:\n          description: The Type of the output\n          enum:\n            - TariffInput\n            - DigitalInput\n          type: string\n        OnText:\n          description: The visualization text for an ON action\n          type: string\n        OffText:\n          description: The visualization text for an OFF action\n          type: string\n    SubUserData:\n      description: Container data for the sub user\n      type: object\n      properties:\n        Id:\n          description: The ID of the user\n          type: string\n        Username:\n          description: The username\n          type: string\n        Email:\n          description: The Email adress\n          type: string\n        PermissionLevel:\n          description: The permission level of the user\n          enum:\n            - SelectedFolderAndSubfoldersMeters\n            - SelectedFolderOnly\n          type: string\n        AccessTimeStartDate:\n          format: date-time\n          description: The start date. From this date the user has access\n          type: string\n        AccessEndDate:\n          format: date-time\n          description: The end date. until this date the user has access\n          type: string\n        NewPassword:\n          description: If set this is used a new password\n          type: string\n    User:\n      description: Container Class for the Web API\n      type: object\n      properties:\n        Id:\n          format: int64\n          description: The ID of the User\n          type: integer\n        IdAsString:\n          description: The ID of the user as string\n          type: string\n        Username:\n          description: The Username of the User\n          type: string\n        Email:\n          description: The EMail Address of the User\n          type: string\n        IsAdmin:\n          description: Flag if this User is an Admin User\n          type: boolean\n        Permissions:\n          description: Additional Permissions\n          type: array\n          items:\n            type: string\n        ChildUsers:\n          description: The Users created by this users.\n          type: array\n          items:\n            $ref: \"#/components/schemas/User\"\n    ValuesData:\n      description: API Container for a Meter Value\n      type: object\n      properties:\n        DeviceId:\n          description: The ID of the device\n          type: string\n        Date:\n          format: date-time\n          description: The Date of the Value\n          type: string\n        Values:\n          description: All values\n          type: array\n          items:\n            $ref: \"#/components/schemas/ValueData\"\n    ValueData:\n      description: API Container for a (Device) Value\n      type: object\n      properties:\n        Obis:\n          description: \"The Obis code of this value. \\r\n\n            \\            A description you can find here:\\r\n\n            \\            http://wiki.smart-me.com/index.php/Obis_co\\\n            des\"\n          type: string\n        Value:\n          format: double\n          description: The Value\n          type: number\n    VMeterToActivate:\n      description: Actives a virtual Meter\n      type: object\n      properties:\n        SerialNumber:\n          description: The Serialnumber of the Meter to activate.\n          type: string\n    VMeterToDeactivate:\n      description: Deactivates a virtual Meter\n      type: object\n      properties:\n        ID:\n          description: The ID of the Virtual meter to deactivate\n          type: string\n    VirtualTariffsOfFolder:\n      description: Container class for a Virtual Tariff\n      type: object\n      properties:\n        FolderId:\n          description: The ID of the Folder\n          type: string\n        Name:\n          description: The name of this folder\n          type: string\n        Date:\n          format: date-time\n          description: The DateTime (UTC) of this virtual tarfifs\n          type: string\n        VirtualTariffs:\n          description: The Name of the Virtual Tariff\n          type: array\n          items:\n            $ref: \"#/components/schemas/VirtualTariff\"\n    VirtualTariff:\n      description: Container class for the virtual tariffs\n      type: object\n      properties:\n        Id:\n          description: The ID of the virtual tariff\n          type: string\n        Name:\n          description: The name of this tariff\n          type: string\n        Value:\n          format: double\n          description: The Counter Value of this tariff\n          type: number\n        Unit:\n          description: The Unit of this value\n          type: string\n        Factor:\n          format: double\n          description: Says how many of the active power is used in this tariff. This is\n            calculated from the last meter values.\n          type: number\n        Type:\n          description: The Type of the tariff\n          enum:\n            - Battery\n            - Solar\n            - Normal\n          type: string\n    VirtualTariffConsumptionData:\n      description: Container class for the virtual tariff consumption\n      type: object\n      properties:\n        Name:\n          description: The Name of this virtual tariff\n          type: string\n        TariffType:\n          description: The type of the virtual tariff (e.g. solar)\n          enum:\n            - Battery\n            - Solar\n            - Normal\n          type: string\n        Consumption:\n          format: double\n          description: The consumption (e.g. kWh) of this tariff\n          type: number\n        Price:\n          format: double\n          description: The price of the energy in this timerange\n          type: number\n        Currency:\n          description: The currency of the price\n          type: string\n",
			"canonicalURL": "/github.com/ConnectorIO/connectorio-addons@a1feacdb85d60b970531e34b968b7d8446e97a8e/-/blob/bundles/org.connectorio.addons.binding.smartme/src/main/openapi/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ConnectorIO/connectorio-addons/blob/a1feacdb85d60b970531e34b968b7d8446e97a8e/bundles/org.connectorio.addons.binding.smartme/src/main/openapi/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Device\": parse schema: property \"FamilyType\": at 1:7218: parse enum values: parse value \"1001\": expected type \"string\", got \"number\""
}