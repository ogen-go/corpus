{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RepreZen/KaiZen-OpenAPI-Editor"
		},
		"file": {
			"name": "SchemaObject.yaml",
			"size": 0,
			"path": "com.reprezen.swagedit.openapi3.tests/resources/code-assist/code-templates/SchemaObject.yaml",
			"byteSize": 3697,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Schema Object\n  version: \"1.0.0\"\n  \npaths:\n  /resource:\n    get:\n      description: description\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  #KZOE-template name=\"schema in a content array\", value=\"schema\"\n                  $ref: '#/components/schemas/StringToModelMappingObject'\n            '*/*' :\n               schema: \n                 #KZOE-template name=\"schema in schema\", value=\"schema\"\n                 $ref: \"#/components/schemas/SimpleObject\"\n          \ncomponents:\n  schemas:\n    #KZOE-template name=\"named schema in components\", value=\"schemas\"\n    SimpleObject:\n      #KZOE-template name=\"schema in a named schema\", value=\"schema\"\n      type: object\n      required:\n      - name\n      properties:\n        name:\n          type: string\n        address:\n          #KZOE-template name=\"schema properties\", value=\"schema\"\n          $ref: \"#/components/schemas/Pet\"\n        age:\n          type: integer\n          format: int32\n          minimum: 0    \n\n    SchemaWithProperties:\n      type: object\n      required:\n      - name\n      properties:\n        name:\n          type: string\n        #KZOE-template name=\"named schema in a property\", value=\"properties\"\n        \n    StringToModelMappingObject:\n      type: object\n      additionalProperties:\n        #KZOE-template name=\"schema inadditionalProperties\", value=\"schema\"\n        $ref: \"#/components/schemas/Dog\"\n        \n    ExtendedErrorModel:\n      allOf:\n      #KZOE-template name=\"schema in allOf\", value=\"schema\" kzoe-arrayItem\n      - $ref: '#/components/schemas/ErrorModel'\n      - type: object\n        required:\n        - rootCause\n        properties:\n          rootCause:\n            type: string\n            \n    WithAnyOf:  ## \n      description: A representation of a cat\n      anyOf:\n      #KZOE-template name=\"schema in anyOf\", value=\"schema\" kzoe-arrayItem\n      - $ref: '#/components/schemas/Pet'\n      - type: object\n        properties:\n          huntingSkill:\n            type: string\n            description: The measured skill for hunting\n            enum:\n            - clueless\n            - lazy\n            - adventurous\n            - aggressive\n        required:\n        - huntingSkill\n \n    AnyOfWithNestedSchema:  ## \n      description: A representation of a cat\n      anyOf:\n      - type: object\n        properties:\n          huntingSkill: \n            #KZOE-template name=\"schema in anyOf properties\", value=\"schema\"\n            $ref: \"#/components/schemas/SimpleObject\"\n                \n    # Discrinimator Object\n    MyResponseType:\n      oneOf:\n        #KZOE-template name=\"schema in oneOf\", value=\"schema\" kzoe-arrayItem\n        - $ref: '#/components/schemas/Cat'\n        - $ref: '#/components/schemas/Dog'\n        - $ref: '#/components/schemas/Lizard'\n      discriminator:\n          propertyName: pet_type       \n          \n          \n    SchemaItems:\n      type: array\n      items:\n        #KZOE-template name=\"schema in items\", value=\"schema\"\n        $ref: \"#/components/schemas/SimpleObject\"\n\n  parameters:\n    username:\n      name: username\n      in: path\n      description: username to fetch\n      required: true\n      schema:\n        #KZOE-template name=\"schema in parameter\", value=\"schema\"\n        $ref: \"#/components/schemas/SimpleObject\"\n           \n  headers:\n    X-Rate-Limit-Reset:\n      description: The number of seconds left in the current period\n      schema:\n        #KZOE-template name=\"schema in header\", value=\"schema\"\n        $ref: \"#/components/schemas/SimpleObject\"    \n                     \n  "
		}
	},
	"Error": "parse: parse spec: paths: /resource: get: operation \"\": responses: 200: content: \"*/*\": schema: parse schema: resolve \"#/components/schemas/SimpleObject\": parse schema: property \"address\": parse schema: resolve \"#/components/schemas/Pet\": find schema: resolve \"#/components/schemas/Pet\": can't find value for \"components/schemas/Pet\""
}