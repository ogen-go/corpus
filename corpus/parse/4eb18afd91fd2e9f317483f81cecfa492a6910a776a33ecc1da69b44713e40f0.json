{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaystackOSS/openapi"
		},
		"file": {
			"name": "marketplace.yaml",
			"size": 0,
			"path": "dist/marketplace.yaml",
			"byteSize": 22799,
			"content": "openapi: 3.0.1\ninfo:\n  title: Create an online marketplace\n  description: |-\n    The OpenAPI specification for creating a marketplace application using the [Paystack API](https://paystack.com/docs/api/).\n    ### Prerequisites\n    1. Sign up on [Paystack](https://paystack.com/signup) to get your secret API key\n    2. Set your API key as an environment variable on [Postman](https://learning.postman.com/docs/sending-requests/variables/)\n\n    The [Split API](https://paystack.com/docs/payments/split-payments/) is useful in marketplace apps where the transactions are divided between the platform and the vendor. That way, the platform keeps a portion of each transaction.\n  version: 1.0.0\nservers:\n  - url: 'https://api.paystack.co'\n    description: Base API endpoint\npaths:\n  /subaccount:\n    post:\n      tags:\n        - Subaccount\n      summary: Create Subaccount\n      operationId: subaccount_create\n      description: Create a new subaccount\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1subaccount/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - business_name\n                - settlement_bank\n                - account_number\n                - percentage_charge\n              properties:\n                business_name:\n                  description: Name of business for subaccount\n                  type: string\n                  example: Some Subaccount\n                settlement_bank:\n                  description: Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint.\n                  type: string\n                  example: '011'\n                account_number:\n                  description: Bank account number\n                  type: string\n                  example: '0000000000'\n                percentage_charge:\n                  description: Transaction percentage that the subaccount gets\n                  type: number\n                  format: float\n                  example: 0.3\n                description:\n                  description: A description for this subaccount\n                  type: string\n                  example: A service provider\n                primary_contact_email:\n                  description: A contact email for the subaccount\n                  type: string\n                  example: sub@example.com\n                primary_contact_name:\n                  description: The name of the contact person for this subaccount\n                  type: string\n                  example: person@example.com\n                primary_contact_phone:\n                  description: A phone number to call for this subaccount\n                  type: string\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: object\n                  example:\n                    category: General supplies\n      responses:\n        '201':\n          description: Subaccount Creation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Subaccount:\n                  value:\n                    status: true\n                    message: Subaccount created\n                    data:\n                      business_name: Cheese Sticks\n                      account_number: 0123456789\n                      percentage_charge: 0.2\n                      settlement_bank: Guaranty Trust Bank\n                      integration: 428626\n                      domain: test\n                      subaccount_code: ACCT_xxxxxxxxxxxxx\n                      is_verified: false\n                      settlement_schedule: AUTO\n                      active: true\n                      migrate: false\n                      id: 37614\n                      createdAt: 2020-05-19T11:54:20.655Z\n                      updatedAt: 2020-05-19T11:54:20.655Z\n        '401':\n          $ref: '#/paths/~1split/post/responses/401'\n        default:\n          description: Server error\n  /split:\n    post:\n      tags:\n        - Split\n      summary: Create Split\n      operationId: split_create\n      description: Create a new transaction split\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1split/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - type\n                - subaccounts\n                - currency\n              properties:\n                name:\n                  description: Name of the transaction split\n                  type: string\n                  example: Testing Accounts\n                type:\n                  description: The type of transaction split you want to create.\n                  type: string\n                  enum:\n                    - percentage\n                    - flat\n                subaccounts:\n                  description: A list of object containing subaccount code and number of shares\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      subaccount:\n                        description: Subaccount code of the customer or partner\n                        type: string\n                        example: ACCT_03tb3u7jgwb4v\n                      share:\n                        description: The percentage or flat quota of the customer or partner\n                        type: string\n                        example: '102'\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                bearer_type:\n                  description: This allows you specify how the transaction charge should be processed\n                  type: string\n                  enum:\n                    - subaccount\n                    - account\n                    - all-proportional\n                    - all\n                bearer_subaccount:\n                  description: This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type\n                  type: string\n                  example: ACCT_03tb3u7jgwb4\n      responses:\n        '200':\n          description: Split Creation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Split:\n                  value:\n                    status: true\n                    message: Split created\n                    data:\n                      id: 142\n                      name: Test Doc\n                      type: percentage\n                      currency: NGN\n                      integration: 428626\n                      domain: test\n                      split_code: SPL_e7jnRLtzla\n                      active: true\n                      bearer_type: subaccount\n                      bearer_subaccount: 40809\n                      createdAt: 2020-06-30T11:42:29.150Z\n                      updatedAt: 2020-06-30T11:42:29.150Z\n                      subaccounts:\n                        - subaccount:\n                            id: 40809\n                            subaccount_code: ACCT_z3x6z3nbo14xsil\n                            business_name: Business Name\n                            description: Business Description\n                            primary_contact_name: null\n                            primary_contact_email: null\n                            primary_contact_phone: null\n                            metadata: null\n                            percentage_charge: 20\n                            settlement_bank: Business Bank\n                            account_number: 1234567890\n                          share: 20\n                        - subaccount:\n                            id: 40809\n                            subaccount_code: ACCT_pwwualwty4nhq9d\n                            business_name: Business Name\n                            description: Business Description\n                            primary_contact_name: null\n                            primary_contact_email: null\n                            primary_contact_phone: null\n                            metadata: null\n                            percentage_charge: 20\n                            settlement_bank: Business Bank\n                            account_number: 0123456789\n                          share: 30\n                      total_subaccounts: 2\n        '401':\n          description: Unauthorized operation\n          content:\n            application/json:\n              examples:\n                No-Authorization-Header:\n                  value:\n                    status: false\n                    message: No Authorization Header was found\n                Bad-Authorization-Header:\n                  value:\n                    status: false\n                    message: 'Format is Authorization Bearer [secret key]'\n                Invalid-Key:\n                  value:\n                    status: false\n                    message: Invalid key\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: boolean\n                  message:\n                    type: string\n        default:\n          description: Server error\n  /transaction/initialize:\n    post:\n      tags:\n        - Transaction\n      summary: Initialize Transaction\n      operationId: transaction_initialize\n      description: Create a new transaction\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transaction~1initialize/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - amount\n              properties:\n                email:\n                  description: Customer's email address\n                  type: string\n                  example: person@email.com\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                  example: 10247\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                reference:\n                  description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'\n                  type: string\n                  example: 123.uniq=ref-\n                callback_url:\n                  description: Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction\n                  type: string\n                  example: 'https://example.com/'\n                plan:\n                  description: |-\n                    If transaction is to create a subscription to a predefined plan, provide plan code here. \n                    This would invalidate the value provided in amount\n                  type: string\n                  example: PLN_123wede\n                invoice_limit:\n                  description: Number of times to charge customer during subscription to plan\n                  type: integer\n                  example: 10\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: object\n                  example:\n                    metadata:\n                      cart_id: 398\n                      custom_fields:\n                        - display_name: Invoice ID\n                          variable_name: Invoice ID\n                          value: 209\n                        - display_name: Cart Items\n                          variable_name: cart_items\n                          value: '3 bananas, 12 mangoes'\n                channels:\n                  description: An array of payment channels to control what channels you want to make available to the user to make a payment with\n                  type: array\n                  enum:\n                    - card\n                    - bank\n                    - ussd\n                    - qr\n                    - eft\n                    - mobile_money\n                    - bank_transfer\n                split_code:\n                  description: The split code of the transaction split\n                  type: string\n                  example: SPL_123AbZ\n                subaccount:\n                  description: The code for the subaccount that owns the payment\n                  type: string\n                  example: ACCT_23abcdefgh\n                transaction_charge:\n                  description: |-\n                    A flat fee to charge the subaccount for a transaction. \n                    This overrides the split percentage set when the subaccount was created\n                  type: integer\n                  example: 12300\n                bearer:\n                  description: The bearer of the transaction charge\n                  type: string\n                  enum:\n                    - account\n                    - subaccount\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Initiailize Transaction:\n                  value:\n                    status: true\n                    message: Authorization URL created\n                    data:\n                      authorization_url: 'https://checkout.paystack.com/spnajmit2hgi2c1'\n                      access_code: spandaoende\n                      reference: ad123ada\n        '401':\n          $ref: '#/paths/~1split/post/responses/401'\n        default:\n          description: Server error\n  /refund:\n    post:\n      tags:\n        - Refund\n      summary: Create Refund\n      operationId: refund_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1refund/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - transaction\n              properties:\n                transaction:\n                  description: Transaction reference or id\n                  type: string\n                  example: T685312322670591\n                amount:\n                  description: |-\n                    Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \n                    Amount cannot be more than the original transaction amount\n                  type: integer\n                  example: 10000\n                currency:\n                  description: Three-letter ISO currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                customer_note:\n                  description: Customer reason\n                  type: string\n                  example: Refund for transaction T685312322670591\n                merchant_note:\n                  description: Merchant reason\n                  type: string\n                  example: Refund for transaction T685312322670591 by test@me.com\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Refund:\n                  value:\n                    status: true\n                    message: Refund has been queued for processing\n                    data:\n                      transaction:\n                        id: 1004723697\n                        domain: test\n                        reference: T685312322670591\n                        amount: 10000\n                        paid_at: '2021-08-20T18:34:11.000Z'\n                        channel: apple_pay\n                        currency: NGN\n                        authorization:\n                          exp_month: null\n                          exp_year: null\n                          account_name: null\n                        customer:\n                          international_format_phone: null\n                        plan: {}\n                        subaccount:\n                          currency: null\n                        split: {}\n                        order_id: null\n                        paidAt: '2021-08-20T18:34:11.000Z'\n                        pos_transaction_data: null\n                        source: null\n                        fees_breakdown: null\n                      integration: 412829\n                      deducted_amount: 0\n                      channel: null\n                      merchant_note: Refund for transaction T685312322670591 by test@me.com\n                      customer_note: Refund for transaction T685312322670591\n                      status: pending\n                      refunded_by: test@me.com\n                      expected_at: '2021-12-16T09:21:17.016Z'\n                      currency: NGN\n                      domain: live\n                      amount: 10000\n                      fully_deducted: false\n                      id: 3018284\n                      createdAt: '2021-12-07T09:21:17.122Z'\n                      updatedAt: '2021-12-07T09:21:17.122Z'\n        '401':\n          $ref: '#/paths/~1split/post/responses/401'\n        default:\n          description: Server error\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    Customer:\n      allOf:\n        - type: object\n          required:\n            - email\n          properties:\n            email:\n              description: Customer's email address\n              type: string\n        - type: object\n          properties:\n            first_name:\n              description: Customer's first name\n              type: string\n              example: Some\n            last_name:\n              description: Customer's last name\n              type: string\n              example: Body\n            phone:\n              description: Customer's phone number\n              type: string\n              example: '+2348123456789'\n            metadata:\n              description: Stringified JSON object of custom data\n              type: string\n        - type: object\n          required:\n            - authorization_code\n          properties:\n            authorization_code:\n              description: Customer's authorization code to be deactivated\n              type: string\n        - type: object\n          required:\n            - customer\n          properties:\n            customer:\n              description: 'Customer''s code, or email address'\n              type: string\n            risk_action:\n              description: |\n                One of the possible risk actions [ default, allow, deny ]. allow to whitelist. \n                deny to blacklist. Customers start with a default risk action.\n              type: string\n              enum:\n                - default\n                - allow\n                - deny\n        - type: object\n          required:\n            - type\n            - country\n            - bvn\n            - bank_code\n            - account_number\n          properties:\n            type:\n              description: Predefined types of identification.\n              type: string\n              enum:\n                - bvn\n                - bank_account\n            country:\n              description: Two-letter country code of identification issuer\n              type: string\n              example: NG\n            bvn:\n              description: Customer's Bank Verification Number\n              type: integer\n              example: 0123456789\n            bank_code:\n              description: 'You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank).'\n              type: string\n              example: '007'\n            account_number:\n              description: Customer's bank account number.\n              type: string\n              example: '0111111111'\n            first_name:\n              description: Customer's first name\n              type: string\n              example: Uchenna\n            last_name:\n              description: Customer's last name\n              type: string\n              example: Okoro\n    Error:\n      type: object\n      properties:\n        status:\n          type: boolean\n        message:\n          type: string\n    Response:\n      type: object\n      properties:\n        status:\n          type: boolean\n        message:\n          type: string\n        data:\n          type: object\n  responses:\n    Ok:\n      description: Successful operation\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              status:\n                type: boolean\n              message:\n                type: string\n              data:\n                type: object\n    Created:\n      description: Resource created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response'\n    NotFound:\n      description: Entity not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            status: false\n            message: Entity not found\n    Unauthorized:\n      description: Unauthorized operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            status: false\n            message: Invalid key\n    GeneralError:\n      description: General Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/PaystackOSS/openapi@e65c07ce33d6900becd5f8dc3b935e7536ce486f/-/blob/dist/marketplace.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaystackOSS/openapi/blob/e65c07ce33d6900becd5f8dc3b935e7536ce486f/dist/marketplace.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/transaction/initialize\": post: operation \"transaction_initialize\": requestBody: parse content: application/x-www-form-urlencoded: schema: parse schema: $ref: resolve \"#/paths/~1transaction~1initialize/post/requestBody/content/application~1json/schema\": property \"channels\": at dist/marketplace.yaml:319:21: parse enum values: parse value \"\\\"card\\\"\": expected type \"array\", got \"string\""
}