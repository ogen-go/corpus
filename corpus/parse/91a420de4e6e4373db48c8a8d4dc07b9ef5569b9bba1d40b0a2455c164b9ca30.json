{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cebe/php-openapi"
		},
		"file": {
			"name": "traits-mixins.yaml",
			"size": 0,
			"path": "tests/spec/data/traits-mixins.yaml",
			"byteSize": 1414,
			"content": "# test whether we can read YAML files that use mixin feature\nx-ResourceCommon: \u0026ResourceCommon\n    uuid:\n      type: string\n      description: uuid of the resource\n    name:\n      type: string\n      description: name of the resource\n\nopenapi: 3.0.0\ninfo:\n  title: Test API\n  version: 1.0.0\npaths:\n  /foo:\n    put:\n      description: create foo\n      responses:\n        '200': \u0026RESP_OK\n          description: request succeeded\n          headers: \u0026RESP_HEADERS\n            X-Request-Id:\n              description: the request id\n          schema:\n            $ref: '#/components/schemas/Foo'\n        '404': \u0026RESP_ERROR\n          description: resource not found\n          headers: *RESP_HEADERS\n          schema:\n            $ref: \"#/components/schemas/Error\"\n        '428': *RESP_ERROR\n        default: *RESP_ERROR\ncomponents:\n  responses:\n    Bar:\n      description: A bar\n      content:\n        application/json:\n          schema: { type: object }\n  schemas:\n    Error:\n      description: This is an error\n      type: object\n      properties:\n        message:\n          type: string\n        code:\n          type: number\n          format: int64\n    Foo:\n      description: A foo resource type\n      type: object\n      properties:\n        \u003c\u003c: *ResourceCommon\n        id:\n          type: string\n          description: id of the foo\n        description:\n          type: string\n          description: description of foo"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /foo: put: responses: 428: headers: X-Request-Id: header MUST contain either a schema property, or a content property"
}