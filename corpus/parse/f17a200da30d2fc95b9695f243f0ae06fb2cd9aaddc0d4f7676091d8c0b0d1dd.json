{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/egovernments/DIGIT-OSS"
		},
		"file": {
			"name": "swagger-contract.yml",
			"size": 0,
			"path": "municipal-services/pgr-services/src/main/resources/swagger-contract.yml",
			"byteSize": 11077,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: DIGIT Public Grievance Redressal(PGR) V2\n  description: |\n    ### API specs for PGR ###\n    Application to Raise Grivances and track the progress.\n    . It allows any citizen registered in the system to raise a complaint (based on the   Service definition provided in the master data, Please Refer MDMS service to        Service Definition master) for any ulb belonging to the state.\n    . Notifications will be provided on progress of the complaint in evevry step.\n    . Feedback can be provided by the citizen once the complint is resolved.\n    . If not satisfied the citizen can reopen the complaint.\n  contact:\n    name: Egovernments Foundation\n    email: contact@egovernments.org\nx-module: BPA\nx-common-path: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml'\npaths:\n  /requests/_search:\n    post:\n      summary: Get service requests\n      description: |\n        Gets the list of service requests for a particular ULB based on search criteria.\n      parameters:\n      - $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/parameters/tenantId'\n      - name: serviceCode\n        in: query\n        description: Allows search for service type - comma separated list\n        schema:\n          type: array\n          items:\n            type: string\n            maxItems: 5\n      - name: ids\n        in: query\n        description: Search by list of UUID\n        schema:\n          type: array\n          items:\n            type: string\n            maxItems: 10\n      - name: mobileNo\n        in: query\n        description: Search by mobile number of service requester\n        schema:\n          type: string\n      - name: serviceRequestId\n        in: query\n        description: Search by serviceRequestId of the complaint\n        schema:\n          type: string\n      - name: applicationStatus\n        in: query\n        description: Search by list of Application Status\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        '202':\n          description: Successful response sorted by reverse chrnological order of creation\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ServiceResponse'\n        '400':\n          description: Invalid input.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n      tags:\n      - Service Request\n  /requests/_create:\n    post:\n      summary: Create service requests\n      description: Create new service requests - supports batch -  please note that in case of errors entire batch is rejected\n      tags:\n      - Service Request\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceRequest'\n        description: Request schema.\n        required: true\n      responses:\n        '202':\n          description: Application submitted successfully\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ServiceResponse'\n        '400':\n          description: Failed to process the application\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n  /requests/_update:\n    post:\n      summary: Update service requests\n      description: Updates service request\n      tags:\n      - Service Request\n      responses:\n        '202':\n          description: Application submitted successfully\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ServiceResponse'\n        '400':\n          description: Failed to process the application\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceRequest'\n        description: Request schema.\n        required: true\ncomponents:\n  schemas:\n    PGREntity:\n      type: object\n      description: 'Top level wrapper object containing the Service and Workflow objects'\n      properties:\n        service:\n          $ref: '#/components/schemas/Service'\n        workflow:\n          $ref: '#/components/schemas/Workflow'\n      required:\n      - service\n\n    Workflow:\n      type: object\n      description: 'BPA application object to capture the details of land, land owners, and address of the land.'\n      properties:\n        action:\n          type: string\n          description: Action on the application in certain\n          minLength: 1\n          maxLength: 64\n        assignes:\n          type: array\n          items:\n            type: string\n        comments:\n          type: string\n          description: Unique Identifier scrutinized number\n          minLength: 1\n          maxLength: 64\n        varificationDocuments:\n          description: Attach the workflow varification documents.\n          type: array\n          items:\n            $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/Document'\n    Status:\n      title: Status\n      enum:\n      - ACTIVE\n      - INACTIVE\n      type: string\n      description: status of the Property\n    ServiceDef:\n      type: object\n      description: |\n\n        This will be the MDMS data.\n\n        Defines the structure of a service provided by the administration. This is based on Open311 standard, but extends it in follwoing important ways -\n\n        1. metadata is changed from boolean to strign and represents a valid swgger 2.0 definition url of the metadata definition. If this is null then it is assumed taht service does not have any metadata, else the metadata is defined in the OpenAPI definition. This allows for a well structured powerful metadata definition.\n\n        2. Due to this ServiceRequest object has been enhanced to include metadata values (aka attribute value in Open311) as an JSON object.\n      properties:\n        tenantId:\n          type: string\n          description: The unique identifier for Service - this is equivalent to jurisdiction_id in Open311. As the platform intends to be multi tenanted - this is always required\n          minLength: 2\n          maxLength: 50\n        serviceCode:\n          type: string\n          description: The unique identifier for Service\n          minLength: 2\n          maxLength: 64\n        tag:\n          type: string\n          description: 'tags for this service, we can provide multiple keywords as dot(.) seprated.'\n        group:\n          type: string\n          description: This field we will use to capture department.\n        slaHours:\n          type: number\n          description: Service Level Agreement in hours for Service.\n      required:\n      - tenantId\n      - serviceCode\n    Service:\n      type: object\n      description: |\n        Instance of Service request raised for a particular service. As per extension propsed in the Service definition \"attributes\" carry the input values requried by metadata definition in the structure as described by the corresponding schema.\n\n        * Any one of 'address' or '(lat and lang)' or 'addressid' is mandatory\n      properties:\n        citizen:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/UserInfo'\n        id:\n          type: string\n          readOnly: true\n          description: The server generated unique ID(UUID).\n          minLength: 2\n          maxLength: 64\n        tenantId:\n          type: string\n          description: Unique identifier of the tenant.\n          minLength: 2\n          maxLength: 64\n        serviceCode:\n          type: string\n          description: Unique Code of the service defination (from service defination master)\n          minLength: 2\n          maxLength: 64\n        serviceRequestId:\n          type: string\n          readOnly: true\n          description: The unique formatted id for service request.\n          minLength: 2\n          maxLength: 128\n        description:\n          type: string\n          description: Additional information or description of the service request\n          minLength: 2\n          maxLength: 256\n        accountId:\n          type: string\n          description: userid of the user requesting the srervice - in our case it may be same as phone as we are using mobile number as the userid\n          minLength: 2\n          maxLength: 64\n        additionalDetail:\n          type: object\n          description: This is the json object that will carry the actual input (whereever the metadata requries input). Structure should be same as the schema definition provided in the metadata of the service (schema compliance check to be performed at client/server)\n        applicationStatus:\n          type: string\n          description: The current status of the service request.\n          readOnly: true\n        source:\n          type: string\n          description: 'Source mdms master data. Which captures the source of the service request(ex:- whatsapp, ivr, Swachhata etc)'\n          minLength: 2\n          maxLength: 64\n          example: whatsapp, ivr etc\n\n        address:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/Address'\n        auditDetails:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/AuditDetails'\n      required:\n      - tenantId\n      - serviceCode\n    ServiceRequest:\n      type: object\n      description: Request object to fetch the report data\n      properties:\n        requestInfo:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/RequestHeader'\n        pgrEntity:\n          $ref: '#/components/schemas/ServiceWrapper'\n      required:\n      - RequestInfo\n      - pgrEntity\n    ServiceResponse:\n      type: object\n      description: Response to the service request\n      properties:\n        responseInfo:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ResponseInfo'\n        PGREntities:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceWrapper'\n      required:\n      - ResponseInfo\n      - pgrEntity"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Service\": parse schema: property \"address\": parse schema: resolve \"https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/Address\": find schema: external base \"https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml\" is not supported"
}