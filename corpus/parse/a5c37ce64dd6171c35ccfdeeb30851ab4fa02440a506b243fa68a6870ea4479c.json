{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/europace/unterlagen-api"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 64227,
			"content": "openapi: 3.0.0\ninfo:\n  title: Unterlagen API\n  description: Europace API around uploaded documents and released proofs.\n  version: 2.0.17\n  termsOfService: https://docs.api.europace.de/terms/\npaths:\n  /dokumente:\n    post:\n      summary: upload document\n      description: |\n        Upload a document including metadata via url (up to 100 MB). After uploading, the document must be categorized so that it is available in the document file and can ultimately be shared to the loan provider. For this purpose, the request parameter can preferably be set mitKategorisierung =true.\n      operationId: uploadDocument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DokumentUpload\"\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: content of file\n                  type: string\n                  format: binary\n                anzeigename:\n                  description: name to display on frontend\n                  type: string\n                vorgangsNummer:\n                  description: Vorgangsnummer, where the document is to add\n                  type: string\n                mitKategorisierung:\n                  description: Setting this field to true causes the categorization to be started automatically after the document has been successfully uploaded.\n                  type: boolean\n              required:\n                - file\n                - vorgangsNummer\n      responses:\n        \"201\":\n          description: document uploaded successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dokument\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid Authorization Header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: Authorization failed due to e.g. missing authorization for the case or wrong Vorgangsnummer.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:schreiben\n      tags:\n        - Dokument\n    get:\n      summary: get metadata for all documents of a case\n      operationId: getDocuments\n      parameters:\n        - name: vorgangsNummer\n          in: query\n          description: Vorgangsnummer (case-id) which contains the documents\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: documents list\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Dokument\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid Authorization Header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:lesen\n      tags:\n        - Dokument\n    delete:\n      summary: delete all resources for this Vorgang\n      description: |\n        delete documents and pages for this case\n      operationId: deleteCaseResources\n      parameters:\n        - name: vorgangsNummer\n          in: query\n          description: Vorgangsnummer at which all documents are to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: documents successfully deleted\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid Authorization Header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: Authorization failed due to e.g. missing authorization for the Vorgang or wrong Vorgangsnummer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:schreiben\n      tags:\n        - Vorgang\n  /dokumente/transferspeicher:\n    post:\n      summary: use cloud storage for a document\n      description: |\n        Use a cloud storage for a document from which the document can be uploaded via signed URL (AWS Pre-Signed POST). See the readme for an example.\n      operationId: cloudStorage\n      responses:\n        \"201\":\n          description: cloud storage created successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transferspeicher\"\n          links:\n            UploadWithUrl:\n              operationId: uploadDocument\n              parameters:\n                url: '$response.body#/downloadUrl'\n              description: >\n                The `downloadUrl` can be used as `url` in `POST /dokumente`. Before that, the document must be transferred to the url in `UploadData.url` with `POST`.\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid Authorization Header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:schreiben\n      tags:\n        - Dokumente\n  \"/dokumente/{dokumentId}\":\n    get:\n      summary: get metadata for a document\n      operationId: getDocument\n      parameters:\n        - name: dokumentId\n          in: path\n          description: unique identifier of a Document\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: document metadata\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/Dokument\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: Authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: document not found\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:lesen\n      tags:\n        - Dokumente\n    put:\n      summary: update metadata of a document\n      operationId: updateDocument\n      parameters:\n        - in: path\n          name: dokumentId\n          description: unique identifier of a Document\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AenderbareDokumentMetadaten\"\n      responses:\n        \"200\":\n          description: document metadata successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dokument\"\n        \n        \"401\":\n          description: authentication failed due to e.g. missing/invalid Authorization Header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: Authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:schreiben\n      tags:\n        - Dokumente\n    delete:\n      summary: delete metadata and content of a document\n      operationId: deleteDocument\n      parameters:\n        - name: dokumentId\n          in: path\n          description: unique identifier of a Document\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: document successfully deleted\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: Authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:schreiben\n      tags:\n        - Dokumente\n  \"/dokumente/{dokumentId}/content\":\n    get:\n      summary: get content of a document\n      operationId: downloadDocument\n      parameters:\n        - name: dokumentId\n          in: path\n          description: unique identifier of a document\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: document not found\n          content:\n            application/pdf:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/pdf:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:lesen\n      tags:\n        - Dokumente\n  \"/dokumente/{dokumentId}/preview\":\n    get:\n      summary: get preview image of a page of a document\n      operationId: getPreview\n      parameters:\n        - name: dokumentId\n          in: path\n          description: unique identifier of a Document\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: page to be displayed, 1-based\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: size\n          in: query\n          description: \"Image size: small or large\"\n          schema:\n            type: string\n            enum:\n              - small\n              - large\n            default: small\n      responses:\n        \"200\":\n          description: Preview image in JPEG\n          content:\n            image/jpeg:\n              schema:\n                type: string\n                format: binary\n            application/json:\n              schema:\n                type: string\n                format: binary\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: document not found\n          content:\n            image/jpeg:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            image/jpeg:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:lesen\n      tags:\n        - Dokumente\n  \"/dokumente/{dokumentId}/kategorisierung\":\n    get:\n      summary: get categorization status of a document\n      operationId: getKategorisierung\n      parameters:\n        - name: dokumentId\n          in: path\n          description: unique identifier of a Document\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: >\n            the categorization of a document is completed, the pages\n            can be loaded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KategorisierungsStatus\"\n        \"202\":\n          description: the categorization has not yet been completed\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KategorisierungsStatus\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: document not found oder Kategorisierung noch nicht gestartet.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:dokument:schreiben\n      tags:\n        - Dokumente\n  \"/dokumente/{dokumentId}/seiten\":\n    get:\n      summary: get metadata for all pages of a document\n      operationId: getDokumentSeiten\n      parameters:\n        - name: dokumentId\n          in: path\n          description: unique identifier of a Document\n          required: true\n          schema:\n            type: string\n        - name: antragsNummer\n          in: query\n          description: In some cases, the information on the page refers to information in the process\n            at the time when the application was created\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: list of pages of the document\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Seite\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: document not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:lesen\n      tags:\n        - Seiten\n  /dokumente/seiten:\n    get:\n      summary: get metadata for all pages of a case\n      operationId: getSeiten\n      parameters:\n        - name: vorgangsNummer\n          in: query\n          description: unique identifier of a case, e.g. KX64LP\n          required: true\n          schema:\n            type: string\n        - name: antragsNummer\n          in: query\n          description: in some cases, the information on the page refers to information in the process\n            at the time when the application was created\n          required: false\n          schema:\n            type: string\n        - name: finanzierungsvorschlagsId\n          in: query\n          description: For Baufismart only. Id of a financing proposal from the related transaction. If available,\n            the document requirements of the financing proposal are supplied. Furthermore, the reference of a page can be changed\n            be returned if the document requests expect the page in a different reference.\n            For example, the financing proposal Id can be read from the [Vorgaenge-API](https://docs.api.europace.de/baufinanzierung/vorgaenge/vorgang-auslesen-api/).\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: list of pages\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Seiten\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case/Antrag\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: case not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:lesen\n      tags:\n        - Seiten\n    put:\n      summary: change sorting position of pages\n      description: Pages are saved in the specified order. The list of all pages or a partial list of them can be passed. In case of a partial list, the position in the total list is determined by the first page of the partial list.\n      operationId: setSortingPosition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/SeitenReferenz\"\n        description: page references of the pages to be saved in this order\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:schreiben\n      tags:\n        - Seiten\n  \"/dokumente/zuordnung/{kategorie}\":\n    put:\n      summary: set assignment (category and reference) for multiple pages\n      operationId: setAssignment\n      parameters:\n        - name: kategorie\n          in: path\n          description: the category to be assigned to the pages\n          required: true\n          schema:\n            type: string\n        - name: bezug\n          in: query\n          description: the reference to be assigned to the pages\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/SeitenReferenz\"\n        description: the page references of the pages whose category and reference are to be changed\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: category/reference not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:schreiben\n      tags:\n        - Seiten\n  /dokumente/zuordnungen:\n    get:\n      deprecated: true\n      summary: deprecated - please use  /dokumente/moeglichezuordnungen\n      operationId: getMoeglicheZuordnungenAlt\n      parameters:\n        - name: vorgangsNummer\n          in: query\n          description: unique identifier of a case\n          required: true\n          schema:\n            type: string\n        - name: antragsNummer\n          in: query\n          description: unique identifier of an application - more specific allocations - e.g. the\n            data at the time of application acceptance are used instead of the current transaction data\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/MoeglicheZuordnungAlt\"\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description:  case not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:lesen\n      tags:\n        - Seiten\n  /dokumente/moeglichezuordnungen:\n    get:\n      summary: list of all possible assignments (category and reference) of pages\n        get\n      description: which assignments are available for pages in this operation/application\n      operationId: getAvailableAssignments\n      parameters:\n        - name: vorgangsNummer\n          in: query\n          description: unique identifier of a case\n          required: true\n          schema:\n            type: string\n        - name: antragsNummer\n          in: query\n          description: unique identifier of an application - more specific allocations - e.g. the\n            data at the time of application acceptance are used instead of the current transaction data\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/MoeglicheZuordnung\"\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: case not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:lesen\n      tags:\n        - Seiten\n  /dokumente/anforderungen:\n    get:\n      summary: For BaufiSmart only. List of all document requirements received for a financing proposal. The result includes both the requirements of the product loan and the requirements of the advisor.\n        For example, the FinanzierungsvorschlagId can be get from the [Vorgaenge-API](https://docs.api.europace.de/baufinanzierung/vorgaenge/vorgang-auslesen-api/)\n      operationId: getAnforderungen\n      parameters:\n        - name: vorgangsNummer\n          in: query\n          description: unique identifier of a case\n          required: true\n          schema:\n            type: string\n        - name: finanzierungsvorschlagsId\n          in: query\n          description: unique identifier of a financing proposal\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Unterlagenanforderung\"\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: case not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:lesen\n      tags:\n        - Seiten\n  /dokumente/antrag/anforderungen:\n    get:\n      summary: For mortgage loans (BaufiSmart) only. List of all needed proof received for an application. The result includes the requirements of the bank for this application.\n      operationId: getAnforderungenByAntragsNummer\n      parameters:\n        - name: antragsNummer\n          in: query\n          description: unique identifier of an application\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Unterlagenanforderung\"\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: case not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:freigabe:lesen\n      tags:\n        - Seiten\n  /dokumente/archiv:\n    put:\n      summary: move pages to or from the archive\n      description: archive flag will be set\n      operationId: setArchiv\n      parameters:\n        - name: archiviert\n          in: query\n          description: pages should be moved to the archive (true) or taken out of the archive (false)\n          required: false\n          schema:\n            type: boolean\n            default: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/SeitenReferenz\"\n        description: page references of the pages to be moved to or from the archive\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:schreiben\n      tags:\n        - Seiten\n  /dokumente/geprueft:\n    put:\n      summary: mark pages as 'checked' or remove 'checked' marker\n      description: Pages are marked as 'checked' (with current timestamp). For\n        pages that have already been checked, the timestamp will be updated. If the checked parameter is set to false, the marker is removed and the pages appear unchecked. With checked set to false and pages without 'checked' marker nothing changes.\n      operationId: setChecked\n      parameters:\n        - name: geprueft\n          in: query\n          description: pages should be marked as 'checked' (true) or the 'checked' mark should be removed (false)\n          required: false\n          schema:\n            type: boolean\n            default: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/SeitenReferenz\"\n        description: The page references of the pages that should be marked as 'checked' or whose 'checked' mark should be removed.\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:schreiben\n      tags:\n        - Seiten\n  /dokumente/freigabe:\n    post:\n      summary: share pages with a product provider\n      description: the assignments (category/reference) are used, which were determined on the pages determined or set manually\n      operationId: createShare\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Freigabe\"\n        description: pages to be shared for an application and loan provider\n        required: true\n      responses:\n        \"201\":\n          description: share created\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FreigegebeneUnterlage\"\n        \"400\":\n          description: error in the input data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the case oder falsche Vorgangsnummer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:unterlage:freigeben\n      tags:\n        - Freigabe\n    get:\n      summary: > \n        load metadata of all shared documents (in a time period). \n        The list contains both successful and failed shares. \n        For this purpose, please check the retrieval status of the shared document.\n      operationId: getFreigaben\n      parameters:\n        - name: antragsNummer\n          in: query\n          description: unique identifier of an application\n          required: true\n          schema:\n            type: string\n        - name: von\n          in: query\n          description: from\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: bis\n          in: query\n          description: to\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: list of shared documents\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FreigegebeneUnterlage\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the application or wrong Antragsnummer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:freigabe:lesen\n      tags:\n        - Freigabe\n  /dokumente/freigaben/content:\n    get:\n      summary: contents of all successfully shared documents as a ZIP archive\n        download\n      operationId: downloadFreigaben\n      parameters:\n        - name: antragsNummer\n          in: query\n          description: unique identifier of an application\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A ZIP archive with all the documents successfully shared for the application documents as PDF files\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the application or wrong Antragsnummer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/zip:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:freigabe:lesen\n      tags:\n        - Freigabe\n  \"/dokumente/freigabe/{id}\":\n    get:\n      summary: get metadata of a shared document\n      description: provide a shared document\n      operationId: getShare\n      parameters:\n        - name: id\n          in: path\n          description: unique identifier of a shared document\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: shared document\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FreigegebeneUnterlage\"\n        \"404\":\n          description: shared document not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the application\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:freigabe:lesen\n      tags:\n        - Freigabe\n  \"/dokumente/freigabe/{id}/content\":\n    get:\n      summary: get the content of a shared document\n      operationId: downloadSharedDocument\n      parameters:\n        - name: id\n          in: path\n          description: unique identifier of the shared document\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the application\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: document not found\n          content:\n            application/pdf:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/pdf:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:freigabe:lesen\n      tags:\n        - Freigabe\n  \"/dokumente/freigabe/{id}/status\":\n    get:\n      summary: get retrieval status of a shared document\n      operationId: getSharedDocumentState\n      parameters:\n        - name: id\n          in: path\n          description: unique identifier of a shared document\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: state of a shared document\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Abrufstatus\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the application\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: shared document not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:freigabe:lesen\n      tags:\n        - Freigabe\n    post:\n      summary: set retrieval state of a shared document\n      operationId: setSharedDocumentState\n      parameters:\n        - name: id\n          in: path\n          description: unique identifier of a shared document\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Abrufstatus\"\n        required: true\n      responses:\n        \"201\":\n          description: state set\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: authorization failed due to e.g. missing authorization for the application\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"404\":\n          description: shared document not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2:\n            - unterlagen:freigabe:schreiben\n      tags:\n        - Freigabe\n  /dokumente/revision:\n    get:\n      summary: revision numbers of the data for the case\n      description: >\n        returns the current revision of the resources for the case. Each change of a resource changes its revision.\n      operationId: getRevision\n      parameters:\n        - name: vorgangsNummer\n          in: query\n          description: unique identifier of a case\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: revision numbers of the different resources of a case\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Revision\"\n        \"401\":\n          description: authentication failed due to e.g. missing/invalid authorization header\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - europace_oauth2: []\n      tags:\n        - Revision\nservers:\n  - url: https://api.europace2.de/v1\ncomponents:\n  securitySchemes:\n    europace_oauth2:\n      $ref: 'https://raw.githubusercontent.com/europace/authorization-api/master/europace_security.yaml'\n  schemas:\n    Dokument:\n      description: A document is an uploaded file and can consist of one or several - e.g. scanned - documents.\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique identifier of a document\n        schluessel:\n          type: string\n          description: public key of the document management\n        anzeigename:\n          type: string\n          description: name of the document in the frontend\n        filename:\n          type: string\n          description: filename of the uploaded file\n        erstellungsdatum:\n          type: string\n          format: date-time\n          description: upload date, creation date in europace\n        type:\n          type: string\n          description: media type referenced by https://tools.ietf.org/html/rfc6838.\n        size:\n          type: integer\n          format: int64\n          description: size of the contents of the document in bytes\n        vorgangsNummer:\n          type: string\n          description: unique identifier of a case\n        verschluesselt:\n          type: boolean\n          description: with encryption\n        kategorisierungsStatus:\n          $ref: \"#/components/schemas/KategorisierungsStatus\"\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: \"#/components/schemas/Relation\"\n            preview:\n              $ref: \"#/components/schemas/Relation\"\n            kategorisierung:\n              $ref: \"#/components/schemas/Relation\"\n            download:\n              $ref: \"#/components/schemas/Relation\"\n            publicDownload:\n              $ref: \"#/components/schemas/Relation\"\n            seiten:\n              $ref: \"#/components/schemas/Relation\"\n    DokumentUpload:\n      type: object\n      properties:\n        anzeigename:\n          description: name of the document in the frontend\n          type: string\n        vorgangsNummer:\n          description: unique identifier of a case\n          type: string\n        mitKategorisierung:\n          description: if true, categorization process will start after upload\n          type: boolean\n        url:\n          description: >\n            freely accessible URL to the document \n            You can use 'POST /dokumente/transferspeicher' to create one.\n          type: string\n      required:\n        - url\n        - vorgangsNummer\n    Transferspeicher:\n      type: object\n      properties:\n        uploadData:\n          $ref: \"#/components/schemas/UploadData\"\n        downloadUrl:\n          description: url to retrieve the document from the cloud storage\n          type: string\n    UploadData:\n      type: object\n      properties:\n        url:\n          description: url to upload the document to the cloud storage\n          type: string\n        fields:\n          description: AWS-fields\n          type: object\n          additionalProperties:\n            type: string\n    AenderbareDokumentMetadaten:\n      description: metadata that can be changed for a document\n      type: object\n      properties:\n        anzeigename:\n          type: string\n          description: name of the document in the frontend\n    KategorisierungsStatus:\n      type: object\n      description: >\n        If the categorization is still running, the state of the categorization can be requested.\n      properties:\n        status:\n          type: string\n          enum:\n            - NEW\n            - IN_PROGRESS\n            - DONE\n            - ERROR\n        meldung:\n          type: string\n          description: A message for the user that describes the reason for the state\n            or provides more detailed information. (nullable)\n    Seiten:\n      type: object\n      properties:\n        seiten:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Seite\"\n    Seite:\n      type: object\n      description: a page of a document\n      properties:\n        dokumentId:\n          type: string\n          description: unique identifier of a document\n        seite:\n          type: integer\n          format: int32\n          description: page in document, 1-based\n        drehung:\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 90\n            - 180\n            - 270\n          description: >\n            Angle in degrees by which the page must be rotated relative to the original document to show it correctly.\n            If the specification is zero or not present, then this angle is not known and the page will not be rotated.\n        klassifizierung:\n          type: object\n          properties:\n            kategorien:\n              description: |\n                Categories of the page sorted by relevance.\n                The first element contains the highest relevance.\n              type: array\n              items:\n                type: string\n                example: Personalausweis\n        zuordnung:\n          $ref: \"#/components/schemas/ZuordnungInSeite\"\n        anforderungen:\n          type: array\n          description:  currently only implemented in a few constellations. Ids of fulfilled Unterlagenanforderungen. The IDs can be determined with the following endpoint /documents/requirements\n          items:\n            type: string\n            example: pe.dsl.azv.finanzierungsloesung.rente.gesetzlich:antragsteller:1\n        archiviert:\n          type: boolean\n          description: archive state of the page\n        geprueftAm:\n          type: string\n          format: date-time\n          description: Timestamp at which the page was checked. zero if the page has not yet been checked for content.\n        freigaben:\n          type: array\n          description: shares of this page\n          items:\n            $ref: \"#/components/schemas/SeitenFreigabe\"\n        _links:\n          type: object\n          properties:\n            preview:\n              $ref: \"#/components/schemas/Relation\"\n    SeitenReferenz:\n      type: object\n      description: references a page of a document\n      properties:\n        dokumentId:\n          type: string\n          description: unique identifier of a document\n        seite:\n          type: integer\n          format: int32\n          description: page in document, 1-based\n    SeitenFreigabe:\n      type: object\n      description: shares of this page\n      properties:\n        abrufStatus:\n          $ref: \"#/components/schemas/Abrufstatus\"\n        antragsNummer:\n          type: string\n          description: application in which this page has already been shared\n        datum:\n          type: string\n          format: date-time\n          description: date of sharing the document\n        zuordnung:\n          $ref: \"#/components/schemas/ZuordnungInSeite\"\n    Freigabe:\n      type: object\n      description: pages to be shared for an application and loan provider\n      properties:\n        antragsNummer:\n          type: string\n          description: unique identifier of an application\n        seiten:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DokumentefreigabeSeiten\"\n        finanzierungsvorschlagsId:\n          type: string\n          description: optional - Can be specified for Baufismart cases. Id of the financing proposal for which the share is to be made.\n            By entering this FinanzierungsvorschlagId, the share reference of the pages can change during the share, if the needed proofs expect pages with a different reference.\n            For example, the FinanzierungsvorschlagId can be get from the [Vorgaenge-API](https://docs.api.europace.de/baufinanzierung/vorgaenge/vorgang-auslesen-api/).\n    #   is required, but has the same content as SeitenReferenz\n    DokumentefreigabeSeiten:\n      type: object\n      description: page number of a document to be shared\n      properties:\n        dokumentId:\n          type: string\n          description: unique identifier of a document\n        seite:\n          type: integer\n          format: int32\n          description: page in document, 1-based\n    FreigegebeneUnterlage:\n      type: object\n      description: Multi-page document shared by the advisor for the loan provider. The document has a category and a assignment.\n      properties:\n        id:\n          type: string\n          description: unique identifier of the shared document\n        antragsNummer:\n          type: string\n          description: unique identifier of an application\n        anzeigename:\n          type: string\n          description: name of the document in the frontend.\n        filename:\n          type: string\n          description: name of the uploaded file\n        size:\n          type: integer\n          description: size of the file in bytes\n          format: int64\n        schluessel:\n          type: string\n          description: public key of the document management system\n        freigabedatum:\n          type: string\n          format: date-time\n          description: shared date\n        mediaType:\n          type: string\n          description: media-type referenced by https://tools.ietf.org/html/rfc6838.\n        kategorie:\n          deprecated: true\n          description: deprecated - please use zuordnung --- the category of the share\n          type: string\n        bezug:\n          $ref: \"#/components/schemas/BezugsobjektAlt\"\n        zuordnung:\n          $ref: \"#/components/schemas/ZuordnungInUnterlage\"\n        freigebender:\n          $ref: \"#/components/schemas/Partner\"\n        abrufstatus:\n          $ref: \"#/components/schemas/Abrufstatus\"\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: \"#/components/schemas/Relation\"\n            download:\n              $ref: \"#/components/schemas/Relation\"\n            publicDownload:\n              $ref: \"#/components/schemas/Relation\"\n            abrufstatus:\n              $ref: \"#/components/schemas/Relation\"\n    Abrufstatus:\n      type: object\n      description: retrieval state for loan provider\n      properties:\n        status:\n          type: string\n          enum:\n            - CREATED\n            - IN_PROGRESS\n            - FAILED\n            - DELIVERED\n        message:\n          type: string\n    Bezugsobjekt:\n      type: object\n      description: assignement object in a case\n      properties:\n        id:\n          type: string\n          description: unique identifier of assignment object in a case, unique inside the case\n          example: immobilie:4711\n        typ:\n          type: string\n          description: type of assignment object\n          example: immobilie\n        name:\n          type: string\n          description: name of assignment object\n          example: Finanzierungsobjekt Feldweg 17\n    Bezugskategorie:\n      type: object\n      properties:\n        typ:\n          type: string\n          description: type of assignment (e.g. immobilie, antragsteller, vorhaben, ratenkredit) (technical). \n        id:\n          type: string\n          description: unique identifier of assignment (z.B. immobilie:4711) (technisch)\n        name:\n          type: string\n          description: name of the category in the frontend\n        rolle:\n          type: object\n          description: optional assignement role - a role groups assignement objects of the same assignement type (e.g. for assignement type immobilie)\n          properties:\n            typ:\n              type: string\n              description: assignment type of role (e.g. finanzierungsobjekt, bestandsobjekt, zusatzsicherheit wenn bezugsTyp=immobilie) (technical)\n            name:\n              type: string\n              description: name of this role in the frontend\n    BezugsobjektAlt:\n      deprecated: true\n      description: deprecated - please use property zuordnung instead of bezug\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique identifier of assignment (technical)\n          example: Immobilie:4711\n        typ:\n          type: string\n          description: type of assignment (technical).\n          example: Immobilie\n        name:\n          type: string\n          description: name of related object\n          example: Finanzierungsobjekt Feldweg 17\n        bezeichnung:\n          deprecated: true\n          type: string\n          description: name of related object\n          example: Finanzierungsobjekt Feldweg 17\n    Partner:\n      type: object\n      properties:\n        partnerId:\n          type: string\n          description: unique identifier of a europace partner\n          example: ABC45\n    Relation:\n      type: object\n      properties:\n        href:\n          type: string\n          format: uri\n          description: a HAL Ref\n        type:\n          type: string\n          description: media-type referenced by https://tools.ietf.org/html/rfc6838.\n    Revision:\n      type: object\n      properties:\n        dokumenteRevision:\n          type: string\n          description: revision number of the documents in the case\n        seitenRevision:\n          type: string\n          description: revision number of the document pages in the case\n    ZuordnungInSeite:\n      type: object\n      description: predicted category of a page\n      properties:\n        kategorie:\n          description: predicted category\n          example: Krankenversicherungsnachweis\n          type: string\n        bezug:\n          description: assignment object in case\n          example: antragsteller:1\n          type: string\n        status:\n          type: string\n          description: prediction state\n          enum:\n            - KATEGORIE_FEHLT\n            - KATEGORIE_UNGUELTIG\n            - BEZUG_FEHLT\n            - BEZUG_UNGUELTIG\n            - VOLLSTAENDIG\n    ZuordnungInUnterlage:\n      type: object\n      properties:\n        kategorie:\n          description: predicted category\n          example: Krankenversicherungsnachweis\n          type: string\n        bezug:\n          $ref: \"#/components/schemas/Bezugsobjekt\"\n    MoeglicheZuordnungAlt:\n      deprecated: true\n      type: object\n      properties:\n        kategorie:\n          type: string\n          description: unique identifier of categories (technical)\n        label:\n          type: string\n          description: category name\n        beschreibung:\n          type: string\n          description: description of category\n            (optional).\n        hinweistext:\n          type: string\n          description: additional hints, cann contain markdown formatted text\n        bezuege:\n          type: array\n          items:\n            type: object\n            description: possible assignments\n            properties:\n              bezug:\n                type: string\n                description: unique identifier of assignment (technical)\n                example: immobilie:4711\n              label:\n                type: string\n                description: the name of the role and the name of the assignment\n                example: Immobilie - Feldweg 17\n              oberkategorie:\n                type: string\n                description: the name of the role of this assignement\n                example: Immobilie\n              oberkategorieZusatz:\n                type: string\n                description: name of assignment object\n                example: Feldweg 17\n    MoeglicheZuordnung:\n      type: object\n      properties:\n        kategorie:\n          type: object\n          properties:\n            id:\n              type: string\n              description: unique identifier of categories (technical)\n            name:\n              type: string\n              description: category name\n            beschreibung:\n              type: string\n              description: description of category\n        bezuege:\n          type: array\n          description: possible assignments\n          items:\n            $ref: \"#/components/schemas/Bezugskategorie\"\n    Unterlagenanforderung:\n      type: object\n      description: needed proof\n      properties:\n        id:\n          type: string\n          description: unique identifier of a needed proof\n        code:\n          type: string\n          description: loan providers specific code for needed proof\n        text:\n          type: string\n          description: loan providers specific name for needed proof\n        kurzbezeichnung:\n          type: string\n          description: short description of the needed proof\n        erfuellungskategorien:\n          type: array\n          items:\n            type: string\n            description: list of categories which fulfill the needed proof. Currently only implemented in a few constellations.\n        produktanbieter:\n          $ref: \"#/components/schemas/Produktanbieter\"\n        bezug:\n          $ref: \"#/components/schemas/Bezugskategorie\"\n        liegtVor:\n          type: boolean\n          description: is true if this needed proof is set to be available by the advisor.\n        ausgeblendet:\n          type: boolean\n          description: is true if the needed proof is hided by the advisor.\n    Produktanbieter:\n      type: object\n      description: loan provider\n      properties:\n        id:\n          type: string\n          description: unique identifier from europace for loan providers (z.B. DSL_BANK) (technical)\n        bezeichnung:\n          type: string\n          description: name of loan provider (z.B. DSL Bank)\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n        statusCode:\n          type: integer\n          format: int32\n        statusMessage:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        traceId:\n          type: string\n      title: Error\n",
			"canonicalURL": "/github.com/europace/unterlagen-api@26be7ebd4a1449712ed8a449a3deeb9e5cd40444/-/blob/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/europace/unterlagen-api/blob/26be7ebd4a1449712ed8a449a3deeb9e5cd40444/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/dokumente/{dokumentId}/content\": at 1:44073: get: operation \"downloadDocument\": at 1:44080: security: parse security scheme \"europace_oauth2\": at 1:14126: : unknown security scheme type \"\""
}