{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/F5Networks/f5-appsvcs-templates"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "docs/openapi.yml",
			"byteSize": 38964,
			"content": "openapi: \"3.0.0\"\nx-errors:\n    '500': \u0026serverError\n      description: Server error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\n    default: \u0026defaultResponse\n      description: unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ErrorResponse\"\ninfo:\n  version: 1.16.0\n  title: F5 Application Services Templates API\n  license:\n    name: Apache 2.0\n  description: |\n    # F5 Application Services Templates (FAST)\n\n    This is the documentation for the FAST templating extension. This document\n    catalogs the API endpoints exposed by the extension. Note that the path for\n    all endpoints must be preceded by /mgmt/shared/fast.\n\n    ## Application Management\n\n    These are endpoints related to managing the lifecycle of your applications.\n    These endpoints help you create, edit, and query the applications managed by\n    FAST.\n\n    ## Task Tracking\n\n    When an application is created, it may not happen instantly. A task is run to\n    deploy the AS3 declaration. These endpoints are for retrieving information\n    about currently running and previously run tasks. These endpoints will report\n    the success or failure of a particular deployment action, such as creating\n    or editing an application.\n\n    ## Package Management\n\n    This is the API for loading and unloading new template sets into the system.\n\n    ## Template Management\n\n    This is the API for Querying templates that are loaded into the system.\n\n    ## FAST Extension\n\n    These endpoints are related to management of the FAST Extension itself,\n    for getting debug information or software version information.\nservers:\n - url: http://localhost:8100/mgmt/shared/fast\ntags:\n - name: Application Management\n - name: Task Tracking\n - name: Template Management\n - name: FAST Extension\npaths:\n  /applications:\n    get:\n      tags:\n        - Application Management\n      summary: Fetch List of FAST Applications\n      description: Responds with a list of applications that are currently deployed in the system.\n      operationId: getFASTApplications\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationList\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    post:\n      tags:\n        - Application Management\n      summary: Create one or more applications from templates\n      description: This is the main method to deploy a templated application. The parameters posted will be used to render a template, and that template will get posted to AS3. The call to AS3 may be async, so this endpoint must also be async. A task will be returned upon successful parameter submission that can track the progress of the deployment.\n      operationId: postFASTApplications\n      requestBody:\n        description: A task definition, including the name of the template to run and the parameters needed to render and post the output.\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/ApplicationDefinition\"\n                - $ref: \"#/components/schemas/ApplicationDefinitionList\"\n      responses:\n        '202':\n          description: Template Job Submitted Successfully, check the provided task id to get the status of the deployment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationResponse\"\n        '400':\n          description: AS3 errors (e.g., invalid schema) are forwarded as 400-level errors. See AS3 documentation for details.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    delete:\n      tags:\n        - Application Management\n      summary: Delete FAST Applications\n      description: Delete multiple FAST managed applications (all if no body is provided).\n      operationId: deleteFASTApplications\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                description: application paths (e.g., 'tenant/app')\n              example:\n                - tenant/app\n      responses:\n        '202':\n          description: Delete job submitted successfully.\n        '404':\n          description: Tenant or app not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /applications/{tenantName}/{appName}:\n    parameters:\n      - name: appName\n        in: path\n        required: true\n        description: The name of the app to retrieve.\n        schema:\n          type: string\n          pattern: '.*'\n      - name: tenantName\n        in: path\n        required: true\n        description: The tenant the app belongs to.\n        schema:\n          type: string\n          pattern: '.*'\n    get:\n      summary: Fetch an individual application\n      description: Fetches the AS3 application class for the given FAST application.\n      operationId: getFASTApplication\n      tags:\n        - Application Management\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AS3App\"\n        '404':\n          description: Application or Tenant was not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    patch:\n      summary: Update application parameters\n      description: Update an existing, deployed FAST application with the supplied parameters. Existing parameter values from the deployed application will be used as defaults for any missing parameter values.\n      operationId: updateFASTApplication\n      tags:\n        - Application Management\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                parameters:\n                  description: Parameters used to update the application.\n                  type: object\n              required:\n                - parameters\n      responses:\n        '202':\n          description: Template Job Submitted Successfully, check the provided task id to get the status of the deployment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationResponse\"\n        '400':\n          description: AS3 errors (e.g., invalid schema) are forwarded as 400-level errors. See AS3 documentation for details.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    delete:\n      tags:\n        - Application Management\n      summary: Delete application\n      description: Delete an individual application.\n      operationId: deleteFASTApplication\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Tenant or app not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /templates:\n    get:\n      summary: List all templates\n      description: List all installed templates.\n      operationId: getFASTTemplates\n      tags:\n        - Template Management\n      responses:\n        '200':\n          description: An array of template names.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TemplateList\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /templates/{setName}/{templateName}:\n    parameters:\n      - name: templateName\n        in: path\n        required: true\n        description: The name of the template to retrieve.\n        schema:\n          type: string\n          pattern: '.*'\n      - name: setName\n        in: path\n        required: true\n        description: The name of template set the template belongs to.\n        schema:\n          type: string\n          pattern: '.*'\n    get:\n      summary: Get the specified template\n      description: Get the template by template name and template set name.\n      operationId: getFASTTemplateBySetAndTemplateName\n      tags:\n        - Template Management\n      responses:\n        '200':\n          description: A template object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Template\"\n        '404':\n          description: Set or template was not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /tasks:\n    get:\n      summary: Get tasks\n      description: List all running and completed tasks.\n      operationId: getFASTTasks\n      tags:\n        - Task Tracking\n      responses:\n        '200':\n          description: An array of tasks and their status.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskList\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /tasks/{taskId}:\n    parameters:\n      - name: taskId\n        in: path\n        required: true\n        description: The ID of the task to retrieve.\n        schema:\n          $ref: '../../global-types/ietf-types.yaml#/uuid'\n        example: 86657e15-439d-4cef-97bc-58a6c119976b\n    get:\n      summary: Get information about a specific task\n      description: Get detailed information about a specific task. Tasks are tracked on a best effort basis, an interupption in service to the iControl LX platform may result in lost results.\n      operationId: getFASTTaskById\n      tags:\n        - Task Tracking\n      responses:\n        '200':\n          description: An array of tasks and their status.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskList\"\n        '404':\n          description: The task ID was not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /templatesets:\n    get:\n      parameters:\n        - name: showDisabled\n          in: query\n          required: false\n          description: Whether to show only disabled template sets.\n          schema:\n            type: boolean\n      summary: Get template sets\n      description: List all installed template sets.\n      operationId: getFASTTemplateSets\n      tags:\n        - Template Management\n      responses:\n        '200':\n          description: A list of installed template sets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TemplateSetList\"\n        '400':\n          description: Invalid template set request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: Template set not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    post:\n      summary: Install a new template set\n      description: Installs a previously uploaded template set zip.\n      operationId: postFASTTemplateSets\n      tags:\n        - Template Management\n      requestBody:\n        description: The name of a zip file (excluding the .zip extension).\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n                - name\n              properties:\n                name:\n                  title: Template set name.\n                  description: The name of the template set to install (excluding the .zip extension).\n                  type: string\n                  example: new_template_set\n          multipart/form-data:\n            schema:\n              description: a zip file containing template schema or mustache files.\n      responses:\n        '200':\n          description: The template set installed successfully.\n        '400':\n          description: The supplied template set name is invalid or missing.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: The supplied template name was not found in /var/config/rest/downloads.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    delete:\n      tags:\n        - Template Management\n      summary: Delete template sets\n      description: Delete all installed template sets.\n      operationId: deleteFASTTemplateSets\n      responses:\n        '200':\n          description: OK\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /templatesets/{setName}:\n    parameters:\n      - name: setName\n        in: path\n        required: true\n        description: The name of the template set.\n        schema:\n          type: string\n          pattern: '.*'\n    get:\n      tags:\n        - Template Management\n      summary: Get template information\n      description: Get information of template set with {setName}.\n      operationId: getFASTTemplateSetsByName\n      responses:\n        '200':\n          description: A template set object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TemplateSet\"\n        '400':\n          description: Template set in use.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: Template set not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    delete:\n      tags:\n        - Template Management\n      summary: Removes an installed template set\n      description: Removes an installed template set specified by its name.\n      operationId: deleteFASTTemplateSetByName\n      responses:\n        '200':\n          description: Template set removed successfully\n        '404':\n          description: The set name was not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /settings:\n    get:\n      tags:\n        - FAST Extension\n      summary: Get FAST Settings\n      description: Get an object that represents the current FAST configuration.\n      operationId: getFASTSettings\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Settings\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    delete:\n      tags:\n        - FAST Extension\n      summary: Delete/Reset FAST Settings\n      description: Reset FAST configuration to defaults.\n      operationId: deleteFASTSettings\n      responses:\n        '200':\n          description: success\n        '500': *serverError\n        default: *defaultResponse\n    post:\n      tags:\n        - FAST Extension\n      summary: Replace FAST settings (Full overwrite)\n      description: Replace the full FAST configuration with supplied body.\n      operationId: postFASTSettings\n      responses:\n        '200':\n          description: success\n        '422':\n          description: supplied configuration was invalid\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n    patch:\n      tags:\n        - FAST Extension\n      summary: Update existing FAST Settings\n      description: Update existing FAST configuration with the supplied body. Allows updates of individual properties.\n      operationId: patchFASTSettings\n      responses:\n        '200':\n          description: success\n        '422':\n          description: supplied configuration was invalid\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /settings-schema:\n    get:\n      tags:\n        - FAST Extension\n      summary: Get settings schema\n      description: Get JSON schema for the /settings endpoint.\n      operationId: getFastSettingsSchema\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SettingsSchema\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /info:\n    get:\n      tags:\n       - FAST Extension\n      summary: Information about the FAST Extension\n      description: This endpoint returns data pertaining to the version of FAST currently in use, as well as loaded template sets and other information useful for debug. This endpoint is recommended for use when verifying that FAST is installed and ready to use.\n      operationId: getFASTInfo\n      responses:\n        '200':\n          description: Information about the extension was gathered successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Info\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /render:\n    post:\n      tags:\n        - Application Management\n      summary: Render one or more applications from templates\n      description: Render application templates without posting them to AS3 NOTE - The rendered template results are not stitched with other AS3 applications on the box. In other words, posting these results to AS3 directly can result in data loss.\n      operationId: postFASTRender\n      requestBody:\n        description: An application definition, including the name of the template to render and the template parameters.\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/ApplicationDefinition\"\n                - $ref: \"#/components/schemas/ApplicationDefinitionList\"\n      responses:\n        '200':\n          description: The rendered templates as an array of JSON objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n        '400':\n          description: An improper application definition was submitted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: The specified template could not be found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '500':\n          description: Internal error. A bug report should be filed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\ncomponents:\n  schemas:\n    ParametersDefinition:\n      type: object\n      description: Object must conform to specified template's schema.\n      example: {}\n    AS3App:\n      type: object\n      description: The resulting AS3 application.\n      properties:\n        class:\n          type: string\n          pattern: '.*'\n    ApplicationDefinition:\n      type: object\n      description: Application Definition.\n      required:\n        - name\n        - parameters\n      properties:\n        name:\n          description: Must be valid template in the system.\n          type: string\n          example: examples/simple_udp_defaults\n        parameters:\n          $ref: \"#/components/schemas/ParametersDefinition\"\n        allowOverwrite:\n          description: Do not error if an application with the same name already exists in the tenant.\n          type: boolean\n          default: true\n    ApplicationDefinitionList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ApplicationDefinition\"\n    Application:\n      type: object\n      description: Application.\n      required:\n        - template\n        - tenant\n        - name\n      properties:\n        template:\n          description: must be valid template in the system\n          type: string\n          example: examples/simple_udp_defaults\n        lastModified:\n          type: string\n          format: date-time\n          description: timestamp of when the application was last modified\n        tenant:\n          type: string\n          description: the tenant the application belongs to\n          example: tenant\n        name:\n          type: string\n          description: the name of the application\n          example: app\n        setHash:\n          type: string\n          description: the hash of the template set used to deploy this application\n          example: 0ecfa04cb45fcafb6a067dcd06ba2271a6bd819fc686b2877745424c112f0c38\n    ApplicationList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Application\"\n    ApplicationResponse:\n      type: object\n      description: The response message when performing application operations.\n      properties:\n        code:\n          type: integer\n          minimum: 202\n          maximum: 599\n          example: 202\n        message:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: The task ID which can be used to query task state.\n                example: ff70c2c0-af21-44c8-8fec-18e2d82eabf0\n              name:\n                description: The name of the template used.\n                type: string\n                example: examples/simple_udp_defaults\n              parameters:\n                description: The parameters used to create/update the application.\n                type: object\n                example: {}\n    Task:\n      type: object\n      description: Task.\n      required:\n        - id\n        - name\n        - parameters\n        - code\n        - message\n        - tenant\n        - application\n      properties:\n        id:\n          description: The taskID of this task\n          type: string\n          example: ff70c2c0-af21-44c8-8fec-18e2d82eabf0\n        name:\n          description: must be valid template in the system\n          type: string\n          example: examples/simple_udp_defaults\n        parameters:\n          $ref: \"#/components/schemas/ParametersDefinition\"\n        code:\n          description: current status code of the task\n          type: integer\n          example: 200\n        message:\n          description: any messages (such as \"success\" or \"in progress\") for the task\n          type: string\n          example: success\n        tenant:\n          description: tenant associated with the task\n          type: string\n          example: tenant\n        application:\n          description: application associated with the task\n          type: string\n          example: app\n        timestamp:\n          description: timestamp of when the job was submitted (or updated for in progress jobs)\n          type: string\n          format: date-time\n    TaskList:\n      type: array\n      description: Task List.\n      items:\n        $ref: \"#/components/schemas/Task\"\n    Template:\n      type: object\n      description: An JSON-serialized, f5-fast-core Template object. All fields prefixed with an underscore should be treated as internal/private and only intended for Template.fromJson(). As such, they are not documented here.\n      properties:\n        title:\n          type: string\n          description: A \"pretty name\" for the template\n          example: Simple UDP Application\n        description:\n          type: string\n          description: Template description\n          example: \"** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN PRODUCTION ** This template is an example of how one might build a simple UDP application with load balancing. It allows the user to provide a virtual IP address and port along with a list of UDP server addresses. The user-supplied values are inserted when the template is rendered, yielding an AS3 declaration suitable for submission to BIG-IP.\"\n        definitions:\n          type: object\n          description: Additional properties for parameters. Object keys must match a parameter found in the template text.\n          example: {}\n        target:\n          type: string\n          default: 'as3'\n          description: A hint to template consumers about the intended purpose of the template\n          example: as3\n        templateText:\n          type: string\n          description: A Mustache-templated string\n          example: \"{\\n  \\\"class\\\": \\\"ADC\\\",\\n  \\\"schemaVersion\\\": \\\"3.0.0\\\",\\n  \\\"{{tenant_name}}\\\": {\\n    \\\"class\\\": \\\"Tenant\\\",\\n    \\\"{{application_name}}\\\": {\\n      \\\"class\\\": \\\"Application\\\",\\n      \\\"template\\\": \\\"udp\\\",\\n      \\\"serviceMain\\\": {\\n        \\\"class\\\": \\\"Service_UDP\\\",\\n        \\\"virtualAddresses\\\": [\\n          \\\"{{virtual_address}}\\\"\\n        ],\\n        \\\"virtualPort\\\": {{virtual_port:types:port}},\\n        \\\"pool\\\": \\\"{{application_name}}_Pool1\\\"\\n      },\\n      \\\"{{application_name}}_Pool1\\\": {\\n        \\\"class\\\": \\\"Pool\\\",\\n        \\\"monitors\\\": [\\n          \\\"icmp\\\"\\n        ],\\n        \\\"members\\\": [\\n          {\\n            \\\"serverAddresses\\\": {{server_addresses::array}},\\n            \\\"servicePort\\\": {{service_port:types:port}}\\n          }\\n        ]\\n      }\\n    }\\n  }\\n}\\n\"\n        defaultParameters:\n          type: object\n          description: Default values for parameters. Object keys must match a parameter found in the template text.\n          example:\n            tenant_name: foo\n            application_name: bar\n            virtual_address: 192.0.2.11\n            virtual_port: 5555\n            server_addresses:\n              - 192.0.2.22\n            service_port: 5555\n        sourceType:\n          type: string\n          description: A hint on where templateText originated from (e.g., \"MST\" for loading via Template.loadMst())\n          example: YAML\n        sourceText:\n          type: string\n          description: The raw text of the source the Template class parsed\n          example: \"# Simple UDP template with parameters defined outside of the template\\ntitle: Simple UDP Application\\ndescription:  \\\"** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN PRODUCTION ** This template is an example of how one might build a simple UDP application with load balancing. It allows the user to provide a virtual IP address and port along with a list of UDP server addresses. The user-supplied values are inserted when the template is rendered, yielding an AS3 declaration suitable for submission to BIG-IP.\\\"\\nparameters:\\n  tenant_name: foo\\n  application_name: bar\\n  virtual_address: 192.0.2.11\\n  virtual_port: 5555\\n  server_addresses:\\n    - 192.0.2.22\\n  service_port: 5555\\ntemplate: |\\n  {\\n    \\\"class\\\": \\\"ADC\\\",\\n    \\\"schemaVersion\\\": \\\"3.0.0\\\",\\n    \\\"{{tenant_name}}\\\": {\\n      \\\"class\\\": \\\"Tenant\\\",\\n      \\\"{{application_name}}\\\": {\\n        \\\"class\\\": \\\"Application\\\",\\n        \\\"template\\\": \\\"udp\\\",\\n        \\\"serviceMain\\\": {\\n          \\\"class\\\": \\\"Service_UDP\\\",\\n          \\\"virtualAddresses\\\": [\\n            \\\"{{virtual_address}}\\\"\\n          ],\\n          \\\"virtualPort\\\": {{virtual_port:types:port}},\\n          \\\"pool\\\": \\\"{{application_name}}_Pool1\\\"\\n        },\\n        \\\"{{application_name}}_Pool1\\\": {\\n          \\\"class\\\": \\\"Pool\\\",\\n          \\\"monitors\\\": [\\n            \\\"icmp\\\"\\n          ],\\n          \\\"members\\\": [\\n            {\\n              \\\"serverAddresses\\\": {{server_addresses::array}},\\n              \\\"servicePort\\\": {{service_port:types:port}}\\n            }\\n          ]\\n        }\\n      }\\n    }\\n  }\\n\"\n        sourceHash:\n          type: string\n          description: A sha256 hash of the sourceText (useful for determining if a template has changed)\n          example: a52a2f6cd3d03f7cdec09248fd59fc75b30fa14fa067a137628e7e6ee0b43b4f\n        contentType:\n          type: string\n          description: A MIME type for the intended output of Template.render()\n          default: text/plain\n        httpForward:\n          description: Information for forwarding the rendered result to an HTTP endpoint. Either a URL string or an Axios config object\n          oneOf:\n            - type: string\n            - type: object\n            - type: \"null\"\n          example: null\n    TemplateList:\n      type: array\n      description: Template List.\n      items:\n        type: string\n      example:\n        - example/httpTemplate\n        - example/httpsTemplate\n    TemplateSet:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the template set.\n          example: examples\n        hash:\n          type: string\n          description: A sha256 hash of the template hashes.\n          example: b4e574f5692532a03deb40b78599a7913ff63b2a31897a7b0168d99246d64715\n        templates:\n          $ref: \"#/components/schemas/TemplateSetList\"\n        enabled:\n          type: boolean\n          description: template set is installed and ready to use\n          example: true\n        supported:\n          type: boolean\n          description: the template set is officially supported by F5\n          example: false\n        schemas:\n          type: array\n          description: a list of user-supplied schema\n          items:\n            type: object\n            properties:\n              name: \n                type: string\n                description: schema name\n              hash:\n                type: string\n                description: A sha256 hash of the schema\n          example:\n            - name: examples/types\n              hash: 0105f0af93b9c27e737cb8337d3af5f67d9379668d4bf84a1b091306fbf9055c\n    TemplateSetList:\n      type: array\n      description: Template Set List.\n      items:\n        $ref: \"#/components/schemas/TemplateSet\"\n    Settings:\n      type: object\n      description: current config for the FAST iApps LX\n      properties:\n          deletedTemplateSets:\n            type: array\n            description: Template sets that have been removed.\n            items:\n              type: string\n            example: []\n          disableDeclarationCache:\n            type: boolean\n            description: Do not cache AS3 declarations.\n            example: false\n          enableIpam:\n            type: boolean\n            description: Enable IPAM for Official F5 FAST Templates (Experimental/Beta).\n            example: true\n          ipamProviders:\n            type: array\n            description: IPAM Providers configuration (Experimental/Beta).\n            items:\n              oneOf:\n                - $ref: \"#/components/schemas/IpamInfoblox\"\n                - $ref: \"#/components/schemas/IpamGeneric\"\n            example: []\n    SettingsSchema:\n      type: object\n      description: JSON Schema for FAST settings\n    Info:\n      type: object\n      properties:\n        version:\n          type: string\n          description: the version string for FAST\n          pattern: '.*'\n          example: 1.0.0\n        as3Info:\n          type: object\n          description: data from AS3's /info endpoint\n        installedTemplates:\n            $ref: \"#/components/schemas/TemplateSetList\"\n        config:\n            $ref: \"#/components/schemas/Settings\"\n    ErrorResponse:\n      type: object\n      description: Error Response.\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n          minimum: 400\n          maximum: 599\n          example: 404\n        message:\n          type: string\n          example: resource not found\n    IpamInfoblox:\n      type: object\n      title: Infoblox\n      description: IPAM Provider settings - Infoblox.\n      properties:\n        serviceType:\n          title: Service Type\n          type: string\n          enum:\n            - Infoblox\n          default: Infoblox\n        name:\n          title: Name\n          type: string\n        host:\n          title: Host\n          type: string\n        username:\n          title: Username\n          type: string\n        password:\n          title: Password\n          type: string\n          writeOnly: true\n        retrieveUrl:\n          title: Retrieve URL\n          type: string\n        retrieveBody:\n          title: Retrieve Body\n          type: string\n        retrievePathQuery:\n          title: Retrieve Path Query\n          type: string\n          default: $.result.ipv4addr\n        retrieveRefPathQuery:\n          title: Retrieve Reference Path Query\n          type: string\n          default: $.result._ref\n        releaseUrl:\n          title: Release URL\n          type: string\n          default: '{{host}}/wapi/{{apiVersion}}/{{addressRef}}'\n        releaseBody:\n          title: Release Body\n          type: string\n          default: '{}'\n        releaseMethod:\n          title: Release Method\n          type: string\n          enum:\n            - get\n            - post\n            - put\n            - patch\n            - delete\n          default: delete\n        authHeaderName:\n          title: Authorization Header Name\n          type: string\n          default: ''\n        authHeaderValue:\n          title: Authorization Header Value\n          type: string\n          default: ''\n        apiVersion:\n          title: API Version\n          type: string\n          default: v2.4\n        network:\n          title: Network Name\n          type: string\n    IpamGeneric:\n      type: object\n      title: Generic\n      description: IPAM Provider settings - Generic.\n      properties:\n        serviceType:\n          title: Service Type\n          type: string\n          enum:\n            - Generic\n          default: Generic\n        name:\n          title: Name\n          type: string\n        host:\n          title: Host\n          type: string\n        username:\n          title: Username\n          type: string\n        password:\n          title: Password\n          type: string\n          writeOnly: true\n        retrieveUrl:\n          title: Retrieve URL\n          type: string\n        retrieveBody:\n          title: Retrieve Body\n          type: string\n          default: '{}'\n        retrievePathQuery:\n          title: Retrieve Path Query\n          type: string\n          default: $\n        retrieveRefPathQuery:\n          title: Retrieve Reference Path Query\n          type: string\n          default: ''\n        releaseUrl:\n          title: Release URL\n          type: string\n        releaseBody:\n          title: Release Body\n          type: string\n          default: '{}'\n        releaseMethod:\n          title: Release Method\n          type: string\n          enum:\n            - get\n            - post\n            - put\n            - patch\n            - delete\n          default: post\n        authHeaderName:\n          title: Authorization Header Name\n          type: string\n          default: Authorization\n        authHeaderValue:\n          title: Authorization Header Value\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: /tasks/{taskId}: parameters: parse parameter \"taskId\": schema: parse schema: resolve \"../../global-types/ietf-types.yaml#/uuid\": find schema: external base \"../../global-types/ietf-types.yaml\" is not supported"
}