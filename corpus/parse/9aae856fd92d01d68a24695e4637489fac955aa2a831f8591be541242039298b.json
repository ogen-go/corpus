{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Reference.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Genotyping/References/Schemas/Reference.yaml",
			"byteSize": 3887,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    Reference:\n      description: A `Reference` is a canonical assembled contig, intended to act as a reference coordinate space for other genomic annotations. A single `Reference` might represent the human chromosome 1, for instance. `References` are designed to be immutable.\n      type: object\n      x-brapi-metadata:\n        primaryModel: true\n        module: BrAPI-Genotyping\n      properties:\n        additionalInfo:\n          additionalProperties:\n            type: string\n          description: Additional arbitrary info\n          type: object\n        externalReferences: \n          $ref: '#/components/schemas/ExternalReferences'\n        referenceDbId:\n          description: The unique identifier for a `Reference`\n          type: string\n          example: fc0a81d0\n        referenceName:\n          description: The human readable name of a `Reference` within a `ReferenceSet`.\n          type: string\n          example: Chromosome 2\n        referenceSetDbId:\n          description: The unique identifier for a `ReferenceSet`\n          type: string\n          example: c1ecfef1\n        referenceSetName:\n          description: The human readable name of a `ReferenceSet`\n          type: string\n          example: The Best Assembly Ever\n        isDerived:\n          description: A sequence X is said to be derived from source sequence Y, if X and Y are of the same length and the per-base sequence divergence at A/C/G/T bases is sufficiently small. Two sequences derived from the same official sequence share the same coordinates and annotations, and can be replaced with the official sequence for certain use cases.\n          format: boolean\n          type: boolean\n          example: false\n        length:\n          description: The length of this `Reference` sequence.\n          type: integer\n          example: 50000000\n        md5checksum:\n          description: The MD5 checksum uniquely representing this `Reference` as a lower-case hexadecimal string, calculated as the MD5 of the upper-case sequence excluding all whitespace characters (this is equivalent to SQ:M5 in SAM).\n          type: string\n          example: c2365e900c81a89cf74d83dab60df146\n        sourceGermplasm:\n          description: All known corresponding Germplasm\n          type: array\n          items:\n            type: object\n            properties:\n              germplasmDbId:\n                description: The ID which uniquely identifies a `Germplasm` within the given database server\n                type: string\n                example: d4076594\n              germplasmName:\n                description: The human readable name of a `Germplasm`\n                type: string\n                example: A0000003\n        sourceAccessions:\n          description: All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) which must include a version number, e.g. `GCF_000001405.26`.\n          items:\n            type: string\n          type: array\n          example: [\"GCF_000001405.26\"]\n        sourceDivergence:\n          description: The `sourceDivergence` is the fraction of non-indel bases that do not match the `Reference` this message was derived from.\n          format: float\n          type: number\n          example: 0.01\n        sourceURI:\n          description: The URI from which the sequence was obtained. Specifies a FASTA format file/string with one name, sequence pair. In most cases, clients should call the `getReferenceBases()` method to obtain sequence bases for a `Reference` instead of attempting to retrieve this URI.\n          type: string\n          example: https://wiki.brapi.org/files/demo.fast\n        commonCropName:\n          description: Common name for the crop \n          type: string\n          example: Maize\n        species:\n          $ref: '#/components/schemas/OntologyTerm'\n\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@37ea4989c56879b1472421c4975cfdd06c397b45/-/blob/Specification/BrAPI-Genotyping/References/Schemas/Reference.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/37ea4989c56879b1472421c4975cfdd06c397b45/Specification/BrAPI-Genotyping/References/Schemas/Reference.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Reference\": parse schema: property \"externalReferences\": parse schema: at 1:555: find schema: resolve: can't find value for \"components/schemas/ExternalReferences\""
}