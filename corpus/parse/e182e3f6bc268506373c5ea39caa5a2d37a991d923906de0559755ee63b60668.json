{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "moralis-2.json",
			"size": 0,
			"path": "schemas/openapi3/moralis-2.json",
			"byteSize": 142793,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Moralis\",\n    \"version\": \"2\",\n    \"x-categories\": [\"popular\", \"blockchain\"],\n    \"x-logo\": {\n      \"url\": \"https://raw.githubusercontent.com/chainjet/assets/master/integrations/moralis.png\"\n    }\n  },\n  \"paths\": {\n    \"/block/{block_number_or_hash}\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets block contents by block hash\",\n        \"operationId\": \"getBlock\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"block_number_or_hash\",\n            \"description\": \"The block hash or block number\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the contents of a block by block hash\",\n        \"tags\": [\"native\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the contents of a block\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/block\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/dateToBlock\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets the closest block of the provided date\",\n        \"operationId\": \"getDateToBlock\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"providerUrl\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"date\",\n            \"description\": \"Unix date in miliseconds or a datestring (any format that is accepted by momentjs)\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the closest block of the provided date\",\n        \"tags\": [\"native\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the blocknumber and corresponding date and timestamp\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/blockDate\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/logs\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets address logs\",\n        \"operationId\": \"getLogsByAddress\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"block_number\",\n            \"description\": \"The block number\\n* Provide the param 'block_numer' or ('from_block' and / or 'to_block')\\n* If 'block_numer' is provided in conbinaison with 'from_block' and / or 'to_block', 'block_number' will will be used\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to get the logs\\n* Provide the param 'block_numer' or ('from_block' and / or 'to_block')\\n* If 'block_numer' is provided in conbinaison with 'from_block' and / or 'to_block', 'block_number' will will be used\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The maximum block number from where to get the logs\\n* Provide the param 'block_numer' or ('from_block' and / or 'to_block')\\n* If 'block_numer' is provided in conbinaison with 'from_block' and / or 'to_block', 'block_number' will will be used\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_date\",\n            \"description\": \"The date from where to get the logs (any format that is accepted by momentjs)\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n* If 'from_date' and the block params are provided, the block params will be used. Please refer to the blocks params sections (block_number,from_block and to_block) on how to use them\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get the logs to this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n* If 'to_date' and the block params are provided, the block params will be used. Please refer to the blocks params sections (block_number,from_block and to_block) on how to use them\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"address\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"topic0\",\n            \"description\": \"topic0\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"topic1\",\n            \"description\": \"topic1\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"topic2\",\n            \"description\": \"topic2\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"topic3\",\n            \"description\": \"topic3\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the logs from an address\",\n        \"tags\": [\"native\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the logs of an address\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/logCollection\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/block/{block_number_or_hash}/nft/transfers\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets NFT transfers by block number or block hash\",\n        \"operationId\": \"getNFTTransfersByBlock\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"block_number_or_hash\",\n            \"description\": \"The block hash or block number\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1, \"default\": 100 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets NFT transfers by block number or block hash\",\n        \"tags\": [\"native\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the contents of a block\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/nftTransferCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/transaction/{transaction_hash}\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Get transaction details by transaction hash\",\n        \"operationId\": \"getTransaction\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"transaction_hash\",\n            \"description\": \"The transaction hash\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xdc85cb1b75fd09c2f6d001fea4aba83764193cbd7881a1fa8ccde350a5681109\"\n            }\n          }\n        ],\n        \"description\": \"Gets the contents of a block transaction by hash\",\n        \"tags\": [\"native\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Transaction details by transaction hash\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/blockTransaction\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/events\": {\n      \"post\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets events by topic\",\n        \"operationId\": \"getContractEvents\",\n        \"requestBody\": {\n          \"description\": \"ABI of the specific event\",\n          \"required\": false,\n          \"content\": { \"application/json\": { \"schema\": { \"type\": \"object\" } } }\n        },\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"providerUrl\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to get the logs\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The maximum block number from where to get the logs.\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_date\",\n            \"description\": \"The date from where to get the logs (any format that is accepted by momentjs)\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get the logs to this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"address\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"topic\",\n            \"description\": \"The topic of the event\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"description\": \"offset\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          }\n        ],\n        \"description\": \"Gets events in descending order based on block number\",\n        \"tags\": [\"native\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of events by topic\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"total\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The total number of matches for this query\",\n                      \"example\": \"2000\"\n                    },\n                    \"page\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The page of the current result\",\n                      \"example\": \"2\"\n                    },\n                    \"page_size\": {\n                      \"type\": \"integer\",\n                      \"description\": \"The number of results per page\",\n                      \"example\": \"100\"\n                    },\n                    \"result\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/logEvent\" }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/function\": {\n      \"post\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Runs a function of a contract abi\",\n        \"operationId\": \"runContractFunction\",\n        \"requestBody\": {\n          \"description\": \"Body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/RunContractDto\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"providerUrl\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"address\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"function_name\",\n            \"description\": \"function_name\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Runs a given function of a contract abi and returns readonly data\",\n        \"tags\": [\"native\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns response of the function executed\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"string\" } }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets native transactions\",\n        \"operationId\": \"getTransactions\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to get the transactions\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The maximum block number from where to get the transactions.\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_date\",\n            \"description\": \"The date from where to get the transactions (any format that is accepted by momentjs)\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get the transactions to this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"address\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          }\n        ],\n        \"description\": \"Gets native transactions in descending order based on block number\",\n        \"tags\": [\"account\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of native transactions.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/transactionCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/balance\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets native balance for a specific address.\",\n        \"operationId\": \"getNativeBalance\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"providerUrl\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The address for which the native balance will be checked\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The block number on which the balances should be checked\",\n            \"required\": false,\n            \"schema\": { \"type\": \"number\" }\n          }\n        ],\n        \"description\": \"Gets native balance for a specific address\",\n        \"tags\": [\"account\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns native balance for a specific address\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/nativeBalance\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/erc20\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets token balances for a specific address.\",\n        \"operationId\": \"getTokenBalances\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The address for which token balances will be checked\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The block number on which the balances should be checked\",\n            \"required\": false,\n            \"schema\": { \"type\": \"number\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"token_addresses\",\n            \"description\": \"The addresses to get balances for (Optional)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"maxItems\": 10,\n              \"items\": { \"type\": \"string\" }\n            }\n          }\n        ],\n        \"description\": \"Gets token balances for a specific address\",\n        \"tags\": [\"account\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns token balances for a specific address\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/erc20TokenBalance\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/erc20/transfers\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets erc 20 token transactions\",\n        \"operationId\": \"getTokenTransfers\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to get the transactions\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The maximum block number from where to get the transactions.\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_date\",\n            \"description\": \"The date from where to get the transactions (any format that is accepted by momentjs)\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get the transactions to this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"address\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets ERC20 token transactions in descending order based on block number\",\n        \"tags\": [\"account\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of token transactions.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/erc20TransactionCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/nft\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets the NFTs owned by a given address\",\n        \"operationId\": \"getNFTs\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The owner of a given token\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"token_addresses\",\n            \"description\": \"The addresses to get balances for (Optional)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"maxItems\": 10,\n              \"items\": { \"type\": \"string\" }\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets NFTs owned by the given address\\n* The response will include status [SYNCED/SYNCING] based on the contracts being indexed.\\n* Use the token_address param to get results for a specific contract only\\n* Note results will include all indexed NFTs\\n* Any request which includes the token_address param will start the indexing process for that NFT collection the very first time it is requested\\n\",\n        \"tags\": [\"account\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of nft owners\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/nftOwnerCollection\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/nft/transfers\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets NFT transfers to and from a given address\",\n        \"operationId\": \"getNFTTransfers\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The sender or recepient of the transfer\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"direction\",\n            \"description\": \"The transfer direction\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"both\",\n              \"default\": \"both\",\n              \"enum\": [\"both\", \"to\", \"from\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to get the transfers\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"To get the reserves at this block number\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the transfers of the tokens matching the given parameters\",\n        \"tags\": [\"account\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of NFT transfer\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/nftTransferCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{address}/nft/{token_address}\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets the NFTs owned by a given address\",\n        \"operationId\": \"getNFTsForContract\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The owner of a given token\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token_address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          }\n        ],\n        \"description\": \"Gets NFTs owned by the given address\\n* Use the token_address param to get results for a specific contract only\\n* Note results will include all indexed NFTs\\n* Any request which includes the token_address param will start the indexing process for that NFT collection the very first time it is requested\\n\",\n        \"tags\": [\"account\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of nft owners\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/nftOwnerCollection\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/erc20/metadata\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets token metadata\",\n        \"operationId\": \"getTokenMetadata\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"providerUrl\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"addresses\",\n            \"description\": \"The addresses to get metadata for\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"maxItems\": 10,\n              \"items\": { \"type\": \"string\" }\n            }\n          }\n        ],\n        \"description\": \"Returns metadata (name, symbol, decimals, logo) for a given token contract address.\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns metadata (name, symbol, decimals, logo) for a given token contract address.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/erc20Metadata\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/trades\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Get nft trades by marketplaces\",\n        \"operationId\": \"getNFTTrades\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to get the transfers\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"To get the reserves at this block number\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_date\",\n            \"description\": \"The date from where to get the transfers (any format that is accepted by momentjs)\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get the reserves to this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"provider_url\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"marketplace\",\n            \"description\": \"marketplace from where to get the trades (only opensea is supported at the moment)\",\n            \"example\": \"opensea\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"opensea\",\n              \"default\": \"opensea\",\n              \"enum\": [\"opensea\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"cursor\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974\"\n            }\n          }\n        ],\n        \"description\": \"Get the nft trades for a given contracts and marketplace\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the trades\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/tradeCollection\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/lowestprice\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Get the lowest price found for a nft token contract\",\n        \"operationId\": \"getNFTLowestPrice\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"days\",\n            \"description\": \"The number of days to look back to find the lowest price\\nIf not provided 7 days will be the default\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"provider_url\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"marketplace\",\n            \"description\": \"marketplace from where to get the trades (only opensea is supported at the moment)\",\n            \"example\": \"opensea\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"opensea\",\n              \"default\": \"opensea\",\n              \"enum\": [\"opensea\"]\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974\"\n            }\n          }\n        ],\n        \"description\": \"Get the lowest price found for a nft token contract for the last x days (only trades paid in ETH)\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the trade with the lowest price\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/trade\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/erc20/metadata/symbols\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets token metadata\",\n        \"operationId\": \"getTokenMetadataBySymbol\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"symbols\",\n            \"description\": \"The symbols to get metadata for\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": { \"type\": \"string\", \"example\": \"LINK\" }\n            }\n          }\n        ],\n        \"description\": \"Returns metadata (name, symbol, decimals, logo) for a given token contract address.\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns metadata (name, symbol, decimals, logo) for a given token contract address.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/erc20Metadata\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/erc20/{address}/price\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets token price\",\n        \"operationId\": \"getTokenPrice\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"providerUrl\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The address of the token contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"exchange\",\n            \"description\": \"The factory name or address of the token exchange\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"to_block\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          }\n        ],\n        \"description\": \"Returns the price nominated in the native token and usd for a given token contract address.\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the price nominated in the native token and usd for a given token contract address\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/erc20Price\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/erc20/{address}/transfers\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets erc20 transactions of a token contract\",\n        \"operationId\": \"getTokenAddressTransfers\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"subdomain\",\n            \"description\": \"The subdomain of the moralis server to use (Only use when selecting local devchain as chain)\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to get the transfers\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The maximum block number from where to get the transfers.\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_date\",\n            \"description\": \"The date from where to get the transfers (any format that is accepted by momentjs)\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get the transfers to this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The address of the token contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"description\": \"offset\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          }\n        ],\n        \"description\": \"Gets ERC20 token contract transactions in descending order based on block number\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of token contract transactions.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/erc20TransactionCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/erc20/{address}/allowance\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets the amount which the spender is allowed to withdraw from the owner.\",\n        \"operationId\": \"getTokenAllowance\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"providerUrl\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The address of the token contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"owner_address\",\n            \"description\": \"The address of the token owner\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"spender_address\",\n            \"description\": \"The address of the token spender\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the amount which the spender is allowed to withdraw from the spender\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the amount which the spender is allowed to withdraw from the owner..\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/erc20Allowance\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/search\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Retrieves the NFT data based on a metadata search\",\n        \"operationId\": \"searchNFTs\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"description\": \"The search string\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"minLength\": 3, \"maxLength\": 256 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"description\": \"What fields the search should match on. To look into the entire metadata set the value to 'global'. To have a better response time you can look into a specific field like name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"name\",\n              \"default\": \"global\",\n              \"enum\": [\n                \"name\",\n                \"description\",\n                \"attributes\",\n                \"global\",\n                \"name,description\",\n                \"name,attributes\",\n                \"description,attributes\",\n                \"name,description,attributes\"\n              ]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to start the search\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The maximum block number from where to end the search\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_date\",\n            \"description\": \"The date from where to start the search (any format that is accepted by momentjs)\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get search results up until this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"addresses\",\n            \"description\": \"The addresses to get metadata for\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"maxItems\": 10,\n              \"items\": { \"type\": \"string\" }\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"token_address\",\n            \"description\": \"token_address\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"cursor\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          }\n        ],\n        \"description\": \"Gets NFTs that match a given metadata search.\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the matching NFTs\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/nftMetadataCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/transfers\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets NFT transfers from a block number to a block number\",\n        \"operationId\": \"getNftTransfersFromToBlock\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_block\",\n            \"description\": \"The minimum block number from where to get the transfers\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"The maximum block number from where to get the transfers.\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"from_date\",\n            \"description\": \"The date from where to get the transfers (any format that is accepted by momentjs)\\n* Provide the param 'from_block' or 'from_date'\\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get transfers up until this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the transfers of the tokens from a block number to a block number\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of NFT transfers\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/nftTransferCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Retrieves the unique NFTs inside a given contract\",\n        \"operationId\": \"getAllTokenIds\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\", \"minimum\": 1 },\n            \"required\": false\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"range\",\n            \"description\": \"The desired subrange to query\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 1 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the previous response (used to getting the next page).\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets data, including metadata (where available), for all token ids for the given contract address.\\n* Results are limited to 100 per page by default\\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\\n\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of nfts\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/nftCollection\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/transfers\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets NFT transfers of a given contract\",\n        \"operationId\": \"getContractNFTTransfers\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the transfers of the tokens matching the given parameters\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of NFT transfers\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/nftTransferCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/owners\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets the owners of the NFTs of a given contract\",\n        \"operationId\": \"getNFTOwners\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets all owners of NFT items within a given contract collection\\n* Use after /nft/contract/{token_address} to find out who owns each token id in a collection\\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\\n\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of nft owners\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/nftOwnerCollection\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/metadata\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets the global metadata for a given contract\",\n        \"operationId\": \"getNFTMetadata\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the contract level metadata (name, symbol, base token uri) for the given contract\\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\\n\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection NFT collections.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/nftContractMetadata\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/{token_id}/metadata/resync\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"resync the metadata for a given token_id\",\n        \"operationId\": \"reSyncMetadata\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token_id\",\n            \"description\": \"The id of the token\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"flag\",\n            \"description\": \"The type of resync to operate\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"uri\",\n              \"default\": \"uri\",\n              \"enum\": [\"uri\", \"metadata\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"mode\",\n            \"description\": \"To define the behaviour of the endpoint\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"sync\",\n              \"default\": \"async\",\n              \"enum\": [\"async\", \"sync\"]\n            }\n          }\n        ],\n        \"description\": \"ReSync the metadata for an NFT\\n* The metadata flag will request a the NFT's metadata from the already existing token_uri\\n* The uri(default) flag will fetch the latest token_uri from the given NFT address. In sync mode the metadata will also be fetched\\n* The sync mode will make the endpoint synchronous so it will wait for the task to be completed before responding\\n* The async mode(default) will make the endpoint asynchronous so we will wait for the task to be completed before responding\\n\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"(In sync mode) Resync request executed.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/metadataResync\" }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"The resync request was received and will be executed.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/metadataResync\" }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"(In sync mode) Resync request executed and metadata could not be updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/metadataResync\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/sync\": {\n      \"put\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Sync a Contract for NFT Index\",\n        \"operationId\": \"syncNFTContract\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Sync a Contract for NFT Index\\n\",\n        \"tags\": [\"contract\"],\n        \"responses\": {\n          \"201\": { \"description\": \"Contract Address was triggered for index.\" }\n        }\n      }\n    },\n    \"/nft/{address}/{token_id}\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets the NFT with the given id of a given contract\",\n        \"operationId\": \"getTokenIdMetadata\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token_id\",\n            \"description\": \"The id of the token\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          }\n        ],\n        \"description\": \"Gets data, including metadata (where available), for the given token id of the given contract address.\\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\\n\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the specified NFT\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/nft\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/{token_id}/owners\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets the owners of NFTs for a given contract\",\n        \"operationId\": \"getTokenIdOwners\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token_id\",\n            \"description\": \"The id of the token\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets all owners of NFT items within a given contract collection\\n* Use after /nft/contract/{token_address} to find out who owns each token id in a collection\\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\\n\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of NFTs with their respective owners\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/nftOwnerCollection\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/nft/{address}/{token_id}/transfers\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Gets NFT transfers of a given contract\",\n        \"operationId\": \"getWalletTokenIdTransfers\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"Address of the contract\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token_id\",\n            \"description\": \"The id of the token\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"format\",\n            \"description\": \"The format of the token id\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"decimal\",\n              \"default\": \"decimal\",\n              \"enum\": [\"decimal\", \"hex\"]\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"description\": \"limit\",\n            \"required\": false,\n            \"schema\": { \"type\": \"integer\", \"minimum\": 0 }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order\",\n            \"description\": \"The field(s) to order on and if it should be ordered in ascending or descending order. Specified by: fieldName1.order,fieldName2.order. Example 1: \\\"block_number\\\", \\\"block_number.ASC\\\", \\\"block_number.DESC\\\", Example 2: \\\"block_number and contract_type\\\", \\\"block_number.ASC,contract_type.DESC\\\"\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"cursor\",\n            \"description\": \"The cursor returned in the last response (for getting the next page)\\n\",\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"description\": \"Gets the transfers of the tokens matching the given parameters\",\n        \"tags\": [\"token\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns a collection of NFT transfers\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/nftTransferCollection\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/resolve/{domain}\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Resolves an Unstoppable domain and returns the address\",\n        \"operationId\": \"resolveDomain\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"currency\",\n            \"description\": \"The currency to query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"eth\",\n              \"default\": \"eth\",\n              \"enum\": [\"eth\", \"0x1\"]\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"domain\",\n            \"description\": \"Domain to be resolved\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"example\": \"brad.crypto\" }\n          }\n        ],\n        \"description\": \"Resolves an Unstoppable domain and returns the address\\n\",\n        \"tags\": [\"resolve\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns an address\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/resolve\" }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returns an address\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"type\": \"object\" } }\n            }\n          }\n        }\n      }\n    },\n    \"/resolve/{address}/reverse\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Return the ENS domain when available (Only for ETH)\",\n        \"operationId\": \"resolveAddress\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"address\",\n            \"description\": \"The address to be resolved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\"\n            }\n          }\n        ],\n        \"description\": \"Resolves an ETH address and find the ENS name\\n\",\n        \"tags\": [\"resolve\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns an ENS\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/ens\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{pair_address}/reserves\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Get liquidity pair reserves for an Uniswap V2 based Exchange.\",\n        \"operationId\": \"getPairReserves\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"To get the reserves at this block number\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get the reserves to this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"provider_url\",\n            \"description\": \"web3 provider url to user when using local dev chain\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"pair_address\",\n            \"description\": \"Liquidity pair address\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974\"\n            }\n          }\n        ],\n        \"description\": \"Get the liquidity reserves for a given pair address. Only Uniswap V2 based exchanges supported at the moment.\",\n        \"tags\": [\"defi\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the pair reserves\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"reserve0\": {\n                      \"type\": \"string\",\n                      \"example\": \"220969226548536862025877\"\n                    },\n                    \"reserve1\": {\n                      \"type\": \"string\",\n                      \"example\": \"844810441191293211036\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{token0_address}/{token1_address}/pairAddress\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Get pair address based on token0 and token1 address\",\n        \"operationId\": \"getPairAddress\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"chain\",\n            \"description\": \"The chain to query\",\n            \"required\": false,\n            \"schema\": { \"$ref\": \"#/components/schemas/chainList\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_block\",\n            \"description\": \"To get the reserves at this block number\",\n            \"required\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"to_date\",\n            \"description\": \"Get the reserves to this date (any format that is accepted by momentjs)\\n* Provide the param 'to_block' or 'to_date'\\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\\n\",\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"exchange\",\n            \"description\": \"The factory name or address of the token exchange\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"uniswapv2\",\n              \"enum\": [\n                \"uniswapv2\",\n                \"uniswapv3\",\n                \"sushiswapv2\",\n                \"pancakeswapv2\",\n                \"pancakeswapv1\",\n                \"quickswap\"\n              ]\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token0_address\",\n            \"description\": \"Token0 address\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"token1_address\",\n            \"description\": \"Token1 address\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\"\n            }\n          }\n        ],\n        \"description\": \"Fetches and returns pair data of the provided token0+token1 combination.\\nThe token0 and token1 options are interchangable (ie. there is no different outcome in \\\"token0=WETH and token1=USDT\\\" or \\\"token0=USDT and token1=WETH\\\")\\n\",\n        \"tags\": [\"defi\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the pair address of the two tokens\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/reservesCollection\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/ipfs/uploadFolder\": {\n      \"post\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Uploads multiple files and place them in a folder directory\",\n        \"operationId\": \"uploadFolder\",\n        \"requestBody\": {\n          \"description\": \"Array of JSON and Base64 Supported\",\n          \"required\": false,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/ipfsFileRequest\" }\n              }\n            }\n          }\n        },\n        \"description\": \"Uploads multiple files and place them in a folder directory\\n\",\n        \"tags\": [\"storage\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the path to the uploaded files\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/ipfsFile\" }\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": []\n      }\n    },\n    \"/web3/version\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Returns the web3 api version\",\n        \"operationId\": \"web3ApiVersion\",\n        \"tags\": [\"info\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the web3 api version\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/web3version\" }\n              }\n            }\n          }\n        },\n        \"parameters\": []\n      }\n    },\n    \"/info/endpointWeights\": {\n      \"get\": {\n        \"security\": [{ \"ApiKeyAuth\": [] }],\n        \"summary\": \"Returns the endpoint price list for rate limits and costs\",\n        \"operationId\": \"endpointWeights\",\n        \"tags\": [\"info\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the endpoint price list for rate limits and costs\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"#/components/schemas/endpointWeights\" }\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": []\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"ApiKeyAuth\": { \"type\": \"apiKey\", \"in\": \"header\", \"name\": \"X-API-Key\" }\n    },\n    \"schemas\": {\n      \"logCollection\": {\n        \"properties\": {\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of matches for this query\",\n            \"example\": \"100\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"The page of the current result\",\n            \"example\": \"1\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of results per page\",\n            \"example\": \"100\"\n          },\n          \"cursor\": {\n            \"type\": \"string\",\n            \"description\": \"The cursor to get to the next page\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/logEventByAddress\" }\n          }\n        }\n      },\n      \"logEventByAddress\": {\n        \"required\": [\n          \"transaction_hash\",\n          \"address\",\n          \"block_timestamp\",\n          \"block_number\",\n          \"block_hash\",\n          \"data\",\n          \"topic0\",\n          \"topic1\",\n          \"topic2\",\n          \"topic3\"\n        ],\n        \"properties\": {\n          \"transaction_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction hash\",\n            \"example\": \"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09\"\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the contract\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"block_timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The block timestamp\",\n            \"example\": \"2021-04-02T10:07:54.000Z\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The block number\",\n            \"example\": 12526958\n          },\n          \"block_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The block hash\",\n            \"example\": \"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86\"\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"description\": \"The data of the log\",\n            \"example\": \"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443\"\n          },\n          \"topic0\": {\n            \"type\": \"string\",\n            \"example\": \"0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a\"\n          },\n          \"topic1\": {\n            \"type\": \"string\",\n            \"example\": \"0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391\"\n          },\n          \"topic2\": {\n            \"type\": \"string\",\n            \"example\": \"0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9\"\n          },\n          \"topic3\": { \"type\": \"string\", \"example\": null }\n        }\n      },\n      \"logEvent\": {\n        \"required\": [\n          \"transaction_hash\",\n          \"address\",\n          \"block_timestamp\",\n          \"block_number\",\n          \"block_hash\",\n          \"data\"\n        ],\n        \"properties\": {\n          \"transaction_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction hash\",\n            \"example\": \"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09\"\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the contract\",\n            \"example\": \"0x18F97EF6B2cbac5CA85b375b7093C4A207340d06\"\n          },\n          \"block_timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The block timestamp\",\n            \"example\": \"2021-04-02T10:07:54.000Z\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The block number\",\n            \"example\": 12526958\n          },\n          \"block_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The block hash\",\n            \"example\": \"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86\"\n          },\n          \"data\": {\n            \"type\": \"object\",\n            \"description\": \"The content of the event\",\n            \"properties\": {\n              \"from\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"0x54ff6974c715956a5049a123408bff91fbe29f01\"\n              },\n              \"to\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"0x74de5d4fcbf63e00296fd95d33236b9794016631\"\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"260103496340000000000\"\n              }\n            }\n          }\n        }\n      },\n      \"log\": {\n        \"required\": [\n          \"log_index\",\n          \"transaction_hash\",\n          \"transaction_index\",\n          \"address\",\n          \"data\",\n          \"topic0\",\n          \"block_timestamp\",\n          \"block_number\",\n          \"block_hash\"\n        ],\n        \"properties\": {\n          \"log_index\": { \"type\": \"string\", \"example\": \"273\" },\n          \"transaction_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The hash of the transaction\",\n            \"example\": \"0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5\"\n          },\n          \"transaction_index\": { \"type\": \"string\", \"example\": \"204\" },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the contract\",\n            \"example\": \"0x3105d328c66d8d55092358cf595d54608178e9b5\"\n          },\n          \"data\": {\n            \"type\": \"string\",\n            \"description\": \"The data of the log\",\n            \"example\": \"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443\"\n          },\n          \"topic0\": {\n            \"type\": \"string\",\n            \"example\": \"0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a\"\n          },\n          \"topic1\": {\n            \"type\": \"string\",\n            \"example\": \"0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391\"\n          },\n          \"topic2\": {\n            \"type\": \"string\",\n            \"example\": \"0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9\"\n          },\n          \"topic3\": { \"type\": \"string\", \"example\": null },\n          \"block_timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The timestamp of the block\",\n            \"example\": \"2021-05-07T11:08:35.000Z\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The block number\",\n            \"example\": \"12386788\"\n          },\n          \"block_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The hash of the block\",\n            \"example\": \"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171\"\n          }\n        }\n      },\n      \"blockTransaction\": {\n        \"required\": [\n          \"hash\",\n          \"nonce\",\n          \"transaction_index\",\n          \"from_address\",\n          \"to_address\",\n          \"value\",\n          \"gas_price\",\n          \"input\",\n          \"receipt_cumulative_gas_used\",\n          \"receipt_gas_used\",\n          \"receipt_status\",\n          \"block_timestamp\",\n          \"block_number\",\n          \"block_hash\",\n          \"logs\"\n        ],\n        \"properties\": {\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"The hash of the transaction\",\n            \"example\": \"0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed\"\n          },\n          \"nonce\": {\n            \"type\": \"string\",\n            \"description\": \"The nonce\",\n            \"example\": \"1848059\"\n          },\n          \"transaction_index\": { \"type\": \"string\", \"example\": \"108\" },\n          \"from_address\": {\n            \"type\": \"string\",\n            \"description\": \"The from address\",\n            \"example\": \"0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0\"\n          },\n          \"to_address\": {\n            \"type\": \"string\",\n            \"description\": \"The to address\",\n            \"example\": \"0x003dde3494f30d861d063232c6a8c04394b686ff\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The value sent\",\n            \"example\": \"115580000000000000\"\n          },\n          \"gas\": { \"type\": \"string\", \"example\": \"30000\" },\n          \"gas_price\": {\n            \"type\": \"string\",\n            \"description\": \"The gas price\",\n            \"example\": \"52500000000\"\n          },\n          \"input\": { \"type\": \"string\", \"example\": \"0x\" },\n          \"receipt_cumulative_gas_used\": {\n            \"type\": \"string\",\n            \"example\": \"4923073\"\n          },\n          \"receipt_gas_used\": { \"type\": \"string\", \"example\": \"21000\" },\n          \"receipt_contract_address\": { \"type\": \"string\", \"example\": null },\n          \"receipt_root\": { \"type\": \"string\", \"example\": null },\n          \"receipt_status\": { \"type\": \"string\", \"example\": \"1\" },\n          \"block_timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The block timestamp\",\n            \"example\": \"2021-05-07T11:08:35.000Z\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The block number\",\n            \"example\": \"12386788\"\n          },\n          \"block_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The hash of the block\",\n            \"example\": \"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171\"\n          },\n          \"logs\": {\n            \"type\": \"array\",\n            \"description\": \"The logs of the transaction\",\n            \"items\": { \"$ref\": \"#/components/schemas/log\" }\n          }\n        }\n      },\n      \"block\": {\n        \"required\": [\n          \"timestamp\",\n          \"number\",\n          \"hash\",\n          \"parent_hash\",\n          \"nonce\",\n          \"sha3_uncles\",\n          \"logs_bloom\",\n          \"transactions_root\",\n          \"state_root\",\n          \"receipts_root\",\n          \"miner\",\n          \"difficulty\",\n          \"total_difficulty\",\n          \"size\",\n          \"extra_data\",\n          \"gas_limit\",\n          \"gas_used\",\n          \"transaction_count\",\n          \"transactions\"\n        ],\n        \"properties\": {\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The block timestamp\",\n            \"example\": \"2021-05-07T11:08:35.000Z\"\n          },\n          \"number\": {\n            \"type\": \"string\",\n            \"description\": \"The block number\",\n            \"example\": 12386788\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"The block hash\",\n            \"example\": \"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171\"\n          },\n          \"parent_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The block hash of the parent block\",\n            \"example\": \"0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045\"\n          },\n          \"nonce\": {\n            \"type\": \"string\",\n            \"description\": \"The nonce\",\n            \"example\": \"0xedeb2d8fd2b2bdec\"\n          },\n          \"sha3_uncles\": {\n            \"type\": \"string\",\n            \"example\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\"\n          },\n          \"logs_bloom\": {\n            \"type\": \"string\",\n            \"example\": \"0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf\"\n          },\n          \"transactions_root\": {\n            \"type\": \"string\",\n            \"example\": \"0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27\"\n          },\n          \"state_root\": {\n            \"type\": \"string\",\n            \"example\": \"0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b\"\n          },\n          \"receipts_root\": {\n            \"type\": \"string\",\n            \"example\": \"0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23\"\n          },\n          \"miner\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the miner\",\n            \"example\": \"0xea674fdde714fd979de3edf0f56aa9716b898ec8\"\n          },\n          \"difficulty\": {\n            \"type\": \"string\",\n            \"description\": \"The difficulty of the block\",\n            \"example\": \"7253857437305950\"\n          },\n          \"total_difficulty\": {\n            \"type\": \"string\",\n            \"description\": \"The total difficulty\",\n            \"example\": \"24325637817906576196890\"\n          },\n          \"size\": {\n            \"type\": \"string\",\n            \"description\": \"The block size\",\n            \"example\": \"61271\"\n          },\n          \"extra_data\": {\n            \"type\": \"string\",\n            \"example\": \"0x65746865726d696e652d6575726f70652d7765737433\"\n          },\n          \"gas_limit\": {\n            \"type\": \"string\",\n            \"description\": \"The gas limit\",\n            \"example\": \"14977947\"\n          },\n          \"gas_used\": {\n            \"type\": \"string\",\n            \"description\": \"The gas used\",\n            \"example\": \"14964688\"\n          },\n          \"transaction_count\": {\n            \"type\": \"string\",\n            \"description\": \"The number of transactions in the block\",\n            \"example\": \"252\"\n          },\n          \"transactions\": {\n            \"type\": \"array\",\n            \"description\": \"The transactions in the block\",\n            \"items\": { \"$ref\": \"#/components/schemas/blockTransaction\" }\n          }\n        }\n      },\n      \"blockDate\": {\n        \"required\": [\"date\", \"block\", \"timestamp\"],\n        \"properties\": {\n          \"date\": {\n            \"type\": \"string\",\n            \"description\": \"The date of the block\",\n            \"example\": \"2020-01-01T00:00:00+00:00\"\n          },\n          \"block\": {\n            \"type\": \"number\",\n            \"description\": \"The blocknumber\",\n            \"example\": 9193266\n          },\n          \"timestamp\": {\n            \"type\": \"number\",\n            \"description\": \"The timestamp of the block\",\n            \"example\": 1577836811\n          }\n        }\n      },\n      \"RunContractDto\": {\n        \"required\": [\"abi\"],\n        \"properties\": {\n          \"abi\": {\n            \"type\": \"object\",\n            \"description\": \"The contract abi\",\n            \"example\": []\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"description\": \"The params for the given function\",\n            \"example\": {}\n          }\n        }\n      },\n      \"transactionCollection\": {\n        \"properties\": {\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of matches for this query\",\n            \"example\": \"2000\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"The page of the current result\",\n            \"example\": \"2\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of results per page\",\n            \"example\": \"100\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/transaction\" }\n          }\n        }\n      },\n      \"transaction\": {\n        \"required\": [\n          \"hash\",\n          \"nonce\",\n          \"transaction_index\",\n          \"from_address\",\n          \"to_address\",\n          \"value\",\n          \"gas\",\n          \"gas_price\",\n          \"input\",\n          \"receipt_cumulative_gas_used\",\n          \"receipt_gas_used\",\n          \"receipt_contract_address\",\n          \"receipt_root\",\n          \"receipt_status\",\n          \"block_timestamp\",\n          \"block_number\",\n          \"block_hash\"\n        ],\n        \"properties\": {\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"The hash of the transaction\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"nonce\": {\n            \"type\": \"string\",\n            \"description\": \"The nonce of the transaction\",\n            \"example\": 326595425\n          },\n          \"transaction_index\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction index\",\n            \"example\": 25\n          },\n          \"from_address\": {\n            \"type\": \"string\",\n            \"description\": \"The sender\",\n            \"example\": \"0xd4a3BebD824189481FC45363602b83C9c7e9cbDf\"\n          },\n          \"to_address\": {\n            \"type\": \"string\",\n            \"description\": \"The recipient\",\n            \"example\": \"0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The value that was transfered (in wei)\",\n            \"example\": 650000000000000000\n          },\n          \"gas\": {\n            \"type\": \"string\",\n            \"description\": \"The gas of the transaction\",\n            \"example\": 6721975\n          },\n          \"gas_price\": {\n            \"type\": \"string\",\n            \"description\": \"The gas price\",\n            \"example\": 20000000000\n          },\n          \"input\": { \"type\": \"string\", \"description\": \"The input\" },\n          \"receipt_cumulative_gas_used\": {\n            \"type\": \"string\",\n            \"description\": \"The receipt cumulative gas used\",\n            \"example\": 1340925\n          },\n          \"receipt_gas_used\": {\n            \"type\": \"string\",\n            \"description\": \"The receipt gas used\",\n            \"example\": 1340925\n          },\n          \"receipt_contract_address\": {\n            \"type\": \"string\",\n            \"description\": \"The receipt contract address\",\n            \"example\": \"0x1d6a4cf64b52f6c73f201839aded7379ce58059c\"\n          },\n          \"receipt_root\": {\n            \"type\": \"string\",\n            \"description\": \"The receipt root\"\n          },\n          \"receipt_status\": {\n            \"type\": \"string\",\n            \"description\": \"The receipt status\",\n            \"example\": 1\n          },\n          \"block_timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The block timestamp\",\n            \"example\": \"2021-04-02T10:07:54.000Z\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The block number\",\n            \"example\": 12526958\n          },\n          \"block_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The block hash\",\n            \"example\": \"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86\"\n          }\n        }\n      },\n      \"erc20Allowance\": {\n        \"required\": [\"allowance\"],\n        \"properties\": {\n          \"allowance\": { \"type\": \"string\", \"description\": \"The allowance\" }\n        }\n      },\n      \"erc20TokenBalance\": {\n        \"required\": [\"token_address\", \"name\", \"symbol\", \"decimals\", \"balance\"],\n        \"properties\": {\n          \"token_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the token contract\",\n            \"example\": \"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the token Contract\",\n            \"example\": \"Kylin Network\"\n          },\n          \"symbol\": {\n            \"type\": \"string\",\n            \"description\": \"The symbol of the NFT contract\",\n            \"example\": \"KYL\"\n          },\n          \"logo\": {\n            \"type\": \"string\",\n            \"description\": \"The logo of the token\",\n            \"example\": \"https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png\"\n          },\n          \"thumbnail\": {\n            \"type\": \"string\",\n            \"description\": \"The thumbnail of the logo\",\n            \"example\": \"https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png\"\n          },\n          \"decimals\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of decimals on of the token\",\n            \"example\": 18\n          },\n          \"balance\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp of when the contract was last synced with the node\",\n            \"example\": \"123456789\"\n          }\n        }\n      },\n      \"nativeBalance\": {\n        \"required\": [\"balance\"],\n        \"properties\": {\n          \"balance\": {\n            \"type\": \"string\",\n            \"description\": \"The balance\",\n            \"example\": \"1234567890\"\n          }\n        }\n      },\n      \"trade\": {\n        \"required\": [\n          \"transaction_hash\",\n          \"transaction_index\",\n          \"token_ids\",\n          \"seller_address\",\n          \"buyer_address\",\n          \"token_address\",\n          \"marketplace_address\",\n          \"price\",\n          \"block_timestamp\",\n          \"block_number\",\n          \"block_hash\"\n        ],\n        \"properties\": {\n          \"transaction_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction hash\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"transaction_index\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction index\"\n          },\n          \"token_ids\": {\n            \"type\": \"array\",\n            \"description\": \"The token id(s) traded\",\n            \"example\": [\"15\", \"54\"]\n          },\n          \"seller_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address that sold the NFT\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"buyer_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address that bought the NFT\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"marketplace_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the contract that traded the NFT\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"price\": {\n            \"type\": \"string\",\n            \"description\": \"The value that was sent in the transaction (ETH/BNB/etc..)\",\n            \"example\": \"1000000000000000\"\n          },\n          \"block_timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The block timestamp\",\n            \"example\": \"2021-06-04T16:00:15\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The blocknumber of the transaction\",\n            \"example\": \"13680123\"\n          },\n          \"block_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The block hash\",\n            \"example\": \"0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96\"\n          }\n        }\n      },\n      \"tradeCollection\": {\n        \"properties\": {\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of matches for this query\",\n            \"example\": \"2000\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"The page of the current result\",\n            \"example\": \"2\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of results per page\",\n            \"example\": \"100\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/trade\" }\n          }\n        }\n      },\n      \"chainList\": {\n        \"type\": \"string\",\n        \"example\": \"eth\",\n        \"default\": \"eth\",\n        \"enum\": [\n          \"eth\",\n          \"ropsten\",\n          \"rinkeby\",\n          \"goerli\",\n          \"kovan\",\n          \"polygon\",\n          \"mumbai\",\n          \"bsc\",\n          \"bsc testnet\",\n          \"avalanche\",\n          \"avalanche testnet\",\n          \"fantom\",\n          \"cronos\",\n          \"cronos testnet\"\n        ]\n      },\n      \"nft\": {\n        \"required\": [\n          \"token_address\",\n          \"token_id\",\n          \"contract_type\",\n          \"name\",\n          \"symbol\"\n        ],\n        \"properties\": {\n          \"token_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the contract of the NFT\",\n            \"example\": \"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB\"\n          },\n          \"token_id\": {\n            \"type\": \"string\",\n            \"description\": \"The token id of the NFT\",\n            \"example\": \"15\"\n          },\n          \"owner_of\": {\n            \"type\": \"string\",\n            \"description\": \"The owner wallet address of the NFT\",\n            \"example\": \"0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b\"\n          },\n          \"token_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The token hash\",\n            \"example\": \"502cee781b0fb40ea02508b21d319ced\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The block number when the amount or owner changed\",\n            \"example\": \"88256\"\n          },\n          \"block_number_minted\": {\n            \"type\": \"string\",\n            \"description\": \"The block number when the NFT was minted\",\n            \"example\": \"88256\"\n          },\n          \"contract_type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of NFT contract standard\",\n            \"example\": \"ERC721\"\n          },\n          \"token_uri\": {\n            \"type\": \"string\",\n            \"description\": \"The uri to the metadata of the token\"\n          },\n          \"metadata\": {\n            \"type\": \"string\",\n            \"description\": \"The metadata of the token\"\n          },\n          \"last_token_uri_sync\": {\n            \"type\": \"string\",\n            \"description\": \"When the token_uri was last updated\"\n          },\n          \"last_metadata_sync\": {\n            \"type\": \"string\",\n            \"description\": \"When the metadata was last updated\"\n          },\n          \"amount\": {\n            \"type\": \"string\",\n            \"description\": \"The number of this item the user owns (used by ERC1155)\",\n            \"example\": \"1\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the Token contract\",\n            \"example\": \"CryptoKitties\"\n          },\n          \"symbol\": {\n            \"type\": \"string\",\n            \"description\": \"The symbol of the NFT contract\",\n            \"example\": \"RARI\"\n          }\n        }\n      },\n      \"nftMetadata\": {\n        \"required\": [\n          \"token_address\",\n          \"token_id\",\n          \"token_address\",\n          \"token_uri\",\n          \"metadata\",\n          \"is_valid\",\n          \"syncing\",\n          \"frozen\",\n          \"resyncing\",\n          \"last_token_uri_sync\",\n          \"last_metadata_sync\",\n          \"contract_type\",\n          \"token_hash\",\n          \"batch_id\",\n          \"metadata_name\",\n          \"metadata_description\",\n          \"metadata_attributes\",\n          \"block_number_minted\",\n          \"minter_address\",\n          \"transaction_minted\",\n          \"createdAt\",\n          \"updatedAt\"\n        ],\n        \"properties\": {\n          \"token_id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The token id of the NFT\",\n            \"example\": \"889\"\n          },\n          \"token_address\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The address of the contract of the NFT\",\n            \"example\": \"0x8ce66ff0865570d1ff0bb0098fa41b4dc61e02e6\"\n          },\n          \"token_uri\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The uri to the metadata of the token\",\n            \"example\": \"https://ipfs.moralis.io:2053/ipfs/QmZZbo8u8zEWg7wtmZhJS2W718WL6FA95T4XdgmCcLp1SJ/889.json\"\n          },\n          \"metadata\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The metadata of the token\",\n            \"example\": \"{\\\"name\\\":\\\"Bape #889\\\",\\\"description\\\":\\\"The #1 metavestor clan (NFT/DAO) by a team with multi billion dollar company experience.\\\",\\\"image\\\":\\\"https://bapesclan.mypinata.cloud/ipfs/QmTSUD5JA6qHaC5t25mcXySfz19AV9u4Mb6Na7ntQ6tEwf/889.jpg\\\",\\\"attributes\\\":[{\\\"trait_type\\\":\\\"Background\\\",\\\"value\\\":\\\"Black\\\"},{\\\"trait_type\\\":\\\"Body\\\",\\\"value\\\":\\\"Man\\\"},{\\\"trait_type\\\":\\\"Dress\\\",\\\"value\\\":\\\"Suit Tie Blue\\\"},{\\\"trait_type\\\":\\\"Face\\\",\\\"value\\\":\\\"Pipe\\\"},{\\\"trait_type\\\":\\\"Eye\\\",\\\"value\\\":\\\"Eye\\\"}]}\"\n          },\n          \"is_valid\": { \"type\": \"number\", \"readOnly\": true, \"example\": \"1\" },\n          \"syncing\": { \"type\": \"number\", \"readOnly\": true, \"example\": \"2\" },\n          \"frozen\": { \"type\": \"number\", \"readOnly\": true, \"example\": \"0\" },\n          \"resyncing\": { \"type\": \"number\", \"readOnly\": true, \"example\": \"0\" },\n          \"contract_type\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The type of NFT contract standard\",\n            \"example\": \"ERC721\"\n          },\n          \"token_hash\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"fffa3102469ce77f569893d16d5884f9\"\n          },\n          \"batch_id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"fd995c8a-f8b2-40cb-a407-f43e552638b4\"\n          },\n          \"metadata_name\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"Bape #889\"\n          },\n          \"metadata_description\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"The #1 metavestor clan (NFT/DAO) by a team with multi billion dollar company experience.\"\n          },\n          \"metadata_attributes\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"[{\\\"trait_type\\\":\\\"Background\\\",\\\"value\\\":\\\"Black\\\"},{\\\"trait_type\\\":\\\"Body\\\",\\\"value\\\":\\\"Man\\\"},{\\\"trait_type\\\":\\\"Dress\\\",\\\"value\\\":\\\"Suit Tie Blue\\\"},{\\\"trait_type\\\":\\\"Face\\\",\\\"value\\\":\\\"Pipe\\\"},{\\\"trait_type\\\":\\\"Eye\\\",\\\"value\\\":\\\"Eye\\\"}]\"\n          },\n          \"block_number_minted\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"14265936\"\n          },\n          \"opensea_lookup\": {\n            \"type\": \"object\",\n            \"readOnly\": true,\n            \"example\": null\n          },\n          \"minter_address\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"0xdcf086e3f7954b38180daae1405569da86588bfe\"\n          },\n          \"transaction_minted\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"0x2c8d7ec7a8439b0f67b50e93be63242de52e9b5cdfc7dc0aee80c6a2f104c41a\"\n          },\n          \"frozen_log_index\": {\n            \"type\": \"object\",\n            \"readOnly\": true,\n            \"example\": null\n          },\n          \"imported\": { \"type\": \"object\", \"readOnly\": true, \"example\": null },\n          \"last_token_uri_sync\": {\n            \"type\": \"string\",\n            \"description\": \"When the token_uri was last updated\",\n            \"example\": \"2021-02-24T00:47:26.647Z\"\n          },\n          \"last_metadata_sync\": {\n            \"type\": \"string\",\n            \"description\": \"When the metadata was last updated\",\n            \"example\": \"2021-02-24T00:47:26.647Z\"\n          },\n          \"createdAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"2022-02-24T00:47:26.647Z\"\n          },\n          \"updatedAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"2022-04-09T23:56:44.807Z\"\n          }\n        }\n      },\n      \"nftCollection\": {\n        \"properties\": {\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of matches for this query\",\n            \"example\": \"2000\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"The page of the current result\",\n            \"example\": \"2\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of results per page\",\n            \"example\": \"100\"\n          },\n          \"cursor\": {\n            \"type\": \"string\",\n            \"description\": \"The cursor to get to the next page\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/nft\" }\n          }\n        }\n      },\n      \"nftMetadataCollection\": {\n        \"properties\": {\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of matches for this query\",\n            \"example\": \"2000\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"The page of the current result\",\n            \"example\": \"2\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of results per page\",\n            \"example\": \"100\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/nftMetadata\" }\n          }\n        }\n      },\n      \"nftOwner\": {\n        \"required\": [\n          \"token_address\",\n          \"token_id\",\n          \"contract_type\",\n          \"name\",\n          \"block_number\",\n          \"block_number_minted\",\n          \"owner_of\",\n          \"symbol\",\n          \"token_hash\",\n          \"last_token_uri_sync\",\n          \"last_metadata_sync\"\n        ],\n        \"properties\": {\n          \"token_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the contract of the NFT\",\n            \"example\": \"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB\"\n          },\n          \"token_id\": {\n            \"type\": \"string\",\n            \"description\": \"The token id of the NFT\",\n            \"example\": \"15\"\n          },\n          \"contract_type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of NFT contract standard\",\n            \"example\": \"ERC721\"\n          },\n          \"owner_of\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the owner of the NFT\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The blocknumber when the amount or owner changed\",\n            \"example\": \"88256\"\n          },\n          \"block_number_minted\": {\n            \"type\": \"string\",\n            \"description\": \"The blocknumber when the NFT was minted\",\n            \"example\": \"88256\"\n          },\n          \"token_uri\": {\n            \"type\": \"string\",\n            \"description\": \"The uri to the metadata of the token\"\n          },\n          \"metadata\": {\n            \"type\": \"string\",\n            \"description\": \"The metadata of the token\"\n          },\n          \"amount\": {\n            \"type\": \"string\",\n            \"description\": \"The number of this item the user owns (used by ERC1155)\",\n            \"example\": \"1\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the Token contract\",\n            \"example\": \"CryptoKitties\"\n          },\n          \"symbol\": {\n            \"type\": \"string\",\n            \"description\": \"The symbol of the NFT contract\",\n            \"example\": \"RARI\"\n          },\n          \"token_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The token hash\",\n            \"example\": \"502cee781b0fb40ea02508b21d319ced\"\n          },\n          \"last_token_uri_sync\": {\n            \"type\": \"string\",\n            \"description\": \"When the token_uri was last updated\",\n            \"example\": \"2021-02-24T00:47:26.647Z\"\n          },\n          \"last_metadata_sync\": {\n            \"type\": \"string\",\n            \"description\": \"When the metadata was last updated\",\n            \"example\": \"2021-02-24T00:47:26.647Z\"\n          }\n        }\n      },\n      \"nftOwnerCollection\": {\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The syncing status of the address [SYNCING/SYNCED]\",\n            \"example\": \"SYNCING\"\n          },\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of matches for this query\",\n            \"example\": \"2000\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"The page of the current result\",\n            \"example\": \"2\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of results per page\",\n            \"example\": \"100\"\n          },\n          \"cursor\": {\n            \"type\": \"string\",\n            \"description\": \"The cursor to get to the next page\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/nftOwner\" }\n          }\n        }\n      },\n      \"nftTransfer\": {\n        \"required\": [\n          \"token_address\",\n          \"token_id\",\n          \"transaction_hash\",\n          \"to_address\",\n          \"log_index\",\n          \"contract_type\",\n          \"block_timestamp\",\n          \"block_number\",\n          \"block_hash\"\n        ],\n        \"properties\": {\n          \"token_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the contract of the NFT\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"token_id\": {\n            \"type\": \"string\",\n            \"description\": \"The token id of the NFT\",\n            \"example\": \"15\"\n          },\n          \"from_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address that sent the NFT\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"to_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address that recieved the NFT\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The value that was sent in the transaction (ETH/BNB/etc..)\",\n            \"example\": \"1000000000000000\"\n          },\n          \"amount\": {\n            \"type\": \"string\",\n            \"description\": \"The number of tokens transferred\",\n            \"example\": \"1\"\n          },\n          \"contract_type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of NFT contract standard\",\n            \"example\": \"ERC721\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The blocknumber of the transaction\",\n            \"example\": \"88256\"\n          },\n          \"block_timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The block timestamp\",\n            \"example\": \"2021-06-04T16:00:15\"\n          },\n          \"block_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The block hash of the transaction\"\n          },\n          \"transaction_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction hash\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"transaction_type\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction type\"\n          },\n          \"transaction_index\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction index\"\n          },\n          \"log_index\": { \"type\": \"integer\", \"description\": \"The log index\" },\n          \"operator\": {\n            \"type\": \"string\",\n            \"description\": \"The operator present only for ERC1155 Transfers\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          }\n        }\n      },\n      \"nftTransferCollection\": {\n        \"required\": [\"total\", \"page\", \"page_size\", \"cursor\", \"result\"],\n        \"properties\": {\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of matches for this query\",\n            \"example\": \"2000\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"The page of the current result\",\n            \"example\": \"2\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of results per page\",\n            \"example\": \"100\"\n          },\n          \"cursor\": {\n            \"type\": \"string\",\n            \"description\": \"The cursor to get to the next page\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/nftTransfer\" }\n          },\n          \"block_exists\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicator if the block exists\",\n            \"example\": true\n          },\n          \"index_complete\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicator if the block is fully indexed\",\n            \"example\": true\n          }\n        }\n      },\n      \"nftContractMetadata\": {\n        \"required\": [\"token_address\", \"contract_type\", \"name\", \"symbol\"],\n        \"properties\": {\n          \"token_address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the token contract\",\n            \"example\": \"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the token Contract\",\n            \"example\": \"KryptoKitties\"\n          },\n          \"synced_at\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp of when the contract was last synced with the node\"\n          },\n          \"symbol\": {\n            \"type\": \"string\",\n            \"description\": \"The symbol of the NFT contract\",\n            \"example\": \"RARI\"\n          },\n          \"contract_type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of NFT contract\",\n            \"example\": \"ERC721\"\n          }\n        }\n      },\n      \"erc20Transaction\": {\n        \"required\": [\n          \"transaction_hash\",\n          \"address\",\n          \"block_timestamp\",\n          \"block_number\",\n          \"block_hash\",\n          \"to_address\",\n          \"from_address\",\n          \"value\"\n        ],\n        \"properties\": {\n          \"transaction_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The transaction hash\",\n            \"example\": \"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09\"\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the token\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          },\n          \"block_timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The block timestamp\",\n            \"example\": \"2021-04-02T10:07:54.000Z\"\n          },\n          \"block_number\": {\n            \"type\": \"string\",\n            \"description\": \"The block number\",\n            \"example\": 12526958\n          },\n          \"block_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The block hash\",\n            \"example\": \"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86\"\n          },\n          \"to_address\": {\n            \"type\": \"string\",\n            \"description\": \"The recipient\",\n            \"example\": \"0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044\"\n          },\n          \"from_address\": {\n            \"type\": \"string\",\n            \"description\": \"The sender\",\n            \"example\": \"0xd4a3BebD824189481FC45363602b83C9c7e9cbDf\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The value that was transfered (in wei)\",\n            \"example\": 650000000000000000\n          }\n        }\n      },\n      \"erc20Metadata\": {\n        \"required\": [\"address\", \"name\", \"symbol\", \"decimals\"],\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the token contract\",\n            \"example\": \"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the token Contract\",\n            \"example\": \"Kylin Network\"\n          },\n          \"symbol\": {\n            \"type\": \"string\",\n            \"description\": \"The symbol of the NFT contract\",\n            \"example\": \"KYL\"\n          },\n          \"decimals\": {\n            \"type\": \"string\",\n            \"description\": \"The number of decimals on of the token\",\n            \"example\": \"18\"\n          },\n          \"logo\": {\n            \"type\": \"string\",\n            \"description\": \"The logo of the token\",\n            \"example\": \"https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png\"\n          },\n          \"logo_hash\": {\n            \"type\": \"string\",\n            \"description\": \"The logo hash\",\n            \"example\": \"ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d\"\n          },\n          \"thumbnail\": {\n            \"type\": \"string\",\n            \"description\": \"The thumbnail of the logo\",\n            \"example\": \"https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c_thumb.png\"\n          },\n          \"block_number\": { \"type\": \"string\" },\n          \"validated\": { \"type\": \"string\" }\n        }\n      },\n      \"metadataResync\": {\n        \"required\": [\"status\"],\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"The status of resync request\"\n          }\n        }\n      },\n      \"erc20Price\": {\n        \"required\": [\"usdPrice\", \"symbol\"],\n        \"properties\": {\n          \"nativePrice\": { \"$ref\": \"#/components/schemas/nativeErc20Price\" },\n          \"usdPrice\": {\n            \"type\": \"number\",\n            \"format\": \"double\",\n            \"description\": \"The price in USD for the token\",\n            \"example\": \"19.722370676\"\n          },\n          \"exchangeAddress\": {\n            \"type\": \"string\",\n            \"description\": \"The address of the exchange used to calculate the price\",\n            \"example\": \"0x1f98431c8ad98523631ae4a59f267346ea31f984\"\n          },\n          \"exchangeName\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the exchange used for calculating the price\",\n            \"example\": \"Uniswap v3\"\n          }\n        }\n      },\n      \"nativeErc20Price\": {\n        \"required\": [\"value\", \"decimals\", \"name\", \"symbol\"],\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\",\n            \"description\": \"The native price of the token\",\n            \"example\": \"8409770570506626\"\n          },\n          \"decimals\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of decimals of the token\",\n            \"example\": 18\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The Name of the token\",\n            \"example\": \"Ether\"\n          },\n          \"symbol\": {\n            \"type\": \"string\",\n            \"description\": \"The Symbol of the token\",\n            \"example\": \"ETH\"\n          }\n        }\n      },\n      \"erc20TransactionCollection\": {\n        \"properties\": {\n          \"total\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of matches for this query\",\n            \"example\": \"2000\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"description\": \"The page of the current result\",\n            \"example\": \"2\"\n          },\n          \"page_size\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of results per page\",\n            \"example\": \"100\"\n          },\n          \"result\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/erc20Transaction\" }\n          }\n        }\n      },\n      \"ens\": {\n        \"required\": [\"name\"],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Resolved ENS address\",\n            \"example\": \"Vitalik.eth\"\n          }\n        }\n      },\n      \"resolve\": {\n        \"required\": [\"address\"],\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Resolved domain address\",\n            \"example\": \"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e\"\n          }\n        }\n      },\n      \"reservesCollection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token0\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"address\": {\n                \"type\": \"string\",\n                \"example\": \"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\"\n              },\n              \"name\": { \"type\": \"string\", \"example\": \"HEX\" },\n              \"symbol\": { \"type\": \"string\", \"example\": \"HEX\" },\n              \"decimals\": { \"type\": \"string\", \"example\": 9 },\n              \"logo\": {\n                \"type\": \"string\",\n                \"example\": \"https://cdn.moralis.io/eth/0x2b591e99afe9f32eaa6214f7b7629768c40eeb39.png\"\n              },\n              \"logo_hash\": {\n                \"type\": \"string\",\n                \"example\": \"b3bd1b5512965d7b6aeee903dcc6d28b116d58c788eb41e9c1690baed878beaa\"\n              },\n              \"thumbnail\": {\n                \"type\": \"string\",\n                \"example\": \"https://cdn.moralis.io/eth/0x2b591e99afe9f32eaa6214f7b7629768c40eeb39_thumb.png\"\n              },\n              \"block_number\": { \"type\": \"string\", \"example\": 14836562 },\n              \"validated\": { \"type\": \"number\", \"example\": 0 },\n              \"created_at\": {\n                \"type\": \"string\",\n                \"example\": \"2022-01-20T09:39:55.818Z\"\n              }\n            }\n          },\n          \"token1\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"address\": {\n                \"type\": \"string\",\n                \"example\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\"\n              },\n              \"name\": { \"type\": \"string\", \"example\": \"Tether USD\" },\n              \"symbol\": { \"type\": \"string\", \"example\": \"USDT\" },\n              \"decimals\": { \"type\": \"string\", \"example\": 6 },\n              \"logo\": {\n                \"type\": \"string\",\n                \"example\": \"https://cdn.moralis.io/eth/0xdac17f958d2ee523a2206206994597c13d831ec7.png\"\n              },\n              \"logo_hash\": {\n                \"type\": \"string\",\n                \"example\": \"ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d\"\n              },\n              \"thumbnail\": {\n                \"type\": \"string\",\n                \"example\": \"https://cdn.moralis.io/eth/0xdac17f958d2ee523a2206206994597c13d831ec7_thumb.png\"\n              },\n              \"block_number\": { \"type\": \"string\", \"example\": \"4638568\" },\n              \"validated\": { \"type\": \"number\", \"example\": 1 },\n              \"created_at\": {\n                \"type\": \"string\",\n                \"example\": \"2022-01-20T09:39:55.818Z\"\n              }\n            }\n          },\n          \"pairAddress\": {\n            \"type\": \"string\",\n            \"example\": \"0xbbb9bf440d0f686487925fef3b0a0f9aa67753f6\"\n          }\n        }\n      },\n      \"ipfsFileRequest\": {\n        \"required\": [\"path\", \"content\"],\n        \"properties\": {\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"Path to file\",\n            \"example\": \"moralis/logo.jpg\"\n          },\n          \"content\": {\n            \"type\": \"string\",\n            \"description\": \"base64 or JSON\",\n            \"example\": \"iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAApgAAAKYB3X3\"\n          }\n        }\n      },\n      \"ipfsFile\": {\n        \"required\": [\"path\"],\n        \"properties\": {\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"Path to file\",\n            \"example\": \"https://ipfs.moralis.io/QmPQ3YJ3hgfsBzJ1U4MGyV2C1GhDy6MWCENr1qMdMpKVnY/moralis/logo.jpg\"\n          }\n        }\n      },\n      \"web3version\": {\n        \"required\": [\"version\"],\n        \"properties\": {\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"version of the api\",\n            \"example\": \"1.0.0\"\n          }\n        }\n      },\n      \"endpointWeights\": {\n        \"required\": [\"endpoint\", \"path\", \"price\", \"rateLimitWeight\"],\n        \"properties\": {\n          \"endpoint\": {\n            \"type\": \"string\",\n            \"description\": \"endpoint\",\n            \"example\": \"endpointWeights\"\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"The path to the endpoint\",\n            \"example\": \"/info/endpointWeights\"\n          },\n          \"rateLimitWeight\": {\n            \"type\": \"string\",\n            \"description\": \"The number of hits the requests counts for ratelimiting\",\n            \"example\": 1\n          },\n          \"price\": {\n            \"type\": \"string\",\n            \"description\": \"The number of hits the requests counts for billing\",\n            \"example\": 0\n          }\n        }\n      }\n    }\n  },\n  \"security\": [{ \"ApiKeyAuth\": [] }],\n  \"servers\": [{ \"url\": \"https://deep-index.moralis.io/api/v2\" }],\n  \"tags\": []\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@620e6a46cfbb85d0071c8f5fe9e877eb1b0574fb/-/blob/schemas/openapi3/moralis-2.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/620e6a46cfbb85d0071c8f5fe9e877eb1b0574fb/schemas/openapi3/moralis-2.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/nft/{address}\": get: operation \"getAllTokenIds\": parameters: at schemas/openapi3/moralis-2.json:1747:11: duplicate parameter: \"cursor\" in \"query\""
}