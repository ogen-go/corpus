{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ethereum/kzg-ceremony-specs"
		},
		"file": {
			"name": "sequencerApi.yml",
			"size": 0,
			"path": "apiSpec/sequencerApi.yml",
			"byteSize": 9476,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: Trusted Setup MPC for KZG\n  description: |\n    Trusted Setup participant API.  This is a draft specification. It is subject to change without notice.\n  license:\n    name: CC0\n    url: http://creativecommons.org/publicdomain/zero/1.0/\n  version: 1.0.0\nservers:\n- url: https://us-central1-trustedsetuptest.cloudfunctions.net\ntags:\n  - name: Ceremony\n    description: Ceremony progress and status\n  - name: Queue\n    description: Queue management\n  - name: Contribution\n    description: Contribution phase\n  - name: Login\n    description: Authenticates a user and starts a session\npaths:\n  /ceremony/status:\n    get:\n      tags:\n      - Ceremony\n      summary: Request a summary of the ceremony status\n      responses:\n        400:\n          description: Invalid Order\n          content:\n            application/json:\n              schema:\n                type: object\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CeremonyStatus'\n      security:\n      - authWithEth: []\n  /queue/leave:\n    post:\n      tags:\n      - Queue\n      summary: Request to leave the queue\n      description: |\n        Requests that the participant's queue position is given up. Only valid for participants who have previously joiined the queue.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Participant'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n  /contribution/complete:\n    post:\n      tags:\n      - Contribution\n      summary: Returns a completed contribution\n      description: Advises that the computation has completed and returns the updated\n        transcript\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Contribution'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: string\n  /contribution/abort:\n    post:\n      tags:\n      - Contribution \n      summary: | \n        Indicates an error while contributing. Clients must use this endpoint \n        in the event of an unrecoverable error after\n        contribution has started.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Participant'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContributionStatus'\n  /contribution/start:\n    post:\n      tags:\n      - Contribution\n      summary: Request prior transcript and start contribution\n      description: Advises the participant's readiness to begin the computation. The\n        server will verify the participant's eligibility to start, and, if eligible,\n        return the last valid transcript.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Participant'\n      responses:\n        404:\n          description: ID not found\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Invalid ID supplied\n          content:\n            application/json:\n              schema:\n                type: object\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Participant'\n  /queue/checkin:\n    post:\n      tags:\n      - Queue\n      summary: Check-in and request queue status\n      description: Check-in with the sequencer, thus confirming the client's liveness.\n        Response will include next check-in time, and a notification to start the\n        contribution phase, if the participant is at the head of the queue.\n      requestBody:\n        description: Check in and request my queue status\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParticipantQueueStatus'\n        required: true\n      responses:\n        400:\n          description: Invalid\n          content:\n            application/json:\n              schema:\n                type: object\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n  /queue/join:\n    post:\n      tags:\n      - Queue\n      summary: Join a ceremony\n      description: Request to join the queue for a ceremony\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Participant'\n      responses:\n        400:\n          description: Invalid status value\n          content:\n            application/json:\n              schema:\n                type: object\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ParticipantQueueStatus'\n  /login:\n    post:\n      tags:\n      - Login\n      summary: Login to begin participation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthRequest'\n      responses:\n        403:\n          description: Invalid HTTP method\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: |\n            Eth address doesn't match message signer, or account nonce is too low\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Invalid request. Missing parameters\n          content:\n            application/json:\n              schema:\n                type: object\n        200:\n          description: Successful login\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\ncomponents:\n  schemas:\n    ApiResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        type:\n          type: string\n        code:\n          type: integer\n          format: int32\n    ContributionResult:\n      required:\n      - id\n      type: object\n      description: |\n        The updated SRS\n      properties:\n        id:\n          type: string\n        contribution:\n          type: object\n    CeremonyStatus:\n      type: object\n      description: Overall ceremony summary metrics\n    Contribution:\n      type: object\n      description: The prior contributor's submission, ready to be updated. Refer\n        to contributionSchema.json for the description of this content.\n    ContributionStatus:\n      required:\n      - id\n      type: object\n      description: |\n        Used to report an error while in the computation phase\n      properties:\n        id:\n          type: string\n        reason:\n          type: string\n    ParticipantQueueStatus:\n      required:\n      - queuePosition\n      - nextCheckinTime\n      - queueStatus\n      - id\n      type: object\n      description: |\n        Status of the participant's queue position, including details of the next expected check-in time\n      properties:\n        queuePosition:\n          type: integer\n          format: int32\n        nextCheckinTime:\n          type: integer\n          format: int32\n        queueStatus:\n          type: string\n          enum:\n          - notQueued\n          - queued\n          - readyToContribute\n          - contributing\n          - expired\n        id:\n          type: string\n    Participant:\n      required:\n      - idType\n      - id\n      type: object\n      properties:\n        idType:\n          type: string\n          enum:\n          - ethAddress\n          - ensName\n          - githubHandle\n        id:\n          type: string\n    AuthResponse:\n      type: object\n      description: |\n        The response to a successful authorisation request is a JWT token. This token must be retained and used in the header for all subsequent requests requiring authentication. If the  authorisation request is unsuccessful, the response will be a brief message. Response codes are a better indication of the status.\n      properties:\n        participant:\n          type: object\n        token:\n          type: string\n    AuthRequest:\n      type: object\n      description: |\n        A JSON object. The sig property must contain a hex representation of a message - 'ZKParty sign-in' - signed with the private key for ethAddress using Ethereum standard signing (i.e. the  message is prefixed by \\x19Ethereum Signed Message ...) The Eth account must have a nonce \u003e= 3 on mainnet.\n      properties:\n        sig:\n          type: string\n        ethAddress:\n          type: string\n  securitySchemes:\n    authWithGithub:\n      type: apiKey\n      name: API_KEY\n      in: header\n    authWithEth:\n      type: oauth2\n      description: Firebase OAuth\n      flows:\n        clientCredentials:\n          authorizationUrl: https://us-central1-trustedsetuptest.cloudfunctions.net/Auth-Auth\n...\n",
			"canonicalURL": "/github.com/ethereum/kzg-ceremony-specs@b769df47ac5d91152d89614dbb9e960b9e418488/-/blob/apiSpec/sequencerApi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ethereum/kzg-ceremony-specs/blob/b769df47ac5d91152d89614dbb9e960b9e418488/apiSpec/sequencerApi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/ceremony/status\": get: security: parse security scheme \"authWithEth\": oauth2: flow \"clientCredentials\": at 1:2383: \"tokenUrl\" MUST be in the form of a URL: parse \"\": empty url"
}