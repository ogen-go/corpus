{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/ballerina-lang"
		},
		"file": {
			"name": "petstore_expected2Linux.yaml",
			"size": 0,
			"path": "language-server/modules/langserver-core/src/test/resources/command/source/openApi/ballerinaToOpenApi/src/module-giga/resources/petstore_expected2Linux.yaml",
			"byteSize": 2927,
			"content": "openapi: 3.0.0\ninfo:\n  title: OpenApi Petstore\n  license:\n    name: MIT\n  version: 1.0.0\nservers:\n- url: http://petstore.{host}.io/v1\n  description: The production API server\n  variables:\n    host:\n      description: this value is assigned by the service provider\n      default: openapi\n- url: https://{subdomain}.swagger.io:{port}/{basePath}\n  description: The production API server\n  variables:\n    subdomain:\n      description: this value is assigned by the service provider\n      default: petstore\n    port:\n      enum:\n      - \"8443\"\n      - \"443\"\n      default: \"443\"\n    basePath:\n      default: v2\nsecurity:\n- petstore_auth:\n  - write:pets\n  - read:pets\n- user_auth:\n  - read:user\ntags:\n- name: pets\n  description: Pets Tag\n- name: list\n  description: List Tag\npaths:\n  /pets:\n    get:\n      tags:\n      - pets\n      - list\n      summary: List all pets\n      description: Show a list of pets in the system\n      operationId: listPets\n      parameters:\n      - name: limit\n        in: query\n        description: How many items to return at one time (max 100)\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        200:\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              style: simple\n              explode: false\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      operationId: operation1_resource post pets\n      responses:\n        200:\n          description: Successful\n          content:\n            application/json:\n              example: Ok\n  /action:\n    x-MULTI:\n      operationId: getAction\n      responses:\n        200:\n          description: Successful\n          examples:\n            application/json: Ok\n      x-METHODS:\n      - HEAD\n      - OPTIONS\n      - PATCH\n      - DELETE\n      - POST\n      - PUT\n      - GET\ncomponents:\n  schemas:\n    Pet:\n      required:\n      - id\n      - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n        type:\n          type: string\n    Dog:\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n      - type: object\n        properties:\n          bark:\n            type: boolean\n    Pets:\n      type: array\n      items:\n        $ref: '#/components/schemas/Pet'\n    Error:\n      required:\n      - code\n      - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /pets: get: operation \"listPets\": security: unknown security schema \"petstore_auth\""
}