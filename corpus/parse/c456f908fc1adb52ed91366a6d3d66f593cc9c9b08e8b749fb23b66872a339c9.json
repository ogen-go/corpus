{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Konosh93/open-ts"
		},
		"file": {
			"name": "pet.yaml",
			"size": 0,
			"path": "test-files/pet.yaml",
			"byteSize": 9836,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: apiteam@swagger.io\n    url: http://swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://petstore.swagger.io/api\npaths:\n  /pets:\n    get:\n      description: |\n        Returns all pets from the system that the user has access to\n      operationId: findPets\n      parameters:\n        - name: tags\n          in: query\n          description: tags to filter by\n          required: false\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: limit\n          in: query\n          description: maximum number of results to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: '#/components/responses/PetListResponseBody'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      description: Creates a new pet in the store. Duplicates are allowed\n      operationId: addPet\n      requestBody:\n        $ref: '#/components/requestBodies/PostAddPet'\n      responses:\n        '200':\n          $ref: \"#/components/responses/PetResponseBody\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /customers/:\n    get:\n      description: Get Customer  \n      operationId: getCustomer\n      parameters:\n        - name: tags\n          in: query\n          description: tags to filter by\n          required: false\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: limit\n          in: query\n          description: maximum number of results to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: '#/components/responses/GetCustomerResponseBody'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      description: Creates a new Customer in the store.\n      operationId: postCustomer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Customer'\n      responses:\n        '200':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Customer'\n                nullable: true\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\n  /pets/{id}:\n    get:\n      description: Returns a user based on a single ID, if the user does not have access to the pet\n      operationId: find pet by id\n      parameters:\n        - name: id\n          in: path\n          description: ID of pet to fetch\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: lang\n          in: query\n          description: Language\n          required: true\n          schema:\n            type: string\n            format: int64\n      responses:\n        '200':\n          $ref: '#/components/responses/PetResponseBody'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      description: Returns a user based on a single ID, if the user does not have access to the pet\n      operationId: Update by id\n      parameters:\n        - name: id\n          in: path\n          description: ID of pet to fetch\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: lang\n          in: query\n          description: Language\n          required: true\n          schema:\n            type: string\n            format: int64\n        - name: color\n          in: query\n          description: Color\n          required: false\n          schema:\n            type: string\n            format: int64\n        - name: tags\n          in: query\n          description: Tags List\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/PetResponseBody'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      description: deletes a single pet based on the ID supplied\n      operationId: deletePet\n      parameters:\n        - name: id\n          in: path\n          description: ID of pet to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '204':\n          description: pet deleted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /file_join:\n    post:\n      description: File join test\n      operationId: post file join\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/fileJoin.yml#/NewFile'\n      responses:\n        '204':\n          description: file posted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    Pet:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: integer\n          format: int64\n\n    NewPet:\n      type: object\n      required:\n        - name  \n      properties:\n        name:\n          type: string\n        tag:\n          type: string \n        color:\n          type: string\n        inlineObject:\n          type: object\n          properties:\n            food:\n              type: string\n    Customer:\n      type: object\n      required:\n        - name  \n      properties:\n        name:\n          type: string\n          nullable: true\n        birthday:\n          type: string\n          format: date\n          nullable: true\n        email:\n          type: string \n          minLength: 5\n          format: email\n        color:\n          type: string\n        age:\n          type: integer\n          minimum: 18\n          maximum: 65\n          description: The Age of the owner is needed here.\n        pickupHour:\n          type: integer\n          minimum: 0\n          maximum: 0\n          description: The Age of the owner is needed here.\n        verified:\n          type: boolean\n        createdAt:\n          type: string\n          format: date-time\n        tags:\n          type: array\n          items: \n            type: string\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    NumberEnum:\n      type: number\n      enum:\n        - 1\n        - 2\n    StringEnum:\n      type: string\n      enum:\n        - a\n        - b\n    PetExternalEnum:\n      $ref: './schemas/fileJoin.yml#/ExternalEnum'\n  requestBodies:\n    PostAddPet:\n      description: Pet to add to the store\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - petName\n              - petNumberType\n            properties:\n              petName:\n                type:\n                  string\n                minLength: 4\n                maxLength: 10\n                pattern: '[a-zA-Z0-9]'\n              petData:\n                $ref: '#/components/schemas/NewPet'\n              petDataList:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NewPet'\n              inlineObject:\n                type: object\n                properties:\n                  food:\n                    type: string\n              petNumberType:\n                $ref: '#/components/schemas/NumberEnum'\n                nullable: true\n              petStringType:\n                $ref: '#/components/schemas/StringEnum'\n              petExternalEnum:\n                $ref: '#/components/schemas/PetExternalEnum'\n              petListEnum:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StringEnum'\n              petDirectEnum:\n                type: string\n                enum:\n                  - x\n                  - y\n                  - z\n  responses:\n    PetResponseBody:\n      description: pet response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Pet'\n    PetListResponseBody:\n      description: pet response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Pet'\n    GetCustomerResponseBody:\n      description: pet response\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/Customer'\n            nullable: true\n",
			"canonicalURL": "/github.com/Konosh93/open-ts@9f6fb51d3aea866128d711dc120b9b55999b984f/-/blob/test-files/pet.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Konosh93/open-ts/blob/9f6fb51d3aea866128d711dc120b9b55999b984f/test-files/pet.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"PetExternalEnum\": parse schema: at 1:2440: external \"./schemas/fileJoin.yml\": get: file: local file reference is not allowed"
}