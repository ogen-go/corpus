{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/acacode/swagger-typescript-api"
		},
		"file": {
			"name": "schema.json",
			"size": 0,
			"path": "tests/spec/enumNamesAsValues/schema.json",
			"byteSize": 14707,
			"content": "{\n  \"components\": {\n    \"examples\": {},\n    \"headers\": {},\n    \"parameters\": {},\n    \"requestBodies\": {},\n    \"responses\": {},\n    \"schemas\": {\n      \"TestAllOfDc\": {\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FooBarBaz\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/FooBar\"\n          }\n        ],\n        \"properties\": {\n          \"prop\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TestAllOfDc2\": {\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FooBarBaz\"\n          }\n        ],\n        \"properties\": {\n          \"prop\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TestAnyOfDc\": {\n        \"type\": \"object\",\n        \"anyOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FooBarBaz\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/FooBar\"\n          }\n        ],\n        \"properties\": {\n          \"prop\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TestOneOfDc\": {\n        \"type\": \"object\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/FooBarBaz\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/FooBar\"\n          }\n        ],\n        \"properties\": {\n          \"prop\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"IntEnumWithNames\": {\n        \"enum\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n        \"type\": \"integer\",\n        \"description\": \"FooBar\",\n        \"format\": \"int32\",\n        \"x-enumNames\": [\n          \"Unknown\",\n          \"String\",\n          \"Int32\",\n          \"Int64\",\n          \"Double\",\n          \"DateTime\",\n          \"Test2\",\n          \"Test23\",\n          \"Tess44\",\n          \"BooFar\"\n        ]\n      },\n      \"PetIds\": {\n        \"type\": \"integer\",\n        \"enum\": [10, 20, 30, 40]\n      },\n      \"PetIdsWithWrongEnum\": {\n        \"enum\": [10, 20, 30, 40]\n      },\n      \"FooBarBaz\": {\n        \"description\": \"Information about job\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"kind\": { \"$ref\": \"#/components/schemas/JobKind\" },\n          \"name\": { \"type\": \"string\" },\n          \"link\": { \"type\": \"string\" }\n        },\n        \"type\": \"object\"\n      },\n      \"FooBar\": {\n        \"description\": \"Information about job\",\n        \"properties\": {\n          \"kind\": { \"$ref\": \"#/components/schemas/JobKind\" }\n        },\n        \"type\": \"object\"\n      },\n      \"FooBaz\": {\n        \"description\": \"Information about job\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"link\": { \"type\": \"string\" }\n        },\n        \"type\": \"object\"\n      },\n      \"Pick_UserType.Exclude_keyofUserType.id-or-_id__\": {\n        \"properties\": { \"username\": { \"type\": \"string\" }, \"password\": { \"type\": \"string\" } },\n        \"required\": [\"username\", \"password\"],\n        \"type\": \"object\",\n        \"description\": \"From T, pick a set of properties whose keys are in the union K\"\n      },\n      \"Omit_UserType.id-or-_id_\": {\n        \"$ref\": \"#/components/schemas/Pick_UserType.Exclude_keyofUserType.id-or-_id__\"\n      },\n      \"OmitId_UserType_\": { \"$ref\": \"#/components/schemas/Omit_UserType.id-or-_id_\" },\n      \"AuthUserType\": { \"$ref\": \"#/components/schemas/OmitId_UserType_\" },\n      \"JobKind\": { \"enum\": [\"COMPANY\", \"PERSONAL\", \"FREELANCE\", \"OPEN_SOURCE\"], \"type\": \"string\" },\n      \"JobType\": {\n        \"description\": \"Information about job\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"kind\": { \"$ref\": \"#/components/schemas/JobKind\" },\n          \"name\": { \"type\": \"string\" },\n          \"link\": { \"type\": \"string\" },\n          \"github\": {\n            \"type\": \"string\",\n            \"description\": \"Exist only in open source jobs\\nFormat: `${username}/${projectName}`\"\n          },\n          \"npm\": {\n            \"type\": \"string\",\n            \"description\": \"Exist only in open source jobs\\nFormat: `${orgname}/${projectName}`\"\n          },\n          \"isTool\": {\n            \"type\": \"boolean\",\n            \"description\": \"Exist only in open source jobs\\nMeans project is dev. tool (like swagger code generator)\"\n          },\n          \"address\": { \"type\": \"string\", \"description\": \"web site address\" }\n        },\n        \"required\": [\"id\", \"kind\"],\n        \"type\": \"object\",\n        \"additionalProperties\": false\n      },\n      \"Pick_JobType.Exclude_keyofJobType.id-or-_id__\": {\n        \"properties\": {\n          \"kind\": { \"$ref\": \"#/components/schemas/JobKind\" },\n          \"name\": { \"type\": \"string\" },\n          \"link\": { \"type\": \"string\" },\n          \"github\": {\n            \"type\": \"string\",\n            \"description\": \"Exist only in open source jobs\\nFormat: `${username}/${projectName}`\"\n          },\n          \"npm\": {\n            \"type\": \"string\",\n            \"description\": \"Exist only in open source jobs\\nFormat: `${orgname}/${projectName}`\"\n          },\n          \"isTool\": {\n            \"type\": \"boolean\",\n            \"description\": \"Exist only in open source jobs\\nMeans project is dev. tool (like swagger code generator)\"\n          },\n          \"address\": { \"type\": \"string\", \"description\": \"web site address\" }\n        },\n        \"required\": [\"kind\"],\n        \"type\": \"object\",\n        \"description\": \"From T, pick a set of properties whose keys are in the union K\"\n      },\n      \"Omit_JobType.id-or-_id_\": {\n        \"$ref\": \"#/components/schemas/Pick_JobType.Exclude_keyofJobType.id-or-_id__\"\n      },\n      \"OmitId_JobType_\": { \"$ref\": \"#/components/schemas/Omit_JobType.id-or-_id_\" },\n      \"JobUpdateType\": { \"$ref\": \"#/components/schemas/OmitId_JobType_\" },\n      \"Pick_ProjectType.Exclude_keyofProjectType.job__\": {\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"year\": { \"type\": \"number\", \"format\": \"double\" },\n          \"description\": { \"type\": \"string\" },\n          \"notImportant\": { \"type\": \"boolean\" },\n          \"prefix\": { \"type\": \"string\" },\n          \"tags\": { \"items\": { \"type\": \"string\" }, \"type\": \"array\" },\n          \"teamSize\": { \"type\": \"string\" }\n        },\n        \"required\": [\"id\", \"year\", \"description\", \"tags\", \"teamSize\"],\n        \"type\": \"object\",\n        \"description\": \"From T, pick a set of properties whose keys are in the union K\"\n      },\n      \"Omit_ProjectType.job_\": {\n        \"$ref\": \"#/components/schemas/Pick_ProjectType.Exclude_keyofProjectType.job__\"\n      },\n      \"ExtractedProjectType\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/Omit_ProjectType.job_\" },\n          {\n            \"properties\": { \"job\": { \"$ref\": \"#/components/schemas/JobType\" } },\n            \"required\": [\"job\"],\n            \"type\": \"object\"\n          }\n        ]\n      },\n      \"Pick_ProjectType.Exclude_keyofProjectType.id-or-_id__\": {\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"job\": { \"type\": \"string\" },\n          \"year\": { \"type\": \"number\", \"format\": \"double\" },\n          \"description\": { \"type\": \"string\" },\n          \"notImportant\": { \"type\": \"boolean\" },\n          \"prefix\": { \"type\": \"string\" },\n          \"tags\": { \"items\": { \"type\": \"string\" }, \"type\": \"array\" },\n          \"teamSize\": { \"type\": \"string\" }\n        },\n        \"required\": [\"job\", \"year\", \"description\", \"tags\", \"teamSize\"],\n        \"type\": \"object\",\n        \"description\": \"From T, pick a set of properties whose keys are in the union K\"\n      },\n      \"Omit_ProjectType.id-or-_id_\": {\n        \"$ref\": \"#/components/schemas/Pick_ProjectType.Exclude_keyofProjectType.id-or-_id__\"\n      },\n      \"OmitId_ProjectType_\": { \"$ref\": \"#/components/schemas/Omit_ProjectType.id-or-_id_\" },\n      \"ProjectUpdateType\": { \"$ref\": \"#/components/schemas/OmitId_ProjectType_\" },\n      \"ProjectType\": {\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"year\": { \"type\": \"number\", \"format\": \"double\" },\n          \"description\": { \"type\": \"string\" },\n          \"job\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"notImportant\": { \"type\": \"boolean\" },\n          \"prefix\": { \"type\": \"string\" },\n          \"tags\": { \"items\": { \"type\": \"string\" }, \"type\": \"array\" },\n          \"teamSize\": { \"type\": \"string\" }\n        },\n        \"required\": [\"id\", \"year\", \"description\", \"job\", \"tags\", \"teamSize\"],\n        \"type\": \"object\",\n        \"additionalProperties\": false\n      }\n    },\n    \"securitySchemes\": {\n      \"JWT\": { \"description\": \"\", \"type\": \"apiKey\", \"name\": \"Authorization\", \"in\": \"header\" }\n    }\n  },\n  \"info\": { \"title\": \"\" },\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/auth\": {\n      \"post\": {\n        \"operationId\": \"Login\",\n        \"responses\": {\n          \"200\": {\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"string\" } } },\n            \"description\": \"Authorize and returns jwt token\"\n          }\n        },\n        \"tags\": [\"Auth\"],\n        \"security\": [],\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/AuthUserType\" } }\n          }\n        }\n      }\n    },\n    \"/auth/refresh\": {\n      \"post\": {\n        \"operationId\": \"Refresh\",\n        \"responses\": {\n          \"200\": {\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"string\" } } },\n            \"description\": \"utilized current token and returns new token\"\n          }\n        },\n        \"tags\": [\"Auth\"],\n        \"security\": [{ \"jwt\": [] }],\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"Authorization\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ]\n      }\n    },\n    \"/jobs\": {\n      \"get\": {\n        \"operationId\": \"GetJobs\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"items\": { \"$ref\": \"#/components/schemas/JobType\" }, \"type\": \"array\" }\n              }\n            },\n            \"description\": \"jobs found\"\n          }\n        },\n        \"tags\": [\"Jobs\"],\n        \"security\": [{ \"jwt\": [] }],\n        \"parameters\": []\n      },\n      \"post\": {\n        \"operationId\": \"AddJob\",\n        \"responses\": {\n          \"200\": {\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"string\" } } },\n            \"description\": \"Ok\"\n          }\n        },\n        \"tags\": [\"Jobs\"],\n        \"security\": [{ \"jwt\": [] }],\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/JobUpdateType\" } }\n          }\n        }\n      }\n    },\n    \"/jobs/{id}\": {\n      \"get\": {\n        \"operationId\": \"GetJob\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/JobType\" } }\n            },\n            \"description\": \"job found\"\n          },\n          \"404\": { \"content\": { \"application/json\": {} }, \"description\": \"job not found\" }\n        },\n        \"tags\": [\"Jobs\"],\n        \"security\": [{ \"jwt\": [] }],\n        \"parameters\": [\n          { \"in\": \"path\", \"name\": \"id\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"UpdateJob\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/JobType\" } }\n            },\n            \"description\": \"Ok\"\n          }\n        },\n        \"tags\": [\"Jobs\"],\n        \"security\": [{ \"jwt\": [] }],\n        \"parameters\": [\n          { \"in\": \"path\", \"name\": \"id\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/JobUpdateType\" } }\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"DeleteJob\",\n        \"responses\": {\n          \"204\": { \"content\": { \"application/json\": {} }, \"description\": \"No content\" }\n        },\n        \"tags\": [\"Jobs\"],\n        \"security\": [{ \"jwt\": [] }],\n        \"parameters\": [\n          { \"in\": \"path\", \"name\": \"id\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ]\n      }\n    },\n    \"/projects\": {\n      \"get\": {\n        \"operationId\": \"GetProjects\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": { \"$ref\": \"#/components/schemas/ExtractedProjectType\" },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Ok\"\n          }\n        },\n        \"tags\": [\"Projects\"],\n        \"security\": [],\n        \"parameters\": []\n      },\n      \"post\": {\n        \"operationId\": \"AddProjects\",\n        \"responses\": {\n          \"200\": {\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"string\" } } },\n            \"description\": \"Ok\"\n          }\n        },\n        \"tags\": [\"Projects\"],\n        \"security\": [{ \"jwt\": [] }],\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/ProjectUpdateType\" } }\n          }\n        }\n      }\n    },\n    \"/projects/{id}\": {\n      \"patch\": {\n        \"operationId\": \"UpdateProject\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/ProjectType\" } }\n            },\n            \"description\": \"Ok\"\n          }\n        },\n        \"tags\": [\"Projects\"],\n        \"security\": [{ \"jwt\": [] }],\n        \"parameters\": [\n          { \"in\": \"path\", \"name\": \"id\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/ProjectUpdateType\" } }\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"DeleteProject\",\n        \"responses\": {\n          \"204\": { \"content\": { \"application/json\": {} }, \"description\": \"No content\" }\n        },\n        \"tags\": [\"Projects\"],\n        \"security\": [],\n        \"parameters\": [\n          { \"in\": \"path\", \"name\": \"id\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ]\n      }\n    }\n  },\n  \"servers\": [{ \"url\": \"http://localhost:8080/api/v1\" }]\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /jobs: get: operation \"GetJobs\": security: unknown security schema \"jwt\""
}