{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/hasura/dc-api-types"
		},
		"file": {
			"name": "agent.openapi.json",
			"size": 0,
			"path": "src/agent.openapi.json",
			"byteSize": 63863,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"\",\n    \"version\": \"\"\n  },\n  \"paths\": {\n    \"/capabilities\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CapabilitiesResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/schema\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": true,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SchemaResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \" or `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/query\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": true,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json;charset=utf-8\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \" or `body` or `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/explain\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": true,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json;charset=utf-8\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExplainResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"description\": \"Invalid `body` or `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          }\n        }\n      }\n    },\n    \"/mutation\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": true,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json;charset=utf-8\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MutationRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MutationResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \" or `body` or `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/health\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": false,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"description\": \"Invalid `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          }\n        }\n      }\n    },\n    \"/metrics\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain;version=0.0.4;charset=utf-8\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/raw\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": true,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json;charset=utf-8\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RawRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RawResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"description\": \"Invalid `body` or `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"CapabilitiesResponse\": {\n        \"nullable\": false,\n        \"properties\": {\n          \"capabilities\": {\n            \"$ref\": \"#/components/schemas/Capabilities\"\n          },\n          \"config_schemas\": {\n            \"$ref\": \"#/components/schemas/ConfigSchemaResponse\"\n          },\n          \"display_name\": {\n            \"type\": \"string\"\n          },\n          \"release_name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"capabilities\",\n          \"config_schemas\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Capabilities\": {\n        \"properties\": {\n          \"comparisons\": {\n            \"$ref\": \"#/components/schemas/ComparisonCapabilities\"\n          },\n          \"data_schema\": {\n            \"$ref\": \"#/components/schemas/DataSchemaCapabilities\"\n          },\n          \"explain\": {\n            \"$ref\": \"#/components/schemas/ExplainCapabilities\"\n          },\n          \"metrics\": {\n            \"$ref\": \"#/components/schemas/MetricsCapabilities\"\n          },\n          \"mutations\": {\n            \"$ref\": \"#/components/schemas/MutationCapabilities\"\n          },\n          \"queries\": {\n            \"$ref\": \"#/components/schemas/QueryCapabilities\"\n          },\n          \"raw\": {\n            \"$ref\": \"#/components/schemas/RawCapabilities\"\n          },\n          \"relationships\": {\n            \"$ref\": \"#/components/schemas/RelationshipCapabilities\"\n          },\n          \"scalar_types\": {\n            \"$ref\": \"#/components/schemas/ScalarTypesCapabilities\"\n          },\n          \"subscriptions\": {\n            \"$ref\": \"#/components/schemas/SubscriptionCapabilities\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ColumnNullability\": {\n        \"enum\": [\n          \"only_nullable\",\n          \"nullable_and_non_nullable\"\n        ],\n        \"type\": \"string\"\n      },\n      \"DataSchemaCapabilities\": {\n        \"properties\": {\n          \"column_nullability\": {\n            \"$ref\": \"#/components/schemas/ColumnNullability\"\n          },\n          \"supports_foreign_keys\": {\n            \"default\": false,\n            \"description\": \"Whether tables can have foreign keys\",\n            \"type\": \"boolean\"\n          },\n          \"supports_primary_keys\": {\n            \"default\": false,\n            \"description\": \"Whether tables can have primary keys\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryCapabilities\": {},\n      \"InsertCapabilities\": {\n        \"properties\": {\n          \"supports_nested_inserts\": {\n            \"default\": false,\n            \"description\": \"Whether or not nested inserts to related tables are supported\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UpdateCapabilities\": {},\n      \"DeleteCapabilities\": {},\n      \"AtomicitySupportLevel\": {\n        \"description\": \"Describes the level of transactional atomicity the agent supports for mutation operations.\\n'row': If multiple rows are affected in a single operation but one fails, only the failed row's changes will be reverted\\n'single_operation': If multiple rows are affected in a single operation but one fails, all affected rows in the operation will be reverted\\n'homogeneous_operations': If multiple operations of only the same type exist in the one mutation request, a failure in one will result in all changes being reverted\\n'heterogeneous_operations': If multiple operations of any type exist in the one mutation request, a failure in one will result in all changes being reverted\\n\",\n        \"enum\": [\n          \"row\",\n          \"single_operation\",\n          \"homogeneous_operations\",\n          \"heterogeneous_operations\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ReturningCapabilities\": {},\n      \"MutationCapabilities\": {\n        \"properties\": {\n          \"atomicity_support_level\": {\n            \"$ref\": \"#/components/schemas/AtomicitySupportLevel\"\n          },\n          \"delete\": {\n            \"$ref\": \"#/components/schemas/DeleteCapabilities\"\n          },\n          \"insert\": {\n            \"$ref\": \"#/components/schemas/InsertCapabilities\"\n          },\n          \"returning\": {\n            \"$ref\": \"#/components/schemas/ReturningCapabilities\"\n          },\n          \"update\": {\n            \"$ref\": \"#/components/schemas/UpdateCapabilities\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SubscriptionCapabilities\": {},\n      \"ScalarType\": {\n        \"additionalProperties\": true,\n        \"anyOf\": [\n          {\n            \"enum\": [\n              \"string\",\n              \"number\",\n              \"bool\"\n            ],\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"ComparisonOperators\": {\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/ScalarType\"\n        },\n        \"description\": \"A map from comparison operator names to their argument types.\\nOperator and argument type names must be valid GraphQL names.\\nResult type names must be defined scalar types - either built-in or declared in ScalarTypesCapabilities.\\n\",\n        \"type\": \"object\"\n      },\n      \"AggregateFunctions\": {\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/ScalarType\"\n        },\n        \"description\": \"A map from aggregate function names to their result types.\\nFunction and result type names must be valid GraphQL names.\\nResult type names must be defined scalar types - either built-in or declared in ScalarTypesCapabilities.\\n\",\n        \"type\": \"object\"\n      },\n      \"GraphQLType\": {\n        \"enum\": [\n          \"Int\",\n          \"Float\",\n          \"String\",\n          \"Boolean\",\n          \"ID\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ScalarTypeCapabilities\": {\n        \"description\": \"Capabilities of a scalar type.\\ncomparison_operators: The comparison operators supported by the scalar type.\\naggregate_functions: The aggregate functions supported by the scalar type.\\ngraphql_type: Associates the custom scalar type with one of the built-in GraphQL scalar types.  If a `graphql_type` is specified then HGE will use the parser for that built-in type when parsing values of the custom type. If not given then any JSON value will be accepted.\\n\",\n        \"properties\": {\n          \"aggregate_functions\": {\n            \"$ref\": \"#/components/schemas/AggregateFunctions\"\n          },\n          \"comparison_operators\": {\n            \"$ref\": \"#/components/schemas/ComparisonOperators\"\n          },\n          \"graphql_type\": {\n            \"$ref\": \"#/components/schemas/GraphQLType\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ScalarTypesCapabilities\": {\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/ScalarTypeCapabilities\"\n        },\n        \"description\": \"A map from scalar type names to their capabilities.\\nKeys must be valid GraphQL names and must be defined as scalar types in the `graphql_schema`\\n\",\n        \"type\": \"object\"\n      },\n      \"RelationshipCapabilities\": {},\n      \"SubqueryComparisonCapabilities\": {\n        \"nullable\": true,\n        \"properties\": {\n          \"supports_relations\": {\n            \"default\": false,\n            \"description\": \"Does the agent support comparisons that involve related tables (ie. joins)?\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ComparisonCapabilities\": {\n        \"properties\": {\n          \"subquery\": {\n            \"$ref\": \"#/components/schemas/SubqueryComparisonCapabilities\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MetricsCapabilities\": {},\n      \"ExplainCapabilities\": {},\n      \"RawCapabilities\": {},\n      \"ConfigSchemaResponse\": {\n        \"nullable\": false,\n        \"properties\": {\n          \"config_schema\": {\n            \"$ref\": \"#/components/schemas/OpenApiSchema\"\n          },\n          \"other_schemas\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/OpenApiSchema\"\n            },\n            \"nullable\": false,\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"config_schema\",\n          \"other_schemas\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OpenApiSchema\": {\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"additionalProperties\": {\n            \"additionalProperties\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                },\n                {\n                  \"type\": \"boolean\"\n                }\n              ]\n            },\n            \"default\": true\n          },\n          \"allOf\": {\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"anyOf\": {\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"default\": {},\n          \"deprecated\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"discriminator\": {\n            \"$ref\": \"#/components/schemas/OpenApiDiscriminator\"\n          },\n          \"enum\": {\n            \"items\": {},\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"uniqueItems\": false\n          },\n          \"example\": {},\n          \"exclusiveMaximum\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"exclusiveMinimum\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"externalDocs\": {\n            \"$ref\": \"#/components/schemas/OpenApiExternalDocumentation\"\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/OpenApiSchema\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/OpenApiReference\"\n              }\n            ]\n          },\n          \"maxItems\": {\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"maxLength\": {\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"maxProperties\": {\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"maximum\": {\n            \"type\": \"number\"\n          },\n          \"minItems\": {\n            \"default\": 0,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"minLength\": {\n            \"default\": 0,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"minProperties\": {\n            \"default\": 0,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"minimum\": {\n            \"type\": \"number\"\n          },\n          \"multipleOf\": {\n            \"exclusiveMinimum\": true,\n            \"minimum\": 0,\n            \"type\": \"number\"\n          },\n          \"not\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/OpenApiSchema\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/OpenApiReference\"\n              }\n            ]\n          },\n          \"nullable\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"oneOf\": {\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"pattern\": {\n            \"format\": \"regex\",\n            \"type\": \"string\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                }\n              ]\n            },\n            \"type\": \"object\"\n          },\n          \"readOnly\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"required\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"uniqueItems\": true\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"array\",\n              \"boolean\",\n              \"integer\",\n              \"number\",\n              \"object\",\n              \"string\"\n            ],\n            \"type\": \"string\"\n          },\n          \"uniqueItems\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"writeOnly\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"xml\": {\n            \"$ref\": \"#/components/schemas/OpenApiXml\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"OpenApiReference\": {\n        \"properties\": {\n          \"$ref\": {\n            \"format\": \"uri-reference\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"$ref\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OpenApiDiscriminator\": {\n        \"properties\": {\n          \"mapping\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"propertyName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"propertyName\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OpenApiExternalDocumentation\": {\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"format\": \"uri-reference\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"url\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OpenApiXml\": {\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"attribute\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"format\": \"uri\",\n            \"type\": \"string\"\n          },\n          \"prefix\": {\n            \"type\": \"string\"\n          },\n          \"wrapped\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ErrorResponse\": {\n        \"properties\": {\n          \"details\": {\n            \"additionalProperties\": true,\n            \"default\": null,\n            \"description\": \"Error details\"\n          },\n          \"message\": {\n            \"description\": \"Error message\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/ErrorResponseType\"\n          }\n        },\n        \"required\": [\n          \"message\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ErrorResponseType\": {\n        \"enum\": [\n          \"uncaught-error\",\n          \"mutation-constraint-violation\",\n          \"mutation-permission-check-failure\"\n        ],\n        \"type\": \"string\"\n      },\n      \"SchemaResponse\": {\n        \"properties\": {\n          \"tables\": {\n            \"description\": \"Available tables\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableInfo\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"tables\"\n        ],\n        \"type\": \"object\"\n      },\n      \"TableName\": {\n        \"description\": \"The fully qualified name of a table, where the last item in the array is the table name and any earlier items represent the namespacing of the table name\",\n        \"items\": {\n          \"type\": \"string\"\n        },\n        \"type\": \"array\"\n      },\n      \"TableType\": {\n        \"enum\": [\n          \"table\",\n          \"view\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ColumnInfo\": {\n        \"properties\": {\n          \"description\": {\n            \"description\": \"Column description\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"insertable\": {\n            \"default\": false,\n            \"description\": \"Whether or not the column can be inserted into\",\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"description\": \"Column name\",\n            \"type\": \"string\"\n          },\n          \"nullable\": {\n            \"description\": \"Is column nullable\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          },\n          \"updatable\": {\n            \"default\": false,\n            \"description\": \"Whether or not the column can be updated\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"type\",\n          \"nullable\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Constraint\": {\n        \"properties\": {\n          \"column_mapping\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"The columns on which you want want to define the foreign key.\",\n            \"type\": \"object\"\n          },\n          \"foreign_table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          }\n        },\n        \"required\": [\n          \"foreign_table\",\n          \"column_mapping\"\n        ],\n        \"type\": \"object\"\n      },\n      \"TableInfo\": {\n        \"properties\": {\n          \"columns\": {\n            \"description\": \"The columns of the table\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ColumnInfo\"\n            },\n            \"type\": \"array\"\n          },\n          \"deletable\": {\n            \"default\": false,\n            \"description\": \"Whether or not existing rows can be deleted in the table\",\n            \"type\": \"boolean\"\n          },\n          \"description\": {\n            \"description\": \"Description of the table\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"foreign_keys\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Constraint\"\n            },\n            \"default\": {},\n            \"description\": \"Foreign key constraints\",\n            \"type\": \"object\"\n          },\n          \"insertable\": {\n            \"default\": false,\n            \"description\": \"Whether or not new rows can be inserted into the table\",\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          },\n          \"primary_key\": {\n            \"default\": [],\n            \"description\": \"The primary key of the table\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/TableType\"\n          },\n          \"updatable\": {\n            \"default\": false,\n            \"description\": \"Whether or not existing rows can be updated in the table\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"columns\"\n        ],\n        \"type\": \"object\"\n      },\n      \"QueryResponse\": {\n        \"properties\": {\n          \"aggregates\": {\n            \"additionalProperties\": {\n              \"additionalProperties\": true\n            },\n            \"description\": \"The results of the aggregates returned by the query\",\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"rows\": {\n            \"description\": \"The rows returned by the query, corresponding to the query's fields\",\n            \"items\": {\n              \"additionalProperties\": {\n                \"additionalProperties\": true,\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ColumnFieldValue\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/QueryResponse\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/NullColumnFieldValue\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ColumnFieldValue\": {\n        \"additionalProperties\": true\n      },\n      \"NullColumnFieldValue\": {\n        \"type\": \"null\"\n      },\n      \"QueryRequest\": {\n        \"properties\": {\n          \"query\": {\n            \"$ref\": \"#/components/schemas/Query\"\n          },\n          \"table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          },\n          \"table_relationships\": {\n            \"description\": \"The relationships between tables involved in the entire query request\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableRelationships\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"table\",\n          \"table_relationships\",\n          \"query\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RelationshipType\": {\n        \"enum\": [\n          \"object\",\n          \"array\"\n        ],\n        \"type\": \"string\"\n      },\n      \"Relationship\": {\n        \"properties\": {\n          \"column_mapping\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A mapping between columns on the source table to columns on the target table\",\n            \"type\": \"object\"\n          },\n          \"relationship_type\": {\n            \"$ref\": \"#/components/schemas/RelationshipType\"\n          },\n          \"target_table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          }\n        },\n        \"required\": [\n          \"target_table\",\n          \"relationship_type\",\n          \"column_mapping\"\n        ],\n        \"type\": \"object\"\n      },\n      \"TableRelationships\": {\n        \"properties\": {\n          \"relationships\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Relationship\"\n            },\n            \"description\": \"A map of relationships from the source table to target tables. The key of the map is the relationship name\",\n            \"type\": \"object\"\n          },\n          \"source_table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          }\n        },\n        \"required\": [\n          \"source_table\",\n          \"relationships\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Query\": {\n        \"properties\": {\n          \"aggregates\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Aggregate\"\n            },\n            \"description\": \"Aggregate fields of the query\",\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"fields\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            },\n            \"description\": \"Fields of the query\",\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"limit\": {\n            \"description\": \"Optionally limit to N results\",\n            \"maximum\": 9223372036854776000,\n            \"minimum\": -9223372036854776000,\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"offset\": {\n            \"description\": \"Optionally offset from the Nth result\",\n            \"maximum\": 9223372036854776000,\n            \"minimum\": -9223372036854776000,\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"order_by\": {\n            \"$ref\": \"#/components/schemas/OrderBy\"\n          },\n          \"where\": {\n            \"$ref\": \"#/components/schemas/Expression\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RelationshipField\": {\n        \"properties\": {\n          \"query\": {\n            \"$ref\": \"#/components/schemas/Query\"\n          },\n          \"relationship\": {\n            \"description\": \"The name of the relationship to follow for the subquery\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"relationship\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"relationship\",\n          \"query\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ColumnField\": {\n        \"properties\": {\n          \"column\": {\n            \"type\": \"string\"\n          },\n          \"column_type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"column\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"column\",\n          \"column_type\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Field\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"column\": \"ColumnField\",\n            \"relationship\": \"RelationshipField\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/RelationshipField\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ColumnField\"\n          }\n        ]\n      },\n      \"ColumnCountAggregate\": {\n        \"properties\": {\n          \"column\": {\n            \"description\": \"The column to apply the count aggregate function to\",\n            \"type\": \"string\"\n          },\n          \"distinct\": {\n            \"description\": \"Whether or not only distinct items should be counted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"column_count\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"column\",\n          \"distinct\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"SingleColumnAggregateFunction\": {\n        \"description\": \"Single column aggregate function name.\\nA valid GraphQL name\",\n        \"type\": \"string\"\n      },\n      \"SingleColumnAggregate\": {\n        \"properties\": {\n          \"column\": {\n            \"description\": \"The column to apply the aggregation function to\",\n            \"type\": \"string\"\n          },\n          \"function\": {\n            \"$ref\": \"#/components/schemas/SingleColumnAggregateFunction\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"single_column\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"function\",\n          \"column\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"StarCountAggregate\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"star_count\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Aggregate\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"column_count\": \"ColumnCountAggregate\",\n            \"single_column\": \"SingleColumnAggregate\",\n            \"star_count\": \"StarCountAggregate\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ColumnCountAggregate\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/SingleColumnAggregate\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/StarCountAggregate\"\n          }\n        ]\n      },\n      \"UnrelatedTable\": {\n        \"properties\": {\n          \"table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"unrelated\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"table\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RelatedTable\": {\n        \"properties\": {\n          \"relationship\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"related\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"relationship\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ExistsInTable\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"related\": \"RelatedTable\",\n            \"unrelated\": \"UnrelatedTable\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/UnrelatedTable\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/RelatedTable\"\n          }\n        ]\n      },\n      \"Expression\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"and\": \"AndExpression\",\n            \"binary_arr_op\": \"ApplyBinaryArrayComparisonOperator\",\n            \"binary_op\": \"ApplyBinaryComparisonOperator\",\n            \"exists\": \"ExistsExpression\",\n            \"not\": \"NotExpression\",\n            \"or\": \"OrExpression\",\n            \"unary_op\": \"ApplyUnaryComparisonOperator\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ExistsExpression\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ApplyBinaryArrayComparisonOperator\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/OrExpression\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ApplyUnaryComparisonOperator\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ApplyBinaryComparisonOperator\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/NotExpression\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AndExpression\"\n          }\n        ]\n      },\n      \"ExistsExpression\": {\n        \"properties\": {\n          \"in_table\": {\n            \"$ref\": \"#/components/schemas/ExistsInTable\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"exists\"\n            ],\n            \"type\": \"string\"\n          },\n          \"where\": {\n            \"$ref\": \"#/components/schemas/Expression\"\n          }\n        },\n        \"required\": [\n          \"in_table\",\n          \"where\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"BinaryArrayComparisonOperator\": {\n        \"additionalProperties\": true,\n        \"anyOf\": [\n          {\n            \"enum\": [\n              \"in\"\n            ],\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"ComparisonColumn\": {\n        \"properties\": {\n          \"column_type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          },\n          \"name\": {\n            \"description\": \"The name of the column\",\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"default\": [],\n            \"description\": \"The path to the table that contains the specified column. Missing or empty array means the current table. [\\\"$\\\"] means the query table. No other values are supported at this time.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"column_type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ApplyBinaryArrayComparisonOperator\": {\n        \"properties\": {\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ComparisonColumn\"\n          },\n          \"operator\": {\n            \"$ref\": \"#/components/schemas/BinaryArrayComparisonOperator\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"binary_arr_op\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value_type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          },\n          \"values\": {\n            \"items\": {\n              \"additionalProperties\": true\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"operator\",\n          \"column\",\n          \"values\",\n          \"value_type\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrExpression\": {\n        \"properties\": {\n          \"expressions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Expression\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"or\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"expressions\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"UnaryComparisonOperator\": {\n        \"additionalProperties\": true,\n        \"anyOf\": [\n          {\n            \"enum\": [\n              \"is_null\"\n            ],\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"ApplyUnaryComparisonOperator\": {\n        \"properties\": {\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ComparisonColumn\"\n          },\n          \"operator\": {\n            \"$ref\": \"#/components/schemas/UnaryComparisonOperator\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"unary_op\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"operator\",\n          \"column\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"BinaryComparisonOperator\": {\n        \"additionalProperties\": true,\n        \"anyOf\": [\n          {\n            \"enum\": [\n              \"less_than\",\n              \"less_than_or_equal\",\n              \"greater_than\",\n              \"greater_than_or_equal\",\n              \"equal\"\n            ],\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"ScalarValueComparison\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"scalar\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"additionalProperties\": true\n          },\n          \"value_type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          }\n        },\n        \"required\": [\n          \"value\",\n          \"value_type\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"AnotherColumnComparison\": {\n        \"properties\": {\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ComparisonColumn\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"column\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"column\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ComparisonValue\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"column\": \"AnotherColumnComparison\",\n            \"scalar\": \"ScalarValueComparison\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ScalarValueComparison\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AnotherColumnComparison\"\n          }\n        ]\n      },\n      \"ApplyBinaryComparisonOperator\": {\n        \"properties\": {\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ComparisonColumn\"\n          },\n          \"operator\": {\n            \"$ref\": \"#/components/schemas/BinaryComparisonOperator\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"binary_op\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"$ref\": \"#/components/schemas/ComparisonValue\"\n          }\n        },\n        \"required\": [\n          \"operator\",\n          \"column\",\n          \"value\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NotExpression\": {\n        \"properties\": {\n          \"expression\": {\n            \"$ref\": \"#/components/schemas/Expression\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"not\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"expression\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"AndExpression\": {\n        \"properties\": {\n          \"expressions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Expression\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"and\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"expressions\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrderByRelation\": {\n        \"properties\": {\n          \"subrelations\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/OrderByRelation\"\n            },\n            \"description\": \"Further relationships to follow from the relationship's target table. The key of the map is the relationship name.\",\n            \"type\": \"object\"\n          },\n          \"where\": {\n            \"$ref\": \"#/components/schemas/Expression\"\n          }\n        },\n        \"required\": [\n          \"subrelations\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrderByStarCountAggregate\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"star_count_aggregate\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrderBySingleColumnAggregate\": {\n        \"properties\": {\n          \"column\": {\n            \"description\": \"The column to apply the aggregation function to\",\n            \"type\": \"string\"\n          },\n          \"function\": {\n            \"$ref\": \"#/components/schemas/SingleColumnAggregateFunction\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"single_column_aggregate\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"function\",\n          \"column\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrderByColumn\": {\n        \"properties\": {\n          \"column\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"column\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"column\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrderByTarget\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"column\": \"OrderByColumn\",\n            \"single_column_aggregate\": \"OrderBySingleColumnAggregate\",\n            \"star_count_aggregate\": \"OrderByStarCountAggregate\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/OrderByStarCountAggregate\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/OrderBySingleColumnAggregate\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/OrderByColumn\"\n          }\n        ]\n      },\n      \"OrderDirection\": {\n        \"enum\": [\n          \"asc\",\n          \"desc\"\n        ],\n        \"type\": \"string\"\n      },\n      \"OrderByElement\": {\n        \"properties\": {\n          \"order_direction\": {\n            \"$ref\": \"#/components/schemas/OrderDirection\"\n          },\n          \"target\": {\n            \"$ref\": \"#/components/schemas/OrderByTarget\"\n          },\n          \"target_path\": {\n            \"description\": \"The relationship path from the current query table to the table that contains the target to order by. This is always non-empty for aggregate order by targets\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"target_path\",\n          \"target\",\n          \"order_direction\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrderBy\": {\n        \"nullable\": true,\n        \"properties\": {\n          \"elements\": {\n            \"description\": \"The elements to order by, in priority order\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderByElement\"\n            },\n            \"type\": \"array\"\n          },\n          \"relations\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/OrderByRelation\"\n            },\n            \"description\": \"A map of relationships from the current query table to target tables. The key of the map is the relationship name. The relationships are used within the order by elements.\",\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"relations\",\n          \"elements\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ExplainResponse\": {\n        \"properties\": {\n          \"lines\": {\n            \"description\": \"Lines of the formatted explain plan response\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"query\": {\n            \"description\": \"The generated query - i.e. SQL for a relational DB\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"lines\",\n          \"query\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MutationResponse\": {\n        \"properties\": {\n          \"operation_results\": {\n            \"description\": \"The results of each mutation operation, in the same order as they were received\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MutationOperationResults\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"operation_results\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MutationOperationResults\": {\n        \"properties\": {\n          \"affected_rows\": {\n            \"description\": \"The number of rows affected by the mutation operation\",\n            \"maximum\": 9223372036854776000,\n            \"minimum\": -9223372036854776000,\n            \"type\": \"number\"\n          },\n          \"returning\": {\n            \"description\": \"The rows affected by the mutation operation\",\n            \"items\": {\n              \"additionalProperties\": {\n                \"additionalProperties\": true,\n                \"anyOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ColumnFieldValue\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/QueryResponse\"\n                  },\n                  {\n                    \"$ref\": \"#/components/schemas/NullColumnFieldValue\"\n                  }\n                ]\n              },\n              \"type\": \"object\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"affected_rows\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MutationRequest\": {\n        \"properties\": {\n          \"insert_schema\": {\n            \"description\": \"The schema by which to interpret row data specified in any insert operations in this request\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableInsertSchema\"\n            },\n            \"type\": \"array\"\n          },\n          \"operations\": {\n            \"description\": \"The mutation operations to perform\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MutationOperation\"\n            },\n            \"type\": \"array\"\n          },\n          \"table_relationships\": {\n            \"description\": \"The relationships between tables involved in the entire mutation request\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableRelationships\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"table_relationships\",\n          \"insert_schema\",\n          \"operations\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ObjectRelationInsertionOrder\": {\n        \"enum\": [\n          \"before_parent\",\n          \"after_parent\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ObjectRelationInsertSchema\": {\n        \"properties\": {\n          \"insertion_order\": {\n            \"$ref\": \"#/components/schemas/ObjectRelationInsertionOrder\"\n          },\n          \"relationship\": {\n            \"description\": \"The name of the object relationship over which the related row must be inserted\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"object_relation\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"relationship\",\n          \"insertion_order\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ArrayRelationInsertSchema\": {\n        \"properties\": {\n          \"relationship\": {\n            \"description\": \"The name of the array relationship over which the related rows must be inserted\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"array_relation\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"relationship\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ColumnInsertSchema\": {\n        \"properties\": {\n          \"column\": {\n            \"description\": \"The name of the column that this field should be inserted into\",\n            \"type\": \"string\"\n          },\n          \"column_type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"column\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"column\",\n          \"column_type\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"InsertFieldSchema\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"array_relation\": \"ArrayRelationInsertSchema\",\n            \"column\": \"ColumnInsertSchema\",\n            \"object_relation\": \"ObjectRelationInsertSchema\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ObjectRelationInsertSchema\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ArrayRelationInsertSchema\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ColumnInsertSchema\"\n          }\n        ]\n      },\n      \"TableInsertSchema\": {\n        \"properties\": {\n          \"fields\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/InsertFieldSchema\"\n            },\n            \"description\": \"The fields that will be found in the insert row data for the table and the schema for each field\",\n            \"type\": \"object\"\n          },\n          \"table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          }\n        },\n        \"required\": [\n          \"table\",\n          \"fields\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ColumnInsertFieldValue\": {\n        \"additionalProperties\": true\n      },\n      \"ObjectRelationInsertFieldValue\": {},\n      \"RowObject\": {\n        \"additionalProperties\": {\n          \"additionalProperties\": true,\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/components/schemas/ColumnInsertFieldValue\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/ObjectRelationInsertFieldValue\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/ArrayRelationInsertFieldValue\"\n            },\n            {\n              \"$ref\": \"#/components/schemas/NullColumnInsertFieldValue\"\n            }\n          ]\n        },\n        \"type\": \"object\"\n      },\n      \"ArrayRelationInsertFieldValue\": {\n        \"items\": {\n          \"$ref\": \"#/components/schemas/RowObject\"\n        },\n        \"type\": \"array\"\n      },\n      \"NullColumnInsertFieldValue\": {\n        \"type\": \"null\"\n      },\n      \"InsertMutationOperation\": {\n        \"properties\": {\n          \"returning_fields\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            },\n            \"default\": {},\n            \"description\": \"The fields to return for the rows affected by this insert operation\",\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"rows\": {\n            \"description\": \"The rows to insert into the table\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RowObject\"\n            },\n            \"type\": \"array\"\n          },\n          \"table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"insert\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"table\",\n          \"rows\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"DeleteMutationOperation\": {\n        \"properties\": {\n          \"returning_fields\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            },\n            \"default\": {},\n            \"description\": \"The fields to return for the rows affected by this delete operation\",\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          },\n          \"where\": {\n            \"$ref\": \"#/components/schemas/Expression\"\n          }\n        },\n        \"required\": [\n          \"table\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"IncrementColumnRowUpdate\": {\n        \"properties\": {\n          \"column\": {\n            \"description\": \"The name of the column in the row\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"increment\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"additionalProperties\": true,\n            \"description\": \"The value to use for the column\"\n          },\n          \"value_type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          }\n        },\n        \"required\": [\n          \"column\",\n          \"value\",\n          \"value_type\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"SetColumnRowUpdate\": {\n        \"properties\": {\n          \"column\": {\n            \"description\": \"The name of the column in the row\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"set\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"additionalProperties\": true,\n            \"description\": \"The value to use for the column\"\n          },\n          \"value_type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          }\n        },\n        \"required\": [\n          \"column\",\n          \"value\",\n          \"value_type\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RowUpdate\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"increment\": \"IncrementColumnRowUpdate\",\n            \"set\": \"SetColumnRowUpdate\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/IncrementColumnRowUpdate\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/SetColumnRowUpdate\"\n          }\n        ]\n      },\n      \"UpdateMutationOperation\": {\n        \"properties\": {\n          \"returning_fields\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            },\n            \"default\": {},\n            \"description\": \"The fields to return for the rows affected by this update operation\",\n            \"nullable\": true,\n            \"type\": \"object\"\n          },\n          \"table\": {\n            \"$ref\": \"#/components/schemas/TableName\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"update\"\n            ],\n            \"type\": \"string\"\n          },\n          \"updates\": {\n            \"description\": \"The updates to make to the matched rows in the table\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RowUpdate\"\n            },\n            \"type\": \"array\"\n          },\n          \"where\": {\n            \"$ref\": \"#/components/schemas/Expression\"\n          }\n        },\n        \"required\": [\n          \"table\",\n          \"updates\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MutationOperation\": {\n        \"discriminator\": {\n          \"mapping\": {\n            \"delete\": \"DeleteMutationOperation\",\n            \"insert\": \"InsertMutationOperation\",\n            \"update\": \"UpdateMutationOperation\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/InsertMutationOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/DeleteMutationOperation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/UpdateMutationOperation\"\n          }\n        ]\n      },\n      \"RawResponse\": {\n        \"properties\": {\n          \"rows\": {\n            \"description\": \"The rows returned by the raw query.\",\n            \"items\": {\n              \"additionalProperties\": {\n                \"additionalProperties\": true\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"rows\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RawRequest\": {\n        \"properties\": {\n          \"query\": {\n            \"description\": \"A string representing a raw query\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"query\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/npm/hasura/dc-api-types@d4df9a2a3a7e03f29d6dac5e25465a92af432e16/-/blob/src/agent.openapi.json",
			"externalURLs": []
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ConfigSchemaResponse\": resolve \"#/components/schemas/ConfigSchemaResponse\": property \"config_schema\": $ref: resolve \"#/components/schemas/OpenApiSchema\": property \"additionalProperties\": at src/agent.openapi.json:612:35: type: unexpected schema type: \"bool\""
}