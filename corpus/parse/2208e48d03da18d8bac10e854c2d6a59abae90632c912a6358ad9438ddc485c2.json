{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dkackman/chia-api"
		},
		"file": {
			"name": "crawler.yaml",
			"size": 0,
			"path": "src/crawler.yaml",
			"byteSize": 7737,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e-\n    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. \n    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. \n    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication \n    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).\n\n    The crawler uses port 8561 by default.\n  version: 1.3.5\n  title: Chia RPC\n  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf\n  contact:\n    name: Chia Network\n    url: https://www.chia.net/\n    email: hello@chia.net\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://localhost:8561\n    description: Crawler RPC\nsecurity:\n  - bearerAuth: []\ncomponents:\n  responses:\n    empty:\n      $ref: \"./responses/empty.yaml#/empty\"\n  requestBodies:\n    empty:\n      $ref: \"./requestBodies/empty.yaml#/empty\"\n  schemas:\n    connection_info:\n      $ref: \"./schemas/connection_info.yaml#/connection_info\"\n    apiResponse:\n      $ref: \"./schemas/apiResponse.yaml#/apiResponse\"\n  securitySchemes:\n    bearerAuth:\n      $ref: \"./securitySchemes/bearerAuth.yaml#/bearerAuth\"\ntags:\n  - name: Shared\n    description: Methods shared by all services.\n  - name: Crawler\n    description: The crawler RPC API is exposed, by default, on port 8561 and contains peer metrics.\npaths:\n  /stop_node:\n    post:\n      tags:\n        - Shared\n      summary: Stop the node.\n      description: Stop the node.\n      operationId: stop_node\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /open_connection:\n    post:\n      tags:\n        - Shared\n      summary: Add a connection to another node.\n      description: Add a connection to another node.\n      operationId: open_connection\n      requestBody:\n        required: true\n        description: the address of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ip\n                - port\n              properties:\n                ip:\n                  type: string\n                  format: ipaddress\n                port:\n                  type: integer\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /close_connection:\n    post:\n      tags:\n        - Shared\n      summary: Removes a connection.\n      description: Removes a connection.\n      operationId: close_connection\n      requestBody:\n        required: true\n        description: the node id of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - node_id\n              properties:\n                node_id:\n                  type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /get_connections:\n    post:\n      tags:\n        - Shared\n      summary: Retrieve the list of connections.\n      description: Retrieve the list of connections.\n      operationId: get_connections\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      connections:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/connection_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /healthz:\n    post:\n      tags:\n        - Shared\n      summary: Heartbeat.\n      description: Heartbeat.\n      operationId: healthz\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiResponse\"\n  /get_routes:\n    post:\n      tags:\n        - Shared\n      summary: Retrieve the list of routes exposed by the service.\n      description: Retrieve the list of routes/endpoints exposed by the service.\n      operationId: get_routes\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      routes:\n                        type: array\n                        items:\n                          type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_peer_counts:\n    post:\n      tags:\n        - Crawler\n      summary: Retrieves aggregate information about peers.\n      description: Retrieves aggregate information about peers.\n      operationId: get_peer_counts\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      peer_counts:\n                        type: object\n                        properties:\n                          total_last_5_days:\n                            type: integer\n                          reliable_nodes:\n                            type: integer\n                          ipv4_last_5_days:\n                            type: integer\n                          ipv6_last_5_days:\n                            type: integer\n                          versions:\n                            type: object\n                            additionalProperties:\n                              type: integer\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_ips_after_timestamp:\n    post:\n      tags:\n        - Crawler\n      summary: Retrieves ip addresses of peers that have connected after a given time.\n      description: Retrieves ip addresses of peers that have connected after a given time.\n      operationId: get_ips_after_timestamp\n      requestBody:\n        description: Search criteria\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - after\n              properties:\n                after:\n                  description: The unix timestamp to seach for peer connections after\n                  type: integer\n                  format: timestamp\n                offset:\n                  description: An offset into the returned items\n                  type: integer\n                  default: 0\n                limit:\n                  description: The maximum number of result to return\n                  type: integer\n                  default: 10000\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      ips:\n                        type: array\n                        items:\n                          type: string\n                          format: ipaddress\n                      total:\n                        type: integer\n                  - $ref: \"#/components/schemas/apiResponse\"\nexternalDocs:\n  description: Find out more about chia\n  url: https://chia.net\n",
			"canonicalURL": "/github.com/dkackman/chia-api@a556498a40409adcc1ecfebab8dc77d6b7ff531a/-/blob/src/crawler.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dkackman/chia-api/blob/a556498a40409adcc1ecfebab8dc77d6b7ff531a/src/crawler.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"apiResponse\": parse schema: resolve \"./schemas/apiResponse.yaml#/apiResponse\": external \"./schemas/apiResponse.yaml\": file: local file reference is not allowed"
}