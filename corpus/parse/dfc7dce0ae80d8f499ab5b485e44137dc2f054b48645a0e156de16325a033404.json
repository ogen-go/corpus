{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mainflux/mainflux"
		},
		"file": {
			"name": "http.yml",
			"size": 0,
			"path": "api/openapi/http.yml",
			"byteSize": 4176,
			"content": "openapi: 3.0.1\ninfo:\n  title: Mainflux http adapter\n  description: HTTP API for sending messages through communication channels.\n  version: \"1.0.0\"\npaths:\n  /channels/{id}/messages:\n    post:\n      summary: Sends message to the communication channel\n      description: |\n        Sends message to the communication channel. Messages can be sent as\n        JSON formatted SenML or as blob.\n      tags:\n        - messages\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      requestBody:\n        $ref: \"#/components/requestBodies/MessageReq\"\n      responses:\n        \"202\":\n          description: Message is accepted for processing.\n        \"400\":\n          description: Message discarded due to its malformed content.\n        \"401\":\n          description: Missing or invalid access token provided.\n        \"404\":\n          description: Message discarded due to invalid channel id.\n        \"415\":\n          description: Message discarded due to invalid or missing content type.\n        '500':\n          $ref: \"#/components/responses/ServiceError\"\n  /health:\n    get:\n      summary: Retrieves service health check info.\n      tags:\n        - health\n      responses:\n        '200':\n          $ref: \"#/components/responses/HealthRes\"\n        '500':\n          $ref: \"#/components/responses/ServiceError\"\n\ncomponents:\n  schemas:\n    SenMLRecord:\n      type: object\n      properties:\n        bn:\n          type: string\n          description: Base Name\n        bt:\n          type: number\n          format: double\n          description: Base Time\n        bu:\n          type: number\n          format: double\n          description: Base Unit\n        bv:\n          type: number\n          format: double\n          description: Base Value\n        bs:\n          type: number\n          format: double\n          description: Base Sum\n        bver:\n          type: number\n          format: double\n          description: Version\n        n:\n          type: string\n          description: Name\n        u:\n          type: string\n          description: Unit\n        v:\n          type: number\n          format: double\n          description: Value\n        vs:\n          type: string\n          description: String Value\n        vb:\n          type: boolean\n          description: Boolean Value\n        vd:\n          type: string\n          description: Data Value\n        s:\n          type: number\n          format: double\n          description: Value Sum\n        t:\n          type: number\n          format: double\n          description: Time\n        ut:\n          type: number\n          format: double\n          description: Update Time\n    SenMLArray:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SenMLRecord\"\n\n  parameters:\n    ID:\n      name: id\n      description: Unique channel identifier.\n      in: path\n      schema:\n        type: string\n        format: uuid\n      required: true\n\n  requestBodies:\n    MessageReq:\n      description: |\n        Message to be distributed. Since the platform expects messages to be\n        properly formatted SenML in order to be post-processed, clients are\n        obliged to specify Content-Type header for each published message.\n        Note that all messages that aren't SenML will be accepted and published,\n        but no post-processing will be applied.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SenMLArray\"\n\n  responses:\n    ServiceError:\n      description: Unexpected server-side error occurred.\n      content:\n        application/json:\n          schema:\n            type: string\n            format: byte\n    HealthRes:\n      description: Service Health Check.\n      content:\n        application/json:\n          schema:\n            $ref: \"./schemas/HealthInfo.yml\"\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: uuid\n      description: |\n        * Thing access: \"Authorization: Thing \u003cthing_key\u003e\"\n\n    basicAuth:\n      type: http\n      scheme: basic\n      description: |\n        * Things access: \"Authorization: Basic \u003cbase64-encoded_credentials\u003e\"\n\nsecurity:\n  - bearerAuth: []\n  - basicAuth: []\n",
			"canonicalURL": "/github.com/mainflux/mainflux@6bd745b658ff1e04c40394a732c731fa99882c32/-/blob/api/openapi/http.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mainflux/mainflux/blob/6bd745b658ff1e04c40394a732c731fa99882c32/api/openapi/http.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"HealthRes\": content: application/json: schema: at 1:703: parse schema: resolve \"./schemas/HealthInfo.yml\": external \"./schemas/HealthInfo.yml\": get: file: local file reference is not allowed"
}