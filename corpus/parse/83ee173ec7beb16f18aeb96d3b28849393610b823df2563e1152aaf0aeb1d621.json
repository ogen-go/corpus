{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "abandoned_carts.v3.yml",
			"size": 0,
			"path": "reference/abandoned_carts.v3.yml",
			"byteSize": 21096,
			"content": "openapi: 3.0.0\ninfo:\n  version: ''\n  title: Abandoned Carts\n  description: |-\n    Use `/abandoned-carts/{token}` on headless storefronts to retrieve the `cart_id` via the abandoned cart `token` passed in to headless storefront via an abandoned cart email link clicked on by a shopper. Once the `cart_id` has been retrieved, it can be used to fetch and display information about the cart to the shopper via the storefront cart and/or server-to-server cart APIs.\n\n    ## OAuth Scopes\n    | UI Name                                      | Permission | Parameter                                     |\n    |----------------------------------------------|------------|-----------------------------------------------|\n    | Information & Settings                       | read-only  | `store_v2_information_read_only`              |\n    | Information & Settings                       | modify     | `store_v2_information`                        |\n\n    For more information on OAuth Scopes, see: [Authentication](/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).\n\n    ## Authentication\n\n    Requests can be authenticated by sending an `access_token` via `X-Auth-Token` HTTP header:\n\n    ```http\n    GET /stores/{store_hash}/v3/catalog/summary\n    host: api.bigcommerce.com\n    Accept: application/json\n    X-Auth-Token: {access_token}\n    ```\n\n    |Header|Parameter|Description|\n    |-|-|-|\n    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n    For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\npaths:\n  '/stores/{store_hash}/v3/abandoned-carts/settings':\n    get:\n      summary: Get Global Abandoned Cart Settings\n      description: Returns the global abandoned cart settings of a store.\n      operationId: getGlobalAbandonedCartSettings\n      tags:\n        - Abandoned Cart Settings\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalAbandonedCartSettingsResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      parameters: []\n    put:\n      summary: Update Global Abandoned Cart Settings\n      description: Updates the global abandoned cart settings of a store.\n      operationId: UpdateGlobalAbandonedCartSettings\n      tags:\n        - Abandoned Carts Settings\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GlobalAbandonedCartSettingsRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalAbandonedCartSettingsResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '422':\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/abandoned-carts/settings/channels/{channel_id}':\n    get:\n      summary: Get Channel Abandoned Cart Settings\n      description: Returns the per-channel overrides for the abandoned cart settings of a store.\n      operationId: getChannelAbandonedCartSettings\n      tags:\n        - Abandoned Carts Settings\n      parameters:\n        - name: channel_id\n          description: The channel ID of the settings overrides\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChannelAbandonedCartSettingsResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      summary: Update Channel Abandoned Cart Settings\n      description: |-\n        Updates the per-channel overrides for the abandoned cart settings of a store.\n\n        #### OAuth Scopes\n        | UI Name                                      | Permission | Parameter                                     |\n        |----------------------------------------------|------------|-----------------------------------------------|     \n        | Information & Settings                       | modify     | `store_v2_information`                        |\n      operationId: UpdateChannelAbandonedCartSettings\n      tags:\n        - Abandoned Carts Settings\n      parameters:\n        - name: channel_id\n          description: The channel ID of the settings overrides\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChannelAbandonedCartSettingsRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChannelAbandonedCartSettingsResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '422':\n          description: Unprocessible entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      security: []\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: channel_id\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/abandoned-carts/{token}':\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/abandonedCart_Resp'\n        '400':\n          $ref: '#/components/responses/400_BadRequest'\n        '404':\n          $ref: '#/components/responses/404_NotFound'\n        '422':\n          $ref: '#/components/responses/422_UnprocessableEntity'\n        '502':\n          $ref: '#/components/responses/502_GatewayError'\n        '503':\n          $ref: '#/components/responses/503_ServiceUnavailable'\n        '504':\n          $ref: '#/components/responses/504_GatewayTimeout'\n        default:\n          description: ''\n      summary: Get an Abandoned Cart\n      description: |-\n        Returns the `cart_id` corresponding to the abandoned cart `{token}` passed in.\n\n        **Usage Notes**:\n        * `{token}` is the token in the query string of the abandoned cart link found in abandoned cart email notifications to shoppers\n      operationId: getAbandonedCarts\n      tags:\n        - Abandoned Carts\n    parameters:\n      - name: token\n        in: path\n        required: true\n        description: |-\n          Unique cart `UUID`.\n\n          Unique cart `UUID` token that is generated for abandoned cart emails.\n        schema:\n          type: string\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\nsecurity:\n  - X-Auth-Token: []\n  - OAuthScopes: []\ntags:\n  - name: Abandoned Carts\n  - name: Abandoned Cart Settings\n  - name: Abandoned Carts Settings\nx-stoplight:\n  docs:\n    includeDownloadLink: true\n    showModels: false\nservers:\n  - url: 'https://api.bigcommerce.com'\ncomponents:\n  parameters:\n    Accept:\n      in: header\n      name: Accept\n      required: true\n      description: Accept\n      schema:\n        type: string\n        default: application/json\n    Content-Type:\n      name: Content-Type\n      in: header\n      required: true\n      description: Content-Type\n      schema:\n        type: string\n        default: application/json\n  responses:\n    502_GatewayError:\n      description: 'If something happens during the request that causes it to fail, a 502 response will be returned. A new request should be made; however, it could fail.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_Full'\n          examples:\n            response:\n              value:\n                status: 502\n                title: A login URL could not be generated. Please try another request.\n                type: /api-docs/getting-started/api-status-codes\n    504_GatewayTimeout:\n      description: 'If this occurs, you should retry the request. Typically retrying the request several times will result in a successful request; However, if you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorDetailed_Full'\n          examples:\n            response:\n              value:\n                status: 504\n                title: Gateway Timeout\n                type: /api-docs/getting-started/api-status-codes\n                errors: {}\n    403_Unauthorized:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_Full'\n          examples:\n            response:\n              value:\n                status: 403\n                title: Unauthorized Access. You do not have permission to make this request.\n                type: /api-docs/getting-started/api-status-codes\n    400_BadRequest:\n      description: |-\n        Malformed request syntax. Typically need to fix the JSON\n        Body to resend successfully.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_Full'\n          examples:\n            response:\n              value:\n                status: 400\n                title: Input is invalid.\n                type: /api-docs/getting-started/api-status-codes\n    404_NotFound:\n      description: 'If the requested account resource is not found for the franchise, return a 404 Not Found.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_Full'\n          examples:\n            response:\n              value:\n                status: 404\n                title: 'Account with {id} not found'\n                type: /api-docs/getting-started/api-status-codes\n    422_UnprocessableEntity:\n      description: This occurs when missing or unacceptable data is passed for one or more fields. Please correct the values for the fields listed in the errors object.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorDetailed_Full'\n          examples:\n            response:\n              value:\n                status: 422\n                title: JSON data is missing or invalid\n                type: /api-docs/getting-started/api-status-codes\n                errors:\n                  name: error.expected.jsstring\n                  primary_contact.district: error.expected.jsstring.\n    503_ServiceUnavailable:\n      description: 'If this occurs, you should retry the request. If you are unable to successfully make a request, please check the BigCommerce system status [here](https://status.bigcommerce.com/). A service is likely down and the request will need to be made again when it is back up (in several hours usually)'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_Full'\n          examples:\n            response:\n              value:\n                status: 503\n                title: Service Unavailable\n                type: /api-docs/getting-started/api-status-codes\n    abandonedCart_Resp:\n      description: Returned on `GET` requests to `/abandoned_carts`.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/abandonedCartInfo_Full'\n              meta:\n                $ref: '#/components/schemas/metaEmpty_Full'\n  securitySchemes:\n    X-Auth-Token:\n      type: apiKey\n      in: header\n      name: X-Auth-Token\n      description: |-\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        | Information & Settings  | read-only  | `store_v2_information_read_only`|\n        | Information & Settings  | modify     | `store_v2_information`          |\n\n\n        ### Headers\n\n        |Header|Parameter|Description|\n        |-|-|-|\n        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n        ### Example\n\n        ```http\n        GET /stores/{store_hash}/v3/catalog/summary\n        host: api.bigcommerce.com\n        Content-Type: application/json\n        X-Auth-Token: {access_token}\n        ```\n\n        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\n  schemas:\n    metaEmpty_Full:\n      type: object\n      title: metaEmpty_Full\n      x-internal: false\n      properties:\n        meta:\n          type: object\n    error_Full:\n      type: object\n      title: error_Full\n      properties:\n        status:\n          description: |\n            The HTTP status code.\n          type: integer\n        title:\n          description: |\n            The error title describing the particular error.\n          type: string\n        type:\n          type: string\n      x-internal: false\n    errorDetailed_Full:\n      type: object\n      properties:\n        errors:\n          type: object\n          additionalProperties:\n            type: string\n          title: DetailedErrors\n      title: errorDetailed_Full\n      x-internal: false\n    abandonedCartInfo_Full:\n      type: object\n      title: abandonedCartInfo_Full\n      properties:\n        cart_id:\n          type: string\n          description: The `cart_id` of the abandoned cart. Can be used to display the abanded cart to the customer via storefront cart or\n      x-internal: false\n    AbandonedCartSettings:\n      description: Represents all settings related to the abandoned cart functionality of a store\n      type: object\n      x-tags:\n        - Models\n      properties:\n        enable_notification:\n          description: Indicates whether or not abandoned cart notification is on\n          type: boolean\n        email_customer_until_cart_is_recovered:\n          description: Indicates whether or not a customer should continue to receive abandoned cart emails until their cart is recovered\n          type: boolean\n        marketing_emails_require_customer_consent:\n          description: Indicates whether or not a customer should receive abandoned cart emails based on their consent. By default customers will not receive emails.\n          type: boolean\n        email_merchant_when_cart_is_converted:\n          description: Indicates whether or not a merchant should receive a notification email when a cart is converted into an order\n          type: boolean\n        email_merchant_when_cart_is_abandoned:\n          description: Indicates whether or not a merchant should receive a notification email when a cart is abandoned\n          type: boolean\n        merchant_email_address:\n          description: The email address for receiving merchant notifications\n          type: string\n          format: email\n        merchant_abandoned_cart_email_frequency_type:\n          description: 'Indicates whether to send an email for every abandoned cart, or to send a digest email after X number of abandoned carts'\n          type: string\n          enum:\n            - digest\n            - individual\n        merchant_abandoned_cart_digest_email_frequency:\n          description: The number of abandoned carts to accumulate before a digest email is sent to a merchant\n          type: integer\n          minimum: 2\n          maximum: 1000\n    ChannelAbandonedCartSettings:\n      description: Represents all settings overrides related to the abandoned cart functionality of a store for a channel\n      type: object\n      x-tags:\n        - Models\n      properties:\n        enable_notification:\n          description: 'Indicates whether or not abandoned cart notification is on. If it is null, it means there is no override for the specified channel.'\n          type: boolean\n          nullable: true\n        email_customer_until_cart_is_recovered:\n          description: 'Indicates whether or not a customer should continue to receive abandoned cart emails until their cart is recovered. If it is null, it means there is no override for the specified channel.'\n          type: boolean\n          nullable: true\n        marketing_emails_require_customer_consent:\n          description: 'Indicates whether or not a customer should receive abandoned cart emails based on their consent. If it is null, it means there is no override for the specified channel. By default customers will not receive emails.'\n          type: boolean\n          nullable: true\n        email_merchant_when_cart_is_converted:\n          description: 'Indicates whether or not a merchant should receive a notification email when a cart is converted into an order. If it is null, it means there is no override for the specified channel.'\n          type: boolean\n          nullable: true\n        email_merchant_when_cart_is_abandoned:\n          description: 'Indicates whether or not a merchant should receive a notification email when a cart is abandoned. If it is null, it means there is no override for the specified channel.'\n          type: boolean\n          nullable: true\n        merchant_email_address:\n          description: 'The email address for receiving merchant notifications. If it is null, it means there is no override for the specified channel.'\n          type: string\n          format: email\n          nullable: true\n        merchant_abandoned_cart_email_frequency_type:\n          description: 'Indicates whether to send an email for every abandoned cart or to send a digest email after X number of abandoned carts. If it is null, it means there is no override for the specified channel.'\n          type: string\n          enum:\n            - digest\n            - individual\n          nullable: true\n        merchant_abandoned_cart_digest_email_frequency:\n          description: 'The number of abandoned carts to accumulate before a digest email is sent to a merchant. If it is null, it means there is no override for the specified channel.'\n          type: integer\n          minimum: 2\n          maximum: 1000\n          nullable: true\n    ChannelAbandonedCartSettingsRequest:\n      allOf:\n        - $ref: '#/components/schemas/ChannelAbandonedCartSettings'\n        - description: The request object for updating the abandoned cart settings overrides of a store for a channel\n      x-tags:\n        - Models\n    ChannelAbandonedCartSettingsResponse:\n      description: The response object of abandoned cart settings overrides for a channel\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ChannelAbandonedCartSettings'\n        meta:\n          type: object\n      x-tags:\n        - Models\n    GlobalAbandonedCartSettingsRequest:\n      allOf:\n        - $ref: '#/components/schemas/AbandonedCartSettings'\n        - description: The request object for updating the abandoned cart settings of a store at the global level\n          required:\n            - enabled\n            - email_customer_until_cart_is_recovered\n            - marketing_emails_require_customer_consent\n            - email_merchant_when_cart_is_converted\n            - email_merchant_when_cart_is_abandoned\n            - merchant_email_address\n            - merchant_abandoned_cart_email_frequency_type\n            - merchant_abandoned_cart_digest_email_frequency\n      x-tags:\n        - Models\n    GlobalAbandonedCartSettingsResponse:\n      description: The response object of abandoned cart settings at the global level\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/AbandonedCartSettings'\n        meta:\n          type: object\n      x-tags:\n        - Models\n    ErrorResponse:\n      description: The response object containing details of an error\n      type: object\n      properties:\n        status:\n          type: integer\n        title:\n          type: string\n        type:\n          type: string\n        instance:\n          type: string\n        errors:\n          type: object\n      x-tags:\n        - Models\n",
			"canonicalURL": "/github.com/bigcommerce/api-specs@3d4f475bfa35fa63397a69165530f47d4d8b3703/-/blob/reference/abandoned_carts.v3.yml",
			"externalURLs": [
				{
					"url": "https://github.com/bigcommerce/api-specs/blob/3d4f475bfa35fa63397a69165530f47d4d8b3703/reference/abandoned_carts.v3.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/stores/{store_hash}/v3/abandoned-carts/settings\": at 1:12747: get: operation \"getGlobalAbandonedCartSettings\": at 1:12754: security: unknown security schema \"OAuthScopes\""
}