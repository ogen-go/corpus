{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/arno-di-loreto/apihandyman.io"
		},
		"file": {
			"name": "motu-openapi.yaml",
			"size": 0,
			"path": "code/api-design-reviews/motu-openapi.yaml",
			"byteSize": 11296,
			"content": "openapi: 3.0.0\ninfo:\n  title: MOTU\n  version: 1.0.3_build156\n  description: The Masters of the Universe Web Site API\npaths:\n  /v1/charsBySide:\n    get:\n      summary: charBySide\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sides'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-charById\n      tags:\n        - searchController\n      parameters: []\n      description: For \"all characters\" screen\n    parameters: []\n  /v1/charaters-with-name:\n    get:\n      summary: Search characters by name\n      tags:\n        - searchController\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Char'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-characters-by-name\n      description: For \"search by name\" screen\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: name\n          required: true\n    parameters: []\n  '/v1/tpyt/{year}/{type}':\n    parameters:\n      - schema:\n          type: string\n        name: year\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: type\n        in: path\n        required: true\n    get:\n      summary: Toys per year and type\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/toysPerYearAndTypeDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-toys-per-year-year-type\n      tags:\n        - searchController\n      description: ''\n  /v1/search/flying/vehicles/with/filters:\n    post:\n      summary: List flying toys\n      tags:\n        - searchController\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlyingToysResponse'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Flying Toys Found\n        '500':\n          description: Internal Server Error\n      operationId: post-flying-vehicles-byId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FlyingFilters'\n    parameters: []\n  '/v1/sidekick/{name}':\n    parameters:\n      - schema:\n          type: string\n        name: name\n        in: path\n        required: true\n    get:\n      summary: Get character's sidekick\n      tags:\n        - searchController\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sidekick'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-characters-sidekick-name\n  /v1/buildings/all:\n    get:\n      summary: Building toys\n      tags:\n        - searchController\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildingListDto'\n      operationId: get-buildings\n    parameters: []\n  '/v2/episode/{num}/{year}/{producer}':\n    parameters:\n      - schema:\n          type: string\n        name: num\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: year\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: producer\n        in: path\n        required: true\n    get:\n      summary: get\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Episode_Single'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-ep-num-year-producer\n      tags:\n        - tvShowController\n      description: ''\n  /v2/episodes:\n    get:\n      summary: List episodes\n      tags:\n        - tvShowController\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Producers'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: get-eps\n      description: ''\n    parameters: []\n    post:\n      summary: Insert episode in database\n      operationId: post-v2-episodes\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/episode-added'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/add-epsode'\n      tags:\n        - tvShowController\n  /v1/search/ground/vehicles/with/filters:\n    post:\n      summary: Search ground vehicle toys\n      tags:\n        - searchController\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroundToyResponseDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '500':\n          description: Internal Server Error\n      operationId: post-v1-ground-vehicles-with-filters\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroundFilter'\n          application/xml:\n            schema:\n              type: object\n              properties: {}\n          multipart/form-data:\n            schema:\n              type: object\n              properties: {}\n        description: ''\n    parameters: []\n  /v1/buildings/filters:\n    get:\n      summary: Search buildings\n      tags:\n        - searchController\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildingListDto'\n      operationId: get-v1-buildings-filters\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: name\ncomponents:\n  schemas:\n    Char:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        toys:\n          $ref: '#/components/schemas/toy'\n        creation_dte:\n          type: string\n          format: date-time\n        evil:\n          type: boolean\n        good:\n          type: boolean\n    toy:\n      title: ''\n      type: object\n      properties:\n        ToyId:\n          type: string\n        ToyType:\n          type: number\n          enum:\n            - '1'\n            - '2'\n            - '3'\n        ToyReference:\n          type: string\n        ToyOriginalPrice:\n          type: string\n        ToyManufacturer:\n          type: string\n        ToyName:\n          type: string\n    prd:\n      title: ''\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        years:\n          type: array\n          items:\n            $ref: '#/components/schemas/Years'\n    Epsd:\n      title: ''\n      type: object\n      properties:\n        number:\n          type: string\n        title:\n          type: string\n        firstAir:\n          type: number\n    Years:\n      title: ''\n      type: object\n      properties:\n        year:\n          type: string\n        episodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Epsd'\n    Episode_Single:\n      type: object\n      properties:\n        name:\n          type: string\n        first_air_date:\n          type: string\n        alternate_name_1:\n          type: string\n        alternate_name_2:\n          type: string\n    add-epsode:\n      title: ''\n      type: object\n      properties:\n        name:\n          type: string\n        firstArDate:\n          type: string\n        producerId:\n          type: string\n        year:\n          type: integer\n    SearchResponse:\n      title: ''\n      type: array\n      items:\n        $ref: '#/components/schemas/Char'\n    Sides:\n      title: ''\n      type: object\n      properties:\n        good:\n          type: array\n          items:\n            $ref: '#/components/schemas/SideChar'\n        evil:\n          type: array\n          items:\n            $ref: '#/components/schemas/SideChar'\n    SideChar:\n      title: ''\n      type: object\n      properties:\n        id:\n          type: string\n        nom:\n          type: string\n        icon:\n          type: string\n    Sidekick:\n      title: ''\n      type: object\n      properties:\n        name:\n          type: string\n    FlyingFilters:\n      title: Filters\n      type: object\n      properties:\n        year:\n          type: string\n        brand:\n          type: string\n        name:\n          type: string\n        evil:\n          type: boolean\n        good:\n          type: boolean\n        id:\n          type: string\n    FlyingToysResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/FlyingToy'\n    FlyingToy:\n      type: object\n      properties:\n        flyingToyName:\n          type: string\n        flyingToyBox:\n          type: string\n    toysPerYearAndTypeDto:\n      title: toysPerYearAndTypeDto\n      type: array\n      items:\n        $ref: '#/components/schemas/toy'\n    GroundToyResponseDto:\n      type: array\n      items:\n        $ref: '#/components/schemas/GroundToy'\n    GroundToy:\n      type: object\n      properties:\n        name:\n          type: string\n        boxArt:\n          type: string\n    GroundFilter:\n      title: GroundFilter\n      type: object\n      properties:\n        id:\n          type: string\n        manufacturer:\n          type: string\n    building:\n      title: building\n      type: object\n      properties:\n        name:\n          type: string\n        art:\n          type: string\n        width:\n          type: number\n        height:\n          type: number\n        depth:\n          type: number\n    BuildingListDto:\n      title: BuildingListDto\n      type: object\n      properties:\n        buildings:\n          type: array\n          items:\n            $ref: '#/components/schemas/building'\n    episode-added:\n      title: episode-added\n      type: string\n    Producers:\n      title: ''\n      type: object\n      properties:\n        producers:\n          $ref: '#/components/schemas/prd'\nservers:\n  - description: base path\n    url: /api\n"
		}
	},
	"Error": "parse: parse spec: paths: /v1/charaters-with-name: get: operation \"get-characters-by-name\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: reference \"#/components/schemas/Char\": parse schema: toys: parse schema: reference \"#/components/schemas/toy\": parse schema: ToyType: parse enum values: parse value \"\\\"1\\\"\": expected type \"number\", got \"string\""
}