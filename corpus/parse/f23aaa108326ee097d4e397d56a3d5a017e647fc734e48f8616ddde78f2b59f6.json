{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/celestiaorg/celestia-core"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rpc/openapi/openapi.yaml",
			"byteSize": 92427,
			"content": "openapi: 3.0.0\ninfo:\n  title: Tendermint RPC\n  contact:\n    name: Tendermint RPC\n    url: https://github.com/tendermint/tendermint/issues/new/choose\n  description: |\n    Tendermint supports the following RPC protocols:\n\n    * URI over HTTP\n    * JSONRPC over HTTP\n    * JSONRPC over websockets\n\n    ## Configuration\n\n    RPC can be configured by tuning parameters under `[rpc]` table in the\n    `$TMHOME/config/config.toml` file or by using the `--rpc.X` command-line\n    flags.\n\n    Default rpc listen address is `tcp://0.0.0.0:26657`.\n    To set another address, set the `laddr` config parameter to desired value.\n    CORS (Cross-Origin Resource Sharing) can be enabled by setting\n    `cors_allowed_origins`, `cors_allowed_methods`, `cors_allowed_headers`\n    config parameters.\n\n    ## Arguments\n\n    Arguments which expect strings or byte arrays may be passed as quoted\n    strings, like `\"abc\"` or as `0x`-prefixed strings, like `0x616263`.\n\n    ## URI/HTTP\n\n    A REST like interface.\n\n        curl localhost:26657/block?height=5\n\n    ## JSONRPC/HTTP\n\n    JSONRPC requests can be POST'd to the root RPC endpoint via HTTP.\n\n        curl --header \"Content-Type: application/json\" --request POST --data '{\"method\": \"block\", \"params\": [\"5\"], \"id\": 1}' localhost:26657\n\n    ## JSONRPC/websockets\n\n    JSONRPC requests can be also made via websocket.\n    The websocket endpoint is at `/websocket`, e.g. `localhost:26657/websocket`.\n    Asynchronous RPC functions like event `subscribe` and `unsubscribe` are\n    only available via websockets.\n\n    Example using https://github.com/hashrocket/ws:\n\n        ws ws://localhost:26657/websocket\n        \u003e { \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event='NewBlock'\"], \"id\": 1 }\n  version: \"Master\"\n  license:\n    name: Apache 2.0\n    url: https://github.com/tendermint/tendermint/blob/master/LICENSE\nservers:\n  - url: https://rpc.cosmos.network\n    description: Cosmos mainnet node to interact with the Tendermint RPC\n  - url: http://localhost:26657\n    description: Interact with the Tendermint RPC locally on your device\ntags:\n  - name: Websocket\n    description: Subscribe/unsubscribe are reserved for websocket events.\n  - name: Info\n    description: Informations about the node APIs\n  - name: Tx\n    description: Transactions broadcast APIs\n  - name: ABCI\n    description: ABCI APIs\n  - name: Evidence\n    description: Evidence APIs\n  - name: Unsafe\n    description: Unsafe APIs\npaths:\n  /broadcast_tx_sync:\n    get:\n      summary: Returns with the response from CheckTx. Does not wait for DeliverTx result.\n      tags:\n        - Tx\n      operationId: broadcast_tx_sync\n      description: |\n        If you want to be sure that the transaction is included in a block, you can\n        subscribe for the result using JSONRPC via a websocket. See\n        https://docs.tendermint.com/master/app-dev/subscribing-to-events-via-websocket.html\n        If you haven't received anything after a couple of blocks, resend it. If the\n        same happens again, send it to some other node. A few reasons why it could\n        happen:\n\n        1. malicious node can drop or pretend it had committed your tx\n        2. malicious proposer (not necessary the one you're communicating with) can\n        drop transactions, which might become valid in the future\n        (https://github.com/tendermint/tendermint/issues/3322)\n\n\n        Please refer to\n        https://docs.tendermint.com/master/tendermint-core/using-tendermint.html#formatting\n        for formatting/encoding rules.\n      parameters:\n        - in: query\n          name: tx\n          required: true\n          schema:\n            type: string\n          example: \"456\"\n          description: The transaction\n      responses:\n        \"200\":\n          description: Empty\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /broadcast_tx_async:\n    get:\n      summary: Returns right away, with no response. Does not wait for CheckTx nor DeliverTx results.\n      tags:\n        - Tx\n      operationId: broadcast_tx_async\n      description: |\n        If you want to be sure that the transaction is included in a block, you can\n        subscribe for the result using JSONRPC via a websocket. See\n        https://docs.tendermint.com/master/app-dev/subscribing-to-events-via-websocket.html\n        If you haven't received anything after a couple of blocks, resend it. If the\n        same happens again, send it to some other node. A few reasons why it could\n        happen:\n\n        1. malicious node can drop or pretend it had committed your tx\n        2. malicious proposer (not necessary the one you're communicating with) can\n        drop transactions, which might become valid in the future\n        (https://github.com/tendermint/tendermint/issues/3322)\n        3. node can be offline\n\n        Please refer to\n        https://docs.tendermint.com/master/tendermint-core/using-tendermint.html#formatting\n        for formatting/encoding rules.\n      parameters:\n        - in: query\n          name: tx\n          required: true\n          schema:\n            type: string\n            example: \"123\"\n          description: The transaction\n      responses:\n        \"200\":\n          description: empty answer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxResponse\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /broadcast_tx_commit:\n    get:\n      summary: Returns with the responses from CheckTx and DeliverTx.\n      tags:\n        - Tx\n      operationId: broadcast_tx_commit\n      description: |\n        IMPORTANT: use only for testing and development. In production, use\n        BroadcastTxSync or BroadcastTxAsync. You can subscribe for the transaction\n        result using JSONRPC via a websocket. See\n        https://docs.tendermint.com/master/app-dev/subscribing-to-events-via-websocket.html\n\n        CONTRACT: only returns error if mempool.CheckTx() errs or if we timeout\n        waiting for tx to commit.\n\n        If CheckTx or DeliverTx fail, no error will be returned, but the returned result\n        will contain a non-OK ABCI code.\n\n        Please refer to\n        https://docs.tendermint.com/master/tendermint-core/using-tendermint.html#formatting\n        for formatting/encoding rules.\n      parameters:\n        - in: query\n          name: tx\n          required: true\n          schema:\n            type: string\n            example: \"785\"\n          description: The transaction\n      responses:\n        \"200\":\n          description: empty answer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResponse\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /check_tx:\n    get:\n      summary: Checks the transaction without executing it.\n      tags:\n        - Tx\n      operationId: check_tx\n      description: |\n        The transaction won't be added to the mempool.\n\n        Please refer to\n        https://docs.tendermint.com/master/tendermint-core/using-tendermint.html#formatting\n        for formatting/encoding rules.\n      parameters:\n        - in: query\n          name: tx\n          required: true\n          schema:\n            type: string\n            example: \"785\"\n          description: The transaction\n      responses:\n        \"200\":\n          description: ABCI application's CheckTx response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckTxResponse\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /subscribe:\n    get:\n      summary: Subscribe for events via WebSocket.\n      tags:\n        - Websocket\n      operationId: subscribe\n      description: |\n        To tell which events you want, you need to provide a query. query is a\n        string, which has a form: \"condition AND condition ...\" (no OR at the\n        moment). condition has a form: \"key operation operand\". key is a string with\n        a restricted set of possible symbols ( \\t\\n\\r\\\\()\"'=\u003e\u003c are not allowed).\n        operation can be \"=\", \"\u003c\", \"\u003c=\", \"\u003e\", \"\u003e=\", \"CONTAINS\" AND \"EXISTS\". operand\n        can be a string (escaped with single quotes), number, date or time.\n\n        Examples:\n              tm.event = 'NewBlock'               # new blocks\n              tm.event = 'CompleteProposal'       # node got a complete proposal\n              tm.event = 'Tx' AND tx.hash = 'XYZ' # single transaction\n              tm.event = 'Tx' AND tx.height = 5   # all txs of the fifth block\n              tx.height = 5                       # all txs of the fifth block\n\n        Tendermint provides a few predefined keys: tm.event, tx.hash and tx.height.\n        Note for transactions, you can define additional keys by providing events with\n        DeliverTx response.\n\n        import (\n            abci \"github.com/tendermint/tendermint/abci/types\"\n            \"github.com/tendermint/tendermint/libs/pubsub/query\"\n        )\n\n        abci.ResponseDeliverTx{\n          Events: []abci.Event{\n              {\n                  Type: \"rewards.withdraw\",\n                  Attributes: abci.EventAttribute{\n                      {Key: []byte(\"address\"), Value: []byte(\"AddrA\"), Index: true},\n                      {Key: []byte(\"source\"), Value: []byte(\"SrcX\"), Index: true},\n                      {Key: []byte(\"amount\"), Value: []byte(\"...\"), Index: true},\n                      {Key: []byte(\"balance\"), Value: []byte(\"...\"), Index: true},\n                  },\n              },\n              {\n                  Type: \"rewards.withdraw\",\n                  Attributes: abci.EventAttribute{\n                      {Key: []byte(\"address\"), Value: []byte(\"AddrB\"), Index: true},\n                      {Key: []byte(\"source\"), Value: []byte(\"SrcY\"), Index: true},\n                      {Key: []byte(\"amount\"), Value: []byte(\"...\"), Index: true},\n                      {Key: []byte(\"balance\"), Value: []byte(\"...\"), Index: true},\n                  },\n              },\n              {\n                  Type: \"transfer\",\n                  Attributes: abci.EventAttribute{\n                      {Key: []byte(\"sender\"), Value: []byte(\"AddrC\"), Index: true},\n                      {Key: []byte(\"recipient\"), Value: []byte(\"AddrD\"), Index: true},\n                      {Key: []byte(\"amount\"), Value: []byte(\"...\"), Index: true},\n                  },\n              },\n          },\n        }\n\n        All events are indexed by a composite key of the form {eventType}.{evenAttrKey}.\n        In the above examples, the following keys would be indexed:\n           - rewards.withdraw.address\n           - rewards.withdraw.source\n           - rewards.withdraw.amount\n           - rewards.withdraw.balance\n           - transfer.sender\n           - transfer.recipient\n           - transfer.amount\n\n        Multiple event types with duplicate keys are allowed and are meant to\n        categorize unique and distinct events. In the above example, all events\n        indexed under the key `rewards.withdraw.address` will have the following\n        values stored and queryable:\n\n           - AddrA\n           - AddrB\n\n        To create a query for txs where address AddrA withdrew rewards:\n        query.MustParse(\"tm.event = 'Tx' AND rewards.withdraw.address = 'AddrA'\")\n\n        To create a query for txs where address AddrA withdrew rewards from source Y:\n        query.MustParse(\"tm.event = 'Tx' AND rewards.withdraw.address = 'AddrA' AND rewards.withdraw.source = 'Y'\")\n\n        To create a query for txs where AddrA transferred funds:\n        query.MustParse(\"tm.event = 'Tx' AND transfer.sender = 'AddrA'\")\n\n        The following queries would return no results:\n        query.MustParse(\"tm.event = 'Tx' AND transfer.sender = 'AddrZ'\")\n        query.MustParse(\"tm.event = 'Tx' AND rewards.withdraw.address = 'AddrZ'\")\n        query.MustParse(\"tm.event = 'Tx' AND rewards.withdraw.source = 'W'\")\n\n        See list of all possible events here\n        https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants\n\n        For complete query syntax, check out\n        https://godoc.org/github.com/tendermint/tendermint/libs/pubsub/query.\n\n        ```go\n        import rpchttp \"github.com/tendermint/rpc/client/http\"\n        import \"github.com/tendermint/tendermint/types\"\n\n        client := rpchttp.New(\"tcp:0.0.0.0:26657\", \"/websocket\")\n        err := client.Start()\n        if err != nil {\n          handle error\n        }\n        defer client.Stop()\n        ctx, cancel := context.WithTimeout(context.Background(), 1 * time.Second)\n        defer cancel()\n        query := \"tm.event = 'Tx' AND tx.height = 3\"\n        txs, err := client.Subscribe(ctx, \"test-client\", query)\n        if err != nil {\n          handle error\n        }\n\n        go func() {\n         for e := range txs {\n           fmt.Println(\"got \", e.Data.(types.EventDataTx))\n           }\n        }()\n        ```\n\n        NOTE: if you're not reading events fast enough, Tendermint might\n        terminate the subscription.\n      parameters:\n        - in: query\n          name: query\n          required: true\n          schema:\n            type: string\n            example: tm.event = 'Tx' AND tx.height = 5\n          description: |\n            query is a string, which has a form: \"condition AND condition ...\" (no OR at the\n            moment). condition has a form: \"key operation operand\". key is a string with\n            a restricted set of possible symbols ( \\t\\n\\r\\\\()\"'=\u003e\u003c are not allowed).\n            operation can be \"=\", \"\u003c\", \"\u003c=\", \"\u003e\", \"\u003e=\", \"CONTAINS\". operand can be a\n            string (escaped with single quotes), number, date or time.\n      responses:\n        \"200\":\n          description: empty answer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmptyResponse\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /unsubscribe:\n    get:\n      summary: Unsubscribe from event on Websocket\n      tags:\n        - Websocket\n      operationId: unsubscribe\n      description: |\n        ```go\n        client := rpchttp.New(\"tcp:0.0.0.0:26657\", \"/websocket\")\n        err := client.Start()\n        if err != nil {\n           handle error\n        }\n        defer client.Stop()\n        query := \"tm.event = 'Tx' AND tx.height = 3\"\n        err = client.Unsubscribe(context.Background(), \"test-client\", query)\n        if err != nil {\n           handle error\n        }\n        ```\n      parameters:\n        - in: query\n          name: query\n          required: true\n          schema:\n            type: string\n            example: tm.event = 'Tx' AND tx.height = 5\n          description: |\n            query is a string, which has a form: \"condition AND condition ...\" (no OR at the\n            moment). condition has a form: \"key operation operand\". key is a string with\n            a restricted set of possible symbols ( \\t\\n\\r\\\\()\"'=\u003e\u003c are not allowed).\n            operation can be \"=\", \"\u003c\", \"\u003c=\", \"\u003e\", \"\u003e=\", \"CONTAINS\". operand can be a\n            string (escaped with single quotes), number, date or time.\n      responses:\n        \"200\":\n          description: Answer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmptyResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /unsubscribe_all:\n    get:\n      summary: Unsubscribe from all events via WebSocket\n      tags:\n        - Websocket\n      operationId: unsubscribe_all\n      description: |\n        Unsubscribe from all events via WebSocket\n      responses:\n        \"200\":\n          description: empty answer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmptyResponse\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /health:\n    get:\n      summary: Node heartbeat\n      tags:\n        - Info\n      operationId: health\n      description: |\n        Get node health. Returns empty result (200 OK) on success, no response - in case of an error.\n      responses:\n        \"200\":\n          description: Gets Node Health\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmptyResponse\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /status:\n    get:\n      summary: Node Status\n      operationId: status\n      tags:\n        - Info\n      description: |\n        Get Tendermint status including node info, pubkey, latest block hash, app hash, block height and time.\n      responses:\n        \"200\":\n          description: Status of the node\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatusResponse\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /net_info:\n    get:\n      summary: Network informations\n      operationId: net_info\n      tags:\n        - Info\n      description: |\n        Get network info.\n      responses:\n        \"200\":\n          description: empty answer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NetInfoResponse\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /dial_seeds:\n    get:\n      summary: Dial Seeds (Unsafe)\n      operationId: dial_seeds\n      tags:\n        - Unsafe\n      description: |\n        Dial a peer, this route in under unsafe, and has to manually enabled to use\n\n          **Example:** curl 'localhost:26657/dial_seeds?seeds=\\[\"f9baeaa15fedf5e1ef7448dd60f46c01f1a9e9c4@1.2.3.4:26656\",\"0491d373a8e0fcf1023aaf18c51d6a1d0d4f31bd@5.6.7.8:26656\"\\]'\n      parameters:\n        - in: query\n          name: peers\n          description: list of seed nodes to dial\n          schema:\n            type: array\n            items:\n              type: string\n              example:\n                [\"f9baeaa15fedf5e1ef7448dd60f46c01f1a9e9c4@1.2.3.4:26656\"]\n      responses:\n        \"200\":\n          description: Dialing seeds in progress. See /net_info for details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/dialResp\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /dial_peers:\n    get:\n      summary: Add Peers/Persistent Peers (unsafe)\n      operationId: dial_peers\n      tags:\n        - Unsafe\n      description: |\n        Set a persistent peer, this route in under unsafe, and has to manually enabled to use.\n\n        **Example:** curl 'localhost:26657/dial_peers?peers=\\[\"f9baeaa15fedf5e1ef7448dd60f46c01f1a9e9c4@1.2.3.4:26656\",\"0491d373a8e0fcf1023aaf18c51d6a1d0d4f31bd@5.6.7.8:26656\"\\]\u0026persistent=false'\n      parameters:\n        - in: query\n          name: persistent\n          description: Have the peers you are dialing be persistent\n          schema:\n            type: boolean\n            example: true\n        - in: query\n          name: unconditional\n          description: Have the peers you are dialing be unconditional\n          schema:\n            type: boolean\n            example: true\n        - in: query\n          name: private\n          description: Have the peers you are dialing be private\n          schema:\n            type: boolean\n            example: true\n        - in: query\n          name: peers\n          description: array of peers to dial\n          schema:\n            type: array\n            items:\n              type: string\n              example:\n                [\"f9baeaa15fedf5e1ef7448dd60f46c01f1a9e9c4@1.2.3.4:26656\"]\n      responses:\n        \"200\":\n          description: Dialing seeds in progress. See /net_info for details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/dialResp\"\n        \"500\":\n          description: empty error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /blockchain:\n    get:\n      summary: \"Get block headers (max: 20) for minHeight \u003c= height \u003c= maxHeight.\"\n      operationId: blockchain\n      parameters:\n        - in: query\n          name: minHeight\n          description: Minimum block height to return\n          schema:\n            type: integer\n            example: 1\n        - in: query\n          name: maxHeight\n          description: Maximum block height to return\n          schema:\n            type: integer\n            example: 2\n      tags:\n        - Info\n      description: |\n        Get block headers for minHeight \u003c= height maxHeight.\n\n        At most 20 items will be returned.\n      responses:\n        \"200\":\n          description: Block headers, returned in descending order (highest first).\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockchainResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /block:\n    get:\n      summary: Get block at a specified height\n      operationId: block\n      parameters:\n        - in: query\n          name: height\n          schema:\n            type: integer\n            default: 0\n            example: 1\n          description: height to return. If no height is provided, it will fetch the latest block.\n      tags:\n        - Info\n      description: |\n        Get Block.\n      responses:\n        \"200\":\n          description: Block informations.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /block_by_hash:\n    get:\n      summary: Get block by hash\n      operationId: block_by_hash\n      parameters:\n        - in: query\n          name: hash\n          description: block hash\n          required: true\n          schema:\n            type: string\n            example: \"0xD70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED\"\n      tags:\n        - Info\n      description: |\n        Get Block By Hash.\n      responses:\n        \"200\":\n          description: Block informations.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /block_results:\n    get:\n      summary: Get block results at a specified height\n      operationId: block_results\n      parameters:\n        - in: query\n          name: height\n          description: height to return. If no height is provided, it will fetch informations regarding the latest block.\n          schema:\n            type: integer\n            default: 0\n            example: 1\n      tags:\n        - Info\n      description: |\n        Get block_results.\n      responses:\n        \"200\":\n          description: Block results.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockResultsResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /commit:\n    get:\n      summary: Get commit results at a specified height\n      operationId: commit\n      parameters:\n        - in: query\n          name: height\n          description: height to return. If no height is provided, it will fetch commit informations regarding the latest block.\n          schema:\n            type: integer\n            default: 0\n            example: 1\n      tags:\n        - Info\n      description: |\n        Get Commit.\n      responses:\n        \"200\":\n          description: |\n            Commit results.\n\n            canonical switches from false to true for block H once block H+1 has been committed. Until then it's subjective and only reflects what this node has seen so far.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /validators:\n    get:\n      summary: Get validator set at a specified height\n      operationId: validators\n      parameters:\n        - in: query\n          name: height\n          description: height to return. If no height is provided, it will fetch validator set which corresponds to the latest block.\n          schema:\n            type: integer\n            default: 0\n            example: 1\n        - in: query\n          name: page\n          description: \"Page number (1-based)\"\n          required: false\n          schema:\n            type: integer\n            default: 1\n            example: 1\n        - in: query\n          name: per_page\n          description: \"Number of entries per page (max: 100)\"\n          required: false\n          schema:\n            type: integer\n            example: 30\n            default: 30\n      tags:\n        - Info\n      description: |\n        Get Validators. Validators are sorted by voting power.\n      responses:\n        \"200\":\n          description: Commit results.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidatorsResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /genesis:\n    get:\n      summary: Get Genesis\n      operationId: genesis\n      tags:\n        - Info\n      description: |\n        Get genesis.\n      responses:\n        \"200\":\n          description: Genesis results.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenesisResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /dump_consensus_state:\n    get:\n      summary: Get consensus state\n      operationId: dump_consensus_state\n      tags:\n        - Info\n      description: |\n        Get consensus state.\n\n        Not safe to call from inside the ABCI application during a block execution.\n      responses:\n        \"200\":\n          description: |\n            Complete consensus state.\n\n            See https://pkg.go.dev/github.com/tendermint/tendermint/types?tab=doc#Vote.String for Vote string description.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DumpConsensusResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /consensus_state:\n    get:\n      summary: Get consensus state\n      operationId: consensus_state\n      tags:\n        - Info\n      description: |\n        Get consensus state.\n\n        Not safe to call from inside the ABCI application during a block execution.\n      responses:\n        \"200\":\n          description: consensus state results.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConsensusStateResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /consensus_params:\n    get:\n      summary: Get consensus parameters\n      operationId: consensus_params\n      parameters:\n        - in: query\n          name: height\n          description: height to return. If no height is provided, it will fetch commit informations regarding the latest block.\n          schema:\n            type: integer\n            default: 0\n            example: 1\n      tags:\n        - Info\n      description: |\n        Get consensus parameters.\n      responses:\n        \"200\":\n          description: consensus parameters results.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConsensusParamsResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /unconfirmed_txs:\n    get:\n      summary: Get the list of unconfirmed transactions\n      operationId: unconfirmed_txs\n      parameters:\n        - in: query\n          name: limit\n          description: Maximum number of unconfirmed transactions to return (max 100)\n          required: false\n          schema:\n            type: integer\n            default: 30\n            example: 1\n      tags:\n        - Info\n      description: |\n        Get list of unconfirmed transactions\n      responses:\n        \"200\":\n          description: List of unconfirmed transactions\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnconfirmedTransactionsResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /num_unconfirmed_txs:\n    get:\n      summary: Get data about unconfirmed transactions\n      operationId: num_unconfirmed_txs\n      tags:\n        - Info\n      description: |\n        Get data about unconfirmed transactions\n      responses:\n        \"200\":\n          description: status about unconfirmed transactions\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NumUnconfirmedTransactionsResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /tx_search:\n    get:\n      summary: Search for transactions\n      description: |\n        Search for transactions w/ their results.\n\n        See /subscribe for the query syntax.\n      operationId: tx_search\n      parameters:\n        - in: query\n          name: query\n          description: Query\n          required: true\n          schema:\n            type: string\n            example: \"tx.height=1000\"\n        - in: query\n          name: prove\n          description: Include proofs of the transactions inclusion in the block\n          required: false\n          schema:\n            type: boolean\n            default: false\n            example: true\n        - in: query\n          name: page\n          description: \"Page number (1-based)\"\n          required: false\n          schema:\n            type: integer\n            default: 1\n            example: 1\n        - in: query\n          name: per_page\n          description: \"Number of entries per page (max: 100)\"\n          required: false\n          schema:\n            type: integer\n            default: 30\n            example: 30\n        - in: query\n          name: order_by\n          description: Order in which transactions are sorted (\"asc\" or \"desc\"), by height \u0026 index. If empty, default sorting will be still applied.\n          required: false\n          schema:\n            type: string\n            default: \"asc\"\n            example: \"asc\"\n      tags:\n        - Info\n      responses:\n        \"200\":\n          description: List of unconfirmed transactions\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TxSearchResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /block_search:\n    get:\n      summary: Search for blocks by BeginBlock and EndBlock events\n      description: |\n        Search for blocks by BeginBlock and EndBlock events.\n\n        See /subscribe for the query syntax.\n      operationId: block_search\n      parameters:\n        - in: query\n          name: query\n          description: Query\n          required: true\n          schema:\n            type: string\n            example: \"block.height \u003e 1000 AND valset.changed \u003e 0\"\n        - in: query\n          name: page\n          description: \"Page number (1-based)\"\n          required: false\n          schema:\n            type: integer\n            default: 1\n            example: 1\n        - in: query\n          name: per_page\n          description: \"Number of entries per page (max: 100)\"\n          required: false\n          schema:\n            type: integer\n            default: 30\n            example: 30\n        - in: query\n          name: order_by\n          description: Order in which blocks are sorted (\"asc\" or \"desc\"), by height. If empty, default sorting will be still applied.\n          required: false\n          schema:\n            type: string\n            default: \"desc\"\n            example: \"asc\"\n      tags:\n        - Info\n      responses:\n        \"200\":\n          description: List of paginated blocks matching the search criteria.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockSearchResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /data_commitment:\n    get:\n      summary: Generates a data commitment for a range of blocks\n      description: |\n        Generates a data commitment over an ordered list of blocks matching the query.\n\n        See /subscribe for the query syntax.\n      operationId: data_commitment\n      parameters:\n        - in: query\n          name: query\n          description: Query\n          required: true\n          schema:\n            type: string\n            example: \"block.height \u003e 1000\"\n      tags:\n        - Info\n      responses:\n        \"200\":\n          description: Hex representation of the data commitment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataCommitmentResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /tx:\n    get:\n      summary: Get transactions by hash\n      operationId: tx\n      parameters:\n        - in: query\n          name: hash\n          description: transaction Hash to retrive\n          required: true\n          schema:\n            type: string\n            example: \"0xD70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED\"\n        - in: query\n          name: prove\n          description: Include proofs of the transactions inclusion in the block\n          required: false\n          schema:\n            type: boolean\n            example: true\n            default: false\n      tags:\n        - Info\n      description: |\n        Get a trasasction\n      responses:\n        \"200\":\n          description: Get a transaction`\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TxResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /abci_info:\n    get:\n      summary: Get some info about the application.\n      operationId: abci_info\n      tags:\n        - ABCI\n      description: |\n        Get some info about the application.\n      responses:\n        \"200\":\n          description: Get some info about the application.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ABCIInfoResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /abci_query:\n    get:\n      summary: Query the application for some information.\n      operationId: abci_query\n      parameters:\n        - in: query\n          name: path\n          description: Path to the data (\"/a/b/c\")\n          required: true\n          schema:\n            type: string\n            example: \"/a/b/c\"\n        - in: query\n          name: data\n          description: Data\n          required: true\n          schema:\n            type: string\n            example: \"IHAVENOIDEA\"\n        - in: query\n          name: height\n          description: Height (0 means latest)\n          required: false\n          schema:\n            type: integer\n            example: 1\n            default: 0\n        - in: query\n          name: prove\n          description: Include proofs of the transactions inclusion in the block\n          required: false\n          schema:\n            type: boolean\n            example: true\n            default: false\n      tags:\n        - ABCI\n      description: |\n        Query the application for some information.\n      responses:\n        \"200\":\n          description: Response of the submitted query\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ABCIQueryResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /broadcast_evidence:\n    get:\n      summary: Broadcast evidence of the misbehavior.\n      operationId: broadcast_evidence\n      parameters:\n        - in: query\n          name: evidence\n          description: JSON evidence\n          required: true\n          schema:\n            type: string\n            example: \"JSON_EVIDENCE_encoded\"\n      tags:\n        - Info\n      description: |\n        Broadcast evidence of the misbehavior.\n      responses:\n        \"200\":\n          description: Broadcast evidence of the misbehavior.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastEvidenceResponse\"\n        \"500\":\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\ncomponents:\n  schemas:\n    JSONRPC:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 0\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n    EmptyResponse:\n      description: Empty Response\n      allOf:\n        - $ref: \"#/components/schemas/JSONRPC\"\n        - type: object\n          properties:\n            result:\n              type: object\n              additionalProperties: {}\n    ErrorResponse:\n      description: Error Response\n      allOf:\n        - $ref: \"#/components/schemas/JSONRPC\"\n        - type: object\n          properties:\n            error:\n              type: string\n              example: \"Description of failure\"\n    ProtocolVersion:\n      type: object\n      properties:\n        p2p:\n          type: string\n          example: \"7\"\n        block:\n          type: string\n          example: \"10\"\n        app:\n          type: string\n          example: \"0\"\n    PubKey:\n      type: object\n      properties:\n        type:\n          type: string\n          example: \"tendermint/PubKeyEd25519\"\n        value:\n          type: string\n          example: \"A6DoBUypNtUAyEHWtQ9bFjfNg8Bo9CrnkUGl6k6OHN4=\"\n    NodeInfo:\n      type: object\n      properties:\n        protocol_version:\n          $ref: \"#/components/schemas/ProtocolVersion\"\n        id:\n          type: string\n          example: \"5576458aef205977e18fd50b274e9b5d9014525a\"\n        listen_addr:\n          type: string\n          example: \"tcp:0.0.0.0:26656\"\n        network:\n          type: string\n          example: \"cosmoshub-2\"\n        version:\n          type: string\n          example: \"0.32.1\"\n        channels:\n          type: string\n          example: \"4020212223303800\"\n        moniker:\n          type: string\n          example: \"moniker-node\"\n        other:\n          type: object\n          properties:\n            tx_index:\n              type: string\n              example: \"on\"\n            rpc_address:\n              type: string\n              example: \"tcp:0.0.0.0:26657\"\n    SyncInfo:\n      type: object\n      properties:\n        latest_block_hash:\n          type: string\n          example: \"790BA84C3545FCCC49A5C629CEE6EA58A6E875C3862175BDC11EE7AF54703501\"\n        latest_app_hash:\n          type: string\n          example: \"C9AEBB441B787D9F1D846DE51F3826F4FD386108B59B08239653ABF59455C3F8\"\n        latest_block_height:\n          type: string\n          example: \"1262196\"\n        latest_block_time:\n          type: string\n          example: \"2019-08-01T11:52:22.818762194Z\"\n        earliest_block_hash:\n          type: string\n          example: \"790BA84C3545FCCC49A5C629CEE6EA58A6E875C3862175BDC11EE7AF54703501\"\n        earliest_app_hash:\n          type: string\n          example: \"C9AEBB441B787D9F1D846DE51F3826F4FD386108B59B08239653ABF59455C3F8\"\n        earliest_block_height:\n          type: string\n          example: \"1262196\"\n        earliest_block_time:\n          type: string\n          example: \"2019-08-01T11:52:22.818762194Z\"\n        catching_up:\n          type: boolean\n          example: false\n    ValidatorInfo:\n      type: object\n      properties:\n        address:\n          type: string\n          example: \"5D6A51A8E9899C44079C6AF90618BA0369070E6E\"\n        pub_key:\n          $ref: \"#/components/schemas/PubKey\"\n        voting_power:\n          type: string\n          example: \"0\"\n    Status:\n      description: Status Response\n      type: object\n      properties:\n        node_info:\n          $ref: \"#/components/schemas/NodeInfo\"\n        sync_info:\n          $ref: \"#/components/schemas/SyncInfo\"\n        validator_info:\n          $ref: \"#/components/schemas/ValidatorInfo\"\n    StatusResponse:\n      description: Status Response\n      allOf:\n        - $ref: \"#/components/schemas/JSONRPC\"\n        - type: object\n          properties:\n            result:\n              $ref: \"#/components/schemas/Status\"\n    Monitor:\n      type: object\n      properties:\n        Active:\n          type: boolean\n          example: true\n        Start:\n          type: string\n          example: \"2019-07-31T14:31:28.66Z\"\n        Duration:\n          type: string\n          example: \"168901060000000\"\n        Idle:\n          type: string\n          example: \"168901040000000\"\n        Bytes:\n          type: string\n          example: \"5\"\n        Samples:\n          type: string\n          example: \"1\"\n        InstRate:\n          type: string\n          example: \"0\"\n        CurRate:\n          type: string\n          example: \"0\"\n        AvgRate:\n          type: string\n          example: \"0\"\n        PeakRate:\n          type: string\n          example: \"0\"\n        BytesRem:\n          type: string\n          example: \"0\"\n        TimeRem:\n          type: string\n          example: \"0\"\n        Progress:\n          type: integer\n          example: 0\n    Channel:\n      type: object\n      properties:\n        ID:\n          type: integer\n          example: 48\n        SendQueueCapacity:\n          type: string\n          example: \"1\"\n        SendQueueSize:\n          type: string\n          example: \"0\"\n        Priority:\n          type: string\n          example: \"5\"\n        RecentlySent:\n          type: string\n          example: \"0\"\n    ConnectionStatus:\n      type: object\n      properties:\n        Duration:\n          type: string\n          example: \"168901057956119\"\n        SendMonitor:\n          $ref: \"#/components/schemas/Monitor\"\n        RecvMonitor:\n          $ref: \"#/components/schemas/Monitor\"\n        Channels:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Channel\"\n    Peer:\n      type: object\n      properties:\n        node_info:\n          $ref: \"#/components/schemas/NodeInfo\"\n        is_outbound:\n          type: boolean\n          example: true\n        connection_status:\n          $ref: \"#/components/schemas/ConnectionStatus\"\n        remote_ip:\n          type: string\n          example: \"95.179.155.35\"\n    NetInfo:\n      type: object\n      properties:\n        listening:\n          type: boolean\n          example: true\n        listeners:\n          type: array\n          items:\n            type: string\n            example: \"Listener(@)\"\n        n_peers:\n          type: string\n          example: \"1\"\n        peers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Peer\"\n    NetInfoResponse:\n      description: NetInfo Response\n      allOf:\n        - $ref: \"#/components/schemas/JSONRPC\"\n        - type: object\n          properties:\n            result:\n              $ref: \"#/components/schemas/NetInfo\"\n\n    BlockMeta:\n      type: object\n      properties:\n        block_id:\n          $ref: \"#/components/schemas/BlockID\"\n        block_size:\n          type: integer\n          example: 1000000\n        header:\n          $ref: \"#/components/schemas/BlockHeader\"\n        num_txs:\n          type: string\n          example: \"54\"\n\n    Blockchain:\n      type: object\n      required:\n        - \"last_height\"\n        - \"block_metas\"\n      properties:\n        last_height:\n          type: string\n          example: \"1276718\"\n        block_metas:\n          type: array\n          items:\n            $ref: \"#/components/schemas/BlockMeta\"\n\n    BlockchainResponse:\n      description: Blockchain info\n      allOf:\n        - $ref: \"#/components/schemas/JSONRPC\"\n        - type: object\n          properties:\n            result:\n              $ref: \"#/components/schemas/Blockchain\"\n\n    Commit:\n      required:\n        - \"type\"\n        - \"height\"\n        - \"round\"\n        - \"block_id\"\n        - \"timestamp\"\n        - \"validator_address\"\n        - \"validator_index\"\n        - \"signature\"\n      properties:\n        type:\n          type: integer\n          example: 2\n        height:\n          type: string\n          example: \"1262085\"\n        round:\n          type: integer\n          example: 0\n        block_id:\n          $ref: \"#/components/schemas/BlockID\"\n        timestamp:\n          type: string\n          example: \"2019-08-01T11:39:38.867269833Z\"\n        validator_address:\n          type: string\n          example: \"000001E443FD237E4B616E2FA69DF4EE3D49A94F\"\n        validator_index:\n          type: integer\n          example: 0\n        signature:\n          type: string\n          example: \"DBchvucTzAUEJnGYpNvMdqLhBAHG4Px8BsOBB3J3mAFCLGeuG7uJqy+nVngKzZdPhPi8RhmE/xcw/M9DOJjEDg==\"\n\n    Block:\n      type: object\n      properties:\n        header:\n          $ref: \"#/components/schemas/BlockHeader\"\n        data:\n          type: array\n          items:\n            type: string\n            example: \"yQHwYl3uCkKoo2GaChRnd+THLQ2RM87nEZrE19910Z28ABIUWW/t8AtIMwcyU0sT32RcMDI9GF0aEAoFdWF0b20SBzEwMDAwMDASEwoNCgV1YXRvbRIEMzEwMRCd8gEaagom61rphyEDoJPxlcjRoNDtZ9xMdvs+lRzFaHe2dl2P5R2yVCWrsHISQKkqX5H1zXAIJuC57yw0Yb03Fwy75VRip0ZBtLiYsUqkOsPUoQZAhDNP+6LY+RUwz/nVzedkF0S29NZ32QXdGv0=\"\n        evidence:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Evidence\"\n        last_commit:\n          type: object\n          properties:\n            height:\n              type: integer\n            round:\n              type: integer\n            block_id:\n              $ref: \"#/components/schemas/BlockID\"\n            signatures:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Commit\"\n\n    Evidence:\n      type: object\n      properties:\n        type:\n          type: string\n        height:\n          type: integer\n        time:\n          type: integer\n        total_voting_power:\n          type: integer\n        validator:\n          $ref: \"#/components/schemas/Validator\"\n\n    BlockComplete:\n      type: object\n      properties:\n        block_id:\n          $ref: \"#/components/schemas/BlockID\"\n        block:\n          $ref: \"#/components/schemas/Block\"\n    BlockResponse:\n      description: Blockc info\n      allOf:\n        - $ref: \"#/components/schemas/JSONRPC\"\n        - type: object\n          properties:\n            result:\n              $ref: \"#/components/schemas/BlockComplete\"\n\n    ################## FROM NOW ON NEEDS REFACTOR ##################\n    BlockResultsResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          type: object\n          required:\n            - \"height\"\n          properties:\n            height:\n              type: string\n              example: \"12\"\n            txs_results:\n              type: array\n              nullable: true\n              items:\n                type: object\n                properties:\n                  code:\n                    type: string\n                    example: \"0\"\n                  data:\n                    type: string\n                    example: \"\"\n                  log:\n                    type: string\n                    example: \"not enough gas\"\n                  info:\n                    type: string\n                    example: \"\"\n                  gas_wanted:\n                    type: string\n                    example: \"100\"\n                  gas_used:\n                    type: string\n                    example: \"100\"\n                  events:\n                    type: array\n                    nullable: true\n                    items:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          example: \"app\"\n                        attributes:\n                          type: array\n                          nullable: false\n                          items:\n                            $ref: \"#/components/schemas/Event\"\n                  codespace:\n                    type: string\n                    example: \"ibc\"\n            begin_block_events:\n              type: array\n              nullable: true\n              items:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: \"app\"\n                  attributes:\n                    type: array\n                    nullable: false\n                    items:\n                      $ref: \"#/components/schemas/Event\"\n            end_block:\n              type: array\n              nullable: true\n              items:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: \"app\"\n                  attributes:\n                    type: array\n                    nullable: false\n                    items:\n                      $ref: \"#/components/schemas/Event\"\n            validator_updates:\n              type: array\n              nullable: true\n              items:\n                type: object\n                properties:\n                  pub_key:\n                    type: object\n                    required:\n                      - \"type\"\n                      - \"value\"\n                    properties:\n                      type:\n                        type: string\n                        example: \"tendermint/PubKeyEd25519\"\n                      value:\n                        type: string\n                        example: \"9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM=\"\n                  power:\n                    type: string\n                    example: \"300\"\n            consensus_params_updates:\n              $ref: \"#/components/schemas/ConsensusParams\"\n\n    CommitResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"signed_header\"\n            - \"canonical\"\n          properties:\n            signed_header:\n              required:\n                - \"header\"\n                - \"commit\"\n              properties:\n                header:\n                  $ref: \"#/components/schemas/BlockHeader\"\n                commit:\n                  required:\n                    - \"height\"\n                    - \"round\"\n                    - \"block_id\"\n                    - \"signatures\"\n                  properties:\n                    height:\n                      type: string\n                      example: \"1311801\"\n                    round:\n                      type: integer\n                      example: 0\n                    block_id:\n                      $ref: \"#/components/schemas/BlockID\"\n                    signatures:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          block_id_flag:\n                            type: integer\n                            example: 2\n                          validator_address:\n                            type: string\n                            example: \"000001E443FD237E4B616E2FA69DF4EE3D49A94F\"\n                          timestamp:\n                            type: string\n                            example: \"2019-04-22T17:01:58.376629719Z\"\n                          signature:\n                            type: string\n                            example: \"14jaTQXYRt8kbLKEhdHq7AXycrFImiLuZx50uOjs2+Zv+2i7RTG/jnObD07Jo2ubZ8xd7bNBJMqkgtkd0oQHAw==\"\n                  type: object\n              type: object\n            canonical:\n              type: boolean\n              example: true\n          type: object\n    ValidatorsResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"block_height\"\n            - \"validators\"\n          properties:\n            block_height:\n              type: string\n              example: \"55\"\n            validators:\n              type: array\n              items:\n                $ref: \"#/components/schemas/ValidatorPriority\"\n            count:\n              type: string\n              example: \"1\"\n            total:\n              type: string\n              example: \"25\"\n          type: object\n    GenesisResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          type: object\n          required:\n            - \"genesis\"\n          properties:\n            genesis:\n              type: object\n              required:\n                - \"genesis_time\"\n                - \"chain_id\"\n                - \"initial_height\"\n                - \"consensus_params\"\n                - \"validators\"\n                - \"app_hash\"\n              properties:\n                genesis_time:\n                  type: string\n                  example: \"2019-04-22T17:00:00Z\"\n                chain_id:\n                  type: string\n                  example: \"cosmoshub-2\"\n                initial_height:\n                  type: string\n                  example: \"2\"\n                consensus_params:\n                  $ref: \"#/components/schemas/ConsensusParams\"\n                validators:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      address:\n                        type: string\n                        example: \"B00A6323737F321EB0B8D59C6FD497A14B60938A\"\n                      pub_key:\n                        required:\n                          - \"type\"\n                          - \"value\"\n                        properties:\n                          type:\n                            type: string\n                            example: \"tendermint/PubKeyEd25519\"\n                          value:\n                            type: string\n                            example: \"cOQZvh/h9ZioSeUMZB/1Vy1Xo5x2sjrVjlE/qHnYifM=\"\n                        type: object\n                      power:\n                        type: string\n                        example: \"9328525\"\n                      name:\n                        type: string\n                        example: \"Certus One\"\n                app_hash:\n                  type: string\n                  example: \"\"\n                app_state:\n                  properties: {}\n                  type: object\n\n    DumpConsensusResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"round_state\"\n            - \"peers\"\n          properties:\n            round_state:\n              required:\n                - \"height\"\n                - \"round\"\n                - \"step\"\n                - \"start_time\"\n                - \"commit_time\"\n                - \"validators\"\n                - \"proposal\"\n                - \"proposal_block\"\n                - \"proposal_block_parts\"\n                - \"locked_round\"\n                - \"locked_block\"\n                - \"locked_block_parts\"\n                - \"valid_round\"\n                - \"valid_block\"\n                - \"valid_block_parts\"\n                - \"votes\"\n                - \"commit_round\"\n                - \"last_commit\"\n                - \"last_validators\"\n                - \"triggered_timeout_precommit\"\n              properties:\n                height:\n                  type: string\n                  example: \"1311801\"\n                round:\n                  type: integer\n                  example: 0\n                step:\n                  type: integer\n                  example: 3\n                start_time:\n                  type: string\n                  example: \"2019-08-05T11:28:49.064658805Z\"\n                commit_time:\n                  type: string\n                  example: \"2019-08-05T11:28:44.064658805Z\"\n                validators:\n                  required:\n                    - \"validators\"\n                    - \"proposer\"\n                  properties:\n                    validators:\n                      type: array\n                      items:\n                        $ref: \"#/components/schemas/ValidatorPriority\"\n                    proposer:\n                      $ref: \"#/components/schemas/ValidatorPriority\"\n                  type: object\n                locked_round:\n                  type: integer\n                  example: -1\n                valid_round:\n                  type: string\n                  example: \"-1\"\n                votes:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      round:\n                        type: string\n                        example: \"0\"\n                      prevotes:\n                        type: array\n                        nullable: true\n                        items:\n                          type: string\n                        example:\n                          - \"nil-Vote\"\n                          - \"Vote{19:46A3F8B8393B 1311801/00/1(Prevote) 000000000000 64CE682305CB @ 2019-08-05T11:28:47.374703444Z}\"\n                      prevotes_bit_array:\n                        type: string\n                        example: \"BA{100:___________________x________________________________________________________________________________} 209706/170220253 = 0.00\"\n                      precommits:\n                        type: array\n                        nullable: true\n                        items:\n                          type: string\n                        example:\n                          - \"nil-Vote\"\n                      precommits_bit_array:\n                        type: string\n                        example: \"BA{100:____________________________________________________________________________________________________} 0/170220253 = 0.00\"\n                commit_round:\n                  type: integer\n                  example: -1\n                last_commit:\n                  nullable: true\n                  required:\n                    - \"votes\"\n                    - \"votes_bit_array\"\n                    - \"peer_maj_23s\"\n                  properties:\n                    votes:\n                      type: array\n                      items:\n                        type: string\n                      example:\n                        - \"Vote{0:000001E443FD 1311800/00/2(Precommit) 3071ADB27D1A 77EE1B6B6847 @ 2019-08-05T11:28:43.810128139Z}\"\n                    votes_bit_array:\n                      type: string\n                      example: \"BA{100:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 170220253/170220253 = 1.00\"\n                    peer_maj_23s:\n                      properties: {}\n                      type: object\n                  type: object\n                last_validators:\n                  required:\n                    - \"validators\"\n                    - \"proposer\"\n                  properties:\n                    validators:\n                      type: array\n                      items:\n                        $ref: \"#/components/schemas/ValidatorPriority\"\n                    proposer:\n                      $ref: \"#/components/schemas/ValidatorPriority\"\n                  type: object\n                triggered_timeout_precommit:\n                  type: boolean\n                  example: false\n              type: object\n            peers:\n              type: array\n              items:\n                type: object\n                properties:\n                  node_address:\n                    type: string\n                    example: \"357f6a6c1d27414579a8185060aa8adf9815c43c@68.183.41.207:26656\"\n                  peer_state:\n                    required:\n                      - \"round_state\"\n                      - \"stats\"\n                    properties:\n                      round_state:\n                        required:\n                          - \"height\"\n                          - \"round\"\n                          - \"step\"\n                          - \"start_time\"\n                          - \"proposal\"\n                          - \"proposal_block_parts_header\"\n                          - \"proposal_block_parts\"\n                          - \"proposal_pol_round\"\n                          - \"proposal_pol\"\n                          - \"prevotes\"\n                          - \"precommits\"\n                          - \"last_commit_round\"\n                          - \"last_commit\"\n                          - \"catchup_commit_round\"\n                          - \"catchup_commit\"\n                        properties:\n                          height:\n                            type: string\n                            example: \"1311801\"\n                          round:\n                            type: string\n                            example: \"0\"\n                          step:\n                            type: integer\n                            example: 3\n                          start_time:\n                            type: string\n                            example: \"2019-08-05T11:28:49.21730864Z\"\n                          proposal:\n                            type: boolean\n                            example: false\n                          proposal_block_parts_header:\n                            required:\n                              - \"total\"\n                              - \"hash\"\n                            properties:\n                              total:\n                                type: integer\n                                example: 0\n                              hash:\n                                type: string\n                                example: \"\"\n                            type: object\n                          proposal_pol_round:\n                            nullable: true\n                            type: integer\n                            example: -1\n                          proposal_pol:\n                            nullable: true\n                            type: string\n                            example: \"____________________________________________________________________________________________________\"\n                          prevotes:\n                            nullable: true\n                            type: string\n                            example: \"___________________x________________________________________________________________________________\"\n                          precommits:\n                            nullable: true\n                            type: string\n                            example: \"____________________________________________________________________________________________________\"\n                          last_commit_round:\n                            nullable: true\n                            type: integer\n                            example: 0\n                          last_commit:\n                            nullable: true\n                            type: string\n                            example: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n                          catchup_commit_round:\n                            type: integer\n                            nullable: true\n                            example: -1\n                          catchup_commit:\n                            nullable: true\n                            type: string\n                            example: \"____________________________________________________________________________________________________\"\n                        type: object\n                      stats:\n                        required:\n                          - \"votes\"\n                          - \"block_parts\"\n                        properties:\n                          votes:\n                            type: string\n                            example: \"1159558\"\n                          block_parts:\n                            type: string\n                            example: \"4786\"\n                        type: object\n                    type: object\n          type: object\n\n    ConsensusStateResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"round_state\"\n          properties:\n            round_state:\n              required:\n                - \"height/round/step\"\n                - \"start_time\"\n                - \"proposal_block_hash\"\n                - \"locked_block_hash\"\n                - \"valid_block_hash\"\n                - \"height_vote_set\"\n                - \"proposer\"\n              properties:\n                height/round/step:\n                  type: string\n                  example: \"1262197/0/8\"\n                start_time:\n                  type: string\n                  example: \"2019-08-01T11:52:38.962730289Z\"\n                proposal_block_hash:\n                  type: string\n                  example: \"634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009\"\n                locked_block_hash:\n                  type: string\n                  example: \"634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009\"\n                valid_block_hash:\n                  type: string\n                  example: \"634ADAF1F402663BEC2ABC340ECE8B4B45AA906FA603272ACC5F5EED3097E009\"\n                height_vote_set:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      round:\n                        type: integer\n                        example: 0\n                      prevotes:\n                        type: array\n                        items:\n                          type: string\n                        example:\n                          - \"Vote{0:000001E443FD 1262197/00/1(Prevote) 634ADAF1F402 7BB974E1BA40 @ 2019-08-01T11:52:35.513572509Z}\"\n                          - \"nil-Vote\"\n                      prevotes_bit_array:\n                        type: string\n                        example: \"BA{100:xxxxxxxxxxxxxxxxx_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 169753436/170151262 = 1.00\"\n                      precommits:\n                        type: array\n                        items:\n                          type: string\n                        example:\n                          - \"Vote{5:18C78D135C9D 1262197/00/2(Precommit) 634ADAF1F402 8B5EFFFEABCD @ 2019-08-01T11:52:36.25600005Z}\"\n                          - \"nil-Vote\"\n                      precommits_bit_array:\n                        type: string\n                        example: \"BA{100:xxxxxx_xxxxx_xxxx_x_xxx_xx_xx_xx__x_x_x__xxxxxxxxxxxxxx_xxxx_xx_xxxxxx_xxxxxxxx_xxxx_xxx_x_xxxx__xxx} 118726247/170151262 = 0.70\"\n                proposer:\n                  type: object\n                  properties:\n                    address:\n                      type: string\n                      example: \"D540AB022088612AC74B287D076DBFBC4A377A2E\"\n                    index:\n                      type: integer\n                      example: 0\n              type: object\n          type: object\n\n    ConsensusParamsResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          type: object\n          required:\n            - \"block_height\"\n            - \"consensus_params\"\n          properties:\n            block_height:\n              type: string\n              example: \"1\"\n            consensus_params:\n              $ref: \"#/components/schemas/ConsensusParams\"\n\n    NumUnconfirmedTransactionsResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"n_txs\"\n            - \"total\"\n            - \"total_bytes\"\n          properties:\n            n_txs:\n              type: string\n              example: \"31\"\n            total:\n              type: string\n              example: \"82\"\n            total_bytes:\n              type: string\n              example: \"19974\"\n          #          txs:\n          #            type: array\n          #            nullable: true\n          #            items:\n          #              type: string\n          #              nullable: true\n          #            example:\n          #              - \"gAPwYl3uCjCMTXENChSMnIkb5ZpYHBKIZqecFEV2tuZr7xIUA75/FmYq9WymsOBJ0XSJ8yV8zmQKMIxNcQ0KFIyciRvlmlgcEohmp5wURXa25mvvEhQbrvwbvlNiT+Yjr86G+YQNx7kRVgowjE1xDQoUjJyJG+WaWBwSiGannBRFdrbma+8SFK2m+1oxgILuQLO55n8mWfnbIzyPCjCMTXENChSMnIkb5ZpYHBKIZqecFEV2tuZr7xIUQNGfkmhTNMis4j+dyMDIWXdIPiYKMIxNcQ0KFIyciRvlmlgcEohmp5wURXa25mvvEhS8sL0D0wwgGCItQwVowak5YB38KRIUCg4KBXVhdG9tEgUxMDA1NBDoxRgaagom61rphyECn8x7emhhKdRCB2io7aS/6Cpuq5NbVqbODmqOT3jWw6kSQKUresk+d+Gw0BhjiggTsu8+1voW+VlDCQ1GRYnMaFOHXhyFv7BCLhFWxLxHSAYT8a5XqoMayosZf9mANKdXArA=\"\n          type: object\n\n    UnconfirmedTransactionsResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"n_txs\"\n            - \"total\"\n            - \"total_bytes\"\n            - \"txs\"\n          properties:\n            n_txs:\n              type: string\n              example: \"82\"\n            total:\n              type: string\n              example: \"82\"\n            total_bytes:\n              type: string\n              example: \"19974\"\n            txs:\n              type: array\n              nullable: true\n              items:\n                type: string\n                nullable: true\n              example:\n                - \"gAPwYl3uCjCMTXENChSMnIkb5ZpYHBKIZqecFEV2tuZr7xIUA75/FmYq9WymsOBJ0XSJ8yV8zmQKMIxNcQ0KFIyciRvlmlgcEohmp5wURXa25mvvEhQbrvwbvlNiT+Yjr86G+YQNx7kRVgowjE1xDQoUjJyJG+WaWBwSiGannBRFdrbma+8SFK2m+1oxgILuQLO55n8mWfnbIzyPCjCMTXENChSMnIkb5ZpYHBKIZqecFEV2tuZr7xIUQNGfkmhTNMis4j+dyMDIWXdIPiYKMIxNcQ0KFIyciRvlmlgcEohmp5wURXa25mvvEhS8sL0D0wwgGCItQwVowak5YB38KRIUCg4KBXVhdG9tEgUxMDA1NBDoxRgaagom61rphyECn8x7emhhKdRCB2io7aS/6Cpuq5NbVqbODmqOT3jWw6kSQKUresk+d+Gw0BhjiggTsu8+1voW+VlDCQ1GRYnMaFOHXhyFv7BCLhFWxLxHSAYT8a5XqoMayosZf9mANKdXArA=\"\n          type: object\n\n    TxSearchResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"txs\"\n            - \"total_count\"\n          properties:\n            txs:\n              type: array\n              items:\n                type: object\n                properties:\n                  hash:\n                    type: string\n                    example: \"D70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED\"\n                  height:\n                    type: string\n                    example: \"1000\"\n                  index:\n                    type: integer\n                    example: 0\n                  tx_result:\n                    required:\n                      - \"log\"\n                      - \"gas_wanted\"\n                      - \"gas_used\"\n                      - \"tags\"\n                    properties:\n                      log:\n                        type: string\n                        example: '[{\"msg_index\":\"0\",\"success\":true,\"log\":\"\"}]'\n                      gas_wanted:\n                        type: string\n                        example: \"200000\"\n                      gas_used:\n                        type: string\n                        example: \"28596\"\n                      tags:\n                        $ref: \"#/components/schemas/Event\"\n                    type: object\n                  tx:\n                    type: string\n                    example: \"5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU=\"\n                  proof:\n                    required:\n                      - \"RootHash\"\n                      - \"Data\"\n                      - \"Proof\"\n                    properties:\n                      RootHash:\n                        type: string\n                        example: \"72FE6BF6D4109105357AECE0A82E99D0F6288854D16D8767C5E72C57F876A14D\"\n                      Data:\n                        type: string\n                        example: \"5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU=\"\n                      Proof:\n                        required:\n                          - \"total\"\n                          - \"index\"\n                          - \"leaf_hash\"\n                          - \"aunts\"\n                        properties:\n                          total:\n                            type: string\n                            example: \"2\"\n                          index:\n                            type: string\n                            example: \"0\"\n                          leaf_hash:\n                            type: string\n                            example: \"eoJxKCzF3m72Xiwb/Q43vJ37/2Sx8sfNS9JKJohlsYI=\"\n                          aunts:\n                            type: array\n                            items:\n                              type: string\n                            example:\n                              - \"eWb+HG/eMmukrQj4vNGyFYb3nKQncAWacq4HF5eFzDY=\"\n                        type: object\n                    type: object\n            total_count:\n              type: string\n              example: \"2\"\n          type: object\n\n    DataCommitmentResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"dataCommitment\"\n          properties:\n            dataCommitment:\n              type: string\n              example: \"D70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED\"\n          type: object\n\n    TxResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"hash\"\n            - \"height\"\n            - \"index\"\n            - \"tx_result\"\n            - \"tx\"\n          properties:\n            hash:\n              type: string\n              example: \"D70952032620CC4E2737EB8AC379806359D8E0B17B0488F627997A0B043ABDED\"\n            height:\n              type: string\n              example: \"1000\"\n            index:\n              type: integer\n              example: 0\n            tx_result:\n              required:\n                - \"log\"\n                - \"gas_wanted\"\n                - \"gas_used\"\n                - \"tags\"\n              properties:\n                log:\n                  type: string\n                  example: '[{\"msg_index\":\"0\",\"success\":true,\"log\":\"\"}]'\n                gas_wanted:\n                  type: string\n                  example: \"200000\"\n                gas_used:\n                  type: string\n                  example: \"28596\"\n                tags:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Event\"\n              type: object\n            tx:\n              type: string\n              example: \"5wHwYl3uCkaoo2GaChQmSIu8hxpJxLcCuIi8fiHN4TMwrRIU/Af1cEG7Rcs/6LjTl7YjRSymJfYaFAoFdWF0b20SCzE0OTk5OTk1MDAwEhMKDQoFdWF0b20SBDUwMDAQwJoMGmoKJuta6YchAwswBShaB1wkZBctLIhYqBC3JrAI28XGzxP+rVEticGEEkAc+khTkKL9CDE47aDvjEHvUNt+izJfT4KVF2v2JkC+bmlH9K08q3PqHeMI9Z5up+XMusnTqlP985KF+SI5J3ZOIhhNYWRlIGJ5IENpcmNsZSB3aXRoIGxvdmU=\"\n          type: object\n\n    ABCIInfoResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"response\"\n          properties:\n            response:\n              required:\n                - \"data\"\n                - \"app_version\"\n                - \"version\"\n              properties:\n                data:\n                  type: string\n                  example: '{\"size\":0}'\n                version:\n                  type: string\n                  example: \"0.16.1\"\n                app_version:\n                  type: string\n                  example: \"1314126\"\n              type: object\n          type: object\n\n    ABCIQueryResponse:\n      type: object\n      required:\n        - \"error\"\n        - \"result\"\n        - \"id\"\n        - \"jsonrpc\"\n      properties:\n        error:\n          type: string\n          example: \"\"\n        result:\n          required:\n            - \"response\"\n          properties:\n            response:\n              required:\n                - \"log\"\n                - \"height\"\n                - \"proof\"\n                - \"value\"\n                - \"key\"\n                - \"index\"\n                - \"code\"\n              properties:\n                log:\n                  type: string\n                  example: \"exists\"\n                height:\n                  type: string\n                  example: \"0\"\n                proof:\n                  type: string\n                  example: \"010114FED0DAD959F36091AD761C922ABA3CBF1D8349990101020103011406AA2262E2F448242DF2C2607C3CDC705313EE3B0001149D16177BC71E445476174622EA559715C293740C\"\n                value:\n                  type: string\n                  example: \"61626364\"\n                key:\n                  type: string\n                  example: \"61626364\"\n                index:\n                  type: string\n                  example: \"-1\"\n                code:\n                  type: string\n                  example: \"0\"\n              type: object\n          type: object\n        id:\n          type: integer\n          example: 0\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n\n    BroadcastEvidenceResponse:\n      type: object\n      required:\n        - \"id\"\n        - \"jsonrpc\"\n      properties:\n        error:\n          type: string\n          example: \"\"\n        result:\n          type: string\n          example: \"\"\n        id:\n          type: integer\n          example: 0\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n\n    BroadcastTxCommitResponse:\n      type: object\n      required:\n        - \"error\"\n        - \"result\"\n        - \"id\"\n        - \"jsonrpc\"\n      properties:\n        error:\n          type: string\n          example: \"\"\n        result:\n          required:\n            - \"height\"\n            - \"hash\"\n            - \"deliver_tx\"\n            - \"check_tx\"\n          properties:\n            height:\n              type: string\n              example: \"26682\"\n            hash:\n              type: string\n              example: \"75CA0F856A4DA078FC4911580360E70CEFB2EBEE\"\n            deliver_tx:\n              required:\n                - \"log\"\n                - \"data\"\n                - \"code\"\n              properties:\n                log:\n                  type: string\n                  example: \"\"\n                data:\n                  type: string\n                  example: \"\"\n                code:\n                  type: string\n                  example: \"0\"\n              type: object\n            check_tx:\n              required:\n                - \"log\"\n                - \"data\"\n                - \"code\"\n              properties:\n                log:\n                  type: string\n                  example: \"\"\n                data:\n                  type: string\n                  example: \"\"\n                code:\n                  type: string\n                  example: \"0\"\n              type: object\n          type: object\n        id:\n          type: integer\n          example: 0\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n\n    CheckTxResponse:\n      type: object\n      required:\n        - \"error\"\n        - \"result\"\n        - \"id\"\n        - \"jsonrpc\"\n      properties:\n        error:\n          type: string\n          example: \"\"\n        result:\n          required:\n            - \"log\"\n            - \"data\"\n            - \"code\"\n          properties:\n            code:\n              type: string\n              example: \"0\"\n            data:\n              type: string\n              example: \"\"\n            log:\n              type: string\n              example: \"\"\n            info:\n              type: string\n              example: \"\"\n            gas_wanted:\n              type: string\n              example: \"1\"\n            gas_used:\n              type: string\n              example: \"0\"\n            events:\n              type: array\n              nullable: true\n              items:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: \"app\"\n                  attributes:\n                    type: array\n                    nullable: false\n                    items:\n                      $ref: \"#/components/schemas/Event\"\n            codespace:\n              type: string\n              example: \"bank\"\n          type: object\n        id:\n          type: integer\n          example: 0\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n\n    BroadcastTxResponse:\n      type: object\n      required:\n        - \"jsonrpc\"\n        - \"id\"\n        - \"result\"\n        - \"error\"\n      properties:\n        jsonrpc:\n          type: string\n          example: \"2.0\"\n        id:\n          type: integer\n          example: 0\n        result:\n          required:\n            - \"code\"\n            - \"data\"\n            - \"log\"\n            - \"hash\"\n          properties:\n            code:\n              type: string\n              example: \"0\"\n            data:\n              type: string\n              example: \"\"\n            log:\n              type: string\n              example: \"\"\n            codespace:\n              type: string\n              example: \"ibc\"\n            hash:\n              type: string\n              example: \"0D33F2F03A5234F38706E43004489E061AC40A2E\"\n          type: object\n        error:\n          type: string\n          example: \"\"\n\n    dialResp:\n      type: object\n      properties:\n        Log:\n          type: string\n          example: \"Dialing seeds in progress. See /net_info for details\"\n\n    ###### Reuseable types ######\n\n    # Validator type with proposer prioirty\n    ValidatorPriority:\n      type: object\n      properties:\n        address:\n          type: string\n          example: \"000001E443FD237E4B616E2FA69DF4EE3D49A94F\"\n        pub_key:\n          required:\n            - \"type\"\n            - \"value\"\n          properties:\n            type:\n              type: string\n              example: \"tendermint/PubKeyEd25519\"\n            value:\n              type: string\n              example: \"9tK9IT+FPdf2qm+5c2qaxi10sWP+3erWTKgftn2PaQM=\"\n          type: object\n        voting_power:\n          type: string\n          example: \"239727\"\n        proposer_priority:\n          type: string\n          example: \"-11896414\"\n\n    # Stripped down validator\n    Validator:\n      type: object\n      properties:\n        pub_key:\n          $ref: \"#/components/schemas/PubKey\"\n        voting_power:\n          type: integer\n        address:\n          type: string\n\n    # Consensus Params\n    ConsensusParams:\n      type: object\n      nullable: true\n      required:\n        - \"block\"\n        - \"evidence\"\n        - \"validator\"\n      properties:\n        block:\n          type: object\n          required:\n            - \"max_bytes\"\n            - \"max_gas\"\n            - \"time_iota_ms\"\n          properties:\n            max_bytes:\n              type: string\n              example: \"22020096\"\n            max_gas:\n              type: string\n              example: \"1000\"\n            time_iota_ms:\n              type: string\n              example: \"1000\"\n        evidence:\n          type: object\n          required:\n            - \"max_age\"\n          properties:\n            max_age:\n              type: string\n              example: \"100000\"\n        validator:\n          type: object\n          required:\n            - \"pub_key_types\"\n          properties:\n            pub_key_types:\n              type: array\n              items:\n                type: string\n              example:\n                - \"ed25519\"\n\n    # Events in tendermint\n    Event:\n      type: object\n      properties:\n        key:\n          type: string\n          example: \"YWN0aW9u\"\n        value:\n          type: string\n          example: \"c2VuZA==\"\n        index:\n          type: boolean\n          example: false\n\n    # Block Header\n    BlockHeader:\n      required:\n        - \"version\"\n        - \"chain_id\"\n        - \"height\"\n        - \"time\"\n        - \"last_block_id\"\n        - \"last_commit_hash\"\n        - \"data_hash\"\n        - \"validators_hash\"\n        - \"next_validators_hash\"\n        - \"consensus_hash\"\n        - \"app_hash\"\n        - \"last_results_hash\"\n        - \"evidence_hash\"\n        - \"proposer_address\"\n      properties:\n        version:\n          required:\n            - \"block\"\n            - \"app\"\n          properties:\n            block:\n              type: string\n              example: \"10\"\n            app:\n              type: string\n              example: \"0\"\n          type: object\n        chain_id:\n          type: string\n          example: \"cosmoshub-2\"\n        height:\n          type: string\n          example: \"12\"\n        time:\n          type: string\n          example: \"2019-04-22T17:01:51.701356223Z\"\n        last_block_id:\n          $ref: \"#/components/schemas/BlockID\"\n        last_commit_hash:\n          type: string\n          example: \"21B9BC845AD2CB2C4193CDD17BFC506F1EBE5A7402E84AD96E64171287A34812\"\n        data_hash:\n          type: string\n          example: \"970886F99E77ED0D60DA8FCE0447C2676E59F2F77302B0C4AA10E1D02F18EF73\"\n        validators_hash:\n          type: string\n          example: \"D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0\"\n        next_validators_hash:\n          type: string\n          example: \"D658BFD100CA8025CFD3BECFE86194322731D387286FBD26E059115FD5F2BCA0\"\n        consensus_hash:\n          type: string\n          example: \"0F2908883A105C793B74495EB7D6DF2EEA479ED7FC9349206A65CB0F9987A0B8\"\n        app_hash:\n          type: string\n          example: \"223BF64D4A01074DC523A80E76B9BBC786C791FB0A1893AC5B14866356FCFD6C\"\n        last_results_hash:\n          type: string\n          example: \"\"\n        evidence_hash:\n          type: string\n          example: \"\"\n        proposer_address:\n          type: string\n          example: \"D540AB022088612AC74B287D076DBFBC4A377A2E\"\n      type: object\n\n    BlockID:\n      required:\n        - \"hash\"\n        - \"parts\"\n      properties:\n        hash:\n          type: string\n          example: \"112BC173FD838FB68EB43476816CD7B4C6661B6884A9E357B417EE957E1CF8F7\"\n        parts:\n          required:\n            - \"total\"\n            - \"hash\"\n          properties:\n            total:\n              type: integer\n              example: 1\n            hash:\n              type: string\n              example: \"38D4B26B5B725C4F13571EFE022C030390E4C33C8CF6F88EDD142EA769642DBD\"\n          type: object\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /block_search: get: operation \"block_search\": responses: 200: content: application/json: schema: parse schema: resolve \"#/components/schemas/BlockSearchResponse\": find schema: resolve \"#/components/schemas/BlockSearchResponse\": can't find value for \"components/schemas/BlockSearchResponse\""
}