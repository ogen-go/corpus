{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "channels.v3.yml",
			"size": 0,
			"path": "reference/channels.v3.yml",
			"byteSize": 115251,
			"content": "openapi: 3.0.0\ninfo:\n  version: ''\n  contact: {}\n  title: Channels\n  description: |-\n    Create and manage sales [channels](/api-docs/channels/overview), their [sites](/api-reference/store-management/channels/channel-site), and their [product listings](/api-reference/store-management/channels#channel-listings).\n\n    ## Authentication\n\n    Authenticate requests by including an [OAuth](/api-docs/getting-started/authentication/rest-api-authentication) `access_token` in the request header.\n\n    ```http\n    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/channels\n    Content-Type: application/json\n    X-Auth-Token: {{ACCESS_TOKEN}}\n    ```\n\n    ### [OAuth Scopes](/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes)\n\n    | UI Name                                      | Permission | Parameter                                     |\n    |----------------------------------------------|------------|-----------------------------------------------|\n    | Channel Listings                             | modify     | `store_channel_listings`                      |\n    | Channel Listings                             | read-only  | `store_channel_listings_read_only`            |\n    | Channel Settings                             | modify     | `store_channel_settings`                      |\n    | Channel Settings                             | read-only  | `store_channel_settings_read_only`            |\n\n    ## Channels\n\n    A [channel](/api-reference/cart-checkout/channels-listings-api/channels) is anywhere a merchant sells their products. This encompasses headless storefronts, marketplaces, POS systems, and marketing platforms.\n\n    ### Platform\n\n    A channel's `type` and `platform` combination must be a valid pair as indicated in the table below.\n\n    | Platform          | Accepted Type             |\n    |-------------------|---------------------------|\n    | `square`          | `pos`                     |\n    | `stripe`          | `pos`                     |\n    | `vend`            | `pos`                     |\n    | `clover`          | `pos`                     |\n    | `talech`          | `pos`                     |\n    | `facebook by meta`| `marketplace`,`marketing` |\n    | `instagram by meta`| `marketplace`,`marketing`|\n    | `amazon`          | `marketplace`             |\n    | `ebay`            | `marketplace`             |\n    | `pinterest`       | `marketplace`             |\n    | `wayfair`         | `marketplace`             |\n    | `overstock`       | `marketplace`             |\n    | `etsy`            | `marketplace`             |\n    | `wish`            | `marketplace`             |\n    | `walmart`         | `marketplace`             |\n    | `bigcommerce`     | `storefront`              |\n    | `gatsby`          | `storefront`              |\n    | `wordpress`       | `storefront`              |\n    | `drupal`          | `storefront`              |\n    | `acquia`          | `storefront`              |\n    | `bloomreach`      | `storefront`              |\n    | `deity`           | `storefront`              |\n    | `next`            | `storefront`              |\n    | `vue`             | `storefront`              |\n    | `google_shopping` | `marketing`               |\n    | `custom`          | `storefront`, `pos`, `marketing`, `marketplace` |\n\n    ### Status\n\n    Allowed values for a channel's `status` vary by channel `type` and `platform`.\n\n    |Type|Platform|Allowed Statuses|\n    |--|--|--|\n    |`storefront`|`bigcommerce`|`prelaunch`, `active`, `inactive`, `archived`, `deleted`|\n    |`storefront`|**Is not** `bigcommerce` |`prelaunch`, `active`, `inactive`, `archived`, `deleted` \n    |`marketing`, `marketplace`, `pos`|N/A|`connected`, `disconnected`, `archived`, `deleted`|\n\n    \u003c!-- theme: warning --\u003e\n    \u003e #### Note\n    \u003e * A Channel with `deleted` status can be restored within 90 days after deleting by contacting BigCommerce support team. Once the 90 days grace period is over, the Channel `status` will become `terminated`.\n    \u003e * The `terminated` status is read-only. `terminated` channels cannot be restored.\n\n    ## Channel listings\n\n    [Channel listings](/api-reference/store-management/channels/channel-listings) allow you to manage catalog differences among different storefronts or marketplaces.\n\n    ## Channel site\n\n    A [Channel site](/api-reference/store-management/channels/channel-site) refers to the domain associated with a channel.\n\n    ## Resources\n\n    * [Sites and Routes API Reference](/api-reference/cart-checkout/sites-routes-api)\n    * [Building Channels Overview](/api-docs/channels/overview)\n    * [Building Channel Apps](/api-docs/channels/building-channel-apps)\n    * [Channels Toolkit Reference](/api-docs/channels/channels-toolkit-reference)\ntags:\n  - name: Channels\n  - name: Channel Active Theme\n  - name: Channel Currency Assignments\n  - name: Channel Listings\n  - name: Channel Site\n  - name: Channel Site Checkout Url\n  - name: Channel Menus\n  - name: Channel Metafields\npaths:\n  '/stores/{store_hash}/v3/channels':\n    get:\n      tags:\n        - Channels\n      summary: Get All Channels\n      operationId: listChannels\n      description: |-\n        Returns a list of *Channels*.\n\n        Will always return the default BigCommerce storefront with an ID of `1`. This storefront is created by default when you provision a BigCommerce store.\n      parameters:\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/available'\n        - $ref: '#/components/parameters/status_in'\n        - $ref: '#/components/parameters/type_in'\n        - $ref: '#/components/parameters/platform_in'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/date_created_min'\n        - $ref: '#/components/parameters/date_created_max'\n        - $ref: '#/components/parameters/date_modified'\n        - $ref: '#/components/parameters/date_modified_min'\n        - $ref: '#/components/parameters/date_modified_max'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          $ref: '#/components/responses/multiple_channels_without_currencies_resp'\n        '422':\n          $ref: '#/components/responses/invalid_filter_value_resp'\n    post:\n      tags:\n        - Channels\n      summary: Create a Channel\n      operationId: createChannel\n      description: Creates a *Channel*.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateChannelReq'\n            examples:\n              Create eBay Channel:\n                $ref: '#/components/examples/create_channel_req_example'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/single_channel_without_currencies_resp'\n        '422':\n          $ref: '#/components/responses/missing_or_invalid_channel_data_resp'\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/channels/{channel_id}':\n    parameters:\n      - name: channel_id\n        description: The ID of a channel\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n    get:\n      tags:\n        - Channels\n      summary: Get a Channel\n      operationId: getChannel\n      description: Returns a *Channel*. Channel ID `1` returns the default BigCommerce storefront.\n      parameters:\n        - $ref: '#/components/parameters/include'\n      responses:\n        '200':\n          $ref: '#/components/responses/single_channel_with_currencies_resp'\n        '404':\n          $ref: '#/components/responses/channel_not_found_resp'\n    put:\n      tags:\n        - Channels\n      summary: Update a Channel\n      operationId: updateChannel\n      description: |-\n        Updates a *Channel*.\n\n        ## Updatable Fields\n\n        The following fields can be updated.\n        * `name`\n        * `external_id`\n        * `status`\n        * `is_listable_from_ui`\n        * `is_visible`\n        * `config_meta`\n\n\n        \u003e #### Note\n        \u003e * Partial updates are supported. In most cases, if a field that *cannot* be updated is passed in, the API **will not** respond with an error. It returns a 200 response with the object, in which you will see the field(s) were not updated.\n        \u003e * `platform` and `type` cannot be updated after a channel is created.\n        \u003e * A channel with status `deleted` or `terminated` cannot be updated.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateChannelReq'\n            examples:\n              Update a Facebook by Meta Channel:\n                $ref: '#/components/examples/update_channel_req_example'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/single_channel_without_currencies_resp'\n        '404':\n          $ref: '#/components/responses/channel_entity_not_found_resp'\n        '409':\n          $ref: '#/components/responses/duplicate_channel_resp'\n        '422':\n          $ref: '#/components/responses/invalid_channel_update_field_resp'\n  '/stores/{store_hash}/v3/channels/{channel_id}/active-theme':\n    get:\n      tags:\n        - Channel Active Theme\n      summary: Get a Channel Active Theme\n      operationId: getChannelActiveTheme\n      description: |-\n        Returns details of the theme active on the specified channel.\n        Does not support active Blueprint (legacy) themes.\n      parameters:\n        - $ref: '#/components/parameters/channel_id_path_param'\n      responses:\n        '200':\n          $ref: '#/components/responses/channel_active_theme_resp'\n        '404':\n          $ref: '#/components/responses/active_theme_not_found_resp'\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: channel_id\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/channels/currency-assignments':\n    get:\n      tags:\n        - Channel Currency Assignments\n      summary: Get All Channels Currency Assignments\n      operationId: listAllCurrencyAssignments\n      description: Returns a list of currency assignments for all channels.\n      responses:\n        '200':\n          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'\n    post:\n      tags:\n        - Channel Currency Assignments\n      summary: Create Multiple Channels Currency Assignments\n      operationId: createMultipleChannelsCurrencyAssignments\n      description: Sets enabled currencies and default currency for multiple channels. Note that currencies must be added first in the Store Setup \u003e Currencies settings from the BigCommerce Control Panel before the currencies can be assigned to a channel.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpsertMultipleChannelsCurrencyAssignmentsReq'\n            examples:\n              Create Currency Assignments for Multiple Channels:\n                $ref: '#/components/examples/multiple_channels_currency_assignments_req_example'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'\n        '422':\n          $ref: '#/components/responses/missing_or_invalid_multiple_channels_currency_assignments_data_resp'\n    put:\n      tags:\n        - Channel Currency Assignments\n      summary: Update Multiple Channels Currency Assignments\n      operationId: updateMultipleChannelsCurrencyAssignments\n      description: Updates enabled currencies and default currency for multiple channels. Note that currencies must be added first in the Store Setup \u003e Currencies settings from the BigCommerce Control Panel before the currencies can be assigned to a channel.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpsertMultipleChannelsCurrencyAssignmentsReq'\n            examples:\n              Update Currency Assignments for Multiple Channels:\n                $ref: '#/components/examples/multiple_channels_currency_assignments_req_example'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/multiple_channels_currency_assignments_resp'\n        '422':\n          $ref: '#/components/responses/missing_or_invalid_multiple_channels_currency_assignments_data_resp'\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/channels/{channel_id}/currency-assignments':\n    parameters:\n      - name: channel_id\n        description: The ID of a channel\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n    get:\n      tags:\n        - Channel Currency Assignments\n      summary: Get Channel Currency Assignments\n      operationId: getSingleChannelCurrencyAssignments\n      description: Returns a list of currency assignments for a specific channel.\n      responses:\n        '200':\n          $ref: '#/components/responses/single_channel_currency_assignments_resp'\n        '404':\n          $ref: '#/components/responses/channel_not_found_resp'\n    post:\n      tags:\n        - Channel Currency Assignments\n      summary: Create Channel Currency Assignments\n      operationId: createSingleChannelCurrencyAssignments\n      description: Sets enabled currencies and default currency for a specific channel. Note that currencies must be added first in the Store Setup \u003e Currencies settings from the BigCommerce Control Panel before the currencies can be assigned to a channel.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CurrencyRequiredWithoutChannelId'\n            examples:\n              Create Currency Assignments for a Channel:\n                $ref: '#/components/examples/single_channel_currency_assignments_req_example'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/single_channel_currency_assignments_resp'\n        '422':\n          $ref: '#/components/responses/missing_or_invalid_single_channel_currency_assignments_data_resp'\n    put:\n      tags:\n        - Channel Currency Assignments\n      summary: Update Channel Currency Assignments\n      operationId: updateSingleChannelCurrencyAssignments\n      description: Updates enabled currencies and default currency for a specific channel. Note that currencies must be added first in the Store Setup \u003e Currencies settings from the BigCommerce Control Panel before the currencies can be assigned to a channel.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CurrencyRequiredWithoutChannelId'\n            examples:\n              Update Currency Assignments for a Channel:\n                $ref: '#/components/examples/single_channel_currency_assignments_req_example'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/single_channel_currency_assignments_resp'\n        '422':\n          $ref: '#/components/responses/missing_or_invalid_single_channel_currency_assignments_data_resp'\n    delete:\n      tags:\n        - Channel Currency Assignments\n      summary: Delete Channel Currency Assignments\n      operationId: deleteSingleChannelCurrencyAssignments\n      description: 'Deletes currency assignments for a specific channel. Once done, this channel will inherit the store’s currency settings.'\n      responses:\n        '200':\n          $ref: '#/components/responses/delete_currency_assignments_resp'\n        '404':\n          $ref: '#/components/responses/channel_not_found_resp'\n  '/stores/{store_hash}/v3/channels/{channel_id}/listings':\n    parameters:\n      - name: channel_id\n        description: The ID of a channel\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n    get:\n      tags:\n        - Channel Listings\n      summary: Get Channel Listings\n      operationId: listChannelListings\n      description: 'Returns a list of all *Channel Listings* for a specific channel. Note that if the *Channel* is not found or there is no listing associated to the *Channel*, it will return a 200 response with empty data.'\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/after'\n        - $ref: '#/components/parameters/product_id_in'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/date_created_min'\n        - $ref: '#/components/parameters/date_created_max'\n        - $ref: '#/components/parameters/date_modified'\n        - $ref: '#/components/parameters/date_modified_min'\n        - $ref: '#/components/parameters/date_modified_max'\n      responses:\n        '200':\n          $ref: '#/components/responses/single_and_multiple_listings_resp'\n        '400':\n          $ref: '#/components/responses/invalid_channel_id_resp'\n        '422':\n          $ref: '#/components/responses/invalid_filters_resp'\n    post:\n      tags:\n        - Channel Listings\n      summary: Create Channel Listings\n      operationId: createChannelListings\n      description: Creates one or more *Channel Listings* for a specific channel.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMultipleListingsReq'\n            examples:\n              Create Single Listing:\n                $ref: '#/components/examples/create_single_listing_req_example'\n              Create Multiple Listings:\n                $ref: '#/components/examples/create_multiple_listings_req_example'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/single_and_multiple_listings_resp'\n        '422':\n          $ref: '#/components/responses/missing_or_invalid_multiple_listings_data_for_post_resp'\n    put:\n      tags:\n        - Channel Listings\n      summary: Update Channel Listings\n      operationId: updateChannelListings\n      description: |-\n        Updates one or more *Channel Listings* for a specific channel.\n\n        \u003e #### Note\n        \u003e * Partial updates are supported. In most cases, if a field that *cannot* be updated is passed in, the API **will not** respond with an error. It returns a 200 response with the object, in which you will see the field(s) were not updated.\n        \u003e * If a new variant is provided, the API will append the variant to the list. If a variant already exists, the API will update the existing variant. Other variants that are not provided in the payload remains unchanged.\n        \u003e * If `listing_id` does not exist, the API will return a 200 response with empty data.\n        \u003e * `listing_id` is required and cannot be less than or equal to zero.\n        \u003e * `product_id` cannot be updated after a channel listing is created.\n        \u003e * `product_id` of a variant must match the `product_id` of the channel listing.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMultipleListingsReq'\n            examples:\n              Update Single Listing:\n                $ref: '#/components/examples/update_single_listing_req_example'\n              Update Multiple Listings:\n                $ref: '#/components/examples/update_multiple_listings_req_example'\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/single_and_multiple_listings_resp'\n        '422':\n          $ref: '#/components/responses/missing_or_invalid_multiple_listings_data_for_put_resp'\n  '/stores/{store_hash}/v3/channels/{channel_id}/listings/{listing_id}':\n    parameters:\n      - name: channel_id\n        description: The ID of a channel\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: listing_id\n        description: The ID of a channel listing.\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n    get:\n      tags:\n        - Channel Listings\n      summary: Get a Channel Listing\n      operationId: getChannelListing\n      description: Returns a *Channel Listing* for a specific channel.\n      responses:\n        '200':\n          $ref: '#/components/responses/single_listing_resp'\n        '404':\n          $ref: '#/components/responses/listing_not_found_resp'\n  '/stores/{store_hash}/v3/channels/{channel_id}/site/checkout-url':\n    parameters:\n      - name: channel_id\n        description: The ID of a channel\n        in: path\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n    put:\n      summary: Upsert a Site's Checkout URL\n      tags:\n        - Channel Site Checkout Url\n      description: Creates or updates (upserts) a site's checkout URL\n      operationId: putCheckoutUrl\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutCheckoutUrl'\n        description: ''\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Site'\n            Example 1:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"id\": 1,\n                        \"url\": \"https://kittens.mybigcommerce.com/\",\n                        \"channel_id\": 1,\n                        \"created_at\": \"2018-01-04T04:15:50.000Z\",\n                        \"updated_at\": \"2018-01-04T04:15:50.000Z\",\n                        \"urls\": [\n                            {\n                                \"url\": \"https://kittens.mybigcommerce.com\",\n                                \"type\": \"primary\",\n                                \"created_at\": \"2022-03-22T13:08:59Z\",\n                                \"updated_at\": \"2022-03-22T13:08:59Z\"\n                            },\n                            {\n                                \"url\": \"https://store-abc.store.bcdev\",\n                                \"type\": \"canonical\",\n                                \"created_at\": \"2022-03-22T13:08:59Z\",\n                                \"updated_at\": \"2022-03-22T13:08:59Z\"\n                            },\n                            {\n                                \"url\": \"https://checkout.kittens.mybigcommerce.com\",\n                                \"type\": \"checkout\",\n                                \"created_at\": \"2022-03-23T10:21:11Z\",\n                                \"updated_at\": \"2022-03-29T13:44:22Z\"\n                            }\n                        ],\n                        \"is_checkout_url_customized\": true\n                    }\n        '422':\n          description: Unprocessable Entity. Your checkout and storefront must be within the same main domain like `example.com` and `subdomain.example.com`\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples:\n                  example-1:\n                    status: 422\n                    title: 'Incorrect checkout url https://bc.kittykat.me. Your checkout and storefront must be within the same main domain like “main.com” and “subdomain.main.com”'\n                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\n                    errors: {}\n                properties:\n                  status:\n                    type: integer\n                    default: 422\n                  title:\n                    type: string\n                    example: 'Incorrect checkout url https://checkout.example.com. Your checkout and storefront must be within the same main domain like “main.com” and “subdomain.main.com'\n                  type:\n                    type: string\n                    default: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\n                  errors:\n                    type: object\n    delete:\n      summary: Delete a Site's Checkout URL\n      operationId: delete-checkout-url\n      description: 'Deletes a site''s checkout URL. After deletion, a shared checkout URL is used.'\n      tags:\n        - Channel Site Checkout Url\n      responses:\n        '200':\n          description: OK. `data` and `meta` are empty objects.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                  meta:\n                    type: object\n  '/stores/{store_hash}/v3/channels/{channel_id}/site':\n    get:\n      summary: Get a Channel Site\n      description: |\n        Alias of `GET /sites?channel_id=channel_id`\n\n        Returns site data for the specified channel.\n      operationId: get-channel-site\n      parameters:\n        - name: channel_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/site_Resp'\n      tags:\n        - Channel Site\n    put:\n      responses:\n        '200':\n          $ref: '#/components/responses/site_Resp'\n      summary: Update a Channel Site\n      operationId: put-channel-site\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/site_Put'\n        x-examples:\n          application/json:\n            url: 'https://example.com/'\n      tags:\n        - Channel Site\n      description: Updates a site for provided channel.\n    parameters:\n      - name: channel_id\n        in: path\n        required: true\n        schema:\n          type: string\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n    post:\n      responses:\n        '200':\n          $ref: '#/components/responses/site_Resp'\n      summary: Create a Channel Site\n      operationId: postChannelSite\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/site_Post'\n        x-examples:\n          application/json:\n            url: 'http://kittens.mybigcommerce.com/'\n            channel_id: 123\n      tags:\n        - Channel Site\n      description: Alias of POST `/sites`. Creates a site for provided channel.\n    delete:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n      description: Deletes the Channel's site.\n      operationId: DeleteChannelSite\n      tags:\n        - Channel Site\n      summary: Delete a Channel Site\n  '/stores/{store_hash}/v3/channels/{channel_id}/channel-menus':\n    get:\n      summary: Get Channel Menus\n      description: |\n        Returns list of Control Panel side navigation menus for a channel.\n      operationId: get-channel-menus\n      parameters:\n        - name: channel_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          name: store_hash\n          in: path\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/channel_menus_Resp'\n      tags:\n        - Channel Menus\n    post:\n      responses:\n        '200':\n          $ref: '#/components/responses/channel_menus_Resp'\n      summary: Create Channel Menus\n      operationId: postChannelMenus\n      parameters:\n        - name: channel_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          name: store_hash\n          in: path\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/channel_menus_Post'\n            examples: {}\n      tags:\n        - Channel Menus\n      description: Creates or replaces list of control panel side navigation menus for a channel.\n    delete:\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: integer\n                  meta:\n                    type: object\n                    properties: {}\n                x-examples:\n                  example-1:\n                    data: 1\n                    meta: {}\n      description: Deletes control panel side navigation menus for a channel.\n      operationId: DeleteChannelMenus\n      tags:\n        - Channel Menus\n      summary: Delete Channel Menus\n      parameters:\n        - name: channel_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - schema:\n            type: string\n          name: store_hash\n          in: path\n          required: true\n    parameters: []\n  '/stores/{store_hash}/v3/channels/{channel_id}/metafields':\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: channel_id\n        in: path\n        required: true\n    get:\n      summary: Get Channel Metafields\n      tags:\n        - Channel Metafields\n      responses:\n        '200':\n          $ref: '#/components/responses/metafield_200'\n      operationId: get-channels-channel_id-metafields\n      parameters:\n        - $ref: '#/components/parameters/PageParam'\n        - $ref: ./catalog.v3.yml#/components/parameters/LimitParam\n        - $ref: ./catalog.v3.yml#/components/parameters/MetafieldKeyParam\n        - $ref: '#/components/parameters/MetafieldNamespaceParam'\n        - $ref: ./catalog.v3.yml#/components/parameters/DirectionParam\n      description: Returns a list of metafields on a channel. Optional filter parameters can be passed in.\n    post:\n      summary: Create a Channel Metafield\n      operationId: post-channels-channel_id-metafields\n      responses:\n        '200':\n          $ref: '#/components/responses/metafield_200'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/metafield_Post'\n            examples: {}\n      tags:\n        - Channel Metafields\n      description: |-\n        Creates a channel metafield.\n\n        **Note:** The maxiumum number of metafields allowed on each order, product, category, variant, channel, or brand is 250 per client ID. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.\n  '/stores/{store_hash}/v3/channels/{channel_id}/metafields/{metafield_id}':\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: channel_id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: metafield_id\n        in: path\n        required: true\n    get:\n      summary: Get a Channel Metafield\n      tags:\n        - Channel Metafields\n      responses:\n        '200':\n          $ref: '#/components/responses/metafield_200'\n      operationId: get-channels-channel_id-metafields-metafield_id\n      description: Returns a single channel metafield.\n    put:\n      summary: Update a Channel Metafield\n      operationId: put-channels-channel_id-metafields-metafield_id\n      responses:\n        '200':\n          $ref: '#/components/responses/metafield_200'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/metafield_Put'\n      tags:\n        - Channel Metafields\n      description: |-\n        Updates a single channel metafield.\n\n        **Usage Notes**\n        * Attempting to modify `namespace`, `key`, and `permission_set` fields using a client ID different from the one used to create those metafields will result in a `403` error message. \n    delete:\n      summary: Delete a Channel Metafield\n      operationId: delete-channels-channel_id-metafields-metafield_id\n      responses:\n        '204':\n          description: No Content\n      tags:\n        - Channel Metafields\n      description: Deletes a single channel metafield.\nsecurity:\n  - X-Auth-Token: []\nx-stoplight:\n  docs:\n    includeDownloadLink: true\n    showModels: false\nservers:\n  - url: 'https://api.bigcommerce.com'\n    variables:\n      store_hash:\n        default: store_hash\ncomponents:\n  parameters:\n    PageParam:\n      name: page\n      description: |\n        Specifies the page number in a limited (paginated) list of products.\n      required: false\n      in: query\n      schema:\n        type: integer\n    MetafieldIdParam:\n      name: metafield_id\n      in: path\n      description: |\n        The ID of the `Metafield`.\n      required: true\n      schema:\n        type: integer\n    MetafieldKeyParam:\n      name: key\n      in: query\n      description: |\n        Filter based on a metafield's key.\n      required: false\n      schema:\n        type: string\n    MetafieldNamespaceParam:\n      name: namespace\n      in: query\n      description: Filter based on a metafield's namespace.\n      required: false\n      schema:\n        type: string\n    LimitParam:\n      name: limit\n      description: |\n        Controls the number of items per page in a limited (paginated) list of products.\n      required: false\n      in: query\n      schema:\n        type: integer\n    DirectionParam:\n      name: direction\n      description: Sort direction.\n      required: false\n      in: query\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n    include:\n      name: include\n      description: Channels subresources that can be included in the response.\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - currencies\n    available:\n      name: available\n      description: 'Filter items based on whether the channel is currently available for integration. Setting this query parameter to `true` will return channels with the status of `prelaunch`, `active` , `inactive`, and `connected`. Setting this query parameter to `false` will return channels with the status of `disconnected`, `archived`, `deleted`, and `terminated`.'\n      in: query\n      required: false\n      schema:\n        type: boolean\n    status_in:\n      name: 'status:in'\n      description: Filter items by a comma-separated list of statuses.\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - prelaunch\n            - active\n            - inactive\n            - connected\n            - disconnected\n            - archived\n            - deleted\n            - terminated\n    type_in:\n      name: 'type:in'\n      description: Filter items by a comma-separated list of types.\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - marketplace\n            - marketing\n            - pos\n            - storefront\n    platform_in:\n      name: 'platform:in'\n      description: 'Filter items by a comma-separated list of platforms. For a list of supported platforms, see [Platform](/api-reference/store-management/channels#platform).'\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n        example:\n          - 'facebook by meta, amazon'\n    date_created:\n      name: date_created\n      description: 'Filter items by date_created. For example, `date_created=2019-09-04T00:00:00`, `date_created=2019-09-04`, or `date_created=1567573200`'\n      in: query\n      required: false\n      schema:\n        type: string\n    date_created_min:\n      name: 'date_created:min'\n      description: 'Filter items by minimum date_created. For example, `date_created:min=2019-09-04T00:00:00`, `date_created:min=2019-09-04`, or `date_created:min=1567573200`'\n      in: query\n      required: false\n      schema:\n        type: string\n    date_created_max:\n      name: 'date_created:max'\n      description: 'Filter items by maximum date_created. For example, `date_created:max=2019-09-04T00:00:00`, `date_created:max=2019-09-04`, or `date_created:max=1567573200`'\n      in: query\n      required: false\n      schema:\n        type: string\n    date_modified:\n      name: date_modified\n      description: 'Filter items by date_modified. For example, `date_modified=2019-09-04T00:00:00`, `date_modified=2019-09-04`, or `date_modified=1567573200`'\n      in: query\n      required: false\n      schema:\n        type: string\n    date_modified_min:\n      name: 'date_modified:min'\n      description: 'Filter items by minimum date_modified. For example, `date_modified:min=2019-09-04T00:00:00`, `date_modified:min=2019-09-04`, or `date_modified:min=1567573200`'\n      in: query\n      required: false\n      schema:\n        type: string\n    date_modified_max:\n      name: 'date_modified:max'\n      description: 'Filter items by maximum date_modified. For example, `date_modified:max=2019-09-04T00:00:00`, `date_modified:max=2019-09-04`, or `date_modified:max=1567573200`'\n      in: query\n      required: false\n      schema:\n        type: string\n    limit:\n      name: limit\n      description: Controls the number of items per page for paginated responses.\n      in: query\n      required: false\n      schema:\n        type: integer\n    page:\n      name: page\n      description: Specifies the page number for a paginated response.\n      in: query\n      required: false\n      schema:\n        type: integer\n    after:\n      name: after\n      description: Specifies the prior listing ID in a limited (paginated) list of listings.\n      in: query\n      required: false\n      schema:\n        type: integer\n    product_id_in:\n      name: 'product_id:in'\n      description: Filter items by a comma-separated list of product IDs.\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: integer\n          format: int64\n    channel_id_path_param:\n      name: channel_id\n      description: The ID of a channel\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int64\n    listing_id_path_param:\n      name: listing_id\n      description: The ID of a channel listing.\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int64\n  responses:\n    multiple_channels_without_currencies_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ChannelWithoutCurrencies'\n              meta:\n                $ref: '#/components/schemas/MetaWithFullPagination'\n          examples:\n            response:\n              $ref: '#/components/examples/multiple_channels_without_currencies_resp_example'\n    single_channel_without_currencies_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/ChannelWithoutCurrencies'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples:\n            response:\n              $ref: '#/components/examples/single_channel_without_currencies_resp_example'\n    single_channel_with_currencies_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/ChannelWithCurrencies'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples:\n            response:\n              $ref: '#/components/examples/single_channel_with_currencies_resp_example'\n    channel_active_theme_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/ActiveTheme'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples:\n            response:\n              $ref: '#/components/examples/single_active_theme_resp_example'\n    multiple_channels_currency_assignments_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples:\n            response:\n              $ref: '#/components/examples/multiple_channels_currency_assignments_resp_example'\n    single_channel_currency_assignments_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples:\n            response:\n              $ref: '#/components/examples/single_channel_currency_assignments_resp_example'\n    delete_currency_assignments_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/ChannelId'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples:\n            response:\n              $ref: '#/components/examples/delete_currency_assignments_resp_example'\n    single_and_multiple_listings_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Listing'\n              meta:\n                $ref: '#/components/schemas/MetaWithPartialPagination'\n          examples:\n            Single Listing:\n              $ref: '#/components/examples/single_listing_resp_example'\n            Multiple Listings:\n              $ref: '#/components/examples/multiple_listings_resp_example'\n    single_listing_resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/Listing'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples:\n            response:\n              $ref: '#/components/examples/single_listing_with_empty_meta_resp_example'\n    site_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/Site'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples: {}\n    channel_menus_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                  bigcommerce_protected_app_sections:\n                    $ref: '#/components/schemas/BigcommerceProtectedAppSections'\n                  custom_app_sections:\n                    $ref: '#/components/schemas/CustomAppSections'\n              meta:\n                $ref: '#/components/schemas/EmptyMeta'\n          examples:\n            response:\n              $ref: '#/components/examples/channel_menus_resp_example'\n    invalid_channel_id_resp:\n      description: Invalid channel ID is provided.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Invalid Channel ID:\n              $ref: '#/components/examples/error_400_resp_example'\n    invalid_filter_value_resp:\n      description: Invalid value is provided to the query parameter(s).\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Invalid Filter Value:\n              $ref: '#/components/examples/error_422_invalid_filter_value_resp_example'\n    missing_or_invalid_channel_data_resp:\n      description: 'The request is missing one or more required fields or invalid data is submitted. Commonly, an invalid combination of `type` and `platform` was provided.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Missing Required Field and Invalid Data:\n              $ref: '#/components/examples/error_422_channel_resp_example'\n            Invalid Type and Platform Combination:\n              $ref: '#/components/examples/error_422_invalid_type_platform_combination_resp_example'\n    channel_not_found_resp:\n      description: A *Channel* with the provided ID was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Channel Not Found:\n              $ref: '#/components/examples/error_404_resp_example'\n    listing_not_found_resp:\n      description: A *Channel Listing* with the provided channel ID and listing ID was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Listing Not Found:\n              $ref: '#/components/examples/error_404_listing_not_found_resp_example'\n    active_theme_not_found_resp:\n      description: Active Theme of the *Channel* was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Active Theme Not Found:\n              $ref: '#/components/examples/error_404_active_theme_not_found_resp_example'\n    channel_entity_not_found_resp:\n      description: A *Channel* with the provided ID was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Channel Not Found:\n              $ref: '#/components/examples/error_404_entity_not_found_resp_example'\n    duplicate_channel_resp:\n      description: 'A *Channel* with the same combination of `name`, `platform`, and `type` already exists.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Duplicate Channel:\n              $ref: '#/components/examples/error_409_resp_example'\n    invalid_channel_update_field_resp:\n      description: 'When an invalid value or invalid field is submitted, a 422 response will be sent. Note that attempt to update a deleted or terminated channel will also result in 422 response.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Update Type and Platform Error:\n              $ref: '#/components/examples/error_422_prevent_update_type_and_platform_resp_example'\n            Update Deleted Channel Error:\n              $ref: '#/components/examples/error_422_prevent_update_deleted_channel_resp_example'\n    missing_or_invalid_multiple_channels_currency_assignments_data_resp:\n      description: The request is missing one or more required fields or invalid data is submitted.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Missing Required Fields and Invalid Data:\n              $ref: '#/components/examples/error_422_multiple_channels_currency_assignments_resp_example'\n            Currency Not Yet Enabled:\n              $ref: '#/components/examples/error_422_invalid_enabled_currencies_resp_example'\n    missing_or_invalid_single_channel_currency_assignments_data_resp:\n      description: The request is missing one or more required fields or invalid data is submitted.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Missing Required Fields:\n              $ref: '#/components/examples/error_422_single_channel_currency_assignments_resp_example'\n            Currency Not Yet Enabled:\n              $ref: '#/components/examples/error_422_invalid_enabled_currencies_resp_example'\n            Invalid Channel ID:\n              $ref: '#/components/examples/error_422_invalid_channel_id_resp_example'\n    missing_or_invalid_multiple_listings_data_for_post_resp:\n      description: The request is missing one or more required fields or invalid data is submitted.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Product ID Mismatch:\n              $ref: '#/components/examples/error_422_product_id_mismatch_resp_example'\n            Missing Required Fields For Channel Listing:\n              $ref: '#/components/examples/error_422_missing_listing_required_fields_resp_example'\n            Missing Required Fields For Variants:\n              $ref: '#/components/examples/error_422_missing_listing_variants_required_fields_resp_example'\n            Invalid Channel ID:\n              $ref: '#/components/examples/error_422_invalid_channel_id_v2_resp_example'\n    missing_or_invalid_multiple_listings_data_for_put_resp:\n      description: The request is missing one or more required fields or invalid data is submitted. Note that the `group_id` in the Invalid Listing ID example refers to `listing_id`. Please use `listing_id` instead of `group_id` in the request payload.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Product ID Mismatch:\n              $ref: '#/components/examples/error_422_product_id_mismatch_resp_example'\n            Missing Required Fields For Channel Listing:\n              $ref: '#/components/examples/error_422_missing_listing_required_fields_resp_example'\n            Missing Required Fields For Variants:\n              $ref: '#/components/examples/error_422_missing_listing_variants_required_fields_resp_example'\n            Invalid Channel ID:\n              $ref: '#/components/examples/error_422_invalid_channel_id_v2_resp_example'\n            Invalid Listing ID:\n              $ref: '#/components/examples/error_422_invalid_listing_id_resp_example'\n    invalid_filters_resp:\n      description: 'When an invalid value or invalid query parameter is submitted, a 422 response will be sent.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          examples:\n            Invalid Filters:\n              $ref: '#/components/examples/error_422_invalid_filters_resp_example'\n            Invalid Filter Value:\n              $ref: '#/components/examples/error_422_invalid_filter_value_resp_example'\n    metafield_200:\n      description: OK\n      content:\n        application/json:\n          schema:\n            description: 'Metafield for products, categories, variants, and brands. The max number of metafields allowed on each product, category, variant, or brand is fifty. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'\n            x-internal: false\n            type: object\n            properties:\n              id:\n                type: integer\n                description: Unique ID of the *Metafield*.\n                example: 6\n              permission_set:\n                type: string\n                description: |-\n                  Determines the visibility and writeability of the field by other API consumers.\n\n                  |Value|Description\n                  |-|-|\n                  |`app_only`|Private to the app that owns the field|\n                  |`read`|Visible to other API consumers|\n                  |`write`|Open for reading and writing by other API consumers|\n                  |`read_and_sf_access`|Visible to other API consumers, including on storefront|\n                  |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|\n                enum:\n                  - app_only\n                  - read\n                  - write\n                  - read_and_sf_access\n                  - write_and_sf_access\n              namespace:\n                maxLength: 64\n                minLength: 1\n                type: string\n                description: 'Namespace for the metafield, for organizational purposes.'\n                example: Warehouse Locations\n                x-required:\n                  - post\n              key:\n                maxLength: 64\n                minLength: 1\n                type: string\n                description: |\n                  The name of the field, for example: `location_id`, `color`. \n                example: Location\n                x-required:\n                  - post\n              value:\n                maxLength: 65535\n                minLength: 1\n                type: string\n                description: |\n                  The value of the field.\n                example: 4HG\n                x-required:\n                  - post\n              description:\n                maxLength: 255\n                minLength: 0\n                type: string\n                description: |\n                  Description for the metafields.\n                example: Location in the warehouse\n              resource_type:\n                type: string\n                description: |\n                  The type of resource with which the metafield is associated.\n                example: product\n                enum:\n                  - category\n                  - brand\n                  - product\n                  - variant\n                x-required:\n                  - post\n              resource_id:\n                maximum: 10000000000\n                minimum: 0\n                type: integer\n                description: |\n                  The ID for the resource with which the metafield is associated.\n                example: 111\n                x-required:\n                  - post\n              date_created:\n                type: string\n                description: |\n                  Date and time of the metafield's creation. Read-Only.\n                format: date-time\n                example: '2018-05-07T20:14:17.000Z'\n              date_modified:\n                type: string\n                description: |\n                  Date and time when the metafield was last updated. Read-Only.\n                format: date-time\n                example: '2018-05-07T20:14:17.000Z'\n    metafields_200:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            x-examples:\n              example-1:\n                data:\n                  - id: 19\n                    key: Location\n                    value: 4HG\n                    namespace: Warehouse Locations\n                    permission_set: app_only\n                    resource_type: channel\n                    resource_id: 1\n                    description: Location in the warehouse\n                    date_created: '2022-06-28T18:00:15+00:00'\n                    date_modified: '2022-06-28T18:00:15+00:00'\n                  - id: 21\n                    key: sssPlease provide a key.\n                    value: sssPlease provide a value.\n                    namespace: ssssssPlease provide a namespace.\n                    permission_set: app_only\n                    resource_type: channel\n                    resource_id: 1\n                    description: thiss\n                    date_created: '2022-06-28T18:15:04+00:00'\n                    date_modified: '2022-06-28T18:16:02+00:00'\n                meta:\n                  pagination:\n                    total: 2\n                    count: 2\n                    per_page: 50\n                    current_page: 1\n                    total_pages: 1\n                    links:\n                      current: '?page=1\u0026limit=50'\n            allOf:\n              - properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/metafield_Base'\n              - properties:\n                  meta:\n                    $ref: '#/components/schemas/MetaWithFullPagination'\n            type: object\n          examples: {}\n  examples:\n    create_channel_req_example:\n      value:\n        name: eBay\n        platform: ebay\n        type: marketplace\n        status: connected\n        config_meta:\n          app:\n            id: 123\n            sections:\n              - title: Overview\n                query_path: overview\n              - title: Settings\n                query_path: settings\n    update_channel_req_example:\n      value:\n        name: Facebook by Meta\n        status: connected\n        is_listable_from_ui: false\n        config_meta:\n          app:\n            id: 123\n            sections:\n              - title: Overview\n                query_path: overview\n              - title: Settings\n                query_path: settings\n    multiple_channels_currency_assignments_req_example:\n      value:\n        - channel_id: 1\n          enabled_currencies:\n            - USD\n          default_currency: USD\n        - channel_id: 664177\n          enabled_currencies:\n            - USD\n            - GBP\n          default_currency: USD\n        - channel_id: 664179\n          enabled_currencies:\n            - USD\n            - AUD\n          default_currency: USD\n        - channel_id: 667159\n          enabled_currencies:\n            - USD\n          default_currency: USD\n    single_channel_currency_assignments_req_example:\n      value:\n        enabled_currencies:\n          - USD\n          - GBP\n          - AUD\n        default_currency: USD\n    create_single_listing_req_example:\n      value:\n        - product_id: 80\n          state: active\n          name: Orbit Terrarium - Large\n          description: 'The same terrarium, but not a [Sample]'\n          variants:\n            - product_id: 80\n              variant_id: 64\n              state: active\n              name: Terrarium with dinosaur\n            - product_id: 80\n              variant_id: 65\n              state: active\n              name: Terrarium with fish\n    create_multiple_listings_req_example:\n      value:\n        - product_id: 80\n          state: active\n          name: Orbit Terrarium - Large\n          description: 'The same terrarium, but not a [Sample]'\n          variants:\n            - product_id: 80\n              variant_id: 64\n              state: active\n              name: Terrarium with dinosaur\n            - product_id: 80\n              variant_id: 65\n              state: active\n              name: Terrarium with fish\n        - product_id: 100\n          state: pending\n          name: Women's Bold T-Shirt\n          description: 'The same t-shirt, but not a [Sample]'\n          variants:\n            - product_id: 100\n              variant_id: 91\n              state: pending\n              name: Small women's bold t-shirt\n            - product_id: 100\n              variant_id: 92\n              state: pending\n              name: Medium women's bold t-shirt\n    update_single_listing_req_example:\n      value:\n        - listing_id: 882998595\n          product_id: 80\n          state: active\n          name: Orbit Terrarium - Large\n          variants:\n            - product_id: 80\n              variant_id: 64\n              state: active\n              name: Terrarium with dinosaur\n    update_multiple_listings_req_example:\n      value:\n        - listing_id: 882789361\n          product_id: 80\n          state: active\n          name: Orbit Terrarium - Large\n          variants:\n            - product_id: 80\n              variant_id: 64\n              state: active\n              name: Terrarium with dinosaur\n        - listing_id: 882789362\n          product_id: 100\n          state: pending\n          name: Women's Bold T-Shirt\n          variants:\n            - product_id: 100\n              variant_id: 91\n              state: pending\n              name: Small women's bold t-shirt\n    multiple_channels_without_currencies_resp_example:\n      value:\n        data:\n          - id: 1\n            icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/bigcommerce.svg'\n            is_listable_from_ui: true\n            is_visible: true\n            date_created: '2021-05-07T14:54:51Z'\n            external_id: ''\n            type: storefront\n            platform: bigcommerce\n            date_modified: '2021-05-07T14:54:51Z'\n            name: Test Store\n            status: prelaunch\n          - id: 664179\n            icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/amazon.svg'\n            is_listable_from_ui: true\n            is_visible: true\n            date_created: '2021-05-10T20:32:40Z'\n            external_id: ''\n            type: marketplace\n            platform: amazon\n            date_modified: '2021-05-13T14:25:54Z'\n            name: Amazon\n            status: connected\n          - id: 667159\n            icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/facebook.svg'\n            is_listable_from_ui: false\n            is_visible: true\n            date_created: '2021-05-13T15:41:39Z'\n            external_id: ''\n            config_meta:\n              app:\n                id: 123\n                sections:\n                  - title: Overview\n                    query_path: overview\n                  - title: Settings\n                    query_path: settings\n            type: marketplace\n            platform: facebook by meta\n            date_modified: '2021-05-13T15:41:39Z'\n            name: Facebook by Meta\n            status: connected\n        meta:\n          pagination:\n            per_page: 2\n            total: 8\n            count: 2\n            links:\n              previous: '?page=1\u0026limit=2'\n              current: '?page=2\u0026limit=2'\n              next: '?page=3\u0026limit=2'\n            total_pages: 4\n            current_page: 2\n    single_channel_without_currencies_resp_example:\n      value:\n        data:\n          id: 667159\n          icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/eBay.svg'\n          is_listable_from_ui: false\n          is_visible: true\n          date_created: '2021-05-13T15:41:39Z'\n          external_id: ''\n          config_meta:\n            app:\n              id: 123\n              sections:\n                - title: Overview\n                  query_path: overview\n                - title: Settings\n                  query_path: settings\n          type: marketplace\n          platform: ebay\n          date_modified: '2021-05-13T15:41:39Z'\n          name: ebay\n          status: connected\n        meta: {}\n    single_channel_with_currencies_resp_example:\n      value:\n        data:\n          id: 667159\n          icon_url: 'https://s3.amazonaws.com/bc-channel-platform/channel-icons/facebook.svg'\n          is_listable_from_ui: false\n          is_visible: true\n          date_created: '2021-05-13T15:41:39Z'\n          external_id: ''\n          config_meta:\n            app:\n              id: 123\n              sections:\n                - title: Overview\n                  query_path: overview\n                - title: Settings\n                  query_path: settings\n          type: marketplace\n          platform: facebook by meta\n          date_modified: '2021-05-13T15:41:39Z'\n          name: Facebook by Meta\n          status: connected\n          currencies:\n            channel_id: 667159\n            enabled_currencies:\n              - USD\n            default_currency: USD\n        meta: {}\n    single_active_theme_resp_example:\n      value:\n        data:\n          active_theme_uuid: e3d82ce0-9bae-0133-0de7-525400970412\n          active_theme_configuration_uuid: 1c0962a0-9172-0139-70bc-2a81c0049363\n          active_theme_version_uuid: b9911770-8a43-0139-f84a-7e39a3a0bc55\n          saved_theme_configuration_uuid: 1c0962a0-9172-0139-70bc-2a81c0049363\n        meta: {}\n    multiple_channels_currency_assignments_resp_example:\n      value:\n        data:\n          - channel_id: 1\n            enabled_currencies:\n              - USD\n            default_currency: USD\n          - channel_id: 664177\n            enabled_currencies:\n              - USD\n              - GBP\n            default_currency: USD\n          - channel_id: 664179\n            enabled_currencies:\n              - USD\n              - AUD\n            default_currency: USD\n          - channel_id: 667159\n            enabled_currencies:\n              - USD\n            default_currency: USD\n        meta: {}\n    single_channel_currency_assignments_resp_example:\n      value:\n        data:\n          channel_id: 1\n          enabled_currencies:\n            - USD\n            - GBP\n            - AUD\n          default_currency: USD\n        meta: {}\n    delete_currency_assignments_resp_example:\n      value:\n        data: 1\n        meta: {}\n    single_listing_resp_example:\n      value:\n        data:\n          - channel_id: 667159\n            listing_id: 882998595\n            product_id: 80\n            state: active\n            name: Orbit Terrarium - Large\n            description: 'The same terrarium, but not a [Sample]'\n            date_created: '2021-05-24T17:46:33Z'\n            date_modified: '2021-05-24T17:46:33Z'\n            variants:\n              - channel_id: 667159\n                product_id: 80\n                variant_id: 64\n                state: active\n                name: Terrarium with dinosaur\n                date_created: '2021-05-24T17:46:33Z'\n                date_modified: '2021-05-24T17:46:33Z'\n              - channel_id: 667159\n                product_id: 80\n                variant_id: 65\n                state: active\n                name: Terrarium with fish\n                date_created: '2021-05-24T17:46:33Z'\n                date_modified: '2021-05-24T17:46:33Z'\n        meta:\n          pagination:\n            count: 1\n            total: 1\n            links:\n              current: '?limit=1000'\n            total_pages: 1\n    multiple_listings_resp_example:\n      value:\n        data:\n          - channel_id: 664177\n            listing_id: 882789361\n            product_id: 80\n            state: active\n            name: Orbit Terrarium - Large\n            description: 'The same terrarium, but not a [Sample]'\n            date_created: '2021-05-24T17:46:33Z'\n            date_modified: '2021-05-24T17:46:33Z'\n            variants:\n              - channel_id: 664177\n                product_id: 80\n                variant_id: 64\n                state: active\n                name: Terrarium with dinosaur\n                date_created: '2021-05-24T17:46:33Z'\n                date_modified: '2021-05-24T17:46:33Z'\n              - channel_id: 664177\n                product_id: 80\n                variant_id: 65\n                state: active\n                name: Terrarium with fish\n                date_created: '2021-05-24T17:46:33Z'\n                date_modified: '2021-05-24T17:46:33Z'\n          - channel_id: 664177\n            listing_id: 882789362\n            product_id: 100\n            state: pending\n            name: Women's Bold T-Shirt\n            description: 'The same t-shirt, but not a [Sample]'\n            date_created: '2021-05-24T17:46:33Z'\n            date_modified: '2021-05-24T17:46:33Z'\n            variants:\n              - channel_id: 664177\n                product_id: 100\n                variant_id: 91\n                state: pending\n                name: Small women's bold t-shirt\n                date_created: '2021-05-24T17:46:33Z'\n                date_modified: '2021-05-24T17:46:33Z'\n              - channel_id: 664177\n                product_id: 100\n                variant_id: 92\n                state: pending\n                name: Medium women's bold t-shirt\n                date_created: '2021-05-24T17:46:33Z'\n                date_modified: '2021-05-24T17:46:33Z'\n        meta:\n          pagination:\n            count: 2\n            total: 2\n            links:\n              current: '?limit=1000'\n            total_pages: 1\n    single_listing_with_empty_meta_resp_example:\n      value:\n        data:\n          channel_id: 667159\n          listing_id: 882998595\n          product_id: 80\n          state: active\n          name: Orbit Terrarium - Large\n          description: 'The same terrarium, but not a [Sample]'\n          date_created: '2021-05-24T17:46:33Z'\n          date_modified: '2021-05-24T17:46:33Z'\n          variants:\n            - channel_id: 667159\n              product_id: 80\n              variant_id: 64\n              state: active\n              name: Terrarium with dinosaur\n              date_created: '2021-05-24T17:46:33Z'\n              date_modified: '2021-05-24T17:46:33Z'\n            - channel_id: 667159\n              product_id: 80\n              variant_id: 65\n              state: active\n              name: Terrarium with fish\n              date_created: '2021-05-24T17:46:33Z'\n              date_modified: '2021-05-24T17:46:33Z'\n        meta: {}\n    channel_menus_resp_example:\n      value:\n        data:\n          bigcommerce_protected_app_sections:\n            - social\n            - carousel\n            - domains\n            - currencies\n            - notifications\n            - storefront_settings\n          custom_app_sections:\n            - title: Overview\n              query_path: overview\n            - title: Products\n              query_path: products\n            - title: Campaigns\n              query_path: campaigns\n            - title: Settings\n              query_path: settings\n        meta: {}\n    error_400_resp_example:\n      value:\n        status: 400\n        title: Input is invalid\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_404_resp_example:\n      value:\n        status: 404\n        title: Not found\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_404_entity_not_found_resp_example:\n      value:\n        status: 404\n        title: The requested entity was not found.\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_404_active_theme_not_found_resp_example:\n      value:\n        status: 404\n        title: 'No active theme found with channel_id: 123456789'\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_404_listing_not_found_resp_example:\n      value:\n        status: 404\n        title: 'Listing [123456789] not found'\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_409_resp_example:\n      value:\n        status: 409\n        title: 'Channel already exists with name: \"Facebook by Meta\", platform: \"facebook by meta\", and type: \"marketplace\"'\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_422_invalid_filter_value_resp_example:\n      value:\n        status: 422\n        title: 'Query parameter \"limit\" value must be integer. For input string: \"a\".'\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_422_channel_resp_example:\n      value:\n        status: 422\n        title: JSON data is missing or invalid\n        type: /api-docs/getting-started/api-status-codes\n        errors:\n          platform: error.path.missing\n          name: error.expected.jsstring\n    error_422_invalid_type_platform_combination_resp_example:\n      value:\n        status: 422\n        title: 'Input channel type [marketplace] with platform [bigcommerce] is not supported'\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_422_prevent_update_type_and_platform_resp_example:\n      value:\n        status: 422\n        title: 'The following fields are invalid: type, platform'\n        type: /api-docs/getting-started/api-status-codes\n        errors:\n          type: The field 'type' can not be updated after channel is created.\n          platform: The field 'platform' can not be updated after channel is created.\n    error_422_prevent_update_deleted_channel_resp_example:\n      value:\n        status: 422\n        title: A deleted channel cannot be updated. Channel can be restored within 90 days after deleting by contacting BigCommerce support team\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_422_multiple_channels_currency_assignments_resp_example:\n      value:\n        status: 422\n        title: JSON data is missing or invalid\n        type: /api-docs/getting-started/api-status-codes\n        errors:\n          0.channel_id: error.expected.jsnumber\n          0.enabled_currencies: error.path.missing\n          0.default_currency: error.path.missing\n    error_422_single_channel_currency_assignments_resp_example:\n      value:\n        status: 422\n        title: JSON data is missing or invalid\n        type: /api-docs/getting-started/api-status-codes\n        errors:\n          enabled_currencies: error.path.missing\n          default_currency: error.path.missing\n    error_422_invalid_enabled_currencies_resp_example:\n      value:\n        status: 422\n        title: 'The following fields are invalid: `enabled_currencies`'\n        type: /api-docs/getting-started/api-status-codes\n        errors:\n          enabled_currencies: 'The field `enabled_currencies` contains the following currencies that have not been enabled [AWG]'\n    error_422_invalid_channel_id_resp_example:\n      value:\n        status: 422\n        title: 'The following `channel_id`s [123456789] are not valid for store 1000000000.'\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_422_invalid_filters_resp_example:\n      value:\n        status: 422\n        title: 'The filter(s): a, b are not valid filter parameter(s).'\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_422_product_id_mismatch_resp_example:\n      value:\n        status: 422\n        title: '0/0 product listing group(s) and 0/0 product listing(s) upserted. Invalid fields: '\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_422_missing_listing_required_fields_resp_example:\n      value:\n        status: 422\n        title: JSON data is missing or invalid\n        type: /api-docs/getting-started/api-status-codes\n        errors:\n          0.state: error.path.missing\n          0.variants: error.path.missing\n          0.product_id: error.path.missing\n    error_422_missing_listing_variants_required_fields_resp_example:\n      value:\n        status: 422\n        title: JSON data is missing or invalid\n        type: /api-docs/getting-started/api-status-codes\n        errors:\n          0.variants.0.state: error.path.missing\n          0.variants.0.product_id: error.path.missing\n          0.variants.0.variant_id: error.path.missing\n    error_422_invalid_channel_id_v2_resp_example:\n      value:\n        status: 422\n        title: Channel id (1000000) is not valid for store (1001808665)!\n        type: /api-docs/getting-started/api-status-codes\n        errors: {}\n    error_422_invalid_listing_id_resp_example:\n      value:\n        status: 422\n        title: '0/0 product listing group(s) and 0/0 product listing(s) upserted. Invalid fields: group_id,'\n        type: /api-docs/getting-started/api-status-codes\n        errors:\n          group_id: Group id (0) for store (1001808665) cannot be less than or equal to zero!\n  securitySchemes:\n    X-Auth-Token:\n      type: apiKey\n      in: header\n      name: X-Auth-Token\n      description: |-\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        |  Channel Listings | modify | `store_channel_listings` |\n        |  Channel Listings | read-only | `store_channel_listings_read_only` |\n        |  Channel Settings | modify | `store_channel_settings` |\n        |  Channel Settings | read-only | `store_channel_settings_read_only` |\n        |  Sites \u0026 Routes | modify | `store_sites` |\n        |  Sites \u0026 Routes | read-only | `store_sites_read_only` |\n\n        ### Headers\n\n        |Header|Parameter|Description|\n        |-|-|-|\n        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n        ### Example\n\n        ```http\n        GET /stores/{store_hash}/v3/catalog/summary\n        host: api.bigcommerce.com\n        Content-Type: application/json\n        X-Auth-Token: {access_token}\n        ```\n\n\n        * For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n  schemas:\n    ChannelId:\n      type: integer\n      format: int64\n      description: The ID of the channel.\n      x-internal: false\n    metafield_Base:\n      title: metafield_Base\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique ID of the *Metafield*.\n          example: 6\n        permission_set:\n          type: string\n          description: |-\n            Determines the visibility and writeability of the field by other API consumers.\n\n            |Value|Description\n            |-|-|\n            |`app_only`|Private to the app that owns the field|\n            |`read`|Visible to other API consumers|\n            |`write`|Open for reading and writing by other API consumers|\n            |`read_and_sf_access`|Visible to other API consumers, including on storefront|\n            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|\n          enum:\n            - app_only\n            - read\n            - write\n            - read_and_sf_access\n            - write_and_sf_access\n        namespace:\n          maxLength: 64\n          minLength: 1\n          type: string\n          description: 'Namespace for the metafield, for organizational purposes.'\n          example: Warehouse Locations\n          x-required:\n            - post\n        key:\n          maxLength: 64\n          minLength: 1\n          type: string\n          description: |\n            The name of the field, for example: `location_id`, `color`. \n          example: Location\n          x-required:\n            - post\n        value:\n          maxLength: 65535\n          minLength: 1\n          type: string\n          description: |\n            The value of the field.\n          example: 4HG\n          x-required:\n            - post\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: |\n            Description for the metafields.\n          example: Location in the warehouse\n        resource_type:\n          type: string\n          description: |\n            The type of resource with which the metafield is associated.\n          example: product\n          enum:\n            - category\n            - brand\n            - product\n            - variant\n          x-required:\n            - post\n        resource_id:\n          maximum: 10000000000\n          minimum: 0\n          type: integer\n          description: |\n            The ID for the resource with which the metafield is associated.\n          example: 111\n          x-required:\n            - post\n        date_created:\n          type: string\n          description: |\n            Date and time of the metafield's creation. Read-Only.\n          format: date-time\n          example: '2018-05-07T20:14:17.000Z'\n        date_modified:\n          type: string\n          description: |\n            Date and time when the metafield was last updated. Read-Only.\n          format: date-time\n          example: '2018-05-07T20:14:17.000Z'\n    PutCheckoutUrl:\n      type: object\n      properties:\n        url:\n          type: string\n          description: Unique site checkout URL. Must be valid and a sub-domain of primary channel URL.\n          format: uri\n          example: 'https://checkout.kittens.mybigcommerce.com'\n      title: ''\n    ChannelIdForListing:\n      type: integer\n      format: int64\n      description: The ID of the channel associated with this channel listing.\n      x-internal: false\n    ListingId:\n      type: integer\n      format: int64\n      minimum: 1\n      description: 'The ID of the channel listing that has been created, returned, or updated.'\n      x-internal: false\n    ProductId:\n      type: integer\n      format: int64\n      description: The ID of the product associated with this channel listing.\n      x-internal: false\n    VariantId:\n      type: integer\n      format: int64\n      description: The ID of the product variant associated with this channel listing.\n      x-internal: false\n    ExternalId:\n      type: string\n      description: Associated ID within a system / platform outside of BC.\n      x-internal: false\n    IsListableFromUI:\n      type: boolean\n      description: Indicates if a channel can create listings from the BigCommerce UI. Default value for this field is based on the channel type and platform combination if not specified on create.\n      x-internal: false\n      x-examples:\n        example-1: true\n    IsVisible:\n      type: boolean\n      description: 'Indicates if a channel is visible within the BigCommerce merchant admin UI (control panel). If `false`, the channel will not show in Channel Manager nor in any channels dropdown throughout the UI. Default value for this field is `true` if not specified on create.'\n      x-internal: false\n    ChannelStatus:\n      type: string\n      description: 'The status of the channel; channel `type`, `platform`, and `status` must be a [valid combination](/api-reference/store-management/channels#status). `terminated` is not valid for `PUT` or `POST` requests. `deleted` is not valid for `POST` requests.'\n      enum:\n        - active\n        - prelaunch\n        - inactive\n        - connected\n        - disconnected\n        - archived\n        - deleted\n        - terminated\n      title: ''\n      x-internal: false\n      x-examples:\n        example-1: active\n    ChannelName:\n      type: string\n      description: Name of the channel as it will appear to merchants in the control panel.\n      x-internal: false\n      x-examples:\n        example-1: string\n    ChannelType:\n      type: string\n      description: 'The type of channel; channel `platform` and `type` must be a [valid combination](/api-reference/store-management/channels#platform).'\n      enum:\n        - pos\n        - marketplace\n        - storefront\n        - marketing\n      x-internal: false\n    ChannelPlatform:\n      type: string\n      description: 'The name of the platform for the channel; channel `platform` and `type` must be a [valid combination](/api-reference/store-management/channels#platform).'\n      x-internal: false\n    ChannelDateCreated:\n      type: string\n      format: date-time\n      description: Date on which the channel was first created.\n      x-internal: false\n    ChannelDateModified:\n      type: string\n      format: date-time\n      description: Date on which the channel was most recently changed.\n      x-internal: false\n    IconUrl:\n      type: string\n      format: url\n      description: Link to the platform icon.\n      x-internal: false\n    EnabledCurrencies:\n      type: array\n      description: 'Currencies that are enabled for the specified channel in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) three character alphabetic format.'\n      items:\n        type: string\n      x-internal: false\n    DefaultCurrency:\n      type: string\n      description: 'Default currency for the channel in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) three character alphabetic format. Will be used on storefront when other currencies cannot.'\n      x-internal: false\n    ChannelProductName:\n      type: string\n      description: Name of the product for this channel listing specifically. This is an optional field that can be used to override the product name in the catalog.\n      x-internal: false\n    ChannelProductVariantName:\n      type: string\n      description: Name of the product variant for this channel listing specifically. This is an optional field that can be used to override the name of the product variant in the catalog.\n      x-internal: false\n    ChannelProductDescription:\n      type: string\n      description: Description of the product for this channel listing specifically. This is an optional field that can be used to override the product description in the catalog.\n      x-internal: false\n    ChannelProductVariantDescription:\n      type: string\n      description: Description of the product variant for this channel listing specifically. This is an optional field that can be used to override the description of the product variant in the catalog.\n      x-internal: false\n    ChannelListingDateCreated:\n      type: string\n      format: date-time\n      description: Date on which the channel listing was first created.\n      x-internal: false\n    ChannelListingVariantDateCreated:\n      type: string\n      format: date-time\n      description: Date on which the channel listing variant was first created.\n      x-internal: false\n    ChannelListingDateModified:\n      type: string\n      format: date-time\n      description: Date on which the channel listing was most recently changed.\n      x-internal: false\n    ChannelListingVariantDateModified:\n      type: string\n      format: date-time\n      description: Date on which the channel listing variant was most recently changed.\n      x-internal: false\n    ListingState:\n      type: string\n      description: The state of the product assignment or channel listing.\n      enum:\n        - active\n        - disabled\n        - error\n        - pending\n        - pending_disable\n        - pending_delete\n        - partially_rejected\n        - queued\n        - rejected\n        - submitted\n        - deleted\n      x-internal: false\n    VariantState:\n      type: string\n      description: The state of the channel listing variant.\n      enum:\n        - active\n        - disabled\n        - error\n        - pending\n        - pending_disable\n        - pending_delete\n        - queued\n        - rejected\n        - submitted\n        - deleted\n      x-internal: false\n    ChannelConfigMeta:\n      type: object\n      description: Optional channel configuration object.\n      x-internal: false\n      properties:\n        app:\n          type: object\n          description: 'A [channel app](/api-docs/channels/overview#channel-apps) config object for optionally configuring the channel''s user interface in the control panel.'\n          properties:\n            id:\n              type: integer\n              description: 'The unique `id` given to an app registered in [DevTools](https://devtools.bigcommerce.com/); used to create links to the app in channel manager. `app.id` is optional; however, if you''re building an app that creates or manages a channel, we recommend including it to ensure the user interface in the control panel works properly. Select partners who are promoted in the Channel Manager must build an app, and include the app ID in the create channel request. [Learn how to find an App''s ID](/api-docs/apps/tutorials/id).'\n            sections:\n              type: array\n              description: 'Sections are now deprecated under config_meta. The new /channel-menus endpoints should be used instead. If set, when the app is loaded within the control panel, the navigation `sections` will be directly embedded in the control panel navigation.'\n              deprecated: true\n              items:\n                type: object\n                deprecated: true\n                properties:\n                  title:\n                    type: string\n                    description: The title of the navigation section.\n                    example: '\"Settings\"'\n                    deprecated: true\n                  query_path:\n                    type: string\n                    description: The value that will be passed to the app's iFrame in the URL and will allow the app to display the appropriate section within the app iFrame in the control panel.\n                    deprecated: true\n      x-examples:\n        example-1:\n          app:\n            id: 0\n            sections:\n              - title: '\"Settings\"'\n                query_path: string\n    CurrencyNotRequiredWithChannelId:\n      type: object\n      description: Details about currency assignments for a specific channel.\n      properties:\n        channel_id:\n          $ref: '#/components/schemas/ChannelId'\n        enabled_currencies:\n          $ref: '#/components/schemas/EnabledCurrencies'\n        default_currency:\n          $ref: '#/components/schemas/DefaultCurrency'\n      x-internal: false\n    CurrencyRequiredWithChannelId:\n      type: object\n      description: Details about currency assignments for a specific channel.\n      properties:\n        channel_id:\n          $ref: '#/components/schemas/ChannelId'\n        enabled_currencies:\n          $ref: '#/components/schemas/EnabledCurrencies'\n        default_currency:\n          $ref: '#/components/schemas/DefaultCurrency'\n      required:\n        - channel_id\n        - enabled_currencies\n        - default_currency\n      x-internal: false\n    CurrencyRequiredWithoutChannelId:\n      type: object\n      description: Details about currency assignments for a specific channel.\n      properties:\n        enabled_currencies:\n          $ref: '#/components/schemas/EnabledCurrencies'\n        default_currency:\n          $ref: '#/components/schemas/DefaultCurrency'\n      required:\n        - enabled_currencies\n        - default_currency\n      x-internal: false\n    CreateChannelReq:\n      type: object\n      properties:\n        config_meta:\n          $ref: '#/components/schemas/ChannelConfigMeta'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        is_listable_from_ui:\n          $ref: '#/components/schemas/IsListableFromUI'\n        is_visible:\n          $ref: '#/components/schemas/IsVisible'\n        status:\n          $ref: '#/components/schemas/ChannelStatus'\n        name:\n          $ref: '#/components/schemas/ChannelName'\n        type:\n          $ref: '#/components/schemas/ChannelType'\n        platform:\n          $ref: '#/components/schemas/ChannelPlatform'\n      required:\n        - name\n        - type\n        - platform\n      x-internal: false\n      x-examples:\n        example-1:\n          config_meta:\n            app:\n              id: 0\n              sections:\n                - title: '\"Settings\"'\n                  query_path: string\n          external_id: string\n          is_listable_from_ui: true\n          is_visible: true\n          status: active\n          name: string\n          type: pos\n          platform: string\n    UpdateChannelReq:\n      type: object\n      properties:\n        config_meta:\n          $ref: '#/components/schemas/ChannelConfigMeta'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        is_listable_from_ui:\n          $ref: '#/components/schemas/IsListableFromUI'\n        is_visible:\n          $ref: '#/components/schemas/IsVisible'\n        name:\n          $ref: '#/components/schemas/ChannelName'\n        status:\n          $ref: '#/components/schemas/ChannelStatus'\n      x-internal: false\n    UpsertMultipleChannelsCurrencyAssignmentsReq:\n      type: array\n      items:\n        $ref: '#/components/schemas/CurrencyRequiredWithChannelId'\n      x-internal: false\n    CreateMultipleListingsReq:\n      type: array\n      items:\n        $ref: '#/components/schemas/UpsertListingWithoutListingIdReq'\n      x-internal: false\n    UpdateMultipleListingsReq:\n      type: array\n      items:\n        $ref: '#/components/schemas/UpsertListingWithListingIdReq'\n      x-internal: false\n    UpsertListingWithoutListingIdReq:\n      type: object\n      description: Details about assigning a product to a specific channel.\n      properties:\n        product_id:\n          $ref: '#/components/schemas/ProductId'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        state:\n          $ref: '#/components/schemas/ListingState'\n        name:\n          $ref: '#/components/schemas/ChannelProductName'\n        description:\n          $ref: '#/components/schemas/ChannelProductDescription'\n        variants:\n          $ref: '#/components/schemas/ChannelProductMultipleVariants'\n      required:\n        - product_id\n        - state\n        - variants\n      x-internal: false\n    UpsertListingWithListingIdReq:\n      type: object\n      description: Details about assigning a product to a specific channel.\n      properties:\n        listing_id:\n          $ref: '#/components/schemas/ListingId'\n        product_id:\n          $ref: '#/components/schemas/ProductId'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        state:\n          $ref: '#/components/schemas/ListingState'\n        name:\n          $ref: '#/components/schemas/ChannelProductName'\n        description:\n          $ref: '#/components/schemas/ChannelProductDescription'\n        variants:\n          $ref: '#/components/schemas/ChannelProductMultipleVariants'\n      required:\n        - listing_id\n        - product_id\n        - state\n        - variants\n      x-internal: false\n    ChannelProductMultipleVariants:\n      type: array\n      items:\n        $ref: '#/components/schemas/ChannelProductVariantPartial'\n      x-internal: false\n    ChannelProductVariantPartial:\n      type: object\n      description: Details about a variant of the product for this channel listing.\n      properties:\n        product_id:\n          $ref: '#/components/schemas/ProductId'\n        variant_id:\n          $ref: '#/components/schemas/VariantId'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        state:\n          $ref: '#/components/schemas/VariantState'\n        name:\n          $ref: '#/components/schemas/ChannelProductVariantName'\n        description:\n          $ref: '#/components/schemas/ChannelProductVariantDescription'\n      required:\n        - product_id\n        - variant_id\n        - state\n      x-internal: false\n    ChannelProductVariantFull:\n      type: object\n      description: Details about a variant of the product for this channel listing.\n      properties:\n        channel_id:\n          $ref: '#/components/schemas/ChannelIdForListing'\n        product_id:\n          $ref: '#/components/schemas/ProductId'\n        variant_id:\n          $ref: '#/components/schemas/VariantId'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        state:\n          $ref: '#/components/schemas/VariantState'\n        name:\n          $ref: '#/components/schemas/ChannelProductVariantName'\n        description:\n          $ref: '#/components/schemas/ChannelProductVariantDescription'\n        date_created:\n          $ref: '#/components/schemas/ChannelListingVariantDateCreated'\n        date_modified:\n          $ref: '#/components/schemas/ChannelListingVariantDateModified'\n      x-internal: false\n    ChannelWithoutCurrencies:\n      type: object\n      properties:\n        config_meta:\n          $ref: '#/components/schemas/ChannelConfigMeta'\n        id:\n          $ref: '#/components/schemas/ChannelId'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        is_listable_from_ui:\n          $ref: '#/components/schemas/IsListableFromUI'\n        is_visible:\n          $ref: '#/components/schemas/IsVisible'\n        status:\n          $ref: '#/components/schemas/ChannelStatus'\n        name:\n          $ref: '#/components/schemas/ChannelName'\n        type:\n          $ref: '#/components/schemas/ChannelType'\n        platform:\n          $ref: '#/components/schemas/ChannelPlatform'\n        date_created:\n          $ref: '#/components/schemas/ChannelDateCreated'\n        date_modified:\n          $ref: '#/components/schemas/ChannelDateModified'\n        icon_url:\n          $ref: '#/components/schemas/IconUrl'\n      x-internal: false\n    ChannelWithCurrencies:\n      type: object\n      properties:\n        config_meta:\n          $ref: '#/components/schemas/ChannelConfigMeta'\n        id:\n          $ref: '#/components/schemas/ChannelId'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        is_listable_from_ui:\n          $ref: '#/components/schemas/IsListableFromUI'\n        is_visible:\n          $ref: '#/components/schemas/IsVisible'\n        status:\n          $ref: '#/components/schemas/ChannelStatus'\n        name:\n          $ref: '#/components/schemas/ChannelName'\n        type:\n          $ref: '#/components/schemas/ChannelType'\n        platform:\n          $ref: '#/components/schemas/ChannelPlatform'\n        date_created:\n          $ref: '#/components/schemas/ChannelDateCreated'\n        date_modified:\n          $ref: '#/components/schemas/ChannelDateModified'\n        icon_url:\n          $ref: '#/components/schemas/IconUrl'\n        currencies:\n          $ref: '#/components/schemas/CurrencyNotRequiredWithChannelId'\n      x-internal: false\n    ActiveTheme:\n      type: object\n      description: Details about the Channel's relationship to Themes.\n      properties:\n        active_theme_uuid:\n          type: string\n          description: The UUID of the currently active Theme on the Channel.\n        active_theme_configuration_uuid:\n          type: string\n          description: The UUID of the currently active Theme Configuration on the Channel.\n        active_theme_version_uuid:\n          type: string\n          description: The UUID of the currently active Theme Version on the Channel. Needed to look up the available Custom Templates for the Theme.\n        saved_theme_configuration_uuid:\n          type: string\n          description: 'The UUID of the most recently saved Theme Configuration. If this is different from the active Theme Configuration UUID, this indicates that some changes have been saved in the control panel Theme Editor that have not yet been published.'\n      x-internal: false\n    Listing:\n      type: object\n      properties:\n        channel_id:\n          $ref: '#/components/schemas/ChannelIdForListing'\n        listing_id:\n          $ref: '#/components/schemas/ListingId'\n        external_id:\n          $ref: '#/components/schemas/ExternalId'\n        product_id:\n          $ref: '#/components/schemas/ProductId'\n        state:\n          $ref: '#/components/schemas/ListingState'\n        name:\n          $ref: '#/components/schemas/ChannelProductName'\n        description:\n          $ref: '#/components/schemas/ChannelProductDescription'\n        date_created:\n          $ref: '#/components/schemas/ChannelListingDateCreated'\n        date_modified:\n          $ref: '#/components/schemas/ChannelListingDateModified'\n        variants:\n          type: array\n          items:\n            $ref: '#/components/schemas/ChannelProductVariantFull'\n      x-internal: false\n    BigcommerceProtectedAppSections:\n      type: array\n      description: 'List of pre-built UI pages an app developer can choose to enable for a channel.  More information can be found [here](https://developer.bigcommerce.com/docs/ZG9jOjM4MzMyMzA-building-storefront-channels#protected-ui-sections)'\n      items:\n        type: string\n        enum:\n          - storefront_settings\n          - social\n          - carousel\n          - domains\n          - currencies\n          - notifications\n    channel_menus_Post:\n      type: object\n      properties:\n        bigcommerce_protected_app_sections:\n          $ref: '#/components/schemas/BigcommerceProtectedAppSections'\n        custom_app_sections:\n          $ref: '#/components/schemas/CustomAppSections'\n    CustomAppSections:\n      type: array\n      items:\n        type: object\n        properties:\n          title:\n            type: string\n            description: Text displayed to the merchant\n          query_path:\n            type: string\n            description: Value used in the `section` query param\n        x-internal: false\n    Error:\n      type: object\n      properties:\n        status:\n          type: integer\n          format: int32\n          description: The HTTP status code.\n        title:\n          type: string\n          description: The error title describing the particular error.\n        type:\n          type: string\n          description: Link to a list of BigCommerce API status codes.\n        errors:\n          type: object\n          description: Provides more details to errors.\n      x-internal: false\n    MetaWithFullPagination:\n      type: object\n      description: 'Data about the response, including pagination.'\n      properties:\n        pagination:\n          $ref: '#/components/schemas/pagination_Full'\n      x-internal: false\n    MetaWithPartialPagination:\n      type: object\n      description: 'Data about the response, including pagination.'\n      properties:\n        pagination:\n          $ref: '#/components/schemas/pagination_Partial'\n      x-internal: false\n    EmptyMeta:\n      type: object\n      description: Empty meta object; may be used later.\n      x-internal: false\n    pagination_Full:\n      type: object\n      description: |\n        Data about the pagination.\n      properties:\n        per_page:\n          type: integer\n          description: |\n            The maximum number of items per page.\n        total:\n          type: integer\n          description: |\n            Total number of items in the result set.\n        count:\n          type: integer\n          description: |\n            Total number of items in the collection response.\n        total_pages:\n          type: integer\n          description: |\n            The total number of pages in the collection.\n        current_page:\n          type: integer\n          description: The current page number.\n        links:\n          type: object\n          description: |\n            Pagination links for the previous, current, or next parts of the whole collection.\n          properties:\n            previous:\n              type: string\n              description: |\n                Link to the previous page returned in the response.\n            current:\n              type: string\n              description: |\n                Link to the current page returned in the response.\n            next:\n              type: string\n              description: |\n                Link to the next page returned in the response.\n      x-internal: false\n    pagination_Partial:\n      type: object\n      description: |\n        Data about the pagination.\n      properties:\n        count:\n          type: integer\n          description: |\n            Total number of items in the collection response.\n        total:\n          type: integer\n          description: |\n            Total number of items in the result set.\n        links:\n          type: object\n          description: |\n            Pagination links for the previous, current, or next parts of the whole collection.\n          properties:\n            previous:\n              type: string\n              description: |\n                Link to the previous page returned in the response.\n            current:\n              type: string\n              description: |\n                Link to the current page returned in the response.\n            next:\n              type: string\n              description: |\n                Link to the next page returned in the response.\n        total_pages:\n          type: integer\n          description: |\n            The total number of pages in the collection.\n      x-internal: false\n    Site:\n      type: object\n      properties:\n        id:\n          type: integer\n        url:\n          type: string\n          description: The fully qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.\n          example: 'http://kittens.mybigcommerce.com/'\n        channel_id:\n          type: integer\n          description: 'The channel to which this site is attached. Each site belongs to a single channel, and each channel can have either zero or more sites.'\n        created_at:\n          type: string\n          description: 'The date-time that this site was created, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'\n          example: '2018-01-04T04:15:50.000Z'\n          format: date-time\n        updated_at:\n          type: string\n          description: 'The date-time that this site was last updated, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'\n          example: '2018-01-04T04:15:50.000Z'\n          format: date-time\n        ssl_status:\n          type: string\n          enum:\n            - dedicated\n            - shared\n          description: 'Indicates if a private/dedicated SSL is installed on this site, or if it''s using shared SSL.'\n        urls:\n          type: array\n          description: 'All URLs that belong to the site, including `primary`, `canonical`, and `checkout` URLs.'\n          items:\n            $ref: '#/components/schemas/Url'\n        is_checkout_url_customized:\n          type: boolean\n          description: 'Indicates whether the channel uses a custom checkout domain. When `false`, the checkout domain falls back to the default channel’s primary URL.'\n    Url:\n      type: object\n      properties:\n        url:\n          type: string\n          description: URL of site\n        type:\n          type: string\n          description: URL type\n          enum:\n            - primary\n            - canonical\n            - checkout\n        created_at:\n          type: string\n          example: '2018-01-04T04:15:50.000Z'\n          format: date-time\n          description: 'The date-time that this URL was created, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'\n        updated_at:\n          type: string\n          description: 'The date-time that this URL was last updated, formatted as an [RFC-3339](https://www.ietf.org/rfc/rfc3339.txt) string.'\n          example: '2018-01-04T04:15:50.000Z'\n          format: date-time\n    site_Put:\n      type: object\n      properties:\n        url:\n          type: string\n          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.\n      title: site_Put\n      x-internal: false\n    site_Post:\n      type: object\n      properties:\n        url:\n          type: string\n          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.\n          example: 'http://kittens.mybigcommerce.com/'\n        channel_id:\n          type: integer\n          description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'\n      title: site_Post\n      x-internal: false\n    site_Full:\n      type: object\n      properties:\n        id:\n          type: integer\n        url:\n          type: string\n          description: The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.\n          example: 'http://kittens.mybigcommerce.com/'\n        channel_id:\n          type: integer\n          description: 'The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites.'\n        created_at:\n          type: string\n          description: When was this site created? RFC 3339\n          example: '2018-01-04T04:15:50.000Z'\n        updated_at:\n          type: string\n          description: When was this site defintion last updated? RFC 3339\n          example: '2018-01-04T04:15:50.000Z'\n        routes:\n          type: array\n          description: (optional - if included) collection of routes defined for this site. Limited to 200 routes side loaded (query routes direction via `/routes` for bulk)\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                description: Unique ID for this route. Required when updating an existing route\n              type:\n                type: string\n                description: What type of resource are we routing to?\n                enum:\n                  - product\n                  - brand\n                  - category\n                  - page\n                  - blog\n                  - home\n                  - cart\n                  - checkout\n                  - search\n                  - account\n                  - login\n                  - returns\n                  - static\n              matching:\n                type: string\n                description: |-\n                  (entity_id?) For the specified type, which resources should match this route? e.g For a route with the type: \"product\" and matching: \"5\" this route would be used for the product with the ID of 5.\n\n                  Depending on the type of resource, this may be an ID (matching a specific item), or a \"*\" wildcard matching all items of that type.\n                example: '5'\n              route:\n                type: string\n                description: |-\n                  The route template that will be used to generate the URL for the requested resource.\n\n                  Supports several tokens:\n\n                  - {id} The ID of the requested item\n                  - {slug} The slug for the requested item (if available). Note: the `slug` value may contain `/` slash\n                  - {language} The language string that the client is using\n                example: /my-amazing-product\n      title: site_Full\n      x-internal: false\n    metafield_Post:\n      title: metafield_Post\n      x-stoplight:\n        id: gvfymy3yuc101\n      type: object\n      description: 'Metafield for products, categories, variants, and brands. The max number of metafields allowed on each product, category, variant, or brand is fifty. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'\n      x-internal: false\n      properties:\n        namespace:\n          maxLength: 64\n          minLength: 1\n          type: string\n          description: 'Namespace for the metafield, for organizational purposes. This is set by the developer.'\n          example: Warehouse Locations\n          x-required:\n            - post\n        key:\n          maxLength: 64\n          minLength: 1\n          type: string\n          description: |\n            The name of the field.\n          example: Location\n          x-required:\n            - post\n        value:\n          maxLength: 65535\n          minLength: 1\n          type: string\n          description: |\n            The value of the field.\n          example: 4HG\n          x-required:\n            - post\n        permission_set:\n          type: string\n          description: |-\n            Determines the visibility and writeability of the field by other API consumers.\n\n            |Value|Description\n            |-|-|\n            |`app_only`|Private to the app that owns the field|\n            |`read`|Visible to other API consumers|\n            |`write`|Open for reading and writing by other API consumers|\n            |`read_and_sf_access`|Visible to other API consumers, including on storefront|\n            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|\n          enum:\n            - app_only\n            - read\n            - write\n            - read_and_sf_access\n            - write_and_sf_access\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: |\n            Description for the metafield.\n          example: Location in the warehouse\n      required:\n        - namespace\n        - key\n        - value\n        - permission_set\n    metafield_Put:\n      title: metafield_Put\n      x-stoplight:\n        id: 5gl48f06wgr1v\n      type: object\n      description: 'Metafield for products, categories, variants, and brands. The max number of metafields allowed on each product, category, variant, or brand is fifty. For more information, see [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits) in the Help Center.'\n      x-internal: false\n      properties:\n        namespace:\n          maxLength: 64\n          minLength: 1\n          type: string\n          description: 'Namespace for the metafield, for organizational purposes.'\n          example: Warehouse Locations\n          x-required:\n            - post\n        key:\n          maxLength: 64\n          minLength: 1\n          type: string\n          description: |\n            The name of the field.\n          example: Location\n          x-required:\n            - post\n        value:\n          maxLength: 65535\n          minLength: 1\n          type: string\n          description: |\n            The value of the field.\n          example: 4HG\n          x-required:\n            - post\n        permission_set:\n          type: string\n          description: |-\n            Determines the visibility and writeability of the field by other API consumers.\n\n            |Value|Description\n            |-|-|\n            |`app_only`|Private to the app that owns the field|\n            |`read`|Visible to other API consumers|\n            |`write`|Open for reading and writing by other API consumers|\n            |`read_and_sf_access`|Visible to other API consumers, including on storefront|\n            |`write_and_sf_access`|Open for reading and writing by other API consumers, including on storefront|\n          enum:\n            - app_only\n            - read\n            - write\n            - read_and_sf_access\n            - write_and_sf_access\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: |\n            Description for the metafield.\n          example: Location in the warehouse\n",
			"canonicalURL": "/github.com/bigcommerce/api-specs@c39f508877c17de6648549038474f5bc79579ff1/-/blob/reference/channels.v3.yml",
			"externalURLs": [
				{
					"url": "https://github.com/bigcommerce/api-specs/blob/c39f508877c17de6648549038474f5bc79579ff1/reference/channels.v3.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/stores/{store_hash}/v3/channels/{channel_id}/metafields\": get: operation \"get-channels-channel_id-metafields\": parameters: parse parameter \"\": at 1:85014: external \"./catalog.v3.yml\": get: file: local file reference is not allowed"
}