{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-tools"
		},
		"file": {
			"name": "typeMisMatchNestedArrayType.yaml",
			"size": 0,
			"path": "openapi-validator/src/test/resources/project-based-tests/modules/recordValidation/swagger/invalidTests/typeMisMatchNestedArrayType.yaml",
			"byteSize": 2495,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\"\n  version: \"1.0.0\"\n  title: \"Swagger Petstore\"\n  termsOfService: \"http://swagger.io/terms/\"\n  contact:\n    email: \"apiteam@swagger.io\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\nhost: \"petstore.swagger.io\"\nbasePath: \"/v2\"\ntags:\n  - name: \"pet\"\n    description: \"Everything about your Pets\"\n    externalDocs:\n      description: \"Find out more\"\n      url: \"http://swagger.io\"\n  - name: \"store\"\n    description: \"Access to Petstore orders\"\n  - name: \"user\"\n    description: \"Operations about user\"\n    externalDocs:\n      description: \"Find out more about our store\"\n      url: \"http://swagger.io\"\npaths:\n  /user:\n    post:\n      tags:\n        - \"typeMisMatchArray\"\n      summary: \"Test mismatching array types\"\n      description: \"This can only be done by the logged in user.\"\n      operationId: \"createUser\"\n      parameters:\n        - in: \"body\"\n          name: \"body\"\n          description: \"Created user object\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/TypeMisMatchNestedArray\"\n      responses:\n        default:\n          description: \"successful operation\"\n      requestBody:\n        description:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TypeMisMatchNestedArray\"\ncomponents:\n  schemas:\n    TypeMisMatchNestedArray:\n      type: \"object\"\n      properties:\n        id:\n          type: \"integer\"\n          format: \"int64\"\n        username:\n          type: \"string\"\n        firstName:\n          type: \"string\"\n        lastName:\n          type: \"string\"\n        email:\n          type: \"string\"\n        password:\n          type: \"string\"\n        phone:\n          type: \"array\"\n          xml:\n            name: \"phone\"\n            wrapped: true\n          items:\n            type: \"array\"\n            items:\n              type: \"array\"\n              items:\n                type: \"array\"\n                items:\n                  type: \"integer\"\n                  format: \"int64\"\n    userStatus:\n      type: \"integer\"\n      format: \"int32\"\n      description: \"User Status\"\n\n    xml:\n      name: \"TypeMisMatchNestedArray\"\n\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /user: post: operation \"createUser\": parameters: parse parameter \"body\": unsupported parameter type \"body\""
}