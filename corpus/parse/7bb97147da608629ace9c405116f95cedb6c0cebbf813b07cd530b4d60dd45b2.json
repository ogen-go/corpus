{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/juxt/apex"
		},
		"file": {
			"name": "traces.yaml",
			"size": 0,
			"path": "modules/trace/src/juxt/apex/alpha/trace/traces.yaml",
			"byteSize": 2086,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Apex Traces\n  license:\n    name: MIT\npaths:\n  /requests:\n    get:\n      summary: List all requests\n      operationId: listRequests\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: The maximum number of requests to display\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: All requests\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /requests/{requestId}:\n    get:\n      summary: Info for a specific request\n      operationId: showRequestById\n      parameters:\n        - name: requestId\n          in: path\n          required: true\n          description: The id of the request to retrieve\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                type: object\n  /requests/{requestId}/states/{stateId}:\n    get:\n      summary: Info for a specific request state\n      operationId: showRequestStateById\n      parameters:\n        - name: requestId\n          in: path\n          required: true\n          description: The id of the request to retrieve\n          schema:\n            type: integer\n        - name: stateId\n          in: path\n          required: true\n          description: The id of the request state to retrieve\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                type: object\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /requests: get: operation \"listRequests\": responses: 200: content: application/json: schema: parse schema: resolve \"#/components/schemas/Pets\": find schema: resolve \"#/components/schemas/Pets\": can't find value for \"components/schemas/Pets\""
}