{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NaturalSelectionLabs/RSS3-PreGod"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "doc/openapi.yaml",
			"byteSize": 10859,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    This is a simple API guide for RSS3 PreGod. You can find out more about RSS3 PreGod at [rss3.io](http://rss3.io/) or on [GitHub](https://github.com/NaturalSelectionLabs/RSS3-PreGod).\n  version: \"0.4.0\"\n  title: RSS3 PreGod API\n  # termsOfService: 'http://rss3.io/terms/'\n  contact:\n    email: contact@rss3.io\n  license:\n    name: GNU Affero General Public License v3.0\n    url: \"https://www.gnu.org/licenses/agpl-3.0.en.html\"\nservers:\n  - description: PreGod API Test Instance\n    url: \"https://test-pregod.rss3.dev/v0.4.0\"\ntags:\n  - name: Note\n    externalDocs:\n      description: Find out more.\n      url: \"https://rss3.io/\"\npaths:\n  \"/account:{instance}@{platform}/notes\":\n    get:\n      tags:\n        - Note\n      summary: Get Notes by RSS3URI.\n      description: Returns a list of Notes.\n      operationId: getNotesByRSS3URI\n      parameters:\n        - name: instance\n          in: path\n          description: The address of the instance.\n          required: true\n          example: \"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\"\n          schema:\n            type: string\n        - name: platform\n          in: path\n          description: The platform of the instance.\n          required: true\n          schema:\n            type: string\n            enum:\n              - ethereum\n              - solana\n              - flow\n              - arweave\n        - name: last_identifier\n          in: query\n          description: The pointer used for paging.\n          required: false\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Limit the number of Notes returned by the server.\n          required: false\n          example: 10\n          schema:\n            type: number\n            default: 100\n            maximum: 100\n        - name: tags\n          in: query\n          description: Include Notes by tags.\n          required: false\n          example: \"NFT\"\n          schema:\n            type: string\n        - name: exclude_tags\n          in: query\n          description: Filter out Notes by tags.\n          required: false\n          example: \"POAP\"\n          schema:\n            type: string\n        # Swagger UI doesn't not render `oneOf` schema properly.\n        - name: item_sources\n          in: query\n          description: \"Include Notes by indexing sources.\"\n          required: false\n          example: \"Ethereum NFT\"\n          schema:\n            type: string\n            enum:\n              - Crossbell\n              - Ethereum NFT\n              - Solana NFT\n              - Flow NFT\n              - Mirror Entry\n              - Gitcoin Contribution\n      responses:\n        \"200\":\n          description: A valid request.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/GetResponse\"\n                  - $ref: \"#/components/schemas/InvalidRequest\"\n  \"/notes\":\n    post:\n      tags:\n        - Note\n      summary: Get Notes by an RSS3URI list.\n      description: Returns a list of Notes.\n      operationId: getNotesByRSS3URIList\n      requestBody:\n        $ref: \"#/components/requestBodies/NoteList\"\n      responses:\n        \"200\":\n          description: valid request\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/PostResponse\"\n                  - $ref: \"#/components/schemas/InvalidRequest\"\nexternalDocs:\n  description: Find out more about RSS3.\n  url: \"https://rss3.io\"\ncomponents:\n  schemas:\n    GetResponse:\n      type: object\n      required:\n        [\n          \"version\",\n          \"date_updated\",\n          \"identifier\",\n          \"identifier_next\",\n          \"total\",\n          \"list\",\n        ]\n      properties:\n        version:\n          type: string\n          description: The version of the RSS3 PreGod instance.\n          example: v0.4.0\n        date_updated:\n          $ref: \"#/components/schemas/Date\"\n        identifier:\n          type: string\n          example: rss3://account:0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045@ethereum/notes?limit=100\n          description: The identifier of the current request.\n        identifier_next:\n          type: string\n          example: rss3://account:0xd8da6bf26964af9d7eed9e03e53415d37aa96045@ethereum/notes?last_identifier=rss3%3A%2F%2Fnote%3A0x90b2a3072915d194bf8d8eea937545bb196eeb0f4894f068d334b666cf75d2bc-178-18%40ethereum\u0026limit=100\n          description: The pointer of the current request.\n        total:\n          type: number\n          example: 123\n          description: The total number of Notes indexed for the instance.\n        list:\n          type: array\n          description: The requested Notes.\n          items:\n            $ref: \"#/components/schemas/Note\"\n    PostResponse:\n      type: object\n      required: [\"version\", \"date_updated\", \"identifier_next\", \"total\", \"list\"]\n      properties:\n        version:\n          type: string\n          description: The version of the RSS3 PreGod instance.\n          example: v0.4.0\n        date_updated:\n          $ref: \"#/components/schemas/Date\"\n        identifier_next:\n          type: string\n          example: rss3://account:0xd8da6bf26964af9d7eed9e03e53415d37aa96045@ethereum/notes?last_identifier=rss3%3A%2F%2Fnote%3A0x90b2a3072915d194bf8d8eea937545bb196eeb0f4894f068d334b666cf75d2bc-178-18%40ethereum\u0026limit=100\n          description: The pointer of the current request.\n        total:\n          type: number\n          example: 123\n          description: The total number of Notes indexed for the instance.\n        list:\n          type: array\n          description: The requested Notes.\n          items:\n            $ref: \"#/components/schemas/Note\"\n    InvalidRequest:\n      type: object\n      required: [code, error]\n      properties:\n        code:\n          type: integer\n          example: 0\n          format: int32\n        error:\n          type: string\n          example: \"no router\"\n      description: Returns when an invalid request was received.\n    Date:\n      type: string\n      description: Conform to the RFC3339 Datetime format.\n      format: date-time\n      example: \"2022-01-19T02:06:38.000Z\"\n    Note:\n      type: object\n      required:\n        [\n          identifier,\n          date_created,\n          date_updated,\n          related_urls,\n          tags,\n          authors,\n          summary,\n          attachments,\n          source,\n        ]\n      properties:\n        identifier:\n          type: string\n          example: \"rss3://asset:0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb-1800@ethereum\"\n        date_created:\n          $ref: \"#/components/schemas/Date\"\n        date_updated:\n          $ref: \"#/components/schemas/Date\"\n        related_urls:\n          type: array\n          items:\n            type: string\n            example:\n              [\n                \"https://etherscan.io/nft/0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb/1800\",\n                \"https://opensea.io/assets/0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb/1800\",\n              ]\n        tags:\n          type: array\n          items:\n            type: string\n            example: [\"NFT\"]\n        authors:\n          type: array\n          items:\n            type: string\n            example:\n              [\n                \"rss3://account:0xC8b960D09C0078c18Dcbe7eB9AB9d816BcCa8944@ethereum\",\n              ]\n        summary:\n          type: string\n          example: \"Here we go. https://t.co/DyyJsje3SR\"\n        attachments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Attachments\"\n        source:\n          $ref: \"#/components/schemas/Metadata\"\n      description: A Note representing an action or an event generated by the instance.\n    Attachments:\n      type: object\n      required: [type, address, mime_type]\n      properties:\n        type:\n          type: string\n          example: \"object\"\n        address:\n          type: string\n          example: \"ipfs://bafybeicij6vw6xcsgwldofnmmh3c3j4w5yiocs6l72yubpbcldxcglkvqe/rss3-whitepaper-no-1800.glb\"\n        content:\n          type: string\n          example: '{\"Author(s)\":\"Natural Selection Labs\",\"Edition\":\"First Edition\",\"Edition Language\":\"English\",\"File Format\":\"PDF\",\"No.\":1800,\"date\":1610323200}'\n        mime_type:\n          type: string\n          example: \"model/gltf-binary\"\n        size_in_bytes:\n          type: number\n          example: 3983376\n    Metadata:\n      type: object\n      required: [network, proof]\n      properties:\n        network:\n          type: string\n          example: \"Ethereum\"\n        proof:\n          type: string\n          example: \"0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb-1800\"\n        token_standard:\n          type: string\n          example: \"ERC-721\"\n        token_id:\n          type: string\n          example: \"1800\"\n        token_symbol:\n          type: string\n          example: \"RWP\"\n        collection_address:\n          type: string\n          example: \"0xb9619cf4f875cdf0e3ce48b28a1c725bc4f6c0fb\"\n        collection_name:\n          type: string\n          example: \"RSS3 Whitepaper\"\n  requestBodies:\n    NoteList:\n      description: Retrieve a list of notes belonging to the supplied list of RSS3URIs.\n      required: true\n      content:\n        application/json:\n          schema:\n            required: [\"addresses\"]\n            properties:\n              addresses:\n                type: array\n                description: The list of RSS3URIs\n                example:\n                  [\n                    \"rss3://account:0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045@ethereum\",\n                    \"rss3://account:0x827431510a5D249cE4fdB7F00C83a3353F471848@ethereum\",\n                  ]\n              last_identifier:\n                type: string\n                description: The pointer used for paging.\n                example: \"rss3://note:0x5175b715019267bf8bcf37f95129c0ff400129eee675cdf261907701ac2da568-295-22@ethereum\"\n              limit:\n                type: number\n                description: Limit the number of notes returned by the server.\n                default: 100\n                maximum: 100\n                example: 10\n              tags:\n                type: array\n                description: Include notes by tags.\n                example: [\"NFT\"]\n              exclude_tags:\n                type: array\n                description: Filter out notes by tags.\n                example: [\"POAP\"]\n              item_sources:\n                type: array\n                description: \"Include Notes by indexing sources.\"\n                example: [\"Ethereum NFT\"]\n                enum:\n                  - Crossbell\n                  - Ethereum NFT\n                  - Solana NFT\n                  - Flow NFT\n                  - Mirror Entry\n                  - Gitcoin Contribution\n",
			"canonicalURL": "/github.com/NaturalSelectionLabs/RSS3-PreGod@8fb5c9f36e5ca6d27f044590b46395f31b301b3b/-/blob/doc/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NaturalSelectionLabs/RSS3-PreGod/blob/8fb5c9f36e5ca6d27f044590b46395f31b301b3b/doc/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: requestBodies: \"NoteList\": content: application/json: schema: parse schema: property \"item_sources\": parse enum values: parse value \"\\\"Crossbell\\\"\": expected type \"array\", got \"string\""
}