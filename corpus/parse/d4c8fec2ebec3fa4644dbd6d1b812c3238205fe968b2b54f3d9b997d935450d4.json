{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/abunuwas/fastapi-jwt-tutorial"
		},
		"file": {
			"name": "oas.yaml",
			"size": 0,
			"path": "oas.yaml",
			"byteSize": 4925,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: TODO API\n  description: API that allows you to manage a to-do list\n  version: 1.0.0\n\npaths:\n  /todo:\n    get:\n      summary: Returns a list of to-do items\n      operationId: getTasks\n      responses:\n        '200':\n          description: A JSON array of tasks\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTasksSchema'\n\n    post:\n      summary: Creates a task\n      operationId: createTask\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTaskSchema'\n      responses:\n        '201':\n          description: A JSON representation of the created task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTaskSchema'\n          links:\n            GetTask:\n              operationId: getTask\n              parameters:\n                task_id: '$response.body#/id'\n              description: \u003e\n                The `id` value returned in the response can be used as\n                the `task_id` parameter in `GET /todo/{task_id}\n            UpdateTask:\n              operationId: updateTask\n              parameters:\n                task_id: '$response.body#/id'\n              description: \u003e\n                The `id` value returned in the response can be used as\n                the `task_id` parameter in `PUT /todo/{task_id}\n            DeleteTask:\n              operationId: deleteTask\n              parameters:\n                task_id: '$response.body#/id'\n              description: \u003e\n                The `id` value returned in the response can be used as\n                the `task_id` parameter in `DELETE /todo/{task_id}\n\n  /todo/{task_id}:\n    parameters:\n      - in: path\n        name: task_id\n        required: true\n        schema:\n          type: string\n          format: uuid\n        example: d222e7a3-6afb-463a-9709-38eb70cc670d\n    get:\n      summary: Returns the details of a task\n      operationId: getTask\n      responses:\n        '200':\n          description: A JSON representation of a task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTaskSchema'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      summary: Replaces an existing task\n      operationId: updateTask\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTaskSchema'\n      responses:\n        '200':\n          description: A JSON representation of a task\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTaskSchema'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Deletes an existing task\n      operationId: deleteTask\n      responses:\n        '204':\n          description: The resource was deleted successfully\n        '404':\n          $ref: '#/components/responses/NotFound'\n\ncomponents:\n  responses:\n    NotFound:\n      description: The specified resource was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  schemas:\n    Error:\n      type: object\n      properties:\n        detail:\n          type: string\n\n    CreateTaskSchema:\n      type: object\n      required:\n        - task\n      additionalProperties: false\n      properties:\n        priority:\n          type: string\n          enum:\n            - low\n            - medium\n            - high\n          default: low\n        status:\n          type: string\n          enum:\n            - pending\n            - progress\n            - completed\n          default: pending\n        task:\n          type: string\n\n    GetTaskSchema:\n      type: object\n      required:\n        - created\n        - id\n        - priority\n        - status\n        - task\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          format: uuid\n        created:\n          type: string\n          format: date-time\n        priority:\n          type: string\n          enum:\n            - low\n            - medium\n            - high\n          default: low\n        status:\n          type: string\n          enum:\n            - pending\n            - progress\n            - completed\n        task:\n          type: string\n    ListTasksSchema:\n      type: object\n      required:\n        - tasks\n      properties:\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/GetTaskSchema'\n\nsecurity:\n  - bearerAuth:\n      - getTasks\n      - createTask\n      - getTask\n      - updateTask\n      - deleteTask\n",
			"canonicalURL": "/github.com/abunuwas/fastapi-jwt-tutorial@a1097a66ef4e335000c537aea9fbd689e3345d86/-/blob/oas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/abunuwas/fastapi-jwt-tutorial/blob/a1097a66ef4e335000c537aea9fbd689e3345d86/oas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/todo\": get: operation \"getTasks\": security: at oas.yaml:198:9: list of scopes MUST be empty for \"type\" \"http\""
}