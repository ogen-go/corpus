{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kokuwaio/micronaut-openapi-codegen"
		},
		"file": {
			"name": "test-api.yaml",
			"size": 0,
			"path": "src/test/resources/openapi/test-api.yaml",
			"byteSize": 32467,
			"content": "openapi: 3.0.3\ninfo:\n  title: Spec for api tests.\n  version: '1'\npaths:\n  /response/void:\n    get:\n      operationId: voidFound\n      tags: [response]\n      responses:\n        204:\n          description: Ok.\n  /response/void-not-found:\n    get:\n      operationId: voidNotFound\n      tags: [response]\n      parameters:\n        - name: found\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        204:\n          description: Ok.\n        404:\n          description: Not found.\n  /response/single:\n    get:\n      operationId: single\n      tags: [response]\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                type: string\n  /response/optional:\n    get:\n      operationId: optional\n      tags: [response]\n      parameters:\n        - name: found\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                type: string\n        404:\n          description: Not found.\n  /response/header:\n    get:\n      operationId: header\n      tags: [response]\n      responses:\n        200:\n          description: Ok.\n          headers:\n            foo:\n              schema:\n                type: number\n  /response/array-simple:\n    get:\n      operationId: arraySimple\n      tags: [response]\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /response/array-simple-empty:\n    get:\n      operationId: arraySimpleEmpty\n      tags: [response]\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /response/array-simple-not-found:\n    get:\n      operationId: arraySimpleNotFound\n      tags: [response]\n      parameters:\n        - name: found\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        404:\n          description: Not found.\n  /response/array-complex:\n    get:\n      operationId: arrayComplex\n      tags: [response]\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StringModel'\n  /response/array-complex-not-found:\n    get:\n      operationId: arrayComplexNotFound\n      tags: [response]\n      parameters:\n        - name: found\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StringModel'\n        404:\n          description: Not found.\n  /response/multiple-response-codes:\n    get:\n      operationId: multipleResponseCodes\n      tags: [response]\n      parameters:\n        - name: redirect\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n        300:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n  /response/multiple-response-codes-not-found:\n    get:\n      operationId: multipleResponseCodesNotFound\n      tags: [response]\n      parameters:\n        - name: redirect\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: found\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n        300:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n        404:\n          description: Not found.\n  /response/multiple-datatypes:\n    get:\n      operationId: multipleDataTypes\n      tags: [response]\n      parameters:\n        - name: redirect\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n        300:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NumberModel'\n  /response/multiple-datatypes-not-found:\n    get:\n      operationId: multipleDataTypesNotFound\n      tags: [response]\n      parameters:\n        - name: redirect\n          in: query\n          required: true\n          schema:\n            type: boolean\n        - name: found\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n        300:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NumberModel'\n        404:\n          description: Not found.\n  /mediatype/consumes-plain:\n    post:\n      operationId: mediatypeConsumesPlain\n      tags: [mediatype]\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n  /mediatype/consumes-octet-stream:\n    post:\n      operationId: mediatypeConsumesOctetStream\n      tags: [mediatype]\n      requestBody:\n        required: true\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n  /mediatype/consumes-multipart-with-fileupload:\n    post:\n      # see https://swagger.io/docs/specification/describing-request-body/file-upload/\n      operationId: mediatypeConsumesMultipartWithFileUpload\n      tags: [mediatype]\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                orderId:\n                  type: integer\n                userId:\n                  type: integer\n                file:\n                  type: string\n                  format: binary\n              required:\n                - orderId\n                - userId\n                - file\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Multipart'\n  /mediatype/consumes-multipart-without-fileupload:\n    post:\n      # see https://swagger.io/docs/specification/describing-request-body/file-upload/\n      operationId: mediatypeConsumesMultipartWithoutFileUpload\n      tags: [mediatype]\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                orderId:\n                  type: integer\n                userId:\n                  type: integer\n              required:\n                - orderId\n                - userId\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Multipart'\n  /mediatype/consumes-and-produces:\n    post:\n      operationId: mediatypeConsumesAndProduces\n      tags: [mediatype]\n      requestBody:\n        required: true\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n  /mediatype/produces-with-different-model:\n    get:\n      operationId: mediatypeProducesDifferentModel\n      tags: [mediatype]\n      parameters:\n        - name: value\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: plain\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n            text/plain:\n              schema:\n                type: string\n  /mediatype/produces-with-same-model:\n    get:\n      operationId: mediatypeProducesSameModel\n      tags: [mediatype]\n      parameters:\n        - name: value\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/StringModel'\n  /param/path/requiredWithoutDefault/{string}:\n    get:\n      operationId: paramPathRequiredWithoutDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/requiredWithDefault/{string}:\n    get:\n      operationId: paramPathRequiredWithDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: path\n          required: true\n          schema:\n            type: string\n            default: \"this-is-default\"\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/with-max-length/{string}:\n    get:\n      operationId: paramPathWithMaxLength\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 5\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/with-pattern/{string}:\n    get:\n      operationId: paramPathWithPattern\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: \"[0-9][a-z]\"\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/with-uuid/{uuid}:\n    get:\n      operationId: paramPathWithUuid\n      tags: [parameter]\n      parameters:\n        - name: uuid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/with-integer/{integer}:\n    get:\n      operationId: paramPathWithInteger\n      tags: [parameter]\n      parameters:\n        - name: integer\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/with-long/{long}:\n    get:\n      operationId: paramPathWithLong\n      tags: [parameter]\n      parameters:\n        - name: long\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/with-bool/{bool}:\n    get:\n      operationId: paramPathWithBoolean\n      tags: [parameter]\n      parameters:\n        - name: bool\n          in: path\n          required: true\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/overlay/{string}:\n    get:\n      operationId: paramPathOverlayWithString\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: path\n          required: true\n          schema:\n            type: string\n            maxLength: 10\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/path/overlay/{uuid}:\n    get:\n      operationId: paramPathOverlayWithUuid\n      tags: [parameter]\n      parameters:\n        - name: uuid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/query/multiple-lists:\n    get:\n      operationId: paramQueryMultipleLists\n      tags: [parameter]\n      parameters:\n        - name: a\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: b\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uuid\n        - name: c\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int32\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/query/date:\n    get:\n      operationId: paramQueryDate\n      tags: [parameter]\n      parameters:\n        - name: date\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/query/date-time:\n    get:\n      operationId: paramQueryDateTime\n      tags: [parameter]\n      parameters:\n        - name: date\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/query/number:\n    get:\n      operationId: paramQueryNumber\n      tags: [parameter]\n      parameters:\n        - name: date\n          in: query\n          required: false\n          schema:\n            type: number\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/query/uuid:\n    get:\n      operationId: paramQueryUuid\n      tags: [parameter]\n      parameters:\n        - name: date\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uuid\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/query/requiredWithoutDefault:\n    get:\n      operationId: paramQueryRequiredWithoutDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n        400:\n          description: Parameter missing.\n  /param/query/requiredWithDefault:\n    get:\n      operationId: paramQueryRequiredWithDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: query\n          required: true\n          schema:\n            type: string\n            default: \"this-is-default\"\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/query/optionalWithoutDefault:\n    get:\n      operationId: paramQueryOptionalWithoutDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/query/optionalWithDefault:\n    get:\n      operationId: paramQueryOptionalWithDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: query\n          required: false\n          schema:\n            type: string\n            default: \"this-is-default\"\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/header/requiredWithoutDefault:\n    get:\n      operationId: paramHeaderRequiredWithoutDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: header\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n        400:\n          description: Parameter missing.\n  /param/header/requiredWithDefault:\n    get:\n      operationId: paramHeaderRequiredWithDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: query\n          required: true\n          schema:\n            type: string\n            default: \"this-is-default\"\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/header/optionalWithoutDefault:\n    get:\n      operationId: paramHeaderOptionalWithoutDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/header/optionalWithDefault:\n    get:\n      operationId: paramHeaderOptionalWithDefault\n      tags: [parameter]\n      parameters:\n        - name: string\n          in: header\n          required: false\n          schema:\n            type: string\n            default: \"this-is-default\"\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/body/required:\n    post:\n      operationId: paramBodyRequired\n      tags: [parameter]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParameterModel'\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n        400:\n          description: Parameter missing.\n  /param/body/optional:\n    post:\n      operationId: paramBodyOptional\n      tags: [parameter]\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParameterModel'\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /param/all/{path}:\n    get:\n      operationId: paramAll\n      tags: [parameter]\n      parameters:\n        - name: date\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: path\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: uuid\n          in: query\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: integer\n          in: header\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: Ok.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterModel'\n  /validation/long/min:\n    get:\n      operationId: validationLongMin\n      tags: [validation]\n      parameters:\n        - name: integer\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 3\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/long/max:\n    get:\n      operationId: validationLongMax\n      tags: [validation]\n      parameters:\n        - name: integer\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 4\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/long/range:\n    get:\n      operationId: validationLongRange\n      tags: [validation]\n      parameters:\n        - name: integer\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 3\n            maximum: 4\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/integer/min:\n    get:\n      operationId: validationIntegerMin\n      tags: [validation]\n      parameters:\n        - name: integer\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 3\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/integer/max:\n    get:\n      operationId: validationIntegerMax\n      tags: [validation]\n      parameters:\n        - name: integer\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int32\n            maximum: 4\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/integer/range:\n    get:\n      operationId: validationIntegerRange\n      tags: [validation]\n      parameters:\n        - name: integer\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 3\n            maximum: 4\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/double/min:\n    get:\n      operationId: validationDoubleMin\n      tags: [validation]\n      parameters:\n        - name: number\n          in: query\n          required: true\n          schema:\n            type: number\n            format: double\n            minimum: 3\n            exclusiveMinimum: true\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/double/max:\n    get:\n      operationId: validationDoubleMax\n      tags: [validation]\n      parameters:\n        - name: number\n          in: query\n          required: true\n          schema:\n            type: number\n            format: double\n            maximum: 4\n            exclusiveMaximum: true\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/double/range:\n    get:\n      operationId: validationDoubleRange\n      tags: [validation]\n      parameters:\n        - name: number\n          in: query\n          required: true\n          schema:\n            type: number\n            format: double\n            minimum: 3\n            maximum: 4\n            exclusiveMinimum: false\n            exclusiveMaximum: false\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/float/min:\n    get:\n      operationId: validationFloatMin\n      tags: [validation]\n      parameters:\n        - name: number\n          in: query\n          required: true\n          schema:\n            type: number\n            format: float\n            minimum: 3\n            exclusiveMinimum: true\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/float/max:\n    get:\n      operationId: validationFloatMax\n      tags: [validation]\n      parameters:\n        - name: number\n          in: query\n          required: true\n          schema:\n            type: number\n            format: float\n            maximum: 4\n            exclusiveMaximum: true\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/float/range:\n    get:\n      operationId: validationFloatRange\n      tags: [validation]\n      parameters:\n        - name: number\n          in: query\n          required: true\n          schema:\n            type: number\n            format: float\n            minimum: 3\n            maximum: 4\n            exclusiveMinimum: false\n            exclusiveMaximum: false\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/string/pattern:\n    get:\n      operationId: validationStringPattern\n      tags: [validation]\n      parameters:\n        - name: string\n          in: query\n          required: true\n          schema:\n            type: string\n            pattern: \"[a-z]{3,5}\"\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/string/min:\n    get:\n      operationId: validationStringMin\n      tags: [validation]\n      parameters:\n        - name: string\n          in: query\n          required: true\n          schema:\n            type: string\n            minLength: 3\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/string/max:\n    get:\n      operationId: validationStringMax\n      tags: [validation]\n      parameters:\n        - name: string\n          in: query\n          required: true\n          schema:\n            type: string\n            maxLength: 4\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/string/range:\n    get:\n      operationId: validationStringRange\n      tags: [validation]\n      parameters:\n        - name: string\n          in: query\n          required: true\n          schema:\n            type: string\n            minLength: 3\n            maxLength: 4\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/list/min:\n    get:\n      operationId: validationListMin\n      tags: [validation]\n      parameters:\n        - name: list\n          in: query\n          required: true\n          schema:\n            type: array\n            items:\n              type: integer\n            minItems: 3\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/list/max:\n    get:\n      operationId: validationListMax\n      tags: [validation]\n      parameters:\n        - name: list\n          in: query\n          required: true\n          schema:\n            type: array\n            items:\n              type: integer\n            maxItems: 4\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/list/range:\n    post:\n      operationId: validationListRange\n      tags: [validation]\n      parameters:\n        - name: list\n          in: query\n          required: true\n          schema:\n            type: array\n            items:\n              type: integer\n            minItems: 3\n            maxItems: 4\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/list/model:\n    post:\n      operationId: validationListModel\n      tags: [validation]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/StringModel'\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\n  /validation/model:\n    post:\n      operationId: validationModel\n      tags: [validation]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StringModel'\n      responses:\n        204:\n          description: Ok.\n        400:\n          description: Bad request.\ncomponents:\n  schemas:\n    StringModel:\n      type: object\n      properties:\n        foo:\n          type: string\n      required:\n        - foo\n    NumberModel:\n      type: object\n      properties:\n        bar:\n          type: number\n    Multipart:\n      type: object\n      properties:\n        orderId:\n          type: integer\n        userId:\n          type: integer\n        fileName:\n          type: string\n        file:\n          type: string\n          format: byte\n    ParameterModel:\n      type: object\n      properties:\n        bool:\n          type: string\n        string:\n          type: string\n        number:\n          type: number\n        integer:\n          type: integer\n          format: int32\n        uuid:\n          type: string\n          format: uuid\n        date:\n          type: string\n          format: date\n        dateTime:\n          type: string\n          format: date-time\n        a:\n          type: array\n          items:\n            type: string\n        b:\n          type: array\n          items:\n            type: string\n            format: uuid\n        c:\n          type: array\n          items:\n            type: integer\n            format: int32\n",
			"canonicalURL": "/github.com/kokuwaio/micronaut-openapi-codegen@b65bd5d0d6330a91a6ade41bf5c307932545d690/-/blob/src/test/resources/openapi/test-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kokuwaio/micronaut-openapi-codegen/blob/b65bd5d0d6330a91a6ade41bf5c307932545d690/src/test/resources/openapi/test-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at src/test/resources/openapi/test-api.yaml:570:3: duplicate path: \"/param/path/overlay/{uuid}\""
}