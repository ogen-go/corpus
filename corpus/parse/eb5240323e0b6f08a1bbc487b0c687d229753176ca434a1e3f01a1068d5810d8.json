{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "annotationd-oss.yml",
			"size": 0,
			"path": "contracts/svc/annotationd-oss.yml",
			"byteSize": 13987,
			"content": "openapi: 3.0.0\ninfo:\n  title: Annotations service\n  version: 0.2.3\nservers:\n  - url: /\npaths:\n  /annotations:\n    post:\n      tags:\n        - Annotations\n      operationId: createAnnotations\n      summary: Create annotations\n      parameters:\n        - name: orgID\n          in: query\n          schema:\n            type: string\n      requestBody:\n        description: Annotations to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnnotationCreateList'\n      responses:\n        '200':\n          description: Annotations created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnnotationEventList'\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    get:\n      tags:\n        - Annotations\n      operationId: listAnnotations\n      summary: List annotations\n      parameters:\n        - $ref: '#/components/parameters/AnnotationListFilter'\n        - name: orgID\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Optionally filtered list of annotations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnnotationList'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - Annotations\n      operationId: deleteAnnotations\n      summary: Delete annotation\n      parameters:\n        - $ref: '#/components/parameters/AnnotationDeleteFilter'\n        - name: orgID\n          in: query\n          schema:\n            type: string\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/annotations/{annotationID}':\n    get:\n      tags:\n        - Annotations\n      summary: Retrieve an annotation\n      parameters:\n        - in: path\n          name: annotationID\n          description: The identifier of the annotation.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The annotation details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnnotationEvent'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '404':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n        default:\n          $ref: '#/components/responses/ServerError'\n    put:\n      tags:\n        - Annotations\n      operationId: updateAnnotation\n      summary: Update an annotation\n      parameters:\n        - in: path\n          name: annotationID\n          description: The identifier of the annotation.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Annotation to store\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnnotationCreate'\n      responses:\n        '200':\n          description: The updated annotation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnnotationEvent'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '404':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - Annotations\n      operationId: deleteAnnotation\n      summary: Delete an annotation by ID\n      parameters:\n        - in: path\n          name: annotationID\n          description: The identifier of the annotation.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /streams:\n    put:\n      tags:\n        - Streams\n      operationId: createUpdateStream\n      summary: Create or update stream\n      parameters:\n        - name: orgID\n          in: query\n          schema:\n            type: string\n      requestBody:\n        description: Stream to create or update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Stream'\n      responses:\n        '200':\n          description: Stream as created/updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadStream'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    get:\n      tags:\n        - Streams\n      operationId: getStreams\n      summary: Get streams\n      parameters:\n        - $ref: '#/components/parameters/StreamListFilter'\n        - name: orgID\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Optionally filtered list of streams\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamList'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - Streams\n      operationId: deleteStream\n      summary: Delete stream\n      parameters:\n        - $ref: '#/components/parameters/StreamDeleteFilter'\n        - name: orgID\n          in: query\n          schema:\n            type: string\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/streams/{streamID}':\n    put:\n      tags:\n        - Streams\n      operationId: updateStream\n      summary: Update stream\n      parameters:\n        - in: path\n          name: streamID\n          description: stream to update\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Stream to update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Stream'\n      responses:\n        '200':\n          description: Stream as updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReadStream'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '404':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - Streams\n      operationId: deleteStreamByID\n      summary: Delete stream by ID\n      parameters:\n        - in: path\n          name: streamID\n          description: stream to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '400':\n          $ref: '#/components/responses/ServerError'\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  parameters:\n    AnnotationListFilter:\n      in: query\n      name: AnnotationListFilter\n      required: false\n      description: Filter for returned annotations\n      schema:\n        $ref: '#/components/schemas/AnnotationListFilter'\n    AnnotationDeleteFilter:\n      in: query\n      name: AnnotationDeleteFilter\n      required: true\n      description: Annotations to delete\n      schema:\n        $ref: '#/components/schemas/AnnotationDeleteFilter'\n    StreamListFilter:\n      in: query\n      name: StreamListFilter\n      required: false\n      description: Filter for returned streams\n      schema:\n        $ref: '#/components/schemas/StreamListFilter'\n    StreamDeleteFilter:\n      in: query\n      name: StreamDeleteFilter\n      required: true\n      description: Stream to delete\n      schema:\n        $ref: '#/components/schemas/StreamDeleteFilter'\n  schemas:\n    AnnotationListFilter:\n      allOf:\n        - $ref: '#/components/schemas/BasicFilter'\n        - type: object\n          properties:\n            stickerIncludes:\n              type: object\n              additionalProperties:\n                type: string\n            streamIncludes:\n              type: array\n              items:\n                type: string\n    AnnotationDeleteFilter:\n      type: object\n      required:\n        - stream\n        - startTime\n        - endTime\n      properties:\n        stickers:\n          type: object\n          additionalProperties:\n            type: string\n        stream:\n          type: string\n        streamID:\n          type: string\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n    BasicFilter:\n      type: object\n      properties:\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n    AnnotationList:\n      type: array\n      items:\n        type: object\n        properties:\n          stream:\n            type: string\n          annotations:\n            type: array\n            items:\n              type: object\n              properties:\n                id:\n                  type: string\n                summary:\n                  type: string\n                message:\n                  type: string\n                stickers:\n                  type: object\n                  additionalProperties:\n                    type: string\n                startTime:\n                  type: string\n                  format: date-time\n                endTime:\n                  type: string\n                  format: date-time\n    AnnotationEventList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AnnotationEvent'\n    AnnotationEvent:\n      allOf:\n        - $ref: '#/components/schemas/Annotation'\n        - type: object\n          properties:\n            stream:\n              type: string\n            id:\n              type: string\n    AnnotationCreateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AnnotationCreate'\n    AnnotationCreate:\n      allOf:\n        - $ref: '#/components/schemas/Annotation'\n        - type: object\n          properties:\n            stream:\n              type: string\n    Annotation:\n      type: object\n      properties:\n        summary:\n          type: string\n        message:\n          type: string\n        stickers:\n          type: object\n          additionalProperties:\n            type: string\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n    StreamListFilter:\n      allOf:\n        - $ref: '#/components/schemas/BasicFilter'\n        - type: object\n          properties:\n            streamIncludes:\n              type: array\n              items:\n                type: string\n            allStreams:\n              type: boolean\n    StreamDeleteFilter:\n      type: object\n      properties:\n        stream:\n          type: string\n    StreamList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReadStream'\n    Stream:\n      type: object\n      properties:\n        stream:\n          type: string\n        description:\n          type: string\n    ReadStream:\n      type: object\n      properties:\n        id:\n          type: string\n        stream:\n          type: string\n        description:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n    Error:\n      properties:\n        code:\n          description: code is the machine-readable error code.\n          readOnly: true\n          type: string\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - unprocessable entity\n            - empty value\n            - unavailable\n            - forbidden\n            - too many requests\n            - unauthorized\n            - method not allowed\n            - request too large\n            - unsupported media type\n        message:\n          readOnly: true\n          description: Human-readable message.\n          type: string\n        op:\n          readOnly: true\n          description: Describes the logical code operation when the error occurred. Useful for debugging.\n          type: string\n        err:\n          readOnly: true\n          description: Stack of errors that occurred during processing of the request. Useful for debugging.\n          type: string\n      required:\n        - code\n  responses:\n    NoContent:\n      description: No content\n    ServerError:\n      description: Non 2XX error response from server.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/influxdata/openapi@08b0a56cb105ab58f22820ecdd8f93cb4dd8203d/-/blob/contracts/svc/annotationd-oss.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/openapi/blob/08b0a56cb105ab58f22820ecdd8f93cb4dd8203d/contracts/svc/annotationd-oss.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: parameters: \"AnnotationListFilter\": at 1:243: invalid schema:style:explode combination: (\"\":\"form\":true)"
}