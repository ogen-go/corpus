{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PecanProject/pecan"
		},
		"file": {
			"name": "pecanapi-spec.yml",
			"size": 0,
			"path": "apps/api/pecanapi-spec.yml",
			"byteSize": 35064,
			"content": "openapi: 3.0.0\nservers:\n  - description: PEcAn API Server\n    url: https://pecan-dev.ncsa.illinois.edu\n  - description: PEcAn Development Server\n    url: https://pecan-tezan-rstudio.ncsa.illinois.edu/p/670121ec\n  - description: PEcAn API Test Server\n    url: https://pecan-tezan.ncsa.illinois.edu\n  - description: Localhost\n    url: http://127.0.0.1:8000\n  \ninfo:\n  title: PEcAn Project API\n  description: \u003e-\n    This is the API for interacting with server(s) of the __PEcAn Project__. The Predictive Ecosystem Analyser (PEcAn) Project is an open source framework initiated to meet the demands for more accessible, transparent \u0026 repeatable modeling of ecosystems. Here's the link to [PEcAn's Github Repository](https://github.com/PecanProject/pecan). \u003cbr\u003e\u003cbr\u003e\n    PEcAn can be considered as an ecoinformatics toolbox combined with a set of workflows that wrap around ecosystem models that allow users to effectively perform data synthesis, propagation of uncertainty through a model \u0026 ecological predictions in an integrated fashion using a diverse repository of data \u0026 models. \n  version: \"1.0.0\"\n  contact:\n    email: \"pecanproj@gmail.com\"\n  license:\n    name: University of Illinois/NCSA Open Source License\n    url: https://opensource.org/licenses/NCSA\nexternalDocs:\n  description: Find out more about PEcAn Project\n  url: https://pecanproject.github.io/\n\ntags:\n  - name: general\n    description: Related to the overall working on the API, details of PEcAn \u0026 the server\n  - name: workflows\n    description: Everything about PEcAn workflows\n  - name: runs\n    description: Everything about PEcAn runs\n  - name: models\n    description: Everything about PEcAn models\n  - name: sites\n    description: Everything about PEcAn sites\n  - name: formats\n    description: Everything about PEcAn formats\n  - name: pfts\n    description: Everything about PEcAn PFTs (Plant Functional Types)\n  - name: inputs\n    description: Everything about PEcAn inputs\n\n#####################################################################################################################\n##################################################### API Endpoints #################################################\n#####################################################################################################################\nsecurity:\n  - basicAuth: []\n  \npaths:\n\n  /api/ping:\n    get:\n      summary: Ping the server to check if it is live \n      tags:\n        - general\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  req:\n                    type: string\n                  resp:\n                    type: string\n        '403':\n          description: Access forbidden\n        '404':\n          description: Models not found\n  \n  /api/status:\n    get:\n      summary: Obtain general information about PEcAn \u0026 the details of the database host\n      tags:\n        - general\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pecan_details:\n                    type: object\n                    properties:\n                      version:\n                        type: string\n                      branch:\n                        type: string\n                      gitsha1:\n                        type: string\n                  host_details:\n                    type: object\n                    properties:\n                      hostid:\n                        type: string\n                      hostname:\n                        type: string\n                      start:\n                        type: string\n                      end:\n                        type: string\n                      sync_url:\n                        type: string\n                      sync_contact:\n                        type: string\n                  \n        '403':\n          description: Access forbidden\n        '404':\n          description: Models not found\n  \n  /api/models/{model_id}:\n    get:\n      tags:\n        - models\n      summary: Details of requested model\n      parameters:\n        - in: path\n          name: model_id\n          description: Model ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Model Details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n                      \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Model not found\n  \n  /api/models/:\n    get:\n      tags:\n        - models\n      summary: Search for model(s) using search pattern based on model name \u0026 revision\n      parameters:\n        - in: query\n          name: model_name\n          description: Search string for model name\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: revision\n          description: Search string for revision\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: ignore_case\n          description: Indicator of case sensitive or case insensitive search\n          required: false\n          schema:\n            type: string\n            default: \"TRUE\"\n            enum:\n              - \"TRUE\"\n              - \"FALSE\"\n      responses:\n        '200':\n          description: List of sites matching search pattern\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  models:\n                    type: array\n                    items: \n                      type: object\n                      properties:\n                        model_id:\n                          type: string\n                        model_name:\n                          type: string\n                        revision:\n                          type: string\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Model(s) not found\n  \n  /api/sites/{site_id}:\n    get:\n      tags:\n        - sites\n      summary: Details of a site\n      parameters:\n        - in: path\n          name: site_id\n          description: PEcAn site ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Site Details \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Site'\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Site not found\n  \n  /api/sites/:\n    get:\n      tags:\n        - sites\n      summary: Search for sites using search pattern based on site name\n      parameters:\n        - in: query\n          name: sitename\n          description: Search string for site name\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: ignore_case\n          description: Indicator of case sensitive or case insensitive search\n          required: false\n          schema:\n            type: string\n            default: \"TRUE\"\n            enum:\n              - \"TRUE\"\n              - \"FALSE\"\n      responses:\n        '200':\n          description: List of sites matching search pattern \n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  sites:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        sitename:\n                          type: string\n                        \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Site(s) not found\n  \n  /api/pfts/{pft_id}:\n    get:\n      tags:\n        - pfts\n      summary: Details of a PFT\n      parameters:\n        - in: path\n          name: pft_id\n          description: PEcAn PFT ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: PFT Details \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PFT'\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: PFT not found\n  \n  /api/pfts/:\n    get:\n      tags:\n        - pfts\n      summary: Search for PFTs using search pattern matching\n      parameters:\n        - in: query\n          name: pft_name\n          description: Search string for PFT name\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: pft_type\n          description: PFT Type\n          required: false\n          schema:\n            type: string\n            default: \"\"\n            enum:\n              - \"plant\"\n              - \"cultivar\"\n              - \"\"\n        - in: query\n          name: model_type\n          description: Search string for Model type\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: ignore_case\n          description: Indicator of case sensitive or case insensitive search\n          required: false\n          schema:\n            type: string\n            default: \"TRUE\"\n            enum:\n              - \"TRUE\"\n              - \"FALSE\"\n      responses:\n        '200':\n          description: List of PFTs matching search pattern \n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pfts:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        pft_id:\n                          type: string\n                        pft_name:\n                          type: string\n                        pft_type:\n                          type: string\n                        model_type:\n                          type: string\n                        \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Site(s) not found\n  \n  /api/formats/{format_id}:\n    get:\n      tags:\n        - formats\n      summary: Details of requested format\n      parameters:\n        - in: path\n          name: format_id\n          description: Format ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Format Details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Format'\n                      \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Model not found\n  \n  /api/formats/:\n    get:\n      tags:\n        - formats\n      summary: Search for format(s) using search pattern based on format name \u0026 mime type\n      parameters:\n        - in: query\n          name: format_name\n          description: Search string for format name\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: mimetype\n          description: Search string for mime type\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: ignore_case\n          description: Indicator of case sensitive or case insensitive search\n          required: false\n          schema:\n            type: string\n            default: \"TRUE\"\n            enum:\n              - \"TRUE\"\n              - \"FALSE\"\n      responses:\n        '200':\n          description: List of formats matching search pattern\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  models:\n                    type: array\n                    items: \n                      type: object\n                      properties:\n                        format_id:\n                          type: string\n                        format_name:\n                          type: string\n                        mimetype:\n                          type: string\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Model(s) not found\n  \n  \n  /api/inputs/:\n    get:\n      tags:\n        - inputs\n      summary: Search for the inputs\n      parameters:\n        - in: query\n          name: model_id\n          description: If provided, returns all inputs for the provided model_id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: site_id\n          description: If provided, returns all inputs for the provided site_id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: format_id\n          description: If provided, returns all inputs for the provided format_id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: host_id\n          description: If provided, returns all inputs for the provided host_id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: offset\n          description: The number of inputs to skip before starting to collect the result set.\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n          required: false\n        - in: query\n          name: limit\n          description: The number of inputs to return.\n          schema:\n            type: integer\n            default: 50\n            enum:\n              - 10\n              - 20\n              - 50\n              - 100\n              - 500\n          required: false\n      responses:\n        '200':\n          description: List of inputs\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  inputs:\n                    type: array\n                    items: \n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        filename:\n                          type: string\n                        file_path:\n                          type: string\n                        input_name:\n                          type: string\n                        mimetype:\n                          type: string\n                        format_name:\n                          type: string\n                        model_name:\n                          type: string\n                        revision:\n                          type: string\n                        sitename:\n                          type: string\n                        tag:\n                          type: string\n                        hostname:\n                          type: string\n                        start_date:\n                          type: string\n                        end_date:\n                          type: string\n                  count:\n                    type: integer\n                  next_page:\n                    type: string\n                  prev_page:\n                    type: string\n                \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Workflows not found\n  \n  /api/inputs/{input_id}:\n    get:\n      tags:\n        - inputs\n      summary: Download a desired PEcAn input file\n      parameters:\n        - in: path\n          name: input_id\n          description: ID of the PEcAn Input to be downloaded\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: filename\n          description: Optional filename specified if the id points to a folder instead of file\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Contents of the desired input file  \n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          description: Bad request. Input ID points to directory \u0026 filename is not specified\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n          \n  /api/workflows/:\n    get:\n      tags:\n        - workflows\n      summary: Get the list of workflows \n      parameters:\n        - in: query\n          name: model_id\n          description: If provided, returns all workflows that use the provided model_id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: site_id\n          description: If provided, returns all workflows that use the provided site_id\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: offset\n          description: The number of workflows to skip before starting to collect the result set.\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n          required: false\n        - in: query\n          name: limit\n          description: The number of workflows to return.\n          schema:\n            type: integer\n            default: 50\n            enum:\n              - 10\n              - 20\n              - 50\n              - 100\n              - 500\n          required: false\n      responses:\n        '200':\n          description: List of workflows\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  workflows:\n                    type: array\n                    items: \n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        folder:\n                          type: string\n                        started_at:\n                          type: string\n                        finished_at:\n                          type: string\n                        site_id:\n                          type: integer\n                        model_id:\n                          type: integer\n                        hostname:\n                          type: string\n                        start_date:\n                          type: string\n                        end_date:\n                          type: string\n                        user_id:\n                          type: integer\n                  count:\n                    type: integer\n                  next_page:\n                    type: string\n                  prev_page:\n                    type: string\n                \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Workflows not found\n      \n    post:\n      tags:\n        - workflows\n      summary: Submit a new PEcAn workflow\n      requestBody:\n        required: true\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Workflow_POST'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Workflow_POST'\n              \n      responses:\n        '201':\n          description: Submitted workflow successfully    \n        '401':\n          description: Authentication required\n        '415':\n          description: Unsupported request content type\n      \n\n  /api/workflows/{id}:\n    get:\n      tags:\n        - workflows\n      summary: Get the details of a PEcAn Workflow\n      parameters:\n        - in: path\n          name: id\n          description: ID of the PEcAn Workflow\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Details of the requested PEcAn Workflow\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workflow_GET'\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Workflow with specified ID was not found  \n\n  /api/workflows/{id}/status:\n    get:\n      tags:\n        - workflows\n      summary: Get the status of a PEcAn Workflow execution\n      parameters:\n        - in: path\n          name: id\n          description: ID of the PEcAn Workflow\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Status of the requested PEcAn Workflow\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  workflow_id:\n                    type: string\n                  status:\n                    type: string\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Workflow with specified ID was not found\n  \n  /api/workflows/{id}/file/{filename}:\n    get:\n      tags:\n        - workflows\n      summary: Download a file from a specified PEcAn workflow\n      parameters:\n        - in: path\n          name: id\n          description: ID of the PEcAn Workflow\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: filename\n          description: Name of file desired\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Contents of the output file  \n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n\n  /api/runs/:\n    get:\n      tags:\n        - runs\n      summary: Get the list of all runs for a specified PEcAn Workflow\n      parameters:\n        - in: query\n          name: workflow_id\n          description: ID of the PEcAn Workflow\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: offset\n          description: The number of workflows to skip before starting to collect the result set.\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n          required: false\n        - in: query\n          name: limit\n          description: The number of workflows to return.\n          schema:\n            type: integer\n            default: 50\n            enum:\n              - 10\n              - 20\n              - 50\n              - 100\n              - 500\n          required: false\n      responses:\n        '200':\n          description: List of all runs for the requested PEcAn Workflow\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  runs:\n                    type: array\n                    items: \n                      $ref: '#/components/schemas/Run'\n                  count:\n                    type: integer\n                  next_page:\n                    type: string\n                  prev_page:\n                    type: string\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Run(s) not found \n\n\n  /api/runs/{run_id}:\n    get:\n      tags:\n        - runs\n      summary: Get the details of a specified PEcAn run\n      parameters:\n        - in: path\n          name: run_id\n          description: ID of the PEcAn run\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Details about the requested run \n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/Run'\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Run with specified ID was not found\n          \n  /api/runs/{run_id}/input/{filename}:\n    get:\n      tags:\n        - runs\n      summary: Get the details of a specified PEcAn run\n      parameters:\n        - in: path\n          name: run_id\n          description: ID of the PEcAn run\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: filename\n          description: Name of input file desired\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Contents of the input file \n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Input file not found on host\n  \n  /api/runs/{run_id}/output/{filename}:\n    get:\n      tags:\n        - runs\n      summary: Get the details of a specified PEcAn run\n      parameters:\n        - in: path\n          name: run_id\n          description: ID of the PEcAn run\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: filename\n          description: Name of output file desired\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Contents of the output file  \n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                \n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Output file not found on host\n                  \n  /api/runs/{run_id}/graph/{year}/{y_var}:\n    get:\n      tags:\n        - runs\n      summary: Plot the desired variables for a run output\n      parameters:\n        - in: path\n          name: run_id\n          description: ID of the PEcAn run\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: year\n          description: Year the plot is for\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: y_var\n          description: Variable to plot along the Y-axis\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: x_var\n          description: Variable to plot along the X-axis\n          required: true\n          schema:\n            type: string\n            default: time\n        - in: query\n          name: width\n          description: Width of the image generated\n          required: true\n          schema:\n            type: string\n            default: 800\n        - in: query\n          name: height\n          description: Height of the image generated\n          required: true\n          schema:\n            type: string\n            default: 600\n      responses:\n        '200':\n          description: Plot of the desired output variables obtained from a run \n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n        '401':\n          description: Authentication required\n        '403':\n          description: Access forbidden\n        '404':\n          description: Run data not found\n#####################################################################################################################\n###################################################### Components ###################################################\n#####################################################################################################################\n\ncomponents:\n  schemas:\n    Model:\n      properties:\n        model_id:\n          type: string\n        model_name:\n          type: string\n        revision:\n          type: string\n        modeltype_id:\n          type: string\n        model_type:\n          type: string\n        inputs:\n          type: array\n          items:\n            type: object\n            properties:\n              input:\n                type: string\n              required:\n                type: boolean\n        \n    Run:\n      properties:\n        id:\n          type: string\n        workflow_id:\n          type: string\n        runtype:\n          type: string\n        ensemble_id:\n          type: string\n        model_id:\n          type: string\n        site_id:\n          type: string\n        parameter_list:\n          type: string\n        start_time:\n          type: string\n        finish_time:\n          type: string\n        started_at:\n          type: string\n        finished_at:\n          type: string\n        inputs:\n          type: object\n          properties:\n            info:\n              type: string\n            others:\n              type: array\n              items:\n                type: string\n        outputs:\n          type: object\n          properties:\n            logfile:\n              type: string\n            info:\n              type: string\n            years:\n              type: object\n              properties:\n                \"\u003cyear\u003e\":\n                  type: object\n                  properties:\n                    data:\n                      type: string\n                    variables:\n                      type: object\n                      properties:\n                        \"\u003cvar_name\u003e\":\n                          type: string\n                  \n    \n    Site:\n      properties:\n        id:\n          type: string\n        sitename:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        country:\n          type: string\n        mat:\n          type: number\n        map:\n          type: number\n        soil:\n          type: string\n        som:\n          type: number\n        notes:\n          type: string\n        soilnotes:\n          type: string\n        greenhouse:\n          type: string\n        sand_pct:\n          type: number\n        time_zone:\n          type: string\n    \n    PFT:\n      properties:\n        pft_id:\n          type: string\n        pft_name:\n          type: string\n        pft_type:\n          type: string\n        definition:\n          type: string\n        model_type:\n          type: string\n    \n    Format:\n      properties:\n        format_id:\n          type: string\n        name:\n          type: string\n        notes:\n          type: string\n        header:\n          type: string\n        mimetype:\n          type: string\n      \n    Workflow_GET:\n      properties:\n        id:\n          type: string\n        folder:\n          type: string\n        hostname:\n          type: string\n        user_id:\n          type: string\n        \"properties\":\n          type: object\n          properties:\n            pfts:\n              type: array\n              items: \n                type: string\n            input_met:\n              type: string\n            modelid:\n              type: string\n            siteid:\n              type: string\n            sitename:\n              type: string\n            sitegroupid:\n              type: string\n            start:\n              type: string\n            end:\n              type: string\n            variables:\n              type: string\n            sensitivity:\n              type: string\n            email:\n              type: string\n            notes:\n              type: string\n            runs:\n              type: integer\n              example: 1\n            pecan_edit:\n              type: string\n            status:\n              type: string\n            fluxusername:\n              type: string\n            input_poolinitcond:\n              type: string\n        files:\n          type: array\n          items:\n            type: string\n    \n    Workflow_POST:\n      type: object\n      xml:\n        name: pecan\n      properties:\n        pfts:\n          type: object\n          properties:\n            pft:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: temperate.coniferous\n        meta.analysis:\n          type: object\n          properties:\n            iter:\n              type: integer\n              example: 100\n            random.effects:\n              type: boolean\n              example: \"FALSE\"\n            threshold:\n              type: number\n              example: 1.2\n            update:\n              type: string\n              example: AUTO\n        ensemble:\n          type: object\n          properties:\n            size:\n              type: number\n              example: 10\n            variable:\n              type: string\n              example: NPP\n        sensitivity.analysis:\n          type: object\n          properties:\n            quantiles:\n              type: object\n              properties:\n                sigma:\n                  type: array\n                  items:\n                    type: integer\n                  example: [-1, 1]\n            variable:\n              type: string\n              example: NPP\n        model:\n          type: object\n          properties:\n            \"type\":\n              type: string\n              example: SIPNET\n            revision:\n              type: string\n              example: r136\n        run:\n          type: object\n          properties:\n            site:\n              type: object\n              properties:\n                id:\n                  type: string\n                  example: 772\n            inputs:\n              type: object\n              properties:\n                met:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      example: \"99000000003\"\n            start.date:\n              type: string\n              example: \"2002-01-01 00:00:00\"\n            end.date:\n              type: string\n              example: \"2002-12-31 00:00:00\"\n            dbfiles:\n              type: string\n              example: pecan/dbfiles\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n",
			"canonicalURL": "/github.com/PecanProject/pecan@188bd1ab118971279614924300e2d2ade32302be/-/blob/apps/api/pecanapi-spec.yml",
			"externalURLs": [
				{
					"url": "https://github.com/PecanProject/pecan/blob/188bd1ab118971279614924300e2d2ade32302be/apps/api/pecanapi-spec.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/runs/{run_id}/graph/{year}/{y_var}\": get: parameters: parse parameter \"width\": schema: at 1:14816: parse default: expected type \"string\", got \"number\""
}