{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "reverb.com-3.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/reverb.com-3.0-swagger.yaml",
			"byteSize": 128989,
			"content": "openapi: 3.0.0\nx-hasEquivalentPaths: true\ninfo:\n  contact:\n    email: integrations@reverb.com\n    name: Reverb API\n    url: https://www.reverb-api.com\n  description: reverb\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://reverb.com/page/terms\n  title: reverb\n  version: \"3.0\"\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://d1g5417jjjo7sf.cloudfront.net/assets/top-level/reverb-logo-d2c75af0b020521f0bc5e90c883a13b5.svg\n  x-origin:\n    - format: swagger\n      url: https://s3.amazonaws.com/swagger.reverb.com/swagger.json\n      version: \"2.0\"\n  x-providerName: reverb.com\nexternalDocs:\n  url: https://dev.reverb.com/\npaths:\n  /articles:\n    get:\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: What's being searched for\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Number of featured articles to exclude\n          in: query\n          name: exclude_featured\n          required: false\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - articles\n  /articles/categories:\n    get:\n      description: List of all article categories\n      responses:\n        default:\n          description: Unexpected error\n      summary: List of all article categories\n      tags:\n        - articles\n  /categories:\n    get:\n      description: List of supported product categories\n      responses:\n        default:\n          description: Unexpected error\n      summary: List of supported product categories\n      tags:\n        - categories\n  /categories/flat:\n    get:\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - categories\n  /categories/taxonomy:\n    get:\n      description: Full taxonomy tree of categories including middle categories\n      responses:\n        default:\n          description: Unexpected error\n      summary: Full taxonomy tree of categories including middle categories\n      tags:\n        - categories\n  \"/categories/{product_type}/{category}\":\n    get:\n      description: Get subcategory details\n      parameters:\n        - in: path\n          name: product_type\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: category\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get subcategory details\n      tags:\n        - categories\n  \"/categories/{uuid}\":\n    get:\n      description: Get category details\n      parameters:\n        - in: path\n          name: uuid\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get category details\n      tags:\n        - categories\n  /comparison_shopping_pages:\n    get:\n      description: Returns a set of comparison shopping pages based on the current params\n      responses:\n        default:\n          description: Unexpected error\n      summary: Returns a set of comparison shopping pages based on the current params\n      tags:\n        - comparison_shopping_pages\n  /comparison_shopping_pages/find:\n    get:\n      description: Show comparison shopping page\n      parameters:\n        - description: ID of the comparison shopping page\n          in: query\n          name: id\n          required: false\n          schema:\n            type: string\n        - description: Slug of the comparison shopping page\n          in: query\n          name: slug\n          required: false\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Show comparison shopping page\n      tags:\n        - comparison_shopping_pages\n  \"/comparison_shopping_pages/{id}\":\n    get:\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - comparison_shopping_pages\n  \"/comparison_shopping_pages/{id}/listings\":\n    get:\n      description: Return new or used listings for a comparison shopping page\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Condition of the listing\n          in: query\n          name: condition\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Unexpected error\n      summary: Return new or used listings for a comparison shopping page\n      tags:\n        - comparison_shopping_pages\n  \"/comparison_shopping_pages/{id}/reviews\":\n    get:\n      description: View reviews of a comparison shopping page\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: View reviews of a comparison shopping page\n      tags:\n        - comparison_shopping_pages\n  \"/conversations/{conversation_id}/offer\":\n    post:\n      description: Make an offer to the other participant in the conversation\n      parameters:\n        - in: path\n          name: conversation_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body3\"\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_offers\n      summary: Make an offer to the other participant in the conversation\n      tags:\n        - conversations\n  \"/conversations/{id}/offer\":\n    post:\n      description: Make an offer to the other participant in the conversation\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body4\"\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_offers\n      summary: Make an offer to the other participant in the conversation\n      tags:\n        - conversations\n  /countries:\n    get:\n      description: Retrieve a list of country codes with corresponding subregions\n      responses:\n        default:\n          description: Unexpected error\n      summary: Retrieve a list of country codes with corresponding subregions\n      tags:\n        - countries\n  /csps:\n    get:\n      description: Returns a set of comparison shopping pages based on the current params\n      responses:\n        default:\n          description: Unexpected error\n      summary: Returns a set of comparison shopping pages based on the current params\n      tags:\n        - csps\n  /csps/categories:\n    get:\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - csps\n  \"/curated_sets/{slug}\":\n    get:\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - curated_sets\n  /currencies/display:\n    get:\n      description: List of supported display currencies for browsing listings\n      responses:\n        default:\n          description: Unexpected error\n      summary: List of supported display currencies for browsing listings\n      tags:\n        - currencies\n  /currencies/listing:\n    get:\n      description: List of supported listing currencies for shops\n      responses:\n        default:\n          description: Unexpected error\n      summary: List of supported listing currencies for shops\n      tags:\n        - currencies\n  \"/feedback/{feedback_id}\":\n    get:\n      description: Feedback details\n      parameters:\n        - in: path\n          name: feedback_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Feedback details\n      tags:\n        - feedback\n  \"/handpicked/{slug}\":\n    get:\n      description: Get results from a handpicked collection\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n        - description: Search query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Maximum current auction price\n          in: query\n          name: auction_price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Category slug from /api/categories\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n        - description: Product type slug from /api/categories\n          in: query\n          name: product_type\n          required: false\n          schema:\n            type: string\n        - description: \"Condition:\n            all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,ver\\\n            y-good,excellent,mint\"\n          in: query\n          name: conditions\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Decade: e.g. 1970s, early 70s\"\n          in: query\n          name: decade\n          required: false\n          schema:\n            type: string\n        - description: Visual finish of the item, common for guitars\n          in: query\n          name: finish\n          required: false\n          schema:\n            type: string\n        - description: Handmade items only\n          in: query\n          name: handmade\n          required: false\n          schema:\n            type: boolean\n        - description: City where item is located\n          in: query\n          name: item_city\n          required: false\n          schema:\n            type: string\n        - description: DEPRECATED - Country code where item is located\n          in: query\n          name: item_country\n          required: false\n          schema:\n            type: string\n        - description: Country code where item is located\n          in: query\n          name: item_region\n          required: false\n          schema:\n            type: string\n        - description: State or region code where item is located\n          in: query\n          name: item_state\n          required: false\n          schema:\n            type: string\n        - description: Make(s)/brand of item (e.g. Fender). Can take a single value or an\n            array.\n          in: query\n          name: make\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Model of item (e.g. Stratocaster)\n          in: query\n          name: model\n          required: false\n          schema:\n            type: string\n        - description: Search term negation. If you want to exclude a term, add it here\n          in: query\n          name: must_not\n          required: false\n          schema:\n            type: string\n        - description: Maximum price of search results (USD)\n          in: query\n          name: price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Minimum price of search results (USD)\n          in: query\n          name: price_min\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: The currency to be used for the price filters\n          in: query\n          name: currency\n          required: false\n          schema:\n            type: string\n        - description: Maximum year of manufacture\n          in: query\n          name: year_max\n          required: false\n          schema:\n            type: integer\n        - description: Minumum year of manufacture\n          in: query\n          name: year_min\n          required: false\n          schema:\n            type: integer\n        - description: If true, include only items that accept gift cards\n          in: query\n          name: accepts_gift_cards\n          required: false\n          schema:\n            type: boolean\n        - description: If true, include only items by Reverb Preferred Sellers\n          in: query\n          name: preferred_seller\n          required: false\n          schema:\n            type: boolean\n        - description: Slug of shop to search\n          in: query\n          name: shop\n          required: false\n          schema:\n            type: string\n        - description: ID of shop to search\n          in: query\n          name: shop_id\n          required: false\n          schema:\n            type: string\n        - description: \"Type of listing: auctions,offers\"\n          in: query\n          name: listing_type\n          required: false\n          schema:\n            type: string\n        - description: Limit search to items that ship to this country code\n          in: query\n          name: ships_to\n          required: false\n          schema:\n            type: string\n        - description: If true, exclude auctions\n          in: query\n          name: exclude_auctions\n          required: false\n          schema:\n            type: boolean\n        - description: If true, only show items that can be purchased with a payment plan\n          in: query\n          name: accepts_payment_plans\n          required: false\n          schema:\n            type: boolean\n        - description: Minimum number of watchers (used to find popular items)\n          in: query\n          name: watchers_count_min\n          required: false\n          schema:\n            type: integer\n        - description: Listing ID negation. If you want to exclude a listing, add it here.\n          in: query\n          name: not_ids\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only items that offer local pickup\n          in: query\n          name: local_pickup\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get results from a handpicked collection\n      tags:\n        - handpicked\n  /listing_conditions:\n    get:\n      description: List of supported product conditions\n      responses:\n        default:\n          description: Unexpected error\n      summary: List of supported product conditions\n      tags:\n        - listing_conditions\n  /listings:\n    get:\n      description: Default search of listings includes only used \u0026 handmade. Add a filter\n        to view all listings or use the /listings/all endpoint.\n      parameters:\n        - description: Search query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Maximum current auction price\n          in: query\n          name: auction_price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Category slug from /api/categories\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n        - description: Product type slug from /api/categories\n          in: query\n          name: product_type\n          required: false\n          schema:\n            type: string\n        - description: \"Condition:\n            all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,ver\\\n            y-good,excellent,mint\"\n          in: query\n          name: conditions\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Decade: e.g. 1970s, early 70s\"\n          in: query\n          name: decade\n          required: false\n          schema:\n            type: string\n        - description: Visual finish of the item, common for guitars\n          in: query\n          name: finish\n          required: false\n          schema:\n            type: string\n        - description: Handmade items only\n          in: query\n          name: handmade\n          required: false\n          schema:\n            type: boolean\n        - description: City where item is located\n          in: query\n          name: item_city\n          required: false\n          schema:\n            type: string\n        - description: DEPRECATED - Country code where item is located\n          in: query\n          name: item_country\n          required: false\n          schema:\n            type: string\n        - description: Country code where item is located\n          in: query\n          name: item_region\n          required: false\n          schema:\n            type: string\n        - description: State or region code where item is located\n          in: query\n          name: item_state\n          required: false\n          schema:\n            type: string\n        - description: Make(s)/brand of item (e.g. Fender). Can take a single value or an\n            array.\n          in: query\n          name: make\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Model of item (e.g. Stratocaster)\n          in: query\n          name: model\n          required: false\n          schema:\n            type: string\n        - description: Search term negation. If you want to exclude a term, add it here\n          in: query\n          name: must_not\n          required: false\n          schema:\n            type: string\n        - description: Maximum price of search results (USD)\n          in: query\n          name: price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Minimum price of search results (USD)\n          in: query\n          name: price_min\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: The currency to be used for the price filters\n          in: query\n          name: currency\n          required: false\n          schema:\n            type: string\n        - description: Maximum year of manufacture\n          in: query\n          name: year_max\n          required: false\n          schema:\n            type: integer\n        - description: Minumum year of manufacture\n          in: query\n          name: year_min\n          required: false\n          schema:\n            type: integer\n        - description: If true, include only items that accept gift cards\n          in: query\n          name: accepts_gift_cards\n          required: false\n          schema:\n            type: boolean\n        - description: If true, include only items by Reverb Preferred Sellers\n          in: query\n          name: preferred_seller\n          required: false\n          schema:\n            type: boolean\n        - description: Slug of shop to search\n          in: query\n          name: shop\n          required: false\n          schema:\n            type: string\n        - description: ID of shop to search\n          in: query\n          name: shop_id\n          required: false\n          schema:\n            type: string\n        - description: \"Type of listing: auctions,offers\"\n          in: query\n          name: listing_type\n          required: false\n          schema:\n            type: string\n        - description: Limit search to items that ship to this country code\n          in: query\n          name: ships_to\n          required: false\n          schema:\n            type: string\n        - description: If true, exclude auctions\n          in: query\n          name: exclude_auctions\n          required: false\n          schema:\n            type: boolean\n        - description: If true, only show items that can be purchased with a payment plan\n          in: query\n          name: accepts_payment_plans\n          required: false\n          schema:\n            type: boolean\n        - description: Minimum number of watchers (used to find popular items)\n          in: query\n          name: watchers_count_min\n          required: false\n          schema:\n            type: integer\n        - description: Listing ID negation. If you want to exclude a listing, add it here.\n          in: query\n          name: not_ids\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only items that offer local pickup\n          in: query\n          name: local_pickup\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Unexpected error\n      summary: Default search of listings includes only used \u0026 handmade. Add a filter\n        to view all listings or use the /listings/all endpoint.\n      tags:\n        - listings\n    post:\n      description: Create a listing\n      requestBody:\n        $ref: \"#/components/requestBodies/Body2\"\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n            - write_listings_for_others\n      summary: Create a listing\n      tags:\n        - listings\n  /listings/all:\n    get:\n      description: All listings including used, handmade, and brand new\n      parameters:\n        - description: Search query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Maximum current auction price\n          in: query\n          name: auction_price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Category slug from /api/categories\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n        - description: Product type slug from /api/categories\n          in: query\n          name: product_type\n          required: false\n          schema:\n            type: string\n        - description: \"Condition:\n            all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,ver\\\n            y-good,excellent,mint\"\n          in: query\n          name: conditions\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Decade: e.g. 1970s, early 70s\"\n          in: query\n          name: decade\n          required: false\n          schema:\n            type: string\n        - description: Visual finish of the item, common for guitars\n          in: query\n          name: finish\n          required: false\n          schema:\n            type: string\n        - description: Handmade items only\n          in: query\n          name: handmade\n          required: false\n          schema:\n            type: boolean\n        - description: City where item is located\n          in: query\n          name: item_city\n          required: false\n          schema:\n            type: string\n        - description: DEPRECATED - Country code where item is located\n          in: query\n          name: item_country\n          required: false\n          schema:\n            type: string\n        - description: Country code where item is located\n          in: query\n          name: item_region\n          required: false\n          schema:\n            type: string\n        - description: State or region code where item is located\n          in: query\n          name: item_state\n          required: false\n          schema:\n            type: string\n        - description: Make(s)/brand of item (e.g. Fender). Can take a single value or an\n            array.\n          in: query\n          name: make\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Model of item (e.g. Stratocaster)\n          in: query\n          name: model\n          required: false\n          schema:\n            type: string\n        - description: Search term negation. If you want to exclude a term, add it here\n          in: query\n          name: must_not\n          required: false\n          schema:\n            type: string\n        - description: Maximum price of search results (USD)\n          in: query\n          name: price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Minimum price of search results (USD)\n          in: query\n          name: price_min\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: The currency to be used for the price filters\n          in: query\n          name: currency\n          required: false\n          schema:\n            type: string\n        - description: Maximum year of manufacture\n          in: query\n          name: year_max\n          required: false\n          schema:\n            type: integer\n        - description: Minumum year of manufacture\n          in: query\n          name: year_min\n          required: false\n          schema:\n            type: integer\n        - description: If true, include only items that accept gift cards\n          in: query\n          name: accepts_gift_cards\n          required: false\n          schema:\n            type: boolean\n        - description: If true, include only items by Reverb Preferred Sellers\n          in: query\n          name: preferred_seller\n          required: false\n          schema:\n            type: boolean\n        - description: Slug of shop to search\n          in: query\n          name: shop\n          required: false\n          schema:\n            type: string\n        - description: ID of shop to search\n          in: query\n          name: shop_id\n          required: false\n          schema:\n            type: string\n        - description: \"Type of listing: auctions,offers\"\n          in: query\n          name: listing_type\n          required: false\n          schema:\n            type: string\n        - description: Limit search to items that ship to this country code\n          in: query\n          name: ships_to\n          required: false\n          schema:\n            type: string\n        - description: If true, exclude auctions\n          in: query\n          name: exclude_auctions\n          required: false\n          schema:\n            type: boolean\n        - description: If true, only show items that can be purchased with a payment plan\n          in: query\n          name: accepts_payment_plans\n          required: false\n          schema:\n            type: boolean\n        - description: Minimum number of watchers (used to find popular items)\n          in: query\n          name: watchers_count_min\n          required: false\n          schema:\n            type: integer\n        - description: Listing ID negation. If you want to exclude a listing, add it here.\n          in: query\n          name: not_ids\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only items that offer local pickup\n          in: query\n          name: local_pickup\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Unexpected error\n      summary: All listings including used, handmade, and brand new\n      tags:\n        - listings\n  /listings/facets/seller_location:\n    get:\n      description: Individual facets\n      responses:\n        default:\n          description: Unexpected error\n      summary: Individual facets\n      tags:\n        - listings\n  \"/listings/{id}/negotiation\":\n    get:\n      description: Returns the latest negotiation for the requesting user given a listing id\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_offers\n      summary: Returns the latest negotiation for the requesting user given a listing id\n      tags:\n        - listings\n  \"/listings/{id}/offer\":\n    post:\n      description: Make an offer to the seller of a listing\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body4\"\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_offers\n      summary: Make an offer to the seller of a listing\n      tags:\n        - listings\n  \"/listings/{listing_id}/bump\":\n    get:\n      description: View available bump tiers and stats for a listing\n      parameters:\n        - in: path\n          name: listing_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_listings\n      summary: View available bump tiers and stats for a listing\n      tags:\n        - listings\n  \"/listings/{listing_id}/bump/{budget_type}\":\n    post:\n      description: Bump a listing\n      parameters:\n        - in: path\n          name: listing_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: budget_type\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n      summary: Bump a listing\n      tags:\n        - listings\n  \"/listings/{listing_id}/conversations\":\n    post:\n      description: Start a conversation with a seller\n      parameters:\n        - in: path\n          name: listing_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_messages\n      summary: Start a conversation with a seller\n      tags:\n        - listings\n  \"/listings/{listing_id}/images\":\n    get:\n      description: View the images associated with a particular listing\n      parameters:\n        - in: path\n          name: listing_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_listings\n      summary: View the images associated with a particular listing\n      tags:\n        - listings\n  \"/listings/{listing_id}/images/{image_id}\":\n    delete:\n      description: Delete an image from a listing\n      parameters:\n        - in: path\n          name: listing_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: image_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n      summary: Delete an image from a listing\n      tags:\n        - listings\n  \"/listings/{listing_id}/product_bundle\":\n    get:\n      description: Find a product bundle attached to a listing\n      parameters:\n        - in: path\n          name: listing_id\n          required: true\n          schema:\n            type: string\n        - description: Pass to see non-live bundles as the seller\n          in: query\n          name: for_seller\n          required: false\n          schema:\n            type: boolean\n      responses:\n        default:\n          description: Unexpected error\n      summary: Find a product bundle attached to a listing\n      tags:\n        - listings\n  \"/listings/{listing_id}/sales\":\n    get:\n      description: See all sales that include a listing.\n      parameters:\n        - in: path\n          name: listing_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: See all sales that include a listing.\n      tags:\n        - listings\n  \"/listings/{slug}\":\n    delete:\n      description: Delete a draft listing. Cannot be used on non-drafts.\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n      summary: Delete a draft listing. Cannot be used on non-drafts.\n      tags:\n        - listings\n    get:\n      description: Listing details\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Listing details\n      tags:\n        - listings\n    put:\n      description: Update a listing\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body2\"\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n      summary: Update a listing\n      tags:\n        - listings\n  \"/listings/{slug}/edit\":\n    get:\n      description: Edit listing.\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n      summary: Edit listing.\n      tags:\n        - listings\n  \"/listings/{slug}/flag\":\n    post:\n      description: Flag a listing for inappropriate content or fraud\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                reason:\n                  description: \"Valid reasons: 'Sexuality/nudity', 'Hateful or\n                    inappropriate speech', 'Item not as described or potential\n                    fraud', 'Trademark infringement', 'Other'\"\n                  type: string\n              required:\n                - reason\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      summary: Flag a listing for inappropriate content or fraud\n      tags:\n        - listings\n  \"/listings/{slug}/reviews\":\n    get:\n      description: View reviews of a listing\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: View reviews of a listing\n      tags:\n        - listings\n    post:\n      description: Create a review for a listing\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_reviews\n      summary: Create a review for a listing\n      tags:\n        - listings\n  \"/listings/{slug}/similar_listings\":\n    get:\n      description: Listing details\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Listing details\n      tags:\n        - listings\n  /my/account:\n    get:\n      description: Get account details\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_profile\n      summary: Get account details\n      tags:\n        - my\n    put:\n      description: Update account details\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                currency:\n                  description: The currency preference for the account\n                  type: string\n                first_name:\n                  description: The first name of the account holder\n                  type: string\n                last_name:\n                  description: The last name of the account holder\n                  type: string\n                locale_code:\n                  description: The locale code for the account\n                  type: string\n                shipping_region_code:\n                  description: The shipping region preference for the account\n                  type: string\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_profile\n      summary: Update account details\n      tags:\n        - my\n  /my/addresses:\n    get:\n      description: See all addresses in your address book\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_profile\n      summary: See all addresses in your address book\n      tags:\n        - my\n    post:\n      description: Create a new address in your address book\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_profile\n      summary: Create a new address in your address book\n      tags:\n        - my\n  \"/my/addresses/{address_id}\":\n    delete:\n      description: Delete an existing address in your address book\n      parameters:\n        - in: path\n          name: address_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_profile\n      summary: Delete an existing address in your address book\n      tags:\n        - my\n    put:\n      description: Update an existing address in your address book\n      parameters:\n        - in: path\n          name: address_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_profile\n      summary: Update an existing address in your address book\n      tags:\n        - my\n  /my/conversations:\n    get:\n      description: Get a list of your conversations\n      parameters:\n        - description: Query string to search conversations by\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: Show unread conversations only\n          in: query\n          name: unread_only\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_messages\n      summary: Get a list of your conversations\n      tags:\n        - my\n    post:\n      description: Start a conversation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                body:\n                  description: The body of the message\n                  type: string\n                cloudinary_photos:\n                  description: An array of cloudinary data hashes (Reverb internal use\n                    only).\n                  items:\n                    type: string\n                  type: array\n                listing_id:\n                  description: The id of the listing being discussed\n                  type: integer\n                recipient_id:\n                  description: The id of the user you are trying to contact\n                  type: integer\n                recipient_uuid:\n                  description: The uuid of the user you are trying to contact\n                  type: string\n                shop_id:\n                  description: The id of the shop you are trying to contact\n                  type: string\n              required:\n                - body\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_messages\n      summary: Start a conversation\n      tags:\n        - my\n  \"/my/conversations/{conversation_id}/messages\":\n    post:\n      description: Send a message\n      parameters:\n        - in: path\n          name: conversation_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_messages\n      summary: Send a message\n      tags:\n        - my\n  \"/my/conversations/{id}\":\n    get:\n      description: Display conversation details with messages in natural time order (oldest\n        to newest)\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_messages\n      summary: Display conversation details with messages in natural time order (oldest\n        to newest)\n      tags:\n        - my\n    put:\n      description: Mark a conversation read/unread\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                read:\n                  description: Should the conversation be marked as read\n                  type: boolean\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_messages\n      summary: Mark a conversation read/unread\n      tags:\n        - my\n  /my/counts:\n    get:\n      description: Get your actionable status counts\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_profile\n      summary: Get your actionable status counts\n      tags:\n        - my\n  \"/my/curated_set/product/{product_id}\":\n    delete:\n      parameters:\n        - in: path\n          name: product_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - my\n    post:\n      parameters:\n        - in: path\n          name: product_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - my\n  /my/feed:\n    get:\n      description: Get listings from your feed\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Get listings from your feed\n      tags:\n        - my\n  /my/feed/customize:\n    get:\n      description: get your feed customization options\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: get your feed customization options\n      tags:\n        - my\n  /my/feed/grid:\n    get:\n      description: get your feed\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: get your feed\n      tags:\n        - my\n  /my/feedback/received:\n    get:\n      description: List of received feedback\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_feedback\n      summary: List of received feedback\n      tags:\n        - my\n  /my/feedback/sent:\n    get:\n      description: List of sent feedback\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_feedback\n      summary: List of sent feedback\n      tags:\n        - my\n  /my/follows:\n    get:\n      description: See what the user is following\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: See what the user is following\n      tags:\n        - my\n  /my/follows/articles:\n    get:\n      description: Returns a user's ArticleCategoryFollows\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Returns a user's ArticleCategoryFollows\n      tags:\n        - my\n    post:\n      description: Set a user's ArticleCategoryFollows\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                category_uuids:\n                  type: string\n              required:\n                - category_uuids\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Set a user's ArticleCategoryFollows\n      tags:\n        - my\n  \"/my/follows/brands/{slug}\":\n    delete:\n      description: Unfollow a brand\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Unfollow a brand\n      tags:\n        - my\n    get:\n      description: Follow status for a brand\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Follow status for a brand\n      tags:\n        - my\n    post:\n      description: Follow a brand\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Follow a brand\n      tags:\n        - my\n  \"/my/follows/categories/{category}/{subcategory}\":\n    delete:\n      description: Unfollow a subcategory\n      parameters:\n        - in: path\n          name: category\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: subcategory\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Unfollow a subcategory\n      tags:\n        - my\n    get:\n      description: Follow status for a subcategory\n      parameters:\n        - in: path\n          name: category\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: subcategory\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Follow status for a subcategory\n      tags:\n        - my\n    post:\n      description: Follow a subcategory\n      parameters:\n        - in: path\n          name: category\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: subcategory\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Follow a subcategory\n      tags:\n        - my\n  \"/my/follows/categories/{identifier}\":\n    delete:\n      description: Unfollow a category\n      parameters:\n        - in: path\n          name: identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Unfollow a category\n      tags:\n        - my\n    get:\n      description: Follow status for a category\n      parameters:\n        - in: path\n          name: identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Follow status for a category\n      tags:\n        - my\n    post:\n      description: Follow a category\n      parameters:\n        - in: path\n          name: identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Follow a category\n      tags:\n        - my\n  \"/my/follows/categories/{uuid}\":\n    post:\n      description: Follow a category\n      parameters:\n        - in: path\n          name: uuid\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Follow a category\n      tags:\n        - my\n  \"/my/follows/collections/{slug}\":\n    delete:\n      description: Unfollow a collection\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Unfollow a collection\n      tags:\n        - my\n    get:\n      description: Follow status for a collection\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Follow status for a collection\n      tags:\n        - my\n    post:\n      description: Follow a collection\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Follow a collection\n      tags:\n        - my\n  \"/my/follows/handpicked/{slug}\":\n    delete:\n      description: Unfollow a handpicked collection\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Unfollow a handpicked collection\n      tags:\n        - my\n    get:\n      description: Follow status for a handpicked collection\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Follow status for a handpicked collection\n      tags:\n        - my\n    post:\n      description: Follow a handpicked collection\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Follow a handpicked collection\n      tags:\n        - my\n  /my/follows/search:\n    get:\n      description: Follow status for a search\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Follow status for a search\n      tags:\n        - my\n    post:\n      description: Follow a search\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                accepts_gift_cards:\n                  description: If true, include only items that accept gift cards\n                  type: boolean\n                accepts_payment_plans:\n                  description: If true, only show items that can be purchased with a\n                    payment plan\n                  type: boolean\n                auction_price_max:\n                  description: Maximum current auction price\n                  format: float\n                  type: number\n                category:\n                  description: Category slug from /api/categories\n                  type: string\n                conditions:\n                  description: \"Condition:\n                    all,new,b-stock,used,non-functioning,all-but-new,poor,fair,\\\n                    good,very-good,excellent,mint\"\n                  enum:\n                    - all\n                    - new\n                    - b-stock\n                    - used\n                    - non-functioning\n                    - all-but-new\n                    - poor\n                    - fair\n                    - good\n                    - very-good\n                    - excellent\n                    - mint\n                  items:\n                    type: string\n                  type: array\n                currency:\n                  description: The currency to be used for the price filters\n                  enum:\n                    - USD\n                    - CAD\n                    - EUR\n                    - GBP\n                    - AUD\n                    - JPY\n                    - NZD\n                    - MXN\n                    - DKK\n                    - SEK\n                    - CHF\n                    - ARS\n                    - BRL\n                    - HKD\n                    - NOK\n                    - PHP\n                    - PLN\n                    - RUB\n                  type: string\n                decade:\n                  description: \"Decade: e.g. 1970s, early 70s\"\n                  type: string\n                exclude_auctions:\n                  description: If true, exclude auctions\n                  type: boolean\n                finish:\n                  description: Visual finish of the item, common for guitars\n                  type: string\n                handmade:\n                  description: Handmade items only\n                  type: boolean\n                item_city:\n                  description: City where item is located\n                  type: string\n                item_country:\n                  description: DEPRECATED - Country code where item is located\n                  type: string\n                item_region:\n                  description: Country code where item is located\n                  type: string\n                item_state:\n                  description: State or region code where item is located\n                  type: string\n                listing_type:\n                  description: \"Type of listing: auctions,offers\"\n                  enum:\n                    - auctions\n                    - offers\n                  type: string\n                local_pickup:\n                  description: Only items that offer local pickup\n                  type: boolean\n                make:\n                  description: Make(s)/brand of item (e.g. Fender). Can take a single value\n                    or an array.\n                  items:\n                    type: string\n                  type: array\n                model:\n                  description: Model of item (e.g. Stratocaster)\n                  type: string\n                must_not:\n                  description: Search term negation. If you want to exclude a term, add it\n                    here\n                  type: string\n                not_ids:\n                  description: Listing ID negation. If you want to exclude a listing, add\n                    it here.\n                  items:\n                    type: integer\n                  type: array\n                preferred_seller:\n                  description: If true, include only items by Reverb Preferred Sellers\n                  type: boolean\n                price_max:\n                  description: Maximum price of search results (USD)\n                  format: float\n                  type: number\n                price_min:\n                  description: Minimum price of search results (USD)\n                  format: float\n                  type: number\n                product_type:\n                  description: Product type slug from /api/categories\n                  type: string\n                query:\n                  description: Search query.\n                  type: string\n                ships_to:\n                  description: Limit search to items that ship to this country code\n                  type: string\n                shop:\n                  description: Slug of shop to search\n                  type: string\n                shop_id:\n                  description: ID of shop to search\n                  type: string\n                watchers_count_min:\n                  description: Minimum number of watchers (used to find popular items)\n                  type: integer\n                year_max:\n                  description: Maximum year of manufacture\n                  type: integer\n                year_min:\n                  description: Minumum year of manufacture\n                  type: integer\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Follow a search\n      tags:\n        - my\n  \"/my/follows/shops/{slug}\":\n    delete:\n      description: Unfollow a shop\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Unfollow a shop\n      tags:\n        - my\n    get:\n      description: Follow status for a shop\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Follow status for a shop\n      tags:\n        - my\n    post:\n      description: Follow a shop\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Follow a shop\n      tags:\n        - my\n  \"/my/follows/{follow_id}\":\n    delete:\n      description: Delete a follow\n      parameters:\n        - in: path\n          name: follow_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Delete a follow\n      tags:\n        - my\n  \"/my/follows/{follow_id}/alert\":\n    delete:\n      parameters:\n        - in: path\n          name: follow_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - my\n    post:\n      parameters:\n        - in: path\n          name: follow_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - my\n  /my/listings:\n    get:\n      description: Retrieve a list of live listings for the seller. To search all listings\n        specify state=all\n      parameters:\n        - description: Search query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Maximum current auction price\n          in: query\n          name: auction_price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Category slug from /api/categories\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n        - description: Product type slug from /api/categories\n          in: query\n          name: product_type\n          required: false\n          schema:\n            type: string\n        - description: \"Condition:\n            all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,ver\\\n            y-good,excellent,mint\"\n          in: query\n          name: conditions\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Decade: e.g. 1970s, early 70s\"\n          in: query\n          name: decade\n          required: false\n          schema:\n            type: string\n        - description: Visual finish of the item, common for guitars\n          in: query\n          name: finish\n          required: false\n          schema:\n            type: string\n        - description: Handmade items only\n          in: query\n          name: handmade\n          required: false\n          schema:\n            type: boolean\n        - description: City where item is located\n          in: query\n          name: item_city\n          required: false\n          schema:\n            type: string\n        - description: DEPRECATED - Country code where item is located\n          in: query\n          name: item_country\n          required: false\n          schema:\n            type: string\n        - description: Country code where item is located\n          in: query\n          name: item_region\n          required: false\n          schema:\n            type: string\n        - description: State or region code where item is located\n          in: query\n          name: item_state\n          required: false\n          schema:\n            type: string\n        - description: Make(s)/brand of item (e.g. Fender). Can take a single value or an\n            array.\n          in: query\n          name: make\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Model of item (e.g. Stratocaster)\n          in: query\n          name: model\n          required: false\n          schema:\n            type: string\n        - description: Search term negation. If you want to exclude a term, add it here\n          in: query\n          name: must_not\n          required: false\n          schema:\n            type: string\n        - description: Maximum price of search results (USD)\n          in: query\n          name: price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Minimum price of search results (USD)\n          in: query\n          name: price_min\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: The currency to be used for the price filters\n          in: query\n          name: currency\n          required: false\n          schema:\n            type: string\n        - description: Maximum year of manufacture\n          in: query\n          name: year_max\n          required: false\n          schema:\n            type: integer\n        - description: Minumum year of manufacture\n          in: query\n          name: year_min\n          required: false\n          schema:\n            type: integer\n        - description: If true, include only items that accept gift cards\n          in: query\n          name: accepts_gift_cards\n          required: false\n          schema:\n            type: boolean\n        - description: If true, include only items by Reverb Preferred Sellers\n          in: query\n          name: preferred_seller\n          required: false\n          schema:\n            type: boolean\n        - description: Slug of shop to search\n          in: query\n          name: shop\n          required: false\n          schema:\n            type: string\n        - description: ID of shop to search\n          in: query\n          name: shop_id\n          required: false\n          schema:\n            type: string\n        - description: \"Type of listing: auctions,offers\"\n          in: query\n          name: listing_type\n          required: false\n          schema:\n            type: string\n        - description: Limit search to items that ship to this country code\n          in: query\n          name: ships_to\n          required: false\n          schema:\n            type: string\n        - description: If true, exclude auctions\n          in: query\n          name: exclude_auctions\n          required: false\n          schema:\n            type: boolean\n        - description: If true, only show items that can be purchased with a payment plan\n          in: query\n          name: accepts_payment_plans\n          required: false\n          schema:\n            type: boolean\n        - description: Minimum number of watchers (used to find popular items)\n          in: query\n          name: watchers_count_min\n          required: false\n          schema:\n            type: integer\n        - description: Listing ID negation. If you want to exclude a listing, add it here.\n          in: query\n          name: not_ids\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only items that offer local pickup\n          in: query\n          name: local_pickup\n          required: false\n          schema:\n            type: boolean\n        - description: \"Available: [\\\"all\\\", \\\"draft\\\", \\\"ended\\\", \\\"live\\\", \\\"ordered\\\",\n            \\\"sold_out\\\", \\\"suspended\\\", \\\"seller_unavailable\\\"]. Defaults to\n            'live'\"\n          in: query\n          name: state\n          required: false\n          schema:\n            type: string\n            default: live\n        - description: Find a listing by sku\n          in: query\n          name: sku\n          required: false\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_listings\n      summary: Retrieve a list of live listings for the seller. To search all listings\n        specify state=all\n      tags:\n        - my\n  /my/listings/drafts:\n    get:\n      description: Retrieve a list your draft listings\n      parameters:\n        - description: Search query.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Maximum current auction price\n          in: query\n          name: auction_price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Category slug from /api/categories\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n        - description: Product type slug from /api/categories\n          in: query\n          name: product_type\n          required: false\n          schema:\n            type: string\n        - description: \"Condition:\n            all,new,b-stock,used,non-functioning,all-but-new,poor,fair,good,ver\\\n            y-good,excellent,mint\"\n          in: query\n          name: conditions\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"Decade: e.g. 1970s, early 70s\"\n          in: query\n          name: decade\n          required: false\n          schema:\n            type: string\n        - description: Visual finish of the item, common for guitars\n          in: query\n          name: finish\n          required: false\n          schema:\n            type: string\n        - description: Handmade items only\n          in: query\n          name: handmade\n          required: false\n          schema:\n            type: boolean\n        - description: City where item is located\n          in: query\n          name: item_city\n          required: false\n          schema:\n            type: string\n        - description: DEPRECATED - Country code where item is located\n          in: query\n          name: item_country\n          required: false\n          schema:\n            type: string\n        - description: Country code where item is located\n          in: query\n          name: item_region\n          required: false\n          schema:\n            type: string\n        - description: State or region code where item is located\n          in: query\n          name: item_state\n          required: false\n          schema:\n            type: string\n        - description: Make(s)/brand of item (e.g. Fender). Can take a single value or an\n            array.\n          in: query\n          name: make\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Model of item (e.g. Stratocaster)\n          in: query\n          name: model\n          required: false\n          schema:\n            type: string\n        - description: Search term negation. If you want to exclude a term, add it here\n          in: query\n          name: must_not\n          required: false\n          schema:\n            type: string\n        - description: Maximum price of search results (USD)\n          in: query\n          name: price_max\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: Minimum price of search results (USD)\n          in: query\n          name: price_min\n          required: false\n          schema:\n            type: number\n            format: float\n        - description: The currency to be used for the price filters\n          in: query\n          name: currency\n          required: false\n          schema:\n            type: string\n        - description: Maximum year of manufacture\n          in: query\n          name: year_max\n          required: false\n          schema:\n            type: integer\n        - description: Minumum year of manufacture\n          in: query\n          name: year_min\n          required: false\n          schema:\n            type: integer\n        - description: If true, include only items that accept gift cards\n          in: query\n          name: accepts_gift_cards\n          required: false\n          schema:\n            type: boolean\n        - description: If true, include only items by Reverb Preferred Sellers\n          in: query\n          name: preferred_seller\n          required: false\n          schema:\n            type: boolean\n        - description: Slug of shop to search\n          in: query\n          name: shop\n          required: false\n          schema:\n            type: string\n        - description: ID of shop to search\n          in: query\n          name: shop_id\n          required: false\n          schema:\n            type: string\n        - description: \"Type of listing: auctions,offers\"\n          in: query\n          name: listing_type\n          required: false\n          schema:\n            type: string\n        - description: Limit search to items that ship to this country code\n          in: query\n          name: ships_to\n          required: false\n          schema:\n            type: string\n        - description: If true, exclude auctions\n          in: query\n          name: exclude_auctions\n          required: false\n          schema:\n            type: boolean\n        - description: If true, only show items that can be purchased with a payment plan\n          in: query\n          name: accepts_payment_plans\n          required: false\n          schema:\n            type: boolean\n        - description: Minimum number of watchers (used to find popular items)\n          in: query\n          name: watchers_count_min\n          required: false\n          schema:\n            type: integer\n        - description: Listing ID negation. If you want to exclude a listing, add it here.\n          in: query\n          name: not_ids\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Only items that offer local pickup\n          in: query\n          name: local_pickup\n          required: false\n          schema:\n            type: boolean\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_listings\n      summary: Retrieve a list your draft listings\n      tags:\n        - my\n  /my/listings/negotiations:\n    get:\n      description: Get a list of active negotiations as a seller\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_offers\n      summary: Get a list of active negotiations as a seller\n      tags:\n        - my\n  \"/my/listings/{slug}/state/end\":\n    put:\n      description: End a listing\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                reason:\n                  description: 'The reason this listing is being ended. Valid reasons:\n                    [\"not_sold\", \"reverb_sale\"].'\n                  enum:\n                    - not_sold\n                    - reverb_sale\n                  type: string\n              required:\n                - reason\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n      summary: End a listing\n      tags:\n        - my\n  /my/lists:\n    get:\n      description: Get a list of your lists (wishlist, watch list, etc)\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Get a list of your lists (wishlist, watch list, etc)\n      tags:\n        - my\n  /my/negotiations/buying:\n    get:\n      description: Get a list of active negotiations as a buyer\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_offers\n      summary: Get a list of active negotiations as a buyer\n      tags:\n        - my\n  \"/my/negotiations/{id}\":\n    get:\n      description: Get offer details\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_offers\n      summary: Get offer details\n      tags:\n        - my\n  \"/my/negotiations/{id}/accept\":\n    post:\n      description: Accept an offer\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  description: Message to include with accepted offer\n                  type: string\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_offers\n      summary: Accept an offer\n      tags:\n        - my\n  \"/my/negotiations/{id}/counter\":\n    post:\n      description: Counter an offer\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body3\"\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_offers\n      summary: Counter an offer\n      tags:\n        - my\n  \"/my/negotiations/{id}/decline\":\n    post:\n      description: Decline an offer\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_offers\n      summary: Decline an offer\n      tags:\n        - my\n  /my/orders/awaiting_feedback:\n    get:\n      description: List of orders that need feedback\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_feedback\n      summary: List of orders that need feedback\n      tags:\n        - my\n  /my/orders/buying/all:\n    get:\n      description: Returns all orders, newest first.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Returns all orders, newest first.\n      tags:\n        - my\n  \"/my/orders/buying/by_uuid/{uuid}\":\n    get:\n      parameters:\n        - in: path\n          name: uuid\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - my\n  /my/orders/buying/unpaid:\n    get:\n      description: Returns unpaid orders, newest first.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Returns unpaid orders, newest first.\n      tags:\n        - my\n  \"/my/orders/buying/{id}\":\n    get:\n      description: Returns order details for a buyer\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Returns order details for a buyer\n      tags:\n        - my\n  \"/my/orders/buying/{id}/mark_received\":\n    post:\n      description: Marks an order as received by the buyer\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_orders\n      summary: Marks an order as received by the buyer\n      tags:\n        - my\n  /my/orders/selling/all:\n    get:\n      description: Get all seller orders, newest first.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Get all seller orders, newest first.\n      tags:\n        - my\n  /my/orders/selling/awaiting_shipment:\n    get:\n      description: Get unpaid seller orders, newest first.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Get unpaid seller orders, newest first.\n      tags:\n        - my\n  \"/my/orders/selling/buyer_history/{buyer_id}\":\n    get:\n      description: See previous orders from buyer\n      parameters:\n        - in: path\n          name: buyer_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: See previous orders from buyer\n      tags:\n        - my\n  \"/my/orders/selling/by_uuid/{uuid}\":\n    get:\n      parameters:\n        - in: path\n          name: uuid\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - my\n  /my/orders/selling/unpaid:\n    get:\n      description: Get unpaid seller orders, newest first.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Get unpaid seller orders, newest first.\n      tags:\n        - my\n  \"/my/orders/selling/{id}\":\n    get:\n      description: Returns order details for a seller\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Returns order details for a seller\n      tags:\n        - my\n  \"/my/orders/selling/{id}/mark_picked_up\":\n    post:\n      description: Marks an order as picked up\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                date:\n                  description: Date the item was picked up.\n                  type: string\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_orders\n      summary: Marks an order as picked up\n      tags:\n        - my\n  \"/my/orders/selling/{id}/ship\":\n    post:\n      description: Marks an order as shipped\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                provider:\n                  description: \"Shipping provider: One of UPS, USPS, FedEx, DHL\n                    Deutschland, DHLExpress, DHLGlobalMail, DHL, Canada Post,\n                    Royal Mail, PostNL, Australia Post, EMS, La Poste, China\n                    Post, GLS, Parcelforce, Purolator, Interlogistica, Correos\n                    España, Ukraine Post, DPD Germany, DPD UK, DPD France,\n                    Other\"\n                  type: string\n                send_notification:\n                  description: Should we send an email notification to the buyer\n                  type: boolean\n                tracking_number:\n                  description: Tracking number provided by the shipping provider\n                  type: string\n              required:\n                - provider\n                - tracking_number\n                - send_notification\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_orders\n      summary: Marks an order as shipped\n      tags:\n        - my\n  \"/my/orders/selling/{order_id}/refund_requests\":\n    post:\n      description: Initiate a refund for a sold order\n      parameters:\n        - in: path\n          name: order_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_orders\n      summary: Initiate a refund for a sold order\n      tags:\n        - my\n  /my/payments/selling:\n    get:\n      description: Get payments\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            type: integer\n            default: 24\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: \"Filter by date created in ISO8601 format - e.g:\n            2015-04-09T10:52:23-00:00\"\n          in: query\n          name: created_start_date\n          required: false\n          schema:\n            type: string\n        - description: \"Filter by date created in ISO8601 format - e.g:\n            2015-04-09T10:52:23-00:00\"\n          in: query\n          name: created_end_date\n          required: false\n          schema:\n            type: string\n        - description: \"Filter by date modified in ISO8601 format - e.g:\n            2015-04-09T10:52:23-00:00\"\n          in: query\n          name: updated_start_date\n          required: false\n          schema:\n            type: string\n        - description: \"Filter by date modified in ISO8601 format - e.g:\n            2015-04-09T10:52:23-00:00\"\n          in: query\n          name: updated_end_date\n          required: false\n          schema:\n            type: string\n        - description: Look up payments by order id\n          in: query\n          name: order_id\n          required: false\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Get payments\n      tags:\n        - my\n  \"/my/payments/selling/{id}\":\n    get:\n      description: Get payment\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Get payment\n      tags:\n        - my\n  /my/payouts:\n    get:\n      description: Get a list of payouts\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_payouts\n      summary: Get a list of payouts\n      tags:\n        - my\n  \"/my/payouts/{id}/line_items\":\n    get:\n      description: Read the line items of a payout\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_payouts\n      summary: Read the line items of a payout\n      tags:\n        - my\n  /my/refund_requests/selling:\n    get:\n      description: Get a list of refund requests as a seller\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_orders\n      summary: Get a list of refund requests as a seller\n      tags:\n        - my\n  \"/my/refund_requests/selling/{id}\":\n    put:\n      description: Update a refund request for a sold order\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_orders\n      summary: Update a refund request for a sold order\n      tags:\n        - my\n  /my/viewed_listings:\n    get:\n      description: Get a list of your recently viewed listings.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Get a list of your recently viewed listings.\n      tags:\n        - my\n  /my/wishlist:\n    get:\n      description: Get a list of wishlisted items\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: Get a list of wishlisted items\n      tags:\n        - my\n  \"/my/wishlist/{id}\":\n    delete:\n      description: Remove a listing from your wishlist\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Remove a listing from your wishlist\n      tags:\n        - my\n    put:\n      description: Add a listing to your wishlist\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Add a listing to your wishlist\n      tags:\n        - my\n  \"/orders/{order_id}/feedback/buyer\":\n    get:\n      description: Feedback details for an order's buyer\n      parameters:\n        - in: path\n          name: order_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Feedback details for an order's buyer\n      tags:\n        - orders\n    post:\n      description: Add feedback about an order's buyer\n      parameters:\n        - in: path\n          name: order_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_feedback\n      summary: Add feedback about an order's buyer\n      tags:\n        - orders\n  \"/orders/{order_id}/feedback/seller\":\n    get:\n      description: Feedback details for an order's seller\n      parameters:\n        - in: path\n          name: order_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Feedback details for an order's seller\n      tags:\n        - orders\n    post:\n      description: Add feedback about an order's seller\n      parameters:\n        - in: path\n          name: order_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_feedback\n      summary: Add feedback about an order's seller\n      tags:\n        - orders\n  /payment_methods:\n    get:\n      description: Get list of payment methods\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get list of payment methods\n      tags:\n        - payment_methods\n  \"/priceguide/{id}/transactions/summary\":\n    get:\n      description: Get a summary of transactions for a given price guide\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: number_of_months\n          required: false\n          schema:\n            type: integer\n            default: 3\n        - in: query\n          name: condition\n          required: false\n          schema:\n            type: string\n            default: used\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get a summary of transactions for a given price guide\n      tags:\n        - priceguide\n  \"/products/reviews/{id}\":\n    get:\n      description: View a review\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: View a review\n      tags:\n        - products\n    put:\n      description: Update a review\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                body:\n                  description: Content of the review\n                  type: string\n                rating:\n                  description: Rating from 1 to 5\n                  type: integer\n                title:\n                  description: Title for the review\n                  type: string\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_reviews\n      summary: Update a review\n      tags:\n        - products\n  \"/products/{slug}/reviews\":\n    get:\n      description: View reviews of a comparison shopping page\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: View reviews of a comparison shopping page\n      tags:\n        - products\n    post:\n      description: Create a review for a product\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_reviews\n      summary: Create a review for a product\n      tags:\n        - products\n  /sales/reverb:\n    get:\n      description: View upcoming and live Reverb official sales.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_listings\n      summary: View upcoming and live Reverb official sales.\n      tags:\n        - sales\n  /sales/seller:\n    get:\n      description: View your created sales.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_listings\n      summary: View your created sales.\n      tags:\n        - sales\n  \"/sales/{sale_id}/listings\":\n    delete:\n      description: Remove a listing from a sale\n      parameters:\n        - in: path\n          name: sale_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n      summary: Remove a listing from a sale\n      tags:\n        - sales\n    post:\n      description: Add listings to a sale\n      parameters:\n        - in: path\n          name: sale_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_listings\n      summary: Add listings to a sale\n      tags:\n        - sales\n  \"/sales/{slug}\":\n    get:\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - sales\n  /shipping/providers:\n    get:\n      description: List of supported shipping providers\n      responses:\n        default:\n          description: Unexpected error\n      summary: List of supported shipping providers\n      tags:\n        - shipping\n  /shipping/regions:\n    get:\n      responses:\n        default:\n          description: Unexpected error\n      tags:\n        - shipping\n  /shop:\n    get:\n      description: Get your own shop details\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_profile\n      summary: Get your own shop details\n      tags:\n        - shop\n    put:\n      description: Update your shop profile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  properties:\n                    country_code:\n                      type: string\n                    extended_address:\n                      type: string\n                    locality:\n                      type: string\n                    name:\n                      type: string\n                    phone:\n                      type: string\n                    postal_code:\n                      type: string\n                    region:\n                      type: string\n                    street_address:\n                      type: string\n                  type: object\n                currency:\n                  enum:\n                    - USD\n                    - CAD\n                    - EUR\n                    - GBP\n                    - AUD\n                    - JPY\n                    - NZD\n                    - MXN\n                  type: string\n                description:\n                  type: string\n                legal_country_code:\n                  enum:\n                    - AD\n                    - AE\n                    - AF\n                    - AG\n                    - AI\n                    - AL\n                    - AM\n                    - AO\n                    - AR\n                    - AS\n                    - AT\n                    - AU\n                    - AW\n                    - AX\n                    - AZ\n                    - BA\n                    - BB\n                    - BD\n                    - BE\n                    - BF\n                    - BG\n                    - BH\n                    - BI\n                    - BJ\n                    - BL\n                    - BM\n                    - BN\n                    - BO\n                    - BQ\n                    - BR\n                    - BS\n                    - BT\n                    - BV\n                    - BW\n                    - BY\n                    - BZ\n                    - CA\n                    - CC\n                    - CD\n                    - CF\n                    - CG\n                    - CH\n                    - CI\n                    - CK\n                    - CL\n                    - CM\n                    - CN\n                    - CO\n                    - CR\n                    - CV\n                    - CW\n                    - CX\n                    - CY\n                    - CZ\n                    - DE\n                    - DJ\n                    - DK\n                    - DM\n                    - DO\n                    - DZ\n                    - EC\n                    - EE\n                    - EG\n                    - EH\n                    - ER\n                    - ES\n                    - ET\n                    - FI\n                    - FJ\n                    - FK\n                    - FM\n                    - FO\n                    - FR\n                    - GA\n                    - GB\n                    - GD\n                    - GE\n                    - GF\n                    - GG\n                    - GH\n                    - GI\n                    - GL\n                    - GM\n                    - GN\n                    - GP\n                    - GQ\n                    - GR\n                    - GS\n                    - GT\n                    - GU\n                    - GW\n                    - GY\n                    - HK\n                    - HM\n                    - HN\n                    - HR\n                    - HT\n                    - HU\n                    - ID\n                    - IE\n                    - IL\n                    - IM\n                    - IN\n                    - IO\n                    - IQ\n                    - IS\n                    - IT\n                    - JE\n                    - JM\n                    - JO\n                    - JP\n                    - KE\n                    - KG\n                    - KH\n                    - KI\n                    - KM\n                    - KN\n                    - KR\n                    - KW\n                    - KY\n                    - KZ\n                    - LA\n                    - LB\n                    - LC\n                    - LI\n                    - LK\n                    - LR\n                    - LS\n                    - LT\n                    - LU\n                    - LV\n                    - LY\n                    - MA\n                    - MC\n                    - MD\n                    - ME\n                    - MF\n                    - MG\n                    - MH\n                    - MK\n                    - ML\n                    - MM\n                    - MN\n                    - MO\n                    - MP\n                    - MQ\n                    - MR\n                    - MS\n                    - MT\n                    - MU\n                    - MV\n                    - MW\n                    - MX\n                    - MY\n                    - MZ\n                    - NA\n                    - NC\n                    - NE\n                    - NF\n                    - NG\n                    - NI\n                    - NL\n                    - NO\n                    - NP\n                    - NR\n                    - NU\n                    - NZ\n                    - OM\n                    - PA\n                    - PE\n                    - PF\n                    - PG\n                    - PH\n                    - PK\n                    - PL\n                    - PM\n                    - PN\n                    - PS\n                    - PT\n                    - PW\n                    - PY\n                    - QA\n                    - RE\n                    - RO\n                    - RS\n                    - RU\n                    - RW\n                    - SA\n                    - SB\n                    - SC\n                    - SE\n                    - SG\n                    - SH\n                    - SI\n                    - SJ\n                    - SK\n                    - SL\n                    - SM\n                    - SN\n                    - SO\n                    - SR\n                    - SS\n                    - ST\n                    - SV\n                    - SX\n                    - SZ\n                    - TC\n                    - TD\n                    - TF\n                    - TG\n                    - TH\n                    - TJ\n                    - TK\n                    - TL\n                    - TM\n                    - TN\n                    - TO\n                    - TR\n                    - TT\n                    - TV\n                    - TW\n                    - TZ\n                    - UA\n                    - UG\n                    - UM\n                    - US\n                    - UY\n                    - UZ\n                    - VA\n                    - VC\n                    - VE\n                    - VG\n                    - VI\n                    - VN\n                    - VU\n                    - WF\n                    - WS\n                    - YE\n                    - YT\n                    - ZA\n                    - ZM\n                    - ZW\n                  type: string\n                legal_country_code_confirmed:\n                  enum:\n                    - true\n                  type: boolean\n                name:\n                  type: string\n                payment_policy:\n                  type: string\n                return_policy:\n                  type: string\n                shipping_policy:\n                  type: string\n                shop_type:\n                  enum:\n                    - individual\n                    - business\n                  type: string\n                website:\n                  type: string\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_profile\n      summary: Update your shop profile\n      tags:\n        - shop\n  /shop/listing_conditions:\n    get:\n      description: List of supported product conditions\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_profile\n      summary: List of supported product conditions\n      tags:\n        - shop\n  /shop/payment_methods:\n    get:\n      description: Get accepted payment methods\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_profile\n      summary: Get accepted payment methods\n      tags:\n        - shop\n  /shop/vacation:\n    delete:\n      description: Disable vacation mode. All listings will be re-enabled.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_profile\n      summary: Disable vacation mode. All listings will be re-enabled.\n      tags:\n        - shop\n    get:\n      description: Returns shop vacation status\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_profile\n      summary: Returns shop vacation status\n      tags:\n        - shop\n    post:\n      description: Enable vacation mode. All listings will be unavailable until vacation\n        mode is turned off.\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_profile\n      summary: Enable vacation mode. All listings will be unavailable until vacation\n        mode is turned off.\n      tags:\n        - shop\n  \"/shops/{id}/storefronts\":\n    get:\n      description: Get storefront details on a shop.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get storefront details on a shop.\n      tags:\n        - shops\n  \"/shops/{shop_id}/shipping_profiles\":\n    get:\n      description: List of shipping profiles for your shop\n      parameters:\n        - in: path\n          name: shop_id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_profile\n      summary: List of shipping profiles for your shop\n      tags:\n        - shops\n  \"/shops/{slug}\":\n    get:\n      description: Get details on a shop.\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n        - description: Include the live listing count in the response.\n          in: query\n          name: include_listing_count\n          required: false\n          schema:\n            type: boolean\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get details on a shop.\n      tags:\n        - shops\n  \"/shops/{slug}/feedback\":\n    get:\n      description: Get seller's feedback\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get seller's feedback\n      tags:\n        - shops\n  \"/shops/{slug}/feedback/buyer\":\n    get:\n      description: Get seller's feedback as a buyer\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get seller's feedback as a buyer\n      tags:\n        - shops\n  \"/shops/{slug}/feedback/seller\":\n    get:\n      description: Get seller's feedback as a seller\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get seller's feedback as a seller\n      tags:\n        - shops\n  /wants:\n    get:\n      description: A list of wanted items by the user\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - read_lists\n      summary: A list of wanted items by the user\n      tags:\n        - wants\n  \"/wants/{id}\":\n    delete:\n      description: Unmark an item wanted.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Unmark an item wanted.\n      tags:\n        - wants\n    put:\n      description: Mark an item wanted. Returns 200 on success or 422 on failure.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      security:\n        - oauth2:\n            - write_lists\n      summary: Mark an item wanted. Returns 200 on success or 422 on failure.\n      tags:\n        - wants\n  /webhooks/registrations:\n    get:\n      description: Get webhook registrations\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get webhook registrations\n      tags:\n        - webhooks\n    post:\n      description: Register a webhook\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                topic:\n                  description: \"Valid values: listings/update, listings/publish,\n                    listings/bumps-ran-out, orders/create, orders/update,\n                    payments/create, payments/update, app/uninstalled\"\n                  enum:\n                    - listings/update\n                    - listings/publish\n                    - listings/bumps-ran-out\n                    - orders/create\n                    - orders/update\n                    - payments/create\n                    - payments/update\n                    - app/uninstalled\n                  type: string\n                url:\n                  type: string\n              required:\n                - url\n                - topic\n              type: object\n        description: the content of the request\n      responses:\n        default:\n          description: Unexpected error\n      summary: Register a webhook\n      tags:\n        - webhooks\n  \"/webhooks/registrations/{id}\":\n    delete:\n      description: Remove a webhook\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Remove a webhook\n      tags:\n        - webhooks\n    get:\n      description: Get details of a webhook registration\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unexpected error\n      summary: Get details of a webhook registration\n      tags:\n        - webhooks\nservers:\n  - url: https://api.reverb.com/api\ncomponents:\n  requestBodies:\n    Body:\n      content:\n        application/json:\n          schema:\n            properties:\n              body:\n                type: string\n            required:\n              - body\n            type: object\n      description: the content of the request\n    Body2:\n      content:\n        application/json:\n          schema:\n            properties:\n              categories:\n                items:\n                  properties:\n                    uuid:\n                      description: UUID of the category for this listing.\n                      type: string\n                  type: object\n                type: array\n              condition:\n                description: Condition\n                properties:\n                  uuid:\n                    description: Condition UUID\n                    enum:\n                      - fbf35668-96a0-4baa-bcde-ab18d6b1b329\n                      - 6a9dfcad-600b-46c8-9e08-ce6e5057921e\n                      - 98777886-76d0-44c8-865e-bb40e669e934\n                      - f7a3f48c-972a-44c6-b01a-0cd27488d3f6\n                      - ae4d9114-1bd7-4ec5-a4ba-6653af5ac84d\n                      - df268ad1-c462-4ba6-b6db-e007e23922ea\n                      - ac5b9c1e-dc78-466d-b0b3-7cf712967a48\n                      - 6db7df88-293b-4017-a1c1-cdb5e599fa1a\n                      - 9225283f-60c2-4413-ad18-1f5eba7a856f\n                      - 7c3f45de-2ae0-4c81-8400-fdb6b1d74890\n                    type: string\n                required:\n                  - uuid\n                type: object\n              description:\n                description: Product description. Please keep formatting to a minimum.\n                type: string\n              exclusive_channel:\n                description: Currently for users of seller sites only, this allows you to\n                  have a listing available only to your seller site by setting\n                  this to 'seller_site'\n                enum:\n                  - seller_site\n                  - reverb\n                  - none\n                type: string\n              finish:\n                description: Finish, e.g. 'Sunburst'\n                type: string\n              has_inventory:\n                description: Set true if selling more than one\n                type: boolean\n              inventory:\n                description: Number of items available for sale. Reverb will increment and\n                  decrement automatically.\n                type: integer\n              location:\n                properties:\n                  country_code:\n                    description: \"Ex: US\"\n                    type: string\n                  locality:\n                    description: \"Ex: Chicago\"\n                    type: string\n                  region:\n                    description: \"Ex: IL\"\n                    type: string\n                type: object\n              make:\n                description: \"ex: Fender, Gibson\"\n                type: string\n              model:\n                description: \"ex: Stratocaster, SG\"\n                type: string\n              multi_item:\n                description: Specifies if the listing is a bundle of multiple individual\n                  items\n                type: boolean\n              offers_enabled:\n                description: \"Whether the listing accepts negotiated offers (default: true)\"\n                type: boolean\n              origin_country_code:\n                description: \"Country of origin/manufacture, ISO code (e.g: US)\"\n                type: string\n              photos:\n                description: \"An array of image URLs. Ex: ['http://my.site.com/image.jpg']\"\n                items:\n                  type: string\n                type: array\n              preorder_info:\n                description: Create or update a preorder listing. Requires opt-in. Please\n                  contact sales@reverb.com if you would like to activate this\n                  feature.\n                properties:\n                  lead_time:\n                    description: The amount of time before the item will be ready to ship.\n                      When lead_time is submitted it is converted into days and\n                      added to the current date to produce `estimated_ship_date`\n                      in the response body of the request.\n                    type: integer\n                  lead_time_unit:\n                    description: The unit of time which lead_time is measured in\n                    enum:\n                      - days\n                      - weeks\n                    type: string\n                  ship_date:\n                    description: \"The date the item will be available to ship. In the\n                      response body of the request, `estimated_ship_date`, will\n                      be the same as ship_date. Date must be ISO8601 format -\n                      e.g: 2015-04-09T10:52:23-00:00.\"\n                    type: string\n                required:\n                  - lead_time_unit\n                type: object\n              price:\n                properties:\n                  amount:\n                    description: The amount of money being expressed, as a POSIX-compliant\n                      decimal number\n                    type: string\n                  currency:\n                    description: The currency the money will be expressed in\n                    enum:\n                      - USD\n                      - CAD\n                      - EUR\n                      - GBP\n                      - AUD\n                      - JPY\n                      - NZD\n                      - MXN\n                    type: string\n                required:\n                  - amount\n                  - currency\n                type: object\n              prop_65_warning:\n                description: If your listing contains chemicals that are required to be\n                  reported under California Prop 65, please provide your warning\n                  statement. We will add the required 'Warning' label and link\n                  to California's information page, so you only need to provide\n                  the body of the warning. For more information, see\n                  https://www.p65warnings.ca.gov/new-proposition-65-warnings\n                type: string\n              publish:\n                description: Publish your listing if draft\n                type: boolean\n              seller:\n                properties:\n                  paypal_email:\n                    type: string\n                type: object\n              seller_cost:\n                description: Cost of goods in your currency as a POSIX-compliant decimal\n                  number (internal use only, not shown to buyers)\n                type: string\n              shipping:\n                properties:\n                  local:\n                    description: True if you offer local pickup\n                    type: boolean\n                  rates:\n                    description: List of shipping rates. Set to null to clear rates.\n                    items:\n                      properties:\n                        rate:\n                          properties:\n                            amount:\n                              description: The amount of money being expressed, as a\n                                POSIX-compliant decimal number\n                              type: string\n                            currency:\n                              description: The currency the money will be expressed in\n                              enum:\n                                - USD\n                                - CAD\n                                - EUR\n                                - GBP\n                                - AUD\n                                - JPY\n                                - NZD\n                                - MXN\n                              type: string\n                          required:\n                            - amount\n                            - currency\n                          type: object\n                        region_code:\n                          description: Country code or subregion/superregion code. Full\n                            list of codes at /api/shipping/regions\n                          type: string\n                      type: object\n                    type: array\n                type: object\n              shipping_profile_id:\n                description: id of a shop's shipping profile\n                type: string\n              shipping_profile_name:\n                description: DEPRECATED, please use shipping_profile_id. Name of a shipping\n                  profile\n                type: string\n              sku:\n                description: Unique identifier for product\n                type: string\n              sold_as_is:\n                description: This item is sold As-Is and cannot be returned\n                type: boolean\n              storage_location:\n                description: Internal note used by sellers to back reference their catalog\n                  system when entering a listing\n                type: string\n              tax_exempt:\n                description: Listing is exempt from taxes / VAT\n                type: boolean\n              title:\n                description: Title of your listing\n                type: string\n              upc:\n                description: Valid UPC code\n                type: string\n              upc_does_not_apply:\n                description: True if a brand new product has no UPC code, ie for a handmade\n                  or custom item\n                type: boolean\n              videos:\n                description: \"List of YouTube video urls. Note: ONLY ONE ALLOWED\"\n                items:\n                  properties:\n                    link:\n                      description: Valid YouTube url\n                      type: string\n                  required:\n                    - link\n                  type: object\n                type: array\n              year:\n                description: \"Supports many formats. Ex: 1979, mid-70s, late 90s\"\n                type: string\n            type: object\n      description: the content of the request\n    Body3:\n      content:\n        application/json:\n          schema:\n            properties:\n              country_code:\n                type: string\n              layaway_terms_slug:\n                type: string\n              message:\n                description: Message to include with counter offer\n                type: string\n              offer_items:\n                items:\n                  properties:\n                    listing_id:\n                      type: string\n                    price:\n                      type: string\n                    shipping_price:\n                      type: string\n                  required:\n                    - price\n                    - shipping_price\n                    - listing_id\n                  type: object\n                type: array\n              price:\n                properties:\n                  amount:\n                    description: The amount of money being expressed, as a POSIX-compliant\n                      decimal number\n                    type: string\n                  currency:\n                    description: The currency the money will be expressed in\n                    enum:\n                      - USD\n                      - CAD\n                      - EUR\n                      - GBP\n                      - AUD\n                      - JPY\n                      - NZD\n                      - MXN\n                    type: string\n                required:\n                  - amount\n                  - currency\n                type: object\n              quantity:\n                type: string\n              recipient_id:\n                description: ID of the recipient of the offer. Required if you are the\n                  seller pushing an offer to a buyer.\n                type: string\n              region_code:\n                type: string\n              shipping_price:\n                description: Shipping price (sellers only)\n                properties:\n                  amount:\n                    description: The amount of money being expressed, as a POSIX-compliant\n                      decimal number\n                    type: string\n                  currency:\n                    description: The currency the money will be expressed in\n                    enum:\n                      - USD\n                      - CAD\n                      - EUR\n                      - GBP\n                      - AUD\n                      - JPY\n                      - NZD\n                      - MXN\n                    type: string\n                required:\n                  - amount\n                  - currency\n                type: object\n            type: object\n      description: the content of the request\n    Body4:\n      content:\n        application/json:\n          schema:\n            properties:\n              message:\n                description: Message to include with counter offer\n                type: string\n              price:\n                description: Offer price\n                type: string\n              shipping_price:\n                description: Shipping price (sellers only)\n                type: string\n            required:\n              - price\n            type: object\n      description: the content of the request\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://reverb.com/oauth/token\n          scopes:\n            public: \"\"\n            read_feedback: \"\"\n            read_listings: \"\"\n            read_lists: \"\"\n            read_messages: \"\"\n            read_offers: \"\"\n            read_orders: \"\"\n            read_payouts: \"\"\n            read_profile: \"\"\n            write_feedback: \"\"\n            write_listings: \"\"\n            write_listings_for_others: \"\"\n            write_lists: \"\"\n            write_messages: \"\"\n            write_offers: \"\"\n            write_orders: \"\"\n            write_profile: \"\"\n            write_reviews: \"\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /shop: put: operation \"\": requestBody: content: \"application/json\": parse schema: parse schema: property \"legal_country_code\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}