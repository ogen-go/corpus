{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "stream_analytics.yaml",
			"size": 0,
			"path": "providers/src/azure/v0.2.0/services/stream_analytics.yaml",
			"byteSize": 220568,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://management.azure.com/\ninfo:\n  title: Stream Analytics (Microsoft.StreamAnalytics)\n  description: Stream Analytics\n  contact:\n    name: StackQL Studios\n    url: https://stackql.io/\n    email: info@stackql.io\n  version: 2022-08-29-stackql-generated\nsecurity:\n  - azure_auth:\n      - user_impersonation\ncomponents:\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  parameters:\n    OutputNameParameter:\n      name: outputName\n      in: path\n      description: The name of the output.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    FunctionNameParameter:\n      name: functionName\n      in: path\n      description: The name of the function.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    PrivateEndpointNameParameter:\n      name: privateEndpointName\n      in: path\n      description: The name of the private endpoint.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    IfMatchHeader:\n      name: If-Match\n      in: header\n      description: The ETag of the resource. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    IfNoneMatchHeader:\n      name: If-None-Match\n      in: header\n      description: Set to '*' to allow a new resource to be created, but to prevent updating an existing record set. Other values will result in a 412 Pre-condition Failed response.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    StreamingJobNameParameter:\n      name: jobName\n      in: path\n      description: The name of the streaming job.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SubscriptionIdParameter:\n      name: subscriptionId\n      in: path\n      description: The ID of the target subscription.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    ApiVersionParameter:\n      name: api-version\n      in: query\n      description: The API version to use for this operation.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    ResourceGroupNameParameter:\n      name: resourceGroupName\n      in: path\n      description: The name of the resource group. The name is case insensitive.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        pattern: ^[-\\w\\._\\(\\)]+$\n        minLength: 1\n        maxLength: 90\n        type: string\n    LocationParameter:\n      name: location\n      in: path\n      description: 'The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/'\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    ClusterNameParameter:\n      name: clusterName\n      in: path\n      description: The name of the cluster.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    TransformationNameParameter:\n      name: transformationName\n      in: path\n      description: The name of the transformation.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    InputNameParameter:\n      name: inputName\n      in: path\n      description: The name of the input.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n  schemas:\n    SubscriptionQuotasListResult:\n      type: object\n      description: Result of the GetQuotas operation. It contains a list of quotas for the subscription in a particular region.\n      properties:\n        value:\n          description: List of quotas for the subscription in a particular region.\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/SubscriptionQuota'\n    SubscriptionQuota:\n      description: Describes the current quota for the subscription.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Resource Id\n        name:\n          type: string\n          description: Resource name\n        type:\n          readOnly: true\n          type: string\n          description: Resource type\n        properties:\n          description: Describes the properties of the quota.\n          readOnly: true\n          properties:\n            maxCount:\n              description: The max permitted usage of this resource.\n              type: integer\n              format: int32\n              readOnly: true\n            currentCount:\n              description: The current usage of this resource.\n              type: integer\n              format: int32\n              readOnly: true\n          x-ms-client-flatten: true\n      type: object\n    SubResource:\n      type: object\n      description: The base sub-resource model definition.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Resource Id\n        name:\n          type: string\n          description: Resource name\n        type:\n          readOnly: true\n          type: string\n          description: Resource type\n      x-ms-azure-resource: true\n    Output:\n      description: An output object, containing all information associated with the named output. All outputs are contained under a streaming job.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Resource Id\n        name:\n          type: string\n          description: Resource name\n        type:\n          readOnly: true\n          type: string\n          description: Resource type\n        datasource:\n          $ref: '#/components/schemas/OutputDataSource'\n          description: Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.\n        timeWindow:\n          type: string\n          description: The time frame for filtering Stream Analytics job outputs.\n        sizeWindow:\n          type: number\n          description: The size window to constrain a Stream Analytics output to.\n        serialization:\n          $ref: '#/components/schemas/Serialization'\n          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.\n        diagnostics:\n          readOnly: true\n          $ref: '#/components/schemas/Diagnostics'\n          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n      type: object\n    OutputProperties:\n      type: object\n      description: The properties that are associated with an output.\n      properties:\n        datasource:\n          $ref: '#/components/schemas/OutputDataSource'\n          description: Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.\n        timeWindow:\n          type: string\n          description: The time frame for filtering Stream Analytics job outputs.\n        sizeWindow:\n          type: number\n          description: The size window to constrain a Stream Analytics output to.\n        serialization:\n          $ref: '#/components/schemas/Serialization'\n          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.\n        diagnostics:\n          readOnly: true\n          $ref: '#/components/schemas/Diagnostics'\n          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n    OutputDataSource:\n      type: object\n      description: Describes the data source that output will be written to.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n      required:\n        - type\n    BlobOutputDataSource:\n      description: Describes a blob output data source.\n      x-ms-discriminator-value: Microsoft.Storage/Blob\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        blobPathPrefix:\n          type: string\n          description: Blob path prefix.\n      type: object\n    BlobOutputDataSourceProperties:\n      description: The properties that are associated with a blob output.\n      properties:\n        storageAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/StorageAccount'\n          x-ms-identifiers:\n            - accountName\n          description: A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.\n        container:\n          type: string\n          description: The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.\n        pathPattern:\n          type: string\n          description: The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.\n        dateFormat:\n          type: string\n          description: The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.\n        timeFormat:\n          type: string\n          description: The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n        blobPathPrefix:\n          type: string\n          description: Blob path prefix.\n      type: object\n    AzureTableOutputDataSource:\n      description: Describes an Azure Table output data source.\n      x-ms-discriminator-value: Microsoft.Storage/Table\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        accountName:\n          type: string\n          description: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.\n        accountKey:\n          type: string\n          description: The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.\n          x-ms-secret: true\n        table:\n          type: string\n          description: The name of the Azure Table. Required on PUT (CreateOrReplace) requests.\n        partitionKey:\n          type: string\n          description: This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.\n        rowKey:\n          type: string\n          description: This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.\n        columnsToRemove:\n          type: array\n          items:\n            type: string\n          description: If specified, each item in the array is the name of a column to remove (if present) from output event entities.\n        batchSize:\n          type: integer\n          format: int32\n          description: The number of rows to write to the Azure Table at a time.\n      type: object\n    AzureTableOutputDataSourceProperties:\n      type: object\n      description: The properties that are associated with an Azure Table output.\n      properties:\n        accountName:\n          type: string\n          description: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.\n        accountKey:\n          type: string\n          description: The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.\n          x-ms-secret: true\n        table:\n          type: string\n          description: The name of the Azure Table. Required on PUT (CreateOrReplace) requests.\n        partitionKey:\n          type: string\n          description: This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.\n        rowKey:\n          type: string\n          description: This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.\n        columnsToRemove:\n          type: array\n          items:\n            type: string\n          description: If specified, each item in the array is the name of a column to remove (if present) from output event entities.\n        batchSize:\n          type: integer\n          format: int32\n          description: The number of rows to write to the Azure Table at a time.\n    EventHubOutputDataSource:\n      description: Describes an Event Hub output data source.\n      x-ms-discriminator-value: Microsoft.ServiceBus/EventHub\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        partitionKey:\n          type: string\n          description: The key/column that is used to determine to which partition to send event data.\n        propertyColumns:\n          type: array\n          description: The properties associated with this Event Hub output.\n          items:\n            type: string\n      type: object\n    EventHubV2OutputDataSource:\n      description: Describes an Event Hub output data source.\n      x-ms-discriminator-value: Microsoft.EventHub/EventHub\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        partitionKey:\n          type: string\n          description: The key/column that is used to determine to which partition to send event data.\n        propertyColumns:\n          type: array\n          description: The properties associated with this Event Hub output.\n          items:\n            type: string\n      type: object\n    EventHubOutputDataSourceProperties:\n      description: The properties that are associated with an Event Hub output.\n      properties:\n        eventHubName:\n          type: string\n          description: The name of the Event Hub. Required on PUT (CreateOrReplace) requests.\n        partitionKey:\n          type: string\n          description: The key/column that is used to determine to which partition to send event data.\n        propertyColumns:\n          type: array\n          description: The properties associated with this Event Hub output.\n          items:\n            type: string\n      type: object\n    AzureSqlDatabaseOutputDataSource:\n      description: Describes an Azure SQL database output data source.\n      x-ms-discriminator-value: Microsoft.Sql/Server/Database\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n      type: object\n    AzureSqlDatabaseOutputDataSourceProperties:\n      description: The properties that are associated with an Azure SQL database output.\n      properties:\n        server:\n          type: string\n          description: The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        database:\n          type: string\n          description: The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        user:\n          type: string\n          description: The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        password:\n          type: string\n          description: The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        table:\n          type: string\n          description: The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        maxBatchCount:\n          type: number\n          description: Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.\n        maxWriterCount:\n          type: number\n          description: Max Writer count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n      type: object\n    AzureSynapseOutputDataSource:\n      description: Describes an Azure Synapse output data source.\n      x-ms-discriminator-value: Microsoft.Sql/Server/DataWarehouse\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n      type: object\n    AzureSynapseOutputDataSourceProperties:\n      description: The properties that are associated with an Azure Synapse output.\n      properties:\n        server:\n          type: string\n          description: The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        database:\n          type: string\n          description: The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        table:\n          type: string\n          description: The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        user:\n          type: string\n          description: The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        password:\n          type: string\n          description: The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n          x-ms-secret: true\n      type: object\n    AzureSynapseDataSourceProperties:\n      type: object\n      description: The properties that are associated with an Azure SQL database data source.\n      properties:\n        server:\n          type: string\n          description: The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        database:\n          type: string\n          description: The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        table:\n          type: string\n          description: The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        user:\n          type: string\n          description: The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        password:\n          type: string\n          description: The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n          x-ms-secret: true\n    DocumentDbOutputDataSource:\n      description: Describes a DocumentDB output data source.\n      x-ms-discriminator-value: Microsoft.Storage/DocumentDB\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        accountId:\n          type: string\n          description: The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.\n        accountKey:\n          type: string\n          description: The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.\n        database:\n          type: string\n          description: The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.\n        collectionNamePattern:\n          type: string\n          description: The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.\n        partitionKey:\n          type: string\n          description: The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.\n        documentId:\n          type: string\n          description: The name of the field in output events used to specify the primary key which insert or update operations are based on.\n      type: object\n    DocumentDbOutputDataSourceProperties:\n      type: object\n      description: The properties that are associated with a DocumentDB output.\n      properties:\n        accountId:\n          type: string\n          description: The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.\n        accountKey:\n          type: string\n          description: The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.\n        database:\n          type: string\n          description: The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.\n        collectionNamePattern:\n          type: string\n          description: The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.\n        partitionKey:\n          type: string\n          description: The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.\n        documentId:\n          type: string\n          description: The name of the field in output events used to specify the primary key which insert or update operations are based on.\n    AzureFunctionOutputDataSource:\n      description: Defines the metadata of AzureFunctionOutputDataSource\n      x-ms-discriminator-value: Microsoft.AzureFunction\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        functionAppName:\n          description: The name of your Azure Functions app.\n          type: string\n        functionName:\n          description: The name of the function in your Azure Functions app.\n          type: string\n        apiKey:\n          description: If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.\n          type: string\n        maxBatchSize:\n          description: A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).\n          type: number\n        maxBatchCount:\n          description: A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.\n          type: number\n      type: object\n    AzureFunctionOutputDataSourceProperties:\n      description: The properties that are associated with an Azure Function output.\n      type: object\n      properties:\n        functionAppName:\n          description: The name of your Azure Functions app.\n          type: string\n        functionName:\n          description: The name of the function in your Azure Functions app.\n          type: string\n        apiKey:\n          description: If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.\n          type: string\n        maxBatchSize:\n          description: A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).\n          type: number\n        maxBatchCount:\n          description: A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.\n          type: number\n    ServiceBusQueueOutputDataSource:\n      description: Describes a Service Bus Queue output data source.\n      x-ms-discriminator-value: Microsoft.ServiceBus/Queue\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        queueName:\n          type: string\n          description: The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.\n        propertyColumns:\n          type: array\n          items:\n            type: string\n          description: A string array of the names of output columns to be attached to Service Bus messages as custom properties.\n        systemPropertyColumns:\n          type: object\n          description: 'The system properties associated with the Service Bus Queue. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc.'\n      type: object\n    ServiceBusQueueOutputDataSourceProperties:\n      description: The properties that are associated with a Service Bus Queue output.\n      properties:\n        serviceBusNamespace:\n          type: string\n          description: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyName:\n          type: string\n          description: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyKey:\n          type: string\n          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n        queueName:\n          type: string\n          description: The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.\n        propertyColumns:\n          type: array\n          items:\n            type: string\n          description: A string array of the names of output columns to be attached to Service Bus messages as custom properties.\n        systemPropertyColumns:\n          type: object\n          description: 'The system properties associated with the Service Bus Queue. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc.'\n      type: object\n    ServiceBusTopicOutputDataSource:\n      description: Describes a Service Bus Topic output data source.\n      x-ms-discriminator-value: Microsoft.ServiceBus/Topic\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        topicName:\n          type: string\n          description: The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.\n        propertyColumns:\n          type: array\n          items:\n            type: string\n          description: A string array of the names of output columns to be attached to Service Bus messages as custom properties.\n        systemPropertyColumns:\n          type: object\n          description: 'The system properties associated with the Service Bus Topic Output. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc.'\n          additionalProperties:\n            type: string\n      type: object\n    ServiceBusTopicOutputDataSourceProperties:\n      description: The properties that are associated with a Service Bus Topic output.\n      properties:\n        serviceBusNamespace:\n          type: string\n          description: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyName:\n          type: string\n          description: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyKey:\n          type: string\n          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n        topicName:\n          type: string\n          description: The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.\n        propertyColumns:\n          type: array\n          items:\n            type: string\n          description: A string array of the names of output columns to be attached to Service Bus messages as custom properties.\n        systemPropertyColumns:\n          type: object\n          description: 'The system properties associated with the Service Bus Topic Output. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc.'\n          additionalProperties:\n            type: string\n      type: object\n    PowerBIOutputDataSource:\n      description: Describes a Power BI output data source.\n      x-ms-discriminator-value: PowerBI\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        dataset:\n          type: string\n          description: The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.\n        table:\n          type: string\n          description: The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.\n        groupId:\n          type: string\n          description: The ID of the Power BI group.\n        groupName:\n          type: string\n          description: The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n      type: object\n    PowerBIOutputDataSourceProperties:\n      description: The properties that are associated with a Power BI output.\n      properties:\n        refreshToken:\n          type: string\n          description: A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.\n        tokenUserPrincipalName:\n          type: string\n          description: The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.\n        tokenUserDisplayName:\n          type: string\n          description: The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.\n        dataset:\n          type: string\n          description: The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.\n        table:\n          type: string\n          description: The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.\n        groupId:\n          type: string\n          description: The ID of the Power BI group.\n        groupName:\n          type: string\n          description: The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n      type: object\n    AzureDataLakeStoreOutputDataSource:\n      description: Describes an Azure Data Lake Store output data source.\n      x-ms-discriminator-value: Microsoft.DataLake/Accounts\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n        accountName:\n          type: string\n          description: The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.\n        tenantId:\n          type: string\n          description: The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.\n        filePathPrefix:\n          type: string\n          description: The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.\n        dateFormat:\n          type: string\n          description: The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.\n        timeFormat:\n          type: string\n          description: The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n      type: object\n    AzureDataLakeStoreOutputDataSourceProperties:\n      description: The properties that are associated with an Azure Data Lake Store.\n      properties:\n        refreshToken:\n          type: string\n          description: A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.\n        tokenUserPrincipalName:\n          type: string\n          description: The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.\n        tokenUserDisplayName:\n          type: string\n          description: The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.\n        accountName:\n          type: string\n          description: The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.\n        tenantId:\n          type: string\n          description: The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.\n        filePathPrefix:\n          type: string\n          description: The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.\n        dateFormat:\n          type: string\n          description: The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.\n        timeFormat:\n          type: string\n          description: The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n      type: object\n    GatewayMessageBusOutputDataSource:\n      description: Describes a Gateway Message Bus output data source.\n      x-ms-discriminator-value: GatewayMessageBus\n      properties:\n        type:\n          type: string\n          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.\n      type: object\n    GatewayMessageBusOutputDataSourceProperties:\n      description: The properties that are associated with a Gateway Message Bus.\n      properties:\n        topic:\n          type: string\n          description: The name of the Service Bus topic.\n      type: object\n    OutputListResult:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Output'\n          readOnly: true\n          description: A list of outputs under a streaming job. Populated by a 'List' operation.\n        nextLink:\n          type: string\n          readOnly: true\n          description: The link (url) to the next page of results.\n      description: Object containing a list of outputs under a streaming job.\n    AzureSqlDatabaseDataSourceProperties:\n      type: object\n      description: The properties that are associated with an Azure SQL database data source.\n      properties:\n        server:\n          type: string\n          description: The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        database:\n          type: string\n          description: The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        user:\n          type: string\n          description: The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        password:\n          type: string\n          description: The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        table:\n          type: string\n          description: The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.\n        maxBatchCount:\n          type: number\n          description: Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.\n        maxWriterCount:\n          type: number\n          description: Max Writer count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n    OAuthBasedDataSourceProperties:\n      type: object\n      description: The properties that are associated with data sources that use OAuth as their authentication model.\n      properties:\n        refreshToken:\n          type: string\n          description: A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.\n        tokenUserPrincipalName:\n          type: string\n          description: The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.\n        tokenUserDisplayName:\n          type: string\n          description: The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.\n    OperationListResult:\n      type: object\n      description: Result of the request to list Stream Analytics operations. It contains a list of operations and a URL link to get the next set of results.\n      properties:\n        value:\n          description: List of Stream Analytics operations supported by the Microsoft.StreamAnalytics resource provider.\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/Operation'\n          x-ms-identifiers:\n            - name\n        nextLink:\n          description: URL to get the next set of operation list results if there are any.\n          type: string\n          readOnly: true\n    Operation:\n      description: A Stream Analytics REST API operation\n      type: object\n      properties:\n        name:\n          description: The name of the operation being performed on this particular object.\n          type: string\n          readOnly: true\n        isDataAction:\n          description: Indicates whether the operation is a data action\n          type: boolean\n        display:\n          type: object\n          description: Contains the localized display information for this particular operation / action.\n          readOnly: true\n          properties:\n            provider:\n              description: The localized friendly form of the resource provider name.\n              type: string\n              readOnly: true\n            resource:\n              description: The localized friendly form of the resource type related to this action/operation.\n              type: string\n              readOnly: true\n            operation:\n              description: The localized friendly name for the operation.\n              type: string\n              readOnly: true\n            description:\n              description: The localized friendly description for the operation.\n              type: string\n              readOnly: true\n    StreamingJob:\n      description: A streaming job object, containing all information associated with the named streaming job.\n      properties:\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n        sku:\n          description: Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.\n          $ref: '#/components/schemas/Sku'\n        jobId:\n          readOnly: true\n          type: string\n          description: A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.\n        provisioningState:\n          readOnly: true\n          type: string\n          description: Describes the provisioning status of the streaming job.\n        jobState:\n          readOnly: true\n          type: string\n          description: Describes the state of the streaming job.\n        jobType:\n          type: string\n          description: Describes the type of the job. Valid modes are `Cloud` and 'Edge'.\n          enum:\n            - Cloud\n            - Edge\n          x-ms-enum:\n            name: JobType\n            modelAsString: true\n        outputStartMode:\n          $ref: '#/components/schemas/OutputStartMode'\n          description: This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.\n        outputStartTime:\n          type: string\n          format: date-time\n          description: Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.\n        lastOutputEventTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.\n        eventsOutOfOrderPolicy:\n          $ref: '#/components/schemas/EventsOutOfOrderPolicy'\n          description: Indicates the policy to apply to events that arrive out of order in the input event stream.\n        outputErrorPolicy:\n          $ref: '#/components/schemas/OutputErrorPolicy'\n          description: Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).\n        eventsOutOfOrderMaxDelayInSeconds:\n          type: integer\n          format: int32\n          description: The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.\n        eventsLateArrivalMaxDelayInSeconds:\n          type: integer\n          format: int32\n          description: The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.\n        dataLocale:\n          type: string\n          description: The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.\n        compatibilityLevel:\n          $ref: '#/components/schemas/CompatibilityLevel'\n          description: Controls certain runtime behaviors of the streaming job.\n        createdDate:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Input'\n          description: A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.\n        transformation:\n          $ref: '#/components/schemas/Transformation'\n          description: Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.\n        outputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Output'\n          description: A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.\n        functions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Function'\n          description: A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        jobStorageAccount:\n          description: The properties that are associated with an Azure Storage account with MSI\n          $ref: '#/components/schemas/JobStorageAccount'\n        contentStoragePolicy:\n          readOnly: false\n          type: string\n          description: Valid values are JobStorageAccount and SystemAccount. If set to JobStorageAccount, this requires the user to also specify jobStorageAccount property. .\n          enum:\n            - SystemAccount\n            - JobStorageAccount\n          x-ms-enum:\n            name: ContentStoragePolicy\n            modelAsString: true\n        cluster:\n          $ref: '#/components/schemas/ClusterInfo'\n          description: The cluster which streaming jobs will run on.\n        identity:\n          $ref: '#/components/schemas/Identity'\n          description: Describes the system-assigned managed identity assigned to this job that can be used to authenticate with inputs and outputs.\n      type: object\n    StreamingJobProperties:\n      type: object\n      description: The properties that are associated with a streaming job.\n      properties:\n        sku:\n          description: Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.\n          $ref: '#/components/schemas/Sku'\n        jobId:\n          readOnly: true\n          type: string\n          description: A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.\n        provisioningState:\n          readOnly: true\n          type: string\n          description: Describes the provisioning status of the streaming job.\n        jobState:\n          readOnly: true\n          type: string\n          description: Describes the state of the streaming job.\n        jobType:\n          type: string\n          description: Describes the type of the job. Valid modes are `Cloud` and 'Edge'.\n          enum:\n            - Cloud\n            - Edge\n          x-ms-enum:\n            name: JobType\n            modelAsString: true\n        outputStartMode:\n          $ref: '#/components/schemas/OutputStartMode'\n          description: This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.\n        outputStartTime:\n          type: string\n          format: date-time\n          description: Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.\n        lastOutputEventTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.\n        eventsOutOfOrderPolicy:\n          $ref: '#/components/schemas/EventsOutOfOrderPolicy'\n          description: Indicates the policy to apply to events that arrive out of order in the input event stream.\n        outputErrorPolicy:\n          $ref: '#/components/schemas/OutputErrorPolicy'\n          description: Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).\n        eventsOutOfOrderMaxDelayInSeconds:\n          type: integer\n          format: int32\n          description: The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.\n        eventsLateArrivalMaxDelayInSeconds:\n          type: integer\n          format: int32\n          description: The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.\n        dataLocale:\n          type: string\n          description: The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.\n        compatibilityLevel:\n          $ref: '#/components/schemas/CompatibilityLevel'\n          description: Controls certain runtime behaviors of the streaming job.\n        createdDate:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Input'\n          description: A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.\n        transformation:\n          $ref: '#/components/schemas/Transformation'\n          description: Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.\n        outputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/Output'\n          description: A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.\n        functions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Function'\n          description: A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        jobStorageAccount:\n          description: The properties that are associated with an Azure Storage account with MSI\n          $ref: '#/components/schemas/JobStorageAccount'\n        contentStoragePolicy:\n          readOnly: false\n          type: string\n          description: Valid values are JobStorageAccount and SystemAccount. If set to JobStorageAccount, this requires the user to also specify jobStorageAccount property. .\n          enum:\n            - SystemAccount\n            - JobStorageAccount\n          x-ms-enum:\n            name: ContentStoragePolicy\n            modelAsString: true\n        cluster:\n          $ref: '#/components/schemas/ClusterInfo'\n          description: The cluster which streaming jobs will run on.\n    ClusterInfo:\n      type: object\n      description: The properties associated with a Stream Analytics cluster.\n      properties:\n        id:\n          description: The resource id of cluster.\n          type: string\n    Sku:\n      type: object\n      description: The properties that are associated with a SKU.\n      properties:\n        name:\n          type: string\n          description: The name of the SKU. Required on PUT (CreateOrReplace) requests.\n          enum:\n            - Standard\n          x-ms-enum:\n            name: SkuName\n            modelAsString: true\n    StreamingJobListResult:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/StreamingJob'\n          readOnly: true\n          description: A list of streaming jobs. Populated by a 'List' operation.\n        nextLink:\n          type: string\n          readOnly: true\n          description: The link (url) to the next page of results.\n      description: Object containing a list of streaming jobs.\n    StartStreamingJobParameters:\n      type: object\n      description: Parameters supplied to the Start Streaming Job operation.\n      properties:\n        outputStartMode:\n          $ref: '#/components/schemas/OutputStartMode'\n          description: Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.\n        outputStartTime:\n          type: string\n          format: date-time\n          description: Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.\n    OutputStartMode:\n      type: string\n      description: Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.\n      enum:\n        - JobStartTime\n        - CustomTime\n        - LastOutputEventTime\n      x-ms-enum:\n        name: OutputStartMode\n        modelAsString: true\n    ScaleStreamingJobParameters:\n      type: object\n      description: Parameters supplied to the Scale Streaming Job operation.\n      properties:\n        streamingUnits:\n          type: integer\n          format: int32\n          description: Specifies the number of streaming units that the streaming job will scale to.\n    EventsOutOfOrderPolicy:\n      type: string\n      description: Indicates the policy to apply to events that arrive out of order in the input event stream.\n      enum:\n        - Adjust\n        - Drop\n      x-ms-enum:\n        name: EventsOutOfOrderPolicy\n        modelAsString: true\n    OutputErrorPolicy:\n      type: string\n      description: Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).\n      enum:\n        - Stop\n        - Drop\n      x-ms-enum:\n        name: OutputErrorPolicy\n        modelAsString: true\n    CompatibilityLevel:\n      type: string\n      description: Controls certain runtime behaviors of the streaming job.\n      enum:\n        - '1.0'\n        - '1.2'\n      x-ms-enum:\n        name: CompatibilityLevel\n        modelAsString: true\n    JobStorageAccount:\n      description: The properties that are associated with an Azure Storage account with MSI\n      properties:\n        accountName:\n          type: string\n          description: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.\n        accountKey:\n          type: string\n          description: The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n      type: object\n    Identity:\n      type: object\n      description: Describes how identity is verified\n      properties:\n        tenantId:\n          type: string\n          description: The identity tenantId\n          readOnly: true\n        principalId:\n          type: string\n          description: The identity principal ID\n          readOnly: true\n        type:\n          type: string\n          description: The identity type\n    Function:\n      description: A function object, containing all information associated with the named function. All functions are contained under a streaming job.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Resource Id\n        name:\n          type: string\n          description: Resource name\n        type:\n          readOnly: true\n          type: string\n          description: Resource type\n        properties:\n          $ref: '#/components/schemas/FunctionProperties'\n          description: The properties that are associated with a function.\n      type: object\n    FunctionProperties:\n      description: The properties that are associated with a function.\n      discriminator:\n        propertyName: type\n      required:\n        - type\n      properties:\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/FunctionInput'\n        output:\n          $ref: '#/components/schemas/FunctionOutput'\n        binding:\n          $ref: '#/components/schemas/FunctionBinding'\n        type:\n          type: string\n          description: Indicates the type of function.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n      type: object\n    FunctionConfiguration:\n      type: object\n      properties:\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/FunctionInput'\n        output:\n          $ref: '#/components/schemas/FunctionOutput'\n        binding:\n          $ref: '#/components/schemas/FunctionBinding'\n    ScalarFunctionProperties:\n      description: The properties that are associated with a scalar function.\n      x-ms-discriminator-value: Scalar\n      properties:\n        type:\n          type: string\n          description: Indicates the type of function.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n      type: object\n    FunctionInput:\n      type: object\n      description: Describes one input parameter of a function.\n      properties:\n        dataType:\n          type: string\n          description: The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx\n        isConfigurationParameter:\n          type: boolean\n          description: A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false.\n    FunctionOutput:\n      type: object\n      description: Describes the output of a function.\n      properties:\n        dataType:\n          type: string\n          description: The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx\n    FunctionBinding:\n      type: object\n      description: The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: Indicates the function binding type.\n      required:\n        - type\n    AzureMachineLearningWebServiceFunctionBinding:\n      description: The binding to an Azure Machine Learning web service.\n      x-ms-discriminator-value: Microsoft.MachineLearning/WebService\n      properties:\n        type:\n          type: string\n          description: Indicates the function binding type.\n        endpoint:\n          type: string\n          description: 'The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs'\n        apiKey:\n          type: string\n          description: The API key used to authenticate with Request-Response endpoint.\n        inputs:\n          $ref: '#/components/schemas/AzureMachineLearningWebServiceInputs'\n          description: The inputs for the Azure Machine Learning web service endpoint.\n        outputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/AzureMachineLearningWebServiceOutputColumn'\n          x-ms-identifiers:\n            - name\n          description: A list of outputs from the Azure Machine Learning web service endpoint execution.\n        batchSize:\n          type: integer\n          format: int32\n          description: Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.\n      type: object\n    AzureMachineLearningWebServiceFunctionBindingProperties:\n      type: object\n      description: The binding properties associated with an Azure Machine learning web service.\n      properties:\n        endpoint:\n          type: string\n          description: 'The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs'\n        apiKey:\n          type: string\n          description: The API key used to authenticate with Request-Response endpoint.\n        inputs:\n          $ref: '#/components/schemas/AzureMachineLearningWebServiceInputs'\n          description: The inputs for the Azure Machine Learning web service endpoint.\n        outputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/AzureMachineLearningWebServiceOutputColumn'\n          x-ms-identifiers:\n            - name\n          description: A list of outputs from the Azure Machine Learning web service endpoint execution.\n        batchSize:\n          type: integer\n          format: int32\n          description: Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.\n    AzureMachineLearningWebServiceInputs:\n      type: object\n      description: The inputs for the Azure Machine Learning web service endpoint.\n      properties:\n        name:\n          type: string\n          description: The name of the input. This is the name provided while authoring the endpoint.\n        columnNames:\n          type: array\n          items:\n            $ref: '#/components/schemas/AzureMachineLearningWebServiceInputColumn'\n          x-ms-identifiers:\n            - name\n          description: A list of input columns for the Azure Machine Learning web service endpoint.\n    AzureMachineLearningWebServiceInputColumn:\n      type: object\n      description: Describes an input column for the Azure Machine Learning web service endpoint.\n      properties:\n        name:\n          type: string\n          description: The name of the input column.\n        dataType:\n          type: string\n          description: The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .\n        mapTo:\n          type: integer\n          format: int32\n          description: The zero based index of the function parameter this input maps to.\n    AzureMachineLearningWebServiceOutputColumn:\n      type: object\n      description: Describes an output column for the Azure Machine Learning web service endpoint.\n      properties:\n        name:\n          type: string\n          description: The name of the output column.\n        dataType:\n          type: string\n          description: The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .\n    JavaScriptFunctionBinding:\n      description: The binding to a JavaScript function.\n      x-ms-discriminator-value: Microsoft.StreamAnalytics/JavascriptUdf\n      properties:\n        type:\n          type: string\n          description: Indicates the function binding type.\n        script:\n          type: string\n          description: 'The JavaScript code containing a single function definition. For example: ''function (x, y) { return x + y; }'''\n      type: object\n    JavaScriptFunctionBindingProperties:\n      type: object\n      description: The binding properties associated with a JavaScript function.\n      properties:\n        script:\n          type: string\n          description: 'The JavaScript code containing a single function definition. For example: ''function (x, y) { return x + y; }'''\n    FunctionRetrieveDefaultDefinitionParameters:\n      type: object\n      description: Parameters used to specify the type of function to retrieve the default definition for.\n      discriminator:\n        propertyName: bindingType\n      properties:\n        bindingType:\n          type: string\n          description: Indicates the function binding type.\n      required:\n        - bindingType\n    AzureMachineLearningWebServiceFunctionRetrieveDefaultDefinitionParameters:\n      description: The parameters needed to retrieve the default function definition for an Azure Machine Learning web service function.\n      x-ms-discriminator-value: Microsoft.MachineLearning/WebService\n      properties:\n        bindingType:\n          type: string\n          description: Indicates the function binding type.\n        bindingRetrievalProperties:\n          $ref: '#/components/schemas/AzureMachineLearningWebServiceFunctionBindingRetrievalProperties'\n          description: The binding retrieval properties associated with an Azure Machine learning web service.\n          x-ms-client-flatten: true\n      type: object\n    AzureMachineLearningWebServiceFunctionBindingRetrievalProperties:\n      type: object\n      description: The binding retrieval properties associated with an Azure Machine learning web service.\n      properties:\n        executeEndpoint:\n          type: string\n          description: 'The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs'\n        udfType:\n          $ref: '#/components/schemas/UdfType'\n          description: The function type.\n    JavaScriptFunctionRetrieveDefaultDefinitionParameters:\n      description: The parameters needed to retrieve the default function definition for a JavaScript function.\n      x-ms-discriminator-value: Microsoft.StreamAnalytics/JavascriptUdf\n      properties:\n        bindingType:\n          type: string\n          description: Indicates the function binding type.\n        bindingRetrievalProperties:\n          $ref: '#/components/schemas/JavaScriptFunctionBindingRetrievalProperties'\n          description: The binding retrieval properties associated with a JavaScript function.\n          x-ms-client-flatten: true\n      type: object\n    JavaScriptFunctionBindingRetrievalProperties:\n      type: object\n      description: The binding retrieval properties associated with a JavaScript function.\n      properties:\n        script:\n          type: string\n          description: 'The JavaScript code containing a single function definition. For example: ''function (x, y) { return x + y; }''.'\n        udfType:\n          $ref: '#/components/schemas/UdfType'\n          description: The function type.\n    FunctionListResult:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Function'\n          readOnly: true\n          description: A list of functions under a streaming job. Populated by a 'List' operation.\n        nextLink:\n          type: string\n          readOnly: true\n          description: The link (url) to the next page of results.\n      description: Object containing a list of functions under a streaming job.\n    UdfType:\n      type: string\n      description: The function type.\n      enum:\n        - Scalar\n      x-ms-enum:\n        name: UdfType\n        modelAsString: false\n    AggregateFunctionProperties:\n      description: The properties that are associated with an aggregate function.\n      x-ms-discriminator-value: Aggregate\n      properties:\n        type:\n          type: string\n          description: Indicates the type of function.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n      type: object\n    PrivateEndpoint:\n      description: Complete information about the private endpoint.\n      properties:\n        createdDate:\n          description: The date when this private endpoint was created.\n          type: string\n          readOnly: true\n        manualPrivateLinkServiceConnections:\n          description: A list of connections to the remote resource. Immutable after it is set.\n          type: array\n          items:\n            $ref: '#/components/schemas/PrivateLinkServiceConnection'\n          x-ms-identifiers:\n            - /properties/privateLinkServiceId\n        etag:\n          description: Unique opaque string (generally a GUID) that represents the metadata state of the resource (private endpoint) and changes whenever the resource is updated. Required on PUT (CreateOrUpdate) requests.\n          type: string\n          readOnly: true\n      type: object\n    PrivateEndpointProperties:\n      type: object\n      description: The properties associated with a private endpoint.\n      properties:\n        createdDate:\n          description: The date when this private endpoint was created.\n          type: string\n          readOnly: true\n        manualPrivateLinkServiceConnections:\n          description: A list of connections to the remote resource. Immutable after it is set.\n          type: array\n          items:\n            $ref: '#/components/schemas/PrivateLinkServiceConnection'\n          x-ms-identifiers:\n            - /properties/privateLinkServiceId\n    PrivateLinkServiceConnection:\n      description: A grouping of information about the connection to the remote resource.\n      properties:\n        privateLinkServiceId:\n          description: The resource id of the private link service. Required on PUT (CreateOrUpdate) requests.\n          type: string\n        groupIds:\n          description: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests.\n          type: array\n          items:\n            type: string\n        requestMessage:\n          description: A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.\n          type: string\n          readOnly: true\n        privateLinkServiceConnectionState:\n          description: A collection of read-only information about the state of the connection to the private remote resource.\n          $ref: '#/components/schemas/PrivateLinkConnectionState'\n      type: object\n    PrivateLinkServiceConnectionProperties:\n      type: object\n      description: Bag of properties defining a privatelinkServiceConnection.\n      properties:\n        privateLinkServiceId:\n          description: The resource id of the private link service. Required on PUT (CreateOrUpdate) requests.\n          type: string\n        groupIds:\n          description: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests.\n          type: array\n          items:\n            type: string\n        requestMessage:\n          description: A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.\n          type: string\n          readOnly: true\n        privateLinkServiceConnectionState:\n          description: A collection of read-only information about the state of the connection to the private remote resource.\n          $ref: '#/components/schemas/PrivateLinkConnectionState'\n    PrivateLinkConnectionState:\n      type: object\n      description: A collection of read-only information about the state of the connection to the private remote resource.\n      properties:\n        status:\n          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the remote resource/service.\n          type: string\n          readOnly: true\n        description:\n          description: The reason for approval/rejection of the connection.\n          type: string\n          readOnly: true\n        actionsRequired:\n          description: A message indicating if changes on the service provider require any updates on the consumer.\n          type: string\n          readOnly: true\n    PrivateEndpointListResult:\n      type: object\n      description: A list of private endpoints.\n      properties:\n        value:\n          description: A list of private endpoints.\n          type: array\n          items:\n            $ref: '#/components/schemas/PrivateEndpoint'\n          readOnly: true\n        nextLink:\n          description: The URL to fetch the next set of private endpoints.\n          type: string\n          readOnly: true\n    AuthenticationMode:\n      type: string\n      description: Authentication Mode. Valid modes are `ConnectionString`, `Msi` and 'UserToken'.\n      enum:\n        - Msi\n        - UserToken\n        - ConnectionString\n      x-ms-enum:\n        name: AuthenticationMode\n        modelAsString: true\n      default: ConnectionString\n    Resource:\n      type: object\n      description: The base resource definition\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.\n      x-ms-azure-resource: true\n    TrackedResource:\n      description: The resource model definition for a ARM tracked top level resource\n      properties:\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.\n      type: object\n    ProxyResource:\n      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.\n      type: object\n    Error:\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            code:\n              type: string\n              description: Error code.\n            message:\n              type: string\n              description: Error message.\n            target:\n              type: string\n              description: Error target.\n            details:\n              type: array\n              items:\n                $ref: '#/components/schemas/ErrorDetails'\n              x-ms-identifiers: []\n              description: Error details.\n          description: Error definition properties.\n      description: Common error representation.\n    ErrorDetails:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Error code.\n        target:\n          type: string\n          description: Error target.\n        message:\n          type: string\n          description: Error message.\n      description: Common error details representation.\n    Cluster:\n      description: A Stream Analytics Cluster object\n      properties:\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n        createdDate:\n          description: The date this cluster was created.\n          type: string\n          format: date-time\n          readOnly: true\n        clusterId:\n          description: Unique identifier for the cluster.\n          type: string\n          readOnly: true\n        provisioningState:\n          $ref: '#/components/schemas/ClusterProvisioningState'\n        capacityAllocated:\n          description: Represents the number of streaming units currently being used on the cluster.\n          type: integer\n          format: int32\n          readOnly: true\n        capacityAssigned:\n          description: Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated.\n          type: integer\n          format: int32\n          readOnly: true\n        sku:\n          $ref: '#/components/schemas/ClusterSku'\n        etag:\n          description: The current entity tag for the cluster. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n          type: string\n          readOnly: true\n      type: object\n    ClusterProperties:\n      type: object\n      description: The properties associated with a Stream Analytics cluster.\n      properties:\n        createdDate:\n          description: The date this cluster was created.\n          type: string\n          format: date-time\n          readOnly: true\n        clusterId:\n          description: Unique identifier for the cluster.\n          type: string\n          readOnly: true\n        provisioningState:\n          $ref: '#/components/schemas/ClusterProvisioningState'\n        capacityAllocated:\n          description: Represents the number of streaming units currently being used on the cluster.\n          type: integer\n          format: int32\n          readOnly: true\n        capacityAssigned:\n          description: Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated.\n          type: integer\n          format: int32\n          readOnly: true\n    ClusterListResult:\n      type: object\n      description: A list of clusters populated by a 'list' operation.\n      properties:\n        value:\n          description: A list of clusters.\n          type: array\n          items:\n            $ref: '#/components/schemas/Cluster'\n          readOnly: true\n        nextLink:\n          description: The URL to fetch the next set of clusters.\n          type: string\n          readOnly: true\n    ClusterJob:\n      type: object\n      description: A streaming job.\n      properties:\n        id:\n          description: Resource ID of the streaming job.\n          type: string\n          readOnly: true\n        streamingUnits:\n          description: The number of streaming units that are used by the streaming job.\n          type: integer\n          format: int32\n          readOnly: true\n        jobState:\n          $ref: '#/components/schemas/JobState'\n    ClusterJobListResult:\n      type: object\n      description: A list of streaming jobs. Populated by a List operation.\n      properties:\n        value:\n          description: A list of streaming jobs.\n          type: array\n          items:\n            $ref: '#/components/schemas/ClusterJob'\n          readOnly: true\n        nextLink:\n          type: string\n          description: The URL to fetch the next set of streaming jobs.\n          readOnly: true\n    ClusterSku:\n      type: object\n      description: The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.\n      properties:\n        name:\n          description: Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.\n          type: string\n          enum:\n            - Default\n          x-ms-enum:\n            name: ClusterSkuName\n            modelAsString: true\n            values:\n              - value: Default\n                description: The default SKU.\n        capacity:\n          description: Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests.\n          type: integer\n          format: int32\n          minimum: 36\n          maximum: 396\n    ClusterProvisioningState:\n      description: 'The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled'\n      readOnly: true\n      type: string\n      enum:\n        - Succeeded\n        - Failed\n        - Canceled\n        - InProgress\n      x-ms-enum:\n        name: ClusterProvisioningState\n        modelAsString: true\n        values:\n          - value: Succeeded\n            description: The cluster provisioning succeeded.\n          - value: Failed\n            description: The cluster provisioning failed.\n          - value: Canceled\n            description: The cluster provisioning was canceled.\n          - value: InProgress\n            description: The cluster provisioning was inprogress.\n    JobState:\n      description: The current execution state of the streaming job.\n      type: string\n      readOnly: true\n      enum:\n        - Created\n        - Starting\n        - Running\n        - Stopping\n        - Stopped\n        - Deleting\n        - Failed\n        - Degraded\n        - Restarting\n        - Scaling\n      x-ms-enum:\n        name: JobState\n        modelAsString: true\n        values:\n          - value: Created\n            description: The job is currently in the Created state.\n          - value: Starting\n            description: The job is currently in the Starting state.\n          - value: Running\n            description: The job is currently in the Running state.\n          - value: Stopping\n            description: The job is currently in the Stopping state.\n          - value: Stopped\n            description: The job is currently in the Stopped state.\n          - value: Deleting\n            description: The job is currently in the Deleting state.\n          - value: Failed\n            description: The job is currently in the Failed state.\n          - value: Degraded\n            description: The job is currently in the Degraded state.\n          - value: Restarting\n            description: The job is currently in the Restarting state.\n          - value: Scaling\n            description: The job is currently in the Scaling state.\n    Transformation:\n      description: A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Resource Id\n        name:\n          type: string\n          description: Resource name\n        type:\n          readOnly: true\n          type: string\n          description: Resource type\n        streamingUnits:\n          type: integer\n          format: int32\n          description: Specifies the number of streaming units that the streaming job uses.\n          default: 3\n        validStreamingUnits:\n          type: array\n          items:\n            type: integer\n            format: int32\n            description: Specifies the number of streaming units that the streaming job can use.\n          description: Specifies the valid streaming units a streaming job can scale to.\n        query:\n          type: string\n          description: 'Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.'\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n      type: object\n    TransformationProperties:\n      type: object\n      description: The properties that are associated with a transformation.\n      properties:\n        streamingUnits:\n          type: integer\n          format: int32\n          description: Specifies the number of streaming units that the streaming job uses.\n          default: 3\n        validStreamingUnits:\n          type: array\n          items:\n            type: integer\n            format: int32\n            description: Specifies the number of streaming units that the streaming job can use.\n          description: Specifies the valid streaming units a streaming job can scale to.\n        query:\n          type: string\n          description: 'Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.'\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n    Input:\n      description: An input object, containing all information associated with the named input. All inputs are contained under a streaming job.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Resource Id\n        name:\n          type: string\n          description: Resource name\n        type:\n          readOnly: true\n          type: string\n          description: Resource type\n        properties:\n          $ref: '#/components/schemas/InputProperties'\n          description: The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.\n      type: object\n    InputProperties:\n      type: object\n      description: The properties that are associated with an input.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.\n        serialization:\n          $ref: '#/components/schemas/Serialization'\n          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.\n        diagnostics:\n          readOnly: true\n          $ref: '#/components/schemas/Diagnostics'\n          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        compression:\n          $ref: '#/components/schemas/Compression'\n          description: Describes how input data is compressed\n        partitionKey:\n          type: string\n          description: partitionKey Describes a key in the input data which is used for partitioning the input data\n      required:\n        - type\n    StreamInputProperties:\n      description: The properties that are associated with an input containing stream data.\n      x-ms-discriminator-value: Stream\n      properties:\n        type:\n          type: string\n          description: Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.\n        serialization:\n          $ref: '#/components/schemas/Serialization'\n          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.\n        diagnostics:\n          readOnly: true\n          $ref: '#/components/schemas/Diagnostics'\n          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        compression:\n          $ref: '#/components/schemas/Compression'\n          description: Describes how input data is compressed\n        partitionKey:\n          type: string\n          description: partitionKey Describes a key in the input data which is used for partitioning the input data\n        datasource:\n          $ref: '#/components/schemas/StreamInputDataSource'\n          description: Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.\n      type: object\n    ReferenceInputProperties:\n      description: The properties that are associated with an input containing reference data.\n      x-ms-discriminator-value: Reference\n      properties:\n        type:\n          type: string\n          description: Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.\n        serialization:\n          $ref: '#/components/schemas/Serialization'\n          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.\n        diagnostics:\n          readOnly: true\n          $ref: '#/components/schemas/Diagnostics'\n          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.\n        etag:\n          readOnly: true\n          type: string\n          description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        compression:\n          $ref: '#/components/schemas/Compression'\n          description: Describes how input data is compressed\n        partitionKey:\n          type: string\n          description: partitionKey Describes a key in the input data which is used for partitioning the input data\n        datasource:\n          $ref: '#/components/schemas/ReferenceInputDataSource'\n          description: Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests.\n      type: object\n    StreamInputDataSource:\n      type: object\n      description: Describes an input data source that contains stream data.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.\n      required:\n        - type\n    BlobStreamInputDataSource:\n      description: Describes a blob input data source that contains stream data.\n      x-ms-discriminator-value: Microsoft.Storage/Blob\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.\n        sourcePartitionCount:\n          type: integer\n          format: int32\n          description: The partition count of the blob input data source. Range 1 - 1024.\n      type: object\n    BlobStreamInputDataSourceProperties:\n      description: The properties that are associated with a blob input containing stream data.\n      properties:\n        storageAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/StorageAccount'\n          x-ms-identifiers:\n            - accountName\n          description: A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.\n        container:\n          type: string\n          description: The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.\n        pathPattern:\n          type: string\n          description: The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.\n        dateFormat:\n          type: string\n          description: The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.\n        timeFormat:\n          type: string\n          description: The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n        sourcePartitionCount:\n          type: integer\n          format: int32\n          description: The partition count of the blob input data source. Range 1 - 1024.\n      type: object\n    EventHubStreamInputDataSource:\n      description: Describes an Event Hub input data source that contains stream data.\n      x-ms-discriminator-value: Microsoft.ServiceBus/EventHub\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.\n        consumerGroupName:\n          type: string\n          description: The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.\n      type: object\n    EventHubV2StreamInputDataSource:\n      description: Describes an Event Hub input data source that contains stream data.\n      x-ms-discriminator-value: Microsoft.EventHub/EventHub\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.\n        consumerGroupName:\n          type: string\n          description: The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.\n      type: object\n    EventHubStreamInputDataSourceProperties:\n      description: The properties that are associated with a Event Hub input containing stream data.\n      properties:\n        eventHubName:\n          type: string\n          description: The name of the Event Hub. Required on PUT (CreateOrReplace) requests.\n        consumerGroupName:\n          type: string\n          description: The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.\n      type: object\n    IoTHubStreamInputDataSource:\n      description: Describes an IoT Hub input data source that contains stream data.\n      x-ms-discriminator-value: Microsoft.Devices/IotHubs\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.\n        iotHubNamespace:\n          type: string\n          description: The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyName:\n          type: string\n          description: The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyKey:\n          type: string\n          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.\n        consumerGroupName:\n          type: string\n          description: The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.\n        endpoint:\n          type: string\n          description: The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).\n      type: object\n    IoTHubStreamInputDataSourceProperties:\n      type: object\n      description: The properties that are associated with a IoT Hub input containing stream data.\n      properties:\n        iotHubNamespace:\n          type: string\n          description: The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyName:\n          type: string\n          description: The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyKey:\n          type: string\n          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.\n        consumerGroupName:\n          type: string\n          description: The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.\n        endpoint:\n          type: string\n          description: The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).\n    ReferenceInputDataSource:\n      type: object\n      description: Describes an input data source that contains reference data.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.\n      required:\n        - type\n    FileReferenceInputDataSource:\n      description: Describes a file input data source that contains reference data.\n      x-ms-discriminator-value: File\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.\n        path:\n          type: string\n          description: The path of the file.\n      type: object\n    FileReferenceInputDataSourceProperties:\n      type: object\n      description: The properties that are associated with a file input containing reference data.\n      properties:\n        path:\n          type: string\n          description: The path of the file.\n    BlobReferenceInputDataSource:\n      description: Describes a blob input data source that contains reference data.\n      x-ms-discriminator-value: Microsoft.Storage/Blob\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.\n      type: object\n    BlobReferenceInputDataSourceProperties:\n      description: The properties that are associated with a blob input containing reference data.\n      properties:\n        storageAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/StorageAccount'\n          x-ms-identifiers:\n            - accountName\n          description: A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.\n        container:\n          type: string\n          description: The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.\n        pathPattern:\n          type: string\n          description: The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.\n        dateFormat:\n          type: string\n          description: The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.\n        timeFormat:\n          type: string\n          description: The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n      type: object\n    BlobDataSourceProperties:\n      type: object\n      description: The properties that are associated with a blob data source.\n      properties:\n        storageAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/StorageAccount'\n          x-ms-identifiers:\n            - accountName\n          description: A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.\n        container:\n          type: string\n          description: The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.\n        pathPattern:\n          type: string\n          description: The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.\n        dateFormat:\n          type: string\n          description: The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.\n        timeFormat:\n          type: string\n          description: The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n    StorageAccount:\n      type: object\n      description: The properties that are associated with an Azure Storage account\n      properties:\n        accountName:\n          type: string\n          description: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.\n        accountKey:\n          type: string\n          description: The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.\n    ServiceBusDataSourceProperties:\n      type: object\n      description: The common properties that are associated with Service Bus data sources (Queues, Topics, Event Hubs, etc.).\n      properties:\n        serviceBusNamespace:\n          type: string\n          description: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyName:\n          type: string\n          description: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyKey:\n          type: string\n          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n    EventHubDataSourceProperties:\n      description: The common properties that are associated with Event Hub data sources.\n      properties:\n        serviceBusNamespace:\n          type: string\n          description: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyName:\n          type: string\n          description: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.\n        sharedAccessPolicyKey:\n          type: string\n          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.\n        authenticationMode:\n          $ref: '#/components/schemas/AuthenticationMode'\n          description: Authentication Mode.\n        eventHubName:\n          type: string\n          description: The name of the Event Hub. Required on PUT (CreateOrReplace) requests.\n      type: object\n    Diagnostics:\n      type: object\n      description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.\n      properties:\n        conditions:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/DiagnosticCondition'\n          x-ms-identifiers: []\n          description: A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.\n    DiagnosticCondition:\n      type: object\n      description: Condition applicable to the resource, or to the job overall, that warrant customer attention.\n      properties:\n        since:\n          readOnly: true\n          type: string\n          description: The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.\n        code:\n          readOnly: true\n          type: string\n          description: The opaque diagnostic code.\n        message:\n          readOnly: true\n          type: string\n          description: The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.\n    InputListResult:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Input'\n          readOnly: true\n          description: A list of inputs under a streaming job. Populated by a 'List' operation.\n        nextLink:\n          type: string\n          readOnly: true\n          description: The link (url) to the next page of results.\n      description: Object containing a list of inputs under a streaming job.\n    Serialization:\n      type: object\n      description: Describes how data from an input is serialized or how data is serialized when written to an output.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.\n          $ref: '#/components/schemas/EventSerializationType'\n      required:\n        - type\n    EventSerializationType:\n      type: string\n      description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.\n      enum:\n        - Csv\n        - Avro\n        - Json\n        - Parquet\n      x-ms-enum:\n        name: EventSerializationType\n        modelAsString: true\n    ParquetSerialization:\n      description: Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.\n      x-ms-discriminator-value: Parquet\n      properties:\n        type:\n          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.\n          $ref: '#/components/schemas/EventSerializationType'\n      type: object\n    ParquetSerializationProperties:\n      type: object\n      description: The properties that are associated with the Parquet serialization type.\n      properties: {}\n    CsvSerialization:\n      description: Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.\n      x-ms-discriminator-value: Csv\n      properties:\n        type:\n          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.\n          $ref: '#/components/schemas/EventSerializationType'\n        fieldDelimiter:\n          type: string\n          description: Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.\n        encoding:\n          $ref: '#/components/schemas/Encoding'\n          description: Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.\n      type: object\n    CsvSerializationProperties:\n      type: object\n      description: The properties that are associated with the CSV serialization type.\n      properties:\n        fieldDelimiter:\n          type: string\n          description: Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.\n        encoding:\n          $ref: '#/components/schemas/Encoding'\n          description: Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.\n    JsonSerialization:\n      description: Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.\n      x-ms-discriminator-value: Json\n      properties:\n        type:\n          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.\n          $ref: '#/components/schemas/EventSerializationType'\n        encoding:\n          $ref: '#/components/schemas/Encoding'\n          description: Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.\n        format:\n          $ref: '#/components/schemas/JsonOutputSerializationFormat'\n          description: This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.\n      type: object\n    JsonSerializationProperties:\n      type: object\n      description: The properties that are associated with the JSON serialization type.\n      properties:\n        encoding:\n          $ref: '#/components/schemas/Encoding'\n          description: Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.\n        format:\n          $ref: '#/components/schemas/JsonOutputSerializationFormat'\n          description: This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.\n    AvroSerialization:\n      description: Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.\n      x-ms-discriminator-value: Avro\n      properties:\n        type:\n          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.\n          $ref: '#/components/schemas/EventSerializationType'\n      type: object\n    AvroSerializationProperties:\n      type: object\n      description: The properties that are associated with the Avro serialization type.\n      properties: {}\n    Encoding:\n      type: string\n      description: Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output.\n      enum:\n        - UTF8\n      x-ms-enum:\n        name: Encoding\n        modelAsString: true\n    JsonOutputSerializationFormat:\n      type: string\n      description: Specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects.\n      enum:\n        - LineSeparated\n        - Array\n      x-ms-enum:\n        name: JsonOutputSerializationFormat\n        modelAsString: true\n    ResourceTestStatus:\n      type: object\n      description: Describes the status of the test operation along with error information, if applicable.\n      properties:\n        status:\n          readOnly: true\n          type: string\n          description: The status of the test operation.\n        error:\n          readOnly: true\n          $ref: '#/components/schemas/ErrorResponse'\n          description: Describes the error that occurred.\n    ErrorResponse:\n      type: object\n      description: Describes the error that occurred.\n      properties:\n        code:\n          readOnly: true\n          type: string\n          description: Error code associated with the error that occurred.\n        message:\n          readOnly: true\n          type: string\n          description: Describes the error in detail.\n    Compression:\n      type: object\n      description: Describes how input data is compressed\n      properties:\n        type:\n          description: Indicates the type of compression that the input uses. Required on PUT (CreateOrReplace) requests.\n          $ref: '#/components/schemas/CompressionType'\n      required:\n        - type\n    CompressionType:\n      type: string\n      description: Indicates the type of compression that the input uses. Required on PUT (CreateOrReplace) requests.\n      enum:\n        - None\n        - GZip\n        - Deflate\n      x-ms-enum:\n        name: CompressionType\n        modelAsString: true\n      default: None\n    AzureSqlReferenceInputDataSource:\n      description: Describes an Azure SQL database reference input data source.\n      x-ms-discriminator-value: Microsoft.Sql/Server/Database\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.\n        server:\n          description: This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.\n          type: string\n        database:\n          description: This element is associated with the datasource element. This is the name of the database that output will be written to.\n          type: string\n        user:\n          description: This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.\n          type: string\n        password:\n          description: This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.\n          type: string\n          x-ms-secret: true\n        table:\n          description: This element is associated with the datasource element. The name of the table in the Azure SQL database..\n          type: string\n        refreshType:\n          type: object\n          description: Indicates the type of data refresh option.\n          $ref: '#/components/schemas/RefreshType'\n        refreshRate:\n          description: This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.\n          type: string\n        fullSnapshotQuery:\n          description: This element is associated with the datasource element. This query is used to fetch data from the sql database.\n          type: string\n        deltaSnapshotQuery:\n          description: This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.\n          type: string\n      type: object\n    AzureSqlReferenceInputDataSourceProperties:\n      description: The properties that are associated with SQL DB input containing reference data. Required on PUT (CreateOrReplace) requests.\n      type: object\n      properties:\n        server:\n          description: This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.\n          type: string\n        database:\n          description: This element is associated with the datasource element. This is the name of the database that output will be written to.\n          type: string\n        user:\n          description: This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.\n          type: string\n        password:\n          description: This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.\n          type: string\n          x-ms-secret: true\n        table:\n          description: This element is associated with the datasource element. The name of the table in the Azure SQL database..\n          type: string\n        refreshType:\n          type: object\n          description: Indicates the type of data refresh option.\n          $ref: '#/components/schemas/RefreshType'\n        refreshRate:\n          description: This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.\n          type: string\n        fullSnapshotQuery:\n          description: This element is associated with the datasource element. This query is used to fetch data from the sql database.\n          type: string\n        deltaSnapshotQuery:\n          description: This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.\n          type: string\n    GatewayMessageBusStreamInputDataSource:\n      description: Describes a blob input data source that contains stream data.\n      x-ms-discriminator-value: GatewayMessageBus\n      properties:\n        type:\n          type: string\n          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.\n      type: object\n    GatewayMessageBusStreamInputDataSourceProperties:\n      description: The properties that are associated with a gateway message bus input containing stream data.\n      properties:\n        topic:\n          type: string\n          description: The name of the Service Bus topic.\n      type: object\n    GatewayMessageBusSourceProperties:\n      description: The properties that are associated with a gateway message bus datasource.\n      type: object\n      properties:\n        topic:\n          type: string\n          description: The name of the Service Bus topic.\n    RefreshType:\n      type: string\n      description: Indicates the type of data refresh option.\n      enum:\n        - Static\n        - RefreshPeriodicallyWithFull\n        - RefreshPeriodicallyWithDelta\n      x-ms-enum:\n        name: RefreshType\n        modelAsString: true\n  x-stackQL-resources:\n    subscriptions:\n      id: azure.stream_analytics.subscriptions\n      name: subscriptions\n      title: Subscriptions\n      methods:\n        Subscriptions_ListQuotas:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StreamAnalytics~1locations~1{location}~1quotas~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    outputs:\n      id: azure.stream_analytics.outputs\n      name: outputs\n      title: Outputs\n      methods:\n        Outputs_CreateOrReplace:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}~1?api-version=2020-03-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Outputs_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}~1?api-version=2020-03-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Outputs_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}~1?api-version=2020-03-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Outputs_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Outputs_ListByStreamingJob:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Outputs_Test:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}~1test~1?api-version=2020-03-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/outputs/methods/Outputs_ListByStreamingJob'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/outputs/methods/Outputs_CreateOrReplace'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/outputs/methods/Outputs_Delete'\n    operations:\n      id: azure.stream_analytics.operations\n      name: operations\n      title: Operations\n      methods:\n        Operations_List:\n          operation:\n            $ref: '#/paths/~1providers~1Microsoft.StreamAnalytics~1operations~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'\n        insert: []\n        update: []\n        delete: []\n    streaming_jobs:\n      id: azure.stream_analytics.streaming_jobs\n      name: streaming_jobs\n      title: Streaming_jobs\n      methods:\n        StreamingJobs_CreateOrReplace:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1?api-version=2020-03-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        StreamingJobs_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1?api-version=2020-03-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        StreamingJobs_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1?api-version=2020-03-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        StreamingJobs_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        StreamingJobs_ListByResourceGroup:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        StreamingJobs_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        StreamingJobs_Start:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1start~1?api-version=2020-03-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        StreamingJobs_Stop:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1stop~1?api-version=2020-03-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        StreamingJobs_Scale:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1scale~1?api-version=2020-03-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/StreamingJobs_ListByResourceGroup'\n          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/StreamingJobs_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/StreamingJobs_CreateOrReplace'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/StreamingJobs_Delete'\n    functions:\n      id: azure.stream_analytics.functions\n      name: functions\n      title: Functions\n      methods:\n        Functions_CreateOrReplace:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}~1?api-version=2020-03-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Functions_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}~1?api-version=2020-03-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Functions_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}~1?api-version=2020-03-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Functions_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Functions_ListByStreamingJob:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Functions_Test:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}~1test~1?api-version=2020-03-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        Functions_RetrieveDefaultDefinition:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}~1retrieveDefaultDefinition~1?api-version=2020-03-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/functions/methods/Functions_ListByStreamingJob'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/functions/methods/Functions_CreateOrReplace'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/functions/methods/Functions_Delete'\n    private_endpoints:\n      id: azure.stream_analytics.private_endpoints\n      name: private_endpoints\n      title: Private_endpoints\n      methods:\n        PrivateEndpoints_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1privateEndpoints~1{privateEndpointName}~1?api-version=2020-03-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        PrivateEndpoints_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1privateEndpoints~1{privateEndpointName}~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        PrivateEndpoints_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1privateEndpoints~1{privateEndpointName}~1?api-version=2020-03-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        PrivateEndpoints_ListByCluster:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1privateEndpoints~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/PrivateEndpoints_ListByCluster'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/PrivateEndpoints_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/PrivateEndpoints_Delete'\n    clusters:\n      id: azure.stream_analytics.clusters\n      name: clusters\n      title: Clusters\n      methods:\n        Clusters_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1?api-version=2020-03-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Clusters_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1?api-version=2020-03-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        Clusters_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Clusters_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1?api-version=2020-03-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Clusters_ListBySubscription:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StreamAnalytics~1clusters~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Clusters_ListByResourceGroup:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Clusters_ListStreamingJobs:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1listStreamingJobs~1?api-version=2020-03-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_ListByResourceGroup'\n          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_ListBySubscription'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/clusters/methods/Clusters_Delete'\n    transformations:\n      id: azure.stream_analytics.transformations\n      name: transformations\n      title: Transformations\n      methods:\n        Transformations_CreateOrReplace:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1transformations~1{transformationName}~1?api-version=2020-03-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Transformations_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1transformations~1{transformationName}~1?api-version=2020-03-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Transformations_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1transformations~1{transformationName}~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select: []\n        insert:\n          - $ref: '#/components/x-stackQL-resources/transformations/methods/Transformations_CreateOrReplace'\n        update: []\n        delete: []\n    inputs:\n      id: azure.stream_analytics.inputs\n      name: inputs\n      title: Inputs\n      methods:\n        Inputs_CreateOrReplace:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}~1?api-version=2020-03-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Inputs_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}~1?api-version=2020-03-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Inputs_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}~1?api-version=2020-03-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Inputs_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Inputs_ListByStreamingJob:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1?api-version=2020-03-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Inputs_Test:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}~1test~1?api-version=2020-03-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/inputs/methods/Inputs_ListByStreamingJob'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/inputs/methods/Inputs_CreateOrReplace'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/inputs/methods/Inputs_Delete'\npaths:\n  /subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/quotas/?api-version=2020-03-01:\n    get:\n      tags:\n        - Subscriptions\n      operationId: Subscriptions_ListQuotas\n      description: Retrieves the subscription's current quota information in a particular region.\n      parameters:\n        - name: location\n          in: path\n          description: 'The region in which to retrieve the subscription''s quota information. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/'\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the subscription's quota information in the specified region.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionQuotasListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: subscriptions\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}/?api-version=2020-03-01:\n    put:\n      tags:\n        - Outputs\n      operationId: Outputs_CreateOrReplace\n      description: Creates an output or replaces an already existing output under an existing streaming job.\n      requestBody:\n        description: The definition of the output that will be used to create a new output or replace the existing one under the streaming job.\n        required: true\n        x-ms-requestBody-name: output\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Output'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - name: If-None-Match\n          in: header\n          description: Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response.\n          required: false\n          x-ms-client-name: IfNoneMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/OutputNameParameter'\n      responses:\n        '200':\n          description: The output was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Output'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        '201':\n          description: The output was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Output'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: outputs\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - Outputs\n      operationId: Outputs_Update\n      description: Updates an existing output under an existing streaming job. This can be used to partially update (ie. update one or two properties) an output without affecting the rest the job or output definition.\n      requestBody:\n        description: An Output object. The properties specified here will overwrite the corresponding properties in the existing output (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing output will remain the same and not change as a result of this PATCH operation.\n        required: true\n        x-ms-requestBody-name: output\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Output'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/OutputNameParameter'\n      responses:\n        '200':\n          description: The output was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Output'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: outputs\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - Outputs\n      operationId: Outputs_Delete\n      description: Deletes an output from the streaming job.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/OutputNameParameter'\n      responses:\n        '200':\n          description: The output was successfully deleted.\n        '204':\n          description: The output does not exist.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: outputs\n      x-stackQL-verb: delete\n    get:\n      tags:\n        - Outputs\n      operationId: Outputs_Get\n      description: Gets details about the specified output.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/OutputNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the specified output.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Output'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: outputs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/?api-version=2020-03-01:\n    get:\n      tags:\n        - Outputs\n      operationId: Outputs_ListByStreamingJob\n      description: Lists all of the outputs under the specified streaming job.\n      parameters:\n        - name: $select\n          in: query\n          description: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: Successfully listed the outputs under the specified streaming job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutputListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: outputs\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}/test/?api-version=2020-03-01:\n    post:\n      tags:\n        - Outputs\n      operationId: Outputs_Test\n      description: Tests whether an output’s datasource is reachable and usable by the Azure Stream Analytics service.\n      requestBody:\n        description: If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested.\n        required: false\n        x-ms-requestBody-name: output\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Output'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/OutputNameParameter'\n      responses:\n        '200':\n          description: The test operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceTestStatus'\n        '202':\n          description: The test request was successfully initiated.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: outputs\n      x-stackQL-verb: exec\n  /providers/Microsoft.StreamAnalytics/operations/?api-version=2020-03-01:\n    get:\n      tags:\n        - Operations\n      operationId: Operations_List\n      description: Lists all of the available Stream Analytics related operations.\n      parameters: []\n      responses:\n        '200':\n          description: Successfully listed the available operations.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: operations\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/?api-version=2020-03-01:\n    put:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_CreateOrReplace\n      description: Creates a streaming job or replaces an already existing streaming job.\n      requestBody:\n        description: The definition of the streaming job that will be used to create a new streaming job or replace the existing one.\n        required: true\n        x-ms-requestBody-name: streamingJob\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StreamingJob'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the streaming job. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - name: If-None-Match\n          in: header\n          description: Set to '*' to allow a new streaming job to be created, but to prevent updating an existing record set. Other values will result in a 412 Pre-condition Failed response.\n          required: false\n          x-ms-client-name: IfNoneMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: The streaming job was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamingJob'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        '201':\n          description: The streaming job was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamingJob'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_Update\n      description: Updates an existing streaming job. This can be used to partially update (ie. update one or two properties) a streaming job without affecting the rest the job definition.\n      requestBody:\n        description: A streaming job object. The properties specified here will overwrite the corresponding properties in the existing streaming job (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing input will remain the same and not change as a result of this PATCH operation.\n        required: true\n        x-ms-requestBody-name: streamingJob\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StreamingJob'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the streaming job. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: The streaming job was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamingJob'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_Delete\n      description: Deletes a streaming job.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: The streaming job was successfully deleted.\n        '202':\n          description: The delete request was successfully initiated.\n        '204':\n          description: The streaming job does not exist.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: delete\n    get:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_Get\n      description: Gets details about the specified streaming job.\n      parameters:\n        - name: $expand\n          in: query\n          description: The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'.\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the specified streaming job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamingJob'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/?api-version=2020-03-01:\n    get:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_ListByResourceGroup\n      description: Lists all of the streaming jobs in the specified resource group.\n      parameters:\n        - name: $expand\n          in: query\n          description: The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'.\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n      responses:\n        '200':\n          description: Successfully listed the streaming jobs under the specified resource group.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamingJobListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/streamingjobs/?api-version=2020-03-01:\n    get:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_List\n      description: Lists all of the streaming jobs in the given subscription.\n      parameters:\n        - name: $expand\n          in: query\n          description: The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'.\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: Successfully listed the streaming jobs under the given subscription.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamingJobListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/start/?api-version=2020-03-01:\n    post:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_Start\n      description: Starts a streaming job. Once a job is started it will start processing input events and produce output.\n      requestBody:\n        description: Parameters applicable to a start streaming job operation.\n        required: false\n        x-ms-requestBody-name: startJobParameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StartStreamingJobParameters'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: The streaming job was successfully started.\n        '202':\n          description: The start streaming job request was successfully initiated.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/stop/?api-version=2020-03-01:\n    post:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_Stop\n      description: Stops a running streaming job. This will cause a running streaming job to stop processing input events and producing output.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: The streaming job was successfully stopped.\n        '202':\n          description: The stop streaming job request was successfully initiated.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/scale/?api-version=2020-03-01:\n    post:\n      tags:\n        - StreamingJobs\n      operationId: StreamingJobs_Scale\n      description: Scales a streaming job when the job is running.\n      requestBody:\n        description: Parameters applicable to a scale streaming job operation.\n        required: false\n        x-ms-requestBody-name: scaleJobParameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScaleStreamingJobParameters'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '202':\n          description: The scale streaming job request was successfully initiated.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: streaming_jobs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}/?api-version=2020-03-01:\n    put:\n      tags:\n        - Functions\n      operationId: Functions_CreateOrReplace\n      description: Creates a function or replaces an already existing function under an existing streaming job.\n      requestBody:\n        description: The definition of the function that will be used to create a new function or replace the existing one under the streaming job.\n        required: true\n        x-ms-requestBody-name: function\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Function'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the function. Omit this value to always overwrite the current function. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - name: If-None-Match\n          in: header\n          description: Set to '*' to allow a new function to be created, but to prevent updating an existing function. Other values will result in a 412 Pre-condition Failed response.\n          required: false\n          x-ms-client-name: IfNoneMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/FunctionNameParameter'\n      responses:\n        '200':\n          description: The function was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Function'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        '201':\n          description: The function was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Function'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: functions\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - Functions\n      operationId: Functions_Update\n      description: Updates an existing function under an existing streaming job. This can be used to partially update (ie. update one or two properties) a function without affecting the rest the job or function definition.\n      requestBody:\n        description: A function object. The properties specified here will overwrite the corresponding properties in the existing function (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing function will remain the same and not change as a result of this PATCH operation.\n        required: true\n        x-ms-requestBody-name: function\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Function'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the function. Omit this value to always overwrite the current function. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/FunctionNameParameter'\n      responses:\n        '200':\n          description: The function was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Function'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: functions\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - Functions\n      operationId: Functions_Delete\n      description: Deletes a function from the streaming job.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/FunctionNameParameter'\n      responses:\n        '200':\n          description: The function was successfully deleted.\n        '204':\n          description: The function does not exist.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: functions\n      x-stackQL-verb: delete\n    get:\n      tags:\n        - Functions\n      operationId: Functions_Get\n      description: Gets details about the specified function.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/FunctionNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the specified function.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Function'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: functions\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/?api-version=2020-03-01:\n    get:\n      tags:\n        - Functions\n      operationId: Functions_ListByStreamingJob\n      description: Lists all of the functions under the specified streaming job.\n      parameters:\n        - name: $select\n          in: query\n          description: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: Successfully listed the functions under the specified streaming job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FunctionListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: functions\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}/test/?api-version=2020-03-01:\n    post:\n      tags:\n        - Functions\n      operationId: Functions_Test\n      description: Tests if the information provided for a function is valid. This can range from testing the connection to the underlying web service behind the function or making sure the function code provided is syntactically correct.\n      requestBody:\n        description: If the function specified does not already exist, this parameter must contain the full function definition intended to be tested. If the function specified already exists, this parameter can be left null to test the existing function as is or if specified, the properties specified will overwrite the corresponding properties in the existing function (exactly like a PATCH operation) and the resulting function will be tested.\n        required: false\n        x-ms-requestBody-name: function\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Function'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/FunctionNameParameter'\n      responses:\n        '200':\n          description: The test operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceTestStatus'\n        '202':\n          description: The test request was successfully initiated.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: functions\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}/retrieveDefaultDefinition/?api-version=2020-03-01:\n    post:\n      tags:\n        - Functions\n      operationId: Functions_RetrieveDefaultDefinition\n      description: Retrieves the default definition of a function based on the parameters specified.\n      requestBody:\n        description: Parameters used to specify the type of function to retrieve the default definition for.\n        required: false\n        x-ms-requestBody-name: functionRetrieveDefaultDefinitionParameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FunctionRetrieveDefaultDefinitionParameters'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/FunctionNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the function's default definition.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Function'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: functions\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/privateEndpoints/{privateEndpointName}/?api-version=2020-03-01:\n    put:\n      tags:\n        - PrivateEndpoints\n      description: Creates a Stream Analytics Private Endpoint or replaces an already existing Private Endpoint.\n      operationId: PrivateEndpoints_CreateOrUpdate\n      requestBody:\n        description: The definition of the private endpoint that will be used to create a new cluster or replace the existing one.\n        required: true\n        x-ms-requestBody-name: privateEndpoint\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrivateEndpoint'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n        - $ref: '#/components/parameters/PrivateEndpointNameParameter'\n        - $ref: '#/components/parameters/IfMatchHeader'\n        - $ref: '#/components/parameters/IfNoneMatchHeader'\n      responses:\n        '200':\n          description: The private endpoint was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpoint'\n        '201':\n          description: The private endpoint was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpoint'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: private_endpoints\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - PrivateEndpoints\n      description: Gets information about the specified Private Endpoint.\n      operationId: PrivateEndpoints_Get\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n        - $ref: '#/components/parameters/PrivateEndpointNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the specified private endpoint.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpoint'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: private_endpoints\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - PrivateEndpoints\n      description: Delete the specified private endpoint.\n      operationId: PrivateEndpoints_Delete\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n        - $ref: '#/components/parameters/PrivateEndpointNameParameter'\n      responses:\n        '200':\n          description: The private endpoint was successfully deleted.\n        '202':\n          description: The delete request was successfully initiated.\n        '204':\n          description: The private endpoint does not exist.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: private_endpoints\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/privateEndpoints/?api-version=2020-03-01:\n    get:\n      tags:\n        - PrivateEndpoints\n      description: Lists the private endpoints in the cluster.\n      operationId: PrivateEndpoints_ListByCluster\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n      responses:\n        '200':\n          description: Successfully listed the private endpoints under the specified cluster.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpointListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: private_endpoints\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/?api-version=2020-03-01:\n    put:\n      tags:\n        - Clusters\n      description: Creates a Stream Analytics Cluster or replaces an already existing cluster.\n      operationId: Clusters_CreateOrUpdate\n      requestBody:\n        description: The definition of the cluster that will be used to create a new cluster or replace the existing one.\n        required: true\n        x-ms-requestBody-name: cluster\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Cluster'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n        - $ref: '#/components/parameters/IfMatchHeader'\n        - $ref: '#/components/parameters/IfNoneMatchHeader'\n      responses:\n        '200':\n          description: The cluster was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n        '201':\n          description: The cluster was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: clusters\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - Clusters\n      description: Updates an existing cluster. This can be used to partially update (ie. update one or two properties) a cluster without affecting the rest of the cluster definition.\n      operationId: Clusters_Update\n      requestBody:\n        description: The properties specified here will overwrite the corresponding properties in the existing cluster (ie. Those properties will be updated).\n        required: true\n        x-ms-requestBody-name: cluster\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Cluster'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n        - $ref: '#/components/parameters/IfMatchHeader'\n      responses:\n        '200':\n          description: The cluster was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n        '202':\n          description: The update request was successfully initiated.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: clusters\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - Clusters\n      description: Gets information about the specified cluster.\n      operationId: Clusters_Get\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the specified cluster.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: clusters\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - Clusters\n      description: Deletes the specified cluster.\n      operationId: Clusters_Delete\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n      responses:\n        '200':\n          description: The cluster was successfully deleted.\n        '202':\n          description: The delete request was successfully initiated.\n        '204':\n          description: The cluster does not exist.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: clusters\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/clusters/?api-version=2020-03-01:\n    get:\n      tags:\n        - Clusters\n      description: Lists all of the clusters in the given subscription.\n      operationId: Clusters_ListBySubscription\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: Successfully listed the clusters under the specified subscription.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: clusters\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/?api-version=2020-03-01:\n    get:\n      tags:\n        - Clusters\n      description: Lists all of the clusters in the given resource group.\n      operationId: Clusters_ListByResourceGroup\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n      responses:\n        '200':\n          description: Successfully listed the clusters under the specified resource group.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: clusters\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/listStreamingJobs/?api-version=2020-03-01:\n    post:\n      tags:\n        - Clusters\n      description: Lists all of the streaming jobs in the given cluster.\n      operationId: Clusters_ListStreamingJobs\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ClusterNameParameter'\n      responses:\n        '200':\n          description: Successfully listed the streaming jobs in the specified cluster.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterJobListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: clusters\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/transformations/{transformationName}/?api-version=2020-03-01:\n    put:\n      tags:\n        - Transformations\n      operationId: Transformations_CreateOrReplace\n      description: Creates a transformation or replaces an already existing transformation under an existing streaming job.\n      requestBody:\n        description: The definition of the transformation that will be used to create a new transformation or replace the existing one under the streaming job.\n        required: true\n        x-ms-requestBody-name: transformation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Transformation'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the transformation. Omit this value to always overwrite the current transformation. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - name: If-None-Match\n          in: header\n          description: Set to '*' to allow a new transformation to be created, but to prevent updating an existing transformation. Other values will result in a 412 Pre-condition Failed response.\n          required: false\n          x-ms-client-name: IfNoneMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/TransformationNameParameter'\n      responses:\n        '200':\n          description: The transformation was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transformation'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        '201':\n          description: The transformation was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transformation'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: transformations\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - Transformations\n      operationId: Transformations_Update\n      description: Updates an existing transformation under an existing streaming job. This can be used to partially update (ie. update one or two properties) a transformation without affecting the rest the job or transformation definition.\n      requestBody:\n        description: A Transformation object. The properties specified here will overwrite the corresponding properties in the existing transformation (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing transformation will remain the same and not change as a result of this PATCH operation.\n        required: true\n        x-ms-requestBody-name: transformation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Transformation'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the transformation. Omit this value to always overwrite the current transformation. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/TransformationNameParameter'\n      responses:\n        '200':\n          description: The transformation was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transformation'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: transformations\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - Transformations\n      operationId: Transformations_Get\n      description: Gets details about the specified transformation.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/TransformationNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the specified transformation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transformation'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: transformations\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}/?api-version=2020-03-01:\n    put:\n      tags:\n        - Inputs\n      operationId: Inputs_CreateOrReplace\n      description: Creates an input or replaces an already existing input under an existing streaming job.\n      requestBody:\n        description: The definition of the input that will be used to create a new input or replace the existing one under the streaming job.\n        required: true\n        x-ms-requestBody-name: input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - name: If-None-Match\n          in: header\n          description: Set to '*' to allow a new input to be created, but to prevent updating an existing input. Other values will result in a 412 Pre-condition Failed response.\n          required: false\n          x-ms-client-name: IfNoneMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/InputNameParameter'\n      responses:\n        '200':\n          description: The input was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Input'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        '201':\n          description: The input was successfully created or replaced.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Input'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: inputs\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - Inputs\n      operationId: Inputs_Update\n      description: Updates an existing input under an existing streaming job. This can be used to partially update (ie. update one or two properties) an input without affecting the rest the job or input definition.\n      requestBody:\n        description: An Input object. The properties specified here will overwrite the corresponding properties in the existing input (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing input will remain the same and not change as a result of this PATCH operation.\n        required: true\n        x-ms-requestBody-name: input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n      parameters:\n        - name: If-Match\n          in: header\n          description: The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.\n          required: false\n          x-ms-client-name: IfMatch\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/InputNameParameter'\n      responses:\n        '200':\n          description: The input was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Input'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: inputs\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - Inputs\n      operationId: Inputs_Delete\n      description: Deletes an input from the streaming job.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/InputNameParameter'\n      responses:\n        '200':\n          description: The input was successfully deleted.\n        '204':\n          description: The input does not exist.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: inputs\n      x-stackQL-verb: delete\n    get:\n      tags:\n        - Inputs\n      operationId: Inputs_Get\n      description: Gets details about the specified input.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/InputNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the specified input.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Input'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-stackQL-resource: inputs\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/?api-version=2020-03-01:\n    get:\n      tags:\n        - Inputs\n      operationId: Inputs_ListByStreamingJob\n      description: Lists all of the inputs under the specified streaming job.\n      parameters:\n        - name: $select\n          in: query\n          description: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n      responses:\n        '200':\n          description: Successfully listed the inputs under the specified streaming job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InputListResult'\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: inputs\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}/test/?api-version=2020-03-01:\n    post:\n      tags:\n        - Inputs\n      operationId: Inputs_Test\n      description: Tests whether an input’s datasource is reachable and usable by the Azure Stream Analytics service.\n      requestBody:\n        description: If the input specified does not already exist, this parameter must contain the full input definition intended to be tested. If the input specified already exists, this parameter can be left null to test the existing input as is or if specified, the properties specified will overwrite the corresponding properties in the existing input (exactly like a PATCH operation) and the resulting input will be tested.\n        required: false\n        x-ms-requestBody-name: input\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Input'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/StreamingJobNameParameter'\n        - $ref: '#/components/parameters/InputNameParameter'\n      responses:\n        '200':\n          description: The test operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceTestStatus'\n        '202':\n          description: The test request was successfully initiated.\n        default:\n          description: Error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: inputs\n      x-stackQL-verb: exec\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/-/blob/providers/src/azure/v0.2.0/services/stream_analytics.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/providers/src/azure/v0.2.0/services/stream_analytics.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:132149: path MUST NOT contain a query string"
}