{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ahmed-musallam/adobe-cloud-manager-desktop"
		},
		"file": {
			"name": "api_open-api.yaml",
			"size": 0,
			"path": "app/client/api_open-api.yaml",
			"byteSize": 96652,
			"content": "openapi: 3.0.1\ninfo:\n  title: Cloud Manager API\n  description: This API allows access to Cloud Manager programs, pipelines, and environments\n    by an authorized technical account created through the Adobe I/O Console. The\n    base url for this API is https://cloudmanager.adobe.io, e.g. to get the list of\n    programs for an organization, you would make a GET request to https://cloudmanager.adobe.io/api/programs\n    (with the correct set of headers as described below). This swagger file can be\n    downloaded from https://raw.githubusercontent.com/AdobeDocs/cloudmanager-api-docs/master/swagger-specs/api.yaml.\n  version: 1.0.0\nservers:\n- url: https://cloudmanager.adobe.io/\ntags:\n- name: Programs\n- name: Repositories\n- name: Branches\n- name: Pipelines\n- name: Pipeline Execution\n- name: Environments\n- name: Environment Variables\npaths:\n  /api/programs:\n    get:\n      tags:\n      - Programs\n      summary: Lists Programs\n      description: Returns all programs that the requesting user has access to\n      operationId: getPrograms\n      parameters:\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Program List'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}:\n    get:\n      tags:\n      - Programs\n      summary: Get Program\n      description: Returns a program by its id\n      operationId: getProgram\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of program\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Program'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: Program not found\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/repositories:\n    get:\n      tags:\n      - Repositories\n      summary: Lists Repositories\n      description: Lists all Repositories in an program\n      operationId: getRepositories\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Repository List'\n  /api/program/{programId}/repository/{repositoryId}:\n    get:\n      tags:\n      - Repositories\n      summary: Get Repository\n      description: Returns an repository by its id\n      operationId: getRepository\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: repositoryId\n        in: path\n        description: Identifier of the repository\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Repository'\n  /api/program/{programId}/repository/{repositoryId}/branches:\n    get:\n      tags:\n      - Branches\n      summary: List Branches\n      description: Returns the list of branches from a repository\n      operationId: getBranches\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: repositoryId\n        in: path\n        description: Identifier of the repository\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of the list of repository branches\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Branch List'\n  /api/program/{programId}/pipelines:\n    get:\n      tags:\n      - Pipelines\n      summary: List Pipelines\n      description: Returns all the pipelines that the requesting user has access to\n        in an program\n      operationId: getPipelines\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pipeline List'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/pipeline/{pipelineId}:\n    get:\n      tags:\n      - Pipelines\n      summary: Get Pipeline\n      description: Returns a pipeline by its id\n      operationId: getPipeline\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of pipeline\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pipeline'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: Pipeline not found\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n    delete:\n      tags:\n      - Pipelines\n      summary: Delete a Pipeline\n      description: Delete a pipeline. All the data is wiped.\n      operationId: deletePipeline\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n    patch:\n      tags:\n      - Pipelines\n      summary: Patches Pipeline\n      description: Patches a pipeline within an program.\n      operationId: patchPipeline\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Must always be application/json\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The updated Pipeline\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pipeline'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pipeline'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n      x-codegen-request-body-name: body\n  /api/program/{programId}/pipeline/{pipelineId}/execution:\n    get:\n      tags:\n      - Pipeline Execution\n      summary: Get current pipeline execution\n      description: Returns current pipeline execution if any.\n      operationId: getCurrentExecution\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of current execution\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineExecution'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: No pipeline execution exits or unknown pipeline or program\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n    put:\n      tags:\n      - Pipeline Execution\n      summary: Start the pipeline\n      description: Starts the Pipeline. This works only if the pipeline is not already\n        started.\n      operationId: startPipeline\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Must always be application/json\n        required: true\n        schema:\n          type: string\n      responses:\n        201:\n          description: Successful started pipeline execution\n          content: {}\n        400:\n          description: Request conflicts with the expected state of pipeline\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: No pipeline execution exits or unknown pipeline or application\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        412:\n          description: Pipeline is busy\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}:\n    get:\n      tags:\n      - Pipeline Execution\n      summary: Get pipeline execution\n      description: Returns a pipeline execution by id\n      operationId: getExecution\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: executionId\n        in: path\n        description: Identifier of the execution\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of execution\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineExecution'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: No pipeline execution exits or unknown pipeline or application\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}:\n    get:\n      tags:\n      - Pipeline Execution\n      summary: Get step state\n      operationId: stepState\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: executionId\n        in: path\n        description: Identifier of the execution\n        required: true\n        schema:\n          type: string\n      - name: phaseId\n        in: path\n        description: Identifier of the phase\n        required: true\n        schema:\n          type: string\n      - name: stepId\n        in: path\n        description: Identifier of the step\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of step state\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pipeline Execution Step State'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: Missing permission for user to read step\n          content: {}\n        404:\n          description: Pipeline execution does not exist\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/advance:\n    put:\n      tags:\n      - Pipeline Execution\n      summary: Advance\n      description: Post to this url in order to advance the current pipeline execution,\n        if paused and waiting for user interaction. Link is present in output only\n        in that case. The input depends on the actual reason for which the pipeline\n        execution stopped.\n      operationId: advancePipelineExecution\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: executionId\n        in: path\n        description: Identifier of the execution\n        required: true\n        schema:\n          type: string\n      - name: phaseId\n        in: path\n        description: Identifier of the phase\n        required: true\n        schema:\n          type: string\n      - name: stepId\n        in: path\n        description: Identifier of the step\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Must always be application/json\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Input for advance. See documentation for details.\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      responses:\n        202:\n          description: Successful resume of pipeline execution\n          content: {}\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: Missing permission for user to advance the pipeline execution\n          content: {}\n        404:\n          description: No pipeline execution exits or unknown pipeline or program\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n      x-codegen-request-body-name: body\n  /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/cancel:\n    put:\n      tags:\n      - Pipeline Execution\n      summary: Cancel\n      description: Post to this url in order to cancel the current pipeline execution.\n        Link is present in output only in that case.\n      operationId: cancelPipelineExecutionStep\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: executionId\n        in: path\n        description: Identifier of the execution\n        required: true\n        schema:\n          type: string\n      - name: phaseId\n        in: path\n        description: Identifier of the phase\n        required: true\n        schema:\n          type: string\n      - name: stepId\n        in: path\n        description: Identifier of the step\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Must always be application/json\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Input for advance. See documentation for details.\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      responses:\n        202:\n          description: Successful cancel of pipeline execution\n          content: {}\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: Missing permission for user to cancel the current pipeline\n            execution\n          content: {}\n        404:\n          description: No pipeline execution exits or unknown pipeline or program\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n      x-codegen-request-body-name: body\n  /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/logs:\n    get:\n      tags:\n      - Pipeline Execution\n      summary: Get logs\n      description: Get the logs associated with a step.\n      operationId: getStepLogs\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: executionId\n        in: path\n        description: Identifier of the execution\n        required: true\n        schema:\n          type: string\n      - name: phaseId\n        in: path\n        description: Identifier of the phase\n        required: true\n        schema:\n          type: string\n      - name: stepId\n        in: path\n        description: Identifier of the step\n        required: true\n        schema:\n          type: string\n      - name: file\n        in: query\n        description: Identifier of the log file\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Specify application/json in this header to receive a JSON response.\n          Otherwise, a 307 response code will be returned with a Location header.\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of logs\n          content: {}\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: Missing permission for user to read logs\n          content: {}\n        404:\n          description: Pipeline execution does not exist\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/pipeline/{pipelineId}/execution/{executionId}/phase/{phaseId}/step/{stepId}/metrics:\n    get:\n      tags:\n      - Pipeline Execution\n      summary: Get step metrics\n      operationId: stepMetric\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: executionId\n        in: path\n        description: Identifier of the execution\n        required: true\n        schema:\n          type: string\n      - name: phaseId\n        in: path\n        description: Identifier of the phase\n        required: true\n        schema:\n          type: string\n      - name: stepId\n        in: path\n        description: Identifier of the step\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of metrics\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pipeline Step Metrics'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: Missing permission for user to read metrics\n          content: {}\n        404:\n          description: Pipeline execution does not exist\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/pipeline/{pipelineId}/executions:\n    get:\n      tags:\n      - Pipeline Execution\n      summary: List Executions\n      description: Returns the history of pipeline executions in a newest to oldest\n        order\n      operationId: getExecutions\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program.\n        required: true\n        schema:\n          type: string\n      - name: pipelineId\n        in: path\n        description: Identifier of the pipeline\n        required: true\n        schema:\n          type: string\n      - name: start\n        in: query\n        description: Pagination start parameter\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Pagination limit parameter\n        schema:\n          type: integer\n          format: int32\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of execution history\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineExecutionListRepresentation'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: Missing permission for user to read executions\n          content: {}\n        404:\n          description: Pipeline does not exist\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        409:\n          description: The resource was modified before the call. Client should reload\n            and try again\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/environments:\n    get:\n      tags:\n      - Environments\n      summary: List Environments\n      description: Lists all environments in an program\n      operationId: getEnvironments\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: type\n        in: query\n        description: Type of the environment\n        schema:\n          type: string\n          enum:\n          - dev\n          - stage\n          - prod\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of environment list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment List'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: Program not found\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/environment/{environmentId}:\n    get:\n      tags:\n      - Environments\n      summary: Get Environment\n      description: Returns an environment by its id\n      operationId: getEnvironment\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: environmentId\n        in: path\n        description: Identifier of the environment\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n    delete:\n      tags:\n      - Environments\n      summary: DeleteEnvironment\n      description: Delete environment\n      operationId: deleteEnvironment\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the application\n        required: true\n        schema:\n          type: string\n      - name: environmentId\n        in: path\n        description: Identifier of the environment\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        201:\n          description: Environment deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n        400:\n          description: Environment deletion in progress\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: Environment not found\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/environment/{environmentId}/logs:\n    get:\n      tags:\n      - Environments\n      summary: Get Environment Logs\n      description: List all logs available in environment\n      operationId: getEnvironmentLogs\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: environmentId\n        in: path\n        description: Identifier of the environment\n        required: true\n        schema:\n          type: string\n      - name: service\n        in: query\n        description: Names of services\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      - name: name\n        in: query\n        description: Names of log\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n      - name: days\n        in: query\n        description: number of days for which logs are required\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of logs for an environment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnvironmentLogs'\n        400:\n          description: invalid parameters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: Environment not found\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/environment/{environmentId}/logs/download:\n    get:\n      tags:\n      - Environments\n      summary: Download Logs\n      description: Download environment logs\n      operationId: downloadLogs\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: environmentId\n        in: path\n        description: Identifier of the environment\n        required: true\n        schema:\n          type: string\n      - name: service\n        in: query\n        description: Name of service\n        required: true\n        schema:\n          type: string\n      - name: name\n        in: query\n        description: Name of log\n        required: true\n        schema:\n          type: string\n      - name: date\n        in: query\n        description: date for which log is required\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        description: Specify application/json in this header to receive a JSON response.\n          Otherwise, a 307 response code will be returned with a Location header.\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of logs\n          content: {}\n        400:\n          description: invalid parameters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: Environment not found\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n  /api/program/{programId}/environment/{environmentId}/variables:\n    get:\n      tags:\n      - Environment Variables\n      summary: List User Environment Variables\n      description: List the user defined variables for an environment\n      operationId: getEnvironmentVariables\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n        example: \"2351\"\n      - name: environmentId\n        in: path\n        description: Identifier of the environment\n        required: true\n        schema:\n          type: string\n        example: \"128\"\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful retrieval of environment variables\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable List'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: Environment not found\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n    patch:\n      tags:\n      - Environment Variables\n      summary: Patch User Environment Variables\n      description: Modify multiple environment variables. To delete a variable, include\n        it with an empty value.\n      operationId: patchEnvironmentVariables\n      parameters:\n      - name: programId\n        in: path\n        description: Identifier of the program\n        required: true\n        schema:\n          type: string\n      - name: environmentId\n        in: path\n        description: Identifier of the environment\n        required: true\n        schema:\n          type: string\n      - name: x-gw-ims-org-id\n        in: header\n        description: IMS organization ID that the request is being made under.\n        required: true\n        schema:\n          type: string\n      - name: Authorization\n        in: header\n        description: Bearer [token] - An access token for the technical account created\n          through integration with Adobe IO\n        required: true\n        schema:\n          type: string\n      - name: x-api-key\n        in: header\n        description: IMS Client ID (API Key) which is subscribed to consume services\n          on console.adobe.io\n        required: true\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        description: Must always be application/json\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: List of variables\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Variable'\n        required: true\n      responses:\n        200:\n          description: Successful update of environment variables\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable List'\n        400:\n          description: The request is malformed.\n          content: {}\n        401:\n          description: The request has not been applied because it lacks valid authentication\n            credentials for the target resource.\n          content: {}\n        403:\n          description: The requester is not authorized to access the resource.\n          content: {}\n        404:\n          description: Environment not found\n          content: {}\n        405:\n          description: Client sent a request using a HTTP method that the server doesn't\n            support.\n          content: {}\n        406:\n          description: Unacceptable content type. Client sent an Accept header for\n            a content type which does not exist on the server.\n          content: {}\n        500:\n          description: This is an indicator of a server-side error.\n          content: {}\n        502:\n          description: This is an indicator that the back-end service did not send\n            a valid response.\n          content: {}\n        503:\n          description: This is an indicator of a potential server overload.\n          content: {}\n        504:\n          description: This is an indicator that the back-end service did not complete\n            a response within an allowed time period.\n          content: {}\n      x-codegen-request-body-name: body\ncomponents:\n  schemas:\n    Program List:\n      type: object\n      properties:\n        _totalNumberOfItems:\n          type: integer\n          format: int32\n        _embedded:\n          type: object\n          properties:\n            programs:\n              type: array\n              items:\n                $ref: '#/components/schemas/Embedded Program'\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HalLink'\n            prev:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n    Embedded Program:\n      required:\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the program. Unique within the space.\n          readOnly: true\n          example: \"14\"\n        name:\n          type: string\n          description: Name of the program\n          example: AcmeCorp Main Site\n        enabled:\n          type: boolean\n          description: Whether this Program has been enabled for Cloud Manager usage\n          readOnly: true\n        tenantId:\n          type: string\n          description: Tenant Id\n          readOnly: true\n          example: acmeCorp\n        _links:\n          type: object\n          properties:\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: Describes an __Embedded Program__\n    Program:\n      required:\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the program. Unique within the space.\n          readOnly: true\n          example: \"14\"\n        name:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: Name of the program\n          example: AcmeCorp Main Site\n        enabled:\n          type: boolean\n          description: Whether this Program has been enabled for Cloud Manager usage\n        tenantId:\n          type: string\n          description: Tenant Id\n          example: acmeCorp\n        imsOrgId:\n          type: string\n          description: Organisation Id\n          example: 6522A55453334E247F120101@AdobeOrg\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/pipelines:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/environments:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/repositories:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: Describes a __Program__\n    HalLink:\n      type: object\n      properties:\n        href:\n          type: string\n        templated:\n          type: boolean\n        type:\n          type: string\n        deprecation:\n          type: string\n        profile:\n          type: string\n        title:\n          type: string\n        hreflang:\n          type: string\n        name:\n          type: string\n    Pipeline:\n      required:\n      - name\n      - phases\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the pipeline. Unique within the program.\n          example: \"29\"\n        programId:\n          type: string\n          description: Identifier of the program. Unique within the space.\n          example: \"14\"\n        name:\n          type: string\n          description: Name of the pipeline\n          example: AcmeCorp Main Pipeline\n        trigger:\n          type: string\n          description: 'How should the execution be triggered. ON_COMMIT: each time\n            a PR is available and the Pipeline is idle then a execution is triggered.\n            MANUAL: triggerd through UI or API. SCHEDULE: recurring schedule (not\n            yet implemented}'\n          example: MANUAL\n          enum:\n          - ON_COMMIT\n          - MANUAL\n          - SCHEDULE\n        status:\n          type: string\n          description: Pipeline status\n          example: RUNNING,FAILED\n          enum:\n          - IDLE\n          - BUSY\n          - WAITING\n        createdAt:\n          type: string\n          description: Create date\n          format: date-time\n          readOnly: true\n        updatedAt:\n          type: string\n          description: Update date\n          format: date-time\n          readOnly: true\n        lastStartedAt:\n          type: string\n          description: Last pipeline execution start\n          format: date-time\n          readOnly: true\n        lastFinishedAt:\n          type: string\n          description: Last pipeline execution end\n          format: date-time\n          readOnly: true\n        phases:\n          maxItems: 100\n          minItems: 1\n          type: array\n          description: Pipeline phases in execution order\n          items:\n            $ref: '#/components/schemas/Pipeline Phase'\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/program:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/execution:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/executions:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: Describes a __CI/CD Pipeline__\n    Pipeline Phase:\n      required:\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the phase\n          example: DEV Build\n        type:\n          type: string\n          description: Type of the phase\n          example: DEPLOY\n          enum:\n          - VALIDATE\n          - BUILD\n          - DEPLOY\n        repositoryId:\n          type: string\n          description: \"Identifier of the source repository. The code from this repository\\\n            \\ will be build at the start of this phase. \\nMandatory if type=BUILD\"\n        branch:\n          type: string\n          description: \"Name of the tracked branch or a fully qualified git tag (e.g.\\\n            \\ refs/tags/v1). \\n Assumed to be `master` if missing.\"\n        environmentId:\n          type: string\n          description: Identifier of the target environment. Mandatory if type=DEPLOY\n      description: Describes a phase of a pipeline\n    Pipeline List:\n      type: object\n      properties:\n        _totalNumberOfItems:\n          type: integer\n          format: int32\n        _embedded:\n          type: object\n          properties:\n            pipelines:\n              type: array\n              items:\n                $ref: '#/components/schemas/Pipeline'\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HalLink'\n            prev:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n    PipelineExecution:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Pipeline execution identifier\n        programId:\n          type: string\n          description: Identifier of the program. Unique within the space.\n          readOnly: true\n          example: \"14\"\n        pipelineId:\n          type: string\n          description: Identifier of the pipeline. Unique within the space.\n          readOnly: true\n          example: \"10\"\n        artifactsVersion:\n          type: string\n          description: Version of the artifacts generated during this execution\n        user:\n          type: string\n          description: AdobeID who started the pipeline. Empty for auto triggered\n            builds\n          example: 0123456789ABCDE@AdobeID\n        status:\n          type: string\n          description: Status of the execution\n          enum:\n          - NOT_STARTED\n          - RUNNING\n          - CANCELLING\n          - CANCELLED\n          - FINISHED\n          - ERROR\n          - FAILED\n        trigger:\n          type: string\n          description: How the execution was triggered.\n          enum:\n          - ON_COMMIT\n          - MANUAL\n          - SCHEDULE\n        createdAt:\n          type: string\n          description: Start time\n          format: date-time\n        updatedAt:\n          type: string\n          description: Date of last status change\n          format: date-time\n        finishedAt:\n          type: string\n          description: Date the execution reached a final state\n          format: date-time\n        _embedded:\n          type: object\n          properties:\n            stepStates:\n              type: array\n              items:\n                $ref: '#/components/schemas/Pipeline Execution Step State'\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/program:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/pipeline:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: Wraps a pipeline execution\n    Pipeline Execution Step State:\n      type: object\n      properties:\n        id:\n          type: string\n        stepId:\n          type: string\n        phaseId:\n          type: string\n        action:\n          type: string\n          description: Name of the action\n          example: build\n        repository:\n          type: string\n          description: Target repository\n        branch:\n          type: string\n          description: Target branch\n        environment:\n          type: string\n          description: Target environment\n        environmentType:\n          type: string\n          description: Target environment type\n        startedAt:\n          type: string\n          description: Start time\n          format: date-time\n        finishedAt:\n          type: string\n          description: Date the execution reached a final state\n          format: date-time\n        details:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n          description: Information about step result\n          example: scheduled time\n        status:\n          type: string\n          description: Action status\n          example: NOT_STARTED\n          enum:\n          - NOT_STARTED\n          - RUNNING\n          - FINISHED\n          - ERROR\n          - ROLLING_BACK\n          - ROLLED_BACK\n          - WAITING\n          - CANCELLED\n          - FAILED\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/execution:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/pipeline:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/pipeline/logs:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/pipeline/metrics:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/pipeline/advance:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/pipeline/cancel:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/program:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: Describes the status of a particular pipeline execution step for\n        display purposes\n    PipelineExecutionListRepresentation:\n      type: object\n      properties:\n        _totalNumberOfItems:\n          type: integer\n          format: int32\n        _page:\n          $ref: '#/components/schemas/RequestedPageDetails'\n        _embedded:\n          type: object\n          properties:\n            executions:\n              type: array\n              items:\n                $ref: '#/components/schemas/PipelineExecution'\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HalLink'\n            page:\n              $ref: '#/components/schemas/HalLink'\n            prev:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: List of pipeline executions\n    Pipeline Step Metrics:\n      type: object\n      properties:\n        metrics:\n          type: array\n          description: metrics\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/Metric'\n    Metric:\n      type: object\n      properties:\n        id:\n          type: string\n          description: KPI result identifier\n        severity:\n          type: string\n          description: Severity of the metric\n          enum:\n          - critical\n          - important\n          - informational\n        passed:\n          type: boolean\n          description: Whether metric is considered passed\n        override:\n          type: boolean\n          description: Whether user override the failed metric\n        actualValue:\n          type: string\n          description: Expected value for the metric\n        expectedValue:\n          type: string\n          description: Expected value for the metric\n        comparator:\n          type: string\n          description: Comparator used for the metric\n          enum:\n          - GT\n          - GTE\n          - LT\n          - LTE\n          - EQ\n          - NEQ\n        kpi:\n          type: string\n          description: KPI identifier\n      description: Describes a __Metric__\n    Environment List:\n      type: object\n      properties:\n        _totalNumberOfItems:\n          type: integer\n          format: int32\n        _embedded:\n          type: object\n          properties:\n            environments:\n              type: array\n              items:\n                $ref: '#/components/schemas/Environment'\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HalLink'\n            prev:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n    Environment:\n      type: object\n      properties:\n        id:\n          type: string\n          description: id\n          readOnly: true\n        programId:\n          type: string\n          description: Identifier of the program. Unique within the space.\n          readOnly: true\n          example: \"14\"\n        name:\n          type: string\n          description: Name of the environment\n          example: AcmeCorp Dev1 Environment\n        description:\n          type: string\n          description: Description of the environment\n          example: This is our primary development environment\n        type:\n          type: string\n          description: Type of the environment\n          example: dev\n          enum:\n          - dev\n          - stage\n          - prod\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/program:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/pipeline:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/author:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/publish:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/developerConsole:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/logs:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/variables:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: 'An Environment that '\n    Repository:\n      type: object\n      properties:\n        repo:\n          type: string\n          description: Repository name\n          example: Adobe-Marketing-Cloud\n        description:\n          type: string\n          description: description\n          example: Description\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/program:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/branches:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: A sourcecode repository\n    Repository List:\n      type: object\n      properties:\n        _totalNumberOfItems:\n          type: integer\n          format: int32\n        _embedded:\n          type: object\n          properties:\n            repositories:\n              type: array\n              items:\n                $ref: '#/components/schemas/Repository'\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HalLink'\n            prev:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n    RepositoryBranch:\n      type: object\n      properties:\n        programId:\n          type: string\n          description: Identifier of the program. Unique within the space\n          example: \"14\"\n        repositoryId:\n          type: integer\n          description: Identifier of the repository\n          format: int64\n          example: 2\n        name:\n          type: string\n          description: Name of the branch\n          example: master\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/program:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/repository:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: Represents a Git Branch\n    Branch List:\n      type: object\n      properties:\n        _totalNumberOfItems:\n          type: integer\n          format: int32\n        _embedded:\n          type: object\n          properties:\n            branches:\n              type: array\n              items:\n                $ref: '#/components/schemas/RepositoryBranch'\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            next:\n              $ref: '#/components/schemas/HalLink'\n            prev:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n    RequestedPageDetails:\n      type: object\n      properties:\n        limit:\n          type: integer\n          format: int32\n        orderBy:\n          type: string\n        property:\n          type: array\n          items:\n            type: string\n        type:\n          type: string\n        next:\n          type: integer\n          format: int32\n        prev:\n          type: integer\n          format: int32\n      description: Filtering and sorting page details\n    MissingParameter:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the missing parameter.\n          example: paramName\n        type:\n          type: string\n          description: Type of the missing parameter.\n          example: string\n    InvalidParameter:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the invalid parameter.\n          example: paramName\n        reason:\n          type: string\n          description: Reason of why the parameter's value is not accepted.\n          example: value must be a positive number\n    BadRequestError:\n      type: object\n      properties:\n        status:\n          type: integer\n          description: HTTP status code of the response.\n          format: int32\n        type:\n          type: string\n          description: Error type identifier.\n          example: http://ns.adobe.com/adobecloud/error\n        title:\n          type: string\n          description: A short summary of the error.\n          example: Validation failed\n        missingParams:\n          type: array\n          description: Request's missing parameters.\n          items:\n            $ref: '#/components/schemas/MissingParameter'\n        invalidParams:\n          type: array\n          description: Request's invalid parameters.\n          items:\n            $ref: '#/components/schemas/InvalidParameter'\n      description: A Bad Request response error.\n    EnvironmentLog:\n      type: object\n      properties:\n        service:\n          type: string\n          description: Name of the service\n          example: author\n        name:\n          type: string\n          description: Name of the Log\n          example: aemerror\n        date:\n          type: string\n          description: date of the Log\n          example: 2019-04-05\n        programId:\n          type: integer\n          format: int64\n        environmentId:\n          type: integer\n          format: int64\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/logs/download:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/logs/tail:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n      description: Log from Environment\n    EnvironmentLogs:\n      type: object\n      properties:\n        service:\n          type: array\n          description: Name of the service\n          example: author\n          items:\n            type: string\n        name:\n          type: array\n          description: Name of the Log\n          example: aemerror\n          items:\n            type: string\n        days:\n          type: integer\n          description: Number of days\n          format: int32\n          example: 2\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/program:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n        _embedded:\n          type: object\n          properties:\n            downloads:\n              type: array\n              description: Links to logs\n              items:\n                $ref: '#/components/schemas/EnvironmentLog'\n          readOnly: true\n      description: Logs of an Environment\n    Variable:\n      type: object\n      properties:\n        name:\n          maxLength: 100\n          minLength: 2\n          pattern: '[a-zA-Z_][a-zA-Z_0-9]*'\n          type: string\n          description: Name of the variable. Of a-z, A-Z, _ and 0-9 Cannot begin with\n            a number.\n          example: MY_VAR1\n        value:\n          maxLength: 2048\n          minLength: 0\n          type: string\n          description: Value of the variable. Read-Write for non-secrets, write-only\n            for secrets.\n          example: myValue\n        type:\n          type: string\n          description: Type of the variable. Default `string` if missing. Cannot be\n            changed after creation.\n          example: string\n          enum:\n          - string\n          - secretString\n      description: A named value than can be set on an Environment\n    Variable List:\n      type: object\n      properties:\n        _totalNumberOfItems:\n          type: integer\n          format: int32\n          example: 1\n        _embedded:\n          type: object\n          properties:\n            variables:\n              type: array\n              description: Variables set on environment\n              example: '[{ ''name'':''variable1Name'', ''value'':''variable1Value''},\n                { ''name'':''variable2Name'', ''type'':''secretString'', ''value'':''variable2SecretValue''}]'\n              items:\n                $ref: '#/components/schemas/Variable'\n          readOnly: true\n        _links:\n          type: object\n          properties:\n            http://ns.adobe.com/adobecloud/rel/environment:\n              $ref: '#/components/schemas/HalLink'\n            http://ns.adobe.com/adobecloud/rel/program:\n              $ref: '#/components/schemas/HalLink'\n            self:\n              $ref: '#/components/schemas/HalLink'\n          readOnly: true\n",
			"canonicalURL": "/github.com/ahmed-musallam/adobe-cloud-manager-desktop@da7026f58497fff2478b44eaebc48aac2224c690/-/blob/app/client/api_open-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ahmed-musallam/adobe-cloud-manager-desktop/blob/da7026f58497fff2478b44eaebc48aac2224c690/app/client/api_open-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: at 1:3140: invalid name: \"Environment List\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}