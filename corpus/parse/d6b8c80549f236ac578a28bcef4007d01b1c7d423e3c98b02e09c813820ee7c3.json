{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apache/apisix-dashboard"
		},
		"file": {
			"name": "Postman-API101.yaml",
			"size": 0,
			"path": "api/test/testdata/import/Postman-API101.yaml",
			"byteSize": 3955,
			"content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n###\n# This is the definition file for the Postman API101 sample.\n# It is converted from Postman Collection using postman2openapi.\nopenapi: 3.0.0\ninfo:\n  title: API 101\n  description: \u003e-\n    API 101 template for learning API request basics. Follow along with the\n    webinar / video or just open the first request and hit **Send**!\n  version: 1.0.0\nservers:\n  - url: https://api-101.glitch.me\n  - url: http://{{apiurl}}\ncomponents:\n  securitySchemes:\n    apikeyAuth:\n      type: http\n      scheme: apikey\npaths:\n  /customers:\n    get:\n      tags:\n        - default\n      summary: Get all customers\n      parameters:\n        - name: user-id\n          in: header\n          schema:\n            type: string\n          example: '{{userId}}'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /customer:\n    get:\n      tags:\n        - default\n      summary: Get one customer\n      parameters:\n        - name: user-id\n          in: header\n          schema:\n            type: string\n          example: '{{userId}}'\n        - name: id\n          in: query\n          schema:\n            type: integer\n          example: '1'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n    post:\n      tags:\n        - default\n      summary: Add new customer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                name: Dorothy Zborna\n                type: Individual\n      security:\n        - apikeyAuth: []\n      parameters:\n        - name: user-id\n          in: header\n          schema:\n            type: string\n          example: '{{userId}}'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /customer/{customer_id}:\n    put:\n      tags:\n        - default\n      summary: Update customer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                name: Sophia Petrillo\n                type: Individual\n      security:\n        - apikeyAuth: []\n      parameters:\n        - name: user-id\n          in: header\n          schema:\n            type: string\n          example: '{{userId}}'\n        - name: customer_id\n          in: path\n          schema:\n            type: integer\n          required: true\n          example: '1311'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n    delete:\n      tags:\n        - default\n      summary: Remove customer\n      security:\n        - apikeyAuth: []\n      parameters:\n        - name: user-id\n          in: header\n          schema:\n            type: string\n          example: '{{userId}}'\n        - name: customer_id\n          in: path\n          schema:\n            type: integer\n          required: true\n          example: '1310'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n",
			"canonicalURL": "/github.com/apache/apisix-dashboard@4e1acf064997be8808212f18ba458895eaf53c4d/-/blob/api/test/testdata/import/Postman-API101.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apache/apisix-dashboard/blob/4e1acf064997be8808212f18ba458895eaf53c4d/api/test/testdata/import/Postman-API101.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /customer: post: security: parse security scheme \"apikeyAuth\": http: invalid \"scheme\": \"apikey\""
}