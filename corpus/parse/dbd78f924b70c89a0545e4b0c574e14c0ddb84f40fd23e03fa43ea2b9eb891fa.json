{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nhost/nhost"
		},
		"file": {
			"name": "hasura-auth.json",
			"size": 0,
			"path": "docs/static/openapi/hasura-auth.json",
			"byteSize": 52769,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Hasura auth\",\n    \"description\": \"Authentication for Hasura\",\n    \"license\": { \"name\": \"MIT\", \"url\": \"\" },\n    \"termsOfService\": \"\",\n    \"version\": \"0.5.0\"\n  },\n  \"servers\": [],\n  \"security\": [{ \"BearerAuth\": [] }],\n  \"components\": {\n    \"securitySchemes\": { \"BearerAuth\": { \"type\": \"http\", \"scheme\": \"bearer\" } },\n    \"schemas\": {\n      \"SignInPasswordlessEmailSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"locale\": {\n                \"type\": \"string\",\n                \"description\": \"A two-characters locale\",\n                \"example\": \"en\",\n                \"default\": \"en\"\n              },\n              \"defaultRole\": {\n                \"type\": \"string\",\n                \"enum\": [\"me\", \"user\"],\n                \"example\": \"user\",\n                \"default\": \"user\"\n              },\n              \"allowedRoles\": {\n                \"type\": \"array\",\n                \"items\": { \"oneOf\": [{ \"enum\": [\"me\"] }, { \"enum\": [\"user\"] }] },\n                \"example\": [\"me\", \"user\"],\n                \"default\": [\"me\", \"user\"]\n              },\n              \"displayName\": { \"type\": \"string\", \"example\": \"John Smith\" },\n              \"metadata\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": false,\n                \"example\": { \"firstName\": \"John\", \"lastName\": \"Smith\" },\n                \"default\": {}\n              },\n              \"redirectTo\": {\n                \"type\": \"string\",\n                \"pattern\": \"^https:\\\\/\\\\/my-app.com\",\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\"email\"],\n        \"additionalProperties\": false\n      },\n      \"SignUpEmailPasswordSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"minLength\": 3,\n            \"description\": \"A password of minimum 3 characters\",\n            \"example\": \"Str0ngPassw#ord-94|%\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"locale\": {\n                \"type\": \"string\",\n                \"description\": \"A two-characters locale\",\n                \"example\": \"en\",\n                \"default\": \"en\"\n              },\n              \"defaultRole\": {\n                \"type\": \"string\",\n                \"enum\": [\"me\", \"user\"],\n                \"example\": \"user\",\n                \"default\": \"user\"\n              },\n              \"allowedRoles\": {\n                \"type\": \"array\",\n                \"items\": { \"oneOf\": [{ \"enum\": [\"me\"] }, { \"enum\": [\"user\"] }] },\n                \"example\": [\"me\", \"user\"],\n                \"default\": [\"me\", \"user\"]\n              },\n              \"displayName\": { \"type\": \"string\", \"example\": \"John Smith\" },\n              \"metadata\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": false,\n                \"example\": { \"firstName\": \"John\", \"lastName\": \"Smith\" },\n                \"default\": {}\n              },\n              \"redirectTo\": {\n                \"type\": \"string\",\n                \"pattern\": \"^https:\\\\/\\\\/my-app.com\",\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\"email\", \"password\"],\n        \"additionalProperties\": false\n      },\n      \"SignInEmailPasswordSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"password\": { \"type\": \"string\", \"example\": \"Str0ngPassw#ord-94|%\" }\n        },\n        \"required\": [\"email\", \"password\"],\n        \"additionalProperties\": false\n      },\n      \"SignInPasswordlessSmsSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"phoneNumber\": { \"type\": \"string\" },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"locale\": {\n                \"type\": \"string\",\n                \"description\": \"A two-characters locale\",\n                \"example\": \"en\",\n                \"default\": \"en\"\n              },\n              \"defaultRole\": {\n                \"type\": \"string\",\n                \"enum\": [\"me\", \"user\"],\n                \"example\": \"user\",\n                \"default\": \"user\"\n              },\n              \"allowedRoles\": {\n                \"type\": \"array\",\n                \"items\": { \"oneOf\": [{ \"enum\": [\"me\"] }, { \"enum\": [\"user\"] }] },\n                \"example\": [\"me\", \"user\"],\n                \"default\": [\"me\", \"user\"]\n              },\n              \"displayName\": { \"type\": \"string\", \"example\": \"John Smith\" },\n              \"metadata\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": false,\n                \"example\": { \"firstName\": \"John\", \"lastName\": \"Smith\" },\n                \"default\": {}\n              },\n              \"redirectTo\": {\n                \"type\": \"string\",\n                \"pattern\": \"^https:\\\\/\\\\/my-app.com\",\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\"phoneNumber\"],\n        \"additionalProperties\": false\n      },\n      \"SignInOtpSchema\": {\n        \"type\": \"object\",\n        \"properties\": { \"phoneNumber\": { \"type\": \"string\" }, \"otp\": { \"type\": \"string\" } },\n        \"required\": [\"phoneNumber\", \"otp\"],\n        \"additionalProperties\": false\n      },\n      \"SignInMfaTotpSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ticket\": {\n            \"type\": \"string\",\n            \"pattern\": \"mfaTotp:\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"example\": \"mfaTotp:e08204c7-40af-4434-a7ed-31c6aa37a390\"\n          },\n          \"otp\": { \"type\": \"string\" }\n        },\n        \"required\": [\"ticket\", \"otp\"],\n        \"additionalProperties\": false\n      },\n      \"SignInAnonymousSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"locale\": {\n            \"type\": \"string\",\n            \"description\": \"A two-characters locale\",\n            \"example\": \"en\",\n            \"default\": \"en\"\n          },\n          \"displayName\": { \"type\": \"string\", \"example\": \"John Smith\" },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"additionalProperties\": false,\n            \"example\": { \"firstName\": \"John\", \"lastName\": \"Smith\" },\n            \"default\": {}\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SignOutSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Refresh token during authentication or when refreshing the JWT\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          },\n          \"all\": {\n            \"type\": \"boolean\",\n            \"description\": \"Sign out from all connected devices\",\n            \"default\": false\n          }\n        },\n        \"required\": [\"refreshToken\"],\n        \"additionalProperties\": false\n      },\n      \"UserPasswordResetSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"redirectTo\": {\n                \"type\": \"string\",\n                \"pattern\": \"^https:\\\\/\\\\/my-app.com\",\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\"email\"],\n        \"additionalProperties\": false\n      },\n      \"UserPasswordSchema\": {\n        \"type\": \"object\",\n        \"properties\": { \"newPassword\": { \"type\": \"string\", \"example\": \"Str0ngPassw#ord-94|%\" } },\n        \"required\": [\"newPassword\"],\n        \"additionalProperties\": false\n      },\n      \"UserEmailChangeSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"newEmail\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"redirectTo\": {\n                \"type\": \"string\",\n                \"pattern\": \"^https:\\\\/\\\\/my-app.com\",\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserEmailSendVerificationEmailSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"redirectTo\": {\n                \"type\": \"string\",\n                \"pattern\": \"^https:\\\\/\\\\/my-app.com\",\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\"email\"],\n        \"additionalProperties\": false\n      },\n      \"UserMfaSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": { \"type\": \"string\", \"description\": \"MFA activation code\" },\n          \"activeMfaType\": {\n            \"anyOf\": [\n              { \"type\": \"string\", \"enum\": [\"\"] },\n              { \"type\": \"string\", \"enum\": [\"totp\"] }\n            ],\n            \"description\": \"Multi-factor authentication type. A null value deactivates MFA\",\n            \"example\": \"totp\"\n          }\n        },\n        \"required\": [\"code\"],\n        \"additionalProperties\": false\n      },\n      \"UserDeanonymizeSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signInMethod\": {\n            \"type\": \"string\",\n            \"enum\": [\"email-password\", \"passwordless\"],\n            \"example\": \"email-password\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"password\": { \"type\": \"string\", \"example\": \"Str0ngPassw#ord-94|%\" },\n          \"connection\": { \"type\": \"string\", \"example\": \"email\" },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"locale\": {\n                \"type\": \"string\",\n                \"description\": \"A two-characters locale\",\n                \"example\": \"en\",\n                \"default\": \"en\"\n              },\n              \"defaultRole\": {\n                \"type\": \"string\",\n                \"enum\": [\"me\", \"user\"],\n                \"example\": \"user\",\n                \"default\": \"user\"\n              },\n              \"allowedRoles\": {\n                \"type\": \"array\",\n                \"items\": { \"oneOf\": [{ \"enum\": [\"me\"] }, { \"enum\": [\"user\"] }] },\n                \"example\": [\"me\", \"user\"],\n                \"default\": [\"me\", \"user\"]\n              },\n              \"displayName\": { \"type\": \"string\", \"example\": \"John Smith\" },\n              \"metadata\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": false,\n                \"example\": { \"firstName\": \"John\", \"lastName\": \"Smith\" },\n                \"default\": {}\n              },\n              \"redirectTo\": {\n                \"type\": \"string\",\n                \"pattern\": \"^https:\\\\/\\\\/my-app.com\",\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\"signInMethod\", \"email\"],\n        \"additionalProperties\": false\n      },\n      \"UserProviderTokensSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"providerId\": { \"type\": \"string\" },\n          \"userId\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Id of the user\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          }\n        },\n        \"required\": [\"providerId\", \"userId\"],\n        \"additionalProperties\": false\n      },\n      \"TokenSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Refresh token during authentication or when refreshing the JWT\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          }\n        },\n        \"required\": [\"refreshToken\"],\n        \"additionalProperties\": false\n      },\n      \"VerifySchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"redirectTo\": {\n            \"type\": \"string\",\n            \"pattern\": \"^https:\\\\/\\\\/my-app.com\",\n            \"example\": \"https://my-app.com/catch-redirection\",\n            \"default\": \"https://my-app.com\"\n          },\n          \"ticket\": { \"type\": \"string\" },\n          \"type\": { \"type\": \"string\" }\n        },\n        \"required\": [\"redirectTo\", \"ticket\", \"type\"],\n        \"additionalProperties\": false\n      },\n      \"RouteNotFoundError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"route-not-found\"] },\n          \"message\": { \"enum\": [\"Route not found\"] },\n          \"status\": { \"enum\": [404] }\n        },\n        \"additionalProperties\": false\n      },\n      \"DisabledEndpointError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"disabled-endpoint\"] },\n          \"message\": { \"enum\": [\"This endpoint is disabled\"] },\n          \"status\": { \"enum\": [404] }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidRequestError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"invalid-request\"] },\n          \"message\": { \"enum\": [\"The request payload is incorrect\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"DisabledMfaTotpError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"disabled-mfa-totp\"] },\n          \"message\": { \"enum\": [\"MFA TOTP is not enabled for this user\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"NoTotpSecretError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"no-totp-secret\"] },\n          \"message\": { \"enum\": [\"OTP secret is not set for user\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"DisabledUserError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"disabled-user\"] },\n          \"message\": { \"enum\": [\"User is disabled\"] },\n          \"status\": { \"enum\": [401] }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidEmailPasswordError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"invalid-email-password\"] },\n          \"message\": { \"enum\": [\"Incorrect email or password\"] },\n          \"status\": { \"enum\": [401] }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidOtpError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"invalid-otp\"] },\n          \"message\": { \"enum\": [\"Invalid or expired OTP\"] },\n          \"status\": { \"enum\": [401] }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidTicketError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"invalid-ticket\"] },\n          \"message\": { \"enum\": [\"Invalid or expired verification ticket\"] },\n          \"status\": { \"enum\": [401] }\n        },\n        \"additionalProperties\": false\n      },\n      \"UnverifiedUserError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"unverified-user\"] },\n          \"message\": { \"enum\": [\"Email is not verified\"] },\n          \"status\": { \"enum\": [401] }\n        },\n        \"additionalProperties\": false\n      },\n      \"EmailAlreadyInUseError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"email-already-in-use\"] },\n          \"message\": { \"enum\": [\"Email already in use\"] },\n          \"status\": { \"enum\": [409] }\n        },\n        \"additionalProperties\": false\n      },\n      \"MfaTypeNotFoundError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"mfa-type-not-found\"] },\n          \"message\": { \"enum\": [\"There is no active MFA set for the user\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"EmailAlreadyVerifiedError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"email-already-verified\"] },\n          \"message\": { \"enum\": [\"User's email is already verified\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"TotpAlreadyActiveError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"totp-already-active\"] },\n          \"message\": { \"enum\": [\"TOTP MFA already active\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserNotFoundError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"user-not-found\"] },\n          \"message\": { \"enum\": [\"No user found\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserNotAnonymousError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"user-not-anonymous\"] },\n          \"message\": { \"enum\": [\"Logged in user is not anonymous\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidRefreshTokenError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"invalid-refresh-token\"] },\n          \"message\": { \"enum\": [\"Invalid or expired refresh token\"] },\n          \"status\": { \"enum\": [401] }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidRedirectionError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"invalid-redirection\"] },\n          \"message\": { \"enum\": [\"Invalid or missing redirectTo\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidAdminSecretError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"invalid-admin-secret\"] },\n          \"message\": { \"enum\": [\"Invalid admin secret\"] },\n          \"status\": { \"enum\": [401] }\n        },\n        \"additionalProperties\": false\n      },\n      \"UnauthenticatedUserError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"unauthenticated-user\"] },\n          \"message\": { \"enum\": [\"User is not logged in\"] },\n          \"status\": { \"enum\": [401] }\n        },\n        \"additionalProperties\": false\n      },\n      \"ForbiddenEndpointInProductionError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"forbidden-endpoint-in-production\"] },\n          \"message\": { \"enum\": [\"This endpoint is only available on test environments\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidSignInMethodError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"enum\": [\"invalid-sign-in-method\"] },\n          \"message\": { \"enum\": [\"Incorrect sign in method\"] },\n          \"status\": { \"enum\": [400] }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Id of the user\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          },\n          \"createdAt\": { \"type\": \"string\", \"format\": \"date-time\" },\n          \"displayName\": { \"type\": \"string\", \"example\": \"John Smith\" },\n          \"avatarUrl\": { \"type\": \"string\" },\n          \"locale\": {\n            \"type\": \"string\",\n            \"description\": \"A two-characters locale\",\n            \"example\": \"en\",\n            \"default\": \"en\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"isAnonymous\": { \"type\": \"boolean\", \"default\": false },\n          \"defaultRole\": {\n            \"type\": \"string\",\n            \"enum\": [\"me\", \"user\"],\n            \"example\": \"user\",\n            \"default\": \"user\"\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"additionalProperties\": false,\n            \"example\": { \"firstName\": \"John\", \"lastName\": \"Smith\" },\n            \"default\": {}\n          },\n          \"activeMfaType\": {\n            \"anyOf\": [\n              { \"type\": \"string\", \"enum\": [\"\"] },\n              { \"type\": \"string\", \"enum\": [\"totp\"] }\n            ],\n            \"description\": \"Multi-factor authentication type. A null value deactivates MFA\",\n            \"example\": \"totp\"\n          },\n          \"emailVerified\": { \"type\": \"boolean\", \"default\": false },\n          \"phoneNumber\": { \"type\": \"string\" },\n          \"phoneNumberVerified\": { \"type\": \"boolean\", \"default\": false },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": { \"oneOf\": [{ \"enum\": [\"me\"] }, { \"enum\": [\"user\"] }] },\n            \"example\": [\"me\", \"user\"],\n            \"default\": [\"me\", \"user\"]\n          }\n        },\n        \"required\": [\n          \"createdAt\",\n          \"displayName\",\n          \"avatarUrl\",\n          \"locale\",\n          \"email\",\n          \"isAnonymous\",\n          \"defaultRole\",\n          \"metadata\",\n          \"activeMfaType\",\n          \"emailVerified\",\n          \"phoneNumber\",\n          \"phoneNumberVerified\",\n          \"roles\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Session\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessToken\": { \"type\": \"string\" },\n          \"accessTokenExpiresIn\": { \"type\": \"number\", \"format\": \"float\" },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Refresh token during authentication or when refreshing the JWT\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          },\n          \"user\": { \"$ref\": \"#/components/schemas/User\" }\n        },\n        \"required\": [\"accessToken\", \"accessTokenExpiresIn\", \"refreshToken\"],\n        \"additionalProperties\": false\n      },\n      \"Mfa\": {\n        \"type\": \"object\",\n        \"properties\": { \"ticket\": { \"type\": \"string\" } },\n        \"additionalProperties\": false\n      },\n      \"SessionPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"session\": { \"$ref\": \"#/components/schemas/Session\" },\n          \"mfa\": { \"$ref\": \"#/components/schemas/Mfa\" }\n        },\n        \"additionalProperties\": false\n      },\n      \"TotpPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imageUrl\": { \"type\": \"string\", \"description\": \"Data URL of the QR code\" },\n          \"totpSecret\": { \"type\": \"string\", \"description\": \"TOTP secret\" }\n        },\n        \"required\": [\"imageUrl\", \"totpSecret\"],\n        \"additionalProperties\": false\n      },\n      \"UnauthorizedError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": { \"type\": \"string\" },\n          \"status\": { \"enum\": [401] },\n          \"message\": { \"type\": \"string\" }\n        },\n        \"required\": [\"error\", \"status\"],\n        \"additionalProperties\": false\n      },\n      \"Version\": { \"type\": \"string\", \"example\": \"0.5.0\" }\n    }\n  },\n  \"paths\": {\n    \"/healthz\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Check if the server is up and running\",\n        \"security\": [],\n        \"responses\": { \"200\": { \"description\": \"Success\" } },\n        \"parameters\": [],\n        \"tags\": [\"General\"]\n      }\n    },\n    \"/version\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Get the current Hasura-auth version\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Hasura auth version\",\n            \"content\": { \"text/plain\": { \"schema\": { \"$ref\": \"#/components/schemas/Version\" } } }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"General\"]\n      }\n    },\n    \"/mfa/totp/generate\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Generate a secret to request the activation of Time-based One-Time Password (TOTP) multi-factor authentication\",\n        \"security\": [{ \"BearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/TotpPayload\" } }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/UnauthenticatedUserError\" }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/DisabledEndpointError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"User management\"]\n      }\n    },\n    \"/signin/email-password\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Authenticate with email + password\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Signed in successfully\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SessionPayload\" } }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid email or password, or user is not verified\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UnauthorizedError\" } }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/DisabledEndpointError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Authentication\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SignInEmailPasswordSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/passwordless/email\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Email passwordless authentication\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Email sent successfully\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is disabled\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/DisabledUserError\" } }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/DisabledEndpointError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Authentication\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SignInPasswordlessEmailSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/passwordless/sms\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Send a one-time password by SMS\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"SMS sent successfully\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/DisabledEndpointError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Authentication\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SignInPasswordlessSmsSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/passwordless/sms/otp\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Passwordless authentication from a one-time password code received by SMS\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully authenticated\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SessionPayload\" } }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Error processing the request\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UnauthorizedError\" } }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/DisabledEndpointError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Authentication\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SignInOtpSchema\" } }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/anonymous\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Anonymous authentication\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully authenticated\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SessionPayload\" } }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/DisabledEndpointError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Authentication\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SignInAnonymousSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/mfa/totp\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Sign in with a Time-base One-Time Password (TOTP) ticket\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully authenticated\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SessionPayload\" } }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/DisabledEndpointError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Authentication\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SignInMfaTotpSchema\" } }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/provider/{provider}\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"\",\n        \"security\": [],\n        \"responses\": {},\n        \"parameters\": [\n          {\n            \"name\": \"provider\",\n            \"in\": \"path\",\n            \"description\": \"name param description\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"github\",\n                \"google\",\n                \"facebook\",\n                \"twitter\",\n                \"apple\",\n                \"windowslive\",\n                \"linkedin\",\n                \"spotify\",\n                \"strava\",\n                \"gitlab\",\n                \"bitbucket\"\n              ]\n            }\n          },\n          {\n            \"name\": \"redirectUrl\",\n            \"in\": \"query\",\n            \"description\": \"-\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"tags\": [\"Authentication\"]\n      }\n    },\n    \"/signin/provider/{provider}/callback\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Oauth callback url, that will be used by the Oauth provider, to redirect to the client application. Attention: all providers are using a GET operation, except Apple that uses POST\",\n        \"security\": [],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"Redirect to the initial url given as a query parameter in /signin/provider/{provider}\",\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"string\" } } }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"provider\",\n            \"in\": \"path\",\n            \"description\": \"name param description\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"github\",\n                \"google\",\n                \"facebook\",\n                \"twitter\",\n                \"apple\",\n                \"windowslive\",\n                \"linkedin\",\n                \"spotify\",\n                \"strava\",\n                \"gitlab\",\n                \"bitbucket\"\n              ]\n            }\n          },\n          {\n            \"name\": \"redirectUrl\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"tags\": [\"Authentication\"]\n      }\n    },\n    \"/signout\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Sign out\",\n        \"security\": [{ \"BearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully signed out\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User must be signed in to sign out from all sessions\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/UnauthenticatedUserError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Sign out\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SignOutSchema\" } }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signup/email-password\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Signup with email and password\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully registered. Null session means email verification is pending\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SessionPayload\" } }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Email is already present in the database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/EmailAlreadyInUseError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Registration\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/SignUpEmailPasswordSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/token\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Refresh the access token (JWT) and the refresh token\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully authenticated\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/SessionPayload\" } }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated user or invalid token\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UnauthorizedError\" } }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"General\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/TokenSchema\" } }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Get user information\",\n        \"security\": [{ \"BearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User information\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/User\" } } }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/UnauthenticatedUserError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"User management\"]\n      }\n    },\n    \"/user/password/reset\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Send an email asking the user to reset their password\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The email to reset the password has been sent\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"User management\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserPasswordResetSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/password\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Set a new password\",\n        \"security\": [{ \"BearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The password has been successfully changed\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/UnauthenticatedUserError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"User management\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UserPasswordSchema\" } }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/email/send-verification-email\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Send an email to verify the account\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"User management\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserEmailSendVerificationEmailSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/email/change\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Change the current user's email\",\n        \"security\": [{ \"BearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A verification email has been sent to the new email\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/UnauthenticatedUserError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"User management\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserEmailChangeSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/mfa\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Activate/deactivate Multi-factor authentication\",\n        \"security\": [{ \"BearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/UnauthenticatedUserError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Authentication\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UserMfaSchema\" } }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/deanonymize\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"'Deanonymize' an anonymous user in adding missing email or email+password, depending on the chosen authentication method. Will send a confirmation email if the server is configured to do so.\",\n        \"security\": [{ \"BearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/UnauthenticatedUserError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\"Authentication\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserDeanonymizeSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/provider/tokens\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Refresh the Oauth access tokens of a given user. You must be an admin to perform this operation.\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": { \"text/plain\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Incorrect admin secret header\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidAdminSecretError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"x-hasura-admin-secret\",\n            \"in\": \"header\",\n            \"description\": \"Hasura admin secret\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"tags\": [\"User management\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/UserProviderTokensSchema\" }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/verify\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Verify tickets created by email verification, email passwordless authentication, or password reset\",\n        \"security\": [],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"{redirectTo}#refreshToken=${refreshToken}\u0026type=${type}\",\n            \"content\": { \"application/json\": { \"schema\": { \"type\": \"string\" } } }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/InvalidRequestError\" }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"ticket\",\n            \"in\": \"query\",\n            \"description\": \"Ticket generated in the previous actions and sent by email\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"name param description\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"emailVerify\", \"emailConfirmChange\", \"signinPasswordless\", \"passwordReset\"]\n            }\n          },\n          {\n            \"name\": \"redirectTo\",\n            \"in\": \"query\",\n            \"description\": \"Redirection link\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"tags\": [\"General\"]\n      }\n    }\n  },\n  \"tags\": []\n}\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"SignInPasswordlessSmsSchema\": parse schema: property \"options\": parse schema: property \"allowedRoles\": parse default: callback: validate item: unexpected type: \"\""
}