{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Azure/apim-landing-zone-accelerator"
		},
		"file": {
			"name": "todo-openapi.yaml",
			"size": 0,
			"path": "src/definitions/todo-openapi.yaml",
			"byteSize": 1539,
			"content": "openapi: 3.0.1\ninfo:\n  title: apim-todo\n  version: '1.0'\npaths:\n  /todo:\n    post:\n      summary: CreateTodo\n      operationId: createtodo\n      responses:\n        '200':\n          description: \n    get:\n      summary: GetTodos\n      operationId: gettodos\n      responses:\n        '200':\n          description: \n  '/todo/{id}':\n    get:\n      summary: GetTodoById\n      operationId: gettodobyid\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: ''\n      responses:\n        '200':\n          description: \n    put:\n      summary: UpdateTodo\n      operationId: updatetodo\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: ''\n      responses:\n        '200':\n          description: \n    delete:\n      summary: DeleteTodo\n      operationId: deletetodo\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: ''\n      responses:\n        '200':\n          description: \ncomponents:\n  schemas:\n    Todo:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n        taskDescription:\n          type: string\n        isCompleted:\n          type: bool\n    Todos:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Todo\"\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Todos\": parse schema: item: parse schema: resolve \"#/components/schemas/Todo\": parse schema: property \"isCompleted\": parse schema: unexpected schema type: \"bool\""
}