{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ParameterizedBuilds/parameterized-builds"
		},
		"file": {
			"name": "spec.yml",
			"size": 0,
			"path": "docs/spec.yml",
			"byteSize": 10811,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Parameterized Builds API\n  description: >\n    Rest Api for handling data stored by the Parameter Builds\n    for Jenkins plugin\n  version: \"1.0\"\n\npaths:\n  /global/servers:\n    get:\n      summary: Get global jenkins servers\n      description: >\n        Returns a list of jenkins servers defined in the\n        global admin settings. Default user token ommitted\n        for security.\n      responses:\n        '200':\n          description: A JSON array of server objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Server'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n\n  /global/servers/validate:\n    post:\n      summary: Test server settings\n      description: >\n        Check if the given jenkins settings can successfully\n        send a post request to the jenkins server.\n      responses:\n        '200':\n          description: Connection successful\n          content:\n            application/json:\n              schema:\n                type: string\n        '400':\n          description: Connection test failed\n          content:\n            application/json:\n              schema:\n                type: string\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n\n  /global/servers/{serverAlias}:\n    put:\n      summary: Create or update a server\n      description: >\n        Creates or updates a server in the global settings\n        for the given serverAlias. As of now, only one\n        server per scope is supported so any existing\n        global server will be replaced with this server.\n      parameters:\n        - name: serverAlias\n          in: path\n          description: Server Nickname\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Server updated\n        '201':\n          description: Server created\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '422':\n          $ref: '#/components/responses/BadInput'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n    delete:\n      summary: Remove a server\n      description: >\n        Remove the server with the given alias from the\n        global settings. Since only one server is supported\n        currently, this will simply remove the global server\n        regardless of the serverAlias provided.\n      parameters:\n        - name: serverAlias\n          in: path\n          description: Server Nickname\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Server removed\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n\n  /global/servers/{serverAlias}/userToken:\n    put:\n      summary: Set user token for jenkins server\n      description: >\n        Sets the authenticated user's token for the jenkins\n        server defined at serverAlias in the global jenkins\n        settings. If no token is defined, the current user\n        token is removed.\n      parameters:\n        - name: serverAlias\n          in: path\n          description: Server Nickname\n          required: true\n          schema:\n            type: string\n        - name: toke\n          in: body\n          required: false\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Token updated\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n    delete:\n      summary: Remove user token for given jenkins server\n      description: >\n        Removes the authenticated user's api token for\n        the given jenkins server.\n      parameters:\n        - name: serverAlias\n          in: path\n          description: Server Nickname\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Token removed\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n  \n  /projects/{projectKey}/servers:\n    get:\n      summary: Get project-level jenkins servers\n      description: >\n        Returns a list of jenkins servers defined in the\n        project admin settings. Default user token ommitted\n        for security.\n      parameters:\n        - name: projectKey\n          in: path\n          description: unique key for given project\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A JSON array of server objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Server'\n        '404':\n          description: Project not found\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n\n  /projects/{projectKey}/servers/validate:\n    post:\n      summary: Test server settings\n      description: >\n        Check if the given jenkins settings can successfully\n        send a post request to the jenkins server.\n      parameters:\n      - name: projectKey\n        in: path\n        description: unique key for given project\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Connection successful\n          content:\n            application/json:\n              schema:\n                type: string\n        '400':\n          description: Connection test failed\n          content:\n            application/json:\n              schema:\n                type: string\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          description: Project not found\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n\n  /projects/{projectKey}/servers/{serverAlias}:\n    put:\n      summary: Create or update a server\n      description: >\n        Creates or updates a server in the given project's\n        settings for the given serverAlias. As of now, only one\n        server per scope is supported so any existing\n        project server will be replaced with this server.\n      parameters:\n        - name: projectKey\n          in: path\n          description: unique key for given project\n          required: true\n          schema:\n            type: string\n        - name: serverAlias\n          in: path\n          description: Server Nickname\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Server updated\n        '201':\n          description: Server created\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          description: Project not found\n        '422':\n          $ref: '#/components/responses/BadInput'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n    delete:\n      summary: Remove a server\n      description: >\n        Remove the server with the given alias from the\n        project's settings. Since only one server is supported\n        currently, this will simply remove the project's server\n        regardless of the serverAlias provided.\n      parameters:\n        - name: projectKey\n          in: path\n          description: unique key for given project\n          required: true\n          schema:\n            type: string\n        - name: serverAlias\n          in: path\n          description: Server Nickname\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Server removed\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          description: Project not found\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n\n  /projects/{projectKey}/servers/{serverAlias}/userToken:\n    put:\n      summary: Set user token for jenkins server\n      description: >\n        Sets the authenticated user's token for the jenkins\n        server defined at serverAlias in the project's jenkins\n        settings. If no token is defined, the current user\n        token is removed.\n      parameters:\n        - name: projectKey\n          in: path\n          description: unique key for given project\n          required: true\n          schema:\n            type: string\n        - name: serverAlias\n          in: path\n          description: Server Nickname\n          required: true\n          schema:\n            type: string\n        - name: toke\n          in: body\n          required: false\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Token updated\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n    delete:\n      summary: Remove user token for given jenkins server\n      description: >\n        Removes the authenticated user's api token for\n        the given jenkins server.\n      parameters:\n        - name: projectKey\n          in: path\n          description: unique key for given project\n          required: true\n          schema:\n            type: string\n        - name: serverAlias\n          in: path\n          description: Server Nickname\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Token removed\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '5XX':\n          $ref: '#/components/responses/Unexpected'\n\n\ncomponents:\n  schemas:\n    Server:\n      type: object\n      properties:\n        url:\n          type: string\n        alias:\n          type: string\n        scope:\n          type: string\n          enum: [global, project]\n        project:\n          type: string\n        default_user:\n          type: string\n        root_token_enabled:\n          type: boolean\n        csrf_enabled:\n          type: boolean\n      required:\n        - url\n        - alias\n        - scope\n        - root_token_enabled\n        - csrf_enabled\n  \n  responses:\n    Unauthorized:\n      description: Unauthorized\n    Unexpected:\n      description: Unexpected error\n    BadInput:\n      description: Request body rejected\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errors:\n                type: array\n                items:\n                  type: string\n            required:\n              - errors\n",
			"canonicalURL": "/github.com/ParameterizedBuilds/parameterized-builds@2a27ca579ac233bcc68ca886c41bd8578e25a7d3/-/blob/docs/spec.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ParameterizedBuilds/parameterized-builds/blob/2a27ca579ac233bcc68ca886c41bd8578e25a7d3/docs/spec.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/projects/{projectKey}/servers/{serverAlias}/userToken\": at 1:7137: put: at 1:7704: parameters: parse parameter \"toke\": at 1:8145: unsupported parameter type \"body\""
}