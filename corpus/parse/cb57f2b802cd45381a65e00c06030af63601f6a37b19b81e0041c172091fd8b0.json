{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/daveshanley/vacuum"
		},
		"file": {
			"name": "mixedref-burgershop.openapi.yaml",
			"size": 0,
			"path": "model/test_files/mixedref-burgershop.openapi.yaml",
			"byteSize": 8250,
			"content": "openapi: 3.0.1\ninfo:\n  title: Burger Shop\n  description: |\n    The best burger API at quobix. You can find the testiest burgers on the world\n  termsOfService: https://quobix.com\n  contact:\n    name: quobix\n  license:\n    name: Quobix\n  version: \"1.2\"\ntags:\n  - name: \"pizza\"\n    description: false\n    externalDocs:\n      description: \"Find out more\"\n      url: \"https://quobix.com/\"\n  - name: \"Dressing\"\n    description: \"Variety of dressings: cheese, veggie, oil and a lot more\"\n    externalDocs:\n      description: \"Find out more information about our products)\"\n      url: \"https://quobix.com/\"\nservers:\n  - url: https://quobix.com/api\npaths:\n  /burgers:\n    post:\n      operationId: createBurger\n      tags:\n        - \"Meat\"\n      summary:  Create a new burger\n      description: A new burger for our menu, yummy yum yum.\n      requestBody:\n        description: Give us the new burger!\n        content:\n          application/json:\n            schema:\n              $ref: 'https://raw.githubusercontent.com/daveshanley/vacuum/main/model/test_files/burgershop.openapi.yaml#/components/schemas/Burger'\n            examples:\n              pbjBurger:\n                summary: A horrible, nutty, sticky mess.\n                value:\n                  name: Peanut And Jelly\n                  numPatties: 3\n              cakeBurger:\n                summary: A sickly, sweet, atrocity\n                value:\n                  name: Chocolate Cake Burger\n                  numPatties: 5\n      responses:\n        \"200\":\n          description: A tasty burger for you to eat.\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/daveshanley/vacuum/main/model/test_files/burgershop.openapi.yaml#/components/schemas/Burger'\n              examples:\n                quarterPounder:\n                  summary: A juicy two handler sammich\n                  value:\n                    name: Quarter Pounder with Cheese\n                    numPatties: 1\n                filetOFish:\n                  summary: A tasty treat from the sea\n                  value:\n                    name: Filet-O-Fish\n                    numPatties: 1\n        \"500\":\n          description: Unexpected error creating a new burger. Sorry.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                unexpectedError:\n                  summary: oh my goodness\n                  value:\n                    message: something went terribly wrong my friend, no new burger for you.\n        \"422\":\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                unexpectedError:\n                  summary: invalid request\n                  value:\n                    message: unable to accept this request, looks bad, missing something.\n  /burgers/{burgerId}:\n    get:\n      operationId: locateBurger\n      tags:\n        - \"Meat\"\n      summary: Search a burger by ID - returns the burger with that identifier\n      description: Look up a tasty burger take it and enjoy it\n      parameters:\n        - in: path\n          name: burgerId\n          schema:\n            type: string\n          example: big-mac\n          description: the name of the burger. use this to order your food\n          required: true\n      responses:\n        \"200\":\n          description: A tasty burger for you to eat. Wide variety of products to choose from\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/daveshanley/vacuum/main/model/test_files/burgershop.openapi.yaml#/components/schemas/Fries'\n              examples:\n                quarterPounder:\n                  summary: A juicy two handler sammich\n                  value:\n                    name: Quarter Pounder with Cheese\n                    numPatties: 1\n                filetOFish:\n                  summary: A tasty treat from the sea\n                  value:\n                    name: Filet-O-Fish\n                    numPatties: 1\n\n        \"404\":\n          description: Cannot find your burger. Sorry. We may have sold out of this type\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                notFound:\n                  summary: burger missing\n                  value:\n                    message: can't find a burger with that ID, we may have sold out my friend.\n        \"500\":\n          description: Unexpected error. Sorry.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                unexpectedError:\n                  summary: oh my stars\n                  value:\n                    message: something went terribly wrong my friend, burger location crashed!\n  /burgers/{burgerId}/dressings:\n    get:\n      operationId: listBurgerDressings\n      tags:\n        - \"Dressing\"\n      summary:  Get a list of all dressings available\n      description: Same as the summary, look up a tasty burger, by its ID - the burger identifier\n      parameters:\n        - in: path\n          name: burgerId\n          schema:\n            type: string\n          example: big-mac\n          description: the name of the our fantastic burger. You can pick a name from our menu\n          required: true\n      responses:\n        \"200\":\n          description: an array of\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'test_files/burgershop.openapi.yaml#/components/schemas/Dressing'\n        \"404\":\n          description: Cannot find your burger in which to list dressings. Sorry\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error listing dressings for burger. Sorry.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /dressings/{dressingId}:\n    get:\n      operationId: getDressing\n      tags:\n        - \"Dressing\"\n      summary:  Get a specific dressing - you can choose the dressing from our menu\n      description: Same as the summary, get a dressing, by its ID\n      parameters:\n        - in: path\n          name: dressingId\n          schema:\n            type: string\n          example: cheese\n          description: This is the unique identifier for the dressing items.\n          required: true\n      responses:\n        \"404\":\n          description: Cannot find your dressing, sorry.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error getting a dressing. Sorry.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /dressings:\n    get:\n      operationId: getAllDressings\n      tags:\n        - \"Dressing\"\n      summary:  Get all dressings available in our store\n      description: Get all dressings and choose from them\n      responses:\n        \"200\":\n          description: an array of dressings\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'test_files/burgershop.openapi.yaml#/components/schemas/Dressing'\n        \"500\":\n          description: Unexpected error. Sorry.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    Error:\n      type: object\n      description: Error defining what went wrong when providing a specification. The message should help indicate the issue clearly.\n      properties:\n        message:\n          type: string\n          description: returns the error message if something wrong happens\n          example: No such burger as 'Big-Whopper'",
			"canonicalURL": "/github.com/daveshanley/vacuum@aecc4c5a82548afb317fc64e9ea013750ef6f10b/-/blob/model/test_files/mixedref-burgershop.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/daveshanley/vacuum/blob/aecc4c5a82548afb317fc64e9ea013750ef6f10b/model/test_files/mixedref-burgershop.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/burgers/{burgerId}/dressings\": get: operation \"listBurgerDressings\": responses: 200: content: application/json: schema: parse schema: parse schema: at 1:4222: external \"test_files/burgershop.openapi.yaml\": get: file: local file reference is not allowed"
}