{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MikeRalphson/bbcapis"
		},
		"file": {
			"name": "ibl_openapi_header.yaml",
			"size": 0,
			"path": "iblApi/ibl_openapi_header.yaml",
			"byteSize": 23944,
			"content": "openapi: 3.0.0\ninfo:\n  version: '1.0'\n  x-release: ''\n  title: BBC iPlayer Business Layer\n  description: The definitive iPlayer API.\n  x-logo:\n    url: 'https://avatars0.githubusercontent.com/u/828722?s=200\u0026v=4'\n    backgroundColor: '#FFFFFF'\n  license:\n    name: MIT\n    url: 'https://opensource.org/licenses/MIT'\n  contact:\n    name: Open iBL Project\n    email: ibl-team@lists.forge.bbc.co.uk\n    url: 'http://developer.bbc.co.uk/'\nexternalDocs:\n  description: BBC iPlayer documentation\n  url: 'http://smethur.st/posts/176135860'\nsecurity:\n  - api_key: []\npaths:\n  '/programmes/{pid}':\n    get:\n      summary: Programme for a given pid.\n      description: Get the programme for a given programme identifier.\n      tags:\n        - Programmes (TLEOs)\n      operationId: Get_Programmes by parent PID_\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/initial_child_count'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/programmes/{pid}/episodes':\n    get:\n      summary: Child episodes for a given programme pid.\n      description: Get the child episodes belonging to a given programme identifier.\n      tags:\n        - Episodes\n      operationId: Get_Episodes by parent PID_\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/initial_child_count'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/episodes/{pid}':\n    get:\n      summary: Episode for a given pid.\n      description: Get the episode for a given episode identifier.\n      tags:\n        - Episodes\n      operationId: Get_Programme by PID_\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/mixin'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/atoz/{letter}/programmes':\n    get:\n      summary: Programmes by initial title character\n      description: Get the Programmes whose title begins with the given initial character.\n      tags:\n        - A to Z\n      operationId: Get_Programmes AtoZ search_\n      parameters:\n        - name: letter\n          in: path\n          required: true\n          description: 'Letter to search by, a to z or the string ''0-9'''\n          schema:\n            type: string\n            pattern: '[a-z](0-9)'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/initial_child_count'\n        - name: sort\n          in: query\n          required: true\n          description: The sort order of the results.\n          schema:\n            type: string\n            enum:\n              - title\n        - $ref: '#/components/parameters/sort_direction'\n        - $ref: '#/components/parameters/availability'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/episodes/{pid}/prerolls':\n    get:\n      summary: Get Trailers (pre-rolls)\n      description: Get Trailers (pre-rolls)\n      tags:\n        - Episodes\n      operationId: Get_Trailers (pre-rolls)_\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/episodes/{pid}/postrolls':\n    get:\n      summary: Get Follow-ups (post-rolls)\n      description: Get Follow-ups (post-rolls)\n      tags:\n        - Episodes\n      operationId: getPostRolls\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/episodes/{pid}/next':\n    get:\n      summary: Get Onward Journey\n      description: Get Onward Journey (next programme)\n      tags:\n        - Episodes\n      operationId: Get_Onward_Journey\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/clips/{pid}':\n    get:\n      summary: Get Clips\n      description: Get Clips\n      tags:\n        - Episodes\n      operationId: Get_Clips_\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /search-suggest:\n    get:\n      summary: Search-suggest\n      description: Search-suggest\n      tags:\n        - Search\n      operationId: Search-suggest_\n      parameters:\n        - $ref: '#/components/parameters/q'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/channels/{channel}/schedule/{date}':\n    get:\n      summary: Get schedule by channel\n      description: Get schedule by channel\n      tags:\n        - Channels\n      operationId: Get_Schedule by channel_\n      parameters:\n        - $ref: '#/components/parameters/channel'\n        - name: date\n          in: path\n          required: true\n          description: 'The date to return the schedule for, yyyy-mm-dd format'\n          schema:\n            type: string\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/channels/{channel}/highlights':\n    get:\n      summary: List the highlights for a channel.\n      description: Get the editorial highlights of a given channel in TV \u0026 iPlayer.\n      tags:\n        - Channels\n      operationId: Get_Highlights by channel_\n      parameters:\n        - $ref: '#/components/parameters/channel'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - name: live\n          in: query\n          required: false\n          description: Whether to include live programmes\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/mixin'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /search:\n    get:\n      summary: Search\n      description: Search\n      tags:\n        - Search\n      operationId: Search_\n      parameters:\n        - $ref: '#/components/parameters/q'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /categories:\n    get:\n      summary: Get categories\n      description: Get the list of all the categories in TV \u0026 iPlayer.\n      tags:\n        - Categories\n      operationId: Get_Categories_\n      parameters:\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/categories/{category}':\n    get:\n      summary: Get sub-categories\n      description: Get sub-categories\n      tags:\n        - Categories\n      operationId: Get_Sub-categories_\n      parameters:\n        - $ref: '#/components/parameters/category'\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/categories/{category}/programmes':\n    get:\n      summary: List all the programmes for a category.\n      description: \u003e-\n        Get the list of all the Programmes (TLEOs) for a given category in TV \u0026\n        iPlayer.\n      tags:\n        - Programmes (TLEOs)\n      operationId: Get_Programmes by category_\n      parameters:\n        - $ref: '#/components/parameters/category'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/categories/{category}/episodes':\n    get:\n      summary: List all the episodes for a category.\n      description: Get the list of all the episodes for a given category in TV \u0026 iPlayer.\n      tags:\n        - Episodes\n      operationId: Get_Episodes by category_\n      parameters:\n        - $ref: '#/components/parameters/category'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - name: sort\n          in: query\n          required: false\n          description: The sort order of the results.\n          schema:\n            type: string\n            enum:\n              - recent\n              - popular\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/episodes/{pid}/recommendations':\n    get:\n      summary: Get programme recommendations\n      description: Get programme recommendations\n      tags:\n        - Episodes\n      operationId: Get_Programme recommendations_\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /status:\n    get:\n      summary: Get status\n      description: \u003e-\n        Get the current iPlayer business layer status. This tells the caller the\n        status of the iPlayer data, but not necessarily the overall status of\n        the website. In the future it might include the status of the dependent\n        data services within the BBC.\n      tags:\n        - Metadata\n      operationId: Get_Status_\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /channels:\n    get:\n      summary: List all the channels.\n      description: Get the list of all the channels TV \u0026 iPlayer.\n      tags:\n        - Channels\n      operationId: Get_Channels_\n      parameters:\n        - name: region\n          in: query\n          required: false\n          description: The region to get the channels for.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /groups/popular/episodes:\n    get:\n      summary: Get programmes popular\n      description: Get programmes popular\n      tags:\n        - Episodes\n      operationId: Get_Programmes popular_\n      parameters:\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/initial_child_count'\n        - $ref: '#/components/parameters/sort'\n        - $ref: '#/components/parameters/sort_direction'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/mixin'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/groups/{pid}/episodes':\n    get:\n      summary: 'Get episodes by group, brand or series'\n      description: 'Get episodes by group, brand or series'\n      tags:\n        - Episodes\n      operationId: Get_Episodes by group_\n      parameters:\n        - $ref: '#/components/parameters/pid'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n        - $ref: '#/components/parameters/initial_child_count'\n        - $ref: '#/components/parameters/sort'\n        - $ref: '#/components/parameters/sort_direction'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/mixin'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/categories/{category}/highlights':\n    get:\n      summary: List the highlights for a category.\n      description: Get the editorial highlights of a given category in TV \u0026 iPlayer.\n      tags:\n        - Programmes (TLEOs)\n      operationId: Get_Highlights by category_\n      parameters:\n        - $ref: '#/components/parameters/category'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/mixin'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/channels/{channel}/programmes':\n    get:\n      summary: Get programmes by channel\n      description: Get programmes by channel\n      tags:\n        - Programmes (TLEOs)\n      operationId: Get_Programmes by channel_\n      parameters:\n        - $ref: '#/components/parameters/channel'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per_page'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /regions:\n    get:\n      summary: List all regions\n      description: Get the list of all the regions TV \u0026 iPlayer.\n      tags:\n        - Regions\n      operationId: Get_Regions_\n      parameters:\n        - $ref: '#/components/parameters/lang'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /user/watching:\n    get:\n      summary: Get user watching\n      description: Get user watching\n      tags:\n        - User\n      operationId: Get_User watching_\n      parameters:\n        - $ref: '#/components/parameters/identity_cookie'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /schema/ibl.json:\n    get:\n      summary: Get schema\n      description: Get schema\n      tags:\n        - Metadata\n      operationId: Get_Schema_\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  '/channels/{channel}/broadcasts':\n    get:\n      summary: Get broadcasts by channel\n      description: Get broadcasts by channel\n      tags:\n        - Programmes (TLEOs)\n      operationId: Get_Broadcasts by channel_\n      parameters:\n        - $ref: '#/components/parameters/channel'\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/mixin'\n        - $ref: '#/components/parameters/per_page'\n        - name: from\n          in: query\n          required: false\n          description: 'Time to return results from, e.g. -3h'\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /user/purchases:\n    get:\n      summary: Get user store purchases\n      description: Get user store purchases\n      tags:\n        - User\n      operationId: Get_User store purchases_\n      parameters:\n        - $ref: '#/components/parameters/identity_cookie'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security:\n        - basic: []\n  /user/recommendations:\n    get:\n      summary: Get user store recommendations\n      description: Get user store recommendations\n      tags:\n        - User\n      operationId: Get_User store recommendations_\n      parameters:\n        - $ref: '#/components/parameters/identity_cookie'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\n  /home/highlights:\n    get:\n      summary: Get programme highlights\n      description: Get programme highlights\n      tags:\n        - Programmes (TLEOs)\n      operationId: Get_Programme highlights_\n      parameters:\n        - $ref: '#/components/parameters/lang'\n        - $ref: '#/components/parameters/rights'\n        - $ref: '#/components/parameters/availability'\n        - $ref: '#/components/parameters/mixin'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ibl'\n      security: []\nservers:\n  - url: 'https://ibl.api.bbci.co.uk/ibl/v1'\n  - url: 'http://ibl.api.bbci.co.uk/ibl/v1'\ncomponents:\n  parameters:\n    pid:\n      name: pid\n      in: path\n      required: true\n      description: The programme identifier.\n      schema:\n        type: string\n        minLength: 8\n        pattern: '^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$'\n    rights:\n      name: rights\n      in: query\n      required: true\n      description: The rights group to limit results to.\n      schema:\n        type: string\n        enum:\n          - mobile\n          - tv\n          - web\n        default: web\n    availability:\n      name: availability\n      in: query\n      required: true\n      description: 'Whether to return all, or available programmes'\n      schema:\n        type: string\n        enum:\n          - all\n          - available\n        default: available\n    initial_child_count:\n      name: initial_child_count\n      in: query\n      required: true\n      description: The depth to return child entities.\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 4\n        default: 4\n    mixin:\n      name: mixin\n      in: query\n      required: false\n      description: Request additional data in the output\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n        enum:\n          - live\n          - promotions\n    page:\n      name: page\n      in: query\n      required: true\n      description: The page index.\n      schema:\n        type: integer\n        format: int64\n    per_page:\n      name: per_page\n      in: query\n      required: true\n      description: The number of results to return.\n      schema:\n        type: integer\n        format: int64\n    sort_direction:\n      name: sort_direction\n      in: query\n      required: true\n      description: Whether to sort ascending or descending\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n    q:\n      name: q\n      in: query\n      required: true\n      description: The term to search for.\n      schema:\n        type: string\n    lang:\n      name: lang\n      in: query\n      required: true\n      description: The language for any applicable localised strings.\n      schema:\n        type: string\n        enum:\n          - en\n          - cy\n          - ga\n          - gd\n          - pi\n    channel:\n      name: channel\n      in: path\n      required: true\n      description: The channel identifier to limit results to.\n      schema:\n        type: string\n    category:\n      name: category\n      in: path\n      required: true\n      description: The category identifier to return results from.\n      schema:\n        type: string\n    sort:\n      name: sort\n      in: query\n      required: true\n      description: The sort order of the results.\n      schema:\n        type: string\n    identity_cookie:\n      name: identity_cookie\n      in: query\n      required: true\n      description: The BBC-id cookie value\n      schema:\n        type: number\n        format: double\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: api_key\n      in: query\n    basic:\n      type: http\n      description: Used only by store purchases.\n      scheme: basic\n  schemas:\n    ibl: {}\n"
		}
	},
	"Error": "parse: parse spec: paths: /episodes/{pid}: get: operation \"Get_Programme by PID_\": parameters: parse parameter \"\": resolve \"#/components/parameters/mixin\" reference: schema: parse enum values: parse value \"\\\"live\\\"\": expected type \"array\", got \"string\""
}