{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sartography/spiffworkflow-backend"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "src/spiffworkflow_backend/api.yml",
			"byteSize": 76734,
			"content": "openapi: \"3.0.2\"\ninfo:\n  version: 1.0.0\n  title: spiffworkflow-backend\n  license:\n    name: MIT\nservers:\n  - url: http://localhost:5000/v1.0\n# this is handled in flask now\nsecurity: []\n#  - jwt: [\"secret\"]\n#  - oAuth2AuthCode:\n#      - read_email\n#      - uid\n\npaths:\n  /login:\n    parameters:\n      - name: redirect_url\n        in: query\n        required: false\n        schema:\n          type: string\n    get:\n      security: []\n      summary: redirect to open id authentication server\n      operationId: spiffworkflow_backend.routes.user.login\n      tags:\n        - Authentication\n      responses:\n        \"200\":\n          description: Redirects to authentication server\n  /login_return:\n    parameters:\n      - name: code\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: state\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: session_state\n        in: query\n        required: false\n        schema:\n          type: string\n    get:\n      security: []\n      operationId: spiffworkflow_backend.routes.user.login_return\n      tags:\n        - Authentication\n      responses:\n        \"200\":\n          description: Test Return Response\n  /logout:\n    parameters:\n      - name: id_token\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: redirect_url\n        in: query\n        required: false\n        schema:\n          type: string\n    get:\n      security: []\n      operationId: spiffworkflow_backend.routes.user.logout\n      summary: Logout authenticated user\n      tags:\n        - Authentication\n      responses:\n        \"200\":\n          description: Logout Authenticated User\n  /logout_return:\n    get:\n      security: []\n      operationId: spiffworkflow_backend.routes.user.logout_return\n      summary: Logout authenticated user\n      tags:\n        - Authentication\n      responses:\n        \"200\":\n          description: Logout Authenticated User\n\n  /login_api:\n    get:\n      security: []\n      operationId: spiffworkflow_backend.routes.user.login_api\n      summary: Authenticate user for API access\n      tags:\n        - Authentication\n      responses:\n        \"200\":\n          description: Redirects to authentication server\n  /login_api_return:\n    parameters:\n      - name: code\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: state\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: session_state\n        in: query\n        required: false\n        schema:\n          type: string\n    get:\n      security: []\n      operationId: spiffworkflow_backend.routes.user.login_api_return\n      tags:\n        - Authentication\n      responses:\n        \"200\":\n          description: Test Return Response\n\n  /status:\n    get:\n      security: []\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.status\n      summary: Returns 200 if the server is Responding\n      tags:\n        - Liveness\n        - Status\n      responses:\n        \"200\":\n          description: The server is running.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-groups:\n    parameters:\n      - name: process_group_identifier\n        in: query\n        required: false\n        description: Optional parameter to filter by a single group\n        schema:\n          type: string\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The number of groups to show per page. Defaults to page 10.\n        schema:\n          type: integer\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_group_list\n      summary: get list\n      tags:\n        - Process Groups\n      responses:\n        \"200\":\n          description: An array of process groups\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ProcessModelCategory\"\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_group_create\n      summary: Add process group\n      tags:\n        - Process Groups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProcessModelCategory\"\n      responses:\n        \"201\":\n          description: Processs Group\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessModelCategory\"\n\n  /process-groups/{modified_process_group_id}:\n    parameters:\n      - name: modified_process_group_id\n        in: path\n        required: true\n        description: The unique id of an existing process group.\n        schema:\n          type: string\n    # process_group_show\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_group_show\n      summary: Returns a single process group\n      tags:\n        - Process Groups\n      responses:\n        \"200\":\n          description: Processs Group.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessModelCategory\"\n    delete:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_group_delete\n      summary: Deletes a single process group\n      tags:\n        - Process Groups\n      responses:\n        \"200\":\n          description: The process group was deleted.\n    put:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_group_update\n      summary: Updates a single process group\n      tags:\n        - Process Groups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProcessModelCategory\"\n      responses:\n        \"200\":\n          description: Process group updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessModelCategory\"\n\n  /process-groups/{modified_process_group_identifier}/move:\n    parameters:\n      - name: modified_process_group_identifier\n        in: path\n        required: true\n        description: The unique id of an existing process group.\n        schema:\n          type: string\n      - name: new_location\n        in: query\n        required: true\n        description: the new location, as an existing process group id\n        schema:\n          type: string\n    put:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_group_move\n      summary: returns the new group\n      tags:\n        - Process Groups\n      responses:\n        \"200\":\n          description: Process Group\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessModelCategory\"\n\n  /process-models:\n    parameters:\n      - name: process_group_identifier\n        in: query\n        required: false\n        description: The group containing the models we want to return\n        schema:\n          type: string\n      - name: recursive\n        in: query\n        required: false\n        description: Get all sub process models recursively if true\n        schema:\n          type: boolean\n      - name: filter_runnable_by_user\n        in: query\n        required: false\n        description: Get only the process models that the user can run\n        schema:\n          type: boolean\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The number of models to show per page. Defaults to page 10.\n        schema:\n          type: integer\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_list\n      summary: Return a list of process models for a given process group\n      tags:\n        - Process Models\n      responses:\n        \"200\":\n          description: Successfully return the requested models\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ProcessModel\"\n\n  /process-models/{modified_process_group_id}:\n    parameters:\n      - name: modified_process_group_id\n        in: path\n        required: true\n        description: modified id of an existing process group\n        schema:\n          type: string\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_create\n      summary: Creates a new process model with the given parameters.\n      tags:\n        - Process Models\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProcessModel\"\n      responses:\n        \"201\":\n          description: Process model created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessModel\"\n\n  /process-models/{modified_process_model_identifier}/files:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The process_model_id, modified to replace slashes (/)\n        schema:\n          type: string\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.add_file\n      summary: Add a new workflow spec file\n      tags:\n        - Process Model Files\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"201\":\n          description: Metadata about the uploaded file, but not the file content.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n\n  /process-models/{modified_process_model_identifier}:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: the modified process model id\n        schema:\n          type: string\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_show\n      summary: Returns a single process model\n      tags:\n        - Process Models\n      responses:\n        \"200\":\n          description: Workflow spec.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessModel\"\n    put:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_update\n      summary: Modifies an existing process model with the given parameters.\n      tags:\n        - Process Models\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProcessModel\"\n      responses:\n        \"200\":\n          description: Process model updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessModel\"\n    delete:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_delete\n      summary: Removes an existing process model\n      tags:\n        - Process Models\n      responses:\n        \"200\":\n          description: The process model has been removed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-models/{modified_process_model_identifier}/move:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: the modified process model id\n        schema:\n          type: string\n      - name: new_location\n        in: query\n        required: true\n        description: the new location for the process model, as a process group id\n        schema:\n          type: string\n    put:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_move\n      summary: returns the new model\n      tags:\n        - Process Models\n      responses:\n        \"200\":\n          description: Process Model\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessModel\"\n\n  /process-models/{modified_process_model_identifier}/publish:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: the modified process model id\n        schema:\n          type: string\n      - name: branch_to_update\n        in: query\n        required: false\n        description: the name of the branch we want to merge into\n        schema:\n          type: string\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_publish\n      summary: Merge changes from this model to another branch.\n      tags:\n        - Process Models\n      responses:\n        \"200\":\n          description: The process model was published.\n          content:\n            application/json:\n              schema:\n                type: string\n\n  /processes:\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_list\n      summary:\n        Return a list of all processes (not just primary process of a process model)\n        useful for finding processes for call activites.\n      tags:\n        - Process Models\n      responses:\n        \"200\":\n          description: Successfully return the requested processes\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Process\"\n\n  /github-webhook-receive:\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.github_webhook_receive\n      summary: receives push webhooks from github so we can keep our process model repo up to date\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProcessModelCategory\"\n      tags:\n        - git\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-instances/for-me:\n    parameters:\n      - name: process_model_identifier\n        in: query\n        required: false\n        description: The unique id of an existing process model.\n        schema:\n          type: string\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: start_from\n        in: query\n        required: false\n        description: For filtering - beginning of start window - in seconds since epoch\n        schema:\n          type: integer\n      - name: start_to\n        in: query\n        required: false\n        description: For filtering - end of start window - in seconds since epoch\n        schema:\n          type: integer\n      - name: end_from\n        in: query\n        required: false\n        description: For filtering - beginning of end window - in seconds since epoch\n        schema:\n          type: integer\n      - name: end_to\n        in: query\n        required: false\n        description: For filtering - end of end window - in seconds since epoch\n        schema:\n          type: integer\n      - name: process_status\n        in: query\n        required: false\n        description: For filtering - not_started, user_input_required, waiting, complete, error, or suspended\n        schema:\n          type: string\n      - name: initiated_by_me\n        in: query\n        required: false\n        description: For filtering - show instances initiated by me\n        schema:\n          type: boolean\n      - name: with_tasks_completed_by_me\n        in: query\n        required: false\n        description: For filtering - show instances with tasks completed by me\n        schema:\n          type: boolean\n      - name: with_tasks_completed_by_my_group\n        in: query\n        required: false\n        description: For filtering - show instances with tasks completed by my group\n        schema:\n          type: boolean\n      - name: with_relation_to_me\n        in: query\n        required: false\n        description: For filtering - show instances that have something to do with me\n        schema:\n          type: boolean\n      - name: user_filter\n        in: query\n        required: false\n        description: For filtering - indicates the user has manually entered a query\n        schema:\n          type: boolean\n      - name: report_identifier\n        in: query\n        required: false\n        description: Specifies the identifier of a report to use, if any\n        schema:\n          type: string\n      - name: report_id\n        in: query\n        required: false\n        description: Specifies the identifier of a report to use, if any\n        schema:\n          type: integer\n      - name: user_group_identifier\n        in: query\n        required: false\n        description: The identifier of the group to get the process instances for\n        schema:\n          type: string\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_list_for_me\n      summary: Returns a list of process instances that are associated with me.\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Workflow.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Workflow\"\n\n  /process-instances:\n    parameters:\n      - name: process_model_identifier\n        in: query\n        required: false\n        description: The unique id of an existing process model.\n        schema:\n          type: string\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: start_from\n        in: query\n        required: false\n        description: For filtering - beginning of start window - in seconds since epoch\n        schema:\n          type: integer\n      - name: start_to\n        in: query\n        required: false\n        description: For filtering - end of start window - in seconds since epoch\n        schema:\n          type: integer\n      - name: end_from\n        in: query\n        required: false\n        description: For filtering - beginning of end window - in seconds since epoch\n        schema:\n          type: integer\n      - name: end_to\n        in: query\n        required: false\n        description: For filtering - end of end window - in seconds since epoch\n        schema:\n          type: integer\n      - name: process_status\n        in: query\n        required: false\n        description: For filtering - not_started, user_input_required, waiting, complete, error, or suspended\n        schema:\n          type: string\n      - name: initiated_by_me\n        in: query\n        required: false\n        description: For filtering - show instances initiated by me\n        schema:\n          type: boolean\n      - name: with_tasks_completed_by_me\n        in: query\n        required: false\n        description: For filtering - show instances with tasks completed by me\n        schema:\n          type: boolean\n      - name: with_tasks_completed_by_my_group\n        in: query\n        required: false\n        description: For filtering - show instances with tasks completed by my group\n        schema:\n          type: boolean\n      - name: with_relation_to_me\n        in: query\n        required: false\n        description: For filtering - show instances that have something to do with me\n        schema:\n          type: boolean\n      - name: user_filter\n        in: query\n        required: false\n        description: For filtering - indicates the user has manually entered a query\n        schema:\n          type: boolean\n      - name: report_identifier\n        in: query\n        required: false\n        description: Specifies the identifier of a report to use, if any\n        schema:\n          type: string\n      - name: report_id\n        in: query\n        required: false\n        description: Specifies the identifier of a report to use, if any\n        schema:\n          type: integer\n      - name: user_group_identifier\n        in: query\n        required: false\n        description: The identifier of the group to get the process instances for\n        schema:\n          type: string\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_list\n      summary: Returns a list of process instances.\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Workflow.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Workflow\"\n\n  /process-models/{modified_process_model_identifier}/script-unit-tests:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The unique id of an existing process model.\n        schema:\n          type: string\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.script_unit_test_create\n      summary: Create script unit test based on given criteria\n      tags:\n        - Script Unit Test\n      responses:\n        \"200\":\n          description: Script Unit Test Result\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /process-models/{modified_process_model_identifier}/script-unit-tests/run:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The unique id of an existing process model.\n        schema:\n          type: string\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.script_unit_test_run\n      summary: Run a given script unit test.\n      tags:\n        - Script Unit Test\n      responses:\n        \"200\":\n          description: Script Unit Test Result\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /process-instances/{modified_process_model_identifier}:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The unique id of an existing process model.\n        schema:\n          type: string\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_create\n      summary: Creates an process instance from a process model and returns the instance\n      tags:\n        - Process Instances\n      responses:\n        \"201\":\n          description: Workflow generated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /process-instances/for-me/{modified_process_model_identifier}/{process_instance_id}/task-info:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The unique id of an existing process model\n        schema:\n          type: string\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: process_identifier\n        in: query\n        required: false\n        description: The identifier of the process to use for the diagram. Useful for displaying the diagram for a call activity.\n        schema:\n          type: string\n      - name: all_tasks\n        in: query\n        required: false\n        description: If true, this wil return all tasks associated with the process instance and not just user tasks.\n        schema:\n          type: boolean\n      - name: spiff_step\n        in: query\n        required: false\n        description: If set will return the tasks as they were during a specific step of execution.\n        schema:\n          type: integer\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_task_list_without_task_data_for_me\n      summary: returns the list of all user tasks associated with process instance without the task data\n      responses:\n        \"200\":\n          description: list of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Task\"\n\n  /process-instances/{modified_process_model_identifier}/{process_instance_id}/task-info:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The unique id of an existing process model\n        schema:\n          type: string\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: process_identifier\n        in: query\n        required: false\n        description: The identifier of the process to use for the diagram. Useful for displaying the diagram for a call activity.\n        schema:\n          type: string\n      - name: all_tasks\n        in: query\n        required: false\n        description: If true, this wil return all tasks associated with the process instance and not just user tasks.\n        schema:\n          type: boolean\n      - name: spiff_step\n        in: query\n        required: false\n        description: If set will return the tasks as they were during a specific step of execution.\n        schema:\n          type: integer\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_task_list_without_task_data\n      summary: returns the list of all user tasks associated with process instance without the task data\n      responses:\n        \"200\":\n          description: list of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Task\"\n\n  /process-instances/for-me/{modified_process_model_identifier}/{process_instance_id}:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The unique id of an existing process model\n        schema:\n          type: string\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: process_identifier\n        in: query\n        required: false\n        description: The identifier of the process to use for the diagram. Useful for displaying the diagram for a call activity.\n        schema:\n          type: string\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_show_for_me\n      summary: Show information about a process instance that is associated with me\n      responses:\n        \"200\":\n          description: One Process Instance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /process-instances/{modified_process_model_identifier}/{process_instance_id}:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The unique id of an existing process model\n        schema:\n          type: string\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: process_identifier\n        in: query\n        required: false\n        description: The identifier of the process to use for the diagram. Useful for displaying the diagram for a call activity.\n        schema:\n          type: string\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_show\n      summary: Show information about a process instance\n      responses:\n        \"200\":\n          description: One Process Instance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n    delete:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_delete\n      summary: Deletes a single process instance\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: The process instance was deleted.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-instances/{modified_process_model_identifier}/{process_instance_id}/run:\n    parameters:\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: do_engine_steps\n        in: query\n        required: false\n        description: Defaults to true, can be set to false if you are just looking at the workflow not completeing it.\n        schema:\n          type: boolean\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_run\n      summary: Run a process instance\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Returns details about the workflows state and current task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /process-instance-terminate/{modified_process_model_identifier}/{process_instance_id}:\n    parameters:\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_terminate\n      summary: Terminate a process instance\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Empty ok true response on successful termination.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-instance-suspend/{modified_process_model_identifier}/{process_instance_id}:\n    parameters:\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_suspend\n      summary: Suspend a process instance\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Empty ok true response on successful suspension.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-instance-resume/{modified_process_model_identifier}/{process_instance_id}:\n    parameters:\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_resume\n      summary: Resume a process instance\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Empty ok true response on successful resume.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-instances/reports:\n    parameters:\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_report_list\n      summary: Returns all process instance reports for process model\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Workflow.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Workflow\"\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_report_create\n      summary: Returns all process instance reports for process model\n      tags:\n        - Process Instances\n      responses:\n        \"201\":\n          description: The process instance report was created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-instances/reports/columns:\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_report_column_list\n      summary: Returns all available columns for a process instance report.\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Workflow.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Workflow\"\n\n  /process-instances/reports/{report_id}:\n    parameters:\n      - name: report_id\n        in: path\n        required: true\n        description: The unique id of an existing report\n        schema:\n          type: integer\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_report_show\n      summary: Returns a report of process instances for a given process model\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Workflow.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Workflow\"\n    put:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_report_update\n      summary: Updates a process instance report\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: The process instance report was updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n    delete:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_report_delete\n      summary: Delete a process instance report\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: The process instance report was delete.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /process-models/{modified_process_model_identifier}/files/{file_name}:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The modified process model id\n        schema:\n          type: string\n      - name: file_name\n        in: path\n        required: true\n        description: The id of the spec file\n        schema:\n          type: string\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.get_file\n      summary: Returns metadata about the file\n      tags:\n        - Process Model Files\n      responses:\n        \"200\":\n          description: Returns the file information requested.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n    put:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_file_update\n      summary: save the contents to the given file\n      tags:\n        - Process Model Files\n      requestBody:\n        description: Log Pagination Request\n        required: false\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          description: Metadata about the uploaded file, but not the file content.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n    delete:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_model_file_delete\n      summary: Removes an existing process model file\n      tags:\n        - Process Model Files\n      responses:\n        \"200\":\n          description: The process model has been removed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /tasks:\n    parameters:\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n    get:\n      tags:\n        - Tasks\n      #      security: []\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.task_list_my_tasks\n      summary: returns the list of ready or waiting tasks for a user\n      responses:\n        \"200\":\n          description: list of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Task\"\n\n  /tasks/for-my-open-processes:\n    parameters:\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.task_list_for_my_open_processes\n      summary: returns the list of tasks for given user's open process instances\n      responses:\n        \"200\":\n          description: list of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Task\"\n\n  /tasks/for-me:\n    parameters:\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.task_list_for_me\n      summary: returns the list of tasks for given user's open process instances\n      responses:\n        \"200\":\n          description: list of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Task\"\n\n  /tasks/for-my-groups:\n    parameters:\n      - name: user_group_identifier\n        in: query\n        required: false\n        description: The identifier of the group to get the tasks for\n        schema:\n          type: string\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.task_list_for_my_groups\n      summary: returns the list of tasks for given user's open process instances\n      responses:\n        \"200\":\n          description: list of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Task\"\n\n  /user-groups/for-current-user:\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.user_group_list_for_current_user\n      summary: Group identifiers for current logged in user\n      responses:\n        \"200\":\n          description: list of user groups\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Task\"\n\n  /task-data/{modified_process_model_identifier}/{process_instance_id}:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The modified id of an existing process model\n        schema:\n          type: string\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: all_tasks\n        in: query\n        required: false\n        description: If true, this wil return all tasks associated with the process instance and not just user tasks.\n        schema:\n          type: boolean\n      - name: spiff_step\n        in: query\n        required: false\n        description: If set will return the tasks as they were during a specific step of execution.\n        schema:\n          type: integer\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_task_list_with_task_data\n      summary: returns the list of all user tasks associated with process instance with the task data\n      responses:\n        \"200\":\n          description: list of tasks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Task\"\n\n  /task-data/{modified_process_model_identifier}/{process_instance_id}/{task_id}:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The modified id of an existing process model\n        schema:\n          type: string\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: task_id\n        in: path\n        required: true\n        description: The unique id of the task.\n        schema:\n          type: string\n    put:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.task_data_update\n      summary: Update the task data for requested instance and task\n      tags:\n        - Process Instances\n      responses:\n        \"200\":\n          description: Task Updated Successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /process-data/{modified_process_model_identifier}/{process_instance_id}/{process_data_identifier}:\n    parameters:\n      - name: modified_process_model_identifier\n        in: path\n        required: true\n        description: The modified id of an existing process model\n        schema:\n          type: string\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: process_data_identifier\n        in: path\n        required: true\n        description: The identifier of the process data.\n        schema:\n          type: string\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_data_show\n      summary: Fetch the process data value.\n      tags:\n        - Data Objects\n      responses:\n        \"200\":\n          description: Fetch succeeded.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /service-tasks:\n    get:\n      tags:\n        - Service Tasks\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.service_task_list\n      summary: Gets all available service task connectors\n      responses:\n        \"200\":\n          description: All service task connectors\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceTask\"\n\n  /authentications:\n    get:\n      tags:\n        - Authentications\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.authentication_list\n      summary: Gets all available authentications from connector proxy\n      responses:\n        \"200\":\n          description: All authentications\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceTask\"\n\n  /authentication_callback/{service}/{auth_method}:\n    parameters:\n      - name: service\n        in: path\n        required: true\n        description: The name of the service\n        schema:\n          type: string\n      - name: auth_method\n        in: path\n        required: true\n        description: The method\n        schema:\n          type: string\n      - name: response\n        in: query\n        required: true\n        description: The response\n        schema:\n          type: string\n      - name: token\n        in: query\n        required: true\n        description: The response\n        schema:\n          type: string\n    get:\n      # disable security so we can get the token from query params instead\n      security: []\n      tags:\n        - Authentications\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.authentication_callback\n      summary: Callback to backend\n      responses:\n        \"200\":\n          description: All authentications\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceTask\"\n\n  /tasks/{process_instance_id}/{task_id}:\n    parameters:\n      - name: task_id\n        in: path\n        required: true\n        description: The unique id of an existing process group.\n        schema:\n          type: string\n      - name: process_instance_id\n        in: path\n        required: true\n        description: The unique id of an existing process instance.\n        schema:\n          type: integer\n      - name: terminate_loop\n        in: query\n        required: false\n        description: Terminate the loop on a looping task\n        schema:\n          type: boolean\n    get:\n      tags:\n        - Tasks\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.task_show\n      summary: Gets one task that a user wants to complete\n      responses:\n        \"200\":\n          description: One task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n    put:\n      tags:\n        - Tasks\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.task_submit\n      summary: Update the form data for a tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ProcessModelCategory\"\n      responses:\n        \"200\":\n          description: One task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n        \"202\":\n          description: \"ok: true\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OkTrue\"\n\n  /messages:\n    parameters:\n      - name: process_instance_id\n        in: query\n        required: false\n        description: the id of the process instance\n        schema:\n          type: integer\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The number of models to show per page. Defaults to page 10.\n        schema:\n          type: integer\n    get:\n      tags:\n        - Messages\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.message_instance_list\n      summary: Get a list of message instances\n      responses:\n        \"200\":\n          description: One task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /messages/{message_identifier}:\n    parameters:\n      - name: message_identifier\n        in: path\n        required: true\n        description: The unique identifier of the message model.\n        schema:\n          type: string\n    post:\n      tags:\n        - Messages\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.message_start\n      summary: Instantiate and run a given process model with a message start event matching given identifier\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Workflow\"\n      responses:\n        \"200\":\n          description: One task\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Workflow\"\n\n  /logs/{modified_process_model_identifier}/{process_instance_id}:\n    parameters:\n      - name: process_instance_id\n        in: path\n        required: true\n        description: the id of the process instance\n        schema:\n          type: integer\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The number of items to show per page. Defaults to page 10.\n        schema:\n          type: integer\n      - name: detailed\n        in: query\n        required: false\n        description: Show the detailed view, which includes all log entries\n        schema:\n          type: boolean\n    get:\n      tags:\n        - Process Instances\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.process_instance_log_list\n      summary: returns a list of logs associated with the process instance\n      responses:\n        \"200\":\n          description: list of logs\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProcessInstanceLog\"\n\n  /secrets:\n    parameters:\n      - name: page\n        in: query\n        required: false\n        description: The page number to return. Defaults to page 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        required: false\n        description: The number of items to show per page. Defaults to page 10.\n        schema:\n          type: integer\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.secret_create\n      summary: Create a secret for a key and value\n      tags:\n        - Secrets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Secret\"\n      responses:\n        \"201\":\n          description: Secret created successfully\n          content:\n            application/json:\n              schema:\n                type: number\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.secret_list\n      summary: Return list of all secrets\n      tags:\n        - Secrets\n      responses:\n        \"200\":\n          description: list of secrets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Secret\"\n\n  /secrets/{key}:\n    parameters:\n      - name: key\n        in: path\n        required: true\n        description: The key we are using\n        schema:\n          type: string\n    get:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.get_secret\n      summary: Return a secret value for a key\n      tags:\n        - Secrets\n      responses:\n        \"200\":\n          description: We return a secret\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Secret\"\n    delete:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.secret_delete\n      summary: Delete an existing secret\n      tags:\n        - Secrets\n      responses:\n        \"204\":\n          description: The secret is deleted\n        \"401\":\n          description: Unauthorized to delete secret\n        \"404\":\n          description: Secret does not exist\n    put:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.secret_update\n      summary: Modify an existing secret\n      tags:\n        - Secrets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Secret\"\n      responses:\n        \"200\":\n          description: Secret updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Secret\"\n        \"401\":\n          description: Unauthorized to update secret\n        \"404\":\n          description: Secret does not exist\n\n  /permissions-check:\n    post:\n      operationId: spiffworkflow_backend.routes.process_api_blueprint.permissions_check\n      summary: Checks if current user has access to given list of target uris and permissions.\n      tags:\n        - Permissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Secret\"\n      responses:\n        \"200\":\n          description: Result of permission check\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Secret\"\n\ncomponents:\n  securitySchemes:\n    jwt:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      x-bearerInfoFunc: spiffworkflow_backend.routes.user.verify_token\n      x-scopeValidateFunc: spiffworkflow_backend.routes.user.validate_scope\n\n    oAuth2AuthCode:\n      type: oauth2\n      description: authenticate with openid server\n      flows:\n        authorizationCode:\n          authorizationUrl: /v1.0/login_api\n          tokenUrl: /v1.0/login_api_return\n          scopes:\n            read_email: read email\n      x-tokenInfoFunc: spiffworkflow_backend.routes.user.get_scope\n  #    oAuth2AuthCode:\n  #      type: oauth2\n  #      description: authenticate with openid server\n  #      flows:\n  #        implicit:\n  #          authorizationUrl: /v1.0/login_api\n  #          scopes:\n  #            uid: uid\n  #      x-tokenInfoUrl: localhost:7000/v1.0/login_api_return\n  #      x-tokenInfoFunc: spiffworkflow_backend.routes.user.get_scope\n\n  schemas:\n    OkTrue:\n      properties:\n        ok:\n          type: boolean\n          example: true\n    User:\n      properties:\n        uid:\n          type: string\n        email_address:\n          type: string\n        display_name:\n          type: string\n        affiliation:\n          type: string\n        eppn:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        title:\n          type: string\n    DataModel:\n      properties:\n        id:\n          type: string\n    ProcessModelDiffList:\n      properties:\n        workflow_spec_id:\n          type: string\n          example: top_level_workflow\n        created_at_in_seconds:\n          type: integer\n        location:\n          type: string\n          example: remote\n        new:\n          type: boolean\n          example: false\n    ProcessModelFilesList:\n      properties:\n        file_model_id:\n          type: integer\n          example: 171\n        workflow_spec_id:\n          type: string\n          example: top_level_workflow\n        filename:\n          type: string\n          example: data_security_plan.dmn\n        created_at_in_seconds:\n          type: integer\n        type:\n          type: string\n          example: dmn\n        primary:\n          type: boolean\n          example: false\n        content_type:\n          type: string\n          example: text/xml\n        primary_process_id:\n          type: string\n          example: null\n        md5_hash:\n          type: string\n          example: f12e2bbd-a20c-673b-ccb8-a8a1ea9c5b7b\n\n    ProcessModelFilesDiff:\n      properties:\n        filename:\n          type: string\n          example: data_security_plan.dmn\n        created_at_in_seconds:\n          type: integer\n        type:\n          type: string\n          example: dmn\n        primary:\n          type: boolean\n          example: false\n        content_type:\n          type: string\n          example: text/xml\n        primary_process_id:\n          type: string\n          example: null\n        md5_hash:\n          type: string\n          example: f12e2bbd-a20c-673b-ccb8-a8a1ea9c5b7b\n        location:\n          type: string\n          example: remote\n        new:\n          type: boolean\n          example: false\n    ProcessModelAll:\n      properties:\n        workflow_spec_id:\n          type: string\n          example: acaf1258-43b4-437e-8846-f612afa66811\n        created_at_in_seconds:\n          type: integer\n        md5_hash:\n          type: string\n          example: c30fd597f21715018eab12f97f9d4956\n    Study:\n      properties:\n        id:\n          type: integer\n          example: 1234\n        title:\n          type: string\n          example: The impact of fried pickles on beer consumption in bipedal software developers.\n        updated_at_in_seconds:\n          type: string\n          format: date_time\n          example: \"2019-12-25T09:12:33.001Z\"\n        user_uid:\n          type: string\n          example: dhf8r\n        status:\n          type: string\n          enum: [\"in_progress\", \"hold\", \"open_for_enrollment\", \"abandoned\"]\n          example: done\n        sponsor:\n          type: string\n          x-nullable: true\n          example: \"Sartography Pharmaceuticals\"\n        ind_number:\n          type: string\n          x-nullable: true\n          example: \"27b-6-42\"\n    StudyAssociate:\n      properties:\n        uid:\n          type: string\n          example: \"dhf8r\"\n        access:\n          type: boolean\n          example: False\n        role:\n          type: string\n          example: \"TODO\"\n    DocumentDirectory:\n      properties:\n        level:\n          type: string\n          x-nullable: true\n          example: \"Ancillary Document\"\n        description:\n          type: string\n          x-nullable: true\n          example: \"Documents that are ancillary to the study\"\n        file:\n          $ref: \"#/components/schemas/File\"\n          x-nullable: true\n        expanded:\n          type: boolean\n          example: False\n        filecount:\n          type: integer\n          example: 1\n        children:\n          type: array\n          items:\n            $ref: \"#/components/schemas/File\"\n    DataStore:\n      properties:\n        id:\n          type: integer\n          example: 1234\n        key:\n          type: string\n          example: MyKey\n        workflow_id:\n          type: integer\n          x-nullable: true\n          example: 12\n        user_id:\n          type: string\n          x-nullable: true\n          example: dhf8r\n        task_id:\n          type: string\n          x-nullable: true\n          example: MyTask\n        process_model_id:\n          type: string\n          x-nullable: true\n          example: My Spec Name\n        value:\n          type: string\n          x-nullable: true\n          example: Some Value\n    Process:\n      properties:\n        identifier:\n          type: string\n        display_name:\n          type: string\n        process_group_id:\n          type: string\n        process_model_id:\n          type: string\n        type:\n          type: string\n        file_name:\n          type: string\n        has_lanes:\n          type: boolean\n        is_executable:\n          type: boolean\n        is_primary:\n          type: boolean\n    ProcessModel:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        display_name:\n          type: string\n        description:\n          type: string\n        primary_process_id:\n          type: string\n          nullable: true\n        category_id:\n          type: string\n          nullable: true\n        workflow_spec_category:\n          $ref: \"#/components/schemas/ProcessModelCategory\"\n        is_status:\n          type: boolean\n          nullable: true\n    ProcessModelCategory:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        display_name:\n          type: string\n        display_order:\n          type: integer\n        workflows:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Workflow\"\n    File:\n      properties:\n        id:\n          type: number\n        name:\n          type: string\n          example: \"random_fact.bpmn\"\n        version:\n          type: integer\n        updated_at_in_seconds:\n          type: string\n          format: date_time\n          example: \"2019-12-25T09:12:33.001Z\"\n        type:\n          type: string\n        primary:\n          type: boolean\n        content_type:\n          type: string\n          example: \"application/xml\"\n        workflow_spec_id:\n          type: string\n          example: \"random_fact\"\n          x-nullable: true\n        file:\n          type: string\n    Workflow:\n      properties:\n        id:\n          readOnly: true\n          type: integer\n          format: int64\n        status:\n          type: string\n          enum: [\"new\", \"user_input_required\", \"waiting\", \"complete\"]\n        navigation:\n          type: array\n          items:\n            $ref: \"#/components/schemas/NavigationItem\"\n        next_task:\n          $ref: \"#/components/schemas/Task\"\n        workflow_spec_id:\n          type: string\n        spec_version:\n          type: string\n        is_latest_spec:\n          type: boolean\n        num_tasks_total:\n          type: integer\n        num_tasks_complete:\n          type: integer\n        num_tasks_incomplete:\n          type: integer\n\n      example:\n        id: 291234\n        status: \"user_input_required\"\n        workflow_spec_id: \"random_fact\"\n        spec_version: \"v1.1 [22,23]\"\n        is_latest_spec: True\n        next_task:\n          id: study_identification\n          name: Study Identification\n          title: IRB Review\n          documentation: \"# Heading 1\\n\\nMarkdown documentation text goes here\"\n          type: form\n          state: ready\n    Task:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n        state:\n          type: string\n        form:\n          $ref: \"#/components/schemas/Form\"\n        documentation:\n          type: string\n        data:\n          type: object\n        multi_instance_type:\n          type: string\n          enum: [\"none\", \"looping\", \"parallel\", \"sequential\"]\n        multi_instance_count:\n          type: number\n        multi_instance_index:\n          type: number\n        process_name:\n          type: string\n        properties:\n          type: object\n      example:\n        id: study_identification\n        name: Study Identification\n        title: IRB Review\n        documentation: \"# Heading 1\\n\\nMarkdown documentation text goes here\"\n        type: form\n        state: ready\n        form:\n          \"key\": \"irb_review_form\"\n          \"fields\":\n            - \"id\": \"irb_review_type\"\n              \"type\": \"enum\"\n              \"label\": \"Select IRB Review Type\"\n              \"options\":\n                - id: \"emergency_use\"\n                  name: \"Emergency Use\"\n                - id: \"humanitarian_device\"\n                  name: \"Humanitarian Device\"\n                - id: \"non_human\"\n                  name: \"Non-Human\"\n                - id: \"non_uva_agent\"\n                  name: \"Non-UVA Agent\"\n                - id: \"exempt\"\n                  name: \"Exempt\"\n                - id: \"non_engaged\"\n                  name: \"Non-Engaged\"\n                - id: \"expedited\"\n                  name: \"Expedited\"\n                - id: \"full_board\"\n                  name: \"Full Board\"\n              \"default_value\": \"Full Board\"\n              \"validation\":\n                - name: \"required\"\n                  config: \"true\"\n              \"properties\":\n                - id: \"description\"\n                  value: \"Description text goes here\"\n                - id: \"help\"\n                  value: \"# Heading 1\\n\\nMarkdown help text goes here\"\n                - id: \"required_expression\"\n                  value: \"model.my_boolean_field_id \u0026\u0026 model.my_enum_field_value !== 'something'\"\n                - id: \"hide_expression\"\n                  value: \"model.my_enum_field_value === 'something'\"\n    PaginatedTaskLog:\n      properties:\n        code:\n          example: \"email_sent\"\n          type: string\n        level:\n          example: \"warning\"\n          type: string\n        user:\n          example: \"email_sent\"\n          type: string\n        page:\n          type: integer\n          example: 0\n        per_page:\n          type: integer\n          example: 10\n        sort_column:\n          type: string\n          example: \"timestamp\"\n        sort_reverse:\n          type: boolean\n          example: false\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TaskLog\"\n        has_next:\n          type: boolean\n          example: true\n        has_prev:\n          type: boolean\n          example: false\n    TaskLog:\n      properties:\n        level:\n          type: string\n          example: \"info\"\n        code:\n          example: \"email_sent\"\n          type: string\n        message:\n          example: \"Approval email set to Jake in Accounting\"\n          type: string\n        workflow_id:\n          example: 42\n          type: integer\n        user_uid:\n          example: \"dhf8r\"\n          type: string\n        timestamp:\n          type: string\n          format: date_time\n          example: \"2021-01-07T11:36:40.001Z\"\n    TaskEvent:\n      properties:\n        workflow:\n          $ref: \"#/components/schemas/Workflow\"\n        study:\n          $ref: \"#/components/schemas/Study\"\n        workflow_sec:\n          $ref: \"#/components/schemas/ProcessModel\"\n        spec_version:\n          type: string\n        action:\n          type: string\n        task_id:\n          type: string\n        task_type:\n          type: string\n        task_lane:\n          type: string\n        form_data:\n          type: object\n        mi_type:\n          type: string\n        mi_count:\n          type: integer\n        mi_index:\n          type: integer\n        process_name:\n          type: string\n        date:\n          type: string\n    Form:\n      properties:\n        key:\n          type: string\n        fields:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Field\"\n      example:\n        \"key\": \"irb_review_form\"\n        \"fields\":\n          - \"id\": \"irb_review_type\"\n            \"type\": \"enum\"\n            \"label\": \"Select IRB Review Type\"\n            \"options\":\n              - id: \"emergency_use\"\n                name: \"Emergency Use\"\n              - id: \"humanitarian_device\"\n                name: \"Humanitarian Device\"\n              - id: \"non_human\"\n                name: \"Non-Human\"\n              - id: \"non_uva_agent\"\n                name: \"Non-UVA Agent\"\n              - id: \"exempt\"\n                name: \"Exempt\"\n              - id: \"non_engaged\"\n                name: \"Non-Engaged\"\n              - id: \"expedited\"\n                name: \"Expedited\"\n              - id: \"full_board\"\n                name: \"Full Board\"\n            \"default_value\": \"Full Board\"\n            \"validation\":\n              - name: \"required\"\n                config: \"true\"\n            \"properties\":\n              - id: \"description\"\n                value: \"Description text goes here\"\n              - id: \"help\"\n                value: \"# Heading 1\\n\\nMarkdown help text goes here\"\n              - id: \"required_expression\"\n                value: \"model.my_boolean_field_id \u0026\u0026 model.my_enum_field_value !== 'something'\"\n              - id: \"hide_expression\"\n                value: \"model.my_enum_field_value === 'something'\"\n    Field:\n      properties:\n        id:\n          type: string\n          readOnly: true\n        type:\n          type: string\n          enum: [\"string\", \"long\", \"boolean\", \"date\", \"enum\"]\n          readOnly: true\n        label:\n          type: string\n          readOnly: true\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/EnumFieldOption\"\n          readOnly: true\n        default_value:\n          type: string\n          readOnly: true\n        validation:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FieldValidation\"\n          readOnly: true\n        \"properties\":\n          type: array\n          items:\n            $ref: \"#/components/schemas/FieldProperty\"\n          readOnly: true\n    EnumFieldOption:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    FieldValidation:\n      properties:\n        name:\n          type: string\n        config:\n          type: string\n    FieldProperty:\n      properties:\n        id:\n          type: string\n        value:\n          type: string\n      example:\n        id: \"required_expression\"\n        value: \"model.should_require\"\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          format: string\n          example: \"access_denied\"\n        message:\n          type: string\n          example: \"You do not have permission to view the requested study.\"\n    Script:\n      properties:\n        name:\n          type: string\n          format: string\n          example: \"random_fact\"\n        description:\n          type: string\n          example: \"Returns a random fact about a topic.  Provide an argument of either 'cat', 'norris', or 'buzzword'\"\n    LookupItem:\n      properties:\n        value:\n          type: string\n          format: string\n          example: \"1000\"\n        label:\n          type: string\n          example: \"Chuck Norris\"\n        data:\n          type: string\n    NavigationItem:\n      properties:\n        id:\n          type: number\n          format: integer\n          example: 5\n        task_id:\n          type: string\n          format: uuid\n          example: \"1234123uuid1234\"\n        name:\n          type: string\n          example: \"Task_Has_bananas\"\n        description:\n          type: string\n          example: \"Has Bananas?\"\n        backtracks:\n          type: boolean\n          example: false\n        level:\n          type: integer\n          example: 1\n        indent:\n          type: integer\n          example: 2\n        child_count:\n          type: integer\n          example: 4\n        state:\n          type: string\n          enum:\n            [\n              \"FUTURE\",\n              \"WAITING\",\n              \"READY\",\n              \"CANCELLED\",\n              \"COMPLETED\",\n              \"LIKELY\",\n              \"MAYBE\",\n            ]\n          readOnly: true\n        is_decision:\n          type: boolean\n          example: False\n          readOnly: true\n        task:\n          $ref: \"#/components/schemas/Task\"\n    Approval:\n      properties:\n        id:\n          type: number\n          format: integer\n          example: 5\n    ApprovalCounts:\n      properties:\n        PENDING:\n          type: number\n          format: integer\n          example: 5\n        APPROVED:\n          type: number\n          format: integer\n          example: 5\n        DECLINED:\n          type: number\n          format: integer\n          example: 5\n        CANCELED:\n          type: number\n          format: integer\n          example: 5\n        AWAITING:\n          type: number\n          format: integer\n          example: 5\n    ServiceTask:\n      properties:\n        items:\n          type: array\n          $ref: \"#/components/schemas/ServiceTaskConnector\"\n          readOnly: true\n    ServiceTaskConnector:\n      properties:\n        id:\n          type: string\n          example: xero/CreateInvoice\n        parameters:\n          type: array\n          $ref: \"#/components/schemas/ServiceTaskOperatorParameter\"\n          readOnly: true\n    ServiceTaskOperatorParameter:\n      properties:\n        id:\n          type: string\n          example: client_id\n        type:\n          type: string\n          example: str\n        required:\n          type: boolean\n          example: false\n    GitRepo:\n      properties:\n        #        remote:\n        #          type: string\n        #          example: sartography/crconnect-workflow-specs\n        directory:\n          type: string\n          example: /home/cr-connect/sync_files\n        branch:\n          type: string\n          example: dev\n        merge_branch:\n          type: string\n          example: staging\n        changes:\n          type: array\n          example: [\"file_1.txt\", \"file_2.txt\"]\n        untracked:\n          type: array\n          example: [\"a_file.txt\", \"b_file.txt\"]\n    Secret:\n      properties:\n        key:\n          description: The key of the secret we want to use\n          type: string\n          example: my_secret_key\n          nullable: false\n        value:\n          description: The value associated with the key\n          type: string\n          example: my_super_secret_value\n          nullable: false\n        user_id:\n          description: The id of the logged in user that updated this secret\n          type: number\n          example: 1\n          nullable: false\n    ProcessInstanceLog:\n      properties:\n        id:\n          description: The id of the log\n          type: number\n          example: 1\n          nullable: false\n        process_instance_id:\n          description: The id of the associated process instance\n          type: number\n          example: 2\n          nullable: false\n        bpmn_process_identifier:\n          description: The id of the bpmn process element\n          type: string\n          example: Process_SimpleProcess\n          nullable: false\n        task:\n          description: The task identifier\n          type: number\n          example: 1234567890\n          nullable: false\n        message:\n          description: The msg returned in the log\n          type: string\n          example: Some message returned in the log\n          nullable: true\n        timestamp:\n          description: The timestamp returned in the log\n          type: number\n          example: 123456789.12345\n",
			"canonicalURL": "/github.com/sartography/spiffworkflow-backend@b33947bdafd8ea59b6f00fbd36640d77eca6f6a7/-/blob/src/spiffworkflow_backend/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/sartography/spiffworkflow-backend/blob/b33947bdafd8ea59b6f00fbd36640d77eca6f6a7/src/spiffworkflow_backend/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/logs/{modified_process_model_identifier}/{process_instance_id}\": get: operation \"spiffworkflow_backend.routes.process_api_blueprint.process_instance_log_list\": at src/spiffworkflow_backend/api.yml:1698:7: parse path \"/logs/{modified_process_model_identifier}/{process_instance_id}\": path parameter not specified: \"modified_process_model_identifier\""
}