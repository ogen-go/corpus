{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/postmanlabs/openapi-to-postman"
		},
		"file": {
			"name": "payments-webhooks-with-paths.yaml",
			"size": 0,
			"path": "test/data/valid_openapi31X/webhooks/payments-webhooks-with-paths.yaml",
			"byteSize": 93647,
			"content": "openapi: 3.1.0\ninfo:\n  contact:\n    email: developer-experience@adyen.com\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    x-twitter: Adyen\n  description: |-\n    The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.\n\n    For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: \"Webhooks test - Two webhooks and paths\"\n  version: \"3\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/mermade/oas-kit\n        version: 7.0.4\n      format: openapi\n      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/master/json/MarketPayNotificationService-v3.json\n      version: \"3.1\"\n  x-preferred: false\n  x-providerName: adyen.com\n  x-publicVersion: true\n  x-serviceName: MarketPayNotificationService\ncomponents:\n  examples:\n    WebhookAck:\n      summary: Acknowledge Webhook\n      value:\n        notificationResponse: \"[accepted]\"\n    post-ACCOUNT_CLOSED-accountClosed:\n      summary: ACCOUNT CLOSED example\n      value:\n        content:\n          invalidFields:\n            - errorCode: 1\n              errorDescription: Field is missing\n              fieldType:\n                field: AccountHolderDetails.BusinessDetails.Shareholders.unknown\n                fieldName: unknown\n                shareholderCode: SH00001\n          pspReference: TSTPSPR0001\n          resultCode: Success\n          status: Closed\n        error:\n          errorCode: \"000\"\n          message: test error message\n        eventDate: 2019-01-01T01:00:00+01:00\n        eventType: ACCOUNT_CLOSED\n        executingUserKey: executing-user-key\n        live: false\n        pspReference: TSTPSPR0001\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: '#/components/schemas/Pet'\n    Error:\n      required:\n        - code\n        - mesage\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    AccountCloseNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CloseAccountResponse\"\n          description: The details of the Account update.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountCreateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CreateAccountResponse\"\n          description: The details of the account creation.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountEvent:\n      properties:\n        event:\n          description: |-\n            The event.\n            \u003ePermitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.\n            For more information, refer to [Verification checks](https://docs.adyen.com/platforms/verification-checks).\n          enum:\n            - InactivateAccount\n            - RefundNotPaidOutTransfers\n          type: string\n        executionDate:\n          description: The date on which the event will take place.\n          format: date-time\n          type: string\n        reason:\n          description: The reason why this event has been created.\n          type: string\n      required:\n        - event\n        - executionDate\n        - reason\n    AccountFundsBelowThresholdNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountFundsBelowThresholdNotificationContent\"\n          description: Details of the liable account with funds under threshold.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n    AccountFundsBelowThresholdNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account with funds under threshold\n          type: string\n        balanceDate:\n          $ref: \"#/components/schemas/LocalDate\"\n          description: The date of the funds were found to be below threshold.\n        currentFunds:\n          $ref: \"#/components/schemas/Amount\"\n          description: The current funds in the liable account.\n        fundThreshold:\n          $ref: \"#/components/schemas/Amount\"\n          description: The configured fund threshold for the liable account\n        merchantAccountCode:\n          description: The code of the merchant account.\n          type: string\n      required:\n        - accountCode\n        - merchantAccountCode\n        - fundThreshold\n    AccountHolderCreateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CreateAccountHolderResponse\"\n          description: The details of the account holder creation.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountHolderDetails:\n      properties:\n        address:\n          $ref: \"#/components/schemas/ViasAddress\"\n          description: The address of the account holder.\n        bankAccountDetails:\n          description: Array of bank accounts associated with the account holder. For details about the required `BankAccountDetail` fields, refer to [Bank account check](https://docs.adyen.com/platforms/verification-checks/bank-account-check).\n          items:\n            $ref: \"#/components/schemas/BankAccountDetail\"\n          type: array\n        businessDetails:\n          $ref: \"#/components/schemas/BusinessDetails\"\n          description: |-\n            Details about the business or nonprofit account holder.\n            Required when creating an account holder with `legalEntity` **Business** or **NonProfit**.\n        email:\n          description: The email address of the account holder.\n          type: string\n        fullPhoneNumber:\n          description: |-\n            The phone number of the account holder provided as a single string. It will be handled as a landline phone.\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"\n          type: string\n        individualDetails:\n          $ref: \"#/components/schemas/IndividualDetails\"\n          description: |\n            Details about the individual account holder.\n            Required when creating an account holder with `legalEntity` **Individual**.\n        merchantCategoryCode:\n          description: |-\n            The Merchant Category Code of the account holder.\n            \u003e If not specified in the request, this will be derived from the platform account (which is configured by Adyen).\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: |-\n            A set of key and value pairs for general use by the account holder or merchant.\n            The keys do not have specific names and may be used for storing miscellaneous data as desired.\n            \u003e The values being stored have a maximum length of eighty (80) characters and will be truncated if necessary.\n            \u003e Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.\n          type: object\n        principalBusinessAddress:\n          $ref: \"#/components/schemas/ViasAddress\"\n          description: The principal business address of the account holder.\n        webAddress:\n          description: The URL of the website of the account holder.\n          type: string\n      required:\n        - fullPhoneNumber\n        - email\n        - webAddress\n    AccountHolderPayoutNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountHolderPayoutNotificationContent\"\n          description: Details of the payout to the Account Holder.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountHolderPayoutNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account from which the payout was made.\n          type: string\n        accountHolderCode:\n          description: The code of the Account Holder to which the payout was made.\n          type: string\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The payout amount.\n        amounts:\n          description: The payout amounts (per currency).\n          items:\n            $ref: \"#/components/schemas/Amount\"\n          type: array\n        bankAccountDetail:\n          $ref: \"#/components/schemas/BankAccountDetail\"\n          description: Details of the Bank Account to which the payout was made.\n        description:\n          description: A description of the payout.\n          type: string\n        merchantReference:\n          description: The merchant reference.\n          type: string\n          x-addedInVersion: \"2\"\n        status:\n          $ref: \"#/components/schemas/OperationStatus\"\n          description: The payout status.\n      required:\n        - accountHolderCode\n        - accountCode\n    AccountHolderStatus:\n      properties:\n        events:\n          description: A list of events scheduled for the account holder.\n          items:\n            $ref: \"#/components/schemas/AccountEvent\"\n          type: array\n        payoutState:\n          $ref: \"#/components/schemas/AccountPayoutState\"\n          description: The payout state of the account holder.\n        processingState:\n          $ref: \"#/components/schemas/AccountProcessingState\"\n          description: The processing state of the account holder.\n        status:\n          description: |-\n            The status of the account holder.\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n        statusReason:\n          description: The reason why the status was assigned to the account holder.\n          type: string\n      required:\n        - status\n    AccountHolderStatusChangeNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountHolderStatusChangeNotificationContent\"\n          description: The details of the Account Holder status change.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n    AccountHolderStatusChangeNotificationContent:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        newStatus:\n          $ref: \"#/components/schemas/AccountHolderStatus\"\n          description: The new status of the account holder.\n          x-addedInVersion: \"2\"\n        oldStatus:\n          $ref: \"#/components/schemas/AccountHolderStatus\"\n          description: The former status of the account holder.\n          x-addedInVersion: \"2\"\n        reason:\n          description: The reason for the status change.\n          type: string\n      required:\n        - accountHolderCode\n        - oldStatus\n        - newStatus\n    AccountHolderStoreStatusChangeNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountHolderStoreStatusChangeNotificationContent\"\n          description: The details of the Account Holder Store status change.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n    AccountHolderStoreStatusChangeNotificationContent: {}\n    AccountHolderUpcomingDeadlineNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountHolderUpcomingDeadlineNotificationContent\"\n          description: The details of the upcoming event.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n    AccountHolderUpcomingDeadlineNotificationContent:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder whom the event refers to.\n          type: string\n        event:\n          description: The event name that will be trigger if no action is taken.\n          enum:\n            - AccessPii\n            - ApiTierUpdate\n            - CloseAccount\n            - CloseStores\n            - DeleteBankAccounts\n            - DeletePayoutMethods\n            - DeleteShareholders\n            - DeleteSignatories\n            - InactivateAccount\n            - KYCDeadlineExtension\n            - RecalculateAccountStatusAndProcessingTier\n            - RefundNotPaidOutTransfers\n            - ResolveEvents\n            - SaveAccountHolder\n            - SaveCriminalityAndPEPChecks\n            - SaveKYCCheckStatus\n            - SuspendAccount\n            - UnSuspendAccount\n            - UpdateAccountHolderState\n            - Verification\n          type: string\n        executionDate:\n          description: The execution date scheduled for the event.\n          format: date-time\n          type: string\n        reason:\n          description: The reason that leads to scheduling of the event.\n          type: string\n    AccountHolderUpdateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/UpdateAccountHolderResponse\"\n          description: The details of the Account Holder update.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountHolderVerificationNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountHolderVerificationNotificationContent\"\n          description: The details of the Account Holder verification.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountHolderVerificationNotificationContent:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        bankAccountUUID:\n          description: The unique ID of the bank account that has been verified.\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that has been verified.\n          type: string\n        signatoryCode:\n          description: The code of the signatory that has been verified.\n          type: string\n        statusSummaryItems:\n          deprecated: true\n          description: A summary of the verification status.\n          items:\n            $ref: \"#/components/schemas/KYCCheckDataSummaryItem\"\n          type: array\n        verificationStatus:\n          description: The status of verification.\n          enum:\n            - AWAITING_DATA\n            - DATA_PROVIDED\n            - FAILED\n            - INVALID_DATA\n            - PASSED\n            - PENDING\n            - PENDING_REVIEW\n            - RETRY_LIMIT_REACHED\n            - UNCHECKED\n          type: string\n        verificationType:\n          description: The type of validation performed.\n          enum:\n            - BANK_ACCOUNT_VERIFICATION\n            - CARD_VERIFICATION\n            - COMPANY_VERIFICATION\n            - IDENTITY_VERIFICATION\n            - LEGAL_ARRANGEMENT_VERIFICATION\n            - NONPROFIT_VERIFICATION\n            - PASSPORT_VERIFICATION\n            - PAYOUT_METHOD_VERIFICATION\n            - PCI_VERIFICATION\n          type: string\n      required:\n        - accountHolderCode\n    AccountPayoutState:\n      properties:\n        allowPayout:\n          description: Indicates whether payouts are allowed. This field is the overarching payout status, and is the aggregate of multiple conditions (e.g., KYC status, disabled flag, etc). If this field is false, no payouts will be permitted for any of the account holder's accounts. If this field is true, payouts will be permitted for any of the account holder's accounts.\n          type: boolean\n        disableReason:\n          description: The reason why payouts (to all of the account holder's accounts) have been disabled (by the platform). If the `disabled` field is true, this field can be used to explain why.\n          type: string\n        disabled:\n          description: Indicates whether payouts have been disabled (by the platform) for all of the account holder's accounts. A platform may enable and disable this field at their discretion. If this field is true, `allowPayout` will be false and no payouts will be permitted for any of the account holder's accounts. If this field is false, `allowPayout` may or may not be enabled, depending on other factors.\n          type: boolean\n        payoutLimit:\n          $ref: \"#/components/schemas/Amount\"\n          description: The maximum amount that payouts are limited to. Only applies if payouts are allowed but limited.\n        tierNumber:\n          description: The payout tier that the account holder occupies.\n          format: int32\n          type: integer\n          x-addedInVersion: \"3\"\n    AccountProcessingState:\n      properties:\n        disableReason:\n          description: The reason why processing has been disabled.\n          type: string\n        disabled:\n          description: Indicates whether the processing of payments is allowed.\n          type: boolean\n        processedFrom:\n          $ref: \"#/components/schemas/Amount\"\n          description: The lower bound of the processing tier (i.e., an account holder must have processed at least this amount of money in order to be placed into this tier).\n        processedTo:\n          $ref: \"#/components/schemas/Amount\"\n          description: The upper bound of the processing tier (i.e., an account holder must have processed less than this amount of money in order to be placed into this tier).\n        tierNumber:\n          description: The processing tier that the account holder occupies.\n          format: int32\n          type: integer\n          x-addedInVersion: \"3\"\n    AccountUpdateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/UpdateAccountResponse\"\n          description: The details of the Account update.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n        - currency\n    BankAccountDetail:\n      properties:\n        accountNumber:\n          description: |-\n            The bank account number (without separators).\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        accountType:\n          description: |-\n            The type of bank account.\n            Only applicable to bank accounts held in the USA.\n            The permitted values are: `checking`, `savings`.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankAccountName:\n          description: The name of the bank account.\n          type: string\n        bankAccountUUID:\n          description: |\n            The unique identifier (UUID) of the Bank Account.\n            \u003eIf, during an account holder create or update request, this field is left blank (but other fields provided), a new Bank Account will be created with a procedurally-generated UUID.\n\n            \u003eIf, during an account holder create request, a UUID is provided, the creation of the Bank Account will fail while the creation of the account holder will continue.\n\n            \u003eIf, during an account holder update request, a UUID that is not correlated with an existing Bank Account is provided, the update of the account holder will fail.\n\n            \u003eIf, during an account holder update request, a UUID that is correlated with an existing Bank Account is provided, the existing Bank Account will be updated.\n          type: string\n        bankBicSwift:\n          description: |-\n            The bank identifier code.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankCity:\n          description: |-\n            The city in which the bank branch is located.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankCode:\n          description: |-\n            The bank code of the banking institution with which the bank account is registered.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankName:\n          description: |-\n            The name of the banking institution with which the bank account is held.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        branchCode:\n          description: |-\n            The branch code of the branch under which the bank account is registered. The value to be specified in this parameter depends on the country of the bank account:\n            * United States - Routing number\n            * United Kingdom - Sort code\n            * Germany - Bankleitzahl\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        checkCode:\n          description: |-\n            The check code of the bank account.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        countryCode:\n          description: |-\n            The two-letter country code in which the bank account is registered.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        currencyCode:\n          description: |-\n            The currency in which the bank account deals.\n            \u003eThe permitted currency codes are defined in ISO-4217 (e.g. 'EUR').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        iban:\n          description: |-\n            The international bank account number.\n            \u003eThe IBAN standard is defined in ISO-13616.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerCity:\n          description: |-\n            The city of residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerCountryCode:\n          description: |-\n            The country code of the country of residence of the bank account owner.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerDateOfBirth:\n          description: |\n            The date of birth of the bank account owner.\n          type: string\n        ownerHouseNumberOrName:\n          description: |-\n            The house name or number of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerName:\n          description: |-\n            The name of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerNationality:\n          description: |-\n            The country code of the country of nationality of the bank account owner.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerPostalCode:\n          description: |-\n            The postal code of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerState:\n          description: |-\n            The state of residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerStreet:\n          description: |-\n            The street name of the residence of the bank account owner.\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        primaryAccount:\n          description: If set to true, the bank account is a primary account.\n          type: boolean\n        taxId:\n          description: |-\n            The tax ID number.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n        urlForVerification:\n          description: |-\n            The URL to be used for bank account verification.\n            This may be generated on bank account creation.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/platforms/onboarding-and-verification) section for details on field requirements.\n          type: string\n    BeneficiarySetupNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/BeneficiarySetupNotificationContent\"\n          description: Details of the beneficiary setup.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    BeneficiarySetupNotificationContent:\n      properties:\n        destinationAccountCode:\n          description: The code of the beneficiary account.\n          type: string\n        destinationAccountHolderCode:\n          description: The code of the beneficiary Account Holder.\n          type: string\n        merchantReference:\n          description: The reference provided by the merchant.\n          type: string\n        sourceAccountCode:\n          description: The code of the benefactor account.\n          type: string\n        sourceAccountHolderCode:\n          description: The code of the benefactor Account Holder.\n          type: string\n        transferDate:\n          description: The date on which the beneficiary was set up and funds transferred from benefactor to beneficiary.\n          format: date-time\n          type: string\n        transferredTransactionCount:\n          description: The number of transactions transferred upon the setup of the beneficiary.\n          format: int32\n          type: integer\n      required:\n        - sourceAccountHolderCode\n        - sourceAccountCode\n        - destinationAccountHolderCode\n        - destinationAccountCode\n        - transferDate\n        - transferredTransactionCount\n    BusinessDetails:\n      properties:\n        doingBusinessAs:\n          description: The registered name of the company (if it differs from the legal name of the company).\n          type: string\n        legalBusinessName:\n          description: The legal name of the company.\n          type: string\n        listedUltimateParentCompany:\n          description: Information about the parent public company. Required if the account holder is 100% owned by a publicly listed company.\n          items:\n            $ref: \"#/components/schemas/UltimateParentCompany\"\n          type: array\n        shareholders:\n          description: Array containing information about individuals associated with the account holder either through ownership or control. For details about how you can identify them, refer to [Identity check](https://docs.adyen.com/platforms/verification-checks/identity-check).\n          items:\n            $ref: \"#/components/schemas/ShareholderContact\"\n          type: array\n        signatories:\n          description: |-\n            Signatories associated with the company.\n            Each array entry should represent one signatory.\n          items:\n            $ref: \"#/components/schemas/SignatoryContact\"\n          type: array\n        taxId:\n          description: The tax ID of the company.\n          type: string\n    CloseAccountResponse:\n      properties:\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          description: |-\n            The new status of the account.\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n          x-addedInVersion: \"2\"\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n      required:\n        - status\n    CompensateNegativeBalanceNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CompensateNegativeBalanceNotificationContent\"\n          description: Details of the negative balance compensation.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n    CompensateNegativeBalanceNotificationContent:\n      properties:\n        records:\n          description: A list of the negative balances compensated.\n          items:\n            $ref: \"#/components/schemas/CompensateNegativeBalanceNotificationRecord\"\n          type: array\n      required:\n        - records\n    CompensateNegativeBalanceNotificationRecord:\n      properties:\n        accountCode:\n          description: The code of the account whose negative balance has been compensated.\n          type: string\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount compensated.\n        transferDate:\n          description: The date on which the compensation took place.\n          format: date-time\n          type: string\n      required:\n        - accountCode\n        - transferDate\n        - amount\n    CreateAccountHolderResponse:\n      properties:\n        accountCode:\n          description: The code of a new account created for the account holder.\n          type: string\n        accountHolderCode:\n          description: The code of the new account holder.\n          type: string\n        accountHolderDetails:\n          $ref: \"#/components/schemas/AccountHolderDetails\"\n          description: Details of the new account holder.\n        accountHolderStatus:\n          $ref: \"#/components/schemas/AccountHolderStatus\"\n          description: The status of the new account holder.\n          x-addedInVersion: \"2\"\n        invalidFields:\n          description: A list of fields that caused the `/createAccountHolder` request to fail.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n        verification:\n          $ref: \"#/components/schemas/KYCVerificationResult2\"\n          description: The details of KYC Verification of the account holder.\n          x-addedInVersion: \"2\"\n      required:\n        - accountHolderCode\n        - accountHolderStatus\n        - accountHolderDetails\n        - verification\n    CreateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the new account.\n          type: string\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        payoutSchedule:\n          $ref: \"#/components/schemas/PayoutScheduleResponse\"\n          description: The payout schedule of the account.\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          description: |-\n            The status of the account.\n            \u003ePermitted values: `Active`.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n          x-addedInVersion: \"2\"\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n      required:\n        - accountHolderCode\n        - accountCode\n        - status\n    DirectDebitInitiatedNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/DirectDebitInitiatedNotificationContent\"\n          description: Details of the direct debit.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n    DirectDebitInitiatedNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount to be debited from the funding account.\n        debitInitiationDate:\n          $ref: \"#/components/schemas/LocalDate\"\n          description: The date of the debit initiation.\n        invalidFields:\n          description: Invalid fields list.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n        merchantAccountCode:\n          description: The code of the merchant account.\n          type: string\n        splits:\n          description: The split data for the debit request\n          items:\n            $ref: \"#/components/schemas/Split\"\n          type: array\n        status:\n          $ref: \"#/components/schemas/OperationStatus\"\n          description: Direct debit status.\n      required:\n        - amount\n        - accountCode\n        - merchantAccountCode\n    ErrorFieldType:\n      properties:\n        errorCode:\n          description: The validation error code.\n          format: int32\n          type: integer\n        errorDescription:\n          description: A description of the validation error.\n          type: string\n        fieldType:\n          $ref: \"#/components/schemas/FieldType\"\n          description: The type of error field.\n    FieldType:\n      properties:\n        field:\n          description: The full name of the property.\n          type: string\n        fieldName:\n          description: The type of the field.\n          enum:\n            - accountCode\n            - accountHolderCode\n            - accountHolderDetails\n            - accountNumber\n            - accountStateType\n            - accountStatus\n            - accountType\n            - address\n            - bankAccount\n            - bankAccountCode\n            - bankAccountName\n            - bankAccountUUID\n            - bankBicSwift\n            - bankCity\n            - bankCode\n            - bankName\n            - bankStatement\n            - branchCode\n            - businessContact\n            - cardToken\n            - checkCode\n            - city\n            - companyRegistration\n            - constitutionalDocument\n            - country\n            - countryCode\n            - currency\n            - currencyCode\n            - dateOfBirth\n            - destinationAccountCode\n            - document\n            - documentExpirationDate\n            - documentIssuerCountry\n            - documentIssuerState\n            - documentName\n            - documentNumber\n            - documentType\n            - doingBusinessAs\n            - drivingLicence\n            - drivingLicenceBack\n            - drivingLicense\n            - email\n            - firstName\n            - formType\n            - fullPhoneNumber\n            - gender\n            - hopWebserviceUser\n            - houseNumberOrName\n            - iban\n            - idCard\n            - idNumber\n            - identityDocument\n            - individualDetails\n            - jobTitle\n            - lastName\n            - legalArrangement\n            - legalArrangementCode\n            - legalArrangementEntity\n            - legalArrangementEntityCode\n            - legalArrangementLegalForm\n            - legalArrangementMember\n            - legalArrangementMembers\n            - legalArrangementName\n            - legalArrangementReference\n            - legalArrangementRegistrationNumber\n            - legalArrangementTaxNumber\n            - legalArrangementType\n            - legalBusinessName\n            - legalEntity\n            - legalEntityType\n            - merchantAccount\n            - merchantCategoryCode\n            - merchantReference\n            - microDeposit\n            - name\n            - nationality\n            - originalReference\n            - ownerCity\n            - ownerCountryCode\n            - ownerHouseNumberOrName\n            - ownerName\n            - ownerPostalCode\n            - ownerState\n            - ownerStreet\n            - passport\n            - passportNumber\n            - payoutMethodCode\n            - payoutSchedule\n            - pciSelfAssessment\n            - personalData\n            - phoneCountryCode\n            - phoneNumber\n            - postalCode\n            - primaryCurrency\n            - reason\n            - returnUrl\n            - schedule\n            - shareholder\n            - shareholderCode\n            - shareholderCodeAndSignatoryCode\n            - shareholderCodeOrSignatoryCode\n            - shareholderType\n            - shopperInteraction\n            - signatory\n            - signatoryCode\n            - socialSecurityNumber\n            - sourceAccountCode\n            - splitAccount\n            - splitConfigurationUUID\n            - splitCurrency\n            - splitValue\n            - splits\n            - stateOrProvince\n            - status\n            - stockExchange\n            - stockNumber\n            - stockTicker\n            - store\n            - storeDetail\n            - storeName\n            - storeReference\n            - street\n            - taxId\n            - tier\n            - tierNumber\n            - transferCode\n            - ultimateParentCompany\n            - ultimateParentCompanyAddressDetails\n            - ultimateParentCompanyAddressDetailsCountry\n            - ultimateParentCompanyBusinessDetails\n            - ultimateParentCompanyBusinessDetailsLegalBusinessName\n            - ultimateParentCompanyBusinessDetailsRegistrationNumber\n            - ultimateParentCompanyCode\n            - ultimateParentCompanyStockExchange\n            - ultimateParentCompanyStockNumber\n            - ultimateParentCompanyStockNumberOrStockTicker\n            - ultimateParentCompanyStockTicker\n            - unknown\n            - value\n            - verificationType\n            - virtualAccount\n            - visaNumber\n            - webAddress\n            - year\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.\n          type: string\n    IndividualDetails:\n      properties:\n        name:\n          $ref: \"#/components/schemas/ViasName\"\n          description: |-\n            The name of the individual.\n            \u003eMake sure your account holder registers using the name shown on their Photo ID.\n        personalData:\n          $ref: \"#/components/schemas/ViasPersonalData\"\n          description: Personal information of the individual.\n    KYCBankAccountCheckResult:\n      properties:\n        bankAccountUUID:\n          description: The unique ID of the bank account to which the check applies.\n          type: string\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: \"#/components/schemas/KYCCheckStatusData\"\n          type: array\n    KYCCheckDataSummaryItem:\n      properties:\n        itemCode:\n          description: The code of the item reviewed.\n          format: int32\n          type: integer\n        itemDescription:\n          description: A description of the item reviewed.\n          type: string\n    KYCCheckResult2:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: \"#/components/schemas/KYCCheckStatusData\"\n          type: array\n    KYCCheckStatusData:\n      properties:\n        requiredFields:\n          description: A list of the fields required for execution of the check.\n          items:\n            type: string\n          type: array\n        status:\n          description: |-\n            The status of the check.\n\n            Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**, **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.\n          enum:\n            - AWAITING_DATA\n            - DATA_PROVIDED\n            - FAILED\n            - INVALID_DATA\n            - PASSED\n            - PENDING\n            - PENDING_REVIEW\n            - RETRY_LIMIT_REACHED\n            - UNCHECKED\n          type: string\n        summary:\n          $ref: \"#/components/schemas/KYCCheckSummary\"\n          description: A summary of the execution of the check.\n        type:\n          description: |-\n            The type of check.\n\n            Possible values:\n\n             * **BANK_ACCOUNT_VERIFICATION**: Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in v6 and later.\n\n             * **COMPANY_VERIFICATION**\n\n              * **CARD_VERIFICATION**\n\n            * **IDENTITY_VERIFICATION**\n\n            * **LEGAL_ARRANGEMENT_VERIFICATION**\n\n            * **NONPROFIT_VERIFICATION**\n\n             * **PASSPORT_VERIFICATION**\n\n            * **PAYOUT_METHOD_VERIFICATION**: Used in v6 and later.\n\n            * **PCI_VERIFICATION**\n          enum:\n            - BANK_ACCOUNT_VERIFICATION\n            - CARD_VERIFICATION\n            - COMPANY_VERIFICATION\n            - IDENTITY_VERIFICATION\n            - LEGAL_ARRANGEMENT_VERIFICATION\n            - NONPROFIT_VERIFICATION\n            - PASSPORT_VERIFICATION\n            - PAYOUT_METHOD_VERIFICATION\n            - PCI_VERIFICATION\n          type: string\n      required:\n        - type\n        - status\n    KYCCheckSummary:\n      properties:\n        code:\n          description: The code of the check.\n          format: int32\n          type: integer\n        description:\n          description: A description of the check.\n          type: string\n      required:\n        - code\n    KYCShareholderCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: \"#/components/schemas/KYCCheckStatusData\"\n          type: array\n        shareholderCode:\n          description: The code of the shareholder to which the check applies.\n          type: string\n    KYCSignatoryCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: \"#/components/schemas/KYCCheckStatusData\"\n          type: array\n        signatoryCode:\n          description: The code of the signatory to which the check applies.\n          type: string\n    KYCVerificationResult2:\n      properties:\n        accountHolder:\n          $ref: \"#/components/schemas/KYCCheckResult2\"\n          description: The results of the checks on the account holder.\n        bankAccounts:\n          description: The results of the checks on the bank accounts.\n          items:\n            $ref: \"#/components/schemas/KYCBankAccountCheckResult\"\n          type: array\n        shareholders:\n          description: The results of the checks on the shareholders.\n          items:\n            $ref: \"#/components/schemas/KYCShareholderCheckResult\"\n          type: array\n        signatories:\n          description: The results of the checks on the signatories.\n          items:\n            $ref: \"#/components/schemas/KYCSignatoryCheckResult\"\n          type: array\n    LocalDate:\n      properties:\n        month:\n          format: int32\n          type: integer\n        year:\n          format: int32\n          type: integer\n    Message:\n      properties:\n        code:\n          description: The message code.\n          type: string\n        text:\n          description: The message text.\n          type: string\n    NotificationResponse:\n      properties:\n        notificationResponse:\n          description: Set this parameter to **[accepted]** to acknowledge that you received a notification from Adyen.\n          type: string\n    OperationStatus:\n      properties:\n        message:\n          $ref: \"#/components/schemas/Message\"\n          description: The message regarding the operation status.\n        statusCode:\n          description: The status code.\n          type: string\n    PaymentFailureNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/PaymentFailureNotificationContent\"\n          description: The details of the payment failure.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    PaymentFailureNotificationContent:\n      properties:\n        errorFields:\n          description: Missing or invalid fields that caused the payment error.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n        errorMessage:\n          $ref: \"#/components/schemas/Message\"\n          description: The error message.\n        modificationMerchantReference:\n          description: The `reference` of the capture or refund.\n          type: string\n        modificationPspReference:\n          description: The `pspReference` of the capture or refund.\n          type: string\n        paymentMerchantReference:\n          description: The `reference` of the payment.\n          type: string\n        paymentPspReference:\n          description: The `pspReference` of the payment.\n          type: string\n      required:\n        - errorMessage\n        - errorFields\n    PayoutScheduleResponse:\n      properties:\n        nextScheduledPayout:\n          description: The date of the next scheduled payout.\n          format: date-time\n          type: string\n        schedule:\n          description: |-\n            The payout schedule of the account.\n            \u003ePermitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.\n          enum:\n            - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n            - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n            - BI_DAILY_AU\n            - BI_DAILY_EU\n            - BI_DAILY_US\n            - DAILY\n            - DAILY_6PM\n            - DAILY_AU\n            - DAILY_EU\n            - DAILY_SG\n            - DAILY_US\n            - DEFAULT\n            - EVERY_6_HOURS_FROM_MIDNIGHT\n            - HOLD\n            - MONTHLY\n            - MONTHLY_ON_15TH_AT_MIDNIGHT\n            - WEEKLY\n            - WEEKLY_MON_TO_FRI_AU\n            - WEEKLY_MON_TO_FRI_EU\n            - WEEKLY_MON_TO_FRI_US\n            - WEEKLY_ON_TUE_FRI_MIDNIGHT\n            - YEARLY\n          type: string\n      required:\n        - schedule\n    PersonalDocumentData:\n      properties:\n        expirationDate:\n          description: |-\n            The expiry date of the document, \n             in ISO-8601 YYYY-MM-DD format. For example, **2000-01-31**.\n          type: string\n        issuerCountry:\n          description: |-\n            The country where the document was issued, in the two-character \n            [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **NL**.\n          maxLength: 2\n          minLength: 2\n          type: string\n        issuerState:\n          description: The state where the document was issued (if applicable).\n          type: string\n        number:\n          description: The number in the document.\n          type: string\n        type:\n          description: |-\n            The type of the document. Possible values: **ID**, **DRIVINGLICENSE**, **PASSPORT**, **SOCIALSECURITY**, **VISA**.\n\n            To delete an existing entry for a document `type`, send only the `type` field in your request. \n          enum:\n            - DRIVINGLICENSE\n            - ID\n            - PASSPORT\n            - SOCIALSECURITY\n            - VISA\n          type: string\n      required:\n        - type\n    RefundFundsTransferNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/RefundFundsTransferNotificationContent\"\n          description: Details of the fund transfer refund.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    RefundFundsTransferNotificationContent:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount to be refunded.\n        merchantReference:\n          description: A value that can be supplied at the discretion of the executing user in order to link multiple transactions to one another.\n          type: string\n        originalReference:\n          description: A PSP reference of the original fund transfer.\n          type: string\n        status:\n          $ref: \"#/components/schemas/OperationStatus\"\n          description: The status of the fund transfer refund.\n      required:\n        - originalReference\n        - amount\n    RefundResult:\n      properties:\n        originalTransaction:\n          $ref: \"#/components/schemas/Transaction\"\n          description: The transaction that has been refunded.\n        pspReference:\n          description: The reference of the refund.\n          type: string\n        response:\n          description: The response indicating if the refund has been received for processing.\n          type: string\n      required:\n        - pspReference\n        - originalTransaction\n    ReportAvailableNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/ReportAvailableNotificationContent\"\n          description: Details of the report.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    ReportAvailableNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the Account to which the report applies.\n          type: string\n        accountType:\n          description: The type of Account to which the report applies.\n          type: string\n        eventDate:\n          description: The date of the event to which the report applies.\n          format: date-time\n          type: string\n        remoteAccessUrl:\n          description: The URL at which the report can be accessed.\n          type: string\n        success:\n          description: Indicates whether the event resulted in a success.\n          type: boolean\n    ScheduledRefundsNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/ScheduledRefundsNotificationContent\"\n          description: Details of the scheduling of the refunds.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    ScheduledRefundsNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        accountHolderCode:\n          description: The code of the Account Holder.\n          type: string\n        lastPayout:\n          $ref: \"#/components/schemas/Transaction\"\n          description: The most recent payout (after which all transactions were scheduled to be refunded).\n        refundResults:\n          description: A list of the refunds that have been scheduled and their results.\n          items:\n            $ref: \"#/components/schemas/RefundResult\"\n          type: array\n      required:\n        - accountHolderCode\n        - accountCode\n        - refundResults\n    ShareholderContact:\n      properties:\n        address:\n          $ref: \"#/components/schemas/ViasAddress\"\n          description: The address of the person.\n        email:\n          description: The e-mail address of the person.\n          type: string\n        fullPhoneNumber:\n          description: |-\n            The phone number of the person provided as a single string.  It will be handled as a landline phone.\n            Examples: \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"\n          type: string\n        jobTitle:\n          description: |-\n            Job title of the person. Required when the `shareholderType` is **Controller**.\n\n            Example values: **Chief Executive Officer**, **Chief Financial Officer**, **Chief Operating Officer**, **President**, **Vice President**, **Executive President**, **Managing Member**, **Partner**, **Treasurer**, **Director**, or **Other**.\n          type: string\n        name:\n          $ref: \"#/components/schemas/ViasName\"\n          description: The name of the person.\n        personalData:\n          $ref: \"#/components/schemas/ViasPersonalData\"\n          description: Contains information about the person.\n        phoneNumber:\n          $ref: \"#/components/schemas/ViasPhoneNumber\"\n          description: The phone number of the person.\n        shareholderCode:\n          description: |\n            The unique identifier (UUID) of the shareholder entry.\n            \u003e**If, during an Account Holder create or update request, this field is left blank (but other fields provided), a new Shareholder will be created with a procedurally-generated UUID.**\n\n            \u003e**If, during an Account Holder create request, a UUID is provided, the creation of the Shareholder will fail while the creation of the Account Holder will continue.**\n\n            \u003e**If, during an Account Holder update request, a UUID that is not correlated with an existing Shareholder is provided, the update of the Shareholder will fail.**\n\n            \u003e**If, during an Account Holder update request, a UUID that is correlated with an existing Shareholder is provided, the existing Shareholder will be updated.**\n          type: string\n        shareholderType:\n          description: |-\n            Specifies how the person is associated with the account holder. \n\n            Possible values: \n\n            * **Owner**: Individuals who directly or indirectly own 25% or more of a company.\n\n            * **Controller**: Individuals who are members of senior management staff responsible for managing a company or organization.\n          enum:\n            - Controller\n            - Owner\n            - Signatory\n          type: string\n        webAddress:\n          description: The URL of the person's website.\n          type: string\n    SignatoryContact:\n      properties:\n        address:\n          $ref: \"#/components/schemas/ViasAddress\"\n          description: The address of the person.\n        email:\n          description: The e-mail address of the person.\n          type: string\n        fullPhoneNumber:\n          description: |-\n            The phone number of the person provided as a single string.  It will be handled as a landline phone.\n            Examples: \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"\n          type: string\n        jobTitle:\n          description: |-\n            Job title of the signatory.\n\n            Example values: **Chief Executive Officer**, **Chief Financial Officer**, **Chief Operating Officer**, **President**, **Vice President**, **Executive President**, **Managing Member**, **Partner**, **Treasurer**, **Director**, or **Other**.\n          type: string\n        name:\n          $ref: \"#/components/schemas/ViasName\"\n          description: The name of the person.\n        personalData:\n          $ref: \"#/components/schemas/ViasPersonalData\"\n          description: Contains information about the person.\n        phoneNumber:\n          $ref: \"#/components/schemas/ViasPhoneNumber\"\n          description: The phone number of the person.\n        signatoryCode:\n          description: |\n            The unique identifier (UUID) of the signatory.\n            \u003e**If, during an Account Holder create or update request, this field is left blank (but other fields provided), a new Signatory will be created with a procedurally-generated UUID.**\n\n            \u003e**If, during an Account Holder create request, a UUID is provided, the creation of the Signatory will fail while the creation of the Account Holder will continue.**\n\n            \u003e**If, during an Account Holder update request, a UUID that is not correlated with an existing Signatory is provided, the update of the Signatory will fail.**\n\n            \u003e**If, during an Account Holder update request, a UUID that is correlated with an existing Signatory is provided, the existing Signatory will be updated.**\n          type: string\n        signatoryReference:\n          description: Your reference for the signatory.\n          type: string\n        webAddress:\n          description: The URL of the person's website.\n          type: string\n    Split:\n      properties:\n        account:\n          description: |+\n            Unique identifier of the account where the split amount should be sent. This is required if `type` is **MarketPlace** or **BalanceAccount**.\n\n          type: string\n        amount:\n          $ref: \"#/components/schemas/SplitAmount\"\n          description: The amount of this split.\n        description:\n          description: A description of this split.\n          type: string\n        reference:\n          description: |-\n            Your reference for the split, which you can use to link the split to other operations such as captures and refunds.\n\n            This is required if `type` is **MarketPlace** or **BalanceAccount**. For the other types, we also recommend sending a reference so you can reconcile the split and the associated payment in the transaction overview and in the reports. If the reference is not provided, the split is reported as part of the aggregated [TransferBalance record type](https://docs.adyen.com/reporting/marketpay-payments-accounting-report) in Adyen for Platforms.\n          type: string\n        type:\n          description: |-\n            The type of split.\n            Possible values: **Default**, **PaymentFee**, **VAT**, **Commission**, **MarketPlace**, **BalanceAccount**.\n          enum:\n            - BalanceAccount\n            - Commission\n            - Default\n            - MarketPlace\n            - PaymentFee\n            - VAT\n            - Verification\n          type: string\n      required:\n        - amount\n        - type\n    SplitAmount:\n      properties:\n        currency:\n          description: |-\n            The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n\n            If this value is not provided, the currency in which the payment is made will be used.\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n    Transaction:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount of the transaction.\n        bankAccountDetail:\n          $ref: \"#/components/schemas/BankAccountDetail\"\n          description: The details of the bank account to where a payout was made.\n        captureMerchantReference:\n          description: The merchant reference of a related capture.\n          type: string\n        capturePspReference:\n          description: The psp reference of a related capture.\n          type: string\n        creationDate:\n          description: The date on which the transaction was performed.\n          format: date-time\n          type: string\n        description:\n          description: A description of the transaction.\n          type: string\n        destinationAccountCode:\n          description: The code of the account to which funds were credited during an outgoing fund transfer.\n          type: string\n        disputePspReference:\n          description: The psp reference of the related dispute.\n          type: string\n        disputeReasonCode:\n          description: The reason code of a dispute.\n          type: string\n        merchantReference:\n          description: The merchant reference of a transaction.\n          type: string\n        paymentPspReference:\n          description: The psp reference of the related authorisation or transfer.\n          type: string\n          x-addedInVersion: \"3\"\n        payoutPspReference:\n          description: The psp reference of the related payout.\n          type: string\n          x-addedInVersion: \"3\"\n        pspReference:\n          description: The psp reference of a transaction.\n          type: string\n        sourceAccountCode:\n          description: The code of the account from which funds were debited during an incoming fund transfer.\n          type: string\n        transactionStatus:\n          description: |-\n            The status of the transaction.\n            \u003ePermitted values: `PendingCredit`, `CreditFailed`, `CreditClosed`, `CreditSuspended`, `Credited`, `Converted`, `PendingDebit`, `DebitFailed`, `Debited`, `DebitReversedReceived`, `DebitedReversed`, `ChargebackReceived`, `Chargeback`, `ChargebackReversedReceived`, `ChargebackReversed`, `Payout`, `PayoutReversed`, `FundTransfer`, `PendingFundTransfer`, `ManualCorrected`.\n          enum:\n            - BalanceNotPaidOutTransfer\n            - Chargeback\n            - ChargebackCorrection\n            - ChargebackCorrectionReceived\n            - ChargebackReceived\n            - ChargebackReversed\n            - ChargebackReversedCorrection\n            - ChargebackReversedCorrectionReceived\n            - ChargebackReversedReceived\n            - Converted\n            - CreditClosed\n            - CreditFailed\n            - CreditReversed\n            - CreditReversedReceived\n            - CreditSuspended\n            - Credited\n            - DebitFailed\n            - DebitReversedReceived\n            - Debited\n            - DebitedReversed\n            - DepositCorrectionCredited\n            - DepositCorrectionDebited\n            - Fee\n            - FundTransfer\n            - FundTransferReversed\n            - InvoiceDeductionCredited\n            - InvoiceDeductionDebited\n            - ManualCorrected\n            - ManualCorrectionCredited\n            - ManualCorrectionDebited\n            - MerchantPayin\n            - MerchantPayinReversed\n            - Payout\n            - PayoutReversed\n            - PendingCredit\n            - PendingDebit\n            - PendingFundTransfer\n            - SecondChargeback\n            - SecondChargebackCorrection\n            - SecondChargebackCorrectionReceived\n            - SecondChargebackReceived\n          type: string\n        transferCode:\n          description: The transfer code of the transaction.\n          type: string\n    TransferFundsNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/TransferFundsNotificationContent\"\n          description: Details of the fund transfer.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live environment or the test environment. If true, the notification originated from the live environment. If false, the notification originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    TransferFundsNotificationContent:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount transferred.\n        destinationAccountCode:\n          description: The code of the Account to which funds were credited.\n          type: string\n        merchantReference:\n          description: The reference provided by the merchant.\n          type: string\n          x-addedInVersion: \"2\"\n        sourceAccountCode:\n          description: The code of the Account from which funds were debited.\n          type: string\n        status:\n          $ref: \"#/components/schemas/OperationStatus\"\n          description: The status of the fund transfer.\n        transferCode:\n          description: The transfer code.\n          type: string\n      required:\n        - sourceAccountCode\n        - destinationAccountCode\n        - amount\n        - transferCode\n    UltimateParentCompany:\n      properties:\n        address:\n          $ref: \"#/components/schemas/ViasAddress\"\n          description: Address of the ultimate parent company.\n        businessDetails:\n          $ref: \"#/components/schemas/UltimateParentCompanyBusinessDetails\"\n          description: Details about the ultimate parent company's business.\n        ultimateParentCompanyCode:\n          description: Adyen-generated unique alphanumeric identifier (UUID) for the entry, returned in the response when you create an ultimate parent company. Required when updating an existing entry in an `/updateAccountHolder` request.\n          type: string\n    UltimateParentCompanyBusinessDetails:\n      properties:\n        legalBusinessName:\n          description: The legal name of the company.\n          type: string\n        registrationNumber:\n          description: The registration number of the company.\n          type: string\n        stockExchange:\n          description: Market Identifier Code (MIC).\n          type: string\n        stockNumber:\n          description: International Securities Identification Number (ISIN).\n          type: string\n        stockTicker:\n          description: Stock Ticker symbol.\n          type: string\n    UpdateAccountHolderResponse:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        accountHolderDetails:\n          $ref: \"#/components/schemas/AccountHolderDetails\"\n          description: Details of the account holder.\n        accountHolderStatus:\n          $ref: \"#/components/schemas/AccountHolderStatus\"\n          description: The new status of the account holder.\n          x-addedInVersion: \"2\"\n        invalidFields:\n          description: in case the account holder has not been updated, contains account holder fields, that did not pass the validation.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n          x-addedInVersion: \"5\"\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n        updatedFields:\n          description: A list of the fields updated through the request.\n          items:\n            $ref: \"#/components/schemas/FieldType\"\n          type: array\n        verification:\n          $ref: \"#/components/schemas/KYCVerificationResult2\"\n          description: The details of KYC Verification of the account holder.\n          x-addedInVersion: \"2\"\n      required:\n        - accountHolderStatus\n        - verification\n    UpdateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        payoutSchedule:\n          $ref: \"#/components/schemas/PayoutScheduleResponse\"\n          description: The payout schedule of the account.\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n      required:\n        - accountCode\n    ViasAddress:\n      properties:\n        city:\n          description: The name of the city. Required if the `houseNumberOrName`, `street`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n        country:\n          description: The two-character country code of the address in ISO-3166-1 alpha-2 format. For example, **NL**.\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: |-\n            The postal code. Required if the `houseNumberOrName`, `street`, `city`, or `stateOrProvince` are provided.\n\n            Maximum length:\n\n            * 5 digits for addresses in the US.\n\n            * 10 characters for all other countries.\n          type: string\n        stateOrProvince:\n          description: |\n            The abbreviation of the state or province. Required if the `houseNumberOrName`, `street`, `city`, or `postalCode` are provided. \n\n            Maximum length:\n\n            * 2 characters for addresses in the US or Canada.\n\n            * 3 characters for all other countries.\n          type: string\n        street:\n          description: The name of the street. Required if the `houseNumberOrName`, `city`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n      required:\n        - country\n    ViasName:\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        gender:\n          description: |-\n            The gender.\n            \u003eThe following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.\n          enum:\n            - MALE\n            - FEMALE\n            - UNKNOWN\n          maxLength: 1\n          type: string\n        infix:\n          description: |-\n            The name's infix, if applicable.\n            \u003eA maximum length of twenty (20) characters is imposed.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n        - firstName\n        - lastName\n    ViasPersonalData:\n      properties:\n        dateOfBirth:\n          description: The person's date of birth, in ISO-8601 YYYY-MM-DD format. For example, **2000-01-31**.\n          type: string\n        documentData:\n          description: Array that contains information about the person's identification document. You can submit only one entry per document type.\n          items:\n            $ref: \"#/components/schemas/PersonalDocumentData\"\n          type: array\n          x-addedInVersion: \"3\"\n        idNumber:\n          deprecated: true\n          description: An ID number of the person.\n          type: string\n          x-deprecatedInVersion: \"3\"\n          x-deprecatedMessage: Use `individualDetails.personalData.documentData.number` instead.\n        nationality:\n          description: |\n            The nationality of the person represented by a two-character country code,  in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **NL**.\n          maxLength: 2\n          minLength: 2\n          type: string\n    ViasPhoneNumber:\n      properties:\n        phoneCountryCode:\n          description: |-\n            The two-character country code of the phone number.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          type: string\n        phoneNumber:\n          description: |-\n            The phone number.\n            \u003eThe inclusion of the phone number country code is not necessary.\n          type: string\n        phoneType:\n          description: |-\n            The type of the phone number.\n            \u003eThe following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.\n          enum:\n            - Fax\n            - Landline\n            - Mobile\n            - SIP\n          type: string\n      required:\n        - phoneCountryCode\n        - phoneNumber\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nwebhooks:\n  /ACCOUNT_CLOSED:\n    post:\n      description: This notification is sent when an account has been closed.\n      operationId: post-ACCOUNT_CLOSED\n      requestBody:\n        content:\n          application/json:\n            examples:\n              accountClosed:\n                $ref: \"#/components/examples/post-ACCOUNT_CLOSED-accountClosed\"\n            schema:\n              $ref: \"#/components/schemas/AccountCloseNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                accountClosed:\n                  $ref: \"#/components/examples/WebhookAck\"\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Triggered upon the closure of an account.\n      tags:\n        - Accounts\n      x-groupName: Accounts\n      x-sortIndex: 3\n  /ACCOUNT_CREATED:\n    post:\n      description: This notification is sent when an account has been created.\n      operationId: post-ACCOUNT_CREATED\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountCreateNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Triggered upon the creation of an account.\n      tags:\n        - Accounts\n      x-groupName: Accounts\n      x-sortIndex: 1\nx-groups:\n  - Account holders\n  - Accounts\n  - Fund management\n  - Other\nx-staticResponse: response.json\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      description: ''\n      operationId: listPets\n      tags:\n        - pet\n      parameters:\n        - name: limit\n          in: header\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: variable\n          in: query\n          description: random variable\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: variable2\n          in: query\n          description: another random variable\n          style: spaceDelimited\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pet\n      responses:\n        '201':\n          description: Null response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    parameters:\n      - name: petId\n        in: path\n        description: The id of the pet to retrieve\n        required: true\n        schema:\n          type: string\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pet\n      parameters:\n        - name: petId\n          in: path\n          description: The id of the pet to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pets/{petId}/uploadImage:\n    post:\n      summary: Uploads an image\n      description: ''\n      operationId: uploadFile\n      tags:\n        - pet\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to update\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/octet-stream: {}\n      responses:\n        '201':\n          description: Null response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'"
		}
	},
	"Error": "parse: parse spec: paths: /pets: get: operation \"listPets\": parameters: parse parameter \"variable2\": style: unexpected style: \"spaceDelimited\""
}