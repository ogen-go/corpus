{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/schemas/2019-12-02/openapi.yaml",
			"byteSize": 106609,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2019-12-02'\n  x-release: v4\n  title: Schemas\n  description: Amazon EventBridge Schema Registry\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: schemas\n  x-aws-signingName: schemas\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/schemas-2019-12-02.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/schemas/'\nservers:\n  - url: 'http://schemas.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Schemas multi-region endpoint\n  - url: 'https://schemas.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Schemas multi-region endpoint\n  - url: 'http://schemas.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Schemas endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://schemas.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Schemas endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /v1/discoverers:\n    post:\n      operationId: CreateDiscoverer\n      description: Creates a discoverer.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDiscovererResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - SourceArn\n              properties:\n                Description:\n                  description: A description for the discoverer.\n                  type: string\n                  minLength: 0\n                  maxLength: 256\n                SourceArn:\n                  description: The ARN of the event bus.\n                  type: string\n                  minLength: 20\n                  maxLength: 1600\n                CrossAccount:\n                  description: 'Support discovery of schemas in events sent to the bus from another account. (default: true).'\n                  type: boolean\n                tags:\n                  description: Key-value pairs associated with a resource.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListDiscoverers\n      description: List the discoverers.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDiscoverersResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: discovererIdPrefix\n          in: query\n          required: false\n          description: Specifying this limits the results to only those discoverer IDs that start with the specified prefix.\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n          schema:\n            type: string\n        - name: sourceArnPrefix\n          in: query\n          required: false\n          description: Specifying this limits the results to only those ARNs that start with the specified prefix.\n          schema:\n            type: string\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/v1/registries/name/{registryName}':\n    post:\n      operationId: CreateRegistry\n      description: Creates a registry.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRegistryResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '485':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Description:\n                  description: A description of the registry to be created.\n                  type: string\n                  minLength: 0\n                  maxLength: 256\n                tags:\n                  description: Key-value pairs associated with a resource.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DeleteRegistry\n      description: Deletes a Registry.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n    get:\n      operationId: DescribeRegistry\n      description: Describes the registry.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeRegistryResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n    put:\n      operationId: UpdateRegistry\n      description: Updates a registry.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRegistryResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Description:\n                  description: The description of the registry to update.\n                  type: string\n                  minLength: 0\n                  maxLength: 256\n  '/v1/registries/name/{registryName}/schemas/name/{schemaName}':\n    post:\n      operationId: CreateSchema\n      description: <p>Creates a schema definition.</p> <note><p>Inactive schemas will be deleted after two years.</p></note>\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSchemaResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Content\n                - Type\n              properties:\n                Content:\n                  description: The source of the schema definition.\n                  type: string\n                  minLength: 1\n                  maxLength: 100000\n                Description:\n                  description: A description of the schema.\n                  type: string\n                  minLength: 0\n                  maxLength: 256\n                tags:\n                  description: Key-value pairs associated with a resource.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n                Type:\n                  description: The type of schema.\n                  type: string\n                  enum:\n                    - OpenApi3\n                    - JSONSchemaDraft4\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DeleteSchema\n      description: Delete a schema definition.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n    get:\n      operationId: DescribeSchema\n      description: Retrieve the schema definition.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeSchemaResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n        - name: schemaVersion\n          in: query\n          required: false\n          description: Specifying this limits the results to only this schema version.\n          schema:\n            type: string\n    put:\n      operationId: UpdateSchema\n      description: <p>Updates the schema definition</p> <note><p>Inactive schemas will be deleted after two years.</p></note>\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateSchemaResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '483':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '484':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ClientTokenId:\n                  description: The ID of the client token.\n                  type: string\n                  minLength: 0\n                  maxLength: 36\n                Content:\n                  description: The source of the schema definition.\n                  type: string\n                  minLength: 1\n                  maxLength: 100000\n                Description:\n                  description: The description of the schema.\n                  type: string\n                  minLength: 0\n                  maxLength: 256\n                Type:\n                  description: The schema type for the events schema.\n                  type: string\n                  enum:\n                    - OpenApi3\n                    - JSONSchemaDraft4\n  '/v1/discoverers/id/{discovererId}':\n    delete:\n      operationId: DeleteDiscoverer\n      description: Deletes a discoverer.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: discovererId\n          in: path\n          required: true\n          description: The ID of the discoverer.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeDiscoverer\n      description: Describes the discoverer.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDiscovererResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: discovererId\n          in: path\n          required: true\n          description: The ID of the discoverer.\n          schema:\n            type: string\n    put:\n      operationId: UpdateDiscoverer\n      description: Updates the discoverer\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDiscovererResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: discovererId\n          in: path\n          required: true\n          description: The ID of the discoverer.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Description:\n                  description: The description of the discoverer to update.\n                  type: string\n                  minLength: 0\n                  maxLength: 256\n                CrossAccount:\n                  description: 'Support discovery of schemas in events sent to the bus from another account. (default: true)'\n                  type: boolean\n  /v1/policy:\n    delete:\n      operationId: DeleteResourcePolicy\n      description: Delete the resource-based policy attached to the specified registry.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: query\n          required: false\n          description: The name of the registry.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetResourcePolicy\n      description: Retrieves the resource-based policy attached to a given registry.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetResourcePolicyResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: query\n          required: false\n          description: The name of the registry.\n          schema:\n            type: string\n    put:\n      operationId: PutResourcePolicy\n      description: The name of the policy.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutResourcePolicyResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreconditionFailedException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '486':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: query\n          required: false\n          description: The name of the registry.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Policy\n              properties:\n                Policy:\n                  description: The resource-based policy.\n                  type: string\n                RevisionId:\n                  description: The revision ID of the policy.\n                  type: string\n  '/v1/registries/name/{registryName}/schemas/name/{schemaName}/version/{schemaVersion}':\n    delete:\n      operationId: DeleteSchemaVersion\n      description: Delete the schema version definition\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n        - name: schemaVersion\n          in: path\n          required: true\n          description: The version number of the schema\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}':\n    get:\n      operationId: DescribeCodeBinding\n      description: Describe the code binding URI.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeCodeBindingResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: language\n          in: path\n          required: true\n          description: The language of the code binding.\n          schema:\n            type: string\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n        - name: schemaVersion\n          in: query\n          required: false\n          description: Specifying this limits the results to only this schema version.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: PutCodeBinding\n      description: Put code binding URI\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutCodeBindingResponse'\n        '480':\n          description: GoneException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GoneException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '485':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '486':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: language\n          in: path\n          required: true\n          description: The language of the code binding.\n          schema:\n            type: string\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n        - name: schemaVersion\n          in: query\n          required: false\n          description: Specifying this limits the results to only this schema version.\n          schema:\n            type: string\n  '/v1/registries/name/{registryName}/schemas/name/{schemaName}/export#type':\n    get:\n      operationId: ExportSchema\n      description: ''\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExportSchemaResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '486':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n        - name: schemaVersion\n          in: query\n          required: false\n          description: Specifying this limits the results to only this schema version.\n          schema:\n            type: string\n        - name: type\n          in: query\n          required: true\n          description: ''\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/registries/name/{registryName}/schemas/name/{schemaName}/language/{language}/source':\n    get:\n      operationId: GetCodeBindingSource\n      description: Get the code binding source URI.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetCodeBindingSourceResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: language\n          in: path\n          required: true\n          description: The language of the code binding.\n          schema:\n            type: string\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n        - name: schemaVersion\n          in: query\n          required: false\n          description: Specifying this limits the results to only this schema version.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/discover:\n    post:\n      operationId: GetDiscoveredSchema\n      description: Get the discovered schema that was generated based on sampled events.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDiscoveredSchemaResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Events\n                - Type\n              properties:\n                Events:\n                  description: An array of strings where each string is a JSON event. These are the events that were used to generate the schema. The array includes a single type of event and has a maximum size of 10 events.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/GetDiscoveredSchemaVersionItemInput'\n                  minItems: 1\n                  maxItems: 10\n                Type:\n                  description: The type of event.\n                  type: string\n                  enum:\n                    - OpenApi3\n                    - JSONSchemaDraft4\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/registries:\n    get:\n      operationId: ListRegistries\n      description: List the registries.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRegistriesResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n          schema:\n            type: string\n        - name: registryNamePrefix\n          in: query\n          required: false\n          description: Specifying this limits the results to only those registry names that start with the specified prefix.\n          schema:\n            type: string\n        - name: scope\n          in: query\n          required: false\n          description: 'Can be set to Local or AWS to limit responses to your custom registries, or the ones provided by AWS.'\n          schema:\n            type: string\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/registries/name/{registryName}/schemas/name/{schemaName}/versions':\n    get:\n      operationId: ListSchemaVersions\n      description: Provides a list of the schema versions and related information.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSchemaVersionsResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n          schema:\n            type: string\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaName\n          in: path\n          required: true\n          description: The name of the schema.\n          schema:\n            type: string\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/registries/name/{registryName}/schemas':\n    get:\n      operationId: ListSchemas\n      description: List the schemas.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSchemasResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n          schema:\n            type: string\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: schemaNamePrefix\n          in: query\n          required: false\n          description: Specifying this limits the results to only those schema names that start with the specified prefix.\n          schema:\n            type: string\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resource-arn}':\n    get:\n      operationId: ListTagsForResource\n      description: Get tags for resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: The ARN of the resource.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Add tags to a resource.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: The ARN of the resource.\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: Key-value pairs associated with a resource.\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/__string'\n  '/v1/registries/name/{registryName}/schemas/search#keywords':\n    get:\n      operationId: SearchSchemas\n      description: Search the schemas\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchSchemasResponse'\n        '480':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '483':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '484':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: keywords\n          in: query\n          required: true\n          description: Specifying this limits the results to only schemas that include the provided keywords.\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          description: ''\n          schema:\n            type: integer\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n          schema:\n            type: string\n        - name: registryName\n          in: path\n          required: true\n          description: The name of the registry.\n          schema:\n            type: string\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/discoverers/id/{discovererId}/start':\n    post:\n      operationId: StartDiscoverer\n      description: Starts the discoverer\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartDiscovererResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: discovererId\n          in: path\n          required: true\n          description: The ID of the discoverer.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/v1/discoverers/id/{discovererId}/stop':\n    post:\n      operationId: StopDiscoverer\n      description: Stops the discoverer\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StopDiscovererResponse'\n        '480':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '481':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n        '484':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '485':\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableException'\n      parameters:\n        - name: discovererId\n          in: path\n          required: true\n          description: The ID of the discoverer.\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resource-arn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Removes tags from a resource.\n      responses:\n        '204':\n          description: Success\n        '480':\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundException'\n        '481':\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestException'\n        '482':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '483':\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenException'\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: The ARN of the resource.\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: Keys of key-value pairs.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/__string'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateDiscovererResponse:\n      type: object\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the discoverer.\n        DiscovererArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the discoverer.\n        DiscovererId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the discoverer.\n        SourceArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the event bus.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/DiscovererState'\n            - description: The state of the discoverer.\n        CrossAccount:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - description: The Status if the discoverer will discover schemas from events sent from another account.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the resource.\n    __string:\n      type: string\n    BadRequestException: {}\n    InternalServerErrorException: {}\n    UnauthorizedException: {}\n    ForbiddenException: {}\n    ServiceUnavailableException: {}\n    ConflictException: {}\n    CreateRegistryResponse:\n      type: object\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the registry.\n        RegistryArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the registry.\n        RegistryName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the registry.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the registry.\n    CreateSchemaResponse:\n      type: object\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the schema.\n        LastModified:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date and time that schema was modified.\n        SchemaArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the schema.\n        SchemaName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the schema.\n        SchemaVersion:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The version number of the schema\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The type of the schema.\n        VersionCreatedDate:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date the schema version was created.\n    NotFoundException: {}\n    DescribeCodeBindingResponse:\n      type: object\n      properties:\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The time and date that the code binding was created.\n        LastModified:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date and time that code bindings were modified.\n        SchemaVersion:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The version number of the schema.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/CodeGenerationStatus'\n            - description: The current status of code binding generation.\n    TooManyRequestsException: {}\n    DescribeDiscovererResponse:\n      type: object\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the discoverer.\n        DiscovererArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the discoverer.\n        DiscovererId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the discoverer.\n        SourceArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the event bus.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/DiscovererState'\n            - description: The state of the discoverer.\n        CrossAccount:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - description: The Status if the discoverer will discover schemas from events sent from another account.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the resource.\n    DescribeRegistryResponse:\n      type: object\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the registry.\n        RegistryArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the registry.\n        RegistryName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the registry.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the registry.\n    DescribeSchemaResponse:\n      type: object\n      properties:\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The source of the schema definition.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the schema.\n        LastModified:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date and time that schema was modified.\n        SchemaArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the schema.\n        SchemaName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the schema.\n        SchemaVersion:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The version number of the schema\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the resource.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The type of the schema.\n        VersionCreatedDate:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date the schema version was created.\n    ExportSchemaResponse:\n      type: object\n      properties:\n        Content:\n          $ref: '#/components/schemas/__string'\n        SchemaArn:\n          $ref: '#/components/schemas/__string'\n        SchemaName:\n          $ref: '#/components/schemas/__string'\n        SchemaVersion:\n          $ref: '#/components/schemas/__string'\n        Type:\n          $ref: '#/components/schemas/__string'\n    GetCodeBindingSourceResponse:\n      type: object\n      properties:\n        Body:\n          $ref: '#/components/schemas/Body'\n    GetDiscoveredSchemaResponse:\n      type: object\n      properties:\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The source of the schema definition.\n    GetDiscoveredSchemaVersionItemInput:\n      type: string\n      minLength: 1\n      maxLength: 100000\n    GetResourcePolicyResponse:\n      type: object\n      properties:\n        Policy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The resource-based policy.\n        RevisionId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The revision ID.\n    ListDiscoverersResponse:\n      type: object\n      properties:\n        Discoverers:\n          allOf:\n            - $ref: '#/components/schemas/__listOfDiscovererSummary'\n            - description: An array of DiscovererSummary information.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n    ListRegistriesResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n        Registries:\n          allOf:\n            - $ref: '#/components/schemas/__listOfRegistrySummary'\n            - description: An array of registry summaries.\n    ListSchemaVersionsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n        SchemaVersions:\n          allOf:\n            - $ref: '#/components/schemas/__listOfSchemaVersionSummary'\n            - description: An array of schema version summaries.\n    ListSchemasResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n        Schemas:\n          allOf:\n            - $ref: '#/components/schemas/__listOfSchemaSummary'\n            - description: An array of schema summaries.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n    PutCodeBindingResponse:\n      type: object\n      properties:\n        CreationDate:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The time and date that the code binding was created.\n        LastModified:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date and time that code bindings were modified.\n        SchemaVersion:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The version number of the schema.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/CodeGenerationStatus'\n            - description: The current status of code binding generation.\n    GoneException: {}\n    PutResourcePolicyResponse:\n      type: object\n      properties:\n        Policy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The resource-based policy.\n        RevisionId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The revision ID of the policy.\n    PreconditionFailedException: {}\n    SearchSchemasResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: 'The token that specifies the next page of results to return. To request the first page, leave NextToken empty. The token will expire in 24 hours, and cannot be shared with other accounts.'\n        Schemas:\n          allOf:\n            - $ref: '#/components/schemas/__listOfSearchSchemaSummary'\n            - description: An array of SearchSchemaSummary information.\n    StartDiscovererResponse:\n      type: object\n      properties:\n        DiscovererId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the discoverer.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/DiscovererState'\n            - description: The state of the discoverer.\n    StopDiscovererResponse:\n      type: object\n      properties:\n        DiscovererId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the discoverer.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/DiscovererState'\n            - description: The state of the discoverer.\n    UpdateDiscovererResponse:\n      type: object\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the discoverer.\n        DiscovererArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the discoverer.\n        DiscovererId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the discoverer.\n        SourceArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the event bus.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/DiscovererState'\n            - description: The state of the discoverer.\n        CrossAccount:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - description: The Status if the discoverer will discover schemas from events sent from another account.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the resource.\n    UpdateRegistryResponse:\n      type: object\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the registry.\n        RegistryArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the registry.\n        RegistryName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the registry.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the registry.\n    UpdateSchemaResponse:\n      type: object\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The description of the schema.\n        LastModified:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date and time that schema was modified.\n        SchemaArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the schema.\n        SchemaName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the schema.\n        SchemaVersion:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The version number of the schema\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The type of the schema.\n        VersionCreatedDate:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date the schema version was created.\n    CodeGenerationStatus:\n      type: string\n      enum:\n        - CREATE_IN_PROGRESS\n        - CREATE_COMPLETE\n        - CREATE_FAILED\n    __stringMin0Max256:\n      type: string\n      minLength: 0\n      maxLength: 256\n    __stringMin20Max1600:\n      type: string\n      minLength: 20\n      maxLength: 1600\n    __boolean:\n      type: boolean\n    Tags:\n      type: object\n      description: Key-value pairs associated with a resource.\n      additionalProperties:\n        $ref: '#/components/schemas/__string'\n    CreateDiscovererRequest:\n      type: object\n      required:\n        - SourceArn\n      title: CreateDiscovererRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin0Max256'\n            - description: A description for the discoverer.\n        SourceArn:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin20Max1600'\n            - description: The ARN of the event bus.\n        CrossAccount:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - description: 'Support discovery of schemas in events sent to the bus from another account. (default: true).'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the resource.\n      description: ''\n    DiscovererState:\n      type: string\n      enum:\n        - STARTED\n        - STOPPED\n    CreateRegistryRequest:\n      type: object\n      title: CreateRegistryRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin0Max256'\n            - description: A description of the registry to be created.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags to associate with the registry.\n    __stringMin1Max100000:\n      type: string\n      minLength: 1\n      maxLength: 100000\n    Type:\n      type: string\n      enum:\n        - OpenApi3\n        - JSONSchemaDraft4\n    CreateSchemaRequest:\n      type: object\n      required:\n        - Type\n        - Content\n      title: CreateSchemaRequest\n      properties:\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin1Max100000'\n            - description: The source of the schema definition.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin0Max256'\n            - description: A description of the schema.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the schema.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/Type'\n            - description: The type of schema.\n    __timestampIso8601:\n      type: string\n      format: date-time\n    DeleteDiscovererRequest:\n      type: object\n      title: DeleteDiscovererRequest\n      properties: {}\n    DeleteRegistryRequest:\n      type: object\n      title: DeleteRegistryRequest\n      properties: {}\n    DeleteResourcePolicyRequest:\n      type: object\n      title: DeleteResourcePolicyRequest\n      properties: {}\n    DeleteSchemaRequest:\n      type: object\n      title: DeleteSchemaRequest\n      properties: {}\n    DeleteSchemaVersionRequest:\n      type: object\n      title: DeleteSchemaVersionRequest\n      properties: {}\n    DescribeCodeBindingRequest:\n      type: object\n      title: DescribeCodeBindingRequest\n      properties: {}\n    DescribeDiscovererRequest:\n      type: object\n      title: DescribeDiscovererRequest\n      properties: {}\n    DescribeRegistryRequest:\n      type: object\n      title: DescribeRegistryRequest\n      properties: {}\n    DescribeSchemaRequest:\n      type: object\n      title: DescribeSchemaRequest\n      properties: {}\n    DiscovererSummary:\n      type: object\n      properties:\n        DiscovererArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the discoverer.\n        DiscovererId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ID of the discoverer.\n        SourceArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the event bus.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/DiscovererState'\n            - description: The state of the discoverer.\n        CrossAccount:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - description: The Status if the discoverer will discover schemas from events sent from another account.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the resource.\n    ExportSchemaRequest:\n      type: object\n      title: ExportSchemaRequest\n      properties: {}\n    GetCodeBindingSourceRequest:\n      type: object\n      title: GetCodeBindingSourceRequest\n      properties: {}\n    Body:\n      type: string\n    __listOfGetDiscoveredSchemaVersionItemInput:\n      type: array\n      items:\n        $ref: '#/components/schemas/GetDiscoveredSchemaVersionItemInput'\n      minItems: 1\n      maxItems: 10\n    GetDiscoveredSchemaRequest:\n      type: object\n      required:\n        - Type\n        - Events\n      title: GetDiscoveredSchemaRequest\n      properties:\n        Events:\n          allOf:\n            - $ref: '#/components/schemas/__listOfGetDiscoveredSchemaVersionItemInput'\n            - description: An array of strings where each string is a JSON event. These are the events that were used to generate the schema. The array includes a single type of event and has a maximum size of 10 events.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/Type'\n            - description: The type of event.\n    GetResourcePolicyRequest:\n      type: object\n      title: GetResourcePolicyRequest\n      properties: {}\n    __integer:\n      type: integer\n    ListDiscoverersRequest:\n      type: object\n      title: ListDiscoverersRequest\n      properties: {}\n    __listOfDiscovererSummary:\n      type: array\n      items:\n        $ref: '#/components/schemas/DiscovererSummary'\n    ListRegistriesRequest:\n      type: object\n      title: ListRegistriesRequest\n      properties: {}\n    __listOfRegistrySummary:\n      type: array\n      items:\n        $ref: '#/components/schemas/RegistrySummary'\n    ListSchemaVersionsRequest:\n      type: object\n      title: ListSchemaVersionsRequest\n      properties: {}\n    __listOfSchemaVersionSummary:\n      type: array\n      items:\n        $ref: '#/components/schemas/SchemaVersionSummary'\n    ListSchemasRequest:\n      type: object\n      title: ListSchemasRequest\n      properties: {}\n    __listOfSchemaSummary:\n      type: array\n      items:\n        $ref: '#/components/schemas/SchemaSummary'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    PutCodeBindingRequest:\n      type: object\n      title: PutCodeBindingRequest\n      properties: {}\n    PutResourcePolicyRequest:\n      type: object\n      required:\n        - Policy\n      title: PutResourcePolicyRequest\n      properties:\n        Policy:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The resource-based policy.\n        RevisionId:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The revision ID of the policy.\n      description: The name of the policy.\n    RegistrySummary:\n      type: object\n      properties:\n        RegistryArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the registry.\n        RegistryName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the registry.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the registry.\n    __long:\n      type: integer\n    SchemaSummary:\n      type: object\n      properties:\n        LastModified:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date and time that schema was modified.\n        SchemaArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the schema.\n        SchemaName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the schema.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the schema.\n        VersionCount:\n          allOf:\n            - $ref: '#/components/schemas/__long'\n            - description: The number of versions available for the schema.\n      description: A summary of schema details.\n    SchemaVersionSummary:\n      type: object\n      properties:\n        SchemaArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the schema version.\n        SchemaName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the schema.\n        SchemaVersion:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The version number of the schema.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/Type'\n            - description: The type of schema.\n    __listOfSearchSchemaVersionSummary:\n      type: array\n      items:\n        $ref: '#/components/schemas/SearchSchemaVersionSummary'\n    SearchSchemaSummary:\n      type: object\n      properties:\n        RegistryName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the registry.\n        SchemaArn:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The ARN of the schema.\n        SchemaName:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The name of the schema.\n        SchemaVersions:\n          allOf:\n            - $ref: '#/components/schemas/__listOfSearchSchemaVersionSummary'\n            - description: An array of schema version summaries.\n    SearchSchemaVersionSummary:\n      type: object\n      properties:\n        CreatedDate:\n          allOf:\n            - $ref: '#/components/schemas/__timestampIso8601'\n            - description: The date the schema version was created.\n        SchemaVersion:\n          allOf:\n            - $ref: '#/components/schemas/__string'\n            - description: The version number of the schema\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/Type'\n            - description: The type of schema.\n    SearchSchemasRequest:\n      type: object\n      title: SearchSchemasRequest\n      properties: {}\n    __listOfSearchSchemaSummary:\n      type: array\n      items:\n        $ref: '#/components/schemas/SearchSchemaSummary'\n    StartDiscovererRequest:\n      type: object\n      title: StartDiscovererRequest\n      properties: {}\n    StopDiscovererRequest:\n      type: object\n      title: StopDiscovererRequest\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - xml:\n                name: tags\n              description: Tags associated with the resource.\n      description: ''\n    __listOf__string:\n      type: array\n      items:\n        $ref: '#/components/schemas/__string'\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateDiscovererRequest:\n      type: object\n      title: UpdateDiscovererRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin0Max256'\n            - description: The description of the discoverer to update.\n        CrossAccount:\n          allOf:\n            - $ref: '#/components/schemas/__boolean'\n            - description: 'Support discovery of schemas in events sent to the bus from another account. (default: true)'\n    UpdateRegistryRequest:\n      type: object\n      title: UpdateRegistryRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin0Max256'\n            - description: The description of the registry to update.\n      description: Updates the registry.\n    __stringMin0Max36:\n      type: string\n      minLength: 0\n      maxLength: 36\n    UpdateSchemaRequest:\n      type: object\n      title: UpdateSchemaRequest\n      properties:\n        ClientTokenId:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin0Max36'\n            - description: The ID of the client token.\n        Content:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin1Max100000'\n            - description: The source of the schema definition.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/__stringMin0Max256'\n            - description: The description of the schema.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/Type'\n            - description: The schema type for the events schema.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/amazonaws.com/schemas/2019-12-02/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/amazonaws.com/schemas/2019-12-02/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/tags/{resource-arn}#tagKeys\": at 1:29115: delete: operation \"UntagResource\": at 1:29125: parse path \"/tags/{resource-arn}#tagKeys\": path MUST NOT contain a fragment"
}