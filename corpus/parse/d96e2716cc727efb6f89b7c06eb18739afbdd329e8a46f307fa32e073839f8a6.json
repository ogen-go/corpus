{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/serverless-application-model"
		},
		"file": {
			"name": "api_with_auth_all_maximum_openapi_3.json",
			"size": 0,
			"path": "tests/translator/output/api_with_auth_all_maximum_openapi_3.json",
			"byteSize": 22841,
			"content": "{\n  \"Resources\": {\n    \"MyApi\": {\n      \"Properties\": {\n        \"Body\": {\n          \"components\": {\n            \"securitySchemes\": {\n              \"MyCognitoAuth\": {\n                \"in\": \"header\",\n                \"name\": \"MyAuthorizationHeader\",\n                \"type\": \"apiKey\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"identityValidationExpression\": \"myauthvalidationexpression\",\n                  \"providerARNs\": [\n                    \"arn:aws:1\"\n                  ],\n                  \"type\": \"cognito_user_pools\"\n                },\n                \"x-amazon-apigateway-authtype\": \"cognito_user_pools\"\n              },\n              \"MyCognitoAuthMultipleUserPools\": {\n                \"in\": \"header\",\n                \"name\": \"MyAuthorizationHeader2\",\n                \"type\": \"apiKey\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"identityValidationExpression\": \"myauthvalidationexpression2\",\n                  \"providerARNs\": [\n                    \"arn:aws:2\",\n                    \"arn:aws:3\"\n                  ],\n                  \"type\": \"cognito_user_pools\"\n                },\n                \"x-amazon-apigateway-authtype\": \"cognito_user_pools\"\n              },\n              \"MyLambdaRequestAuth\": {\n                \"in\": \"header\",\n                \"name\": \"Unused\",\n                \"type\": \"apiKey\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"authorizerCredentials\": \"arn:aws:iam::123456789012:role/S3Access\",\n                  \"authorizerResultTtlInSeconds\": 0,\n                  \"authorizerUri\": {\n                    \"Fn::Sub\": [\n                      \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations\",\n                      {\n                        \"__FunctionArn__\": \"arn:aws\"\n                      }\n                    ]\n                  },\n                  \"identitySource\": \"method.request.header.Authorization1, method.request.querystring.Authorization2, stageVariables.Authorization3, context.Authorization4\",\n                  \"type\": \"request\"\n                },\n                \"x-amazon-apigateway-authtype\": \"custom\"\n              },\n              \"MyLambdaTokenAuth\": {\n                \"in\": \"header\",\n                \"name\": \"MyCustomAuthHeader\",\n                \"type\": \"apiKey\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"authorizerCredentials\": \"arn:aws:iam::123456789012:role/S3Access\",\n                  \"authorizerResultTtlInSeconds\": 20,\n                  \"authorizerUri\": {\n                    \"Fn::Sub\": [\n                      \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations\",\n                      {\n                        \"__FunctionArn__\": \"arn:aws\"\n                      }\n                    ]\n                  },\n                  \"identityValidationExpression\": \"mycustomauthexpression\",\n                  \"type\": \"token\"\n                },\n                \"x-amazon-apigateway-authtype\": \"custom\"\n              },\n              \"MyLambdaTokenAuthNoneFunctionInvokeRole\": {\n                \"in\": \"header\",\n                \"name\": \"Authorization\",\n                \"type\": \"apiKey\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"authorizerResultTtlInSeconds\": 0,\n                  \"authorizerUri\": {\n                    \"Fn::Sub\": [\n                      \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations\",\n                      {\n                        \"__FunctionArn__\": \"arn:aws\"\n                      }\n                    ]\n                  },\n                  \"type\": \"token\"\n                },\n                \"x-amazon-apigateway-authtype\": \"custom\"\n              },\n              \"api_key\": {\n                \"in\": \"header\",\n                \"name\": \"x-api-key\",\n                \"type\": \"apiKey\"\n              }\n            }\n          },\n          \"info\": {\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"version\": \"1.0\"\n          },\n          \"openapi\": \"3.0.1\",\n          \"paths\": {\n            \"/\": {\n              \"get\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"NONE\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              }\n            },\n            \"/any/cognitomultiple\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyCognitoAuthMultipleUserPools\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              }\n            },\n            \"/any/default\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyCognitoAuth\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              }\n            },\n            \"/any/lambdarequest\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyLambdaRequestAuth\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              }\n            },\n            \"/any/lambdatoken\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyLambdaTokenAuth\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              }\n            },\n            \"/any/lambdatokennone\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyLambdaTokenAuthNoneFunctionInvokeRole\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              }\n            },\n            \"/any/noauth\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"NONE\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              }\n            },\n            \"/users\": {\n              \"delete\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyLambdaRequestAuth\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              },\n              \"get\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyLambdaTokenAuth\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              },\n              \"patch\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyLambdaTokenAuthNoneFunctionInvokeRole\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              },\n              \"post\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyCognitoAuthMultipleUserPools\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              },\n              \"put\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyCognitoAuth\": []\n                  },\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::RestApi\"\n    },\n    \"MyApiDeploymentb4703b05b7\": {\n      \"Properties\": {\n        \"Description\": \"RestApi deployment id: b4703b05b7aed5e2b44438e65cf9811d3f0d6adc\",\n        \"RestApiId\": {\n          \"Ref\": \"MyApi\"\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::Deployment\"\n    },\n    \"MyApiMyLambdaRequestAuthAuthorizerPermission\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": \"arn:aws\",\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/authorizers/*\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              }\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyApiMyLambdaTokenAuthAuthorizerPermission\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": \"arn:aws\",\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/authorizers/*\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              }\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyApiMyLambdaTokenAuthNoneFunctionInvokeRoleAuthorizerPermission\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": \"arn:aws\",\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/authorizers/*\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              }\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyApiProdStage\": {\n      \"Properties\": {\n        \"DeploymentId\": {\n          \"Ref\": \"MyApiDeploymentb4703b05b7\"\n        },\n        \"RestApiId\": {\n          \"Ref\": \"MyApi\"\n        },\n        \"StageName\": \"Prod\"\n      },\n      \"Type\": \"AWS::ApiGateway::Stage\"\n    },\n    \"MyFunction\": {\n      \"Properties\": {\n        \"Code\": {\n          \"S3Bucket\": \"sam-demo-bucket\",\n          \"S3Key\": \"thumbnails.zip\"\n        },\n        \"Handler\": \"index.handler\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"MyFunctionRole\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"MyFunctionRole\": {\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"MyFunctionWithCognitoMultipleUserPoolsAuthorizerAnyMethodPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/cognitomultiple\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithCognitoMultipleUserPoolsAuthorizerPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/users\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithDefaultAuthorizerAnyMethodPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/default\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithDefaultAuthorizerPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/users\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithLambdaRequestAuthorizerAnyMethodPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/lambdarequest\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithLambdaRequestAuthorizerPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/DELETE/users\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithLambdaTokenAuthorizerAnyMethodPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/lambdatoken\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithLambdaTokenAuthorizerPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/users\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithLambdaTokenNoneAuthorizerAnyMethodPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/lambdatokennone\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithLambdaTokenNoneAuthorizerPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PATCH/users\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithNoAuthorizerAnyMethodPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/noauth\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionWithNoAuthorizerPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/aws/serverless-application-model@2f53aebdcf9b322a395eaa872e5368ddc3c76c95/-/blob/tests/translator/output/api_with_auth_all_maximum_openapi_3.json",
			"externalURLs": [
				{
					"url": "https://github.com/aws/serverless-application-model/blob/2f53aebdcf9b322a395eaa872e5368ddc3c76c95/tests/translator/output/api_with_auth_all_maximum_openapi_3.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at tests/translator/output/api_with_auth_all_maximum_openapi_3.json:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}