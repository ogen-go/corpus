{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/moov-io/wire"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 64631,
			"content": "openapi: 3.0.2\ninfo:\n  description: Moov Wire implements an HTTP API for creating, parsing, and validating Fedwire messages.\n  version: v1\n  title: Wire API\n  contact:\n    url: https://github.com/moov-io/wire\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://localhost:8088\n    description: Local development\n\ntags:\n  - name: 'Wire Files'\n    description: |\n      File contains Fedwire Messages of a Wire File.\n\npaths:\n  /ping:\n    get:\n      tags: ['Wire Files']\n      summary: Ping Wire service\n      description: Check if the Wire service is running.\n      operationId: ping\n      responses:\n        '200':\n          description: Service is running properly\n  /files:\n    get:\n      tags: ['Wire Files']\n      summary: List files\n      description: List all Wire files created with the Wire service. These files are not persisted through multiple runs of the service.\n      operationId: getWireFiles\n      security:\n        - bearerAuth: []\n        - cookieAuth: []\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: rs4f9915\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A list of File objects\n          headers:\n            X-Total-Count:\n              description: The total number of Wire files\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WireFiles'\n  /files/create:\n    post:\n      tags: ['Wire Files']\n      summary: Create file\n      description: Create a new File object from either the plaintext or JSON representation.\n      operationId: createWireFile\n      security:\n        - bearerAuth: []\n        - cookieAuth: []\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: rs4f9915\n          schema:\n            type: string\n        - name: X-Idempotency-Key\n          in: header\n          description: Idempotent key in the header which expires after 24 hours. These strings should contain enough entropy to not collide with each other in your requests.\n          example: a4f88150\n          required: false\n          schema:\n            type: string\n      requestBody:\n        description: Content of the Wire file (in json or raw text)\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WireFile'\n          text/plain:\n            schema:\n              description: A plaintext FED Wire file\n              type: string\n              example:\n      responses:\n        '201':\n          description: A JSON object containing a new File\n          headers:\n            Location:\n              description: The location of the new resource\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WireFile'\n        '400':\n          description: \"Invalid File Header Object\"\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'\n  /files/{fileID}:\n    get:\n      tags: ['Wire Files']\n      summary: Retrieve file\n      description: Get the details of an existing File using the unique File identifier that was returned upon creation.\n      operationId: getWireFileByID\n      security:\n        - bearerAuth: []\n        - cookieAuth: []\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: rs4f9915\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: 3f2d23ee214\n      responses:\n        '200':\n          description: A File object for the supplied ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WireFile'\n        '404':\n          description: A resource with the specified ID was not found\n    # post:\n    #   tags: ['Wire Files']\n    #   summary: Updates the specified FEDWire Message by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n    #   operationId: updateWireFileByID\n    #   security:\n    #     - bearerAuth: []\n    #     - cookieAuth: []\n    #   parameters:\n    #     - name: X-Request-ID\n    #       in: header\n    #       description: Optional Request ID allows application developer to trace requests through the system's logs\n    #       example: rs4f9915\n    #       schema:\n    #         type: string\n    #     - name: X-Idempotency-Key\n    #       in: header\n    #       description: Idempotent key in the header which expires after 24 hours. These strings should contain enough entropy to not collide with each other in your requests.\n    #       example: a4f88150\n    #       required: false\n    #       schema:\n    #         type: string\n    #     - name: fileID\n    #       in: path\n    #       description: File ID\n    #       required: true\n    #       schema:\n    #         type: string\n    #         example: 3f2d23ee214\n    #   requestBody:\n    #     required: true\n    #     content:\n    #       application/json:\n    #         schema:\n    #           $ref: '#/components/schemas/WireFile'\n    #   responses:\n    #     '201':\n    #       description: A JSON object containing a new File\n    #       headers:\n    #         Location:\n    #           description: The location of the new resource\n    #           schema:\n    #             type: string\n    #             format: uri\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '#/components/schemas/WireFile'\n    #     '400':\n    #       description: \"Invalid File Header Object\"\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'\n    delete:\n      tags: ['Wire Files']\n      summary: Delete file\n      description: Permanently delete a File and associated message. It cannot be undone.\n      operationId: deleteWireFileByID\n      security:\n        - bearerAuth: []\n        - cookieAuth: []\n      parameters:\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: 3f2d23ee214\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: rs4f9915\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Permanently deleted File.\n        '404':\n          description: A File with the specified ID was not found.\n  /files/{fileID}/contents:\n    get:\n      tags: ['Wire Files']\n      summary: Get file contents\n      description: |\n        Assembles the existing file, computes sequence numbers and totals. Returns plaintext file.\n      operationId: getWireFileContents\n      security:\n        - bearerAuth: []\n        - cookieAuth: []\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: rs4f9915\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: 3f2d23ee214\n      responses:\n        '200':\n          description: File built successfully without errors.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RawWireFile'\n        '404':\n          description: A resource with the specified ID was not found\n        \n  /files/{fileID}/validate:\n    get:\n      tags: ['Wire Files']\n      summary: Validate file\n      description: Validates the existing file. You need only supply the unique File identifier that was returned upon creation.\n      operationId: validateWireFile\n      security:\n        - bearerAuth: []\n        - cookieAuth: []\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: rs4f9915\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: 3f2d23ee214\n      responses:\n        '200':\n          description: File validated successfully without errors.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WireFile'\n        '400':\n          description: Validation failed. Check response for errors\n        '404':\n          description: A resource with the specified ID was not found\n  /files/{fileID}/FEDWireMessage:\n    post:\n      tags: ['Wire Files']\n      summary: Add Fedwire message to file\n      description: Add a Fedwire Message to the specified file.\n      operationId: addFEDWireMessageToFile\n      security:\n        - bearerAuth: []\n        - cookieAuth: []\n      parameters:\n        - name: X-Request-ID\n          in: header\n          description: Optional Request ID allows application developer to trace requests through the system's logs\n          example: rs4f9915\n          schema:\n            type: string\n        - name: X-Idempotency-Key\n          in: header\n          description: Idempotent key in the header which expires after 24 hours. These strings should contain enough entropy to not collide with each other in your requests.\n          example: a4f88150\n          required: false\n          schema:\n            type: string\n        - name: fileID\n          in: path\n          description: File ID\n          required: true\n          schema:\n            type: string\n            example: 3f2d23ee214\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FEDWireMessage'\n      responses:\n        '200':\n          description: Fedwire Message added to File\n        '404':\n          description: A resource with the specified ID was not found\n\ncomponents:\n  schemas:\n    WireFile:\n      properties:\n        ID:\n          type: string\n          description: File ID\n          example: 3f2d23ee214\n        fedWireMessage:\n          $ref: '#/components/schemas/FEDWireMessage'\n      required:\n        - fedWireMessage\n    WireFiles:\n      type: array\n      items:\n        $ref: '#/components/schemas/WireFile'\n    RawWireFile:\n      type: string\n      description: Plaintext Fedwire file\n      example: \"{3100}121042882Wells Fargo NA\"\n    FEDWireMessage:\n      properties:\n        ID:\n          type: string\n          description: Fedwire Message ID\n          example: 3f2d23ee214\n        # messageDisposition, receiptTimeStamp, outputMessageAccountabilityData, errorWire is information Appended by the FEDWire Funds Service\n        messageDisposition:\n          $ref: '#/components/schemas/MessageDisposition'\n        receiptTimeStamp:\n          $ref: '#/components/schemas/ReceiptTimeStamp'\n        outputMessageAccountabilityData:\n          $ref: '#/components/schemas/OutputMessageAccountabilityData'\n        errorWire:\n          $ref: '#/components/schemas/ErrorWire'\n        senderSupplied:\n          $ref: '#/components/schemas/SenderSupplied'\n        typeSubType:\n          $ref: '#/components/schemas/TypeSubType'\n        inputMessageAccountabilityData:\n          $ref: '#/components/schemas/InputMessageAccountabilityData'\n        amount:\n          $ref: '#/components/schemas/WireAmount'\n        senderDepositoryInstitution:\n          $ref: '#/components/schemas/SenderDepositoryInstitution'\n        receiverDepositoryInstitution:\n          $ref: '#/components/schemas/ReceiverDepositoryInstitution'\n        businessFunctionCode:\n          $ref: '#/components/schemas/BusinessFunctionCode'\n        senderReference:\n          $ref: '#/components/schemas/SenderReference'\n        previousMessageIdentifier:\n          $ref: '#/components/schemas/PreviousMessageIdentifier'\n        localInstrument:\n          $ref: '#/components/schemas/LocalInstrument'\n        paymentNotification:\n          $ref: '#/components/schemas/PaymentNotification'\n        charges:\n          $ref: '#/components/schemas/Charges'\n        instructedAmount:\n          $ref: '#/components/schemas/InstructedAmount'\n        exchangeRate:\n          $ref: '#/components/schemas/ExchangeRate'\n        beneficiaryIntermediaryFI:\n          $ref: '#/components/schemas/FinancialInstitution'\n        beneficiaryFI:\n          $ref: '#/components/schemas/FinancialInstitution'\n        beneficiary:\n          $ref: '#/components/schemas/Beneficiary'\n        beneficiaryReference:\n          $ref: '#/components/schemas/BeneficiaryReference'\n        accountDebitedDrawdown:\n          $ref: '#/components/schemas/AccountDebitedDrawdown'\n        originator:\n          $ref: '#/components/schemas/Beneficiary'\n        originatorOptionF:\n          $ref: '#/components/schemas/OriginatorOptionF'\n        originatorFI:\n          $ref: '#/components/schemas/FinancialInstitution'\n        instructingFI:\n          $ref: '#/components/schemas/FinancialInstitution'\n        accountCreditedDrawdown:\n          $ref: '#/components/schemas/AccountCreditedDrawdown'\n        originatorToBeneficiary:\n          $ref: '#/components/schemas/OriginatorToBeneficiary'\n        fiReceiverFI:\n          $ref: '#/components/schemas/FIToFI'\n        fiDrawdownDebitAccountAdvice:\n          $ref: '#/components/schemas/Advice'\n        fiIntermediaryFI:\n          $ref: '#/components/schemas/FIToFI'\n        fiIntermediaryFIAdvice:\n          $ref: '#/components/schemas/Advice'\n        fiBeneficiaryFI:\n          $ref: '#/components/schemas/FIToFI'\n        fiBeneficiaryFIAdvice:\n          $ref: '#/components/schemas/Advice'\n        fiBeneficiary:\n          $ref: '#/components/schemas/FIToFI'\n        fiBeneficiaryAdvice:\n          $ref: '#/components/schemas/Advice'\n        fiPaymentMethodToBeneficiary:\n          $ref: '#/components/schemas/FIPaymentMethodToBeneficiary'\n        fiAdditionalFIToFI:\n          $ref: '#/components/schemas/AdditionalFIToFI'\n        currencyInstructedAmount:\n          $ref: '#/components/schemas/CurrencyInstructedAmount'\n        orderingCustomer:\n          $ref: '#/components/schemas/CoverPayment'\n        orderingInstitution:\n          $ref: '#/components/schemas/CoverPayment'\n        intermediaryInstitution:\n          $ref: '#/components/schemas/CoverPayment'\n        institutionAccount:\n          $ref: '#/components/schemas/CoverPayment'\n        beneficiaryCustomer:\n          $ref: '#/components/schemas/CoverPayment'\n        remittance:\n          $ref: '#/components/schemas/CoverPayment'\n        senderToReceiver:\n          $ref: '#/components/schemas/CoverPayment'\n        unstructuredAddenda:\n          $ref: '#/components/schemas/UnstructuredAddenda'\n        relatedRemittance:\n          $ref: '#/components/schemas/RelatedRemittance'\n        remittanceOriginator:\n          $ref: '#/components/schemas/RemittanceOriginator'\n        remittanceBeneficiary:\n          $ref: '#/components/schemas/RemittanceBeneficiary'\n        primaryRemittanceDocument:\n          $ref: '#/components/schemas/PrimaryRemittanceDocument'\n        actualAmountPaid:\n          $ref: '#/components/schemas/RemittanceAmount'\n        grossAmountRemittanceDocument:\n          $ref: '#/components/schemas/RemittanceAmount'\n        amountNegotiatedDiscount:\n          $ref: '#/components/schemas/RemittanceAmount'\n        adjustment:\n          $ref: '#/components/schemas/Adjustment'\n        dateRemittanceDocument:\n          $ref: '#/components/schemas/DateRemittanceDocument'\n        secondaryRemittanceDocument:\n          $ref: '#/components/schemas/SecondaryRemittanceDocument'\n        remittanceFreeText:\n          $ref: '#/components/schemas/RemittanceFreeText'\n        serviceMessage:\n          $ref: '#/components/schemas/ServiceMessage'\n      required:\n        - senderSupplied\n        - typeSubType\n        - inputMessageAccountabilityData\n        - amount\n        - senderDepositoryInstitution\n        - receiverDepositoryInstitution\n        - businessFunctionCode\n    MessageDisposition:\n      properties:\n        formatVersion:\n          type: string\n          minLength: 2\n          maxLength: 2\n          description: formatVersion identifies the Fedwire message format version 30.\n          example: '30'\n        testProductionCode:\n          type: string\n          maxLength: 1\n          description: |\n            testProductionCode identifies if test or production.\n\n            * `T` - Test\n            * `P` - Production\n          enum:\n            - \" \"\n            - \"T\"\n            - \"P\"\n          example: 'T'\n        messageDuplicationCode:\n          type: string\n          description: |\n            MessageDuplicationCode\n\n            * ` ` - Original Message\n            * `R` - Retrieval of an original message\n            * `P` - Resend\n          enum:\n            - \" \"\n            - \"R\"\n            - \"P\"\n          example: 'R'\n        messageStatusIndicator:\n          type: string\n          description: |\n            MessageStatusIndicator\n\n            Outgoing Messages\n            * `0` - In process or Intercepted\n            * `2` - Successful with Accounting (Value)\n            * `3` - Rejected due to Error Condition\n            * `7` - Successful without Accounting (Non-Value)\n\n            Incoming Messages\n            * `N` - Successful with Accounting (Value)\n            * `S` - Successful without Accounting (Non-Value)\n          enum:\n            - \"0\"\n            - \"2\"\n            - \"3\"\n            - \"7\"\n            - \"N\"\n            - \"S\"\n          example: '0'\n    ReceiptTimeStamp:\n      properties:\n        receiptDate:\n          type: string\n          description: |\n            ReceiptDate is based on the calendar date. (Format MMDD - M=Month, D=Day)\n          format: 'MMDD'\n          example: '0401'\n        receiptTime:\n          type: string\n          format: 'HHmm'\n          description: |\n            ReceiptTime is based on a 24-hour clock, Eastern Time. (Format HHmm - H=Hour, m=Minute)\n          example: '1305'\n        receiptApplicationIdentification:\n          type: string\n          maxLength: 4\n          description: 'ApplicationIdentification'\n          example: 'RB11'\n    OutputMessageAccountabilityData:\n      properties:\n        outputCycleDate:\n          type: string\n          format: 'CCYYMMDD'\n          description: OutputCycleDate (Format CCYYMMDD - C=Century, Y=Year, M=Month, D=Day)\n          example: '20190401'\n        outputDestinationID:\n          type: string\n          maxLength: 8\n          description: OutputDestinationID\n          example: '12345678'\n        outputSequenceNumber:\n          type: string\n          maxLength: 6\n          description: OutputSequenceNumber\n          example: '000001'\n        outputDate:\n          type: string\n          description: |\n            Output Date is based on the calendar date. (Format MMDD - M=Month, D=Day)\n          format: \"MMDD\"\n          example: '0401'\n        outputTime:\n          type: string\n          format: \"HHmm\"\n          description: |\n            Output Time is based on a 24-hour clock, Eastern Time. (Format HHmm - H=Hour, m=Minute)\n          example: '1305'\n        outputFRBApplicationIdentification:\n          type: string\n          maxLength: 4\n          description: 'OutputFRBApplicationIdentification'\n          example: 'OB11'\n    ErrorWire:\n       properties:\n         errorCategory:\n           type: string\n           description: |\n             ErrorCategory\n             * `E` - Data Error\n             * `F` - Insufficient Balance\n             * `H` - Accountability Error\n             * `I` - In Process or Intercepted\n             * `W` - Cutoff Hour Error\n             * `X` - Duplicate IMAD\n           enum:\n             - E\n             - F\n             - H\n             - I\n             - W\n             - X\n           example: 'E'\n         errorCode:\n           type: string\n           maxLength: 3\n           description: ErrorCode\n           example: 'E99'\n         errorDescription:\n           type: string\n           maxLength: 35\n           description: ErrorDescription\n           example: 'Data Error'\n    SenderSupplied:\n      properties:\n        formatVersion:\n          type: string\n          maxLength: 2\n          description: |\n            FormatVersion\n            30\n          example: '30'\n        userRequestCorrelation:\n          type: string\n          maxLength: 8\n          description: UserRequestCorrelation\n          example: 'TESTDATA'\n        testProductionCode:\n          type: string\n          description: |\n            Identifies if test or production.\n\n            * `T` - Test\n            * `P` - Production\n          enum:\n            - T\n            - P\n          example: 'T'\n        messageDuplicationCode:\n          type: string\n          description: |\n            MessageDuplicationCode\n\n            * ` ` - Original Message\n            * `R` - Retrieval of an original message\n            * `P` - Resend\n          enum:\n            - \" \"\n            - R\n            - P\n          example: 'R'\n      required:\n        - formatVersion\n        - userRequestCorrelation\n        - testProductionCode\n        - messageDuplicationCode\n    TypeSubType:\n      properties:\n        typeCode:\n          type: string\n          description: |\n            TypeCode:\n\n            * `10` - Funds Transfer - A funds transfer in which the sender and/or receiver may be a bank or a third party (i.e., customer of a bank).\n            * `15` - Foreign Transfer - A funds transfer to or from a foreign central bank or government or international organization with an account at the Federal Reserve Bank of New York.\n            * `16` - Settlement Transfer - A funds transfer between Fedwire Funds Service participants.\n          enum:\n            - \"10\"\n            - \"15\"\n            - \"16\"\n          example: '10'\n        subTypeCode:\n          type: string\n          description: |\n            SubTypeCode:\n\n            * `00` - Basic Funds Transfer - A basic value funds transfer.\n            * `01` - Request for Reversal - A non-value request for reversal of a funds transfer originated on the current business day.\n            * `02` - Reversal of Transfer - A value reversal of a funds transfer received on the current business day.  May be used in response to a subtype code ‘01’ Request for Reversal.\n            * `07` - Request for Reversal of a Prior Day Transfer - A non-value request for a reversal of a funds transfer originated on a prior business day.\n            * `08` - Reversal of a Prior Day Transfer - A value reversal of a funds transfer received on a prior business day.  May be used in response to a subtype code ‘07’ Request for Reversal of a Prior Day Transfer.\n            * `31` - Request for Credit (Drawdown) - A non-value request for the receiver to send a funds transfer to a designated party.\n            * `32` - Funds Transfer Honoring a Request for Credit (Drawdown) -  A value funds transfer honoring a subtype 31 request for credit.\n            * `33` - Refusal to Honor a Request for Credit (Drawdown) - A non-value message indicating refusal to honor a subtype 31 request for credit.\n            * `90` - Service Message - A non-value message used to communicate questions and information that is not covered by a specific subtype.\n          enum:\n            - \"00\"\n            - \"01\"\n            - \"02\"\n            - \"07\"\n            - \"08\"\n            - \"31\"\n            - \"32\"\n            - \"33\"\n            - \"90\"\n          example: '00'\n      required:\n        - typeCode\n        - subTypeCode\n    InputMessageAccountabilityData:\n      properties:\n        inputCycleDate:\n          type: string\n          format: 'CCYYMMDD'\n          description: |\n            InputCycleDate (Format CCYYMMDD - C=Century, Y=Year, M=Month, D=Day)\n          example: '20191201'\n        inputSource:\n          type: string\n          minLength: 8\n          maxLength: 8\n          description: InputSource\n          example: 'XYZ ABC '\n        inputSequenceNumber:\n          type: string\n          minLength: 6\n          maxLength: 6\n          description: InputSequenceNumber\n          example: '000001'\n      required:\n        - inputCycleDate\n        - inputSource\n        - inputSequenceNumber\n    WireAmount:\n      description: Maximum amount is a penny less than $10 billion.\n      properties:\n        amount:\n          type: string\n          minLength: 12\n          maxLength: 12\n          description: |\n            Amount is 12 numeric digits, right-justified with leading zeros.\n            It has an implied decimal point and no commas (e.g., $12,345.67 becomes 000001234567).\n            Can be all zeros for subtype 90.\n          example: '000000100000'\n      required:\n        - amount\n    SenderDepositoryInstitution:\n      description: SenderDepositoryInstitution is the receiver depository institution\n      properties:\n        senderABANumber:\n          type: string\n          minLength: 9\n          maxLength: 9\n          description: SenderABANumber\n          example: '091905114'\n        senderShortName:\n          type: string\n          maxLength: 18\n          description: SenderShortName\n          example: 'MIDWESTONE B\u0026T'\n      required:\n        - senderABANumber\n        - senderShortName\n    ReceiverDepositoryInstitution:\n      description: ReceiverDepositoryInstitution is the receiver depository institution.\n      properties:\n        receiverABANumber:\n          type: string\n          minLength: 9\n          maxLength: 9\n          description: ReceiverABANumber\n          example: '091905664'\n        receiverShortName:\n          type: string\n          maxLength: 18\n          description: ReceiverShortName\n          example: 'PREMIER BANK'\n      required:\n        - receiverABANumber\n        - receiverShortName\n    BusinessFunctionCode:\n      properties:\n        businessFunctionCode:\n          type: string\n          description: |\n            BusinessFunctionCode\n            * `BTR` - Bank Transfer (Beneficiary is a bank)\n            * `DRC` - Customer or Corporate Drawdown Request\n            * `CKS` - Check Same Day Settlement\n            * `DRW` - Drawdown Payment\n            * `CTP` - Customer Transfer Plus\n            * `FFR` - Fed Funds Returned\n            * `CTR` - Customer Transfer (Beneficiary is a not a bank)\n            * `FFS` - Fed Funds Sold\n            * `DEP` - Deposit to Sender’s Account\n            * `SVC` - Service Message\n            * `DRB` - Bank-to-Bank Drawdown Request\n          enum:\n            - BTR\n            - DRC\n            - CKS\n            - DRW\n            - CTP\n            - FFR\n            - CTR\n            - FFS\n            - DEP\n            - SVC\n            - DRB\n          example: 'BTR'\n        transactionTypeCode:\n          type: string\n          minLength: 3\n          maxLength: 3\n          description: |\n            TransactionTypeCode\n            If {3600} is CTR, an optional Transaction Type Code element is permitted;\n            however, the Transaction Type Code 'COV' is not permitted.\n          example: '   '\n      required:\n        - businessFunctionCode\n    LocalInstrument:\n      properties:\n        localInstrumentCode:\n          type: string\n          description: |\n            LocalInstrument\n\n            * `ANSI` - ANSI X12 format\n            * `COVS` - Sequence B Cover Payment Structured\n            * `GXML` - General XML format\n            * `IXML` - ISO 20022 XML formaT\n            * `NARR` - Narrative Text\n            * `PROP` - Proprietary Local Instrument Code\n            * `RMTS` - Remittance Information Structured\n            * `RRMT` - Related Remittance Information\n            * `S820` - STP 820 format\n            * `SWIF` - SWIFT field 70 (Remittance Information)\n            * `UEDI` - UN/EDIFACT format\n          enum:\n            - ANSI\n            - COVS\n            - GXML\n            - IXML\n            - NARR\n            - PROP\n            - RMTS\n            - RRMT\n            - S820\n            - SWIF\n            - UEDI\n          example: 'ANSI'\n        proprietaryCode:\n          type: string\n          maxLength: 35\n          description: ProprietaryCode\n          example: 'WJD786363'\n    PaymentNotification:\n      properties:\n        paymentNotificationIndicator:\n          type: string\n          description: |\n            Payment Notification Indicator\n\n            * `0 - 6` - Reserved for market practice conventions.\n            * `7 - 9` - Reserved for bilateral agreements between Fedwire senders and receivers.\n          enum:\n            - \"0\"\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n            - \"5\"\n            - \"6\"\n            - \"7\"\n            - \"8\"\n            - \"9\"\n          example: '1'\n        contactNotificationElectronicAddress:\n          type: string\n          maxLength: 2048\n          description: ContactNotificationElectronicAddress\n          example: 'https://moov.io/'\n        contactName:\n          type: string\n          maxLength: 140\n          description: ContactName\n          example: 'Wade Arnold'\n        contactPhoneNumber:\n          type: string\n          maxLength: 35\n          description: ContactPhoneNumber\n          example: '555-555-5555'\n        contactMobileNumber:\n          type: string\n          maxLength: 35\n          description: ContactMobileNumber\n          example: '555.555.5555'\n        faxNumber:\n          type: string\n          maxLength: 35\n          description: FaxNumber\n          example: '555.555.5555'\n        endToEndIdentification:\n          type: string\n          maxLength: 35\n          description: EndToEndIdentification\n          example: 'WireTransfer 10001'\n    InstructedAmount:\n      properties:\n        currencyCode:\n          type: string\n          maxLength: 3\n          description: CurrencyCode\n          example: 'USD'\n        amount:\n          type: string\n          maxLength: 15\n          description: |\n            Amount\n\n            Must begin with at least one numeric character (0-9) and contain only one decimal comma marker\n            (e.g., $1,234.56 should be entered as 1234,56 and $0.99 should be entered as 0,99).\n          example: \"1234,56\"\n    ExchangeRate:\n      properties:\n        exchangeRate:\n          type: string\n          maxLength: 12\n          description: |\n            ExchangeRate is the exchange rate\n\n            Must contain at least one numeric character and only one decimal comma marker\n            (e.g., an exchange rate of 1.2345 should be entered as 1,2345).\n          example: '1,2345'\n    FinancialInstitution:\n      description: FinancialInstitution is financial institution demographic information.\n      properties:\n        identificationCode:\n          type: string\n          description: |\n            Identification Code:\n\n            * `B` - SWIFT Bank Identifier Code (BIC)\n            * `C` - CHIPS Participant\n            * `D` - Demand Deposit Account (DDA) Number\n            * `F` - Fed Routing Number\n            * `T` - SWIFT BIC or Bank Entity Identifier (BEI) and Account Number\n            * `U` - CHIPS Identifier\n          enum:\n            - B\n            - C\n            - D\n            - F\n            - T\n            - U\n          maxLength: 1\n          example: 'B'\n        identifier:\n          type: string\n          maxLength: 34\n          description: Identifier\n          example: \"123456789\"\n        name:\n          type: string\n          maxLength: 35\n          description: Name\n          example: \"FI Name\"\n        address :\n          $ref: '#/components/schemas/WireAddress'\n      required:\n        - identificationCode\n        - identifier\n        - name\n        - address\n    Beneficiary:\n      properties:\n        personal:\n          $ref: '#/components/schemas/Personal'\n      required:\n        - personal\n    Personal:\n      description: Personal is personal demographic information.\n      properties:\n        identificationCode:\n          type: string\n          description: |\n            Identification Code:\n\n            * `B` - SWIFT Bank Identifier Code (BIC)\n            * `C` - CHIPS Participant\n            * `D` - Demand Deposit Account (DDA) Number\n            * `F` - Fed Routing Number\n            * `T` - SWIFT BIC or Bank Entity Identifier (BEI) and Account Number\n            * `U` - CHIPS Identifier\n            * `1` - Passport Number\n            * `2` - Tax Identification Number\n            * `3` - Driver’s License Number\n            * `4` - Alien Registration Number\n            * `5` - Corporate Identification\n            * `9` - Other Identification\n          enum:\n            - B\n            - C\n            - D\n            - F\n            - T\n            - U\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 9\n          maxLength: 1\n          example: 'B'\n        identifier:\n          type: string\n          maxLength: 34\n          description: Identifier\n          example: \"123456789\"\n        name:\n          type: string\n          maxLength: 35\n          description: Name\n          example: \"John Doe\"\n        address :\n          $ref: '#/components/schemas/WireAddress'\n      required:\n        - identificationCode\n        - identifier\n        - name\n        - address\n    BeneficiaryReference:\n      properties:\n        beneficiaryReference:\n          type: string\n          maxLength: 16\n          example: 'Test Data'\n          description: BeneficiaryReference\n    AccountDebitedDrawdown:\n      description: AccountDebitedDrawdown is the account which is debited in a drawdown.\n      properties:\n        identificationCode:\n          type: string\n          description: |\n            Identification Code\n            * `D` - Debit\n          enum:\n            - D\n          example: 'D'\n        identifier:\n          type: string\n          maxLength: 34\n          description: Identifier\n          example: \"123456789\"\n        name:\n          type: string\n          maxLength: 35\n          description: Name\n          example: \"John Doe\"\n        addressLineOne:\n          type: string\n          maxLength: 35\n          description: AddressLineOne\n          example: \"Address One\"\n        addressLineTwo:\n          type: string\n          maxLength: 35\n          description: AddressLineTwo\n          example: \"Address Two\"\n        addressLineThree:\n          type: string\n          maxLength: 35\n          description: AddressLineThree\n          example: \"Address Three\"\n      required:\n        - identificationCode\n        - identifier\n        - name\n    OriginatorOptionF:\n      properties:\n        partyIdentifier:\n          type: string\n          maxLength: 35\n          description: |\n            PartyIdentifier\n\n            Must be one of the following two formats:\n            1.\t/Account Number (slash followed by at least one valid non-space character:  e.g., /123456)\n\n            2.\tUnique Identifier/ (4 character code followed by a slash and at least one valid non-space character:\n               e.g., SOSE/123-456-789)\n            ARNU: Alien Registration Number\n            CCPT: Passport Number\n            CUST: Customer Identification Number  DRLC/    Driver’s License Number  EMPL/    Employer Number\n            NIDN: National Identify Number  SOSE/    Social Security Number\n            TXID: Tax Identification Number\n          example: '/123456'\n        name:\n          type: string\n          maxLength: 35\n          description: |\n            Name\n\n            Format:  Must begin with Line Code 1 followed by a slash and at least one valid non-space character (e.g., 1/SMITH JOHN).\n          example: '1/SMITH JOHN'\n        lineOne:\n          type: string\n          maxLength: 35\n          description: |\n            LineOne\n\n            Format: Must begin with one of the following Line Codes followed by a slash and\n            at least one valid non-space character.\n            * 1\t- Name\n            * 2\t- Address\n            * 3\t- Country and Town\n            * 4\t- Date of Birth\n            * 5\t- Place of Birth\n            * 6\t- Customer Identification Number\n            * 7\t- National Identity Number\n            * 8\t- Additional Information\n\n            For example:\n            * `2/123 MAIN STREET`\n            * `3/US/NEW YORK, NY 10000`\n            * `7/111-22-3456`\n\n          example: '2/123 MAIN STREET'\n        lineTwo:\n          type: string\n          maxLength: 35\n          description: |\n            LineTwo\n\n            Format: Must begin with one of the following Line Codes followed by a slash and\n            at least one valid non-space character.\n            * 1\t- Name\n            * 2\t- Address\n            * 3\t- Country and Town\n            * 4\t- Date of Birth\n            * 5\t- Place of Birth\n            * 6\t- Customer Identification Number\n            * 7\t- National Identity Number\n            * 8\t- Additional Information\n\n            For example:\n            * `2/123 MAIN STREET`\n            * `3/US/NEW YORK, NY 10000`\n            * `7/111-22-3456`\n\n          example: '3/US/NEW YORK, NY 10000'\n        lineThree:\n          type: string\n          maxLength: 35\n          description: |\n            LineThree\n\n            Format: Must begin with one of the following Line Codes followed by a slash and\n            at least one valid non-space character.\n            * 1\t- Name\n            * 2\t- Address\n            * 3\t- Country and Town\n            * 4\t- Date of Birth\n            * 5\t- Place of Birth\n            * 6\t- Customer Identification Number\n            * 7\t- National Identity Number\n            * 8\t- Additional Information\n\n            For example:\n            * `2/123 MAIN STREET`\n            * `3/US/NEW YORK, NY 10000`\n            * `7/111-22-3456`\n\n          example: '7/111-22-3456'\n    AccountCreditedDrawdown:\n      description: AccountCreditedDrawdown is the account which is credited in a drawdown.\n      properties:\n        drawdownCreditAccountNumber:\n          type: string\n          maxLength: 9\n          description: |\n            DrawdownCreditAccountNumber\n\n            9 character ABA\n          example: '121042882'\n    OriginatorToBeneficiary:\n        properties:\n          lineOne:\n            type: string\n            maxLength: 35\n            description: LineOne\n            example: 'Line One'\n          lineTwo:\n            type: string\n            maxLength: 35\n            description: LineTwo\n            example: 'Line Two'\n          lineThree:\n            type: string\n            maxLength: 35\n            description: LineThree\n            example: 'Line Three'\n          lineFour:\n            type: string\n            maxLength: 35\n            description: LineFour\n            example: 'Line Four'\n    FIToFI:\n      properties:\n        lineOne:\n          type: string\n          maxLength: 30\n          description: LineOne\n          example: 'Line One'\n        lineTwo:\n          type: string\n          maxLength: 33\n          description: LineTwo\n          example: 'Line Two'\n        lineThree:\n          type: string\n          maxLength: 33\n          description: LineThree\n          example: 'Line Three'\n        lineFour:\n          type: string\n          maxLength: 33\n          description: LineFour\n          example: 'Line Four'\n        lineFive:\n          type: string\n          maxLength: 33\n          description: LineFive\n          example: 'Line Five'\n        lineSix:\n          type: string\n          maxLength: 33\n          description: LineSix\n          example: 'Line Six'\n    Advice:\n      properties:\n        adviceCode:\n          type: string\n          description: |\n            Advice Code\n\n            * `HLD` - Hold\n            * `LTR` - Letter\n            * `PHN` - Phone\n            * `TLX` - Telex\n            * `WRE` - Wire\n          enum:\n            - HLD\n            - LTR\n            - PHN\n            - TLX\n            - WRE\n          example: 'HLD'\n        lineOne:\n          type: string\n          maxLength: 26\n          description: LineOne\n          example: 'Line One'\n        lineTwo:\n          type: string\n          maxLength: 33\n          description: LineTwo\n          example: 'Line Two'\n        lineThree:\n          type: string\n          maxLength: 33\n          description: LineThree\n          example: 'Line Three'\n        lineFour:\n          type: string\n          maxLength: 33\n          description: LineFour\n          example: 'Line Four'\n        lineFive:\n          type: string\n          maxLength: 33\n          description: LineFive\n          example: 'Line Five'\n        lineSix:\n          type: string\n          maxLength: 33\n          description: LineSix\n          example: 'Line Six'\n    FIPaymentMethodToBeneficiary:\n      properties:\n        paymentMethod:\n          type: string\n          description: PaymentMethod\n          enum:\n            - CHECK\n          example: 'CHECK'\n        AdditionalInformation:\n          type: string\n          maxLength: 30\n          example: \"For goods and services\"\n    AdditionalFIToFI:\n      properties:\n        lineOne:\n          type: string\n          maxLength: 35\n          description: LineOne\n          example: 'Line One'\n        lineTwo:\n          type: string\n          maxLength: 35\n          description: LineTwo\n          example: 'Line Two'\n        lineThree:\n          type: string\n          maxLength: 35\n          description: LineThree\n          example: 'Line Three'\n        lineFour:\n          type: string\n          maxLength: 35\n          description: LineFour\n          example: 'Line Four'\n        lineFive:\n          type: string\n          maxLength: 35\n          description: LineFive\n          example: 'Line Five'\n        lineSix:\n          type: string\n          maxLength: 35\n          description: LineSix\n          example: 'Line Six'\n    CurrencyInstructedAmount:\n      properties:\n        swiftFieldTag:\n          type: string\n          maxLength: 5\n          description: SwiftFieldTag\n          example: 'SWIFT'\n        amount:\n          type: string\n          maxLength: 18\n          description: Amount\n          example: \"1234,56\"\n    CoverPayment:\n      properties:\n        swiftFieldTag:\n          type: string\n          maxLength: 5\n          description: SwiftFieldTag\n          example: 'SWIFT'\n        swiftLineOne:\n          type: string\n          maxLength: 35\n          description: SwiftLineOne\n          example: 'Swift Line One'\n        swiftLineTwo:\n          type: string\n          maxLength: 35\n          description: SwiftLineTwo\n          example: 'Swift Line Two'\n        swiftLineThree:\n          type: string\n          maxLength: 35\n          description: SwiftLineThree\n          example: 'Swift Line Three'\n        swiftLineFour:\n          type: string\n          maxLength: 35\n          description: SwiftLineFour\n          example: 'Swift Line Four'\n        swiftLineFive:\n          type: string\n          maxLength: 35\n          description: SwiftLineFive\n          example: 'Swift Line Five'\n        swiftLineSix:\n          type: string\n          maxLength: 35\n          description: SwiftLineSix\n          example: 'Swift Line Six'\n    UnstructuredAddenda:\n      properties:\n        addendaLength:\n          type: string\n          maxLength: 4\n          description: |\n            AddendaLength\n\n            Addenda Length must be numeric, padded with leading zeros if less than four characters, and must equal length\n            of content in Addenda Information (e.g., if content of Addenda Information is 987 characters,\n            Addenda Length must be 0987).\n          example: '0987'\n        addenda:\n          type: string\n          maxLength: 8994\n          description: Addenda\n          example: 'Payment for goods'\n    SenderReference:\n      properties:\n        senderReference:\n          type: string\n          maxLength: 16\n          description: SenderReference\n          example: 'Reference'\n    PreviousMessageIdentifier:\n      description: The identifier for a previous message.\n      properties:\n        previousMessageIdentifier:\n          type: string\n          maxLength: 22\n          description: PreviousMessageIdentifier\n          example: 'Identifier'\n    Charges:\n      properties:\n        chargeDetails:\n          type: string\n          description: |\n            Charge Details\n            * `B` - Beneficiary\n            * `S` - Shared\n          enum:\n            - B\n            - S\n          example: 'B'\n        sendersChargesOne:\n          type: string\n          maxLength: 15\n          description: |\n            SendersChargesOne\n\n            The first three characters must contain an alpha currency code (e.g., USD).  The remaining\n            characters for the amount must begin with at least one numeric character (0-9) and only one decimal comma\n            marker.  $1,234.56 should be entered as USD1234,56 and $0.99 should be entered as USD0,99.\n          example: 'USD1234,56'\n        sendersChargesTwo:\n          type: string\n          maxLength: 15\n          description: |\n            SendersChargesTwo\n\n            The first three characters must contain an alpha currency code (e.g., USD).  The remaining\n            characters for the amount must begin with at least one numeric character (0-9) and only one decimal comma\n            marker.  $1,234.56 should be entered as USD1234,56 and $0.99 should be entered as USD0,99.\n          example: 'USD1234,56'\n        sendersChargesThree:\n          type: string\n          maxLength: 15\n          description: |\n            SendersChargesThree\n\n            The first three characters must contain an alpha currency code (e.g., USD).  The remaining\n            characters for the amount must begin with at least one numeric character (0-9) and only one decimal comma\n            marker.  $1,234.56 should be entered as USD1234,56 and $0.99 should be entered as USD0,99.\n          example: 'USD1234,56'\n        sendersChargesFour:\n          type: string\n          maxLength: 15\n          description: |\n            SendersChargesFour\n\n            The first three characters must contain an alpha currency code (e.g., USD).  The remaining\n            characters for the amount must begin with at least one numeric character (0-9) and only one decimal comma\n            marker.  $1,234.56 should be entered as USD1234,56 and $0.99 should be entered as USD0,99.\n          example: 'USD1234,56'\n    RelatedRemittance:\n      properties:\n        remittanceIdentification:\n          type: string\n          maxLength: 35\n          description: RemittanceIdentification\n          example: 'Remittance Identification'\n        remittanceLocationMethod:\n          type: string\n          description: |\n            RemittanceLocationMethod\n\n            * `EDIC` - Electronic Data Interchange\n            * `EMAL` - Email\n            * `FAXI` - Fax\n            * `POST` - Postal services\n            * `SMS` - Short Message Service (text)\n            * `URI` - Uniform Resource Identifier\n          enum:\n            - EDIC\n            - EMAL\n            - FAXI\n            - POST\n            - SMS\n            - URI\n          example: 'EDIC'\n        remittanceLocationElectronicAddress:\n          type: string\n          maxLength: 2048\n          description: RemittanceLocationElectronicAddress (E-mail or URL address)\n          example: 'https://moov.io'\n        remittanceData:\n          $ref: '#/components/schemas/RemittanceData'\n    RemittanceOriginator:\n      properties:\n        identificationType:\n          type: string\n          description: |\n            Identification Type\n\n            * `OI` - Organization ID\n            * `PI` - Private ID\n          enum:\n            - OI\n            - PI\n          example: 'OI'\n        identificationCode:\n          type: string\n          maxLength: 4\n          description: |\n            IdentificationCode\n\n            Organization Identification Codes\n\n            * `BANK` - Bank Party Identification\n            * `CUST` - Customer Number\n            * `DUNS` - Data Universal Number System (Dun \u0026 Bradstreet)\n            * `EMPL` - Employer Identification Number\n            * `GS1G` - Global Location Number\n            * `PROP` - Proprietary Identification Number\n            * `SWBB` - SWIFT BIC or BEI\n            * `TXID` - Tax Identification Number\n\n            Private Identification Codes\n\n            * `ARNU` - Alien Registration Number\n            * `CCPT` - Passport Number\n            * `CUST` - Customer Number\n            * `DPOB` - Date \u0026 Place of Birth\n            * `DRLC` - Driver’s License Number\n            * `EMPL` - Employee Identification Number\n            * `NIDN` - National Identity Number\n            * `PROP` - Proprietary Identification Number\n            * `SOSE` - Social Security Number\n            * `TXID` - Tax Identification Number\n          example: 'BANK'\n        identificationNumber:\n          type: string\n          maxLength: 35\n          description: IdentificationNumber\n          example: '192827828'\n        identificationNumberIssuer:\n          type: string\n          maxLength: 35\n          description: IdentificationNumberIssuer\n          example: 'Identification Number Issuer'\n        dateBirthPlace:\n          type: string\n          maxLength: 82\n          description: DateBirthPlace\n          example: '03062013 Chester'\n        remittanceData:\n          $ref: '#/components/schemas/RemittanceData'\n        countryOfResidence:\n          type: string\n          maxLength: 2\n          description: CountryOfResidence\n          example: 'US'\n        contactName:\n          type: string\n          maxLength: 140\n          description: ContactName\n          example: 'Wade Arnold'\n        contactPhoneNumber:\n          type: string\n          maxLength: 35\n          description: ContactPhoneNumber\n          example: '555.555.5555'\n        contactMobileNumber:\n          type: string\n          maxLength: 35\n          description: ContactMobileNumber\n          example: '555.555.5555'\n        contactFaxNumber:\n          type: string\n          maxLength: 35\n          description: ContactFaxNumber\n          example: '555.555.5555'\n        contactElectronicAddress:\n          type: string\n          maxLength: 2048\n          description: ContactElectronicAddress (i.e., E-mail or URL address)\n          example: 'https://moov.io'\n        contactOther:\n          type: string\n          maxLength: 35\n          description: ContactOther\n          example: 'Contact Other'\n    RemittanceBeneficiary:\n      properties:\n        identificationType:\n          type: string\n          description: |\n            IdentificationType\n\n            * `OI` - Organization ID\n            * `PI` - Private ID\n          enum:\n            - OI\n            - PI\n          example: 'OI'\n        identificationCode:\n          type: string\n          maxLength: 4\n          description: |\n            IdentificationCode\n\n            Organization Identification Codes\n\n            * `BANK` - Bank Party Identification\n            * `CUST` - Customer Number\n            * `DUNS` - Data Universal Number System (Dun \u0026 Bradstreet)\n            * `EMPL` - Employer Identification Number\n            * `GS1G` - Global Location Number\n            * `PROP` - Proprietary Identification Number\n            * `SWBB` - SWIFT BIC or BEI\n            * `TXID` - Tax Identification Number\n\n            Private Identification Codes\n\n            * `ARNU` - Alien Registration Number\n            * `CCPT` - Passport Number\n            * `CUST` - Customer Number\n            * `DPOB` - Date \u0026 Place of Birth\n            * `DRLC` - Driver’s License Number\n            * `EMPL` - Employee Identification Number\n            * `NIDN` - National Identity Number\n            * `PROP` - Proprietary Identification Number\n            * `SOSE` - Social Security Number\n            * `TXID` - Tax Identification Number\n          example: 'BANK'\n        identificationNumber:\n          type: string\n          maxLength: 35\n          description: IdentificationNumber\n          example: '192827828'\n        identificationNumberIssuer:\n          type: string\n          maxLength: 35\n          description: IdentificationNumberIssuer\n          example: 'Identification Number Issuer'\n        dateBirthPlace:\n          type: string\n          maxLength: 82\n          description: DateBirthPlace\n          example: '03062013 Chester'\n        remittanceData:\n          $ref: '#/components/schemas/RemittanceData'\n    RemittanceData:\n      properties:\n        name:\n          type: string\n          maxLength: 140\n          description: Name\n          example: 'Wade Arnold'\n        addressType:\n          type: string\n          description: |\n            AddressType\n\n            * `ADDR` - Complete Postal Address\n            * `BIZZ` - Business Address\n            * `DLVY` - Delivery Address\n            * `HOME` - Home Address\n            * `MLTO` - Mail Address\n            * `PBOX` - Post Office Box\n          enum:\n            - ADDR\n            - BIZZ\n            - DLVY\n            - HOME\n            - MLTO\n            - PBOX\n          example: 'ADDR'\n        department:\n          type: string\n          maxLength: 70\n          description: Department\n          example: 'Buildings'\n        subDepartment:\n          type: string\n          maxLength: 70\n          description: SubDepartment\n          example: 'Service'\n        streetName:\n          type: string\n          maxLength: 70\n          description: StreetName\n          example: 'Street Way Boulevard'\n        buildingNumber:\n          type: string\n          maxLength: 16\n          description: BuildingNumber\n          example: '1A'\n        postCode:\n          type: string\n          maxLength: 16\n          description: PostCode\n          example: '19465'\n        townName:\n          type: string\n          maxLength: 35\n          description: TownName\n          example: 'Any Town'\n        countrySubDivisionState:\n          type: string\n          maxLength: 35\n          description: CountrySubDivisionState\n          example: 'PA'\n        country:\n          type: string\n          maxLength: 2\n          description: Country\n          example: 'US'\n        addressLineOne:\n          type: string\n          maxLength: 70\n          description: AddressLineOne\n          example: 'AddressLineOne'\n        addressLineTwo:\n          type: string\n          maxLength: 70\n          description: AddressLineTwo\n          example: 'AddressLineTwo'\n        addressLineThree:\n          type: string\n          maxLength: 70\n          description: AddressLineThree\n          example: 'AddressLineThree'\n        addressLineFour:\n          type: string\n          maxLength: 70\n          description: AddressLineFour\n          example: 'AddressLineFour'\n        addressLineFive:\n          type: string\n          maxLength: 70\n          description: AddressLineFive\n          example: 'AddressLineFive'\n        addressLineSix:\n          type: string\n          maxLength: 70\n          description: AddressLineSix\n          example: 'AddressLineSix'\n        addressLineSeven:\n          type: string\n          maxLength: 70\n          description: AddressLineSeven\n          example: 'AddressLineSeven'\n        countryOfResidence:\n          type: string\n          maxLength: 2\n          description: CountryOfResidence\n          example: 'US'\n    WireAddress:\n      description: Identifies Address\n      properties:\n        addressLineOne:\n          type: string\n          maxLength: 35\n          description: AddressLineOne\n          example: \"Address One\"\n        addressLineTwo:\n          type: string\n          maxLength: 35\n          description: AddressLineTwo\n          example: \"Address Two\"\n        addressLineThree:\n          type: string\n          maxLength: 35\n          description: AddressLineThree\n          example: \"Address Three\"\n    PrimaryRemittanceDocument:\n      properties:\n        documentTypeCode:\n          type: string\n          description: |\n            Document Type Code\n\n            * `AROI` - Accounts Receivable Open Item\n            * `BOLD` - Bill of Lading Shipping Notice\n            * `CINV` - Commercial Invoice\n            * `CMCN` - Commercial Contract\n            * `CNFA` - Credit Note Related to Financial Adjustment\n            * `CREN` - Credit Note\n            * `DEBN` - Debit Note\n            * `DISP` - Dispatch Advice\n            * `DNFA` - Debit Note Related to Financial Adjustment HIRI Hire Invoice\n            * `MSIN` - Metered Service Invoice\n            * `PROP` - Proprietary Document Type\n            * `PUOR` - Purchase Order\n            * `SBIN` - Self Billed Invoice\n            * `SOAC` - Statement of Account\n            * `TSUT` - Trade Services Utility Transaction VCHR Voucher\n          enum:\n            - AROI\n            - BOLD\n            - CINV\n            - CMCN\n            - CNFA\n            - CREN\n            - DEBN\n            - DISP\n            - DNFA\n            - MSIN\n            - PROP\n            - PUOR\n            - SBIN\n            - SOAC\n            - TSUT\n          example:  'AROI'\n        proprietaryDocumentTypeCode:\n          type: string\n          maxLength: 35\n          description: ProprietaryDocumentTypeCode\n          example: 'Proprietary Code'\n        documentIdentificationNumber:\n          type: string\n          maxLength: 35\n          description: DocumentIdentificationNumber\n          example: 'DOCUMENT 292828'\n        issuer:\n          type: string\n          maxLength: 35\n          description: Issuer\n          example: 'Remittance Issuer'\n    RemittanceAmount:\n      properties:\n        currencyCode:\n          type: string\n          maxLength: 3\n          description: CurrencyCode\n          example: 'USD'\n        amount:\n          type: string\n          minLength: 19\n          maxLength: 19\n          description: |\n            Amount\n            Must contain at least one numeric character and only one decimal period marker (e.g., $1,234.56 should be entered as 1234.56).\n            Can have up to five numeric characters following the decimal period marker (e.g., 1234.56789).\n            Amount must be greater than zero (i.e., at least .01).\n          example: '1234.56789'\n    DateRemittanceDocument:\n      properties:\n        dateRemittanceDocument:\n          type: string\n          format: 'CCYYMMDD'\n          description: DateRemittanceDocument (Format CCYYMMDD - C=Century, Y=Year, M=Month, D=Day)\n          example: '20190401'\n    RemittanceFreeText:\n      properties:\n        lineOne:\n          type: string\n          maxLength: 140\n          description: LineOne\n          example: 'Line One Text'\n        lineTwo:\n          type: string\n          maxLength: 140\n          description: LineTwo\n          example: 'Line Two Text'\n        lineThree:\n          type: string\n          maxLength: 140\n          description: LineThree\n          example: 'Line Three Text'\n    Adjustment:\n      properties:\n        adjustmentReasonCode:\n          type: string\n          description: |\n            Adjustment Reason Code\n\n            * `01` - Pricing Error\n            * `03` - Extension Error\n            * `04` - Item Not Accepted (Damaged)\n            * `05` - Item Not Accepted (Quality)\n            * `06` - Quantity Contested 07   Incorrect Product\n            * `11` - Returns (Damaged)\n            * `12` - Returns (Quality)\n            * `59` - Item Not Received\n            * `75` - Total Order Not Received\n            * `81` - Credit as Agreed\n            * `CM` - Covered by Credit Memo\n          enum:\n            - \"01\"\n            - \"03\"\n            - \"04\"\n            - \"05\"\n            - \"06\"\n            - \"11\"\n            - \"12\"\n            - \"59\"\n            - \"75\"\n            - \"81\"\n            - \"CM\"\n          example: 'CM'\n        creditDebitIndicator:\n          type: string\n          description: |\n            CreditDebitIndicator\n\n            * `CRDT` - Credit\n            * `DBIT` - Debit\n          enum:\n            - CRDT\n            - DBIT\n          example: 'DBIT'\n        currencyCode:\n          type: string\n          maxLength: 3\n          description: CurrencyCode\n          example: 'USD'\n        amount:\n          type: string\n          minLength: 19\n          maxLength: 19\n          description: |\n            Amount\n            Must contain at least one numeric character and only one decimal period marker (e.g., $1,234.56 should be entered as 1234.56).\n            Can have up to 5 numeric characters following the decimal period marker (e.g., 1234.56789).\n            Amount must be greater than zero (i.e., at least .01).\n          example: '1234.56789'\n        additionalInfo:\n          type: string\n          maxLength: 140\n          description: AdditionalInfo\n          example: 'Additional Info'\n    SecondaryRemittanceDocument:\n      properties:\n        documentTypeCode:\n          type: string\n          description: |\n            Document Type Code\n\n            * `AROI` - Accounts Receivable Open Item\n            * `DISP` - Dispatch Advice\n            * `FXDR` - Foreign Exchange Deal Reference\n            * `PROP` - Proprietary Document Type PUOR Purchase Order\n            * `RADM` - Remittance Advice Message\n            * `RPIN` - Related Payment Instruction\n            * `SCOR1` - Structured Communication Reference VCHR Voucher\n          enum:\n            - AROI\n            - DISP\n            - FXDR\n            - PROP\n            - RADM\n            - RPIN\n            - SCOR1\n          example: 'AROI'\n        proprietaryDocumentTypeCode:\n          type: string\n          maxLength: 35\n          description: proprietaryDocumentTypeCode\n          example: 'Proprietary'\n        documentIdentificationNumber:\n          type: string\n          maxLength: 35\n          description: documentIdentificationNumber\n          example: 'Document2'\n        issuer:\n          type: string\n          maxLength: 35\n          description: Issuer\n          example: 'Issuer'\n    ServiceMessage:\n      properties:\n        lineOne:\n          type: string\n          maxLength: 35\n          description: LineOne\n          example: 'Line One Text'\n        lineTwo:\n          type: string\n          maxLength: 35\n          description: LineTwo\n          example: 'Line Two Text'\n        lineThree:\n          type: string\n          maxLength: 35\n          description: LineThree\n          example: 'Line Three Text'\n        lineFour:\n          type: string\n          maxLength: 35\n          description: LineFour\n          example: 'Line Four Text'\n        lineFive:\n          type: string\n          maxLength: 35\n          description: LineFive\n          example: 'Line Five Text'\n        lineSix:\n          type: string\n          maxLength: 35\n          description: LineSix\n          example: 'Line Six Text'\n        lineSeven:\n          type: string\n          maxLength: 35\n          description: LineSeven\n          example: 'Line Seven Text'\n        lineEight:\n          type: string\n          maxLength: 35\n          description: LineEight\n          example: 'Line Eight Text'\n        lineNine:\n          type: string\n          maxLength: 35\n          description: LineNine\n          example: 'Line Nine Text'\n        lineTen:\n          type: string\n          maxLength: 35\n          description: LineTen\n          example: 'Line Ten Text'\n        lineEleven:\n          type: string\n          maxLength: 35\n          description: LineEleven\n          example: 'Line Eleven Text'\n        lineTwelve:\n          type: string\n          maxLength: 35\n          description: LineTwelve\n          example: 'Line Twelve Text'\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"FEDWireMessage\": parse schema: property \"beneficiary\": parse schema: resolve \"#/components/schemas/Beneficiary\": parse schema: property \"personal\": parse schema: resolve \"#/components/schemas/Personal\": parse schema: property \"identificationCode\": parse enum values: parse value \"1\": expected type \"string\", got \"number\""
}