{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "oss-diff.yml",
			"size": 0,
			"path": "contracts/oss-diff.yml",
			"byteSize": 258214,
			"content": "openapi: 3.0.0\ninfo:\n  title: InfluxDB OSS API Service\n  version: 2.0.0\n  description: |\n    The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.\nservers:\n  - url: /api/v2\npaths:\n  /debug/pprof/all:\n    get:\n      operationId: GetDebugPprofAllProfiles\n      tags:\n        - Debug\n      summary: Retrieve all runtime profiles\n      description: |\n        Collects samples and returns reports for the following [Go runtime profiles](https://pkg.go.dev/runtime/pprof):\n\n        - **allocs**: All past memory allocations\n        - **block**: Stack traces that led to blocking on synchronization primitives\n        - **cpu**: (Optional) Program counters sampled from the executing stack.\n          Include by passing the `cpu` query parameter with a [duration]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#duration) value.\n          Equivalent to the report from [`GET /debug/pprof/profile?seconds=NUMBER_OF_SECONDS`](#operation/GetDebugPprofProfile).\n        - **goroutine**: All current goroutines\n        - **heap**: Memory allocations for live objects\n        - **mutex**: Holders of contended mutexes\n        - **threadcreate**: Stack traces that led to the creation of new OS threads\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: Get all profiles'\n          source: |\n            # Download and extract a `tar.gz` of all profiles after 10 seconds of CPU sampling.\n\n            curl \"http://localhost:8086/debug/pprof/all?cpu=10s\" | tar -xz\n\n            # x profiles/cpu.pb.gz\n            # x profiles/goroutine.pb.gz\n            # x profiles/block.pb.gz\n            # x profiles/mutex.pb.gz\n            # x profiles/heap.pb.gz\n            # x profiles/allocs.pb.gz\n            # x profiles/threadcreate.pb.gz\n\n            # Analyze a profile.\n\n            go tool pprof profiles/heap.pb.gz\n        - lang: Shell\n          label: 'Shell: Get all profiles except CPU'\n          source: |\n            # Download and extract a `tar.gz` of all profiles except CPU.\n\n            curl http://localhost:8086/debug/pprof/all | tar -xz\n\n            # x profiles/goroutine.pb.gz\n            # x profiles/block.pb.gz\n            # x profiles/mutex.pb.gz\n            # x profiles/heap.pb.gz\n            # x profiles/allocs.pb.gz\n            # x profiles/threadcreate.pb.gz\n\n            # Analyze a profile.\n\n            go tool pprof profiles/heap.pb.gz\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: cpu\n          description: |\n            Collects and returns CPU profiling data for the specified [duration]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#duration).\n          schema:\n            type: string\n            format: duration\n            externalDocs:\n              description: InfluxDB duration\n              url: 'https://docs.influxdata.com/influxdb/v2.1/reference/glossary/#duration'\n      responses:\n        '200':\n          description: |\n            [Go runtime profile](https://pkg.go.dev/runtime/pprof) reports.\n          content:\n            application/octet-stream:\n              schema:\n                description: |\n                  GZIP compressed TAR file (`.tar.gz`) that contains\n                  [Go runtime profile](https://pkg.go.dev/runtime/pprof) reports.\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/allocs:\n    get:\n      operationId: GetDebugPprofAllocs\n      tags:\n        - Debug\n      summary: Retrieve the memory allocations runtime profile\n      description: |\n        Returns a [Go runtime profile](https://pkg.go.dev/runtime/pprof) report of\n        all past memory allocations.\n        **allocs** is the same as the **heap** profile,\n        but changes the default [pprof](https://pkg.go.dev/runtime/pprof)\n        display to __-alloc_space__,\n        the total number of bytes allocated since the program began (including garbage-collected bytes).\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: go tool pprof'\n          source: |\n            # Analyze the profile in interactive mode.\n\n            go tool pprof http://localhost:8086/debug/pprof/allocs\n\n            # `pprof` returns the following prompt:\n            #   Entering interactive mode (type \"help\" for commands, \"o\" for options)\n            #   (pprof)\n\n            # At the prompt, get the top N memory allocations.\n\n            (pprof) top10\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: debug\n          description: |\n            - `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n            - `1`: Return a response body with the report formatted as human-readable text.\n              The report contains comments that translate addresses to function names and line numbers for debugging.\n\n            `debug=1` is mutually exclusive with the `seconds` query parameter.\n          schema:\n            type: integer\n            format: int64\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: seconds\n          description: |\n            Number of seconds to collect statistics.\n\n            `seconds` is mutually exclusive with `debug=1`.\n          schema:\n            type: string\n            format: int64\n      responses:\n        '200':\n          description: |\n            [Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\n            with [pprof](https://github.com/google/pprof) analysis and visualization tools.\n            If debug is enabled (`?debug=1`), response body contains a human-readable profile.\n          content:\n            application/octet-stream:\n              schema:\n                description: |\n                  [Go runtime profile](https://pkg.go.dev/runtime/pprof) report in protocol buffer format.\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n            text/plain:\n              schema:\n                description: |\n                  Response body contains a report formatted in plain text.\n                  The report contains comments that translate addresses to\n                  function names and line numbers for debugging.\n                type: string\n                format: Go runtime profile\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/block:\n    get:\n      operationId: GetDebugPprofBlock\n      tags:\n        - Debug\n      summary: Retrieve the block runtime profile\n      description: |\n        Collects samples and returns a [Go runtime profile](https://pkg.go.dev/runtime/pprof)\n        report of stack traces that led to blocking on synchronization primitives.\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: go tool pprof'\n          source: |\n            # Analyze the profile in interactive mode.\n\n            go tool pprof http://localhost:8086/debug/pprof/block\n\n            # `pprof` returns the following prompt:\n            #   Entering interactive mode (type \"help\" for commands, \"o\" for options)\n            #   (pprof)\n\n            #  At the prompt, get the top N entries.\n\n            (pprof) top10\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: debug\n          description: |\n            - `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n            - `1`: Return a response body with the report formatted as human-readable text.\n              The report contains comments that translate addresses to function names and line numbers for debugging.\n\n            `debug=1` is mutually exclusive with the `seconds` query parameter.\n          schema:\n            type: integer\n            format: int64\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: seconds\n          description: |\n            Number of seconds to collect statistics.\n\n            `seconds` is mutually exclusive with `debug=1`.\n          schema:\n            type: string\n            format: int64\n      responses:\n        '200':\n          description: |\n            [Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\n            with [pprof](https://github.com/google/pprof) analysis and visualization tools.\n            If debug is enabled (`?debug=1`), response body contains a human-readable profile.\n          content:\n            application/octet-stream:\n              schema:\n                description: |\n                  [Go runtime profile](https://pkg.go.dev/runtime/pprof) report in protocol buffer format.\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n            text/plain:\n              schema:\n                description: |\n                  Response body contains a report formatted in plain text.\n                  The report contains comments that translate addresses to\n                  function names and line numbers for debugging.\n                type: string\n                format: Go runtime profile\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/cmdline:\n    get:\n      operationId: GetDebugPprofCmdline\n      tags:\n        - Debug\n      summary: Retrieve the command line invocation\n      description: |\n        Returns the command line that invoked InfluxDB.\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      responses:\n        '200':\n          description: Command line invocation.\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: Command line\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/goroutine:\n    get:\n      operationId: GetDebugPprofGoroutine\n      tags:\n        - Debug\n      summary: Retrieve the goroutines runtime profile\n      description: |\n        Collects statistics and returns a [Go runtime profile](https://pkg.go.dev/runtime/pprof)\n        report of all current goroutines.\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: go tool pprof'\n          source: |\n            # Analyze the profile in interactive mode.\n\n            go tool pprof http://localhost:8086/debug/pprof/goroutine\n\n            # `pprof` returns the following prompt:\n            #   Entering interactive mode (type \"help\" for commands, \"o\" for options)\n            #   (pprof)\n\n            #  At the prompt, get the top N entries.\n\n            (pprof) top10\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: debug\n          description: |\n            - `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n            - `1`: Return a response body with the report formatted as\n                   human-readable text with comments that translate addresses to\n                   function names and line numbers for debugging.\n\n            `debug=1` is mutually exclusive with the `seconds` query parameter.\n          schema:\n            type: integer\n            format: int64\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: seconds\n          description: |\n            Number of seconds to collect statistics.\n\n            `seconds` is mutually exclusive with `debug=1`.\n          schema:\n            type: string\n            format: int64\n      responses:\n        '200':\n          description: |\n            [Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\n            with [pprof](https://github.com/google/pprof) analysis and visualization tools.\n            If debug is enabled (`?debug=1`), response body contains a human-readable profile.\n          content:\n            application/octet-stream:\n              schema:\n                description: |\n                  [Go runtime profile](https://pkg.go.dev/runtime/pprof) report in protocol buffer format.\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n            text/plain:\n              schema:\n                description: |\n                  Response body contains a report formatted in plain text.\n                  The report contains comments that translate addresses to\n                  function names and line numbers for debugging.\n                type: string\n                format: Go runtime profile\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/heap:\n    get:\n      operationId: GetDebugPprofHeap\n      tags:\n        - Debug\n      summary: Retrieve the heap runtime profile\n      description: |\n        Collects statistics and returns a [Go runtime profile](https://pkg.go.dev/runtime/pprof)\n        report of memory allocations for live objects.\n\n        To run **garbage collection** before sampling,\n        pass the `gc` query parameter with a value of `1`.\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: go tool pprof'\n          source: |\n            # Analyze the profile in interactive mode.\n\n            go tool pprof http://localhost:8086/debug/pprof/heap\n\n            # `pprof` returns the following prompt:\n            #   Entering interactive mode (type \"help\" for commands, \"o\" for options)\n            #   (pprof)\n\n            # At the prompt, get the top N memory-intensive nodes.\n\n            (pprof) top10\n\n            # pprof displays the list:\n            #   Showing nodes accounting for 142.46MB, 85.43% of 166.75MB total\n            #   Dropped 895 nodes (cum \u003c= 0.83MB)\n            #   Showing top 10 nodes out of 143\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: debug\n          description: |\n            - `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n            - `1`: Return a response body with the report formatted as human-readable text.\n              The report contains comments that translate addresses to function names and line numbers for debugging.\n\n            `debug=1` is mutually exclusive with the `seconds` query parameter.\n          schema:\n            type: integer\n            format: int64\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: seconds\n          description: |\n            Number of seconds to collect statistics.\n\n            `seconds` is mutually exclusive with `debug=1`.\n          schema:\n            type: string\n            format: int64\n        - in: query\n          name: gc\n          description: |\n            - `0`: (Default) don't force garbage collection before sampling.\n            - `1`: Force garbage collection before sampling.\n          schema:\n            type: integer\n            format: int64\n            enum:\n              - 0\n              - 1\n      responses:\n        '200':\n          description: |\n            [Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\n            with [pprof](https://github.com/google/pprof) analysis and visualization tools.\n            If debug is enabled (`?debug=1`), response body contains a human-readable profile.\n          content:\n            application/octet-stream:\n              schema:\n                description: |\n                  [Go runtime profile](https://pkg.go.dev/runtime/pprof) report in protocol buffer format.\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n            text/plain:\n              schema:\n                description: |\n                  Response body contains a report formatted in plain text.\n                  The report contains comments that translate addresses to\n                  function names and line numbers for debugging.\n                type: string\n                format: Go runtime profile\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n              examples:\n                profileDebugResponse:\n                  summary: Profile in plain text\n                  value: \"heap profile: 12431: 137356528 [149885081: 846795139976] @ heap/8192\\n23: 17711104 [46: 35422208] @ 0x4c6df65 0x4ce03ec 0x4cdf3c5 0x4c6f4db 0x4c9edbc 0x4bdefb3 0x4bf822a 0x567d158 0x567ced9 0x406c0a1\\n#\\t0x4c6df64\\tgithub.com/influxdata/influxdb/v2/tsdb/engine/tsm1.(*entry).add+0x1a4\\t\\t\\t\\t\\t/Users/me/github/influxdb/tsdb/engine/tsm1/cache.go:97\\n#\\t0x4ce03eb\\tgithub.com/influxdata/influxdb/v2/tsdb/engine/tsm1.(*partition).write+0x2ab\\t\\t\\t\\t/Users/me/github/influxdb/tsdb/engine/tsm1/ring.go:229\\n#\\t0x4cdf3c4\\tgithub.com/influxdata/influxdb/v2/tsdb/engine/tsm1.(*ring).write+0xa4\\t\\t\\t\\t\\t/Users/me/github/influxdb/tsdb/engine/tsm1/ring.go:95\\n#\\t0x4c6f4da\\tgithub.com/influxdata/influxdb/v2/tsdb/engine/tsm1.(*Cache).WriteMulti+0x31a\\t\\t\\t\\t/Users/me/github/influxdb/tsdb/engine/tsm1/cache.go:343\\n\"\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/mutex:\n    get:\n      operationId: GetDebugPprofMutex\n      tags:\n        - Debug\n      summary: Retrieve the mutual exclusion (mutex) runtime profile\n      description: |\n        Collects statistics and returns a [Go runtime profile](https://pkg.go.dev/runtime/pprof) report of\n        lock contentions.\n        The profile contains stack traces of holders of contended mutual exclusions (mutexes).\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: go tool pprof'\n          source: |\n            # Analyze the profile in interactive mode.\n\n            go tool pprof http://localhost:8086/debug/pprof/mutex\n\n            # `pprof` returns the following prompt:\n            #   Entering interactive mode (type \"help\" for commands, \"o\" for options)\n            #   (pprof)\n\n            #  At the prompt, get the top N entries.\n\n            (pprof) top10\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: debug\n          description: |\n            - `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n            - `1`: Return a response body with the report formatted as human-readable text.\n              The report contains comments that translate addresses to function names and line numbers for debugging.\n\n            `debug=1` is mutually exclusive with the `seconds` query parameter.\n          schema:\n            type: integer\n            format: int64\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: seconds\n          description: |\n            Number of seconds to collect statistics.\n\n            `seconds` is mutually exclusive with `debug=1`.\n          schema:\n            type: string\n            format: int64\n      responses:\n        '200':\n          description: |\n            [Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\n            with [pprof](https://github.com/google/pprof) analysis and visualization tools.\n            If debug is enabled (`?debug=1`), response body contains a human-readable profile.\n          content:\n            application/octet-stream:\n              schema:\n                description: |\n                  [Go runtime profile](https://pkg.go.dev/runtime/pprof) report in protocol buffer format.\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n            text/plain:\n              schema:\n                description: |\n                  Response body contains a report formatted in plain text.\n                  The report contains comments that translate addresses to\n                  function names and line numbers for debugging.\n                type: string\n                format: Go runtime profile\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/profile:\n    get:\n      operationId: GetDebugPprofProfile\n      tags:\n        - Debug\n      summary: Retrieve the CPU runtime profile\n      description: |\n        Collects statistics and returns a [Go runtime profile](https://pkg.go.dev/runtime/pprof)\n        report of program counters on the executing stack.\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: go tool pprof'\n          source: |\n            # Download the profile report.\n\n            curl http://localhost:8086/debug/pprof/profile -o cpu\n\n            # Analyze the profile in interactive mode.\n\n            go tool pprof ./cpu\n\n            # At the prompt, get the top N functions most often running\n            # or waiting during the sample period.\n\n            (pprof) top10\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: seconds\n          description: Number of seconds to collect profile data. Default is `30` seconds.\n          schema:\n            type: string\n            format: int64\n      responses:\n        '200':\n          description: |\n            [Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\n            with [pprof](https://github.com/google/pprof) analysis and visualization tools.\n          content:\n            application/octet-stream:\n              schema:\n                description: |\n                  [Go runtime profile](https://pkg.go.dev/runtime/pprof) report in protocol buffer format.\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/threadcreate:\n    get:\n      operationId: GetDebugPprofThreadCreate\n      tags:\n        - Debug\n      summary: Retrieve the threadcreate runtime profile\n      description: |\n        Collects statistics and returns a [Go runtime profile](https://pkg.go.dev/runtime/pprof)\n        report of stack traces that led to the creation of new OS threads.\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: go tool pprof'\n          source: |\n            # Analyze the profile in interactive mode.\n\n            go tool pprof http://localhost:8086/debug/pprof/threadcreate\n\n            # `pprof` returns the following prompt:\n            #   Entering interactive mode (type \"help\" for commands, \"o\" for options)\n            #   (pprof)\n\n            #  At the prompt, get the top N entries.\n\n            (pprof) top10\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: debug\n          description: |\n            - `0`: (Default) Return the report as a gzip-compressed protocol buffer.\n            - `1`: Return a response body with the report formatted as human-readable text.\n              The report contains comments that translate addresses to function names and line numbers for debugging.\n\n            `debug=1` is mutually exclusive with the `seconds` query parameter.\n          schema:\n            type: integer\n            format: int64\n            enum:\n              - 0\n              - 1\n        - in: query\n          name: seconds\n          description: |\n            Number of seconds to collect statistics.\n\n            `seconds` is mutually exclusive with `debug=1`.\n          schema:\n            type: string\n            format: int64\n      responses:\n        '200':\n          description: |\n            [Go runtime profile](https://pkg.go.dev/runtime/pprof) report compatible\n            with [pprof](https://github.com/google/pprof) analysis and visualization tools.\n            If debug is enabled (`?debug=1`), response body contains a human-readable profile.\n          content:\n            application/octet-stream:\n              schema:\n                description: |\n                  [Go runtime profile](https://pkg.go.dev/runtime/pprof) report in protocol buffer format.\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n            text/plain:\n              schema:\n                description: |\n                  Response body contains a report formatted in plain text.\n                  The report contains comments that translate addresses to\n                  function names and line numbers for debugging.\n                type: string\n                format: Go runtime profile\n                externalDocs:\n                  description: Golang pprof package\n                  url: 'https://pkg.go.dev/net/http/pprof'\n              examples:\n                profileDebugResponse:\n                  summary: Profile in plain text\n                  value: \"threadcreate profile: total 26\\n25 @\\n#\\t0x0\\n\\n1 @ 0x403dda8 0x403e54b 0x403e810 0x403a90c 0x406c0a1\\n#\\t0x403dda7\\truntime.allocm+0xc7\\t\\t\\t/Users/me/.gvm/gos/go1.17/src/runtime/proc.go:1877\\n#\\t0x403e54a\\truntime.newm+0x2a\\t\\t\\t/Users/me/.gvm/gos/go1.17/src/runtime/proc.go:2201\\n#\\t0x403e80f\\truntime.startTemplateThread+0x8f\\t/Users/me/.gvm/gos/go1.17/src/runtime/proc.go:2271\\n#\\t0x403a90b\\truntime.main+0x1cb\\t\\t\\t/Users/me/.gvm/gos/go1.17/src/runtime/proc.go:234\\n\"\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /debug/pprof/trace:\n    get:\n      operationId: GetDebugPprofTrace\n      tags:\n        - Debug\n      summary: Retrieve the runtime execution trace\n      description: |\n        Collects profile data and returns trace execution events for the current program.\n      x-codeSamples:\n        - lang: Shell\n          label: 'Shell: go tool trace'\n          source: |\n            # Download the trace file.\n\n            curl http://localhost:8086/debug/pprof/trace -o trace\n\n            # Analyze the trace.\n\n            go tool trace ./trace\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: seconds\n          description: Number of seconds to collect profile data.\n          schema:\n            type: string\n            format: int64\n      responses:\n        '200':\n          description: |\n            [Trace file](https://pkg.go.dev/runtime/trace) compatible\n            with the [Golang `trace` command](https://pkg.go.dev/cmd/trace).\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                externalDocs:\n                  description: Golang trace package\n                  url: 'https://pkg.go.dev/runtime/trace'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /health:\n    get:\n      operationId: GetHealth\n      tags:\n        - Health\n      summary: Retrieve the health of the instance\n      description: Returns the health of the instance.\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      responses:\n        '200':\n          description: |\n            The instance is healthy.\n            The response body contains the health check items and status.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - name\n                  - status\n                properties:\n                  name:\n                    type: string\n                  message:\n                    type: string\n                  checks:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1health/get/responses/200/content/application~1json/schema'\n                  status:\n                    type: string\n                    enum:\n                      - pass\n                      - fail\n                  version:\n                    type: string\n                  commit:\n                    type: string\n        '503':\n          description: The instance is unhealthy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1health/get/responses/200/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /metrics:\n    get:\n      operationId: GetMetrics\n      tags:\n        - Metrics\n      summary: Retrieve workload performance metrics\n      description: |\n        Returns metrics about the workload performance of an InfluxDB instance.\n\n        Use this endpoint to get performance, resource, and usage metrics.\n\n        #### Related guides\n\n        - For the list of metrics categories, see [InfluxDB OSS metrics]({{% INFLUXDB_DOCS_URL %}}/reference/internals/metrics/).\n        - Learn how to use InfluxDB to [scrape Prometheus metrics]({{% INFLUXDB_DOCS_URL %}}write-data/developer-tools/scrape-prometheus-metrics/).\n        - Learn how InfluxDB [parses the Prometheus exposition format]({{% INFLUXDB_DOCS_URL %}}/reference/prometheus-metrics/).\n      servers:\n        - url: ''\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      responses:\n        '200':\n          description: |\n            Success. The response body contains metrics in\n            [Prometheus plain-text exposition format](https://prometheus.io/docs/instrumenting/exposition_formats)\n            Metrics contain a name, an optional set of key-value pairs, and a value.\n\n            The following descriptors precede each metric:\n\n            - `HELP`: description of the metric\n            - `TYPE`: [Prometheus metric type](https://prometheus.io/docs/concepts/metric_types/) (`counter`, `gauge`, `histogram`, or `summary`)\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: Prometheus text-based exposition\n                externalDocs:\n                  description: Prometheus exposition formats\n                  url: 'https://prometheus.io/docs/instrumenting/exposition_formats'\n              examples:\n                expositionResponse:\n                  summary: Metrics in plain text\n                  value: |\n                    # HELP go_threads Number of OS threads created.\n                    # TYPE go_threads gauge\n                    go_threads 19\n                    # HELP http_api_request_duration_seconds Time taken to respond to HTTP request\n                    # TYPE http_api_request_duration_seconds histogram\n                    http_api_request_duration_seconds_bucket{handler=\"platform\",method=\"GET\",path=\"/:fallback_path\",response_code=\"200\",status=\"2XX\",user_agent=\"curl\",le=\"0.005\"} 4\n                    http_api_request_duration_seconds_bucket{handler=\"platform\",method=\"GET\",path=\"/:fallback_path\",response_code=\"200\",status=\"2XX\",user_agent=\"curl\",le=\"0.01\"} 4\n                    http_api_request_duration_seconds_bucket{handler=\"platform\",method=\"GET\",path=\"/:fallback_path\",response_code=\"200\",status=\"2XX\",user_agent=\"curl\",le=\"0.025\"} 5\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /ready:\n    get:\n      operationId: GetReady\n      tags:\n        - Ready\n      summary: Get the readiness of an instance at startup\n      servers:\n        - url: ''\n      parameters:\n        - in: header\n          name: Zap-Trace-Span\n          description: OpenTracing span context\n          example:\n            trace_id: '1'\n            span_id: '1'\n            baggage:\n              key: value\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The instance is ready\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - ready\n                  started:\n                    type: string\n                    format: date-time\n                    example: '2019-03-13T10:09:33.891196-04:00'\n                  up:\n                    type: string\n                    example: 14m45.911966424s\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /users:\n    get:\n      operationId: GetUsers\n      tags:\n        - Users\n      summary: List all users\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 20\n        - in: query\n          name: after\n          required: false\n          schema:\n            type: string\n          description: |\n            Resource ID to seek from. Results are not inclusive of this ID. Use `after` instead of `offset`.\n        - in: query\n          name: name\n          schema:\n            type: string\n        - in: query\n          name: id\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A list of users\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    post:\n      operationId: PostUsers\n      tags:\n        - Users\n      summary: Create a user\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: User to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '201':\n          description: User created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  '/users/{userID}':\n    get:\n      operationId: GetUsersID\n      tags:\n        - Users\n      summary: Retrieve a user\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: The user ID.\n      responses:\n        '200':\n          description: User details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    patch:\n      operationId: PatchUsersID\n      tags:\n        - Users\n      summary: Update a user\n      requestBody:\n        description: User update to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: The ID of the user to update.\n      responses:\n        '200':\n          description: User updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    delete:\n      operationId: DeleteUsersID\n      tags:\n        - Users\n      summary: Delete a user\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: The ID of the user to delete.\n      responses:\n        '204':\n          description: User deleted\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /setup:\n    get:\n      operationId: GetSetup\n      tags:\n        - Setup\n      summary: 'Check if database has default user, org, bucket'\n      description: 'Returns `true` if no default user, organization, or bucket has been created.'\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      responses:\n        '200':\n          description: allowed true or false\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  allowed:\n                    description: True means that the influxdb instance has NOT had initial setup; false means that the database has been setup.\n                    type: boolean\n    post:\n      operationId: PostSetup\n      tags:\n        - Setup\n      summary: 'Set up initial user, org and bucket'\n      description: 'Post an onboarding request to set up initial user, org and bucket.'\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Source to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnboardingRequest'\n      responses:\n        '201':\n          description: 'Created default user, bucket, org'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /authorizations:\n    get:\n      operationId: GetAuthorizations\n      tags:\n        - Authorizations\n      summary: List all authorizations\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: userID\n          schema:\n            type: string\n          description: Only show authorizations that belong to a user ID.\n        - in: query\n          name: user\n          schema:\n            type: string\n          description: Only show authorizations that belong to a user name.\n        - in: query\n          name: orgID\n          schema:\n            type: string\n          description: Only show authorizations that belong to an organization ID.\n        - in: query\n          name: org\n          schema:\n            type: string\n          description: Only show authorizations that belong to a organization name.\n      responses:\n        '200':\n          description: A list of authorizations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorizations'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    post:\n      operationId: PostAuthorizations\n      tags:\n        - Authorizations\n      summary: Create an authorization\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Authorization to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationPostRequest'\n      responses:\n        '201':\n          description: Authorization created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        '400':\n          description: Invalid request\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  '/authorizations/{authID}':\n    get:\n      operationId: GetAuthorizationsID\n      tags:\n        - Authorizations\n      summary: Retrieve an authorization\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The ID of the authorization to get.\n      responses:\n        '200':\n          description: Authorization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    patch:\n      operationId: PatchAuthorizationsID\n      tags:\n        - Authorizations\n      summary: Update an authorization to be active or inactive\n      requestBody:\n        description: Authorization to update\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Authorization/allOf/0'\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The ID of the authorization to update.\n      responses:\n        '200':\n          description: The active or inactive authorization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    delete:\n      operationId: DeleteAuthorizationsID\n      tags:\n        - Authorizations\n      summary: Delete an authorization\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The ID of the authorization to delete.\n      responses:\n        '204':\n          description: Authorization deleted\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /legacy/authorizations:\n    servers:\n      - url: /private\n    get:\n      operationId: GetLegacyAuthorizations\n      tags:\n        - Legacy Authorizations\n      summary: List all legacy authorizations\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: userID\n          schema:\n            type: string\n          description: Only show legacy authorizations that belong to a user ID.\n        - in: query\n          name: user\n          schema:\n            type: string\n          description: Only show legacy authorizations that belong to a user name.\n        - in: query\n          name: orgID\n          schema:\n            type: string\n          description: Only show legacy authorizations that belong to an organization ID.\n        - in: query\n          name: org\n          schema:\n            type: string\n          description: Only show legacy authorizations that belong to a organization name.\n        - in: query\n          name: token\n          schema:\n            type: string\n          description: Only show legacy authorizations with a specified token (auth name).\n        - in: query\n          name: authID\n          schema:\n            type: string\n          description: Only show legacy authorizations with a specified auth ID.\n      responses:\n        '200':\n          description: A list of legacy authorizations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorizations'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    post:\n      operationId: PostLegacyAuthorizations\n      tags:\n        - Legacy Authorizations\n      summary: Create a legacy authorization\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Legacy authorization to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LegacyAuthorizationPostRequest'\n      responses:\n        '201':\n          description: Legacy authorization created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        '400':\n          description: Invalid request\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  '/legacy/authorizations/{authID}':\n    servers:\n      - url: /private\n    get:\n      operationId: GetLegacyAuthorizationsID\n      tags:\n        - Legacy Authorizations\n      summary: Retrieve a legacy authorization\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The ID of the legacy authorization to get.\n      responses:\n        '200':\n          description: Legacy authorization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    patch:\n      operationId: PatchLegacyAuthorizationsID\n      tags:\n        - Legacy Authorizations\n      summary: Update a legacy authorization to be active or inactive\n      requestBody:\n        description: Legacy authorization to update\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Authorization/allOf/0'\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The ID of the legacy authorization to update.\n      responses:\n        '200':\n          description: The active or inactive legacy authorization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n    delete:\n      operationId: DeleteLegacyAuthorizationsID\n      tags:\n        - Legacy Authorizations\n      summary: Delete a legacy authorization\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The ID of the legacy authorization to delete.\n      responses:\n        '204':\n          description: Legacy authorization deleted\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  '/legacy/authorizations/{authID}/password':\n    servers:\n      - url: /private\n    post:\n      operationId: PostLegacyAuthorizationsIDPassword\n      tags:\n        - Legacy Authorizations\n      summary: Set a legacy authorization password\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The ID of the legacy authorization to update.\n      requestBody:\n        description: New password\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                password:\n                  type: string\n              required:\n                - password\n      responses:\n        '204':\n          description: Legacy authorization password set\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /variables:\n    get:\n      operationId: GetVariables\n      tags:\n        - Variables\n      summary: List all variables\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: The organization ID.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A list of variables for an organization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variables'\n        '400':\n          description: Invalid request\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1config/get/responses/401'\n    post:\n      operationId: PostVariables\n      summary: Create a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Variable to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '201':\n          description: Variable created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1config/get/responses/401'\n  '/variables/{variableID}':\n    get:\n      operationId: GetVariablesID\n      tags:\n        - Variables\n      summary: Retrieve a variable\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      responses:\n        '200':\n          description: Variable found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        '404':\n          description: Variable not found\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1config/get/responses/401'\n    delete:\n      operationId: DeleteVariablesID\n      tags:\n        - Variables\n      summary: Delete a variable\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      responses:\n        '204':\n          description: Variable deleted\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1config/get/responses/401'\n    patch:\n      operationId: PatchVariablesID\n      summary: Update a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      requestBody:\n        description: Variable update to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '200':\n          description: Variable updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1config/get/responses/401'\n    put:\n      operationId: PutVariablesID\n      summary: Replace a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      requestBody:\n        description: Variable to replace\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '200':\n          description: Variable updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1config/get/responses/401'\n  /sources:\n    post:\n      operationId: PostSources\n      tags:\n        - Sources\n      summary: Create a source\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Source to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Source'\n      responses:\n        '201':\n          description: Created Source\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    get:\n      operationId: GetSources\n      tags:\n        - Sources\n      summary: List all sources\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A list of sources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sources'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/sources/{sourceID}':\n    delete:\n      operationId: DeleteSourcesID\n      tags:\n        - Sources\n      summary: Delete a source\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: sourceID\n          schema:\n            type: string\n          required: true\n          description: The source ID.\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          description: View not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    patch:\n      operationId: PatchSourcesID\n      tags:\n        - Sources\n      summary: Update a Source\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: sourceID\n          schema:\n            type: string\n          required: true\n          description: The source ID.\n      requestBody:\n        description: Source update\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Source'\n      responses:\n        '200':\n          description: Created Source\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n        '404':\n          description: Source not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    get:\n      operationId: GetSourcesID\n      tags:\n        - Sources\n      summary: Retrieve a source\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: sourceID\n          schema:\n            type: string\n          required: true\n          description: The source ID.\n      responses:\n        '200':\n          description: A source\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Source'\n        '404':\n          description: Source not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/sources/{sourceID}/health':\n    get:\n      operationId: GetSourcesIDHealth\n      tags:\n        - Sources\n      summary: Get the health of a source\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: sourceID\n          schema:\n            type: string\n          required: true\n          description: The source ID.\n      responses:\n        '200':\n          description: The source is healthy\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1health/get/responses/200/content/application~1json/schema'\n        '503':\n          description: The source is not healthy\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1health/get/responses/200/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/sources/{sourceID}/buckets':\n    get:\n      operationId: GetSourcesIDBuckets\n      tags:\n        - Sources\n        - Buckets\n      summary: Get buckets in a source\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: sourceID\n          schema:\n            type: string\n          required: true\n          description: The source ID.\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A source\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  links:\n                    readOnly: true\n                    $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n                  buckets:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/OnboardingResponse/properties/bucket'\n        '404':\n          description: Source not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  /scrapers:\n    get:\n      operationId: GetScrapers\n      tags:\n        - Scraper Targets\n      summary: List all scraper targets\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: name\n          description: Specifies the name of the scraper target.\n          schema:\n            type: string\n        - in: query\n          name: id\n          description: 'List of scraper target IDs to return. If both `id` and `owner` are specified, only `id` is used.'\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: orgID\n          description: Specifies the organization ID of the scraper target.\n          schema:\n            type: string\n        - in: query\n          name: org\n          description: Specifies the organization name of the scraper target.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: All scraper targets\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScraperTargetResponses'\n    post:\n      operationId: PostScrapers\n      summary: Create a scraper target\n      tags:\n        - Scraper Targets\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Scraper target to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScraperTargetRequest'\n      responses:\n        '201':\n          description: Scraper target created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScraperTargetResponse'\n        default:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/scrapers/{scraperTargetID}':\n    get:\n      operationId: GetScrapersID\n      tags:\n        - Scraper Targets\n      summary: Retrieve a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          required: true\n          schema:\n            type: string\n          description: The identifier of the scraper target.\n      responses:\n        '200':\n          description: The scraper target\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScraperTargetResponse'\n        default:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    delete:\n      operationId: DeleteScrapersID\n      tags:\n        - Scraper Targets\n      summary: Delete a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          required: true\n          schema:\n            type: string\n          description: The identifier of the scraper target.\n      responses:\n        '204':\n          description: Scraper target deleted\n        default:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    patch:\n      operationId: PatchScrapersID\n      summary: Update a scraper target\n      tags:\n        - Scraper Targets\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          required: true\n          schema:\n            type: string\n          description: The identifier of the scraper target.\n      requestBody:\n        description: Scraper target update to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScraperTargetRequest'\n      responses:\n        '200':\n          description: Scraper target updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScraperTargetResponse'\n        default:\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/scrapers/{scraperTargetID}/labels':\n    get:\n      operationId: GetScrapersIDLabels\n      tags:\n        - Scraper Targets\n      summary: List all labels for a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n      responses:\n        '200':\n          description: A list of labels for a scraper target.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  labels:\n                    $ref: '#/components/schemas/Variable/properties/labels'\n                  links:\n                    $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    post:\n      operationId: PostScrapersIDLabels\n      tags:\n        - Scraper Targets\n      summary: Add a label to a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n      requestBody:\n        description: Label to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                labelID:\n                  type: string\n      responses:\n        '201':\n          description: The newly added label\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  label:\n                    type: object\n                    properties:\n                      id:\n                        readOnly: true\n                        type: string\n                      orgID:\n                        readOnly: true\n                        type: string\n                      name:\n                        type: string\n                      properties:\n                        type: object\n                        additionalProperties:\n                          type: string\n                        description: Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.\n                        example:\n                          color: ffb3b3\n                          description: this is a description\n                  links:\n                    $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/scrapers/{scraperTargetID}/labels/{labelID}':\n    delete:\n      operationId: DeleteScrapersIDLabelsID\n      tags:\n        - Scraper Targets\n      summary: Delete a label from a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n        - in: path\n          name: labelID\n          schema:\n            type: string\n          required: true\n          description: The label ID.\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          description: Scraper target not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/scrapers/{scraperTargetID}/members':\n    get:\n      operationId: GetScrapersIDMembers\n      tags:\n        - Scraper Targets\n      summary: List all users with member privileges for a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n      responses:\n        '200':\n          description: A list of scraper target members\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  links:\n                    type: object\n                    properties:\n                      self:\n                        type: string\n                        format: uri\n                  users:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1scrapers~1%7BscraperTargetID%7D~1members/post/responses/201/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    post:\n      operationId: PostScrapersIDMembers\n      tags:\n        - Scraper Targets\n      summary: Add a member to a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n      requestBody:\n        description: User to add as member\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/paths/~1scrapers~1%7BscraperTargetID%7D~1owners/post/requestBody/content/application~1json/schema'\n      responses:\n        '201':\n          description: Member added to scraper targets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/OnboardingResponse/properties/user'\n                  - type: object\n                    properties:\n                      role:\n                        type: string\n                        default: member\n                        enum:\n                          - member\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/scrapers/{scraperTargetID}/members/{userID}':\n    delete:\n      operationId: DeleteScrapersIDMembersID\n      tags:\n        - Scraper Targets\n      summary: Remove a member from a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: The ID of member to remove.\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n      responses:\n        '204':\n          description: Member removed\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/scrapers/{scraperTargetID}/owners':\n    get:\n      operationId: GetScrapersIDOwners\n      tags:\n        - Scraper Targets\n      summary: List all owners of a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n      responses:\n        '200':\n          description: A list of scraper target owners\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  links:\n                    type: object\n                    properties:\n                      self:\n                        type: string\n                        format: uri\n                  users:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1scrapers~1%7BscraperTargetID%7D~1owners/post/responses/201/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    post:\n      operationId: PostScrapersIDOwners\n      tags:\n        - Scraper Targets\n      summary: Add an owner to a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n      requestBody:\n        description: User to add as owner\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                name:\n                  type: string\n              required:\n                - id\n      responses:\n        '201':\n          description: Scraper target owner added\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/OnboardingResponse/properties/user'\n                  - type: object\n                    properties:\n                      role:\n                        type: string\n                        default: owner\n                        enum:\n                          - owner\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/scrapers/{scraperTargetID}/owners/{userID}':\n    delete:\n      operationId: DeleteScrapersIDOwnersID\n      tags:\n        - Scraper Targets\n      summary: Remove an owner from a scraper target\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: The ID of owner to remove.\n        - in: path\n          name: scraperTargetID\n          schema:\n            type: string\n          required: true\n          description: The scraper target ID.\n      responses:\n        '204':\n          description: Owner removed\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  /backup/kv:\n    get:\n      operationId: GetBackupKV\n      tags:\n        - Backup\n      summary: 'Download snapshot of metadata stored in the server''s embedded KV store. Should not be used in versions greater than 2.1.x, as it doesn''t include metadata stored in embedded SQL.'\n      deprecated: true\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      responses:\n        '200':\n          description: Snapshot of KV metadata\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /backup/metadata:\n    get:\n      operationId: GetBackupMetadata\n      tags:\n        - Backup\n      summary: Download snapshot of all metadata in the server\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: header\n          name: Accept-Encoding\n          description: Indicates the content encoding (usually a compression algorithm) that the client can understand.\n          schema:\n            type: string\n            description: 'The content coding.  Use `gzip` for compressed data or `identity` for unmodified, uncompressed data.'\n            default: identity\n            enum:\n              - gzip\n              - identity\n      responses:\n        '200':\n          description: Snapshot of metadata\n          headers:\n            Content-Encoding:\n              description: Lists any encodings (usually compression algorithms) that have been applied to the response payload.\n              schema:\n                type: string\n                description: |\n                  The content coding: `gzip` for compressed data or `identity` for unmodified, uncompressed data.\n                default: identity\n                enum:\n                  - gzip\n                  - identity\n          content:\n            multipart/mixed:\n              schema:\n                $ref: '#/components/schemas/MetadataBackup'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  '/backup/shards/{shardID}':\n    get:\n      operationId: GetBackupShardId\n      tags:\n        - Backup\n      summary: Download snapshot of all TSM data in a shard\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: header\n          name: Accept-Encoding\n          description: Indicates the content encoding (usually a compression algorithm) that the client can understand.\n          schema:\n            type: string\n            description: 'The content coding.  Use `gzip` for compressed data or `identity` for unmodified, uncompressed data.'\n            default: identity\n            enum:\n              - gzip\n              - identity\n        - in: path\n          name: shardID\n          schema:\n            type: integer\n            format: int64\n          required: true\n          description: The shard ID.\n        - in: query\n          name: since\n          description: Earliest time to include in the snapshot. RFC3339 format.\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: TSM snapshot.\n          headers:\n            Content-Encoding:\n              description: Lists any encodings (usually compression algorithms) that have been applied to the response payload.\n              schema:\n                type: string\n                description: |\n                  The content coding: `gzip` for compressed data or `identity` for unmodified, uncompressed data.\n                default: identity\n                enum:\n                  - gzip\n                  - identity\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '404':\n          description: Shard not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /restore/kv:\n    post:\n      operationId: PostRestoreKV\n      tags:\n        - Restore\n      summary: Overwrite the embedded KV store on the server with a backed-up snapshot.\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: header\n          name: Content-Encoding\n          description: |\n            The value tells InfluxDB what compression is applied to the line protocol in the request payload.\n            To make an API request with a GZIP payload, send `Content-Encoding: gzip` as a request header.\n          schema:\n            type: string\n            description: 'The content coding.  Use `gzip` for compressed data or `identity` for unmodified, uncompressed data.'\n            default: identity\n            enum:\n              - gzip\n              - identity\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/octet-stream\n            enum:\n              - application/octet-stream\n      requestBody:\n        description: Full KV snapshot.\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n              format: binary\n      responses:\n        '200':\n          description: KV store successfully overwritten.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    description: token is the root token for the instance after restore (this is overwritten during the restore)\n                    type: string\n        '204':\n          description: KV store successfully overwritten.\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /restore/sql:\n    post:\n      operationId: PostRestoreSQL\n      tags:\n        - Restore\n      summary: Overwrite the embedded SQL store on the server with a backed-up snapshot.\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: header\n          name: Content-Encoding\n          description: |\n            The value tells InfluxDB what compression is applied to the line protocol in the request payload.\n            To make an API request with a GZIP payload, send `Content-Encoding: gzip` as a request header.\n          schema:\n            type: string\n            description: Specifies that the line protocol in the body is encoded with gzip or not encoded with identity.\n            default: identity\n            enum:\n              - gzip\n              - identity\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/octet-stream\n            enum:\n              - application/octet-stream\n      requestBody:\n        description: Full SQL snapshot.\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n              format: binary\n      responses:\n        '204':\n          description: SQL store successfully overwritten.\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  '/restore/bucket/{bucketID}':\n    post:\n      operationId: PostRestoreBucketID\n      tags:\n        - Restore\n      summary: Overwrite storage metadata for a bucket with shard info from a backup.\n      deprecated: true\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: bucketID\n          schema:\n            type: string\n          required: true\n          description: The bucket ID.\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/octet-stream\n            enum:\n              - application/octet-stream\n      requestBody:\n        description: Database info serialized as protobuf.\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n              format: byte\n      responses:\n        '200':\n          description: ID mappings for shards in bucket.\n          content:\n            application/json:\n              schema:\n                type: string\n                format: byte\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /restore/bucketMetadata:\n    post:\n      operationId: PostRestoreBucketMetadata\n      tags:\n        - Restore\n      summary: Create a new bucket pre-seeded with shard info from a backup.\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Metadata manifest for a bucket.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BucketMetadataManifest'\n      responses:\n        '201':\n          description: ID mappings for shards in new bucket.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestoredBucketMappings'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  '/restore/shards/{shardID}':\n    post:\n      operationId: PostRestoreShardId\n      tags:\n        - Restore\n      summary: Restore a TSM snapshot into a shard.\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: header\n          name: Content-Encoding\n          description: |\n            The value tells InfluxDB what compression is applied to the line protocol in the request payload.\n            To make an API request with a GZIP payload, send `Content-Encoding: gzip` as a request header.\n          schema:\n            type: string\n            description: Specifies that the line protocol in the body is encoded with gzip or not encoded with identity.\n            default: identity\n            enum:\n              - gzip\n              - identity\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/octet-stream\n            enum:\n              - application/octet-stream\n        - in: path\n          name: shardID\n          schema:\n            type: string\n          required: true\n          description: The shard ID.\n      requestBody:\n        description: TSM snapshot.\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n              format: binary\n      responses:\n        '204':\n          description: TSM snapshot successfully restored.\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1config/get/responses/401'\n  /config:\n    get:\n      operationId: GetConfig\n      tags:\n        - Config\n      summary: Retrieve runtime configuration\n      description: |\n        Returns the active runtime configuration of the InfluxDB instance.\n\n        In InfluxDB v2.2+, use this endpoint to view your active runtime configuration,\n        including flags and environment variables.\n\n        #### Related guides\n\n        - [View your runtime server configuration]({{% INFLUXDB_DOCS_URL %}}/reference/config-options/#view-your-runtime-server-configuration)\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      responses:\n        '200':\n          description: |\n            Success.\n            The response body contains the active runtime configuration of the InfluxDB instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Config'\n        '401':\n          description: Non 2XX error response from server.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n  /remotes:\n    get:\n      operationId: GetRemoteConnections\n      tags:\n        - RemoteConnections\n      summary: List all remote connections\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: orgID\n          description: The organization ID.\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: name\n          schema:\n            type: string\n        - in: query\n          name: remoteURL\n          schema:\n            type: string\n            format: uri\n      responses:\n        '200':\n          description: List of remote connections\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteConnections'\n        '404':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n    post:\n      operationId: PostRemoteConnection\n      tags:\n        - RemoteConnections\n      summary: Register a new remote connection\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoteConnectionCreationRequest'\n      responses:\n        '201':\n          description: Remote connection saved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteConnection'\n        '400':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n  '/remotes/{remoteID}':\n    get:\n      operationId: GetRemoteConnectionByID\n      tags:\n        - RemoteConnections\n      summary: Retrieve a remote connection\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: remoteID\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Remote connection\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteConnection'\n        '404':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n    patch:\n      operationId: PatchRemoteConnectionByID\n      tags:\n        - RemoteConnections\n      summary: Update a remote connection\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: remoteID\n          schema:\n            type: string\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoteConnectionUpdateRequest'\n      responses:\n        '200':\n          description: Updated information saved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoteConnection'\n        '400':\n          $ref: '#/paths/~1config/get/responses/401'\n        '404':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n    delete:\n      operationId: DeleteRemoteConnectionByID\n      tags:\n        - RemoteConnections\n      summary: Delete a remote connection\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: remoteID\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: Remote connection info deleted.\n        '404':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n  /replications:\n    get:\n      operationId: GetReplications\n      tags:\n        - Replications\n      summary: List all replications\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: orgID\n          description: The organization ID.\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: name\n          schema:\n            type: string\n        - in: query\n          name: remoteID\n          schema:\n            type: string\n        - in: query\n          name: localBucketID\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of replications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Replications'\n        '404':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n    post:\n      operationId: PostReplication\n      tags:\n        - Replications\n      summary: Register a new replication\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: validate\n          description: 'If true, validate the replication, but don''t save it.'\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReplicationCreationRequest'\n      responses:\n        '201':\n          description: Replication saved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Replication'\n        '204':\n          description: 'Replication validated, but not saved'\n        '400':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n  '/replications/{replicationID}':\n    get:\n      operationId: GetReplicationByID\n      tags:\n        - Replications\n      summary: Retrieve a replication\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: replicationID\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Replication\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Replication'\n        '404':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n    patch:\n      operationId: PatchReplicationByID\n      tags:\n        - Replications\n      summary: Update a replication\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: replicationID\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: validate\n          description: 'If true, validate the updated information, but don''t save it.'\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReplicationUpdateRequest'\n      responses:\n        '200':\n          description: Updated information saved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Replication'\n        '204':\n          description: 'Updated replication validated, but not saved'\n        '400':\n          $ref: '#/paths/~1config/get/responses/401'\n        '404':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n    delete:\n      operationId: DeleteReplicationByID\n      tags:\n        - Replications\n      summary: Delete a replication\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: replicationID\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: Replication deleted.\n        '404':\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n  '/replications/{replicationID}/validate':\n    post:\n      operationId: PostValidateReplicationByID\n      tags:\n        - Replications\n      summary: Validate a replication\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: path\n          name: replicationID\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: Replication is valid\n        '400':\n          description: Replication failed validation\n          $ref: '#/paths/~1config/get/responses/401'\n        default:\n          $ref: '#/paths/~1config/get/responses/401'\n  /dashboards:\n    post:\n      operationId: PostDashboards\n      tags:\n        - Dashboards\n      summary: Create a dashboard\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Dashboard to create\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                orgID:\n                  type: string\n                  description: The ID of the organization that owns the dashboard.\n                name:\n                  type: string\n                  description: The user-facing name of the dashboard.\n                description:\n                  type: string\n                  description: The user-facing description of the dashboard.\n              required:\n                - orgID\n                - name\n      responses:\n        '201':\n          description: Added dashboard\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: object\n                    allOf:\n                      - $ref: '#/paths/~1dashboards/post/requestBody/content/application~1json/schema'\n                      - type: object\n                        properties:\n                          links:\n                            type: object\n                            example:\n                              self: /api/v2/dashboards/1\n                              cells: /api/v2/dashboards/1/cells\n                              owners: /api/v2/dashboards/1/owners\n                              members: /api/v2/dashboards/1/members\n                              labels: /api/v2/dashboards/1/labels\n                              org: /api/v2/labels/1\n                            properties:\n                              self:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              cells:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              members:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              owners:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              labels:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              org:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                          id:\n                            readOnly: true\n                            type: string\n                          meta:\n                            type: object\n                            properties:\n                              createdAt:\n                                type: string\n                                format: date-time\n                              updatedAt:\n                                type: string\n                                format: date-time\n                          cells:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                id:\n                                  type: string\n                                links:\n                                  type: object\n                                  properties:\n                                    self:\n                                      type: string\n                                    view:\n                                      type: string\n                                x:\n                                  type: integer\n                                  format: int32\n                                'y':\n                                  type: integer\n                                  format: int32\n                                w:\n                                  type: integer\n                                  format: int32\n                                h:\n                                  type: integer\n                                  format: int32\n                                viewID:\n                                  type: string\n                                  description: The reference to a view from the views API.\n                          labels:\n                            $ref: '#/components/schemas/Variable/properties/labels'\n                  - type: object\n                    allOf:\n                      - $ref: '#/paths/~1dashboards/post/requestBody/content/application~1json/schema'\n                      - type: object\n                        properties:\n                          links:\n                            type: object\n                            example:\n                              self: /api/v2/dashboards/1\n                              cells: /api/v2/dashboards/1/cells\n                              owners: /api/v2/dashboards/1/owners\n                              members: /api/v2/dashboards/1/members\n                              labels: /api/v2/dashboards/1/labels\n                              org: /api/v2/labels/1\n                            properties:\n                              self:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              cells:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              members:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              owners:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              labels:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                              org:\n                                $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                          id:\n                            readOnly: true\n                            type: string\n                          meta:\n                            type: object\n                            properties:\n                              createdAt:\n                                type: string\n                                format: date-time\n                              updatedAt:\n                                type: string\n                                format: date-time\n                          cells:\n                            type: array\n                            items:\n                              type: object\n                              allOf:\n                                - $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/dashboards/items/allOf/1/properties/cells/items'\n                                - type: object\n                                  properties:\n                                    name:\n                                      type: string\n                                    properties:\n                                      oneOf:\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - suffix\n                                            - decimalPlaces\n                                            - position\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - line-plus-single-stat\n                                            queries:\n                                              type: array\n                                              items:\n                                                type: object\n                                                properties:\n                                                  text:\n                                                    type: string\n                                                    description: The text of the Flux query.\n                                                  editMode:\n                                                    type: string\n                                                    enum:\n                                                      - builder\n                                                      - advanced\n                                                  name:\n                                                    type: string\n                                                  builderConfig:\n                                                    type: object\n                                                    properties:\n                                                      buckets:\n                                                        type: array\n                                                        items:\n                                                          type: string\n                                                      tags:\n                                                        type: array\n                                                        items:\n                                                          type: object\n                                                          properties:\n                                                            key:\n                                                              type: string\n                                                            values:\n                                                              type: array\n                                                              items:\n                                                                type: string\n                                                            aggregateFunctionType:\n                                                              type: string\n                                                              enum:\n                                                                - filter\n                                                                - group\n                                                      functions:\n                                                        type: array\n                                                        items:\n                                                          type: object\n                                                          properties:\n                                                            name:\n                                                              type: string\n                                                      aggregateWindow:\n                                                        type: object\n                                                        properties:\n                                                          period:\n                                                            type: string\n                                                          fillValues:\n                                                            type: boolean\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: object\n                                                description: Defines an encoding of data value into color space.\n                                                required:\n                                                  - id\n                                                  - type\n                                                  - hex\n                                                  - name\n                                                  - value\n                                                properties:\n                                                  id:\n                                                    description: The unique ID of the view color.\n                                                    type: string\n                                                  type:\n                                                    description: Type is how the color is used.\n                                                    type: string\n                                                    enum:\n                                                      - min\n                                                      - max\n                                                      - threshold\n                                                      - scale\n                                                      - text\n                                                      - background\n                                                  hex:\n                                                    description: The hex number of the color\n                                                    type: string\n                                                    maxLength: 7\n                                                    minLength: 7\n                                                  name:\n                                                    description: The user-facing name of the hex color.\n                                                    type: string\n                                                  value:\n                                                    description: The data value mapped to this color.\n                                                    type: number\n                                                    format: float\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              description: The viewport for a View's visualizations\n                                              type: object\n                                              required:\n                                                - x\n                                                - 'y'\n                                              properties:\n                                                x:\n                                                  type: object\n                                                  description: Axis used in a visualization.\n                                                  properties:\n                                                    bounds:\n                                                      type: array\n                                                      minItems: 0\n                                                      maxItems: 2\n                                                      description: 'The extents of the axis in the form [lower, upper]. Clients determine whether bounds are inclusive or exclusive of their limits.'\n                                                      items:\n                                                        type: string\n                                                    label:\n                                                      description: Description of the axis.\n                                                      type: string\n                                                    prefix:\n                                                      description: Label prefix for formatting axis values.\n                                                      type: string\n                                                    suffix:\n                                                      description: Label suffix for formatting axis values.\n                                                      type: string\n                                                    base:\n                                                      description: Radix for formatting axis values.\n                                                      type: string\n                                                      enum:\n                                                        - ''\n                                                        - '2'\n                                                        - '10'\n                                                    scale:\n                                                      description: 'Scale is the axis formatting scale. Supported: \"log\", \"linear\"'\n                                                      type: string\n                                                      enum:\n                                                        - log\n                                                        - linear\n                                                'y':\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                            staticLegend:\n                                              description: StaticLegend represents the options specific to the static legend\n                                              type: object\n                                              properties:\n                                                colorizeRows:\n                                                  type: boolean\n                                                heightRatio:\n                                                  type: number\n                                                  format: float\n                                                show:\n                                                  type: boolean\n                                                opacity:\n                                                  type: number\n                                                  format: float\n                                                orientationThreshold:\n                                                  type: integer\n                                                valueAxis:\n                                                  type: string\n                                                widthRatio:\n                                                  type: number\n                                                  format: float\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            shadeBelow:\n                                              type: boolean\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            prefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            decimalPlaces:\n                                              description: 'Indicates whether decimal places should be enforced, and how many digits it should show.'\n                                              type: object\n                                              properties:\n                                                isEnforced:\n                                                  description: Indicates whether decimal point setting should be enforced\n                                                  type: boolean\n                                                digits:\n                                                  description: The number of digits after decimal to display\n                                                  type: integer\n                                                  format: int32\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - geom\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - position\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - xy\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            colorMapping:\n                                              description: An object that contains information about the color mapping\n                                              type: object\n                                              additionalProperties:\n                                                type: string\n                                              example:\n                                                series_id_1: '#edf529'\n                                                series_id_2: '#edf529'\n                                                measurement_birdmigration_europe: '#663cd0'\n                                                configcat_deployments-autopromotionblocker: '#663cd0'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes'\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            shadeBelow:\n                                              type: boolean\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            geom:\n                                              type: string\n                                              enum:\n                                                - line\n                                                - step\n                                                - stacked\n                                                - bar\n                                                - monotoneX\n                                                - stepBefore\n                                                - stepAfter\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - tickPrefix\n                                            - suffix\n                                            - tickSuffix\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - single-stat\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            prefix:\n                                              type: string\n                                            tickPrefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            tickSuffix:\n                                              type: string\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - fillColumns\n                                            - xDomain\n                                            - xAxisLabel\n                                            - position\n                                            - binCount\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - histogram\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                                format: float\n                                            xAxisLabel:\n                                              type: string\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            binCount:\n                                              type: integer\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - tickPrefix\n                                            - suffix\n                                            - tickSuffix\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - gauge\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            prefix:\n                                              type: string\n                                            tickPrefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            tickSuffix:\n                                              type: string\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - tableOptions\n                                            - fieldOptions\n                                            - timeFormat\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - table\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            tableOptions:\n                                              type: object\n                                              properties:\n                                                verticalTimeAxis:\n                                                  description: verticalTimeAxis describes the orientation of the table by indicating whether the time axis will be displayed vertically\n                                                  type: boolean\n                                                sortBy:\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/5/properties/fieldOptions/items'\n                                                wrapping:\n                                                  description: Wrapping describes the text wrapping style to be used in table views\n                                                  type: string\n                                                  enum:\n                                                    - truncate\n                                                    - wrap\n                                                    - single-line\n                                                fixFirstColumn:\n                                                  description: fixFirstColumn indicates whether the first column of the table should be locked\n                                                  type: boolean\n                                            fieldOptions:\n                                              description: fieldOptions represent the fields retrieved by the query with customization options\n                                              type: array\n                                              items:\n                                                description: Describes a field that can be renamed and made visible or invisible.\n                                                type: object\n                                                properties:\n                                                  internalName:\n                                                    description: The calculated name of a field.\n                                                    readOnly: true\n                                                    type: string\n                                                  displayName:\n                                                    description: The name that a field is renamed to by the user.\n                                                    type: string\n                                                  visible:\n                                                    description: Indicates whether this field should be visible on the table.\n                                                    type: boolean\n                                            timeFormat:\n                                              description: timeFormat describes the display format for time values according to moment.js date formatting\n                                              type: string\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - showAll\n                                            - queries\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - simple-table\n                                            showAll:\n                                              type: boolean\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - note\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - markdown\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - checkID\n                                            - queries\n                                            - colors\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - check\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            checkID:\n                                              type: string\n                                            check:\n                                              allOf:\n                                                - oneOf:\n                                                    - allOf:\n                                                        - properties:\n                                                            id:\n                                                              readOnly: true\n                                                              type: string\n                                                            name:\n                                                              type: string\n                                                            orgID:\n                                                              description: The ID of the organization that owns this check.\n                                                              type: string\n                                                            taskID:\n                                                              description: The ID of the task associated with this check.\n                                                              type: string\n                                                            ownerID:\n                                                              description: The ID of creator used to create this check.\n                                                              type: string\n                                                              readOnly: true\n                                                            createdAt:\n                                                              type: string\n                                                              format: date-time\n                                                              readOnly: true\n                                                            updatedAt:\n                                                              type: string\n                                                              format: date-time\n                                                              readOnly: true\n                                                            query:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                                            status:\n                                                              $ref: '#/paths/~1tasks/post/requestBody/content/application~1json/schema/properties/status'\n                                                            description:\n                                                              description: An optional description of the check.\n                                                              type: string\n                                                            latestCompleted:\n                                                              type: string\n                                                              description: 'Timestamp (in RFC3339 date/time format](https://datatracker.ietf.org/doc/html/rfc3339)) of the latest scheduled and completed run.'\n                                                              format: date-time\n                                                              readOnly: true\n                                                            lastRunStatus:\n                                                              readOnly: true\n                                                              type: string\n                                                              enum:\n                                                                - failed\n                                                                - success\n                                                                - canceled\n                                                            lastRunError:\n                                                              readOnly: true\n                                                              type: string\n                                                            labels:\n                                                              $ref: '#/components/schemas/Variable/properties/labels'\n                                                            links:\n                                                              type: object\n                                                              readOnly: true\n                                                              example:\n                                                                self: /api/v2/checks/1\n                                                                labels: /api/v2/checks/1/labels\n                                                                members: /api/v2/checks/1/members\n                                                                owners: /api/v2/checks/1/owners\n                                                                query: /api/v2/checks/1/query\n                                                              properties:\n                                                                self:\n                                                                  description: URL for this check\n                                                                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                                                                labels:\n                                                                  description: URL to retrieve labels for this check\n                                                                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                                                                members:\n                                                                  description: URL to retrieve members for this check\n                                                                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                                                                owners:\n                                                                  description: URL to retrieve owners for this check\n                                                                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                                                                query:\n                                                                  description: URL to retrieve flux script for this check\n                                                                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                                                          required:\n                                                            - name\n                                                            - orgID\n                                                            - query\n                                                        - type: object\n                                                          required:\n                                                            - type\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - deadman\n                                                            timeSince:\n                                                              description: String duration before deadman triggers.\n                                                              type: string\n                                                            staleTime:\n                                                              description: String duration for time that a series is considered stale and should not trigger deadman.\n                                                              type: string\n                                                            reportZero:\n                                                              description: 'If only zero values reported since time, trigger an alert'\n                                                              type: boolean\n                                                            level:\n                                                              description: The state to record if check matches a criteria.\n                                                              type: string\n                                                              enum:\n                                                                - UNKNOWN\n                                                                - OK\n                                                                - INFO\n                                                                - CRIT\n                                                                - WARN\n                                                            every:\n                                                              description: Check repetition interval.\n                                                              type: string\n                                                            offset:\n                                                              description: 'Duration to delay after the schedule, before executing check.'\n                                                              type: string\n                                                            tags:\n                                                              description: List of tags to write to each status.\n                                                              type: array\n                                                              items:\n                                                                type: object\n                                                                properties:\n                                                                  key:\n                                                                    type: string\n                                                                  value:\n                                                                    type: string\n                                                            statusMessageTemplate:\n                                                              description: The template used to generate and write a status message.\n                                                              type: string\n                                                    - allOf:\n                                                        - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/0'\n                                                        - type: object\n                                                          required:\n                                                            - type\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - threshold\n                                                            thresholds:\n                                                              type: array\n                                                              items:\n                                                                oneOf:\n                                                                  - allOf:\n                                                                      - properties:\n                                                                          level:\n                                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/1/properties/level'\n                                                                          allValues:\n                                                                            description: 'If true, only alert if all values meet threshold.'\n                                                                            type: boolean\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - value\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - greater\n                                                                          value:\n                                                                            type: number\n                                                                            format: float\n                                                                  - allOf:\n                                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/1/allOf/1/properties/thresholds/items/oneOf/0/allOf/0'\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - value\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - lesser\n                                                                          value:\n                                                                            type: number\n                                                                            format: float\n                                                                  - allOf:\n                                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/1/allOf/1/properties/thresholds/items/oneOf/0/allOf/0'\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - min\n                                                                          - max\n                                                                          - within\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - range\n                                                                          min:\n                                                                            type: number\n                                                                            format: float\n                                                                          max:\n                                                                            type: number\n                                                                            format: float\n                                                                          within:\n                                                                            type: boolean\n                                                                discriminator:\n                                                                  propertyName: type\n                                                                  mapping:\n                                                                    greater: '#/components/schemas/GreaterThreshold'\n                                                                    lesser: '#/components/schemas/LesserThreshold'\n                                                                    range: '#/components/schemas/RangeThreshold'\n                                                            every:\n                                                              description: Check repetition interval.\n                                                              type: string\n                                                            offset:\n                                                              description: 'Duration to delay after the schedule, before executing check.'\n                                                              type: string\n                                                            tags:\n                                                              description: List of tags to write to each status.\n                                                              type: array\n                                                              items:\n                                                                type: object\n                                                                properties:\n                                                                  key:\n                                                                    type: string\n                                                                  value:\n                                                                    type: string\n                                                            statusMessageTemplate:\n                                                              description: The template used to generate and write a status message.\n                                                              type: string\n                                                    - allOf:\n                                                        - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/0'\n                                                        - type: object\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - custom\n                                                          required:\n                                                            - type\n                                                  discriminator:\n                                                    propertyName: type\n                                                    mapping:\n                                                      deadman: '#/components/schemas/DeadmanCheck'\n                                                      threshold: '#/components/schemas/ThresholdCheck'\n                                                      custom: '#/components/schemas/CustomCheck'\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - yColumn\n                                            - fillColumns\n                                            - symbolColumns\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - scatter\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            symbolColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - yColumn\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                            - binSize\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - heatmap\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            binSize:\n                                              type: number\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - ySeriesColumns\n                                            - fillColumns\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - mosaic\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yLabelColumnSeparator:\n                                              type: string\n                                            yLabelColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            ySeriesColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - geom\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - band\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes'\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            upperColumn:\n                                              type: string\n                                            mainColumn:\n                                              type: string\n                                            lowerColumn:\n                                              type: string\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            geom:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/1/properties/geom'\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - queries\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - center\n                                            - zoom\n                                            - allowPanAndZoom\n                                            - detectCoordinateFields\n                                            - layers\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - geo\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            center:\n                                              description: Coordinates of the center of the map\n                                              type: object\n                                              required:\n                                                - lat\n                                                - lon\n                                              properties:\n                                                lat:\n                                                  description: Latitude of the center of the map\n                                                  type: number\n                                                  format: double\n                                                lon:\n                                                  description: Longitude of the center of the map\n                                                  type: number\n                                                  format: double\n                                            zoom:\n                                              description: Zoom level used for initial display of the map\n                                              type: number\n                                              format: double\n                                              minimum: 1\n                                              maximum: 28\n                                            allowPanAndZoom:\n                                              description: 'If true, map zoom and pan controls are enabled on the dashboard view'\n                                              type: boolean\n                                              default: true\n                                            detectCoordinateFields:\n                                              description: 'If true, search results get automatically regroupped so that lon,lat and value are treated as columns'\n                                              type: boolean\n                                              default: true\n                                            useS2CellID:\n                                              description: 'If true, S2 column is used to calculate lat/lon'\n                                              type: boolean\n                                            s2Column:\n                                              description: String to define the column\n                                              type: string\n                                            latLonColumns:\n                                              description: Object type to define lat/lon columns\n                                              type: object\n                                              required:\n                                                - lat\n                                                - lon\n                                              properties:\n                                                lat:\n                                                  description: Object type for key and column definitions\n                                                  type: object\n                                                  required:\n                                                    - key\n                                                    - column\n                                                  properties:\n                                                    key:\n                                                      description: Key to determine whether the column is tag/field\n                                                      type: string\n                                                    column:\n                                                      description: Column to look up Lat/Lon\n                                                      type: string\n                                                lon:\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/latLonColumns/properties/lat'\n                                            mapStyle:\n                                              description: 'Define map type - regular, satellite etc.'\n                                              type: string\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            layers:\n                                              description: List of individual layers shown in the map\n                                              type: array\n                                              items:\n                                                type: object\n                                                oneOf:\n                                                  - allOf:\n                                                      - type: object\n                                                        required:\n                                                          - type\n                                                        properties:\n                                                          type:\n                                                            type: string\n                                                            enum:\n                                                              - heatmap\n                                                              - circleMap\n                                                              - pointMap\n                                                              - trackMap\n                                                      - type: object\n                                                        required:\n                                                          - radiusField\n                                                          - radiusDimension\n                                                          - colorField\n                                                          - colorDimension\n                                                          - colors\n                                                        properties:\n                                                          radiusField:\n                                                            type: string\n                                                            description: Radius field\n                                                          radiusDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colorField:\n                                                            type: string\n                                                            description: Circle color field\n                                                          colorDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                          radius:\n                                                            description: Maximum radius size in pixels\n                                                            type: integer\n                                                          interpolateColors:\n                                                            description: Interpolate circle color based on displayed value\n                                                            type: boolean\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - intensityField\n                                                          - intensityDimension\n                                                          - radius\n                                                          - blur\n                                                          - colors\n                                                        properties:\n                                                          intensityField:\n                                                            type: string\n                                                            description: Intensity field\n                                                          intensityDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          radius:\n                                                            description: Radius size in pixels\n                                                            type: integer\n                                                          blur:\n                                                            description: Blur for heatmap points\n                                                            type: integer\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - colorField\n                                                          - colorDimension\n                                                          - colors\n                                                        properties:\n                                                          colorField:\n                                                            type: string\n                                                            description: Marker color field\n                                                          colorDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                          isClustered:\n                                                            description: Cluster close markers together\n                                                            type: boolean\n                                                          tooltipColumns:\n                                                            description: An array for which columns to display in tooltip\n                                                            type: array\n                                                            items:\n                                                              type: string\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - trackWidth\n                                                          - speed\n                                                          - randomColors\n                                                          - trackPointVisualization\n                                                    properties:\n                                                      trackWidth:\n                                                        description: Width of the track\n                                                        type: integer\n                                                      speed:\n                                                        description: Speed of the track animation\n                                                        type: integer\n                                                      randomColors:\n                                                        description: Assign different colors to different tracks\n                                                        type: boolean\n                                                      colors:\n                                                        description: Colors define color encoding of data into a visualization\n                                                        type: array\n                                                        items:\n                                                          $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                          labels:\n                            $ref: '#/components/schemas/Variable/properties/labels'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    get:\n      operationId: GetDashboards\n      tags:\n        - Dashboards\n      summary: List all dashboards\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - $ref: '#/paths/~1users/get/parameters/1'\n        - $ref: '#/paths/~1users/get/parameters/2'\n        - in: query\n          name: descending\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - in: query\n          name: owner\n          description: A user identifier. Returns only dashboards where this user has the `owner` role.\n          schema:\n            type: string\n        - in: query\n          name: sortBy\n          description: The column to sort by.\n          schema:\n            type: string\n            enum:\n              - ID\n              - CreatedAt\n              - UpdatedAt\n        - in: query\n          name: id\n          description: 'A list of dashboard identifiers. Returns only the listed dashboards. If both `id` and `owner` are specified, only `id` is used.'\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: orgID\n          description: The identifier of the organization.\n          schema:\n            type: string\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: All dashboards\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  links:\n                    type: object\n                    properties:\n                      next:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                      self:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                      prev:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                    required:\n                      - self\n                  dashboards:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  /tasks:\n    get:\n      operationId: GetTasks\n      tags:\n        - Tasks\n      summary: List all tasks\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n        - in: query\n          name: name\n          description: Returns task with a specific name.\n          schema:\n            type: string\n        - in: query\n          name: after\n          schema:\n            type: string\n          description: Return tasks after a specified ID.\n        - in: query\n          name: user\n          schema:\n            type: string\n          description: Filter tasks to a specific user ID.\n        - in: query\n          name: org\n          schema:\n            type: string\n          description: Filter tasks to a specific organization name.\n        - in: query\n          name: orgID\n          schema:\n            type: string\n          description: Filter tasks to a specific organization ID.\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum:\n              - active\n              - inactive\n          description: Filter tasks by a status--\"inactive\" or \"active\".\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 500\n            default: 100\n          description: The number of tasks to return\n        - in: query\n          name: type\n          description: 'Type of task, unset by default.'\n          required: false\n          schema:\n            default: ''\n            type: string\n            enum:\n              - basic\n              - system\n      responses:\n        '200':\n          description: A list of tasks\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  links:\n                    readOnly: true\n                    $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n                  tasks:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    description: code is the machine-readable error code.\n                    readOnly: true\n                    type: string\n                    enum:\n                      - internal error\n                      - not found\n                      - conflict\n                      - invalid\n                      - unprocessable entity\n                      - empty value\n                      - unavailable\n                      - forbidden\n                      - too many requests\n                      - unauthorized\n                      - method not allowed\n                      - request too large\n                      - unsupported media type\n                  message:\n                    readOnly: true\n                    description: Human-readable message.\n                    type: string\n                  op:\n                    readOnly: true\n                    description: Describes the logical code operation when the error occurred. Useful for debugging.\n                    type: string\n                  err:\n                    readOnly: true\n                    description: Stack of errors that occurred during processing of the request. Useful for debugging.\n                    type: string\n                required:\n                  - code\n    post:\n      operationId: PostTasks\n      tags:\n        - Tasks\n      summary: Create a new task\n      parameters:\n        - $ref: '#/paths/~1ready/get/parameters/0'\n      requestBody:\n        description: Task to create\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                orgID:\n                  description: The ID of the organization that owns this Task.\n                  type: string\n                org:\n                  description: The name of the organization that owns this Task.\n                  type: string\n                status:\n                  type: string\n                  enum:\n                    - active\n                    - inactive\n                flux:\n                  description: The Flux script to run for this task.\n                  type: string\n                description:\n                  description: An optional description of the task.\n                  type: string\n              required:\n                - flux\n      responses:\n        '201':\n          description: Task created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    readOnly: true\n                    type: string\n                  type:\n                    description: 'The type of the task, useful for filtering a task list.'\n                    type: string\n                  orgID:\n                    description: The ID of the organization that owns the task.\n                    type: string\n                  org:\n                    description: The name of the organization that owns the task.\n                    type: string\n                  name:\n                    description: The name of the task.\n                    type: string\n                  ownerID:\n                    description: The ID of the user who owns this Task.\n                    type: string\n                  description:\n                    description: The description of the task.\n                    type: string\n                  status:\n                    $ref: '#/paths/~1tasks/post/requestBody/content/application~1json/schema/properties/status'\n                  labels:\n                    $ref: '#/components/schemas/Variable/properties/labels'\n                  authorizationID:\n                    description: The ID of the authorization used when the task communicates with the query engine.\n                    type: string\n                  flux:\n                    description: The Flux script to run for this task.\n                    type: string\n                  every:\n                    description: 'An interval ([duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals))) at which the task runs. `every` also determines when the task first runs, depending on the specified time.'\n                    type: string\n                    format: duration\n                  cron:\n                    description: '[Cron expression](https://en.wikipedia.org/wiki/Cron#Overview) that defines the schedule on which the task runs. InfluxDB bases cron runs on the system time.'\n                    type: string\n                  offset:\n                    description: 'A [duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals) to delay execution of the task after the scheduled time has elapsed. `0` removes the offset.'\n                    type: string\n                    format: duration\n                  latestCompleted:\n                    description: 'A timestamp ([RFC3339 date/time format](https://docs.influxdata.com/flux/v0.x/data-types/basic/time/#time-syntax)) of the latest scheduled and completed run.'\n                    type: string\n                    format: date-time\n                    readOnly: true\n                  lastRunStatus:\n                    readOnly: true\n                    type: string\n                    enum:\n                      - failed\n                      - success\n                      - canceled\n                  lastRunError:\n                    readOnly: true\n                    type: string\n                  createdAt:\n                    type: string\n                    format: date-time\n                    readOnly: true\n                  updatedAt:\n                    type: string\n                    format: date-time\n                    readOnly: true\n                  links:\n                    type: object\n                    readOnly: true\n                    example:\n                      self: /api/v2/tasks/1\n                      owners: /api/v2/tasks/1/owners\n                      members: /api/v2/tasks/1/members\n                      labels: /api/v2/tasks/1/labels\n                      runs: /api/v2/tasks/1/runs\n                      logs: /api/v2/tasks/1/logs\n                    properties:\n                      self:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                      owners:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                      members:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                      runs:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                      logs:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                      labels:\n                        $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                required:\n                  - id\n                  - name\n                  - orgID\n                  - flux\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\ncomponents:\n  parameters: null\n  schemas:\n    Authorization:\n      required:\n        - orgID\n        - permissions\n      allOf:\n        - properties:\n            status:\n              description: 'Status of the token. If `inactive`, requests using the token will be rejected.'\n              default: active\n              type: string\n              enum:\n                - active\n                - inactive\n            description:\n              type: string\n              description: A description of the token.\n        - type: object\n          properties:\n            createdAt:\n              type: string\n              format: date-time\n              readOnly: true\n            updatedAt:\n              type: string\n              format: date-time\n              readOnly: true\n            orgID:\n              type: string\n              description: ID of the organization that the authorization is scoped to.\n            permissions:\n              type: array\n              minItems: 1\n              description: List of permissions for an authorization.  An authorization must have at least one permission.\n              items:\n                $ref: '#/components/schemas/Permission'\n            id:\n              readOnly: true\n              type: string\n            token:\n              readOnly: true\n              type: string\n              description: Token used to authenticate API requests.\n            userID:\n              readOnly: true\n              type: string\n              description: ID of the user that created and owns the token.\n            user:\n              readOnly: true\n              type: string\n              description: Name of the user that created and owns the token.\n            org:\n              readOnly: true\n              type: string\n              description: Name of the organization that the token is scoped to.\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/authorizations/1\n                user: /api/v2/users/12\n              properties:\n                self:\n                  readOnly: true\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                user:\n                  readOnly: true\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n    AuthorizationPostRequest:\n      required:\n        - orgID\n        - permissions\n      allOf:\n        - $ref: '#/components/schemas/Authorization/allOf/0'\n        - type: object\n          properties:\n            orgID:\n              type: string\n              description: ID of org that authorization is scoped to.\n            userID:\n              type: string\n              description: ID of user that authorization is scoped to.\n            permissions:\n              type: array\n              minItems: 1\n              description: List of permissions for an auth.  An auth must have at least one Permission.\n              items:\n                $ref: '#/components/schemas/Permission'\n    LegacyAuthorizationPostRequest:\n      required:\n        - orgID\n        - permissions\n      allOf:\n        - $ref: '#/components/schemas/Authorization/allOf/0'\n        - type: object\n          properties:\n            orgID:\n              type: string\n              description: ID of org that authorization is scoped to.\n            userID:\n              type: string\n              description: ID of user that authorization is scoped to.\n            token:\n              type: string\n              description: Token (name) of the authorization\n            permissions:\n              type: array\n              minItems: 1\n              description: List of permissions for an auth.  An auth must have at least one Permission.\n              items:\n                $ref: '#/components/schemas/Permission'\n    Authorizations:\n      type: object\n      properties:\n        links:\n          readOnly: true\n          $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n        authorizations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Authorization'\n    Permission:\n      required:\n        - action\n        - resource\n      properties:\n        action:\n          type: string\n          enum:\n            - read\n            - write\n        resource:\n          $ref: '#/components/schemas/Resource'\n    Resource:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - authorizations\n            - buckets\n            - dashboards\n            - orgs\n            - sources\n            - tasks\n            - telegrafs\n            - users\n            - variables\n            - scrapers\n            - secrets\n            - labels\n            - views\n            - documents\n            - notificationRules\n            - notificationEndpoints\n            - checks\n            - dbrp\n            - notebooks\n            - annotations\n            - remotes\n            - replications\n        id:\n          type: string\n          description: If ID is set that is a permission for a specific resource. if it is not set it is a permission for all resources of that resource type.\n        name:\n          type: string\n          description: Optional name of the resource if the resource has a name field.\n        orgID:\n          type: string\n          description: If orgID is set that is a permission for all resources owned my that org. if it is not set it is a permission for all resources of that resource type.\n        org:\n          type: string\n          description: Optional name of the organization of the organization with orgID.\n    User:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        oauthID:\n          type: string\n        name:\n          type: string\n        status:\n          description: If inactive the user is inactive.\n          default: active\n          type: string\n          enum:\n            - active\n            - inactive\n      required:\n        - name\n    Users:\n      type: object\n      properties:\n        links:\n          type: object\n          properties:\n            self:\n              type: string\n              format: uri\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/OnboardingResponse/properties/user'\n    OnboardingRequest:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        org:\n          type: string\n        bucket:\n          type: string\n        retentionPeriodSeconds:\n          type: integer\n          format: int64\n        retentionPeriodHrs:\n          type: integer\n          deprecated: true\n          description: |\n            Retention period *in nanoseconds* for the new bucket. This key's name has been misleading since OSS 2.0 GA, please transition to use `retentionPeriodSeconds`\n        token:\n          type: string\n          description: |\n            Authentication token to set on the initial user. If not specified, the server will generate a token.\n      required:\n        - username\n        - org\n        - bucket\n    OnboardingResponse:\n      type: object\n      properties:\n        user:\n          properties:\n            id:\n              readOnly: true\n              type: string\n            oauthID:\n              type: string\n            name:\n              type: string\n            status:\n              description: If inactive the user is inactive.\n              default: active\n              type: string\n              enum:\n                - active\n                - inactive\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/users/1\n              properties:\n                self:\n                  type: string\n                  format: uri\n          required:\n            - name\n        org:\n          properties:\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/orgs/1\n                members: /api/v2/orgs/1/members\n                owners: /api/v2/orgs/1/owners\n                labels: /api/v2/orgs/1/labels\n                secrets: /api/v2/orgs/1/secrets\n                buckets: /api/v2/buckets?org=myorg\n                tasks: /api/v2/tasks?org=myorg\n                dashboards: /api/v2/dashboards?org=myorg\n              properties:\n                self:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                members:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                owners:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                labels:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                secrets:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                buckets:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                tasks:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                dashboards:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n            id:\n              readOnly: true\n              type: string\n            name:\n              type: string\n            description:\n              type: string\n            createdAt:\n              type: string\n              format: date-time\n              readOnly: true\n            updatedAt:\n              type: string\n              format: date-time\n              readOnly: true\n            status:\n              description: If inactive the organization is inactive.\n              default: active\n              type: string\n              enum:\n                - active\n                - inactive\n          required:\n            - name\n        bucket:\n          properties:\n            links:\n              type: object\n              readOnly: true\n              example:\n                labels: /api/v2/buckets/1/labels\n                members: /api/v2/buckets/1/members\n                org: /api/v2/orgs/2\n                owners: /api/v2/buckets/1/owners\n                self: /api/v2/buckets/1\n                write: /api/v2/write?org=2\u0026bucket=1\n              properties:\n                labels:\n                  description: URL to retrieve labels for this bucket.\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                members:\n                  description: URL to retrieve members that can read this bucket.\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                org:\n                  description: URL to retrieve parent organization for this bucket.\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                owners:\n                  description: URL to retrieve owners that can read and write to this bucket.\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                self:\n                  description: URL for this bucket.\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                write:\n                  description: URL to write line protocol to this bucket.\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n            id:\n              readOnly: true\n              type: string\n            type:\n              readOnly: true\n              type: string\n              default: user\n              enum:\n                - user\n                - system\n            name:\n              type: string\n            description:\n              type: string\n            orgID:\n              type: string\n            rp:\n              type: string\n            schemaType:\n              default: implicit\n              type: string\n              enum:\n                - implicit\n                - explicit\n            createdAt:\n              type: string\n              format: date-time\n              readOnly: true\n            updatedAt:\n              type: string\n              format: date-time\n              readOnly: true\n            retentionRules:\n              type: array\n              description: Rules to expire or retain data.  No rules means data never expires.\n              items:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    default: expire\n                    enum:\n                      - expire\n                  everySeconds:\n                    type: integer\n                    format: int64\n                    description: Duration in seconds for how long data will be kept in the database. 0 means infinite.\n                    example: 86400\n                    minimum: 0\n                  shardGroupDurationSeconds:\n                    type: integer\n                    format: int64\n                    description: Shard duration measured in seconds.\n                required:\n                  - type\n                  - everySeconds\n            labels:\n              $ref: '#/components/schemas/Variable/properties/labels'\n          required:\n            - name\n            - retentionRules\n        auth:\n          $ref: '#/components/schemas/Authorization'\n    Variable:\n      type: object\n      required:\n        - name\n        - orgID\n        - arguments\n      properties:\n        links:\n          type: object\n          readOnly: true\n          properties:\n            self:\n              type: string\n              format: uri\n            org:\n              type: string\n              format: uri\n            labels:\n              type: string\n              format: uri\n        id:\n          readOnly: true\n          type: string\n        orgID:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        selected:\n          type: array\n          items:\n            type: string\n        labels:\n          type: array\n          items:\n            $ref: '#/paths/~1scrapers~1%7BscraperTargetID%7D~1labels/post/responses/201/content/application~1json/schema/properties/label'\n        arguments:\n          type: object\n          oneOf:\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - query\n                values:\n                  type: object\n                  properties:\n                    query:\n                      type: string\n                    language:\n                      type: string\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - constant\n                values:\n                  type: array\n                  items:\n                    type: string\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - map\n                values:\n                  type: object\n                  additionalProperties:\n                    type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n    Variables:\n      type: object\n      example:\n        variables:\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - hello\n            arguments:\n              type: constant\n              values:\n                - howdy\n                - hello\n                - hi\n                - yo\n                - oy\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - c\n            arguments:\n              type: map\n              values:\n                a: fdjaklfdjkldsfjlkjdsa\n                b: dfaksjfkljekfajekdljfas\n                c: fdjksajfdkfeawfeea\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - host\n            arguments:\n              type: query\n              query: 'from(bucket: \"foo\") |\u003e showMeasurements()'\n              language: flux\n      properties:\n        variables:\n          type: array\n          items:\n            $ref: '#/components/schemas/Variable'\n    Source:\n      type: object\n      properties:\n        links:\n          type: object\n          properties:\n            self:\n              type: string\n            query:\n              type: string\n            health:\n              type: string\n            buckets:\n              type: string\n        id:\n          type: string\n        orgID:\n          type: string\n        default:\n          type: boolean\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - v1\n            - v2\n            - self\n        url:\n          type: string\n          format: uri\n        insecureSkipVerify:\n          type: boolean\n        telegraf:\n          type: string\n        token:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n        sharedSecret:\n          type: string\n        metaUrl:\n          type: string\n          format: uri\n        defaultRP:\n          type: string\n        languages:\n          type: array\n          readOnly: true\n          items:\n            type: string\n            enum:\n              - flux\n              - influxql\n    Sources:\n      type: object\n      properties:\n        links:\n          type: object\n          properties:\n            self:\n              type: string\n              format: uri\n        sources:\n          type: array\n          items:\n            $ref: '#/components/schemas/Source'\n    ScraperTargetRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the scraper target.\n        type:\n          type: string\n          description: The type of the metrics to be parsed.\n          enum:\n            - prometheus\n        url:\n          type: string\n          description: The URL of the metrics endpoint.\n          example: 'http://localhost:9090/metrics'\n        orgID:\n          type: string\n          description: The organization ID.\n        bucketID:\n          type: string\n          description: The ID of the bucket to write to.\n        allowInsecure:\n          type: boolean\n          description: Skip TLS verification on endpoint.\n          default: false\n    ScraperTargetResponse:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/ScraperTargetRequest'\n        - type: object\n          properties:\n            id:\n              type: string\n              readOnly: true\n            org:\n              type: string\n              description: The name of the organization.\n            bucket:\n              type: string\n              description: The bucket name.\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/scrapers/1\n                owners: /api/v2/scrapers/1/owners\n                members: /api/v2/scrapers/1/members\n                bucket: /api/v2/buckets/1\n                organization: /api/v2/orgs/1\n              properties:\n                self:\n                  type: string\n                  format: uri\n                  readOnly: true\n                  description: URI of resource.\n                members:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                owners:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                bucket:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n                organization:\n                  $ref: '#/components/schemas/ScraperTargetResponse/allOf/1/properties/links/properties/self'\n    ScraperTargetResponses:\n      type: object\n      properties:\n        configurations:\n          type: array\n          items:\n            $ref: '#/components/schemas/ScraperTargetResponse'\n    MetadataBackup:\n      type: object\n      properties:\n        kv:\n          type: string\n          format: binary\n        sql:\n          type: string\n          format: binary\n        buckets:\n          $ref: '#/components/schemas/BucketMetadataManifests'\n      required:\n        - kv\n        - sql\n        - buckets\n    BucketMetadataManifests:\n      type: array\n      items:\n        $ref: '#/components/schemas/BucketMetadataManifest'\n    BucketMetadataManifest:\n      type: object\n      properties:\n        organizationID:\n          type: string\n        organizationName:\n          type: string\n        bucketID:\n          type: string\n        bucketName:\n          type: string\n        description:\n          type: string\n        defaultRetentionPolicy:\n          type: string\n        retentionPolicies:\n          $ref: '#/components/schemas/RetentionPolicyManifests'\n      required:\n        - organizationID\n        - organizationName\n        - bucketID\n        - bucketName\n        - defaultRetentionPolicy\n        - retentionPolicies\n    RetentionPolicyManifests:\n      type: array\n      items:\n        $ref: '#/components/schemas/RetentionPolicyManifest'\n    RetentionPolicyManifest:\n      type: object\n      properties:\n        name:\n          type: string\n        replicaN:\n          type: integer\n        duration:\n          type: integer\n          format: int64\n        shardGroupDuration:\n          type: integer\n          format: int64\n        shardGroups:\n          $ref: '#/components/schemas/ShardGroupManifests'\n        subscriptions:\n          $ref: '#/components/schemas/SubscriptionManifests'\n      required:\n        - name\n        - replicaN\n        - duration\n        - shardGroupDuration\n        - shardGroups\n        - subscriptions\n    ShardGroupManifests:\n      type: array\n      items:\n        $ref: '#/components/schemas/ShardGroupManifest'\n    ShardGroupManifest:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        deletedAt:\n          type: string\n          format: date-time\n        truncatedAt:\n          type: string\n          format: date-time\n        shards:\n          $ref: '#/components/schemas/ShardManifests'\n      required:\n        - id\n        - startTime\n        - endTime\n        - shards\n    ShardManifests:\n      type: array\n      items:\n        $ref: '#/components/schemas/ShardManifest'\n    ShardManifest:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        shardOwners:\n          $ref: '#/components/schemas/ShardOwners'\n      required:\n        - id\n        - shardOwners\n    ShardOwners:\n      type: array\n      items:\n        $ref: '#/components/schemas/ShardOwner'\n    ShardOwner:\n      type: object\n      properties:\n        nodeID:\n          type: integer\n          format: int64\n          description: ID of the node that owns a shard.\n      required:\n        - nodeID\n    SubscriptionManifests:\n      type: array\n      items:\n        $ref: '#/components/schemas/SubscriptionManifest'\n    SubscriptionManifest:\n      type: object\n      properties:\n        name:\n          type: string\n        mode:\n          type: string\n        destinations:\n          type: array\n          items:\n            type: string\n      required:\n        - name\n        - mode\n        - destinations\n    RestoredBucketMappings:\n      type: object\n      properties:\n        id:\n          description: New ID of the restored bucket\n          type: string\n        name:\n          type: string\n        shardMappings:\n          $ref: '#/components/schemas/BucketShardMappings'\n      required:\n        - id\n        - name\n        - shardMappings\n    BucketShardMappings:\n      type: array\n      items:\n        $ref: '#/components/schemas/BucketShardMapping'\n    BucketShardMapping:\n      type: object\n      properties:\n        oldId:\n          type: integer\n          format: int64\n        newId:\n          type: integer\n          format: int64\n      required:\n        - oldId\n        - newId\n    Config:\n      type: object\n      properties:\n        config:\n          type: object\n    RemoteConnection:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        orgID:\n          type: string\n        description:\n          type: string\n        remoteURL:\n          type: string\n          format: uri\n        remoteOrgID:\n          type: string\n        allowInsecureTLS:\n          type: boolean\n          default: false\n      required:\n        - id\n        - name\n        - orgID\n        - remoteURL\n        - remoteOrgID\n        - allowInsecureTLS\n    RemoteConnections:\n      type: object\n      properties:\n        remotes:\n          type: array\n          items:\n            $ref: '#/components/schemas/RemoteConnection'\n    RemoteConnectionCreationRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        orgID:\n          type: string\n        remoteURL:\n          type: string\n          format: uri\n        remoteAPIToken:\n          type: string\n        remoteOrgID:\n          type: string\n        allowInsecureTLS:\n          type: boolean\n          default: false\n      required:\n        - name\n        - orgID\n        - remoteURL\n        - remoteAPIToken\n        - remoteOrgID\n        - allowInsecureTLS\n    RemoteConnectionUpdateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        remoteURL:\n          type: string\n          format: uri\n        remoteAPIToken:\n          type: string\n        remoteOrgID:\n          type: string\n        allowInsecureTLS:\n          type: boolean\n          default: false\n    Replication:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        orgID:\n          type: string\n        remoteID:\n          type: string\n        localBucketID:\n          type: string\n        remoteBucketID:\n          type: string\n        maxQueueSizeBytes:\n          type: integer\n          format: int64\n        currentQueueSizeBytes:\n          type: integer\n          format: int64\n        latestResponseCode:\n          type: integer\n        latestErrorMessage:\n          type: string\n        dropNonRetryableData:\n          type: boolean\n      required:\n        - id\n        - name\n        - remoteID\n        - orgID\n        - localBucketID\n        - remoteBucketID\n        - maxQueueSizeBytes\n        - currentQueueSizeBytes\n    Replications:\n      type: object\n      properties:\n        replications:\n          type: array\n          items:\n            $ref: '#/components/schemas/Replication'\n    ReplicationCreationRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        orgID:\n          type: string\n        remoteID:\n          type: string\n        localBucketID:\n          type: string\n        remoteBucketID:\n          type: string\n        maxQueueSizeBytes:\n          type: integer\n          format: int64\n          minimum: 33554430\n          default: 67108860\n        dropNonRetryableData:\n          type: boolean\n          default: false\n        maxAgeSeconds:\n          type: integer\n          format: int64\n          minimum: 0\n          default: 604800\n      required:\n        - name\n        - orgID\n        - remoteID\n        - localBucketID\n        - remoteBucketID\n        - maxQueueSizeBytes\n        - maxAgeSeconds\n    ReplicationUpdateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        remoteID:\n          type: string\n        remoteBucketID:\n          type: string\n        maxQueueSizeBytes:\n          type: integer\n          format: int64\n          minimum: 33554430\n        dropNonRetryableData:\n          type: boolean\n        maxAgeSeconds:\n          type: integer\n          format: int64\n          minimum: 0\n  responses: null\n  securitySchemes:\n    TokenAuthentication:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: |\n        Use the [Token authentication](#section/Authentication/TokenAuthentication)\n        scheme to authenticate to the InfluxDB API.\n\n\n        In your API requests, send an `Authorization` header.\n        For the header value, provide the word `Token` followed by a space and an InfluxDB API token.\n        The word `Token` is case-sensitive.\n\n\n        ### Syntax\n\n        `Authorization: Token YOUR_INFLUX_TOKEN`\n\n\n        For more information and examples, see the following:\n          - [`/authorizations`](#tag/Authorizations) endpoint.\n          - [Authorize API requests]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/#authentication).\n          - [Manage API tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/).\n    BasicAuthentication:\n      type: http\n      scheme: basic\n      description: |\n        Use the HTTP Basic authentication scheme for InfluxDB `/api/v2` API operations that support it.\n\n        Username and password schemes require the following credentials:\n          - **username**\n          - **password**\nsecurity:\n  - TokenAuthentication: []\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /backup/shards/{shardID}: get: operation \"GetBackupShardId\": parameters: parse parameter \"\": resolve \"#/paths/~1ready/get/parameters/0\" reference: invalid parameter reference"
}