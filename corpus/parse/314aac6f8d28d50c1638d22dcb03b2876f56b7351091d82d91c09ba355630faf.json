{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hasura/graphql-engine"
		},
		"file": {
			"name": "agent.openapi.json",
			"size": 0,
			"path": "dc-agents/reference/src/types/agent.openapi.json",
			"byteSize": 26246,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"\",\n    \"version\": \"\"\n  },\n  \"paths\": {\n    \"/capabilities\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CapabilitiesResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          }\n        }\n      }\n    },\n    \"/schema\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": true,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SchemaResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"description\": \"Invalid `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          }\n        }\n      }\n    },\n    \"/query\": {\n      \"post\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": true,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json;charset=utf-8\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/QueryRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json;charset=utf-8\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/QueryResponse\"\n                }\n              }\n            },\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"description\": \"Invalid `body` or `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          }\n        }\n      }\n    },\n    \"/health\": {\n      \"get\": {\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-SourceName\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Hasura-DataConnector-Config\",\n            \"required\": false,\n            \"schema\": {\n              \"additionalProperties\": true,\n              \"nullable\": false,\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"\"\n          },\n          \"400\": {\n            \"description\": \"Invalid `X-Hasura-DataConnector-Config` or `X-Hasura-DataConnector-SourceName`\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"CapabilitiesResponse\": {\n        \"nullable\": false,\n        \"properties\": {\n          \"capabilities\": {\n            \"$ref\": \"#/components/schemas/Capabilities\"\n          },\n          \"configSchemas\": {\n            \"$ref\": \"#/components/schemas/ConfigSchemaResponse\"\n          }\n        },\n        \"required\": [\n          \"capabilities\",\n          \"configSchemas\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Capabilities\": {\n        \"properties\": {\n          \"filtering\": {\n            \"$ref\": \"#/components/schemas/FilteringCapabilities\"\n          },\n          \"mutations\": {\n            \"$ref\": \"#/components/schemas/MutationCapabilities\"\n          },\n          \"queries\": {\n            \"$ref\": \"#/components/schemas/QueryCapabilities\"\n          },\n          \"relationships\": {\n            \"$ref\": \"#/components/schemas/RelationshipCapabilities\"\n          },\n          \"subscriptions\": {\n            \"$ref\": \"#/components/schemas/SubscriptionCapabilities\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"QueryCapabilities\": {\n        \"properties\": {\n          \"supportsPrimaryKeys\": {\n            \"description\": \"Does the agent support querying a table by primary key?\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"supportsPrimaryKeys\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MutationCapabilities\": {},\n      \"SubscriptionCapabilities\": {},\n      \"BooleanOperators\": {},\n      \"ComparisonOperators\": {},\n      \"FilteringCapabilities\": {\n        \"properties\": {\n          \"booleanOperators\": {\n            \"$ref\": \"#/components/schemas/BooleanOperators\"\n          },\n          \"comparisonOperators\": {\n            \"$ref\": \"#/components/schemas/ComparisonOperators\"\n          }\n        },\n        \"required\": [\n          \"booleanOperators\",\n          \"comparisonOperators\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RelationshipCapabilities\": {},\n      \"ConfigSchemaResponse\": {\n        \"nullable\": false,\n        \"properties\": {\n          \"configSchema\": {\n            \"$ref\": \"#/components/schemas/OpenApiSchema\"\n          },\n          \"otherSchemas\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/OpenApiSchema\"\n            },\n            \"nullable\": false,\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"configSchema\",\n          \"otherSchemas\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OpenApiSchema\": {\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"additionalProperties\": {\n            \"additionalProperties\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                },\n                {\n                  \"type\": \"boolean\"\n                }\n              ]\n            },\n            \"default\": true\n          },\n          \"allOf\": {\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"anyOf\": {\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"default\": {},\n          \"deprecated\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"discriminator\": {\n            \"$ref\": \"#/components/schemas/OpenApiDiscriminator\"\n          },\n          \"enum\": {\n            \"items\": {},\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"uniqueItems\": false\n          },\n          \"example\": {},\n          \"exclusiveMaximum\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"exclusiveMinimum\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"externalDocs\": {\n            \"$ref\": \"#/components/schemas/OpenApiExternalDocumentation\"\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/OpenApiSchema\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/OpenApiReference\"\n              }\n            ]\n          },\n          \"maxItems\": {\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"maxLength\": {\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"maxProperties\": {\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"maximum\": {\n            \"type\": \"number\"\n          },\n          \"minItems\": {\n            \"default\": 0,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"minLength\": {\n            \"default\": 0,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"minProperties\": {\n            \"default\": 0,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"minimum\": {\n            \"type\": \"number\"\n          },\n          \"multipleOf\": {\n            \"exclusiveMinimum\": true,\n            \"minimum\": 0,\n            \"type\": \"number\"\n          },\n          \"not\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/OpenApiSchema\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/OpenApiReference\"\n              }\n            ]\n          },\n          \"nullable\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"oneOf\": {\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"pattern\": {\n            \"format\": \"regex\",\n            \"type\": \"string\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiSchema\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/OpenApiReference\"\n                }\n              ]\n            },\n            \"type\": \"object\"\n          },\n          \"readOnly\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"required\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"uniqueItems\": true\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"array\",\n              \"boolean\",\n              \"integer\",\n              \"number\",\n              \"object\",\n              \"string\"\n            ],\n            \"type\": \"string\"\n          },\n          \"uniqueItems\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"writeOnly\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"xml\": {\n            \"$ref\": \"#/components/schemas/OpenApiXml\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"OpenApiReference\": {\n        \"properties\": {\n          \"$ref\": {\n            \"format\": \"uri-reference\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"$ref\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OpenApiDiscriminator\": {\n        \"properties\": {\n          \"mapping\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"propertyName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"propertyName\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OpenApiExternalDocumentation\": {\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"format\": \"uri-reference\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"url\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OpenApiXml\": {\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"attribute\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"format\": \"uri\",\n            \"type\": \"string\"\n          },\n          \"prefix\": {\n            \"type\": \"string\"\n          },\n          \"wrapped\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SchemaResponse\": {\n        \"properties\": {\n          \"tables\": {\n            \"description\": \"Available tables\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableInfo\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"tables\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ScalarType\": {\n        \"enum\": [\n          \"string\",\n          \"number\",\n          \"bool\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ColumnInfo\": {\n        \"properties\": {\n          \"description\": {\n            \"description\": \"Column description\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"Column name\",\n            \"type\": \"string\"\n          },\n          \"nullable\": {\n            \"description\": \"Is column nullable\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/ScalarType\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"type\",\n          \"nullable\"\n        ],\n        \"type\": \"object\"\n      },\n      \"TableInfo\": {\n        \"properties\": {\n          \"columns\": {\n            \"description\": \"The columns of the table\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ColumnInfo\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"description\": \"Description of the table\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"The name of the table\",\n            \"type\": \"string\"\n          },\n          \"primary_key\": {\n            \"description\": \"The primary key of the table\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"columns\"\n        ],\n        \"type\": \"object\"\n      },\n      \"QueryResponse\": {\n        \"items\": {\n          \"additionalProperties\": {\n            \"additionalProperties\": true\n          },\n          \"type\": \"object\"\n        },\n        \"type\": \"array\"\n      },\n      \"QueryRequest\": {\n        \"properties\": {\n          \"query\": {\n            \"$ref\": \"#/components/schemas/Query\"\n          },\n          \"table\": {\n            \"description\": \"The name of the table to query\",\n            \"type\": \"string\"\n          },\n          \"table_relationships\": {\n            \"description\": \"The relationships between tables involved in the entire query request\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TableRelationships\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"table\",\n          \"table_relationships\",\n          \"query\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RelationshipType\": {\n        \"enum\": [\n          \"object\",\n          \"array\"\n        ],\n        \"type\": \"string\"\n      },\n      \"Relationship\": {\n        \"properties\": {\n          \"column_mapping\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"A mapping between columns on the source table to columns on the target table\",\n            \"type\": \"object\"\n          },\n          \"relationship_type\": {\n            \"$ref\": \"#/components/schemas/RelationshipType\"\n          },\n          \"target_table\": {\n            \"description\": \"The name of the target table in the relationship\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"target_table\",\n          \"relationship_type\",\n          \"column_mapping\"\n        ],\n        \"type\": \"object\"\n      },\n      \"TableRelationships\": {\n        \"properties\": {\n          \"relationships\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Relationship\"\n            },\n            \"description\": \"A map of relationships from the source table to target tables. The key of the map is the relationship name\",\n            \"type\": \"object\"\n          },\n          \"source_table\": {\n            \"description\": \"The name of the source table in the relationship\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"source_table\",\n          \"relationships\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Query\": {\n        \"properties\": {\n          \"fields\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Field\"\n            },\n            \"description\": \"Fields of the query\",\n            \"type\": \"object\"\n          },\n          \"limit\": {\n            \"description\": \"Optionally limit to N results\",\n            \"maximum\": 9223372036854776000,\n            \"minimum\": -9223372036854776000,\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"offset\": {\n            \"description\": \"Optionally offset from the Nth result\",\n            \"maximum\": 9223372036854776000,\n            \"minimum\": -9223372036854776000,\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"order_by\": {\n            \"description\": \"Optionally order the results by the value of one or more fields\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrderBy\"\n            },\n            \"nullable\": true,\n            \"type\": \"array\"\n          },\n          \"where\": {\n            \"$ref\": \"#/components/schemas/Expression\"\n          }\n        },\n        \"required\": [\n          \"fields\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ColumnField\": {\n        \"properties\": {\n          \"column\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"column\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"column\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RelationshipField\": {\n        \"properties\": {\n          \"query\": {\n            \"$ref\": \"#/components/schemas/Query\"\n          },\n          \"relationship\": {\n            \"description\": \"The name of the relationship to follow for the subquery\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"relationship\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"relationship\",\n          \"query\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Field\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ColumnField\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/RelationshipField\"\n          }\n        ]\n      },\n      \"Expression\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/AndExpression\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/OrExpression\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/NotExpression\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ApplyBinaryComparisonOperator\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ApplyBinaryArrayComparisonExpression\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ApplyUnaryComparisonOperator\"\n          }\n        ]\n      },\n      \"BinaryComparisonOperator\": {\n        \"enum\": [\n          \"less_than\",\n          \"less_than_or_equal\",\n          \"greater_than\",\n          \"greater_than_or_equal\",\n          \"equal\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ComparisonColumn\": {\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The name of the column\",\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"description\": \"The relationship path from the current query table to the table that contains the specified column. Empty array means the current query table.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"path\",\n          \"name\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ScalarValue\": {\n        \"oneOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"number\"\n          },\n          {\n            \"type\": \"boolean\"\n          },\n          {\n            \"type\": \"null\"\n          }\n        ]\n      },\n      \"AnotherColumnComparison\": {\n        \"properties\": {\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ComparisonColumn\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"column\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"column\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ScalarValueComparison\": {\n        \"properties\": {\n          \"type\": {\n            \"enum\": [\n              \"scalar\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"$ref\": \"#/components/schemas/ScalarValue\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"value\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ComparisonValue\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/AnotherColumnComparison\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ScalarValueComparison\"\n          }\n        ]\n      },\n      \"BinaryArrayComparisonOperator\": {\n        \"enum\": [\n          \"in\"\n        ],\n        \"type\": \"string\"\n      },\n      \"UnaryComparisonOperator\": {\n        \"enum\": [\n          \"is_null\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ApplyBinaryArrayComparisonExpression\": {\n        \"properties\": {\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ComparisonColumn\"\n          },\n          \"operator\": {\n            \"$ref\": \"#/components/schemas/BinaryArrayComparisonOperator\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"binary_arr_op\"\n            ],\n            \"type\": \"string\"\n          },\n          \"values\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ScalarValue\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"operator\",\n          \"column\",\n          \"values\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ApplyUnaryComparisonOperator\": {\n        \"properties\": {\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ComparisonColumn\"\n          },\n          \"operator\": {\n            \"$ref\": \"#/components/schemas/UnaryComparisonOperator\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"unary_op\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"operator\",\n          \"column\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ApplyBinaryComparisonOperator\": {\n        \"properties\": {\n          \"column\": {\n            \"$ref\": \"#/components/schemas/ComparisonColumn\"\n          },\n          \"operator\": {\n            \"$ref\": \"#/components/schemas/BinaryComparisonOperator\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"binary_op\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"$ref\": \"#/components/schemas/ComparisonValue\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"operator\",\n          \"column\",\n          \"value\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NotExpression\": {\n        \"properties\": {\n          \"expression\": {\n            \"$ref\": \"#/components/schemas/Expression\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"not\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"expression\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrExpression\": {\n        \"properties\": {\n          \"expressions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Expression\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"or\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"expressions\"\n        ],\n        \"type\": \"object\"\n      },\n      \"AndExpression\": {\n        \"properties\": {\n          \"expressions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Expression\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"and\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"type\",\n          \"expressions\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrderType\": {\n        \"enum\": [\n          \"asc\",\n          \"desc\"\n        ],\n        \"type\": \"string\"\n      },\n      \"OrderBy\": {\n        \"properties\": {\n          \"column\": {\n            \"description\": \"Column to order by\",\n            \"type\": \"string\"\n          },\n          \"ordering\": {\n            \"$ref\": \"#/components/schemas/OrderType\"\n          }\n        },\n        \"required\": [\n          \"column\",\n          \"ordering\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/hasura/graphql-engine@6b03f8b0af5b7ac25d142ae783b1883512e87044/-/blob/dc-agents/reference/src/types/agent.openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/hasura/graphql-engine/blob/6b03f8b0af5b7ac25d142ae783b1883512e87044/dc-agents/reference/src/types/agent.openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 144:17: schemas: \"OpenApiSchema\": parse schema: property \"additionalProperties\": at 237:35: parse schema: unexpected schema type: \"bool\""
}