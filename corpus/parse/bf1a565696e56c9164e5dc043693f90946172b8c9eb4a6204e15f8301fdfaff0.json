{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/webdev-20/shorti-url-shortener"
		},
		"file": {
			"name": "docs.yaml",
			"size": 0,
			"path": "server/src/docs.yaml",
			"byteSize": 12304,
			"content": "openapi: 3.0.0\ninfo:\n  title: The Lassie Lounge - Shorti API\n  version: 1.0.0\nservers:\n  - url: http://localhost:4002\ntags:\n  - name: Auth\n    description: Authentication / Authorization\n  - name: Links\n    description: Add, edit, delete links\n\npaths:\n  /api/:\n    get:\n      description: API Root\n      responses:\n        200:\n          description: Welcome Message\n          content:\n            application/json:\n              schema:\n                required:\n                  - message\n                properties:\n                  message:\n                    type: string\n \n  /api/users/signup/:\n    post:\n      tags:\n        - Auth\n      description: Register a new user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n              required:\n                - email\n                - password\n      responses:\n        200:\n          description: Signup successful\n          content:\n              application/json:\n                schema:\n                  required:\n                    - success\n                    - message\n                  properties:\n                      success:\n                        type: boolean\n                      message:\n                        type: string\n        400:\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string           \n        409:\n          description: Account already exist\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n\n        '500':\n          description: Unknown error\n          content: \n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                \n  /api/users/login/:\n    post:\n      tags:\n        - Auth\n      description: Authenticate a user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n              required:\n                - email\n                - password\n      responses:\n        '200':\n          description: Auth successful\n          content: \n            application/json:\n              schema:\n                required:\n                  - sucess\n                  - message\n                  - token\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  token:\n                    type: string\n        '401':\n          description: Unauthorized (incorrect username/password)\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        '500': \n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n\n  /api/links:\n    get:\n      tags:\n        - Links\n      description: Get all links in the database\n      responses:\n        200:\n          description: Successfully get all links\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - data\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        url:\n                          type: string\n                          description: original (long) link\n                        short:\n                          type: string\n                          description: shortened code of the URL\n                        creationDate:\n                          type: string\n                          description: creation date\n                        expirationDate:\n                          type: string\n                          description: date when the link will be expired and be automatically deleted from the database\n                        id:\n                          type: string\n                          description: id of the link\n\n        500:\n          description: cannot get links (server errors)\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n\n    post:\n      tags:\n        - Links\n      description: Create a shortened link (code)\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - url\n              properties:\n                url:\n                  type: string\n                  description: original url\n                short:\n                  type: string\n                  description: optional custom short code. If not specified, a random code will be generated\n                title:\n                  type: string\n                  description: optional title for the URL\n      responses:\n        201:\n          description: Successfully created a (short) code for the link\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - data\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: object\n                    properties:\n                      url:\n                        type: string\n                        description: original (long) link\n                      short:\n                        type: string\n                        description: shortened code of the URL\n                      title:\n                        type: string\n                        desecription: (optional) if specified\n        409:\n          description: Duplicate\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        422:\n          description: Incorrect length\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        500:\n          description: Link creation fail\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n\n\n  /api/links/{short}:\n    get:\n      tags:\n        - Links\n      description: Get original url from the short code\n      parameters:\n        - in: path\n          name: short\n          schema:\n            type: string\n          required: true\n          description: short code\n      responses:\n        302:\n          description: Successfully get the original URL and redirect the user\n        500:\n          description: cannot get link\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n    put:\n      tags:\n        - Links\n      description: Edit the original url and/or title, given the short code\n      parameters:\n        - in: path\n          name: short\n          schema:\n            type: string\n          required: true\n          description: short code\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                url:\n                  type: string\n                  require: false\n                title:\n                  type: string\n                  require: false\n        required: true\n      responses:\n        200:\n          description: URL updated successfully.\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - data\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        400:\n          description: Url or Title is required in body\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        404:\n          description: Link Not Found (If short is not matching)\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        422:\n          description: Invalid Url\n          content:\n            application/json:\n              schema:\n                required:\n                  - success\n                  - message\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n    delete:\n      tags:\n        - Links\n      description: delete a link\n      parameters:\n        - in : query\n          name: short\n          description: short code\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        '404':\n          description: Short link doesn't exist\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n        '500':\n            description: Server error\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    success:\n                      type: boolean\n                    message:\n                      type: string\n\n\n",
			"canonicalURL": "/github.com/webdev-20/shorti-url-shortener@fd1ef1687d13f6324a890eb2f3cb8f2b4b485d28/-/blob/server/src/docs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/webdev-20/shorti-url-shortener/blob/fd1ef1687d13f6324a890eb2f3cb8f2b4b485d28/server/src/docs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/links/{short}\": delete: at server/src/docs.yaml:408:7: parse path \"/api/links/{short}\": path parameter not specified: \"short\""
}