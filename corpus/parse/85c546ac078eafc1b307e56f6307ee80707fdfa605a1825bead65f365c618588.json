{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "VariantSet.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Genotyping/VariantSets/Schemas/VariantSet.yaml",
			"byteSize": 3623,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    VariantSet:\n      type: object\n      description: A VariantSet is a collection of variants and variant calls intended to be analyzed together.\n      properties:\n        additionalInfo:\n          additionalProperties:\n            type: string\n          description: Additional arbitrary info\n          type: object\n        availableFormats:\n          description: |-\n            When the data for a VariantSet is retrieved, it can be retrieved in a variety of data formats and file formats. \n            \n            dataFormat defines the structure of the data within a file (ie DartSeq, VCF, Hapmap, tabular, etc)\n            \n            fileFormat defines the MIME type of the file (ie text/csv, application/excel, application/zip). This should also be reflected in the Accept and ContentType HTTP headers for every relevant request and response.\n          type: array\n          items:\n            type: object\n            description: Each 'availableFormat' object is a pairing of dataFormat and fileFormat. These must be communicated in pairs because they are not independant parameters and sometimes one influences the other.\n            properties:\n              dataFormat:\n                description: dataFormat defines the structure of the data within a file (ie DartSeq, VCF, Hapmap, tabular, etc)\n                type: string\n                enum:\n                - DartSeq\n                - VCF\n                - Hapmap\n                - tabular\n                - JSON \n              fileFormat:\n                description: fileFormat defines the MIME type of the file (ie text/csv, application/excel, application/zip). This should also be reflected in the Accept and ContentType HTTP headers for every relevant request and response.\n                type: string\n                enum:\n                - text/csv\n                - text/tsv\n                - application/excel\n                - application/zip\n                - application/json\n              fileURL:\n                description: A URL which indicates the location of the file version of this VariantSet. Could be a static file URL or an API endpoint which generates the file.\n                type: string\n                format: uri\n          example:\n          - dataFormat: VCF\n            fileFormat: application/excel\n            fileURL: https://brapi.org/example/VCF_1.xlsx\n          - dataFormat: VCF\n            fileFormat: text/csv\n            fileURL: https://brapi.org/example/VCF_2.csv\n        analysis:\n          description: Set of Analysis descriptors for this VariantSet \n          type: array\n          items:\n            $ref: '#/components/schemas/Analysis'\n        studyDbId:\n          description: The ID of the dataset this variant set belongs to.\n          type: string\n          example: 2fc3b034\n        variantSetDbId: \n          description: The variant set ID.\n          type: string\n          example: 87a6ac1e\n        variantSetName:\n          description: The variant set name.\n          type: string\n          example: Maize QC DataSet 002334 \n        variantCount:\n          description: The number of Variants included in this VariantSet\n          type: integer\n          example: 250\n        callSetCount:\n          description: The number of CallSets included in this VariantSet\n          type: integer\n          example: 341\n        referenceSetDbId:\n          description: The ID of the reference set that describes the sequences used by the variants in this set.\n          type: string\n          example: 57eae639\n\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@5252d84f331840650fffbca6cb8cece10a65cea6/-/blob/Specification/BrAPI-Genotyping/VariantSets/Schemas/VariantSet.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/5252d84f331840650fffbca6cb8cece10a65cea6/Specification/BrAPI-Genotyping/VariantSets/Schemas/VariantSet.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"VariantSet\": parse schema: property \"analysis\": parse schema: item: parse schema: resolve \"#/components/schemas/Analysis\": find schema: resolve \"#/components/schemas/Analysis\": can't find value for \"components/schemas/Analysis\""
}