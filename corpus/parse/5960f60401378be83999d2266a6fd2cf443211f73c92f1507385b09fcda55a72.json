{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/iotwireless/2020-11-22/openapi.yaml",
			"byteSize": 223527,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2020-11-22'\n  x-release: v4\n  title: AWS IoT Wireless\n  description: AWS IoT Wireless API documentation\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: iotwireless\n  x-aws-signingName: iotwireless\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotwireless-2020-11-22.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/iotwireless/'\nservers:\n  - url: 'http://api.iotwireless.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT Wireless multi-region endpoint\n  - url: 'https://api.iotwireless.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS IoT Wireless multi-region endpoint\n  - url: 'http://api.iotwireless.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Wireless endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://api.iotwireless.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Wireless endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /partner-accounts:\n    post:\n      operationId: AssociateAwsAccountWithPartnerAccount\n      description: Associates a partner account with your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateAwsAccountWithPartnerAccountResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Sidewalk\n              properties:\n                Sidewalk:\n                  description: Information about a Sidewalk account.\n                  type: object\n                  properties:\n                    AmazonId:\n                      allOf:\n                        - $ref: '#/components/schemas/AmazonId'\n                        - description: The Sidewalk Amazon ID.\n                    AppServerPrivateKey:\n                      allOf:\n                        - $ref: '#/components/schemas/AppServerPrivateKey'\n                        - description: The Sidewalk application server private key.\n                ClientRequestToken:\n                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]+$'\n                  minLength: 1\n                  maxLength: 64\n                Tags:\n                  description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListPartnerAccounts\n      description: Lists the partner accounts associated with your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPartnerAccountsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'To retrieve the next set of results, the \u003ccode\u003enextToken\u003c/code\u003e value from a previous response; otherwise \u003cb\u003enull\u003c/b\u003e to receive the first set of results.'\n          schema:\n            type: string\n            maxLength: 4096\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return in this operation.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 250\n  '/wireless-devices/{Id}/thing':\n    put:\n      operationId: AssociateWirelessDeviceWithThing\n      description: Associates a wireless device with a thing.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateWirelessDeviceWithThingResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ThingArn\n              properties:\n                ThingArn:\n                  description: The ARN of the thing to associate with the wireless device.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DisassociateWirelessDeviceFromThing\n      description: Disassociates a wireless device from its currently associated thing.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateWirelessDeviceFromThingResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n  '/wireless-gateways/{Id}/certificate':\n    put:\n      operationId: AssociateWirelessGatewayWithCertificate\n      description: Associates a wireless gateway with a certificate.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateWirelessGatewayWithCertificateResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - IotCertificateId\n              properties:\n                IotCertificateId:\n                  description: The ID of the certificate to associate with the wireless gateway.\n                  type: string\n                  minLength: 1\n                  maxLength: 4096\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DisassociateWirelessGatewayFromCertificate\n      description: Disassociates a wireless gateway from its currently associated certificate.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateWirelessGatewayFromCertificateResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n    get:\n      operationId: GetWirelessGatewayCertificate\n      description: Gets the ID of the certificate that is currently associated with a wireless gateway.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWirelessGatewayCertificateResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to get.\n          schema:\n            type: string\n            maxLength: 256\n  '/wireless-gateways/{Id}/thing':\n    put:\n      operationId: AssociateWirelessGatewayWithThing\n      description: Associates a wireless gateway with a thing.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateWirelessGatewayWithThingResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ThingArn\n              properties:\n                ThingArn:\n                  description: The ARN of the thing to associate with the wireless gateway.\n                  type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DisassociateWirelessGatewayFromThing\n      description: Disassociates a wireless gateway from its currently associated thing.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateWirelessGatewayFromThingResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n  /destinations:\n    post:\n      operationId: CreateDestination\n      description: Creates a new destination that maps a device message to an AWS IoT rule.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDestinationResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n                - ExpressionType\n                - Expression\n                - RoleArn\n              properties:\n                Name:\n                  description: The name of the new resource.\n                  type: string\n                  pattern: '[a-zA-Z0-9-_]+'\n                  maxLength: 128\n                ExpressionType:\n                  description: The type of value in \u003ccode\u003eExpression\u003c/code\u003e.\n                  type: string\n                  enum:\n                    - RuleName\n                    - MqttTopic\n                Expression:\n                  description: The rule name or topic rule to send messages to.\n                  type: string\n                  maxLength: 2048\n                Description:\n                  description: The description of the new resource.\n                  type: string\n                  maxLength: 2048\n                RoleArn:\n                  description: The ARN of the IAM Role that authorizes the destination.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                Tags:\n                  description: The tags to attach to the new destination. Tags are metadata that you can use to manage a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n                ClientRequestToken:\n                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]+$'\n                  minLength: 1\n                  maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListDestinations\n      description: Lists the destinations registered to your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDestinationsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return in this operation.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 250\n        - name: nextToken\n          in: query\n          required: false\n          description: 'To retrieve the next set of results, the \u003ccode\u003enextToken\u003c/code\u003e value from a previous response; otherwise \u003cb\u003enull\u003c/b\u003e to receive the first set of results.'\n          schema:\n            type: string\n            maxLength: 4096\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  /device-profiles:\n    post:\n      operationId: CreateDeviceProfile\n      description: Creates a new device profile.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDeviceProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: The name of the new resource.\n                  type: string\n                  maxLength: 256\n                LoRaWAN:\n                  description: LoRaWANDeviceProfile object.\n                  type: object\n                  properties:\n                    SupportsClassB:\n                      allOf:\n                        - $ref: '#/components/schemas/SupportsClassB'\n                        - description: The SupportsClassB value.\n                    ClassBTimeout:\n                      allOf:\n                        - $ref: '#/components/schemas/ClassBTimeout'\n                        - description: The ClassBTimeout value.\n                    PingSlotPeriod:\n                      allOf:\n                        - $ref: '#/components/schemas/PingSlotPeriod'\n                        - description: The PingSlotPeriod value.\n                    PingSlotDr:\n                      allOf:\n                        - $ref: '#/components/schemas/PingSlotDr'\n                        - description: The PingSlotDR value.\n                    PingSlotFreq:\n                      allOf:\n                        - $ref: '#/components/schemas/PingSlotFreq'\n                        - description: The PingSlotFreq value.\n                    SupportsClassC:\n                      allOf:\n                        - $ref: '#/components/schemas/SupportsClassC'\n                        - description: The SupportsClassC value.\n                    ClassCTimeout:\n                      allOf:\n                        - $ref: '#/components/schemas/ClassCTimeout'\n                        - description: The ClassCTimeout value.\n                    MacVersion:\n                      allOf:\n                        - $ref: '#/components/schemas/MacVersion'\n                        - description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with this device profile.\n                    RegParamsRevision:\n                      allOf:\n                        - $ref: '#/components/schemas/RegParamsRevision'\n                        - description: The version of regional parameters.\n                    RxDelay1:\n                      allOf:\n                        - $ref: '#/components/schemas/RxDelay1'\n                        - description: The RXDelay1 value.\n                    RxDrOffset1:\n                      allOf:\n                        - $ref: '#/components/schemas/RxDrOffset1'\n                        - description: The RXDROffset1 value.\n                    RxDataRate2:\n                      allOf:\n                        - $ref: '#/components/schemas/RxDataRate2'\n                        - description: The RXDataRate2 value.\n                    RxFreq2:\n                      allOf:\n                        - $ref: '#/components/schemas/RxFreq2'\n                        - description: The RXFreq2 value.\n                    FactoryPresetFreqsList:\n                      allOf:\n                        - $ref: '#/components/schemas/FactoryPresetFreqsList'\n                        - description: The list of values that make up the FactoryPresetFreqs value.\n                    MaxEirp:\n                      allOf:\n                        - $ref: '#/components/schemas/MaxEirp'\n                        - description: The MaxEIRP value.\n                    MaxDutyCycle:\n                      allOf:\n                        - $ref: '#/components/schemas/MaxDutyCycle'\n                        - description: The MaxDutyCycle value.\n                    RfRegion:\n                      allOf:\n                        - $ref: '#/components/schemas/RfRegion'\n                        - description: The frequency band (RFRegion) value.\n                    SupportsJoin:\n                      allOf:\n                        - $ref: '#/components/schemas/SupportsJoin'\n                        - description: The SupportsJoin value.\n                    Supports32BitFCnt:\n                      allOf:\n                        - $ref: '#/components/schemas/Supports32BitFCnt'\n                        - description: The Supports32BitFCnt value.\n                Tags:\n                  description: The tags to attach to the new device profile. Tags are metadata that you can use to manage a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n                ClientRequestToken:\n                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]+$'\n                  minLength: 1\n                  maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListDeviceProfiles\n      description: Lists the device profiles registered to your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeviceProfilesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'To retrieve the next set of results, the \u003ccode\u003enextToken\u003c/code\u003e value from a previous response; otherwise \u003cb\u003enull\u003c/b\u003e to receive the first set of results.'\n          schema:\n            type: string\n            maxLength: 4096\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return in this operation.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 250\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  /service-profiles:\n    post:\n      operationId: CreateServiceProfile\n      description: Creates a new service profile.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateServiceProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: The name of the new resource.\n                  type: string\n                  maxLength: 256\n                LoRaWAN:\n                  description: LoRaWANServiceProfile object.\n                  type: object\n                  properties:\n                    AddGwMetadata:\n                      allOf:\n                        - $ref: '#/components/schemas/AddGwMetadata'\n                        - description: The AddGWMetaData value.\n                Tags:\n                  description: The tags to attach to the new service profile. Tags are metadata that you can use to manage a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n                ClientRequestToken:\n                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]+$'\n                  minLength: 1\n                  maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListServiceProfiles\n      description: Lists the service profiles registered to your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListServiceProfilesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'To retrieve the next set of results, the \u003ccode\u003enextToken\u003c/code\u003e value from a previous response; otherwise \u003cb\u003enull\u003c/b\u003e to receive the first set of results.'\n          schema:\n            type: string\n            maxLength: 4096\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return in this operation.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 250\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  /wireless-devices:\n    post:\n      operationId: CreateWirelessDevice\n      description: Provisions a wireless device.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateWirelessDeviceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Type\n                - DestinationName\n              properties:\n                Type:\n                  description: The wireless device type.\n                  type: string\n                  enum:\n                    - Sidewalk\n                    - LoRaWAN\n                Name:\n                  description: The name of the new resource.\n                  type: string\n                  maxLength: 256\n                Description:\n                  description: The description of the new resource.\n                  type: string\n                  maxLength: 2048\n                DestinationName:\n                  description: The name of the destination to assign to the new wireless device.\n                  type: string\n                  pattern: '[a-zA-Z0-9-_]+'\n                  maxLength: 128\n                ClientRequestToken:\n                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]+$'\n                  minLength: 1\n                  maxLength: 64\n                LoRaWAN:\n                  description: LoRaWAN object for create functions.\n                  type: object\n                  properties:\n                    DevEui:\n                      allOf:\n                        - $ref: '#/components/schemas/DevEui'\n                        - description: The DevEUI value.\n                    DeviceProfileId:\n                      allOf:\n                        - $ref: '#/components/schemas/DeviceProfileId'\n                        - description: The ID of the device profile for the new wireless device.\n                    ServiceProfileId:\n                      allOf:\n                        - $ref: '#/components/schemas/ServiceProfileId'\n                        - description: The ID of the service profile.\n                    OtaaV1_1:\n                      allOf:\n                        - $ref: '#/components/schemas/OtaaV1_1'\n                        - description: OTAA device object for v1.1 for create APIs\n                    OtaaV1_0_x:\n                      allOf:\n                        - $ref: '#/components/schemas/OtaaV1_0_x'\n                        - description: OTAA device object for create APIs for v1.0.x\n                    AbpV1_1:\n                      allOf:\n                        - $ref: '#/components/schemas/AbpV1_1'\n                        - description: ABP device object for create APIs for v1.1\n                    AbpV1_0_x:\n                      allOf:\n                        - $ref: '#/components/schemas/AbpV1_0_x'\n                        - description: LoRaWAN object for create APIs\n                Tags:\n                  description: The tags to attach to the new wireless device. Tags are metadata that you can use to manage a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListWirelessDevices\n      description: Lists the wireless devices registered to your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListWirelessDevicesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return in this operation.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 250\n        - name: nextToken\n          in: query\n          required: false\n          description: 'To retrieve the next set of results, the \u003ccode\u003enextToken\u003c/code\u003e value from a previous response; otherwise \u003cb\u003enull\u003c/b\u003e to receive the first set of results.'\n          schema:\n            type: string\n            maxLength: 4096\n        - name: destinationName\n          in: query\n          required: false\n          description: A filter to list only the wireless devices that use this destination.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9-_]+'\n            maxLength: 128\n        - name: deviceProfileId\n          in: query\n          required: false\n          description: A filter to list only the wireless devices that use this device profile.\n          schema:\n            type: string\n            maxLength: 256\n        - name: serviceProfileId\n          in: query\n          required: false\n          description: A filter to list only the wireless devices that use this service profile.\n          schema:\n            type: string\n            maxLength: 256\n        - name: wirelessDeviceType\n          in: query\n          required: false\n          description: A filter to list only the wireless devices that use this wireless device type.\n          schema:\n            type: string\n            enum:\n              - Sidewalk\n              - LoRaWAN\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  /wireless-gateways:\n    post:\n      operationId: CreateWirelessGateway\n      description: Provisions a wireless gateway.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateWirelessGatewayResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - LoRaWAN\n              properties:\n                Name:\n                  description: The name of the new resource.\n                  type: string\n                  maxLength: 256\n                Description:\n                  description: The description of the new resource.\n                  type: string\n                  maxLength: 2048\n                LoRaWAN:\n                  description: LoRaWANGateway object.\n                  type: object\n                  properties:\n                    GatewayEui:\n                      allOf:\n                        - $ref: '#/components/schemas/GatewayEui'\n                        - description: The gateway's EUI value.\n                    RfRegion:\n                      allOf:\n                        - $ref: '#/components/schemas/RfRegion'\n                        - description: The frequency band (RFRegion) value.\n                    JoinEuiFilters:\n                      $ref: '#/components/schemas/JoinEuiFilters'\n                    NetIdFilters:\n                      $ref: '#/components/schemas/NetIdFilters'\n                    SubBands:\n                      $ref: '#/components/schemas/SubBands'\n                Tags:\n                  description: The tags to attach to the new wireless gateway. Tags are metadata that you can use to manage a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n                ClientRequestToken:\n                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]+$'\n                  minLength: 1\n                  maxLength: 64\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListWirelessGateways\n      description: Lists the wireless gateways registered to your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListWirelessGatewaysResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'To retrieve the next set of results, the \u003ccode\u003enextToken\u003c/code\u003e value from a previous response; otherwise \u003cb\u003enull\u003c/b\u003e to receive the first set of results.'\n          schema:\n            type: string\n            maxLength: 4096\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return in this operation.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 250\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/wireless-gateways/{Id}/tasks':\n    post:\n      operationId: CreateWirelessGatewayTask\n      description: Creates a task for a wireless gateway.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateWirelessGatewayTaskResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - WirelessGatewayTaskDefinitionId\n              properties:\n                WirelessGatewayTaskDefinitionId:\n                  description: The ID of the WirelessGatewayTaskDefinition.\n                  type: string\n                  pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n                  maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DeleteWirelessGatewayTask\n      description: Deletes a wireless gateway task.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteWirelessGatewayTaskResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to delete.\n          schema:\n            type: string\n            maxLength: 256\n    get:\n      operationId: GetWirelessGatewayTask\n      description: Gets information about a wireless gateway task.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWirelessGatewayTaskResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to get.\n          schema:\n            type: string\n            maxLength: 256\n  /wireless-gateway-task-definitions:\n    post:\n      operationId: CreateWirelessGatewayTaskDefinition\n      description: Creates a gateway task definition.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateWirelessGatewayTaskDefinitionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - AutoCreateTasks\n              properties:\n                AutoCreateTasks:\n                  description: 'Whether to automatically create tasks using this task definition for all gateways with the specified current version. If \u003ccode\u003efalse\u003c/code\u003e, the task must me created by calling \u003ccode\u003eCreateWirelessGatewayTask\u003c/code\u003e.'\n                  type: boolean\n                Name:\n                  description: The name of the new resource.\n                  type: string\n                  minLength: 1\n                  maxLength: 2048\n                Update:\n                  description: UpdateWirelessGatewayTaskCreate object.\n                  type: object\n                  properties:\n                    UpdateDataSource:\n                      allOf:\n                        - $ref: '#/components/schemas/UpdateDataSource'\n                        - description: The link to the S3 bucket.\n                    UpdateDataRole:\n                      allOf:\n                        - $ref: '#/components/schemas/UpdateDataSource'\n                        - description: The IAM role used to read data from the S3 bucket.\n                    LoRaWAN:\n                      allOf:\n                        - $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'\n                        - description: The properties that relate to the LoRaWAN wireless gateway.\n                ClientRequestToken:\n                  description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]+$'\n                  minLength: 1\n                  maxLength: 64\n                Tags:\n                  description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListWirelessGatewayTaskDefinitions\n      description: List the wireless gateway tasks definitions registered to your AWS account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListWirelessGatewayTaskDefinitionsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return in this operation.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 250\n        - name: nextToken\n          in: query\n          required: false\n          description: 'To retrieve the next set of results, the \u003ccode\u003enextToken\u003c/code\u003e value from a previous response; otherwise \u003cb\u003enull\u003c/b\u003e to receive the first set of results.'\n          schema:\n            type: string\n            maxLength: 4096\n        - name: taskDefinitionType\n          in: query\n          required: false\n          description: A filter to list only the wireless gateway task definitions that use this task definition type.\n          schema:\n            type: string\n            enum:\n              - UPDATE\n  '/destinations/{Name}':\n    delete:\n      operationId: DeleteDestination\n      description: Deletes a destination.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDestinationResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Name\n          in: path\n          required: true\n          description: The name of the resource to delete.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9-_]+'\n            maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetDestination\n      description: Gets information about a destination.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDestinationResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Name\n          in: path\n          required: true\n          description: The name of the resource to get.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9-_]+'\n            maxLength: 128\n    patch:\n      operationId: UpdateDestination\n      description: Updates properties of a destination.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDestinationResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Name\n          in: path\n          required: true\n          description: The new name of the resource.\n          schema:\n            type: string\n            pattern: '[a-zA-Z0-9-_]+'\n            maxLength: 128\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ExpressionType:\n                  description: The type of value in \u003ccode\u003eExpression\u003c/code\u003e.\n                  type: string\n                  enum:\n                    - RuleName\n                    - MqttTopic\n                Expression:\n                  description: The new rule name or topic rule to send messages to.\n                  type: string\n                  maxLength: 2048\n                Description:\n                  description: A new description of the resource.\n                  type: string\n                  maxLength: 2048\n                RoleArn:\n                  description: The ARN of the IAM Role that authorizes the destination.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n  '/device-profiles/{Id}':\n    delete:\n      operationId: DeleteDeviceProfile\n      description: Deletes a device profile.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDeviceProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to delete.\n          schema:\n            type: string\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetDeviceProfile\n      description: Gets information about a device profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeviceProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to get.\n          schema:\n            type: string\n            maxLength: 256\n  '/service-profiles/{Id}':\n    delete:\n      operationId: DeleteServiceProfile\n      description: Deletes a service profile.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteServiceProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to delete.\n          schema:\n            type: string\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetServiceProfile\n      description: Gets information about a service profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetServiceProfileResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to get.\n          schema:\n            type: string\n            maxLength: 256\n  '/wireless-devices/{Id}':\n    delete:\n      operationId: DeleteWirelessDevice\n      description: Deletes a wireless device.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteWirelessDeviceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to delete.\n          schema:\n            type: string\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    patch:\n      operationId: UpdateWirelessDevice\n      description: Updates properties of a wireless device.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateWirelessDeviceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                DestinationName:\n                  description: The name of the new destination for the device.\n                  type: string\n                  pattern: '[a-zA-Z0-9-_]+'\n                  maxLength: 128\n                Name:\n                  description: The new name of the resource.\n                  type: string\n                  maxLength: 256\n                Description:\n                  description: A new description of the resource.\n                  type: string\n                  maxLength: 2048\n                LoRaWAN:\n                  description: LoRaWAN object for update functions.\n                  type: object\n                  properties:\n                    DeviceProfileId:\n                      allOf:\n                        - $ref: '#/components/schemas/DeviceProfileId'\n                        - description: The ID of the device profile for the wireless device.\n                    ServiceProfileId:\n                      allOf:\n                        - $ref: '#/components/schemas/ServiceProfileId'\n                        - description: The ID of the service profile.\n  '/wireless-gateways/{Id}':\n    delete:\n      operationId: DeleteWirelessGateway\n      description: Deletes a wireless gateway.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteWirelessGatewayResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to delete.\n          schema:\n            type: string\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    patch:\n      operationId: UpdateWirelessGateway\n      description: Updates properties of a wireless gateway.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateWirelessGatewayResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to update.\n          schema:\n            type: string\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: The new name of the resource.\n                  type: string\n                  maxLength: 256\n                Description:\n                  description: A new description of the resource.\n                  type: string\n                  maxLength: 2048\n                JoinEuiFilters:\n                  description: A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/JoinEuiRange'\n                  minItems: 0\n                  maxItems: 3\n                NetIdFilters:\n                  description: A list of NetId values that are used by LoRa gateways to filter the uplink frames.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/NetId'\n                  minItems: 0\n                  maxItems: 10\n  '/wireless-gateway-task-definitions/{Id}':\n    delete:\n      operationId: DeleteWirelessGatewayTaskDefinition\n      description: Deletes a wireless gateway task definition. Deleting this task definition does not affect tasks that are currently in progress.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteWirelessGatewayTaskDefinitionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to delete.\n          schema:\n            type: string\n            pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n            maxLength: 36\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetWirelessGatewayTaskDefinition\n      description: Gets information about a wireless gateway task definition.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWirelessGatewayTaskDefinitionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to get.\n          schema:\n            type: string\n            pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n            maxLength: 36\n  '/partner-accounts/{PartnerAccountId}#partnerType':\n    delete:\n      operationId: DisassociateAwsAccountFromPartnerAccount\n      description: 'Disassociates your AWS account from a partner account. If \u003ccode\u003ePartnerAccountId\u003c/code\u003e and \u003ccode\u003ePartnerType\u003c/code\u003e are \u003ccode\u003enull\u003c/code\u003e, disassociates your AWS account from all partner accounts.'\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateAwsAccountFromPartnerAccountResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: PartnerAccountId\n          in: path\n          required: true\n          description: The partner account ID to disassociate from the AWS account.\n          schema:\n            type: string\n            maxLength: 256\n        - name: partnerType\n          in: query\n          required: true\n          description: The partner type.\n          schema:\n            type: string\n            enum:\n              - Sidewalk\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetPartnerAccount\n      description: 'Gets information about a partner account. If \u003ccode\u003ePartnerAccountId\u003c/code\u003e and \u003ccode\u003ePartnerType\u003c/code\u003e are \u003ccode\u003enull\u003c/code\u003e, returns all partner accounts.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPartnerAccountResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: PartnerAccountId\n          in: path\n          required: true\n          description: The partner account ID to disassociate from the AWS account.\n          schema:\n            type: string\n            maxLength: 256\n        - name: partnerType\n          in: query\n          required: true\n          description: The partner type.\n          schema:\n            type: string\n            enum:\n              - Sidewalk\n    patch:\n      operationId: UpdatePartnerAccount\n      description: Updates properties of a partner account.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdatePartnerAccountResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: PartnerAccountId\n          in: path\n          required: true\n          description: The ID of the partner account to update.\n          schema:\n            type: string\n            maxLength: 256\n        - name: partnerType\n          in: query\n          required: true\n          description: The partner type.\n          schema:\n            type: string\n            enum:\n              - Sidewalk\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Sidewalk\n              properties:\n                Sidewalk:\n                  description: Sidewalk update.\n                  type: object\n                  properties:\n                    AppServerPrivateKey:\n                      allOf:\n                        - $ref: '#/components/schemas/AppServerPrivateKey'\n                        - description: The new Sidewalk application server private key.\n  /log-levels:\n    get:\n      operationId: GetLogLevelsByResourceTypes\n      description: 'Returns current default log levels or log levels by resource types. Based on resource types, log levels can be for wireless device log options or wireless gateway log options.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLogLevelsByResourceTypesResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: ResetAllResourceLogLevels\n      description: Removes the log-level overrides for all resources; both wireless devices and wireless gateways.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetAllResourceLogLevelsResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n    post:\n      operationId: UpdateLogLevelsByResourceTypes\n      description: 'Set default log level, or log levels by resource types. This can be for wireless device log options or wireless gateways log options and is used to control the log messages that''ll be displayed in CloudWatch.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLogLevelsByResourceTypesResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                DefaultLogLevel:\n                  description: The log level for a log message.\n                  type: string\n                  enum:\n                    - INFO\n                    - ERROR\n                    - DISABLED\n                WirelessDeviceLogOptions:\n                  description: The list of wireless device log options.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/WirelessDeviceLogOption'\n                WirelessGatewayLogOptions:\n                  description: The list of wireless gateway log options.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/WirelessGatewayLogOption'\n  '/log-levels/{ResourceIdentifier}#resourceType':\n    get:\n      operationId: GetResourceLogLevel\n      description: 'Fetches the log-level override, if any, for a given resource-ID and resource-type. It can be used for a wireless device or a wireless gateway.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetResourceLogLevelResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: ResourceIdentifier\n          in: path\n          required: true\n          description: ''\n          schema:\n            type: string\n            description: 'The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.'\n            maxLength: 256\n        - name: resourceType\n          in: query\n          required: true\n          description: 'The type of the resource, which can be \u003ccode\u003eWirelessDevice\u003c/code\u003e or \u003ccode\u003eWirelessGateway\u003c/code\u003e.'\n          schema:\n            type: string\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: PutResourceLogLevel\n      description: Sets the log-level override for a resource-ID and resource-type. This option can be specified for a wireless gateway or a wireless device. A limit of 200 log level override can be set per account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutResourceLogLevelResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: ResourceIdentifier\n          in: path\n          required: true\n          description: ''\n          schema:\n            type: string\n            description: 'The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.'\n            maxLength: 256\n        - name: resourceType\n          in: query\n          required: true\n          description: 'The type of the resource, which can be \u003ccode\u003eWirelessDevice\u003c/code\u003e or \u003ccode\u003eWirelessGateway\u003c/code\u003e.'\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - LogLevel\n              properties:\n                LogLevel:\n                  description: The log level for a log message.\n                  type: string\n                  enum:\n                    - INFO\n                    - ERROR\n                    - DISABLED\n    delete:\n      operationId: ResetResourceLogLevel\n      description: 'Removes the log-level override, if any, for a specific resource-ID and resource-type. It can be used for a wireless device or a wireless gateway.'\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetResourceLogLevelResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: ResourceIdentifier\n          in: path\n          required: true\n          description: ''\n          schema:\n            type: string\n            description: 'The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.'\n            maxLength: 256\n        - name: resourceType\n          in: query\n          required: true\n          description: 'The type of the resource, which can be \u003ccode\u003eWirelessDevice\u003c/code\u003e or \u003ccode\u003eWirelessGateway\u003c/code\u003e.'\n          schema:\n            type: string\n  /service-endpoint:\n    get:\n      operationId: GetServiceEndpoint\n      description: Gets the account-specific endpoint for Configuration and Update Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetServiceEndpointResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: serviceType\n          in: query\n          required: false\n          description: 'The service type for which to get endpoint information about. Can be \u003ccode\u003eCUPS\u003c/code\u003e for the Configuration and Update Server endpoint, or \u003ccode\u003eLNS\u003c/code\u003e for the LoRaWAN Network Server endpoint.'\n          schema:\n            type: string\n            enum:\n              - CUPS\n              - LNS\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/wireless-devices/{Identifier}#identifierType':\n    get:\n      operationId: GetWirelessDevice\n      description: Gets information about a wireless device.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWirelessDeviceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Identifier\n          in: path\n          required: true\n          description: The identifier of the wireless device to get.\n          schema:\n            type: string\n            maxLength: 256\n        - name: identifierType\n          in: query\n          required: true\n          description: The type of identifier used in \u003ccode\u003eidentifier\u003c/code\u003e.\n          schema:\n            type: string\n            enum:\n              - WirelessDeviceId\n              - DevEui\n              - ThingName\n              - SidewalkManufacturingSn\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/wireless-devices/{Id}/statistics':\n    get:\n      operationId: GetWirelessDeviceStatistics\n      description: Gets operating information about a wireless device.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWirelessDeviceStatisticsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the wireless device for which to get the data.\n          schema:\n            type: string\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/wireless-gateways/{Identifier}#identifierType':\n    get:\n      operationId: GetWirelessGateway\n      description: Gets information about a wireless gateway.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWirelessGatewayResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Identifier\n          in: path\n          required: true\n          description: The identifier of the wireless gateway to get.\n          schema:\n            type: string\n            maxLength: 256\n        - name: identifierType\n          in: query\n          required: true\n          description: The type of identifier used in \u003ccode\u003eidentifier\u003c/code\u003e.\n          schema:\n            type: string\n            enum:\n              - GatewayEui\n              - WirelessGatewayId\n              - ThingName\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/wireless-gateways/{Id}/firmware-information':\n    get:\n      operationId: GetWirelessGatewayFirmwareInformation\n      description: Gets the firmware version and other information about a wireless gateway.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWirelessGatewayFirmwareInformationResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the resource to get.\n          schema:\n            type: string\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/wireless-gateways/{Id}/statistics':\n    get:\n      operationId: GetWirelessGatewayStatistics\n      description: Gets operating information about a wireless gateway.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWirelessGatewayStatisticsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the wireless gateway for which to get the data.\n          schema:\n            type: string\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /tags#resourceArn:\n    get:\n      operationId: ListTagsForResource\n      description: Lists the tags (metadata) you have assigned to the resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The ARN of the resource for which you want to list tags.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: Adds a tag to a resource.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: TooManyTagsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyTagsException'\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The ARN of the resource to add tags to.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Tags\n              properties:\n                Tags:\n                  description: Adds to or modifies the tags of the given resource. Tags are metadata that you can use to manage a resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n  '/wireless-devices/{Id}/data':\n    post:\n      operationId: SendDataToWirelessDevice\n      description: Sends a decrypted application data frame to a device.\n      responses:\n        '202':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SendDataToWirelessDeviceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the wireless device to receive the data.\n          schema:\n            type: string\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - TransmitMode\n                - PayloadData\n              properties:\n                TransmitMode:\n                  description: 'The transmit mode to use to send data to the wireless device. Can be: \u003ccode\u003e0\u003c/code\u003e for UM (unacknowledge mode) or \u003ccode\u003e1\u003c/code\u003e for AM (acknowledge mode).'\n                  type: integer\n                  minimum: 0\n                  maximum: 1\n                PayloadData:\n                  description: 'The binary to be sent to the end device, encoded in base64.'\n                  type: string\n                  pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'\n                  maxLength: 2048\n                WirelessMetadata:\n                  description: WirelessMetadata object.\n                  type: object\n                  properties:\n                    LoRaWAN:\n                      allOf:\n                        - $ref: '#/components/schemas/LoRaWANSendDataToDevice'\n                        - description: LoRaWAN device info.\n                    Sidewalk:\n                      allOf:\n                        - $ref: '#/components/schemas/SidewalkSendDataToDevice'\n                        - description: The Sidewalk account credentials.\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/wireless-devices/{Id}/test':\n    post:\n      operationId: TestWirelessDevice\n      description: Simulates a provisioned device by sending an uplink data payload of \u003ccode\u003eHello\u003c/code\u003e.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestWirelessDeviceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: Id\n          in: path\n          required: true\n          description: The ID of the wireless device to test.\n          schema:\n            type: string\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /tags#resourceArn\u0026tagKeys:\n    delete:\n      operationId: UntagResource\n      description: Removes one or more tags from a resource.\n      responses:\n        '204':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The ARN of the resource to remove tags from.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 1011\n        - name: tagKeys\n          in: query\n          required: true\n          description: A list of the keys of the tags to remove from the resource.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 0\n            maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AssociateAwsAccountWithPartnerAccountResponse:\n      type: object\n      properties:\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkAccountInfo'\n            - description: The Sidewalk account credentials.\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/PartnerAccountArn'\n            - description: The Amazon Resource Name of the resource.\n    AmazonId:\n      type: string\n      description: The Sidewalk Amazon ID.\n      maxLength: 2048\n    AppServerPrivateKey:\n      type: string\n      pattern: '[a-fA-F0-9]{64}'\n      minLength: 1\n      maxLength: 4096\n      format: password\n    Tag:\n      type: object\n      required:\n        - Key\n        - Value\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/TagKey'\n            - description: The tag's key value.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/TagValue'\n            - description: The tag's value.\n      description: A simple label consisting of a customer-defined key-value pair\n    ValidationException: {}\n    ResourceNotFoundException: {}\n    InternalServerException: {}\n    ThrottlingException: {}\n    ConflictException: {}\n    AccessDeniedException: {}\n    AssociateWirelessDeviceWithThingResponse:\n      type: object\n      properties: {}\n    AssociateWirelessGatewayWithCertificateResponse:\n      type: object\n      properties:\n        IotCertificateId:\n          allOf:\n            - $ref: '#/components/schemas/IotCertificateId'\n            - description: The ID of the certificate associated with the wireless gateway.\n    AssociateWirelessGatewayWithThingResponse:\n      type: object\n      properties: {}\n    CreateDestinationResponse:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/DestinationArn'\n            - description: The Amazon Resource Name of the new resource.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DestinationName'\n            - description: The name of the new resource.\n    CreateDeviceProfileResponse:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileArn'\n            - description: The Amazon Resource Name of the new resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileId'\n            - description: The ID of the new device profile.\n    SupportsClassB:\n      type: boolean\n    ClassBTimeout:\n      type: integer\n      minimum: 0\n      maximum: 1000\n    PingSlotPeriod:\n      type: integer\n      minimum: 128\n      maximum: 4096\n    PingSlotDr:\n      type: integer\n      minimum: 0\n      maximum: 15\n    PingSlotFreq:\n      type: integer\n      minimum: 1000000\n      maximum: 16700000\n    SupportsClassC:\n      type: boolean\n    ClassCTimeout:\n      type: integer\n      minimum: 0\n      maximum: 1000\n    MacVersion:\n      type: string\n      maxLength: 64\n    RegParamsRevision:\n      type: string\n      maxLength: 64\n    RxDelay1:\n      type: integer\n      minimum: 0\n      maximum: 15\n    RxDrOffset1:\n      type: integer\n      minimum: 0\n      maximum: 7\n    RxDataRate2:\n      type: integer\n      minimum: 0\n      maximum: 15\n    RxFreq2:\n      type: integer\n      minimum: 1000000\n      maximum: 16700000\n    FactoryPresetFreqsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PresetFreq'\n      minItems: 0\n      maxItems: 20\n    MaxEirp:\n      type: integer\n      minimum: 0\n      maximum: 15\n    MaxDutyCycle:\n      type: integer\n      minimum: 0\n      maximum: 100\n    RfRegion:\n      type: string\n      maxLength: 64\n    SupportsJoin:\n      type: boolean\n    Supports32BitFCnt:\n      type: boolean\n    CreateServiceProfileResponse:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileArn'\n            - description: The Amazon Resource Name of the new resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileId'\n            - description: The ID of the new service profile.\n    AddGwMetadata:\n      type: boolean\n    CreateWirelessDeviceResponse:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceArn'\n            - description: The Amazon Resource Name of the new resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceId'\n            - description: The ID of the new wireless device.\n    DevEui:\n      type: string\n      pattern: '[a-fA-F0-9]{16}'\n    DeviceProfileId:\n      type: string\n      maxLength: 256\n    ServiceProfileId:\n      type: string\n      maxLength: 256\n    OtaaV1_1:\n      type: object\n      properties:\n        AppKey:\n          allOf:\n            - $ref: '#/components/schemas/AppKey'\n            - description: The AppKey value.\n        NwkKey:\n          allOf:\n            - $ref: '#/components/schemas/NwkKey'\n            - description: The NwkKey value.\n        JoinEui:\n          allOf:\n            - $ref: '#/components/schemas/JoinEui'\n            - description: The JoinEUI value.\n      description: OTAA device object for v1.1\n    OtaaV1_0_x:\n      type: object\n      properties:\n        AppKey:\n          allOf:\n            - $ref: '#/components/schemas/AppKey'\n            - description: The AppKey value.\n        AppEui:\n          allOf:\n            - $ref: '#/components/schemas/AppEui'\n            - description: The AppEUI value.\n      description: OTAA device object for v1.0.x\n    AbpV1_1:\n      type: object\n      properties:\n        DevAddr:\n          allOf:\n            - $ref: '#/components/schemas/DevAddr'\n            - description: The DevAddr value.\n        SessionKeys:\n          allOf:\n            - $ref: '#/components/schemas/SessionKeysAbpV1_1'\n            - description: Session keys for ABP v1.1\n      description: ABP device object for LoRaWAN specification v1.1\n    AbpV1_0_x:\n      type: object\n      properties:\n        DevAddr:\n          allOf:\n            - $ref: '#/components/schemas/DevAddr'\n            - description: The DevAddr value.\n        SessionKeys:\n          allOf:\n            - $ref: '#/components/schemas/SessionKeysAbpV1_0_x'\n            - description: Session keys for ABP v1.0.x\n      description: ABP device object for LoRaWAN specification v1.0.x\n    CreateWirelessGatewayResponse:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayArn'\n            - description: The Amazon Resource Name of the new resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceId'\n            - description: The ID of the new wireless gateway.\n    GatewayEui:\n      type: string\n      pattern: '^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$'\n    JoinEuiFilters:\n      type: array\n      description: A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.\n      items:\n        $ref: '#/components/schemas/JoinEuiRange'\n      minItems: 0\n      maxItems: 3\n    NetIdFilters:\n      type: array\n      description: A list of NetId values that are used by LoRa gateways to filter the uplink frames.\n      items:\n        $ref: '#/components/schemas/NetId'\n      minItems: 0\n      maxItems: 10\n    SubBands:\n      type: array\n      description: A list of integer indicating which sub bands are supported by LoRa gateway.\n      items:\n        $ref: '#/components/schemas/SubBand'\n      minItems: 0\n      maxItems: 8\n    CreateWirelessGatewayTaskResponse:\n      type: object\n      properties:\n        WirelessGatewayTaskDefinitionId:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'\n            - description: The ID of the WirelessGatewayTaskDefinition.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskStatus'\n            - description: The status of the request.\n    CreateWirelessGatewayTaskDefinitionResponse:\n      type: object\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'\n            - description: The ID of the new wireless gateway task definition.\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'\n            - description: The Amazon Resource Name of the resource.\n    UpdateDataSource:\n      type: string\n      minLength: 1\n      maxLength: 4096\n    LoRaWANUpdateGatewayTaskCreate:\n      type: object\n      properties:\n        UpdateSignature:\n          allOf:\n            - $ref: '#/components/schemas/UpdateSignature'\n            - description: The signature used to verify the update firmware.\n        SigKeyCrc:\n          allOf:\n            - $ref: '#/components/schemas/Crc'\n            - description: The CRC of the signature private key to check.\n        CurrentVersion:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGatewayVersion'\n            - description: The version of the gateways that should receive the update.\n        UpdateVersion:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGatewayVersion'\n            - description: The firmware version to update the gateway to.\n      description: LoRaWANUpdateGatewayTaskCreate object.\n    DeleteDestinationResponse:\n      type: object\n      properties: {}\n    DeleteDeviceProfileResponse:\n      type: object\n      properties: {}\n    DeleteServiceProfileResponse:\n      type: object\n      properties: {}\n    DeleteWirelessDeviceResponse:\n      type: object\n      properties: {}\n    DeleteWirelessGatewayResponse:\n      type: object\n      properties: {}\n    DeleteWirelessGatewayTaskResponse:\n      type: object\n      properties: {}\n    DeleteWirelessGatewayTaskDefinitionResponse:\n      type: object\n      properties: {}\n    DisassociateAwsAccountFromPartnerAccountResponse:\n      type: object\n      properties: {}\n    DisassociateWirelessDeviceFromThingResponse:\n      type: object\n      properties: {}\n    DisassociateWirelessGatewayFromCertificateResponse:\n      type: object\n      properties: {}\n    DisassociateWirelessGatewayFromThingResponse:\n      type: object\n      properties: {}\n    GetDestinationResponse:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/DestinationArn'\n            - description: The Amazon Resource Name of the resource.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DestinationName'\n            - description: The name of the resource.\n        Expression:\n          allOf:\n            - $ref: '#/components/schemas/Expression'\n            - description: The rule name or topic rule to send messages to.\n        ExpressionType:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionType'\n            - description: The type of value in \u003ccode\u003eExpression\u003c/code\u003e.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the resource.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The ARN of the IAM Role that authorizes the destination.\n    GetDeviceProfileResponse:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileArn'\n            - description: The Amazon Resource Name of the resource.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileName'\n            - description: The name of the resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileId'\n            - description: The ID of the device profile.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANDeviceProfile'\n            - description: Information about the device profile.\n    GetLogLevelsByResourceTypesResponse:\n      type: object\n      properties:\n        DefaultLogLevel:\n          $ref: '#/components/schemas/LogLevel'\n        WirelessGatewayLogOptions:\n          $ref: '#/components/schemas/WirelessGatewayLogOptionList'\n        WirelessDeviceLogOptions:\n          $ref: '#/components/schemas/WirelessDeviceLogOptionList'\n    GetPartnerAccountResponse:\n      type: object\n      properties:\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'\n            - description: The Sidewalk account credentials.\n        AccountLinked:\n          allOf:\n            - $ref: '#/components/schemas/AccountLinked'\n            - description: Whether the partner account is linked to the AWS account.\n    GetResourceLogLevelResponse:\n      type: object\n      properties:\n        LogLevel:\n          $ref: '#/components/schemas/LogLevel'\n    GetServiceEndpointResponse:\n      type: object\n      properties:\n        ServiceType:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayServiceType'\n            - description: The endpoint's service type.\n        ServiceEndpoint:\n          allOf:\n            - $ref: '#/components/schemas/EndPoint'\n            - description: The service endpoint value.\n        ServerTrust:\n          allOf:\n            - $ref: '#/components/schemas/CertificatePEM'\n            - description: The Root CA of the server trust certificate.\n    GetServiceProfileResponse:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileArn'\n            - description: The Amazon Resource Name of the resource.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileName'\n            - description: The name of the resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileId'\n            - description: The ID of the service profile.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGetServiceProfileInfo'\n            - description: Information about the service profile.\n    GetWirelessDeviceResponse:\n      type: object\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceType'\n            - description: The wireless device type.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceName'\n            - description: The name of the resource.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the resource.\n        DestinationName:\n          allOf:\n            - $ref: '#/components/schemas/DestinationName'\n            - description: The name of the destination to which the device is assigned.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceId'\n            - description: The ID of the wireless device.\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceArn'\n            - description: The Amazon Resource Name of the resource.\n        ThingName:\n          allOf:\n            - $ref: '#/components/schemas/ThingName'\n            - description: The name of the thing associated with the wireless device. The value is empty if a thing isn't associated with the device.\n        ThingArn:\n          allOf:\n            - $ref: '#/components/schemas/ThingArn'\n            - description: The ARN of the thing associated with the wireless device.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANDevice'\n            - description: Information about the wireless device.\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkDevice'\n            - description: Sidewalk device object.\n    GetWirelessDeviceStatisticsResponse:\n      type: object\n      properties:\n        WirelessDeviceId:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceId'\n            - description: The ID of the wireless device.\n        LastUplinkReceivedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISODateTimeString'\n            - description: The date and time when the most recent uplink was received.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANDeviceMetadata'\n            - description: Information about the wireless device's operations.\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkDeviceMetadata'\n            - description: MetaData for Sidewalk device.\n    GetWirelessGatewayResponse:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayName'\n            - description: The name of the resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayId'\n            - description: The ID of the wireless gateway.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the resource.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGateway'\n            - description: Information about the wireless gateway.\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayArn'\n            - description: The Amazon Resource Name of the resource.\n        ThingName:\n          allOf:\n            - $ref: '#/components/schemas/ThingName'\n            - description: The name of the thing associated with the wireless gateway. The value is empty if a thing isn't associated with the gateway.\n        ThingArn:\n          allOf:\n            - $ref: '#/components/schemas/ThingArn'\n            - description: The ARN of the thing associated with the wireless gateway.\n    GetWirelessGatewayCertificateResponse:\n      type: object\n      properties:\n        IotCertificateId:\n          allOf:\n            - $ref: '#/components/schemas/IotCertificateId'\n            - description: The ID of the certificate associated with the wireless gateway.\n        LoRaWANNetworkServerCertificateId:\n          allOf:\n            - $ref: '#/components/schemas/IotCertificateId'\n            - description: The ID of the certificate that is associated with the wireless gateway and used for the LoRaWANNetworkServer endpoint.\n    GetWirelessGatewayFirmwareInformationResponse:\n      type: object\n      properties:\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGatewayCurrentVersion'\n            - description: Information about the wireless gateway's firmware.\n    GetWirelessGatewayStatisticsResponse:\n      type: object\n      properties:\n        WirelessGatewayId:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayId'\n            - description: The ID of the wireless gateway.\n        LastUplinkReceivedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISODateTimeString'\n            - description: The date and time when the most recent uplink was received.\n        ConnectionStatus:\n          allOf:\n            - $ref: '#/components/schemas/ConnectionStatus'\n            - description: The connection status of the wireless gateway.\n    GetWirelessGatewayTaskResponse:\n      type: object\n      properties:\n        WirelessGatewayId:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayId'\n            - description: The ID of the wireless gateway.\n        WirelessGatewayTaskDefinitionId:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'\n            - description: The ID of the WirelessGatewayTask.\n        LastUplinkReceivedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISODateTimeString'\n            - description: The date and time when the most recent uplink was received.\n        TaskCreatedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISODateTimeString'\n            - description: The date and time when the task was created.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskStatus'\n            - description: The status of the request.\n    GetWirelessGatewayTaskDefinitionResponse:\n      type: object\n      properties:\n        AutoCreateTasks:\n          allOf:\n            - $ref: '#/components/schemas/AutoCreateTasks'\n            - description: 'Whether to automatically create tasks using this task definition for all gateways with the specified current version. If \u003ccode\u003efalse\u003c/code\u003e, the task must me created by calling \u003ccode\u003eCreateWirelessGatewayTask\u003c/code\u003e.'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskName'\n            - description: The name of the resource.\n        Update:\n          allOf:\n            - $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'\n            - description: Information about the gateways to update.\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'\n            - description: The Amazon Resource Name of the resource.\n    ListDestinationsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next set of results, or \u003cb\u003enull\u003c/b\u003e if there are no additional results.'\n        DestinationList:\n          allOf:\n            - $ref: '#/components/schemas/DestinationList'\n            - description: The list of destinations.\n    ListDeviceProfilesResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next set of results, or \u003cb\u003enull\u003c/b\u003e if there are no additional results.'\n        DeviceProfileList:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileList'\n            - description: The list of device profiles.\n    ListPartnerAccountsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next set of results, or \u003cb\u003enull\u003c/b\u003e if there are no additional results.'\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkAccountList'\n            - description: The Sidewalk account credentials.\n    ListServiceProfilesResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next set of results, or \u003cb\u003enull\u003c/b\u003e if there are no additional results.'\n        ServiceProfileList:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileList'\n            - description: The list of service profiles.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.\n    ListWirelessDevicesResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next set of results, or \u003cb\u003enull\u003c/b\u003e if there are no additional results.'\n        WirelessDeviceList:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceStatisticsList'\n            - description: The ID of the wireless device.\n    ListWirelessGatewayTaskDefinitionsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next set of results, or \u003cb\u003enull\u003c/b\u003e if there are no additional results.'\n        TaskDefinitions:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionList'\n            - description: The list of task definitions.\n    ListWirelessGatewaysResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next set of results, or \u003cb\u003enull\u003c/b\u003e if there are no additional results.'\n        WirelessGatewayList:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayStatisticsList'\n            - description: The ID of the wireless gateway.\n    PutResourceLogLevelResponse:\n      type: object\n      properties: {}\n    ResetAllResourceLogLevelsResponse:\n      type: object\n      properties: {}\n    ResetResourceLogLevelResponse:\n      type: object\n      properties: {}\n    SendDataToWirelessDeviceResponse:\n      type: object\n      properties:\n        MessageId:\n          allOf:\n            - $ref: '#/components/schemas/MessageId'\n            - description: The ID of the message sent to the wireless device.\n    LoRaWANSendDataToDevice:\n      type: object\n      properties:\n        FPort:\n          allOf:\n            - $ref: '#/components/schemas/FPort'\n            - description: The Fport value.\n      description: LoRaWAN router info.\n    SidewalkSendDataToDevice:\n      type: object\n      properties:\n        Seq:\n          allOf:\n            - $ref: '#/components/schemas/Seq'\n            - description: The sequence number.\n        MessageType:\n          $ref: '#/components/schemas/MessageType'\n      description: Information about a Sidewalk router.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    TooManyTagsException: {}\n    TestWirelessDeviceResponse:\n      type: object\n      properties:\n        Result:\n          allOf:\n            - $ref: '#/components/schemas/Result'\n            - description: The result returned by the test.\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    UpdateDestinationResponse:\n      type: object\n      properties: {}\n    UpdateLogLevelsByResourceTypesResponse:\n      type: object\n      properties: {}\n    WirelessDeviceLogOption:\n      type: object\n      required:\n        - Type\n        - LogLevel\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceType'\n            - description: The wireless device type.\n        LogLevel:\n          $ref: '#/components/schemas/LogLevel'\n        Events:\n          $ref: '#/components/schemas/WirelessDeviceEventLogOptionList'\n      description: The log options for wireless devices and can be used to set log levels for a specific type of wireless device.\n    WirelessGatewayLogOption:\n      type: object\n      required:\n        - Type\n        - LogLevel\n      properties:\n        Type:\n          $ref: '#/components/schemas/WirelessGatewayType'\n        LogLevel:\n          $ref: '#/components/schemas/LogLevel'\n        Events:\n          $ref: '#/components/schemas/WirelessGatewayEventLogOptionList'\n      description: The log options for wireless gateways and can be used to set log levels for a specific type of wireless gateway.\n    UpdatePartnerAccountResponse:\n      type: object\n      properties: {}\n    UpdateWirelessDeviceResponse:\n      type: object\n      properties: {}\n    UpdateWirelessGatewayResponse:\n      type: object\n      properties: {}\n    JoinEuiRange:\n      type: array\n      description: 'A pair of join EUI describing a range [BegEui, EndEui], both ends are inclusive.'\n      items:\n        $ref: '#/components/schemas/JoinEui'\n      minItems: 2\n      maxItems: 2\n    NetId:\n      type: string\n      pattern: '[a-fA-F0-9]{6}'\n      description: LoRaWAN network ID.\n    DevAddr:\n      type: string\n      pattern: '[a-fA-F0-9]{8}'\n    SessionKeysAbpV1_0_x:\n      type: object\n      properties:\n        NwkSKey:\n          allOf:\n            - $ref: '#/components/schemas/NwkSKey'\n            - description: The NwkSKey value.\n        AppSKey:\n          allOf:\n            - $ref: '#/components/schemas/AppSKey'\n            - description: The AppSKey value.\n      description: Session keys for ABP v1.1\n    SessionKeysAbpV1_1:\n      type: object\n      properties:\n        FNwkSIntKey:\n          allOf:\n            - $ref: '#/components/schemas/FNwkSIntKey'\n            - description: The FNwkSIntKey value.\n        SNwkSIntKey:\n          allOf:\n            - $ref: '#/components/schemas/SNwkSIntKey'\n            - description: The SNwkSIntKey value.\n        NwkSEncKey:\n          allOf:\n            - $ref: '#/components/schemas/NwkSEncKey'\n            - description: The NwkSEncKey value.\n        AppSKey:\n          allOf:\n            - $ref: '#/components/schemas/AppSKey'\n            - description: The AppSKey value.\n      description: Session keys for ABP v1.1\n    AccountLinked:\n      type: boolean\n    AmazonResourceName:\n      type: string\n      minLength: 1\n      maxLength: 1011\n    AppEui:\n      type: string\n      pattern: '[a-fA-F0-9]{16}'\n    AppKey:\n      type: string\n      pattern: '[a-fA-F0-9]{32}'\n    AppSKey:\n      type: string\n      pattern: '[a-fA-F0-9]{32}'\n    SidewalkAccountInfo:\n      type: object\n      properties:\n        AmazonId:\n          allOf:\n            - $ref: '#/components/schemas/AmazonId'\n            - description: The Sidewalk Amazon ID.\n        AppServerPrivateKey:\n          allOf:\n            - $ref: '#/components/schemas/AppServerPrivateKey'\n            - description: The Sidewalk application server private key.\n      description: Information about a Sidewalk account.\n    ClientRequestToken:\n      type: string\n      pattern: '^[a-zA-Z0-9-_]+$'\n      minLength: 1\n      maxLength: 64\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      minItems: 0\n      maxItems: 200\n    AssociateAwsAccountWithPartnerAccountRequest:\n      type: object\n      required:\n        - Sidewalk\n      title: AssociateAwsAccountWithPartnerAccountRequest\n      properties:\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkAccountInfo'\n            - description: The Sidewalk account credentials.\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.\n    PartnerAccountArn:\n      type: string\n    WirelessDeviceId:\n      type: string\n      maxLength: 256\n    ThingArn:\n      type: string\n    AssociateWirelessDeviceWithThingRequest:\n      type: object\n      required:\n        - ThingArn\n      title: AssociateWirelessDeviceWithThingRequest\n      properties:\n        ThingArn:\n          allOf:\n            - $ref: '#/components/schemas/ThingArn'\n            - description: The ARN of the thing to associate with the wireless device.\n    WirelessGatewayId:\n      type: string\n      maxLength: 256\n    IotCertificateId:\n      type: string\n      minLength: 1\n      maxLength: 4096\n    AssociateWirelessGatewayWithCertificateRequest:\n      type: object\n      required:\n        - IotCertificateId\n      title: AssociateWirelessGatewayWithCertificateRequest\n      properties:\n        IotCertificateId:\n          allOf:\n            - $ref: '#/components/schemas/IotCertificateId'\n            - description: The ID of the certificate to associate with the wireless gateway.\n    AssociateWirelessGatewayWithThingRequest:\n      type: object\n      required:\n        - ThingArn\n      title: AssociateWirelessGatewayWithThingRequest\n      properties:\n        ThingArn:\n          allOf:\n            - $ref: '#/components/schemas/ThingArn'\n            - description: The ARN of the thing to associate with the wireless gateway.\n    AutoCreateTasks:\n      type: boolean\n    BatteryLevel:\n      type: string\n      enum:\n        - normal\n        - low\n        - critical\n      description: Sidewalk device battery level.\n    SigningAlg:\n      type: string\n      enum:\n        - Ed25519\n        - P256r1\n      description: The certificate chain algorithm provided by sidewalk.\n    CertificateValue:\n      type: string\n      description: Certificate value.\n      minLength: 0\n      maxLength: 2048\n    CertificateList:\n      type: object\n      required:\n        - SigningAlg\n        - Value\n      properties:\n        SigningAlg:\n          allOf:\n            - $ref: '#/components/schemas/SigningAlg'\n            - description: The certificate chain algorithm provided by sidewalk.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/CertificateValue'\n            - description: The value of the chosen sidewalk certificate.\n      description: List of sidewalk certificates.\n    CertificatePEM:\n      type: string\n      pattern: '[^-A-Za-z0-9\\+/=]\\|=[^=]\\|=\\{3,\\}$\\{1,4096\\}'\n      minLength: 1\n      maxLength: 4096\n    ChannelMask:\n      type: string\n      maxLength: 2048\n    ConnectionStatus:\n      type: string\n      enum:\n        - Connected\n        - Disconnected\n    Crc:\n      type: integer\n      minimum: 1\n      maximum: 4294967295\n    DestinationName:\n      type: string\n      pattern: '[a-zA-Z0-9-_]+'\n      maxLength: 128\n    ExpressionType:\n      type: string\n      enum:\n        - RuleName\n        - MqttTopic\n    Expression:\n      type: string\n      maxLength: 2048\n    Description:\n      type: string\n      maxLength: 2048\n    RoleArn:\n      type: string\n      minLength: 20\n      maxLength: 2048\n    CreateDestinationRequest:\n      type: object\n      required:\n        - Name\n        - ExpressionType\n        - Expression\n        - RoleArn\n      title: CreateDestinationRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DestinationName'\n            - description: The name of the new resource.\n        ExpressionType:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionType'\n            - description: The type of value in \u003ccode\u003eExpression\u003c/code\u003e.\n        Expression:\n          allOf:\n            - $ref: '#/components/schemas/Expression'\n            - description: The rule name or topic rule to send messages to.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the new resource.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The ARN of the IAM Role that authorizes the destination.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to attach to the new destination. Tags are metadata that you can use to manage a resource.\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n    DestinationArn:\n      type: string\n    DeviceProfileName:\n      type: string\n      maxLength: 256\n    LoRaWANDeviceProfile:\n      type: object\n      properties:\n        SupportsClassB:\n          allOf:\n            - $ref: '#/components/schemas/SupportsClassB'\n            - description: The SupportsClassB value.\n        ClassBTimeout:\n          allOf:\n            - $ref: '#/components/schemas/ClassBTimeout'\n            - description: The ClassBTimeout value.\n        PingSlotPeriod:\n          allOf:\n            - $ref: '#/components/schemas/PingSlotPeriod'\n            - description: The PingSlotPeriod value.\n        PingSlotDr:\n          allOf:\n            - $ref: '#/components/schemas/PingSlotDr'\n            - description: The PingSlotDR value.\n        PingSlotFreq:\n          allOf:\n            - $ref: '#/components/schemas/PingSlotFreq'\n            - description: The PingSlotFreq value.\n        SupportsClassC:\n          allOf:\n            - $ref: '#/components/schemas/SupportsClassC'\n            - description: The SupportsClassC value.\n        ClassCTimeout:\n          allOf:\n            - $ref: '#/components/schemas/ClassCTimeout'\n            - description: The ClassCTimeout value.\n        MacVersion:\n          allOf:\n            - $ref: '#/components/schemas/MacVersion'\n            - description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with this device profile.\n        RegParamsRevision:\n          allOf:\n            - $ref: '#/components/schemas/RegParamsRevision'\n            - description: The version of regional parameters.\n        RxDelay1:\n          allOf:\n            - $ref: '#/components/schemas/RxDelay1'\n            - description: The RXDelay1 value.\n        RxDrOffset1:\n          allOf:\n            - $ref: '#/components/schemas/RxDrOffset1'\n            - description: The RXDROffset1 value.\n        RxDataRate2:\n          allOf:\n            - $ref: '#/components/schemas/RxDataRate2'\n            - description: The RXDataRate2 value.\n        RxFreq2:\n          allOf:\n            - $ref: '#/components/schemas/RxFreq2'\n            - description: The RXFreq2 value.\n        FactoryPresetFreqsList:\n          allOf:\n            - $ref: '#/components/schemas/FactoryPresetFreqsList'\n            - description: The list of values that make up the FactoryPresetFreqs value.\n        MaxEirp:\n          allOf:\n            - $ref: '#/components/schemas/MaxEirp'\n            - description: The MaxEIRP value.\n        MaxDutyCycle:\n          allOf:\n            - $ref: '#/components/schemas/MaxDutyCycle'\n            - description: The MaxDutyCycle value.\n        RfRegion:\n          allOf:\n            - $ref: '#/components/schemas/RfRegion'\n            - description: The frequency band (RFRegion) value.\n        SupportsJoin:\n          allOf:\n            - $ref: '#/components/schemas/SupportsJoin'\n            - description: The SupportsJoin value.\n        Supports32BitFCnt:\n          allOf:\n            - $ref: '#/components/schemas/Supports32BitFCnt'\n            - description: The Supports32BitFCnt value.\n      description: LoRaWANDeviceProfile object.\n    CreateDeviceProfileRequest:\n      type: object\n      title: CreateDeviceProfileRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileName'\n            - description: The name of the new resource.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANDeviceProfile'\n            - description: The device profile information to use to create the device profile.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to attach to the new device profile. Tags are metadata that you can use to manage a resource.\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n    DeviceProfileArn:\n      type: string\n    ServiceProfileName:\n      type: string\n      maxLength: 256\n    LoRaWANServiceProfile:\n      type: object\n      properties:\n        AddGwMetadata:\n          allOf:\n            - $ref: '#/components/schemas/AddGwMetadata'\n            - description: The AddGWMetaData value.\n      description: LoRaWANServiceProfile object.\n    CreateServiceProfileRequest:\n      type: object\n      title: CreateServiceProfileRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileName'\n            - description: The name of the new resource.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANServiceProfile'\n            - description: The service profile information to use to create the service profile.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to attach to the new service profile. Tags are metadata that you can use to manage a resource.\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n    ServiceProfileArn:\n      type: string\n    WirelessDeviceType:\n      type: string\n      enum:\n        - Sidewalk\n        - LoRaWAN\n    WirelessDeviceName:\n      type: string\n      maxLength: 256\n    LoRaWANDevice:\n      type: object\n      properties:\n        DevEui:\n          allOf:\n            - $ref: '#/components/schemas/DevEui'\n            - description: The DevEUI value.\n        DeviceProfileId:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileId'\n            - description: The ID of the device profile for the new wireless device.\n        ServiceProfileId:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileId'\n            - description: The ID of the service profile.\n        OtaaV1_1:\n          allOf:\n            - $ref: '#/components/schemas/OtaaV1_1'\n            - description: OTAA device object for v1.1 for create APIs\n        OtaaV1_0_x:\n          allOf:\n            - $ref: '#/components/schemas/OtaaV1_0_x'\n            - description: OTAA device object for create APIs for v1.0.x\n        AbpV1_1:\n          allOf:\n            - $ref: '#/components/schemas/AbpV1_1'\n            - description: ABP device object for create APIs for v1.1\n        AbpV1_0_x:\n          allOf:\n            - $ref: '#/components/schemas/AbpV1_0_x'\n            - description: LoRaWAN object for create APIs\n      description: LoRaWAN object for create functions.\n    CreateWirelessDeviceRequest:\n      type: object\n      required:\n        - Type\n        - DestinationName\n      title: CreateWirelessDeviceRequest\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceType'\n            - description: The wireless device type.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceName'\n            - description: The name of the new resource.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the new resource.\n        DestinationName:\n          allOf:\n            - $ref: '#/components/schemas/DestinationName'\n            - description: The name of the destination to assign to the new wireless device.\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANDevice'\n            - description: The device configuration information to use to create the wireless device.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to attach to the new wireless device. Tags are metadata that you can use to manage a resource.\n    WirelessDeviceArn:\n      type: string\n    WirelessGatewayName:\n      type: string\n      maxLength: 256\n    LoRaWANGateway:\n      type: object\n      properties:\n        GatewayEui:\n          allOf:\n            - $ref: '#/components/schemas/GatewayEui'\n            - description: The gateway's EUI value.\n        RfRegion:\n          allOf:\n            - $ref: '#/components/schemas/RfRegion'\n            - description: The frequency band (RFRegion) value.\n        JoinEuiFilters:\n          $ref: '#/components/schemas/JoinEuiFilters'\n        NetIdFilters:\n          $ref: '#/components/schemas/NetIdFilters'\n        SubBands:\n          $ref: '#/components/schemas/SubBands'\n      description: LoRaWANGateway object.\n    CreateWirelessGatewayRequest:\n      type: object\n      required:\n        - LoRaWAN\n      title: CreateWirelessGatewayRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayName'\n            - description: The name of the new resource.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the new resource.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGateway'\n            - description: The gateway configuration information to use to create the wireless gateway.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to attach to the new wireless gateway. Tags are metadata that you can use to manage a resource.\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n    WirelessGatewayArn:\n      type: string\n    WirelessGatewayTaskName:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    UpdateWirelessGatewayTaskCreate:\n      type: object\n      properties:\n        UpdateDataSource:\n          allOf:\n            - $ref: '#/components/schemas/UpdateDataSource'\n            - description: The link to the S3 bucket.\n        UpdateDataRole:\n          allOf:\n            - $ref: '#/components/schemas/UpdateDataSource'\n            - description: The IAM role used to read data from the S3 bucket.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'\n            - description: The properties that relate to the LoRaWAN wireless gateway.\n      description: UpdateWirelessGatewayTaskCreate object.\n    CreateWirelessGatewayTaskDefinitionRequest:\n      type: object\n      required:\n        - AutoCreateTasks\n      title: CreateWirelessGatewayTaskDefinitionRequest\n      properties:\n        AutoCreateTasks:\n          allOf:\n            - $ref: '#/components/schemas/AutoCreateTasks'\n            - description: 'Whether to automatically create tasks using this task definition for all gateways with the specified current version. If \u003ccode\u003efalse\u003c/code\u003e, the task must me created by calling \u003ccode\u003eCreateWirelessGatewayTask\u003c/code\u003e.'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskName'\n            - description: The name of the new resource.\n        Update:\n          allOf:\n            - $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'\n            - description: Information about the gateways to update.\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. '\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.\n    WirelessGatewayTaskDefinitionId:\n      type: string\n      pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'\n      maxLength: 36\n    WirelessGatewayTaskDefinitionArn:\n      type: string\n    CreateWirelessGatewayTaskRequest:\n      type: object\n      required:\n        - WirelessGatewayTaskDefinitionId\n      title: CreateWirelessGatewayTaskRequest\n      properties:\n        WirelessGatewayTaskDefinitionId:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'\n            - description: The ID of the WirelessGatewayTaskDefinition.\n    WirelessGatewayTaskStatus:\n      type: string\n      enum:\n        - PENDING\n        - IN_PROGRESS\n        - FIRST_RETRY\n        - SECOND_RETRY\n        - COMPLETED\n        - FAILED\n    DeleteDestinationRequest:\n      type: object\n      title: DeleteDestinationRequest\n      properties: {}\n    DeleteDeviceProfileRequest:\n      type: object\n      title: DeleteDeviceProfileRequest\n      properties: {}\n    DeleteServiceProfileRequest:\n      type: object\n      title: DeleteServiceProfileRequest\n      properties: {}\n    DeleteWirelessDeviceRequest:\n      type: object\n      title: DeleteWirelessDeviceRequest\n      properties: {}\n    DeleteWirelessGatewayRequest:\n      type: object\n      title: DeleteWirelessGatewayRequest\n      properties: {}\n    DeleteWirelessGatewayTaskDefinitionRequest:\n      type: object\n      title: DeleteWirelessGatewayTaskDefinitionRequest\n      properties: {}\n    DeleteWirelessGatewayTaskRequest:\n      type: object\n      title: DeleteWirelessGatewayTaskRequest\n      properties: {}\n    Destinations:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/DestinationArn'\n            - description: The Amazon Resource Name of the resource.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DestinationName'\n            - description: The name of the resource.\n        ExpressionType:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionType'\n            - description: The type of value in \u003ccode\u003eExpression\u003c/code\u003e.\n        Expression:\n          allOf:\n            - $ref: '#/components/schemas/Expression'\n            - description: The rule name or topic rule to send messages to.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the resource.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The ARN of the IAM Role that authorizes the destination.\n      description: Describes a destination.\n    DestinationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Destinations'\n    DevStatusReqFreq:\n      type: integer\n      minimum: 0\n      maximum: 2147483647\n    DeviceCertificateList:\n      type: array\n      description: List of device certificate chain.\n      items:\n        $ref: '#/components/schemas/CertificateList'\n    DeviceProfile:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileArn'\n            - description: The Amazon Resource Name of the resource.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileName'\n            - description: The name of the resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileId'\n            - description: The ID of the device profile.\n      description: Describes a device profile.\n    DeviceProfileList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeviceProfile'\n    DeviceState:\n      type: string\n      enum:\n        - Provisioned\n        - RegisteredNotSeen\n        - RegisteredReachable\n        - RegisteredUnreachable\n      description: Device state defines the device status of sidewalk device.\n    PartnerAccountId:\n      type: string\n      maxLength: 256\n    PartnerType:\n      type: string\n      enum:\n        - Sidewalk\n    DisassociateAwsAccountFromPartnerAccountRequest:\n      type: object\n      title: DisassociateAwsAccountFromPartnerAccountRequest\n      properties: {}\n    DisassociateWirelessDeviceFromThingRequest:\n      type: object\n      title: DisassociateWirelessDeviceFromThingRequest\n      properties: {}\n    DisassociateWirelessGatewayFromCertificateRequest:\n      type: object\n      title: DisassociateWirelessGatewayFromCertificateRequest\n      properties: {}\n    DisassociateWirelessGatewayFromThingRequest:\n      type: object\n      title: DisassociateWirelessGatewayFromThingRequest\n      properties: {}\n    DlBucketSize:\n      type: integer\n      minimum: 0\n      maximum: 2147483647\n    DlRate:\n      type: integer\n      minimum: 0\n      maximum: 2147483647\n    DlRatePolicy:\n      type: string\n      maxLength: 256\n    Double:\n      type: number\n      format: double\n    DrMax:\n      type: integer\n      minimum: 0\n      maximum: 15\n    DrMin:\n      type: integer\n      minimum: 0\n      maximum: 15\n    EndPoint:\n      type: string\n      minLength: 1\n      maxLength: 256\n    Event:\n      type: string\n      enum:\n        - discovered\n        - lost\n        - ack\n        - nack\n        - passthrough\n      description: Sidewalk device status notification.\n    FNwkSIntKey:\n      type: string\n      pattern: '[a-fA-F0-9]{32}'\n    FPort:\n      type: integer\n      minimum: 1\n      maximum: 223\n    PresetFreq:\n      type: integer\n      minimum: 1000000\n      maximum: 16700000\n    Fingerprint:\n      type: string\n      pattern: '[a-fA-F0-9]{64}'\n      minLength: 64\n      maxLength: 64\n      format: password\n    GetDestinationRequest:\n      type: object\n      title: GetDestinationRequest\n      properties: {}\n    GetDeviceProfileRequest:\n      type: object\n      title: GetDeviceProfileRequest\n      properties: {}\n    GetLogLevelsByResourceTypesRequest:\n      type: object\n      title: GetLogLevelsByResourceTypesRequest\n      properties: {}\n    LogLevel:\n      type: string\n      enum:\n        - INFO\n        - ERROR\n        - DISABLED\n      description: The log level for a log message.\n    WirelessGatewayLogOptionList:\n      type: array\n      description: The list of wireless gateway log options.\n      items:\n        $ref: '#/components/schemas/WirelessGatewayLogOption'\n    WirelessDeviceLogOptionList:\n      type: array\n      description: The list of wireless device log options.\n      items:\n        $ref: '#/components/schemas/WirelessDeviceLogOption'\n    GetPartnerAccountRequest:\n      type: object\n      title: GetPartnerAccountRequest\n      properties: {}\n    SidewalkAccountInfoWithFingerprint:\n      type: object\n      properties:\n        AmazonId:\n          allOf:\n            - $ref: '#/components/schemas/AmazonId'\n            - description: The Sidewalk Amazon ID.\n        Fingerprint:\n          allOf:\n            - $ref: '#/components/schemas/Fingerprint'\n            - description: The fingerprint of the Sidewalk application server private key.\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/PartnerAccountArn'\n            - description: The Amazon Resource Name of the resource.\n      description: Information about a Sidewalk account.\n    ResourceIdentifier:\n      type: string\n      description: 'The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.'\n      maxLength: 256\n    ResourceType:\n      type: string\n    GetResourceLogLevelRequest:\n      type: object\n      title: GetResourceLogLevelRequest\n      properties: {}\n    WirelessGatewayServiceType:\n      type: string\n      enum:\n        - CUPS\n        - LNS\n    GetServiceEndpointRequest:\n      type: object\n      title: GetServiceEndpointRequest\n      properties: {}\n    GetServiceProfileRequest:\n      type: object\n      title: GetServiceProfileRequest\n      properties: {}\n    LoRaWANGetServiceProfileInfo:\n      type: object\n      properties:\n        UlRate:\n          allOf:\n            - $ref: '#/components/schemas/UlRate'\n            - description: The ULRate value.\n        UlBucketSize:\n          allOf:\n            - $ref: '#/components/schemas/UlBucketSize'\n            - description: The ULBucketSize value.\n        UlRatePolicy:\n          allOf:\n            - $ref: '#/components/schemas/UlRatePolicy'\n            - description: The ULRatePolicy value.\n        DlRate:\n          allOf:\n            - $ref: '#/components/schemas/DlRate'\n            - description: The DLRate value.\n        DlBucketSize:\n          allOf:\n            - $ref: '#/components/schemas/DlBucketSize'\n            - description: The DLBucketSize value.\n        DlRatePolicy:\n          allOf:\n            - $ref: '#/components/schemas/DlRatePolicy'\n            - description: The DLRatePolicy value.\n        AddGwMetadata:\n          allOf:\n            - $ref: '#/components/schemas/AddGwMetadata'\n            - description: The AddGWMetaData value.\n        DevStatusReqFreq:\n          allOf:\n            - $ref: '#/components/schemas/DevStatusReqFreq'\n            - description: The DevStatusReqFreq value.\n        ReportDevStatusBattery:\n          allOf:\n            - $ref: '#/components/schemas/ReportDevStatusBattery'\n            - description: The ReportDevStatusBattery value.\n        ReportDevStatusMargin:\n          allOf:\n            - $ref: '#/components/schemas/ReportDevStatusMargin'\n            - description: The ReportDevStatusMargin value.\n        DrMin:\n          allOf:\n            - $ref: '#/components/schemas/DrMin'\n            - description: The DRMin value.\n        DrMax:\n          allOf:\n            - $ref: '#/components/schemas/DrMax'\n            - description: The DRMax value.\n        ChannelMask:\n          allOf:\n            - $ref: '#/components/schemas/ChannelMask'\n            - description: The ChannelMask value.\n        PrAllowed:\n          allOf:\n            - $ref: '#/components/schemas/PrAllowed'\n            - description: The PRAllowed value that describes whether passive roaming is allowed.\n        HrAllowed:\n          allOf:\n            - $ref: '#/components/schemas/HrAllowed'\n            - description: The HRAllowed value that describes whether handover roaming is allowed.\n        RaAllowed:\n          allOf:\n            - $ref: '#/components/schemas/RaAllowed'\n            - description: The RAAllowed value that describes whether roaming activation is allowed.\n        NwkGeoLoc:\n          allOf:\n            - $ref: '#/components/schemas/NwkGeoLoc'\n            - description: The NwkGeoLoc value.\n        TargetPer:\n          allOf:\n            - $ref: '#/components/schemas/TargetPer'\n            - description: The TargetPER value.\n        MinGwDiversity:\n          allOf:\n            - $ref: '#/components/schemas/MinGwDiversity'\n            - description: The MinGwDiversity value.\n      description: LoRaWANGetServiceProfileInfo object.\n    Identifier:\n      type: string\n      maxLength: 256\n    WirelessDeviceIdType:\n      type: string\n      enum:\n        - WirelessDeviceId\n        - DevEui\n        - ThingName\n        - SidewalkManufacturingSn\n    GetWirelessDeviceRequest:\n      type: object\n      title: GetWirelessDeviceRequest\n      properties: {}\n    ThingName:\n      type: string\n    SidewalkDevice:\n      type: object\n      properties:\n        AmazonId:\n          $ref: '#/components/schemas/AmazonId'\n        SidewalkId:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkId'\n            - description: The sidewalk device identification.\n        SidewalkManufacturingSn:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkManufacturingSn'\n            - description: The Sidewalk manufacturing series number.\n        DeviceCertificates:\n          allOf:\n            - $ref: '#/components/schemas/DeviceCertificateList'\n            - description: The sidewalk device certificates for Ed25519 and P256r1.\n      description: Sidewalk device object.\n    GetWirelessDeviceStatisticsRequest:\n      type: object\n      title: GetWirelessDeviceStatisticsRequest\n      properties: {}\n    ISODateTimeString:\n      type: string\n      pattern: '^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$'\n    LoRaWANDeviceMetadata:\n      type: object\n      properties:\n        DevEui:\n          allOf:\n            - $ref: '#/components/schemas/DevEui'\n            - description: The DevEUI value.\n        FPort:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The FPort value.\n        DataRate:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The DataRate value.\n        Frequency:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The device's channel frequency in Hz.\n        Timestamp:\n          allOf:\n            - $ref: '#/components/schemas/ISODateTimeString'\n            - description: The date and time of the metadata.\n        Gateways:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGatewayMetadataList'\n            - description: Information about the gateways accessed by the device.\n      description: LoRaWAN device metatdata.\n    SidewalkDeviceMetadata:\n      type: object\n      properties:\n        Rssi:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The RSSI value.\n        BatteryLevel:\n          allOf:\n            - $ref: '#/components/schemas/BatteryLevel'\n            - description: Sidewalk device battery level.\n        Event:\n          allOf:\n            - $ref: '#/components/schemas/Event'\n            - description: Sidewalk device status notification.\n        DeviceState:\n          allOf:\n            - $ref: '#/components/schemas/DeviceState'\n            - description: Device state defines the device status of sidewalk device.\n      description: MetaData for Sidewalk device.\n    GetWirelessGatewayCertificateRequest:\n      type: object\n      title: GetWirelessGatewayCertificateRequest\n      properties: {}\n    GetWirelessGatewayFirmwareInformationRequest:\n      type: object\n      title: GetWirelessGatewayFirmwareInformationRequest\n      properties: {}\n    LoRaWANGatewayCurrentVersion:\n      type: object\n      properties:\n        CurrentVersion:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGatewayVersion'\n            - description: The version of the gateways that should receive the update.\n      description: LoRaWANGatewayCurrentVersion object.\n    WirelessGatewayIdType:\n      type: string\n      enum:\n        - GatewayEui\n        - WirelessGatewayId\n        - ThingName\n    GetWirelessGatewayRequest:\n      type: object\n      title: GetWirelessGatewayRequest\n      properties: {}\n    GetWirelessGatewayStatisticsRequest:\n      type: object\n      title: GetWirelessGatewayStatisticsRequest\n      properties: {}\n    GetWirelessGatewayTaskDefinitionRequest:\n      type: object\n      title: GetWirelessGatewayTaskDefinitionRequest\n      properties: {}\n    GetWirelessGatewayTaskRequest:\n      type: object\n      title: GetWirelessGatewayTaskRequest\n      properties: {}\n    HrAllowed:\n      type: boolean\n    Integer:\n      type: integer\n    JoinEui:\n      type: string\n      pattern: '[a-fA-F0-9]{16}'\n    MaxResults:\n      type: integer\n      minimum: 0\n      maximum: 250\n    NextToken:\n      type: string\n      maxLength: 4096\n    ListDestinationsRequest:\n      type: object\n      title: ListDestinationsRequest\n      properties: {}\n    ListDeviceProfilesRequest:\n      type: object\n      title: ListDeviceProfilesRequest\n      properties: {}\n    ListPartnerAccountsRequest:\n      type: object\n      title: ListPartnerAccountsRequest\n      properties: {}\n    SidewalkAccountList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'\n    ListServiceProfilesRequest:\n      type: object\n      title: ListServiceProfilesRequest\n      properties: {}\n    ServiceProfileList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceProfile'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    ListWirelessDevicesRequest:\n      type: object\n      title: ListWirelessDevicesRequest\n      properties: {}\n    WirelessDeviceStatisticsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/WirelessDeviceStatistics'\n    WirelessGatewayTaskDefinitionType:\n      type: string\n      enum:\n        - UPDATE\n    ListWirelessGatewayTaskDefinitionsRequest:\n      type: object\n      title: ListWirelessGatewayTaskDefinitionsRequest\n      properties: {}\n    WirelessGatewayTaskDefinitionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/UpdateWirelessGatewayTaskEntry'\n    ListWirelessGatewaysRequest:\n      type: object\n      title: ListWirelessGatewaysRequest\n      properties: {}\n    WirelessGatewayStatisticsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/WirelessGatewayStatistics'\n    LoRaWANGatewayMetadataList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LoRaWANGatewayMetadata'\n    LoRaWANGatewayVersion:\n      type: object\n      properties:\n        PackageVersion:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersion'\n            - description: The version of the wireless gateway firmware.\n        Model:\n          allOf:\n            - $ref: '#/components/schemas/Model'\n            - description: The model number of the wireless gateway.\n        Station:\n          allOf:\n            - $ref: '#/components/schemas/Station'\n            - description: The basic station version of the wireless gateway.\n      description: LoRaWANGatewayVersion object.\n    LoRaWANGatewayMetadata:\n      type: object\n      properties:\n        GatewayEui:\n          allOf:\n            - $ref: '#/components/schemas/GatewayEui'\n            - description: The gateway's EUI value.\n        Snr:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: The SNR value.\n        Rssi:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: The RSSI value.\n      description: LoRaWAN gateway metatdata.\n    PackageVersion:\n      type: string\n      minLength: 1\n      maxLength: 32\n    Model:\n      type: string\n      minLength: 1\n      maxLength: 4096\n    Station:\n      type: string\n      minLength: 1\n      maxLength: 4096\n    UlRate:\n      type: integer\n      minimum: 0\n      maximum: 2147483647\n    UlBucketSize:\n      type: integer\n      minimum: 0\n      maximum: 2147483647\n    UlRatePolicy:\n      type: string\n      maxLength: 256\n    ReportDevStatusBattery:\n      type: boolean\n    ReportDevStatusMargin:\n      type: boolean\n    PrAllowed:\n      type: boolean\n    RaAllowed:\n      type: boolean\n    NwkGeoLoc:\n      type: boolean\n    TargetPer:\n      type: integer\n      minimum: 0\n      maximum: 100\n    MinGwDiversity:\n      type: integer\n      minimum: 1\n      maximum: 100\n    LoRaWANListDevice:\n      type: object\n      properties:\n        DevEui:\n          allOf:\n            - $ref: '#/components/schemas/DevEui'\n            - description: The DevEUI value.\n      description: LoRaWAN object for list functions.\n    LoRaWANUpdateDevice:\n      type: object\n      properties:\n        DeviceProfileId:\n          allOf:\n            - $ref: '#/components/schemas/DeviceProfileId'\n            - description: The ID of the device profile for the wireless device.\n        ServiceProfileId:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileId'\n            - description: The ID of the service profile.\n      description: LoRaWAN object for update functions.\n    UpdateSignature:\n      type: string\n      minLength: 1\n      maxLength: 4096\n    LoRaWANUpdateGatewayTaskEntry:\n      type: object\n      properties:\n        CurrentVersion:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGatewayVersion'\n            - description: The version of the gateways that should receive the update.\n        UpdateVersion:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGatewayVersion'\n            - description: The firmware version to update the gateway to.\n      description: LoRaWANUpdateGatewayTaskEntry object.\n    MessageId:\n      type: string\n    MessageType:\n      type: string\n      enum:\n        - CUSTOM_COMMAND_ID_NOTIFY\n        - CUSTOM_COMMAND_ID_GET\n        - CUSTOM_COMMAND_ID_SET\n        - CUSTOM_COMMAND_ID_RESP\n      description: Sidewalk device message type. Default value is \u003ccode\u003eCUSTOM_COMMAND_ID_NOTIFY\u003c/code\u003e.\n    NwkKey:\n      type: string\n      pattern: '[a-fA-F0-9]{32}'\n    NwkSEncKey:\n      type: string\n      pattern: '[a-fA-F0-9]{32}'\n    NwkSKey:\n      type: string\n      pattern: '[a-fA-F0-9]{32}'\n    PayloadData:\n      type: string\n      pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'\n      maxLength: 2048\n    PutResourceLogLevelRequest:\n      type: object\n      required:\n        - LogLevel\n      title: PutResourceLogLevelRequest\n      properties:\n        LogLevel:\n          $ref: '#/components/schemas/LogLevel'\n    ResetAllResourceLogLevelsRequest:\n      type: object\n      title: ResetAllResourceLogLevelsRequest\n      properties: {}\n    ResetResourceLogLevelRequest:\n      type: object\n      title: ResetResourceLogLevelRequest\n      properties: {}\n    Result:\n      type: string\n      maxLength: 2048\n    SNwkSIntKey:\n      type: string\n      pattern: '[a-fA-F0-9]{32}'\n    TransmitMode:\n      type: integer\n      minimum: 0\n      maximum: 1\n    WirelessMetadata:\n      type: object\n      properties:\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANSendDataToDevice'\n            - description: LoRaWAN device info.\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkSendDataToDevice'\n            - description: The Sidewalk account credentials.\n      description: WirelessMetadata object.\n    SendDataToWirelessDeviceRequest:\n      type: object\n      required:\n        - TransmitMode\n        - PayloadData\n      title: SendDataToWirelessDeviceRequest\n      properties:\n        TransmitMode:\n          allOf:\n            - $ref: '#/components/schemas/TransmitMode'\n            - description: 'The transmit mode to use to send data to the wireless device. Can be: \u003ccode\u003e0\u003c/code\u003e for UM (unacknowledge mode) or \u003ccode\u003e1\u003c/code\u003e for AM (acknowledge mode).'\n        PayloadData:\n          allOf:\n            - $ref: '#/components/schemas/PayloadData'\n            - description: 'The binary to be sent to the end device, encoded in base64.'\n        WirelessMetadata:\n          allOf:\n            - $ref: '#/components/schemas/WirelessMetadata'\n            - description: Metadata about the message request.\n    Seq:\n      type: integer\n      minimum: 0\n      maximum: 16383\n    ServiceProfile:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileArn'\n            - description: The Amazon Resource Name of the resource.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileName'\n            - description: The name of the resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/ServiceProfileId'\n            - description: The ID of the service profile.\n      description: Information about a service profile.\n    SidewalkId:\n      type: string\n      description: The sidewalk device identification.\n      maxLength: 256\n    SidewalkManufacturingSn:\n      type: string\n      maxLength: 64\n    SidewalkListDevice:\n      type: object\n      properties:\n        AmazonId:\n          allOf:\n            - $ref: '#/components/schemas/AmazonId'\n            - description: The Sidewalk Amazon ID.\n        SidewalkId:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkId'\n            - description: The sidewalk device identification.\n        SidewalkManufacturingSn:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkManufacturingSn'\n            - description: The Sidewalk manufacturing series number.\n        DeviceCertificates:\n          allOf:\n            - $ref: '#/components/schemas/DeviceCertificateList'\n            - description: The sidewalk device certificates for Ed25519 and P256r1.\n      description: Sidewalk object used by list functions.\n    SidewalkUpdateAccount:\n      type: object\n      properties:\n        AppServerPrivateKey:\n          allOf:\n            - $ref: '#/components/schemas/AppServerPrivateKey'\n            - description: The new Sidewalk application server private key.\n      description: Sidewalk update.\n    SubBand:\n      type: integer\n      description: A subset of supported frequency channels in a certain RFRegion.\n      minimum: 1\n      maximum: 8\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 0\n      maxItems: 200\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: Adds to or modifies the tags of the given resource. Tags are metadata that you can use to manage a resource.\n    TestWirelessDeviceRequest:\n      type: object\n      title: TestWirelessDeviceRequest\n      properties: {}\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateDestinationRequest:\n      type: object\n      title: UpdateDestinationRequest\n      properties:\n        ExpressionType:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionType'\n            - description: The type of value in \u003ccode\u003eExpression\u003c/code\u003e.\n        Expression:\n          allOf:\n            - $ref: '#/components/schemas/Expression'\n            - description: The new rule name or topic rule to send messages to.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A new description of the resource.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/RoleArn'\n            - description: The ARN of the IAM Role that authorizes the destination.\n    UpdateLogLevelsByResourceTypesRequest:\n      type: object\n      title: UpdateLogLevelsByResourceTypesRequest\n      properties:\n        DefaultLogLevel:\n          $ref: '#/components/schemas/LogLevel'\n        WirelessDeviceLogOptions:\n          $ref: '#/components/schemas/WirelessDeviceLogOptionList'\n        WirelessGatewayLogOptions:\n          $ref: '#/components/schemas/WirelessGatewayLogOptionList'\n    UpdatePartnerAccountRequest:\n      type: object\n      required:\n        - Sidewalk\n      title: UpdatePartnerAccountRequest\n      properties:\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkUpdateAccount'\n            - description: The Sidewalk account credentials.\n    UpdateWirelessDeviceRequest:\n      type: object\n      title: UpdateWirelessDeviceRequest\n      properties:\n        DestinationName:\n          allOf:\n            - $ref: '#/components/schemas/DestinationName'\n            - description: The name of the new destination for the device.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceName'\n            - description: The new name of the resource.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A new description of the resource.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANUpdateDevice'\n            - description: The updated wireless device's configuration.\n    UpdateWirelessGatewayRequest:\n      type: object\n      title: UpdateWirelessGatewayRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayName'\n            - description: The new name of the resource.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A new description of the resource.\n        JoinEuiFilters:\n          $ref: '#/components/schemas/JoinEuiFilters'\n        NetIdFilters:\n          $ref: '#/components/schemas/NetIdFilters'\n    UpdateWirelessGatewayTaskEntry:\n      type: object\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'\n            - description: The ID of the new wireless gateway task entry.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskEntry'\n            - description: The properties that relate to the LoRaWAN wireless gateway.\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'\n            - description: The Amazon Resource Name of the resource.\n      description: UpdateWirelessGatewayTaskEntry object.\n    WirelessDeviceEvent:\n      type: string\n      enum:\n        - Join\n        - Rejoin\n        - Uplink_Data\n        - Downlink_Data\n        - Registration\n      description: 'The event for a log message, if the log message is tied to a wireless device.'\n    WirelessDeviceEventLogOption:\n      type: object\n      required:\n        - Event\n        - LogLevel\n      properties:\n        Event:\n          $ref: '#/components/schemas/WirelessDeviceEvent'\n        LogLevel:\n          $ref: '#/components/schemas/LogLevel'\n      description: '\u003cp\u003eThe log options for a wireless device event and can be used to set log levels for a specific wireless device event.\u003c/p\u003e \u003cp\u003eFor a LoRaWAN device, possible events for a log messsage are: \u003ccode\u003eJoin\u003c/code\u003e, \u003ccode\u003eRejoin\u003c/code\u003e, \u003ccode\u003eDownlink_Data\u003c/code\u003e, and \u003ccode\u003eUplink_Data\u003c/code\u003e. For a Sidewalk device, possible events for a log message are \u003ccode\u003eRegistration\u003c/code\u003e, \u003ccode\u003eDownlink_Data\u003c/code\u003e, and \u003ccode\u003eUplink_Data\u003c/code\u003e.\u003c/p\u003e'\n    WirelessDeviceEventLogOptionList:\n      type: array\n      description: The list of wireless device event log options.\n      items:\n        $ref: '#/components/schemas/WirelessDeviceEventLogOption'\n    WirelessDeviceStatistics:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceArn'\n            - description: The Amazon Resource Name of the resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceId'\n            - description: The ID of the wireless device reporting the data.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceType'\n            - description: The wireless device type.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessDeviceName'\n            - description: The name of the resource.\n        DestinationName:\n          allOf:\n            - $ref: '#/components/schemas/DestinationName'\n            - description: The name of the destination to which the device is assigned.\n        LastUplinkReceivedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISODateTimeString'\n            - description: The date and time when the most recent uplink was received.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANListDevice'\n            - description: LoRaWAN device info.\n        Sidewalk:\n          allOf:\n            - $ref: '#/components/schemas/SidewalkListDevice'\n            - description: The Sidewalk account credentials.\n      description: Information about a wireless device's operation.\n    WirelessGatewayEvent:\n      type: string\n      enum:\n        - CUPS_Request\n        - Certificate\n      description: 'The event for a log message, if the log message is tied to a wireless gateway.'\n    WirelessGatewayEventLogOption:\n      type: object\n      required:\n        - Event\n        - LogLevel\n      properties:\n        Event:\n          $ref: '#/components/schemas/WirelessGatewayEvent'\n        LogLevel:\n          $ref: '#/components/schemas/LogLevel'\n      description: '\u003cp\u003eThe log options for a wireless gateway event and can be used to set log levels for a specific wireless gateway event.\u003c/p\u003e \u003cp\u003eFor a LoRaWAN gateway, possible events for a log message are \u003ccode\u003eCUPS_Request\u003c/code\u003e and \u003ccode\u003eCertificate\u003c/code\u003e.\u003c/p\u003e'\n    WirelessGatewayEventLogOptionList:\n      type: array\n      description: The list of wireless gateway event log options.\n      items:\n        $ref: '#/components/schemas/WirelessGatewayEventLogOption'\n    WirelessGatewayType:\n      type: string\n      enum:\n        - LoRaWAN\n      description: The wireless gateway type.\n    WirelessGatewayStatistics:\n      type: object\n      properties:\n        Arn:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayArn'\n            - description: The Amazon Resource Name of the resource.\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayId'\n            - description: The ID of the wireless gateway reporting the data.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/WirelessGatewayName'\n            - description: The name of the resource.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the resource.\n        LoRaWAN:\n          allOf:\n            - $ref: '#/components/schemas/LoRaWANGateway'\n            - description: LoRaWAN gateway info.\n        LastUplinkReceivedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISODateTimeString'\n            - description: The date and time when the most recent uplink was received.\n      description: Information about a wireless gateway's operation.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/amazonaws.com/iotwireless/2020-11-22/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/amazonaws.com/iotwireless/2020-11-22/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /partner-accounts/{PartnerAccountId}#partnerType: get: operation \"GetPartnerAccount\": parse path \"/partner-accounts/{PartnerAccountId}#partnerType\": path MUST NOT contain a fragment"
}