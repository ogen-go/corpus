{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pill-city/server"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 14586,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.pill.city/api\n    description: Production\n  - url: http://localhost:5000/api\n    description: Development\ninfo:\n  description: API for an one-of-a-kind social network\n  version: 0.0.1\n  title: Pill.City\n  contact:\n    email: feedback@pill.city\npaths:\n  /signIn:\n    post:\n      summary: Sign in\n      operationId: signIn\n      security: []\n      tags: [\"core\"]\n      requestBody:\n        $ref: '#/components/requestBodies/SignInRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/SignInSuccessfulResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n  /availablePlugins:\n    get:\n      summary: Get all available plugins\n      operationId: getAvailablePlugins\n      security: []\n      tags: [ \"core\" ]\n      responses:\n        '200':\n          description: Successfully got all available plugins\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                example: [\"cloudemoticon\"]\n  /home:\n    get:\n      summary: Get or poll latest home posts\n      operationId: getHome\n      tags: [ \"core\" ]\n      parameters:\n        - in: query\n          name: to_id\n          schema:\n            type: string\n          description: To which post ID should the server poll latest posts on home. If both to_id and from_id are present, to_id will take precedence.\n        - in: query\n          name: from_id\n          schema:\n            type: string\n          description: From which post ID should the server fetch posts on home. If empty, the server will fetch the latest posts.\n      responses:\n        '200':\n          description: Successfully got or polled home posts\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Post'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n  /me:\n    get:\n      summary: Get the logged in user\n      operationId: getMe\n      tags: [ \"core\" ]\n      responses:\n        '200':\n          description: Successfully got the loggined in user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n  /plugins:\n    get:\n      summary: Get plugins enabled by the user\n      operationId: getPlugins\n      tags: [ \"core\" ]\n      responses:\n        '200':\n          description: Successfully got list enabled plugins\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                example: [\"cloudemoticon\"]\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n  /plugin/cloudemoticon/emoticons:\n    get:\n      summary: Get emoticons\n      operationId: getEmoticons\n      security: [ ]\n      tags: [\"plugins\"]\n      responses:\n        '200':\n          description: Successfully got emoticons\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudEmoticonRepo'\ncomponents:\n  schemas:\n    User:\n      required:\n        - id\n        - created_at_seconds\n      properties:\n        id:\n          type: string\n          description: The permanent short ID for the user\n          example: kt\n        created_at_seconds:\n          type: number\n          description: In epoch seconds, when the user signed up\n          example: 1631528113\n        avatar_url:\n          type: string\n          description: URL to the user's avatar\n          format: url\n          example: https://pill-city.s3.us-west-2.amazonaws.com/avatars/kt-1646414449.png\n          default: null\n        profile_pic:\n          type: string\n          description: User's choice of profile banner. The choices are defined on web frontend.\n          example: pill1.png\n          default: pill1.png\n        display_name:\n          type: string\n          description: User's displayed/regular name. Can be changed.\n          example: KT ‰∏ÄËôüÊ©ü\n          default: null\n      type: object\n    ResharedPost:\n      required:\n        - id\n        - created_at_seconds\n        - author\n      properties:\n        id:\n          type: string\n          description: Permanent ID for the reshared post\n          example: a3137edb-e629-49ac-b1f1-3343fd97329c\n        created_at_seconds:\n          type: number\n          description: In epoch seconds, when the reshared post was created\n        author:\n          $ref: '#/components/schemas/User'\n        content:\n          type: string\n          description: Text content for the reshared post\n          example: Hello, World!\n          default: ''\n        media_urls:\n          type: array\n          description: URLs for the reshared post's media\n          items:\n            type: string\n          example: [\"https://pill-city.s3.us-west-2.amazonaws.com/avatars/kt-1646414449.png\", \"https://pill-city.s3.us-west-2.amazonaws.com/avatars/ika-1631578.png\"]\n          default: []\n        deleted:\n          type: boolean\n          description: Whether the reshared post is deleted\n          default: false\n    NestedComment:\n      required:\n        - id\n        - created_at_seconds\n        - author\n      properties:\n        id:\n          type: string\n          description: Permanent ID for the nested comment\n          example: a3137edb-e629-49ac-b1f1-3343fd97329c\n        created_at_seconds:\n          type: number\n          description: In epoch seconds, when the nested comment was created\n        author:\n          $ref: '#/components/schemas/User'\n        content:\n          type: string\n          description: Text content for the nested comment\n          example: Hello, World!\n          default: ''\n        media_urls:\n          type: array\n          description: URLs for the nested comment's media\n          items:\n            type: string\n          example: [\"https://pill-city.s3.us-west-2.amazonaws.com/avatars/kt-1646414449.png\", \"https://pill-city.s3.us-west-2.amazonaws.com/avatars/ika-1631578.png\"]\n          default: []\n        deleted:\n          type: boolean\n          description: Whether the nested comment is deleted\n          default: false\n    Comment:\n      required:\n        - id\n        - created_at_seconds\n        - author\n      properties:\n        id:\n          type: string\n          description: Permanent ID for the comment\n          example: a3137edb-e629-49ac-b1f1-3343fd97329c\n        created_at_seconds:\n          type: number\n          description: In epoch seconds, when the comment was created\n        author:\n          $ref: '#/components/schemas/User'\n        content:\n          type: string\n          description: Text content for the comment\n          example: Hello, World!\n          default: ''\n        media_urls:\n          type: array\n          description: URLs for the comment's media\n          items:\n            type: string\n          example: [\"https://pill-city.s3.us-west-2.amazonaws.com/avatars/kt-1646414449.png\", \"https://pill-city.s3.us-west-2.amazonaws.com/avatars/ika-1631578.png\"]\n          default: []\n        deleted:\n          type: boolean\n          description: Whether the comment is deleted\n          default: false\n        comments:\n          type: array\n          description: Nested comments for the comment\n          items:\n            $ref: '#/components/schemas/NestedComment'\n    Circle:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          description: Permanent ID for the circle\n          example: a3137edb-e629-49ac-b1f1-3343fd97329c\n        name:\n          type: string\n          description: Circle name\n          example: ÂúàÂ≠ê\n    Reaction:\n      required:\n        - id\n        - emoji\n        - author\n      properties:\n        id:\n          type: string\n          description: Permanent ID for the reaction\n          example: a3137edb-e629-49ac-b1f1-3343fd97329c\n        emoji:\n          type: string\n          description: Emoji for the reaction\n          example: üí©\n        author:\n          $ref: '#/components/schemas/User'\n    PollChoice:\n      required:\n        - id\n        - content\n        - media\n      properties:\n        id:\n          type: string\n          description: Permanent ID for the poll choice\n          example: a3137edb-e629-49ac-b1f1-3343fd97329c\n        content:\n          type: string\n          description: Text content for the poll choice\n          example: Choice 1\n        media:\n          type: string\n          format: url\n          description: URL for the poll choice's media\n          example: https://pill-city.s3.us-west-2.amazonaws.com/avatars/kt-1646414449.png\n        voters:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n          description: User who have voted for this poll choice\n    Poll:\n      properties:\n        choices:\n          type: array\n          items:\n            $ref: '#/components/schemas/PollChoice'\n          description: Choices for this poll\n        close_by_seconds:\n          type: number\n          description: In epoch seconds, by when this poll will close. Default 0 meaning the poll will never close.\n          default: 0\n    Post:\n      required:\n        - id\n        - created_at_seconds\n        - author\n        - is_public\n      properties:\n        id:\n          type: string\n          description: Permanent ID for the post\n          example: a3137edb-e629-49ac-b1f1-3343fd97329c\n        created_at_seconds:\n          type: number\n          description: In epoch seconds, when the post was created\n        author:\n          $ref: '#/components/schemas/User'\n        content:\n          type: string\n          description: Text content for the post\n          example: Hello, World!\n          default: ''\n        is_public:\n          type: boolean\n          description: Whether the post is publicly accessible on the server\n          example: true\n        reshareable:\n          type: boolean\n          description: Whether the post is publicly reshareable on the server\n          example: true\n          default: false\n        reshared_from:\n          nullable: true\n          allOf:\n            - $ref: '#/components/schemas/ResharedPost'\n        media_urls:\n          type: array\n          description: URLs for the post's media\n          items:\n            type: string\n          example: [\"https://pill-city.s3.us-west-2.amazonaws.com/avatars/kt-1646414449.png\", \"https://pill-city.s3.us-west-2.amazonaws.com/avatars/ika-1631578.png\"]\n          default: []\n        reactions:\n          type: array\n          description: Reactions for the post\n          items:\n            $ref: '#/components/schemas/Reaction'\n        comments:\n          type: array\n          description: Comments for the post\n          items:\n            $ref: '#/components/schemas/Comment'\n        circles:\n          type: array\n          description: Circles that the post is published in\n          items:\n            $ref: '#/components/schemas/Circle'\n        deleted:\n          type: boolean\n          description: Whether the post is deleted\n          default: false\n        is_update_avatar:\n          type: boolean\n          description: Whether the post is an update avatar post\n          default: false\n        poll:\n          nullable: true\n          allOf:\n            - $ref: '#/components/schemas/Poll'\n    Message:\n      required:\n        - msg\n      properties:\n        msg:\n          type: string\n          description: This is a message\n          example: Human readable message\n    CloudEmoticonEntry:\n      required:\n        - description\n        - emoticon\n      properties:\n        emoticon:\n          type: string\n          description: The emoticon\n          example: („Éª8„Éª)\n        description:\n          type: string\n          description: Description for the emoticon\n          example: „Åì„Å®„Çä\n    CloudEmoticonCategory:\n      required:\n        - name\n        - entries\n      properties:\n        name:\n          type: string\n          description: The category name\n          example: G+ÈÉΩ‰∫°‰∫Ü\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/CloudEmoticonEntry'\n          description: Emoticon entries for the category\n    CloudEmoticonRepo:\n      required:\n        - categories\n        - information\n      properties:\n        categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/CloudEmoticonCategory'\n          description: Emoticon categories for the repo\n        information:\n          type: array\n          items:\n            type: string\n          description: Description for the repo\n          example: [ \"KTachibana\", \"https://ktachibana.party/cloudemoticon/default.json\" ]\n  requestBodies:\n    SignInRequest:\n      content:\n        application/json:\n          schema:\n            required:\n              - id\n              - password\n            properties:\n              id:\n                $ref: '#/components/schemas/User/properties/id'\n              password:\n                type: string\n                description: User's password\n                example: thisissupersecure\n  responses:\n    SignInSuccessfulResponse:\n      description: Successfully signed in\n      content:\n        application/json:\n          schema:\n            required:\n              - access_token\n              - expires\n            properties:\n              access_token:\n                type: string\n                description: User's bearer token\n                example: xyz.123\n              expires:\n                type: number\n                description: In epoch seconds, when the bearer token will expire\n                example: 1652301806\n    400BadRequest:\n      description: Bad request, invalid request body\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Message'\n    401Unauthorized:\n      description: Unauthorized, invalid access token or wrong user ID/password\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Message'\n  securitySchemes:\n    bearer:\n      type: http\n      scheme: bearer\nsecurity:\n  - bearer: []\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Poll\": parse schema: property \"choices\": parse schema: item: parse schema: resolve \"#/components/schemas/PollChoice\": parse schema: property \"voters\": parse schema: item: parse schema: resolve \"#/components/schemas/User\": parse schema: property \"avatar_url\": unexpected default \"null\" value"
}