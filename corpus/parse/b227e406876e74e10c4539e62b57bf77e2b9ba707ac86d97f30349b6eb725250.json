{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/department-of-veterans-affairs/vets-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "modules/mobile/docs/openapi.yaml",
			"byteSize": 136367,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 0.0.0\n  title: VA Mobile API\n  license:\n    name: MIT\n  description: \u003e\n    The Department of Veterans Affairs mobile API. All paths are relative to https://api.va.gov/mobile.\nservers:\n  - url: https://api.va.gov/mobile\npaths:\n  /:\n    get:\n      description: Returns a welcome message.\n      operationId: welcome\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Message.yml\n          description: OK\n      summary: /\n    post:\n      description: Returns urls for app use based on app build number, environment,\n        and OS\n      operationId: index\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/DiscoveryRequest.yml\n        description: App build and environment info\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/DiscoveryResponse.yml\n          description: OK\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n      summary: /\n  /v0/appeal/{id}:\n    get:\n      description: Returns info on all user's claims and appeals for mobile overview\n        page\n      operationId: get_appeal\n      parameters:\n        - description: Appeal Id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Appeal.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/appeal/{id}\n  /v0/appointment_requests/{appointment_request_id}/messages:\n    get:\n      description: Accepts an appointment request id and returns a list of that appointment request's messages.\n      operationId: getAppointmentRequestMessages\n      parameters:\n        - description: The appointment request ID\n          in: path\n          name: appointmentRequestId\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/AppointmentRequestMessages.yml\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: v0/appointment_requests/{appointment_request_id}/messages\n  /v0/appointments:\n    get:\n      description: Given a date range returns a list of upcoming VA, Community Care,\n        and Express Care appointments. If start and end date ranges are not passed\n        in then it defaults to - 1 year and + 1 year from the beginning of today's\n        UTC date. The endpoint is paginated and call with no pagination params defaults\n        to page 1 with a page size of 10. Details on links for the other pages in\n        the set are included in the \"links\" object. The current page is the \"self\"\n        link. \"prev\" and \"next\" are the previous and next links (these will be null\n        if you are on the first or last page respectively). Finally \"first\" and \"last\"\n        are the links for the first and last page. Requesting a page out of bounds\n        will return an empty list, however if will still include \"links\" details for\n        the pages that are in bounds.\n      operationId: getAppointments\n      parameters:\n        - description: The start date for the range of appointments in ISO 8601 UTC\n            format\n          example: 2020-10-29T07:00:00Z\n          in: query\n          name: startDate\n          schema:\n            format: date-time\n            type: string\n        - description: The end date for the range of appointments in ISO 8601 UTC format\n          example: 2021-11-29T08:00:00Z\n          in: query\n          name: endDate\n          schema:\n            format: date-time\n            type: string\n        - description: The page number requested\n          example: 1\n          in: query\n          name: page[number]\n          schema:\n            type: integer\n        - description: The number of records to return per page\n          example: 10\n          in: query\n          name: page[size]\n          schema:\n            type: integer\n        - description: Whether or not to use this API's cache or fetch records from\n            the upstream service\n          example: true\n          in: query\n          name: useCache\n          schema:\n            type: boolean\n        - description: Field to sort the appointments list by. Currently only supports\n            `startDateUtc`. Prefixing `-` reverses the sort.\n          example: -startDateUtc\n          in: query\n          name: sort\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Community Care Appointment:\n                  value:\n                    $ref: ./examples/appointments/cc_appointment.yml\n                VA Appointment:\n                  value:\n                    $ref: ./examples/appointments/va_appointment.yml\n                VA Video Connect ATLAS Appointment:\n                  value:\n                    $ref: ./examples/appointments/va_video_connect_atlas_appointment.yml\n                VA Video Connect Appointment:\n                  value:\n                    $ref: ./examples/appointments/va_video_connect_appointment.yml\n                Community Care Appointment Request:\n                  value:\n                    $ref: ./examples/appointments/cc_appointment_request.yml\n                VA Appointment Request:\n                  value:\n                    $ref: ./examples/appointments/va_appointment_request.yml\n              schema:\n                $ref: ./schemas/Appointments.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Validation Error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/appointments\n  /v0/appointments/cancel/{cancelId}:\n    put:\n      description: Cancel an appointment by cancelId. Note only VA appointments can\n        be cancelled online and some VA facilities do not support online cancellation.\n        Only appointments that can be cancelled will have a cancelId.\n      operationId: putCancelAppointment\n      parameters:\n        - description: The cancel ID hash from an appointment returned in the GET appointments\n            endpoint.\n          in: path\n          name: cancelId\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/appointments/cancel/{cancelId}\n  /v0/appointments/community_care/eligibility/{service_type}:\n    get:\n      description: Checks if user is eligibile to make an appointment with Community Care for a type of service. Checks if user is registered at a site that is marked as accepting community care requests and community care eligibility api says that they're eligible for the type of care they chose\n      operationId: communityCareEligibility\n      parameters:\n        - description: Type of service to check eligibility for. Can only be one of following options primaryCare, nutrition, podiatry, optometry, audiology.\n          in: path\n          name: serviceType\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/CommunityCaresEligibility.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/appointments/community_care/eligibility/{service_type}\n  /v0/appointments/facility/eligibility:\n    get:\n      description: Checks if a list of facilities if they are eligibile to create a appointment request to provide the given type of service at the facility.\n      operationId: facilityEligibility\n      parameters:\n        - description: Type of service to check eligibility for.\n          in: path\n          name: serviceType\n          required: true\n          schema:\n            type: string\n            enum:\n              - amputation\n              - audiology\n              - covid\n              - optometry\n              - outpatientMentalHealth\n              - moveProgram\n              - foodAndNutrition\n              - clinicalPharmacyPrimaryCare\n              - primaryCare\n              - homeSleepTesting\n              - socialWork\n        - description: List of facility ids\n          in: path\n          name: FacilityIds[]\n          required: true\n          schema:\n            type: array of strings\n        - description: type of appointment. Can either be 'request' or 'direct' but only request will be used until direct scheduling functionality is built out\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/FacilityEligibilities.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/appointments/facility/eligibility\n  /v0/appointments/va/eligibility:\n    get:\n      description: Lists types of service. For each type of service, lists users registered facilities that support request and direct appointments.\n      operationId: serviceEligibility\n      parameters:\n        - description: Array of facilities to be checked for service eligibility\n          in: query\n          name: FacilityIds[]\n          required: true\n          schema:\n            type: array\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/ServiceEligibilities.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/appointments/va/eligibility\n  /v0/appointment:\n    post:\n      description: Creates a new appointment\n      operationId: CreateNewAppointment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/CreateAppointmentRequest.yml\n      responses:\n        \"201\":\n          description: Retrives a list of clincs for a given facility\n          content:\n            application/json:\n              schema:\n                required:\n                  - data\n                properties:\n                  data:\n                    required:\n                      - id\n                      - type\n                      - attributes\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                      type:\n                        type: string\n                      attributes:\n                        $ref: ./schemas/NewAppointment.yml\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: [ ]\n      summary: /v0/appointment\n  /v0/claim/{id}:\n    get:\n      description: Returns info on all user's claims and appeals for mobile overview\n        page\n      operationId: get_claim\n      parameters:\n        - description: Claim Id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Claim.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/claim/{id}\n  /v0/claim/{id}/documents:\n    post:\n      description: Post tracked item document for upload, returns jobId for upload\n        process\n      operationId: upload_document\n      parameters:\n        - description: Claim Id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            encoding:\n              file:\n                contentType: image/png, image/jpeg, image/gif, image/jpg, image/bmp,\n                  text/plain, application/pdf\n            schema:\n              properties:\n                documentType:\n                  type: string\n                file:\n                  format: binary\n                  type: string\n                password:\n                  oneOf:\n                    - type: string\n                    - type: 'null'\n                trackedItemId:\n                  type: string\n              type: object\n        required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/ClaimDocUpload.yml\n          description: Accepted\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/claim/{id}/documents\n  /v0/claim/{id}/documents/multi-image:\n    post:\n      description: Post multiple images to be combined into one pdf for upload, returns\n        jobId for upload process\n      operationId: upload_documents\n      parameters:\n        - description: Claim Id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/ClaimUploadRequestBody.yml\n        required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/ClaimDocUpload.yml\n          description: Accepted\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/claim/{id}/documents/multi-image\n  /v0/claim/{id}/request-decision:\n    post:\n      description: Request decision on a given claim, returns job id\n      operationId: request_decision\n      parameters:\n        - description: Claim Id\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/ClaimDocUpload.yml\n          description: Accepted\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/claim/{id}/request-decision\n  /v0/claims-and-appeals-overview:\n    get:\n      description: Returns info on all user's claims and appeals for mobile overview\n        page\n      operationId: claimsAndAppealsOverview\n      parameters:\n        - description: The start date for the range of appointments in ISO 8601 UTC\n            format. If not provided the start date will be considered Jan. 1st 1700.\n          example: 2020-10-29T07:00:00Z\n          in: query\n          name: startDate\n          schema:\n            format: date-time\n            type: string\n        - description: The end date for the range of appointments in ISO 8601 UTC format.\n            If not provided the end date will be 1 year from today's date\n          example: 2021-11-29T08:00:00Z\n          in: query\n          name: endDate\n          schema:\n            format: date-time\n            type: string\n        - description: The page number requested\n          example: 1\n          in: query\n          name: page[number]\n          schema:\n            type: integer\n        - description: The number of records to return per page\n          example: 10\n          in: query\n          name: page[size]\n          schema:\n            type: integer\n        - description: true will return only completed records, false will show only\n            open records, not including the parameter will return all records regardless\n            of completed status\n          example: true\n          in: query\n          name: showCompleted\n          schema:\n            type: boolean\n        - description: Whether or not to use this API's cache or fetch records from\n            the upstream service\n          example: true\n          in: query\n          name: useCache\n          schema:\n            type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/ClaimsAndAppealsOverview.yml\n          description: OK\n        '207':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/ClaimsAndAppealsOverview.yml\n          description: One of the two upstream services failed\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/ClaimsAndAppealsOverviewDoubleFailure.yml\n          description: Both upstream services the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/claims-and-appeals-overview\n  /v0/community-care-providers:\n    get:\n      description: Returns a list of community care providers who provide the requested medical specialty within\n        a certain radius of the user (default) or facility (if facility id is provided in query params).\n      operationId: get_community_care_providers\n      parameters:\n        - description: The medical specialty the user is searching for formatted in camel case.\n            Must be one of primaryCare, foodAndNutrition, podiatry, optometry, audiologyRoutineExam, audiologyHearingAidSupport.\n          example: primaryCare\n          in: query\n          name: serviceType\n          required: true\n          schema:\n            type: string\n        - description: Optional facility id. When provided, we search for CC providers near the facility.\n            When omitted, we search for CC providers near the user's home address.\n          example: '978'\n          in: query\n          name: facilityId\n          schema:\n            type: string\n        - description: The page number requested\n          example: 1\n          in: query\n          name: page[number]\n          schema:\n            type: integer\n        - description: The number of records to return per page\n          example: 10\n          in: query\n          name: page[size]\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/CommunityCareProviders.yml\n          description: OK\n        '400':\n          content:\n            application/json:\n              example:\n                errors:\n                  - code: '103'\n                    detail: '\"whatever you entered\" is not a valid value for \"serviceType\"'\n                    status: '400'\n                    title: Invalid field value\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Bad Request\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              example:\n                errors:\n                  - code: '422'\n                    detail: User has no home latitude and longitude\n                    source: Mobile::V0::CommunityCareProvidersController\n                    status: '422'\n                    title: Unprocessable Entity\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/community-care-providers\n  /v0/disability-rating:\n    get:\n      description: Returns the list of disability ratings for given user\n      operationId: disability-rating\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/DisabilityRating.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Client was forbidden from upstream resource.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/disability-rating\n  /v0/facilities-info/{sort_method}:\n    get:\n      description: Retreives facilities info for a given user\n      operationId: GetFacilitiesInfo\n      parameters:\n        - description: Sort method (Closest to home or current location, alphabetical, or by most recent appointment location) Note - When most recent appointment is selected any facility that doesn't appear in the user's appointments will be sorted alphabetically after those that do appear in the appointments list\n          in: path\n          name: sort_method\n          required: true\n          schema:\n            type: string\n            enum:\n              - current\n              - home\n              - alphabetical\n              - appointments\n      requestBody:\n        description: Lat Long for user's current location. Only required if sort method is current, but can be supplied anyway\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/FacilitiesInfoRequestBody.yml\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/FacilitiesInfo.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Client was forbidden from upstream resource.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: [ ]\n      summary: /v0/facilities-info/{sort_method}\n  /v0/health/immunizations:\n    get:\n      description: Returns the list of immunization records for given user\n      operationId: immunizations\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Immunizations.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Client was forbidden from upstream resource.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/health/immunizations\n  /v0/health/location/{id}:\n    get:\n      description: Returns location info based on location id from vaccine record\n      operationId: immunizations\n      parameters:\n        - description: location id from immunization info\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Locations.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Client was forbidden from upstream resource.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/health/location/{id}\n  /v0/health/rx/prescriptions:\n    get:\n      description: Returns the users prescriptions.\n      operationId: getPrescription\n      parameters:\n        - description: |\n            what field to sort array of prescriptions by. fields that can be sorted: prescription_id, refill_status, refill_submit_date, refill_date, facility_name, ordered_date, prescription_name, dispensed_date. date fields sort by DESC by default while all others default to ASC. To get the opposite sort direction negate the field with a '-'. EX: -prescription_id\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n        - description: |\n            filter by field values. Syntax: ?filter[[refill_status][eq]]=refillinprocess. fields that can be filtered: prescription_id, refill_status, refill_submit_date, facility_name. eq can be switched out with not_eq.\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: The page number requested\n          example: 1\n          in: query\n          name: page[number]\n          schema:\n            type: integer\n        - description: The number of records to return per page\n          example: 10\n          in: query\n          name: page[size]\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Prescriptions.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: [ ]\n      summary: /v0/health/rx/prescriptions\n  /v0/health/rx/prescriptions/{id}/refill:\n    put:\n      description: Requests refill for prescription.\n      parameters:\n        - description: prescription id to request refill\n          example: 13650545\n          in: path\n          name: id\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not Found\n      security:\n        - Bearer: [ ]\n      summary: /v0/health/rx/prescriptions/{id}/refill\n  /v0/letters:\n    get:\n      description: Returns the list of letter names and types for the given user\n      operationId: letters\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Letters.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/letters\n  /v0/letters/beneficiary:\n    get:\n      description: Returns benefit info and options for the given user with or without\n        a dependent\n      operationId: beneficiary\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/LettersBeneficiaryInfo.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/letters/beneficiary\n  /v0/letters/{type}/download:\n    post:\n      description: Returns requested letter for download\n      operationId: download\n      parameters:\n        - description: letter type\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/LetterOptions.yml\n        required: false\n      responses:\n        '200':\n          content:\n            application/pdf:\n              schema:\n                format: binary\n                type: string\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/letters/{type}/download\n  /v0/messaging/health/folders:\n    get:\n      description: List available secure messaging folders\n      operationId: get_folders\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessagingFolders.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/folders\n  /v0/messaging/health/folders/{id}:\n    get:\n      description: Get a secure messaging folder\n      operationId: get_folder\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessagingFolder.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/folders/{id}\n  /v0/messaging/health/folders/{id}/messages:\n    get:\n      description: |\n        List messages in a secure messaging folder.\n\n        When listing messages, the response for each message will include most but not all of the message attributes.\n        Specifically, the message body and attachment information is not included. Those attributes can be obtained by\n        getting the specific message resource.\n      operationId: get_folder_messages\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageList.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/folders/{id}/messages\n  /v0/messaging/health/message_drafts:\n    post:\n      description: Save a new draft message\n      operationId: post_create_message_draft\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/SecureMessageNewMessageRequest.yml\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageNewMessageRequest.yml\n          description: Created\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/message_drafts\n  /v0/messaging/health/message_drafts/{id}:\n    put:\n      description: Update an existing draft message\n      operationId: post_create_message_draft\n      parameters:\n        - description: The id of the draft that is to be updated\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                body: the updated message\n              type: object\n        required: true\n      responses:\n        '204':\n          description: No Content\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/message_drafts/{id}\n  /v0/messaging/health/message_drafts/{reply_id}/replydraft:\n    post:\n      description: Save a new draft message as a reply to an existing message\n      operationId: post_create_message_draft_reply\n      parameters:\n        - description: The id of the message that will be replied to\n          in: path\n          name: reply_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/SecureMessageNewMessageRequest.yml\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageNewMessageRequest.yml\n          description: Created\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/message_drafts/{reply_id}/replydraft\n  /v0/messaging/health/message_drafts/{reply_id}/replydraft/{draft_id}:\n    post:\n      description: Edit a draft message that was a reply to an existing message\n      operationId: post_create_message_draft_reply\n      parameters:\n        - description: The id of the message that will be replied to\n          in: path\n          name: reply_id\n          required: true\n          schema:\n            type: string\n        - description: The id of the draft that is to be updated\n          in: path\n          name: draft_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                body: the updated message\n              type: object\n        required: true\n      responses:\n        '204':\n          description: No Content\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/message_drafts/{reply_id}/replydraft/{draft_id}\n  /v0/messaging/health/messages:\n    post:\n      description: Send a new secure message\n      operationId: post_create_message\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/SecureMessageNewMessageRequest.yml\n          multipart/form-data:\n            schema:\n              properties:\n                message:\n                  description: Stringified JSON with same parameters as if this was\n                    an application/json request (e.g. '{\"category\":\"OTHER\",\"recipient_id\":1763526,\"body\":\"test\n                    message\"}')\n                  type: string\n                uploads[]:\n                  description: |\n                    One or more message attachments.\n\n                    \u003cstrong\u003eNOTES:\u003c/strong\u003e\n                    \u003cul\u003e\n                    \u003cli\u003eA single message may have a maximum of 4 attachments.\u003c/li\u003e\n                    \u003cli\u003eA single attachment cannot exceed 3 MB\u003c/li\u003e\n                    \u003cli\u003eAll attachments combined cannot exceed 6 MB\u003c/li\u003e\n                    \u003cli\u003eSupported file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.\u003c/li\u003e\n                    \u003c/ul\u003e\n                  items:\n                    format: binary\n                    type: string\n                  type: array\n              type: object\n        description: |\n          New message body.\n\n          \u003cstrong\u003eNOTES:\u003c/strong\u003e\n          \u003cul\u003e\n            \u003cli\u003eIf a subject isn't included, default subject will be \"{{Category}} Inquiry\" (e.g. Medication Inquiry)\u003c/li\u003e\n            \u003cli\u003eMessages can only be replied to for 120 days.  After that, the message is considered \"expired\"\u003c/li\u003e\n            \u003cli\u003eIf sending a draft, include the draft's ID in the request body as `draft_id`. Draft will be deleted once sent. Any fields included in request body will overwrite original draft contents.\n            \u003cli\u003eIf including file attachments, this request must be sent as \u003ci\u003emultipart/form-data\u003c/i\u003e\u003c/li\u003e\n            \u003cli\u003e\n              File attachment restrictions (as imposed by MHV):\n              \u003cul\u003e\n                \u003cli\u003eUser may attach up to 4 files\u003c/li\u003e\n                \u003cli\u003eAccepted formats: doc, docx, jpg, pdf, png, rtf, txt, xls, xlsx\u003c/li\u003e\n                \u003cli\u003eSingle attachment cannot exceed 3 MB\u003c/li\u003e\n                \u003cli\u003eTotal attachment cannot exceed 6 MB\u003c/li\u003e\n              \u003c/ul\u003e\n            \u003c/li\u003e\n          \u003c/ul\u003e\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageDetail.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages\n  /v0/messaging/health/messages/categories:\n    get:\n      description: List available message categories\n      operationId: get_categories\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageCategories.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages/categories\n  /v0/messaging/health/messages/signature:\n    get:\n      description: Gets user message signature preferences\n      operationId: get_signature\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageSignature.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages/signature\n  /v0/messaging/health/messages/{id}:\n    delete:\n      description: Moves a secure message to the \"Deleted\" folder\n      operationId: delete_message\n      parameters:\n        - description: The id of the message that is to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The message was deleted successfully\n        '400':\n          content:\n            application/json:\n              example:\n                errors:\n                  - code: SM114\n                    detail: Unable to move message\n                    status: '400'\n                    title: Operation failed\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Bad Request\n        '401':\n          content:\n            application/json:\n              example:\n                errors:\n                  - code: '401'\n                    detail: IAM user session is inactive\n                    status: '401'\n                    title: Not authorized\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              example:\n                errors:\n                  - code: '403'\n                    detail: You do not have access to messaging\n                    status: '403'\n                    title: Forbidden\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages/{id}\n    get:\n      description: |\n        Get a secure message \u003cstrong\u003eand mark the message as read\u003c/strong\u003e.\n\n        \u003cstrong\u003eNOTES:\u003c/strong\u003e\n        \u003cul\u003e\n          \u003cli\u003eUnlike listing messages in a folder, the message resource returned from this operation will include\n        the message body and attachment information.\u003c/li\u003e\n          \u003cli\u003eThis GET operation is not fully idempotent and will set readReceipt field as 'READ'\u003c/li\u003e\n          \u003cli\u003eIf message has an attachment included, attachmentSize is displayed in bytes\u003c/li\u003e\n        \u003c/ul\u003e\n      operationId: get_message\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageDetail.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages/{id}\n    patch:\n      description: Moves a secure message to a specified folder\n      operationId: post_move_message\n      parameters:\n        - description: The id of the message that is to be moved\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The id of the folder that the message is to be moved to\n          in: query\n          name: folder_id,\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The message was moved successfully\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages/{id}/move\n  /v0/messaging/health/messages/{id}/attachments/{attachment_id}:\n    get:\n      description: |\n        Get a secure message attachment content as a direct binary download. Secure messaging supports the following file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.\n      operationId: get_attachment\n      parameters:\n        - description: ID of the message that we are retrieving attachments of\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: OK\n          headers:\n            Content-Disposition:\n              description: |\n                This header will have the value of \"attachment\", and a \"filename\" parameter containing the original filename of the attached content.\n              schema:\n                type: string\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages/{id}/attachments/{attachment_id}\n  /v0/messaging/health/messages/{id}/reply:\n    post:\n      description: |\n        Send reply to a secure message\n\n        \u003cstrong\u003eNOTE:\u003c/strong\u003e If including file attachments, this request must be sent as \u003ci\u003emultipart/form-data\u003c/i\u003e\n\n        File attachment restrictions (as imposed by MHV):\n        \u003cul\u003e\n          \u003cli\u003eUser may attach up to 4 files\u003c/li\u003e\n          \u003cli\u003eAccepted formats: doc, docx, jpg, pdf, png, rtf, txt, xls, xlsx\u003c/li\u003e\n          \u003cli\u003eSingle attachment cannot exceed 3 MB\u003c/li\u003e\n          \u003cli\u003eTotal attachment cannot exceed 6 MB\u003c/li\u003e\n        \u003c/ul\u003e\n      operationId: post_create_message_reply\n      parameters:\n        - description: ID of the message that is being replied to\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/SecureMessageReplyRequest.yml\n          multipart/form-data:\n            schema:\n              properties:\n                message:\n                  description: Stringified JSON with same parameters as if this was\n                    an application/json request (e.g. '{\"body\":\"test body with attachment\"}')\n                  type: string\n                uploads[]:\n                  description: |\n                    One or more message attachments.\n\n                    \u003cstrong\u003eNOTES:\u003c/strong\u003e\n                    \u003cul\u003e\n                    \u003cli\u003eA single message may have a maximum of 4 attachments.\u003c/li\u003e\n                    \u003cli\u003eA single attachment cannot exceed 3 MB\u003c/li\u003e\n                    \u003cli\u003eAll attachments combined cannot exceed 6 MB\u003c/li\u003e\n                    \u003cli\u003eSupported file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.\u003c/li\u003e\n                    \u003c/ul\u003e\n                  items:\n                    format: binary\n                    type: string\n                  type: array\n              type: object\n        description: Reply message body\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageDetail.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages/{id}/reply\n  /v0/messaging/health/messages/{id}/thread:\n    get:\n      description: |\n        Gets a list of message summaries that are related to the message of the passed id.\n        Does \u003cstrong\u003enot\u003c/strong\u003e include the message of the passed id itself.\n      operationId: get_message_history\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessageList.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/messages/{id}/thread\n  /v0/messaging/health/recipients:\n    get:\n      description: List available recipients to which messages may be sent\n      operationId: get_triage_teams\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/SecureMessagingRecipients.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unauthorized\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Not authorized for access to secure messages\n      security:\n        - Bearer: []\n      summary: /v0/messaging/health/recipients\n  /v0/military-service-history:\n    get:\n      description: Returns user's service history\n      operationId: getServiceHistory\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/MilitaryHistory.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/military-service-history\n  /v0/payment-history:\n    get:\n      description: Returns user's payment history\n      operationId: getPaymentHistory\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/PaymentHistory.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/payment-history\n  /v0/payment-information/benefits:\n    get:\n      description: Returns direct deposit payment info\n      operationId: getPaymentInformation\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/PaymentInfo.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/payment-information/benefits\n    put:\n      description: Returns updated direct deposit payment info\n      operationId: updatePaymentInformation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/UpdatePaymentInfoRequest.yml\n        description: New direct deposit info\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/PaymentInfo.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/payment-information/benefits\n  /v0/push/prefs/{endpointSid}:\n    get:\n      description: Get the user's push notification preferences\n      operationId: getPrefs\n      parameters:\n        - description: device endpointSid provided by the register endpoint\n          in: path\n          name: endpointSid\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/PushGetPreferences.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/push/prefs/{endpointSid}\n    put:\n      description: Set the user's push notification preferences\n      operationId: putPrefs\n      parameters:\n        - description: device endpointSid provided by the register endpoint\n          in: path\n          name: endpointSid\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/PushPreferences.yml\n        description: Push notification preferences\n        required: true\n      responses:\n        '200':\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/push/prefs/{endpointSid}\n  /v0/push/register:\n    put:\n      description: Allows a new app install to register to receive push notifications\n      operationId: register\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/PushRegistration.yml\n        description: Device information\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/PushRegistrationResponse.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/push/register\n  /v0/push/send:\n    post:\n      description: Allows client to trigger specified push notification to be sent\n        to specified endpoint\n      operationId: sendNotification\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/PushSendRequestBody.yml\n        description: Template id, endpoint sid, and personalization for template\n        required: true\n      responses:\n        '200':\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/ClaimsAndAppealsOverviewDoubleFailure.yml\n          description: Both upstream services the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/push/send\n  /v0/user:\n    get:\n      description: |\n        Returns the user profile, including the user's addresses and the services the user has the requisite ids to access. Meta data for this endpoint returns all the services available in the API.\n      operationId: user.getProfile\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: ./schemas/User.yml\n                  meta:\n                    properties:\n                      availableServices:\n                        example:\n                          - appeals\n                          - appointments\n                          - claims\n                          - directDepositBenefits\n                          - lettersAndDocuments\n                          - militaryServiceHistory\n                          - userProfileUpdate\n                          - scheduleAppointments\n                        type: array\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user\n  /v1/user:\n    get:\n      description: |\n        Returns the user profile, including the user's addresses and the services the user has the requisite ids to access. Meta data for this endpoint returns all the services available in the API. v1 includes LOGINGOV as login type.\n      operationId: v1/user.getProfile\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: ./schemas/v1/User.yml\n                  meta:\n                    properties:\n                      availableServices:\n                        example:\n                          - appeals\n                          - appointments\n                          - claims\n                          - directDepositBenefits\n                          - lettersAndDocuments\n                          - militaryServiceHistory\n                          - userProfileUpdate\n                          - scheduleAppointments\n                        type: array\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: [ ]\n      summary: /v1/user\n  /v0/user/addresses:\n    delete:\n      description: Deletes a user's address\n      operationId: user.deleteAddresses\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/Address.yml\n        description: A domestic, internation, or military address\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/AddressTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/addresses\n    post:\n      description: Creates a new residential or mailing address for a user. Calling\n        this endpoint is the second step in adding a new address for a user. The first\n        step is to call the address validation endpoint to check if an address is\n        valid. If it is valid you'll receive a 'addressMetaData' object back with\n        the addresses confidence score. This object should then be included along\n        with the new address in the request body. If the user wishes to continue with\n        an 'invalid' address then the 'validationKey' should be passed along with\n        the new address in the request body. This lets the underlying service know\n        that an invalid address be passed through.\n      operationId: user.createAddress\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Using Overridden Address:\n                value:\n                  addressLine1: 1493 Martin Luther King Rd\n                  addressPou: RESIDENCE/CHOICE\n                  addressType: DOMESTIC\n                  city: Fulton\n                  countryCodeIso3: USA\n                  countryName: United States\n                  stateCode: MS\n                  validationKey: -1206619807\n                  zipCode: '38843'\n              Using Suggested Address:\n                value:\n                  addressLine1: 1493 Martin Luther King Rd\n                  addressMetaData:\n                    addressType: Domestic\n                    confidenceScore: 100\n                    deliveryPointValidation: CONFIRMED\n                    residentialDeliveryIndicator: RESIDENTIAL\n                  addressPou: RESIDENCE/CHOICE\n                  addressType: DOMESTIC\n                  city: Fulton\n                  countryCodeIso3: USA\n                  countryName: United States\n                  stateCode: MS\n                  zipCode: '38843'\n            schema:\n              $ref: '#./schemas/AddressCreate.yml'\n        description: A domestic, internation, or military address\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/AddressTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/addresses\n    put:\n      description: Updates a user's residential or mailing address. Calling this endpoint\n        is the second step in adding a new address for a user. The first step is to\n        call the address validation endpoint to check if an address is valid. If it\n        is valid you'll receive a 'addressMetaData' object back with the addresses\n        confidence score. This object should then be included along with the new address\n        in the request body. If the user wishes to continue with an 'invalid' address\n        then the 'validationKey' should be passed along with the new address in the\n        request body. This lets the underlying service know that an invalid address\n        be passed through.\n      operationId: user.updateAddress\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Using Overridden Address:\n                value:\n                  addressLine1: 1493 Martin Luther King Rd\n                  addressPou: RESIDENCE/CHOICE\n                  addressType: DOMESTIC\n                  city: Fulton\n                  countryCodeIso3: USA\n                  countryName: United States\n                  id: 181513\n                  stateCode: MS\n                  validationKey: -1206619807\n                  zipCode: '38843'\n              Using Suggested Address:\n                value:\n                  addressLine1: 1493 Martin Luther King Rd\n                  addressMetaData:\n                    addressType: Domestic\n                    confidenceScore: 100\n                    deliveryPointValidation: CONFIRMED\n                    residentialDeliveryIndicator: RESIDENTIAL\n                  addressPou: RESIDENCE/CHOICE\n                  addressType: DOMESTIC\n                  city: Fulton\n                  countryCodeIso3: USA\n                  countryName: United States\n                  id: 181513\n                  stateCode: MS\n                  zipCode: '38843'\n            schema:\n              $ref: '#./schemas/AddressUpdate.yml'\n        description: A domestic, internation, or military address\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/AddressTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/addresses\n  /v0/user/addresses/validate:\n    post:\n      description: Validates a residential or mailing address for a user. Calling\n        this endpoint is the first step in adding a new address for a user. If the\n        address is valid you'll receive a 'addressMetaData' object back with the addresses\n        confidence score. This object should then be included along with the new address\n        in the request body. If the user wishes to continue with an 'invalid' address\n        then the 'validationKey' should be passed along with the new address in the\n        request body. This lets the underlying service know that an invalid address\n        be passed through.\n      operationId: user.validateAddress\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example:\n              addressLine1: 51 W Weber Rd\n              addressPou: CORRESPONDENCE\n              addressType: DOMESTIC\n              city: Columbus\n              countryCodeIso3: USA\n              countryName: United States\n              stateCode: OH\n              type: DOMESTIC\n              zipCode: '43202'\n            schema:\n              $ref: '#./schemas/Address.yml'\n        description: A domestic, internation, or military address\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                Multiple matches:\n                  value:\n                    $ref: ./examples/appointments/va_appointment.yml\n                Single match:\n                  value:\n                    $ref: ./examples/appointments/va_appointment.yml\n              schema:\n                $ref: '#./schemas/AddressResponse.yml'\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/addresses/validate\n  /v0/user/emails:\n    delete:\n      description: Deletes a user's email address\n      operationId: user.deleteEmailAddress\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example:\n              emailAddress: person42@example.com\n              id: 42,\n            schema:\n              $ref: ./schemas/EmailUpdate.yml\n        description: The email address to delete\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/EmailTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/emails\n    post:\n      description: Creates a new email address\n      operationId: user.createEmailAddress\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example:\n              emailAddress: person42@example.com\n            schema:\n              $ref: '#./schemas/Email.yml'\n        description: The new email address\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/EmailTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/emails\n    put:\n      description: Updates a user's email address\n      operationId: user.updateEmailAddress\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example:\n              emailAddress: person42@example.com\n              id: 42,\n            schema:\n              $ref: ./schemas/EmailUpdate.yml\n        description: The new email address\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/EmailTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/emails\n  /v0/user/logout:\n    get:\n      description: |\n        Logs the user out by revoking their access token from the IAM SSOe OAuth service and destroying the IAM user, user identity, and session objects from Redis.\n      operationId: user.logout\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Bad Request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/logout\n  /v0/user/phones:\n    delete:\n      description: Deletes one of a user's phone numbers\n      operationId: user.deletePhone\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/PhoneUpdate.yml\n        description: The phone number to delete\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/PhoneTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/phones\n    post:\n      description: Creats a phone number for a user\n      operationId: user.createPhoneNumber\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/Phone.yml\n        description: The new phone number\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/PhoneTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/phones\n    put:\n      description: Updates a user's phone number\n      operationId: user.updatePhoneNumber\n      parameters:\n        - in: header\n          name: X-Key-Inflection\n          schema:\n            description: Allows the API to return camelCase keys rather than snake_case.\n            example: camel\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./schemas/PhoneUpdate.yml\n        description: The new phone number\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/PhoneTransaction.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Unprocessable Entity, usually because of one or more invalid\n            parameters.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v0/user/phones\n  /v1/health/immunizations:\n    get:\n      description: Returns a paginated list of immunization records for given user\n      operationId: v1/immunizations\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/v1/Immunizations.yml\n          description: OK\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Authentication is possible but has failed or not yet been provided.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Client was forbidden from upstream resource.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The requested resource could not be found.\n        '408':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: The response from this API timed out.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: Failure in processing entity\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An internal API error occured.\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service the API depends on returned an error.\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: An upstream service is unavailable, or its circuit breaker\n            may have been tripped.\n        '504':\n          content:\n            application/json:\n              schema:\n                $ref: ./schemas/Errors.yml\n          description: A response from an upstream service timed out.\n      security:\n        - Bearer: []\n      summary: /v1/health/immunizations\n\ncomponents:\n  securitySchemes:\n    Bearer:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Authentication is via an access token returned from IAM's SSOe service. Pass the access token in the 'Authorization' Header in the format 'Bearer {accessToken}'. e.g. 'Bearer abcdefg1234567'.\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v0/user/addresses: put: operation \"user.updateAddress\": requestBody: content: application/json: schema: parse schema: resolve \"#./schemas/AddressUpdate.yml\": find schema: resolve \"#./schemas/AddressUpdate.yml\": invalid pointer \"./schemas/AddressUpdate.yml\": pointer must start with '/'"
}