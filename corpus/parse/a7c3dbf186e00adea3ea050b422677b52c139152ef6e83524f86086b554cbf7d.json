{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jwills/de4ml"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "logging-service/app/config/openapi.json",
			"byteSize": 8979,
			"content": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"FastAPI\",\n        \"version\": \"0.1.0\"\n    },\n    \"paths\": {\n        \"/searches\": {\n            \"post\": {\n                \"summary\": \"Log Search Event\",\n                \"description\": \"Validates and persists a search log record to permanent storage.\",\n                \"operationId\": \"log_search_event_searches_post\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SearchEvent\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/clicks\": {\n            \"post\": {\n                \"summary\": \"Log Click Event\",\n                \"description\": \"Validates and persists a click log record to permanent storage.\",\n                \"operationId\": \"log_click_event_clicks_post\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ClickEvent\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/fetch\": {\n            \"get\": {\n                \"summary\": \"Fetch\",\n                \"description\": \"Retrieves recently logged entries from the storage engine, useful for debugging.\",\n                \"operationId\": \"fetch_fetch_get\",\n                \"parameters\": [\n                    {\n                        \"required\": true,\n                        \"schema\": {\n                            \"title\": \"Table\",\n                            \"type\": \"string\"\n                        },\n                        \"name\": \"table\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\",\n                            \"default\": 10\n                        },\n                        \"name\": \"limit\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"title\": \"Response Fetch Fetch Get\",\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"type\": \"object\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/\": {\n            \"get\": {\n                \"summary\": \"Is Healthy\",\n                \"description\": \"Basic health check endpoint that indicates the logging service is up and running.\",\n                \"operationId\": \"is_healthy__get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"ClickEvent\": {\n                \"title\": \"ClickEvent\",\n                \"required\": [\n                    \"query_id\",\n                    \"document_id\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"timestamp_micros\": {\n                        \"title\": \"Timestamp Micros\",\n                        \"type\": \"integer\"\n                    },\n                    \"query_id\": {\n                        \"title\": \"Query Id\",\n                        \"type\": \"string\"\n                    },\n                    \"document_id\": {\n                        \"title\": \"Document Id\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"description\": \"Information we want to record about a user click event.\"\n            },\n            \"SearchEvent\": {\n                \"title\": \"SearchEvent\",\n                \"required\": [\n                    \"user\",\n                    \"query_id\",\n                    \"raw_query\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"timestamp_micros\": {\n                        \"title\": \"Timestamp Micros\",\n                        \"type\": \"integer\"\n                    },\n                    \"user\": {\n                        \"$ref\": \"#/components/schemas/User\"\n                    },\n                    \"query_id\": {\n                        \"title\": \"Query Id\",\n                        \"type\": \"string\"\n                    },\n                    \"raw_query\": {\n                        \"title\": \"Raw Query\",\n                        \"type\": \"string\"\n                    },\n                    \"results\": {\n                        \"title\": \"Results\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/SearchResult\"\n                        }\n                    }\n                },\n                \"description\": \"The information we want to keep/analyze about a search event.\"\n            },\n            \"SearchResult\": {\n                \"title\": \"SearchResult\",\n                \"required\": [\n                    \"document_id\",\n                    \"position\",\n                    \"score\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"document_id\": {\n                        \"title\": \"Document Id\",\n                        \"type\": \"integer\"\n                    },\n                    \"position\": {\n                        \"title\": \"Position\",\n                        \"type\": \"integer\"\n                    },\n                    \"score\": {\n                        \"title\": \"Score\",\n                        \"type\": \"number\"\n                    }\n                },\n                \"description\": \"Minimalist search result info.\"\n            },\n            \"User\": {\n                \"title\": \"User\",\n                \"required\": [\n                    \"id\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"title\": \"Id\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"description\": \"Minimalist user identifiers.\"\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/jwills/de4ml@763b64f16a313c226d4064f58211fe099a5328bf/-/blob/logging-service/app/config/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/jwills/de4ml/blob/763b64f16a313c226d4064f58211fe099a5328bf/logging-service/app/config/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/clicks\": post: operation \"log_click_event_clicks_post\": responses: 422: content: application/json: schema: parse schema: at logging-service/app/config/openapi.json:74:45: $ref: resolve \"#/components/schemas/HTTPValidationError\": resolve: can't find value for \"components/schemas/HTTPValidationError\""
}