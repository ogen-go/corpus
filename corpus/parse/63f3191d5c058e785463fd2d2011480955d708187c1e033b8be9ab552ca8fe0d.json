{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/BoostryJP/ibet-Wallet-API"
		},
		"file": {
			"name": "ibet_wallet_api.yaml",
			"size": 0,
			"path": "docs/ibet_wallet_api.yaml",
			"byteSize": 224162,
			"content": "openapi: 3.0.2\ninfo:\n  title: ibet Wallet API\n  description: ibet Wallet API\n  version: 23.3.0\npaths:\n  /:\n    get:\n      tags:\n        - Root\n      summary: Root\n      operationId: root__get\n      responses:\n        '200':\n          description: Successful Response\n  /Admin/Tokens:\n    get:\n      tags:\n        - Admin\n      summary: List All Listed Tokens\n      description: |-\n        Endpoint: /Admin/Tokens\n          - GET: 取扱トークン一覧取得\n      operationId: TokensGET\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllAdminTokensResponse_'\n    post:\n      tags:\n        - Admin\n      summary: List a Token\n      description: |-\n        Endpoint: /Admin/Tokens\n          - POST: 取扱トークン登録\n      operationId: TokensPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterAdminTokenRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Tokenspost\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '409':\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataConflictErrorResponse'\n  /Admin/Tokens/Type:\n    get:\n      tags:\n        - Admin\n      summary: Available status by token type\n      description: |-\n        Endpoint: /Admin/Tokens/Type\n          - GET: 取扱トークン種別\n      operationId: TokenType\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_GetAdminTokenTypeResponse_'\n  /Admin/Tokens/{token_address}:\n    get:\n      tags:\n        - Admin\n      summary: Retrieve a Listed Token\n      description: |-\n        Endpoint: /Admin/Tokens/{token_address}\n          - GET: 取扱トークン情報取得（個別）\n      operationId: TokenGET\n      parameters:\n        - description: Token Address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: Token Address\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveAdminTokenResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n    post:\n      tags:\n        - Admin\n      summary: Update a Listed Token\n      description: |-\n        Endpoint: /Admin/Tokens/{contract_address}\n          - POST: 取扱トークン情報更新（個別）\n      operationId: TokenPOST\n      parameters:\n        - description: Token Address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: Token Address\n          name: token_address\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAdminTokenRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Tokenpost\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n    delete:\n      tags:\n        - Admin\n      summary: Delete a Listed Token\n      description: |-\n        Endpoint: /Admin/Tokens/{contract_address}\n          - DELETE: 取扱トークン情報削除（個別）\n      operationId: TokenDELETE\n      parameters:\n        - description: Token Address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: Token Address\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppErrorResponse'\n  /NodeInfo:\n    get:\n      tags:\n        - NodeInfo\n      summary: Blockchain node information\n      description: 'Endpoint: /NodeInfo'\n      operationId: NodeInfo\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_GetNodeInfoResponse_'\n  /NodeInfo/BlockSyncStatus:\n    get:\n      tags:\n        - NodeInfo\n      summary: Block synchronization status of the connected blockchain node\n      description: 'Endpoint: /NodeInfo/BlockSyncStatus'\n      operationId: NodeInfoBlockSyncStatus\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_GetBlockSyncStatusResponse_'\n  /NodeInfo/BlockData:\n    get:\n      tags:\n        - NodeInfo\n      summary: '[ibet Blockchain Explorer] List block data'\n      description: |-\n        Returns a list of block data within the specified block number range.\n        The maximum number of search results is 1000.\n      operationId: ListBlockData\n      parameters:\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - required: false\n          schema:\n            title: From Block Number\n            minimum: 0\n            type: integer\n          name: from_block_number\n          in: query\n        - required: false\n          schema:\n            title: To Block Number\n            minimum: 0\n            type: integer\n          name: to_block_number\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_BlockDataListResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Listblockdata\n                anyOf:\n                  - $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /NodeInfo/BlockData/{block_number}:\n    get:\n      tags:\n        - NodeInfo\n      summary: '[ibet Blockchain Explorer] Retrieve block data'\n      description: Returns block data in the specified block number.\n      operationId: GetBlockData\n      parameters:\n        - required: true\n          schema:\n            title: Block Number\n            minimum: 0\n            type: integer\n          name: block_number\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_BlockDataResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getblockdata\n                anyOf:\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /NodeInfo/TxData:\n    get:\n      tags:\n        - NodeInfo\n      summary: '[ibet Blockchain Explorer] List tx data'\n      description: |-\n        Returns a list of transactions by various search parameters.\n        The maximum number of search results is 10000.\n      operationId: ListTxData\n      parameters:\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: block number\n          required: false\n          schema:\n            title: Block Number\n            minimum: 0\n            type: integer\n            description: block number\n          name: block_number\n          in: query\n        - description: tx from\n          required: false\n          schema:\n            title: From Address\n            type: string\n            description: tx from\n          name: from_address\n          in: query\n        - description: tx to\n          required: false\n          schema:\n            title: To Address\n            type: string\n            description: tx to\n          name: to_address\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TxDataListResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Listtxdata\n                anyOf:\n                  - $ref: '#/components/schemas/ResponseLimitExceededErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /NodeInfo/TxData/{hash}:\n    get:\n      tags:\n        - NodeInfo\n      summary: '[ibet Blockchain Explorer] Retrieve transaction data'\n      description: Searching for the transaction by transaction hash\n      operationId: GetTxData\n      parameters:\n        - required: true\n          schema:\n            title: Hash\n            type: string\n          name: hash\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TxDataResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Gettxdata\n                anyOf:\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /ABI/StraightBond:\n    get:\n      tags:\n        - ABI\n      summary: StraightBond ABI\n      description: 'Endpoint: /ABI/StraightBond'\n      operationId: StraightBondABI\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /ABI/Share:\n    get:\n      tags:\n        - ABI\n      summary: Share ABI\n      description: 'Endpoint: /ABI/Share'\n      operationId: ShareABI\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /ABI/Membership:\n    get:\n      tags:\n        - ABI\n      summary: Membership ABI\n      description: 'Endpoint: /ABI/Membership'\n      operationId: MembershipABI\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /ABI/Coupon:\n    get:\n      tags:\n        - ABI\n      summary: Coupon ABI\n      description: 'Endpoint: /ABI/Coupon'\n      operationId: CouponABI\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ABI_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Companies:\n    get:\n      tags:\n        - Companies\n      summary: Issuer Information List\n      description: 'Endpoint: /Companies'\n      operationId: Companies\n      parameters:\n        - description: include private listing token issuers\n          required: false\n          schema:\n            title: Include Private Listing\n            type: boolean\n            description: include private listing token issuers\n            default: false\n          name: include_private_listing\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCompanyInfoResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Companies/{eth_address}:\n    get:\n      tags:\n        - Companies\n      summary: Issuer Information\n      description: 'Endpoint: /Companies/{eth_address}'\n      operationId: Company\n      parameters:\n        - description: address\n          required: true\n          schema:\n            title: Eth Address\n            type: string\n            description: address\n          name: eth_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveCompanyInfoResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Company\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Companies/{eth_address}/Tokens:\n    get:\n      tags:\n        - Companies\n      summary: List of tokens issued by issuer\n      description: 'Endpoint: /Companies/{eth_address}/Tokens'\n      operationId: retrieve_company_tokens_Companies__eth_address__Tokens_get\n      parameters:\n        - description: address\n          required: true\n          schema:\n            title: Eth Address\n            type: string\n            description: address\n          name: eth_address\n          in: path\n        - description: include private listing token issuers\n          required: false\n          schema:\n            title: Include Private Listing\n            type: boolean\n            description: include private listing token issuers\n            default: false\n          name: include_private_listing\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCompanyTokensResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /User/PaymentAccount:\n    get:\n      tags:\n        - User\n      summary: Registration status to PaymentGateway Contract\n      description: 'Endpoint: /User/PaymentAccount'\n      operationId: PaymentAccount\n      parameters:\n        - description: Account Address\n          required: true\n          schema:\n            title: Account Address\n            type: string\n            description: Account Address\n          name: account_address\n          in: query\n        - description: Agent Address\n          required: true\n          schema:\n            title: Agent Address\n            type: string\n            description: Agent Address\n          name: agent_address\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrievePaymentAccountRegistrationStatusResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /User/PersonalInfo:\n    get:\n      tags:\n        - User\n      summary: Registration status to PersonalInfo Contract\n      description: 'Endpoint: /User/PersonalInfo'\n      operationId: PersonalInfo\n      parameters:\n        - description: PersonalInfo contract address\n          required: false\n          schema:\n            title: Personal Info Address\n            type: string\n            description: PersonalInfo contract address\n          name: personal_info_address\n          in: query\n        - description: account address\n          required: true\n          schema:\n            title: Account Address\n            type: string\n            description: account address\n          name: account_address\n          in: query\n        - description: owner(issuer) address\n          required: true\n          schema:\n            title: Owner Address\n            type: string\n            description: owner(issuer) address\n          name: owner_address\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrievePersonalInfoRegistrationStatusResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Eth/TransactionCount/{eth_address}:\n    get:\n      tags:\n        - Eth\n      summary: Transaction count for the specified eth_address\n      description: 'Endpoint: /Eth/TransactionCount/{eth_address}'\n      operationId: TransactionCount\n      parameters:\n        - required: true\n          schema:\n            title: Eth Address\n            type: string\n          name: eth_address\n          in: path\n        - required: false\n          schema:\n            $ref: '#/components/schemas/BlockIdentifier'\n          name: block_identifier\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TransactionCountResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Transactioncount\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Eth/SendRawTransaction:\n    post:\n      tags:\n        - Eth\n      summary: Send signed transaction\n      description: 'Endpoint: /Eth/SendRawTransaction'\n      operationId: SendRawTransaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendRawTransactionRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_SendRawTransactionsResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Sendrawtransaction\n                anyOf:\n                  - $ref: '#/components/schemas/SuspendedTokenErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Eth/SendRawTransactionNoWait:\n    post:\n      tags:\n        - Eth\n      summary: Send signed transaction\n      description: 'Endpoint: /Eth/SendRawTransactionNoWait'\n      operationId: SendRawTransactionNoWait\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendRawTransactionRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_SendRawTransactionsNoWaitResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Sendrawtransactionnowait\n                anyOf:\n                  - $ref: '#/components/schemas/SuspendedTokenErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Eth/WaitForTransactionReceipt:\n    get:\n      tags:\n        - Eth\n      summary: Wait for Transaction Receipt\n      description: 'Endpoint: /Eth/WaitForTransactionReceipt'\n      operationId: WaitForTransactionReceipt\n      parameters:\n        - description: transaction hash\n          required: true\n          schema:\n            title: Transaction Hash\n            type: string\n            description: transaction hash\n          name: transaction_hash\n          in: query\n        - description: Timeout value\n          required: false\n          schema:\n            title: Timeout\n            maximum: 30\n            minimum: 1\n            type: integer\n            description: Timeout value\n            default: 5\n          name: timeout\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_WaitForTransactionReceiptResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/StraightBond:\n    get:\n      tags:\n        - Token\n      summary: Token detail list of StraightBond tokens\n      description: 'Endpoint: /Token/StraightBond'\n      operationId: StraightBondTokens\n      parameters:\n        - description: list of token address (**this affects total number**)\n          required: false\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: list of token address (**this affects total number**)\n            default: []\n          name: address_list\n          in: query\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: issuer address\n          required: false\n          schema:\n            title: Owner Address\n            type: string\n            description: issuer address\n          name: owner_address\n          in: query\n        - description: token name\n          required: false\n          schema:\n            title: Name\n            type: string\n            description: token name\n          name: name\n          in: query\n        - description: token symbol\n          required: false\n          schema:\n            title: Symbol\n            type: string\n            description: token symbol\n          name: symbol\n          in: query\n        - description: company name\n          required: false\n          schema:\n            title: Company Name\n            type: string\n            description: company name\n          name: company_name\n          in: query\n        - description: tradable exchange address\n          required: false\n          schema:\n            title: Tradable Exchange\n            type: string\n            description: tradable exchange address\n          name: tradable_exchange\n          in: query\n        - description: token status\n          required: false\n          schema:\n            title: Status\n            type: boolean\n            description: token status\n          name: status\n          in: query\n        - description: personal information address\n          required: false\n          schema:\n            title: Personal Info Address\n            type: string\n            description: personal information address\n          name: personal_info_address\n          in: query\n        - description: transferable status\n          required: false\n          schema:\n            title: Transferable\n            type: boolean\n            description: transferable status\n          name: transferable\n          in: query\n        - description: offering status\n          required: false\n          schema:\n            title: Is Offering\n            type: boolean\n            description: offering status\n          name: is_offering\n          in: query\n        - description: transfer approval required status\n          required: false\n          schema:\n            title: Transfer Approval Required\n            type: boolean\n            description: transfer approval required status\n          name: transfer_approval_required\n          in: query\n        - description: redeem status\n          required: false\n          schema:\n            title: Is Redeemed\n            type: boolean\n            description: redeem status\n          name: is_redeemed\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/StraightBondTokensSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllStraightBondTokensResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Straightbondtokens\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/StraightBond/Addresses:\n    get:\n      tags:\n        - Token\n      summary: List of StraightBond token address\n      description: 'Endpoint: /Token/StraightBond/Addresses'\n      operationId: StraightBondTokenAddresses\n      parameters:\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: issuer address\n          required: false\n          schema:\n            title: Owner Address\n            type: string\n            description: issuer address\n          name: owner_address\n          in: query\n        - description: token name\n          required: false\n          schema:\n            title: Name\n            type: string\n            description: token name\n          name: name\n          in: query\n        - description: token symbol\n          required: false\n          schema:\n            title: Symbol\n            type: string\n            description: token symbol\n          name: symbol\n          in: query\n        - description: company name\n          required: false\n          schema:\n            title: Company Name\n            type: string\n            description: company name\n          name: company_name\n          in: query\n        - description: tradable exchange address\n          required: false\n          schema:\n            title: Tradable Exchange\n            type: string\n            description: tradable exchange address\n          name: tradable_exchange\n          in: query\n        - description: token status\n          required: false\n          schema:\n            title: Status\n            type: boolean\n            description: token status\n          name: status\n          in: query\n        - description: personal information address\n          required: false\n          schema:\n            title: Personal Info Address\n            type: string\n            description: personal information address\n          name: personal_info_address\n          in: query\n        - description: transferable status\n          required: false\n          schema:\n            title: Transferable\n            type: boolean\n            description: transferable status\n          name: transferable\n          in: query\n        - description: offering status\n          required: false\n          schema:\n            title: Is Offering\n            type: boolean\n            description: offering status\n          name: is_offering\n          in: query\n        - description: transfer approval required status\n          required: false\n          schema:\n            title: Transfer Approval Required\n            type: boolean\n            description: transfer approval required status\n          name: transfer_approval_required\n          in: query\n        - description: redeem status\n          required: false\n          schema:\n            title: Is Redeemed\n            type: boolean\n            description: redeem status\n          name: is_redeemed\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/StraightBondTokensSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n        - description: list of token address (**this affects total number**)\n          required: false\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: list of token address (**this affects total number**)\n            default: []\n          name: address_list\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllStraightBondTokenAddressesResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/StraightBond/{token_address}:\n    get:\n      tags:\n        - Token\n      summary: StraightBond token details\n      description: 'Endpoint: /Token/StraightBond/{contract_address}'\n      operationId: StraightBondTokenDetails\n      parameters:\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveStraightBondTokenResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Straightbondtokendetails\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Straightbondtokendetails\n                anyOf:\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/Share:\n    get:\n      tags:\n        - Token\n      summary: Token detail list of Share tokens\n      description: 'Endpoint: /Token/Share'\n      operationId: ShareTokens\n      parameters:\n        - description: list of token address (**this affects total number**)\n          required: false\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: list of token address (**this affects total number**)\n            default: []\n          name: address_list\n          in: query\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: issuer address\n          required: false\n          schema:\n            title: Owner Address\n            type: string\n            description: issuer address\n          name: owner_address\n          in: query\n        - description: token name\n          required: false\n          schema:\n            title: Name\n            type: string\n            description: token name\n          name: name\n          in: query\n        - description: token symbol\n          required: false\n          schema:\n            title: Symbol\n            type: string\n            description: token symbol\n          name: symbol\n          in: query\n        - description: company name\n          required: false\n          schema:\n            title: Company Name\n            type: string\n            description: company name\n          name: company_name\n          in: query\n        - description: tradable exchange address\n          required: false\n          schema:\n            title: Tradable Exchange\n            type: string\n            description: tradable exchange address\n          name: tradable_exchange\n          in: query\n        - description: token status\n          required: false\n          schema:\n            title: Status\n            type: boolean\n            description: token status\n          name: status\n          in: query\n        - description: personal information address\n          required: false\n          schema:\n            title: Personal Info Address\n            type: string\n            description: personal information address\n          name: personal_info_address\n          in: query\n        - description: transferable status\n          required: false\n          schema:\n            title: Transferable\n            type: boolean\n            description: transferable status\n          name: transferable\n          in: query\n        - description: offering status\n          required: false\n          schema:\n            title: Is Offering\n            type: boolean\n            description: offering status\n          name: is_offering\n          in: query\n        - description: transfer approval required status\n          required: false\n          schema:\n            title: Transfer Approval Required\n            type: boolean\n            description: transfer approval required status\n          name: transfer_approval_required\n          in: query\n        - description: cancellation status\n          required: false\n          schema:\n            title: Is Canceled\n            type: boolean\n            description: cancellation status\n          name: is_canceled\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/ShareTokensSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllShareTokensResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Sharetokens\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/Share/Addresses:\n    get:\n      tags:\n        - Token\n      summary: List of Share token address\n      description: 'Endpoint: /Token/Share/Addresses'\n      operationId: ShareTokenAddresses\n      parameters:\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: issuer address\n          required: false\n          schema:\n            title: Owner Address\n            type: string\n            description: issuer address\n          name: owner_address\n          in: query\n        - description: token name\n          required: false\n          schema:\n            title: Name\n            type: string\n            description: token name\n          name: name\n          in: query\n        - description: token symbol\n          required: false\n          schema:\n            title: Symbol\n            type: string\n            description: token symbol\n          name: symbol\n          in: query\n        - description: company name\n          required: false\n          schema:\n            title: Company Name\n            type: string\n            description: company name\n          name: company_name\n          in: query\n        - description: tradable exchange address\n          required: false\n          schema:\n            title: Tradable Exchange\n            type: string\n            description: tradable exchange address\n          name: tradable_exchange\n          in: query\n        - description: token status\n          required: false\n          schema:\n            title: Status\n            type: boolean\n            description: token status\n          name: status\n          in: query\n        - description: personal information address\n          required: false\n          schema:\n            title: Personal Info Address\n            type: string\n            description: personal information address\n          name: personal_info_address\n          in: query\n        - description: transferable status\n          required: false\n          schema:\n            title: Transferable\n            type: boolean\n            description: transferable status\n          name: transferable\n          in: query\n        - description: offering status\n          required: false\n          schema:\n            title: Is Offering\n            type: boolean\n            description: offering status\n          name: is_offering\n          in: query\n        - description: transfer approval required status\n          required: false\n          schema:\n            title: Transfer Approval Required\n            type: boolean\n            description: transfer approval required status\n          name: transfer_approval_required\n          in: query\n        - description: cancellation status\n          required: false\n          schema:\n            title: Is Canceled\n            type: boolean\n            description: cancellation status\n          name: is_canceled\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/ShareTokensSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllShareTokenAddressesResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/Share/{token_address}:\n    get:\n      tags:\n        - Token\n      summary: Share token details\n      description: 'Endpoint: /Token/Share/{contract_address}'\n      operationId: ShareTokenDetails\n      parameters:\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveShareTokenResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Sharetokendetails\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/Membership:\n    get:\n      tags:\n        - Token\n      summary: Token detail list of Membership tokens\n      description: 'Endpoint: /Token/Membership'\n      operationId: MembershipTokens\n      parameters:\n        - description: list of token address (**this affects total number**)\n          required: false\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: list of token address (**this affects total number**)\n            default: []\n          name: address_list\n          in: query\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: issuer address\n          required: false\n          schema:\n            title: Owner Address\n            type: string\n            description: issuer address\n          name: owner_address\n          in: query\n        - description: token name\n          required: false\n          schema:\n            title: Name\n            type: string\n            description: token name\n          name: name\n          in: query\n        - description: token symbol\n          required: false\n          schema:\n            title: Symbol\n            type: string\n            description: token symbol\n          name: symbol\n          in: query\n        - description: company name\n          required: false\n          schema:\n            title: Company Name\n            type: string\n            description: company name\n          name: company_name\n          in: query\n        - description: tradable exchange address\n          required: false\n          schema:\n            title: Tradable Exchange\n            type: string\n            description: tradable exchange address\n          name: tradable_exchange\n          in: query\n        - description: token status\n          required: false\n          schema:\n            title: Status\n            type: boolean\n            description: token status\n          name: status\n          in: query\n        - description: transferable status\n          required: false\n          schema:\n            title: Transferable\n            type: boolean\n            description: transferable status\n          name: transferable\n          in: query\n        - description: offering status\n          required: false\n          schema:\n            title: Initial Offering Status\n            type: boolean\n            description: offering status\n          name: initial_offering_status\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/MembershipTokensSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllMembershipTokensResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Membershiptokens\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/Membership/Addresses:\n    get:\n      tags:\n        - Token\n      summary: List of Membership token address\n      description: 'Endpoint: /Token/Membership/Addresses'\n      operationId: MembershipTokenAddresses\n      parameters:\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: issuer address\n          required: false\n          schema:\n            title: Owner Address\n            type: string\n            description: issuer address\n          name: owner_address\n          in: query\n        - description: token name\n          required: false\n          schema:\n            title: Name\n            type: string\n            description: token name\n          name: name\n          in: query\n        - description: token symbol\n          required: false\n          schema:\n            title: Symbol\n            type: string\n            description: token symbol\n          name: symbol\n          in: query\n        - description: company name\n          required: false\n          schema:\n            title: Company Name\n            type: string\n            description: company name\n          name: company_name\n          in: query\n        - description: tradable exchange address\n          required: false\n          schema:\n            title: Tradable Exchange\n            type: string\n            description: tradable exchange address\n          name: tradable_exchange\n          in: query\n        - description: token status\n          required: false\n          schema:\n            title: Status\n            type: boolean\n            description: token status\n          name: status\n          in: query\n        - description: transferable status\n          required: false\n          schema:\n            title: Transferable\n            type: boolean\n            description: transferable status\n          name: transferable\n          in: query\n        - description: offering status\n          required: false\n          schema:\n            title: Initial Offering Status\n            type: boolean\n            description: offering status\n          name: initial_offering_status\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/MembershipTokensSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllMembershipTokenAddressesResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/Membership/{token_address}:\n    get:\n      tags:\n        - Token\n      summary: Membership token details\n      description: 'Endpoint: /Token/Membership/{contract_address}'\n      operationId: MembershipTokenDetails\n      parameters:\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveMembershipTokenResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Membershiptokendetails\n                anyOf:\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/Coupon:\n    get:\n      tags:\n        - Token\n      summary: Token detail list of Coupon tokens\n      description: 'Endpoint: /Token/Coupon'\n      operationId: CouponTokens\n      parameters:\n        - description: list of token address (**this affects total number**)\n          required: false\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: list of token address (**this affects total number**)\n            default: []\n          name: address_list\n          in: query\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: issuer address\n          required: false\n          schema:\n            title: Owner Address\n            type: string\n            description: issuer address\n          name: owner_address\n          in: query\n        - description: token name\n          required: false\n          schema:\n            title: Name\n            type: string\n            description: token name\n          name: name\n          in: query\n        - description: token symbol\n          required: false\n          schema:\n            title: Symbol\n            type: string\n            description: token symbol\n          name: symbol\n          in: query\n        - description: company name\n          required: false\n          schema:\n            title: Company Name\n            type: string\n            description: company name\n          name: company_name\n          in: query\n        - description: tradable exchange address\n          required: false\n          schema:\n            title: Tradable Exchange\n            type: string\n            description: tradable exchange address\n          name: tradable_exchange\n          in: query\n        - description: token status\n          required: false\n          schema:\n            title: Status\n            type: boolean\n            description: token status\n          name: status\n          in: query\n        - description: transferable status\n          required: false\n          schema:\n            title: Transferable\n            type: boolean\n            description: transferable status\n          name: transferable\n          in: query\n        - description: offering status\n          required: false\n          schema:\n            title: Initial Offering Status\n            type: boolean\n            description: offering status\n          name: initial_offering_status\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/CouponTokensSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCouponTokensResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Coupontokens\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/Coupon/Addresses:\n    get:\n      tags:\n        - Token\n      summary: List of Coupon token address\n      description: 'Endpoint: /Token/Coupon/Addresses'\n      operationId: CouponTokenAddresses\n      parameters:\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: issuer address\n          required: false\n          schema:\n            title: Owner Address\n            type: string\n            description: issuer address\n          name: owner_address\n          in: query\n        - description: token name\n          required: false\n          schema:\n            title: Name\n            type: string\n            description: token name\n          name: name\n          in: query\n        - description: token symbol\n          required: false\n          schema:\n            title: Symbol\n            type: string\n            description: token symbol\n          name: symbol\n          in: query\n        - description: company name\n          required: false\n          schema:\n            title: Company Name\n            type: string\n            description: company name\n          name: company_name\n          in: query\n        - description: tradable exchange address\n          required: false\n          schema:\n            title: Tradable Exchange\n            type: string\n            description: tradable exchange address\n          name: tradable_exchange\n          in: query\n        - description: token status\n          required: false\n          schema:\n            title: Status\n            type: boolean\n            description: token status\n          name: status\n          in: query\n        - description: transferable status\n          required: false\n          schema:\n            title: Transferable\n            type: boolean\n            description: transferable status\n          name: transferable\n          in: query\n        - description: offering status\n          required: false\n          schema:\n            title: Initial Offering Status\n            type: boolean\n            description: offering status\n          name: initial_offering_status\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/CouponTokensSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllCouponTokenAddressesResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Token/Coupon/{token_address}:\n    get:\n      tags:\n        - Token\n      summary: Coupon token details\n      description: 'Endpoint: /Token/Coupon/{contract_address}'\n      operationId: CouponTokenDetails\n      parameters:\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveCouponTokenResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Coupontokendetails\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Coupontokendetails\n                anyOf:\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/{token_address}/Status:\n    get:\n      tags:\n        - Token\n      summary: Token Status\n      description: 'Endpoint: /Token/{contract_address}/Status'\n      operationId: TokenStatus\n      parameters:\n        - description: token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: token address\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TokenStatusResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Tokenstatus\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/{token_address}/Holders:\n    get:\n      tags:\n        - Token\n      summary: Token holders\n      description: 'Endpoint: /Token/{contract_address}/Holders'\n      operationId: TokenHolders\n      parameters:\n        - description: token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: token address\n          name: token_address\n          in: path\n        - description: exclude owner\n          required: false\n          schema:\n            title: Exclude Owner\n            type: boolean\n            description: exclude owner\n            default: false\n          name: exclude_owner\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Tokenholders\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/{token_address}/Holders/Count:\n    get:\n      tags:\n        - Token\n      summary: Token holders count\n      description: 'Endpoint: /Token/{contract_address}/Holders/Count'\n      operationId: TokenHoldersCount\n      parameters:\n        - description: token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: token address\n          name: token_address\n          in: path\n        - description: exclude owner\n          required: false\n          schema:\n            title: Exclude Owner\n            type: boolean\n            description: exclude owner\n            default: false\n          name: exclude_owner\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersCountResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Tokenholderscount\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/{token_address}/Holders/Collection:\n    post:\n      tags:\n        - Token\n      summary: Execute Batch Getting Token Holders At Specific BlockNumber\n      description: 'Endpoint: /Token/{contract_address}/Holders/Collection'\n      operationId: TokenHoldersCollection\n      parameters:\n        - description: token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: token address\n          name: token_address\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTokenHoldersCollectionRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_CreateTokenHoldersCollectionResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Tokenholderscollection\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/{token_address}/Holders/Collection/{list_id}:\n    get:\n      tags:\n        - Token\n      summary: Token Holder At Specific BlockNumber\n      description: 'Endpoint: /Token/{contract_address}/Holders/Collection/{list_id}'\n      operationId: TokenHoldersList\n      parameters:\n        - description: token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: token address\n          name: token_address\n          in: path\n        - description: Unique id to be assigned to each token holder list.This must be Version4 UUID.\n          required: true\n          schema:\n            title: List Id\n            type: string\n            description: Unique id to be assigned to each token holder list.This must be Version4 UUID.\n            format: uuid\n          example: cfd83622-34dc-4efe-a68b-2cc275d3d824\n          name: list_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TokenHoldersCollectionResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Tokenholderslist\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/{token_address}/TransferHistory:\n    get:\n      tags:\n        - Token\n      summary: Token Transfer History\n      description: 'Endpoint: /Token/{contract_address}/TransferHistory'\n      operationId: TransferHistory\n      parameters:\n        - description: token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: token address\n          name: token_address\n          in: path\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TransferHistoriesResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Transferhistory\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Token/{token_address}/TransferApprovalHistory:\n    get:\n      tags:\n        - Token\n      summary: Token Transfer Approval History\n      description: 'Endpoint: /Token/{contract_address}/TransferApprovalHistory'\n      operationId: TransferApprovalHistory\n      parameters:\n        - description: token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: token address\n          name: token_address\n          in: path\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_TransferApprovalHistoriesResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Transferapprovalhistory\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Position/{account_address}/Share:\n    get:\n      tags:\n        - Position\n      summary: Share Token Position\n      description: 'Endpoint: /Position/{account_address}/Share'\n      operationId: GetShareTokenPosition\n      parameters:\n        - required: true\n          schema:\n            title: Account Address\n            type: string\n          name: account_address\n          in: path\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: include token details\n          required: false\n          schema:\n            title: Include Token Details\n            type: boolean\n            description: include token details\n            default: false\n          name: include_token_details\n          in: query\n        - description: enable using indexed position data\n          required: false\n          schema:\n            title: Enable Index\n            type: boolean\n            description: enable using indexed position data\n            default: false\n          name: enable_index\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.position.GenericSecurityTokenPositionsResponse_app.model.schema.token_share.RetrieveShareTokenResponse__'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getsharetokenposition\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getsharetokenposition\n                anyOf:\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Position/{account_address}/StraightBond:\n    get:\n      tags:\n        - Position\n      summary: StraightBond Token Position\n      description: 'Endpoint: /Position/{account_address}/StraightBond'\n      operationId: GetStraightBondTokenPosition\n      parameters:\n        - required: true\n          schema:\n            title: Account Address\n            type: string\n          name: account_address\n          in: path\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: include token details\n          required: false\n          schema:\n            title: Include Token Details\n            type: boolean\n            description: include token details\n            default: false\n          name: include_token_details\n          in: query\n        - description: enable using indexed position data\n          required: false\n          schema:\n            title: Enable Index\n            type: boolean\n            description: enable using indexed position data\n            default: false\n          name: enable_index\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.position.GenericSecurityTokenPositionsResponse_app.model.schema.token_bond.RetrieveStraightBondTokenResponse__'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getstraightbondtokenposition\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getstraightbondtokenposition\n                anyOf:\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Position/{account_address}/Membership:\n    get:\n      tags:\n        - Position\n      summary: Membership Token Position\n      description: 'Endpoint: /Position/{account_address}/Membership'\n      operationId: GetMembershipTokenPosition\n      parameters:\n        - required: true\n          schema:\n            title: Account Address\n            type: string\n          name: account_address\n          in: path\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: include token details\n          required: false\n          schema:\n            title: Include Token Details\n            type: boolean\n            description: include token details\n            default: false\n          name: include_token_details\n          in: query\n        - description: enable using indexed position data\n          required: false\n          schema:\n            title: Enable Index\n            type: boolean\n            description: enable using indexed position data\n            default: false\n          name: enable_index\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_MembershipPositionsResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getmembershiptokenposition\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getmembershiptokenposition\n                anyOf:\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Position/{account_address}/Coupon:\n    get:\n      tags:\n        - Position\n      summary: Coupon Token Position\n      description: 'Endpoint: /Position/{account_address}/Coupon'\n      operationId: GetCouponTokenPosition\n      parameters:\n        - required: true\n          schema:\n            title: Account Address\n            type: string\n          name: account_address\n          in: path\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - description: include token details\n          required: false\n          schema:\n            title: Include Token Details\n            type: boolean\n            description: include token details\n            default: false\n          name: include_token_details\n          in: query\n        - description: enable using indexed position data\n          required: false\n          schema:\n            title: Enable Index\n            type: boolean\n            description: enable using indexed position data\n            default: false\n          name: enable_index\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_CouponPositionsResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getcoupontokenposition\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getcoupontokenposition\n                anyOf:\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Position/{account_address}/Share/{token_address}:\n    get:\n      tags:\n        - Position\n      summary: Share Token Position By Token Address\n      description: 'Endpoint: /Position/{account_address}/Share/{contract_address}'\n      operationId: GetShareTokenPositionByAddress\n      parameters:\n        - required: true\n          schema:\n            title: Account Address\n            type: string\n          name: account_address\n          in: path\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.position.SecurityTokenPositionWithDetail_app.model.schema.token_share.RetrieveShareTokenResponse__'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getsharetokenpositionbyaddress\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getsharetokenpositionbyaddress\n                anyOf:\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Position/{account_address}/StraightBond/{token_address}:\n    get:\n      tags:\n        - Position\n      summary: StraightBond Token Position By Token Address\n      description: 'Endpoint: /Position/{account_address}/StraightBond/{contract_address}'\n      operationId: GetStraightBondTokenPositionByAddress\n      parameters:\n        - required: true\n          schema:\n            title: Account Address\n            type: string\n          name: account_address\n          in: path\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.position.SecurityTokenPositionWithDetail_app.model.schema.token_bond.RetrieveStraightBondTokenResponse__'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getstraightbondtokenpositionbyaddress\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getstraightbondtokenpositionbyaddress\n                anyOf:\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Position/{account_address}/Membership/{token_address}:\n    get:\n      tags:\n        - Position\n      summary: Membership Token Position By Token Address\n      description: 'Endpoint: /Position/{account_address}/Membership/{contract_address}'\n      operationId: GetMembershipTokenPositionByAddress\n      parameters:\n        - required: true\n          schema:\n            title: Account Address\n            type: string\n          name: account_address\n          in: path\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_MembershipPositionWithDetail_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getmembershiptokenpositionbyaddress\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getmembershiptokenpositionbyaddress\n                anyOf:\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Position/{account_address}/Coupon/{token_address}:\n    get:\n      tags:\n        - Position\n      summary: Coupon Token Position By Token Address\n      description: 'Endpoint: /Position/{account_address}/Coupon/{contract_address}'\n      operationId: GetCouponTokenPositionByAddress\n      parameters:\n        - required: true\n          schema:\n            title: Account Address\n            type: string\n          name: account_address\n          in: path\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_CouponPositionWithDetail_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getcoupontokenpositionbyaddress\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                title: Response 404 Getcoupontokenpositionbyaddress\n                anyOf:\n                  - $ref: '#/components/schemas/DataNotExistsErrorResponse'\n                  - $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /Notifications:\n    get:\n      tags:\n        - Notifications\n      summary: Notification List\n      description: 'Endpoint: /Notifications/'\n      operationId: GetNotifications\n      parameters:\n        - description: start position\n          required: false\n          schema:\n            title: Offset\n            minimum: 0\n            type: integer\n            description: start position\n          name: offset\n          in: query\n        - description: number of set\n          required: false\n          schema:\n            title: Limit\n            minimum: 0\n            type: integer\n            description: number of set\n          name: limit\n          in: query\n        - required: false\n          schema:\n            title: Address\n            type: string\n          name: address\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/NotificationType'\n          name: notification_type\n          in: query\n        - required: false\n          schema:\n            title: Priority\n            maximum: 2\n            minimum: 0\n            type: integer\n          name: priority\n          in: query\n        - description: sort item\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/NotificationsSortItem'\n            description: sort item\n            default: created\n          name: sort_item\n          in: query\n        - description: 'sort order(0: ASC, 1: DESC)'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SortOrder'\n            description: 'sort order(0: ASC, 1: DESC)'\n            default: 0\n          name: sort_order\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_NotificationsResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Notifications/Read:\n    post:\n      tags:\n        - Notifications\n      summary: Mark all notifications as read\n      description: 'Endpoint: /Notifications/Read/'\n      operationId: NotificationsRead\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationReadRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Notifications/Count:\n    get:\n      tags:\n        - Notifications\n      summary: Get the number of unread notifications\n      description: 'Endpoint: /Notifications/Count/'\n      operationId: NotificationsCount\n      parameters:\n        - required: true\n          schema:\n            title: Address\n            type: string\n          name: address\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_NotificationsCountResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Notifications/{notification_id}:\n    post:\n      tags:\n        - Notifications\n      summary: Update Notification\n      description: 'Endpoint: /Notifications/{id}'\n      operationId: PostNotifications\n      parameters:\n        - description: Notification id\n          required: true\n          schema:\n            title: Notification Id\n            type: string\n            description: Notification id\n          name: notification_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateNotificationRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_NotificationUpdateResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n    delete:\n      tags:\n        - Notifications\n      summary: Delete Notification\n      operationId: DeleteNotification\n      parameters:\n        - description: Notification id\n          required: true\n          schema:\n            title: Notification Id\n            type: string\n            description: Notification id\n          name: notification_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /E2EMessage/EncryptionKey/{account_address}:\n    get:\n      tags:\n        - E2EMessage\n      summary: Retrieve message encryption key\n      description: 'Endpoint: /E2EMessage/EncryptionKey/{account_address}'\n      operationId: EncryptionKey\n      parameters:\n        - description: Account address (message receiver)\n          required: true\n          schema:\n            title: Account Address\n            type: string\n            description: Account address (message receiver)\n          name: account_address\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_E2EMessageEncryptionKeyResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Encryptionkey\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataNotExistsErrorResponse'\n  /Events/E2EMessaging:\n    get:\n      tags:\n        - Events\n      summary: List all E2EMessaging event logs\n      description: List all E2EMessaging event logs\n      operationId: E2EMessagingEvents\n      parameters:\n        - description: from block number\n          required: true\n          schema:\n            title: From Block\n            minimum: 1\n            type: integer\n            description: from block number\n          name: from_block\n          in: query\n        - description: to block number\n          required: true\n          schema:\n            title: To Block\n            minimum: 1\n            type: integer\n            description: to block number\n          name: to_block\n          in: query\n        - description: events to get\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/E2EMessagingEventType'\n            description: events to get\n          name: event\n          in: query\n        - description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{\"sender\": \"0x0000000000000000000000000000000000000000\"}```'\n          required: false\n          schema:\n            title: Argument Filters\n            type: string\n            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{\"sender\": \"0x0000000000000000000000000000000000000000\"}```'\n          name: argument_filters\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 E2Emessagingevents\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Events/IbetEscrow:\n    get:\n      tags:\n        - Events\n      summary: List all IbetEscrow event logs\n      description: List all IbetEscrow event logs\n      operationId: IbetEscrowEvents\n      parameters:\n        - description: from block number\n          required: true\n          schema:\n            title: From Block\n            minimum: 1\n            type: integer\n            description: from block number\n          name: from_block\n          in: query\n        - description: to block number\n          required: true\n          schema:\n            title: To Block\n            minimum: 1\n            type: integer\n            description: to block number\n          name: to_block\n          in: query\n        - description: events to get\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/IbetEscrowEventType'\n            description: events to get\n          name: event\n          in: query\n        - description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    \"escrowId\": 0    \"token\": \"0x0000000000000000000000000000000000000000\"}```'\n          required: false\n          schema:\n            title: Argument Filters\n            type: string\n            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    \"escrowId\": 0    \"token\": \"0x0000000000000000000000000000000000000000\"}```'\n          name: argument_filters\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Ibetescrowevents\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /Events/IbetSecurityTokenEscrow:\n    get:\n      tags:\n        - Events\n      summary: List all IbetSecurityTokenEscrow event logs\n      description: List all IbetSecurityTokenEscrow event logs\n      operationId: IbetSecurityTokenEscrowEvents\n      parameters:\n        - description: from block number\n          required: true\n          schema:\n            title: From Block\n            minimum: 1\n            type: integer\n            description: from block number\n          name: from_block\n          in: query\n        - description: to block number\n          required: true\n          schema:\n            title: To Block\n            minimum: 1\n            type: integer\n            description: to block number\n          name: to_block\n          in: query\n        - description: events to get\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/IbetSecurityTokenEscrowEventType'\n            description: events to get\n          name: event\n          in: query\n        - description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    \"escrowId\": 0    \"token\": \"0x0000000000000000000000000000000000000000\"}```'\n          required: false\n          schema:\n            title: Argument Filters\n            type: string\n            description: 'filter argument. serialize obj to a JSON formatted str required.eg.```{    \"escrowId\": 0    \"token\": \"0x0000000000000000000000000000000000000000\"}```'\n          name: argument_filters\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllEventsResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Ibetsecuritytokenescrowevents\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n  /DEX/Market/Agreement:\n    get:\n      tags:\n        - IbetExchange\n      summary: Agreement Details\n      description: 約定情報参照\n      operationId: GetAgreement\n      parameters:\n        - description: order id\n          required: true\n          schema:\n            title: Order Id\n            type: integer\n            description: order id\n          name: order_id\n          in: query\n        - description: agreement id\n          required: true\n          schema:\n            title: Agreement Id\n            type: integer\n            description: agreement id\n          name: agreement_id\n          in: query\n        - description: exchange_address\n          required: true\n          schema:\n            title: Exchange Address\n            type: string\n            description: exchange_address\n          name: exchange_address\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_RetrieveAgreementDetailResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Getagreement\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/Market/OrderBook/Membership:\n    get:\n      tags:\n        - IbetExchange\n      summary: Membership Token Order Book\n      description: '[会員権]板情報取得'\n      operationId: MembershipOrderBook\n      parameters:\n        - description: Orderer's account address. Orders from the given address will not be included in the response.\n          required: false\n          schema:\n            title: Account Address\n            type: string\n            description: Orderer's account address. Orders from the given address will not be included in the response.\n          name: account_address\n          in: query\n        - description: Token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: Token address\n          name: token_address\n          in: query\n        - description: Settlement agent address on ibet exchange\n          required: true\n          schema:\n            title: Exchange Agent Address\n            type: string\n            description: Settlement agent address on ibet exchange\n          name: exchange_agent_address\n          in: query\n        - description: Order type to be executed by the Orderer. If \"buy\" is selected, the sell order book will be returned.\n          required: true\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderType'\n            description: Order type to be executed by the Orderer. If \"buy\" is selected, the sell order book will be returned.\n          name: order_type\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderBookItemResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/Market/LastPrice/Membership:\n    get:\n      tags:\n        - IbetExchange\n      summary: Membership Token Last Price (Bulk Get)\n      description: '[会員権]現在値取得'\n      operationId: MembershipLastPrice\n      parameters:\n        - description: Token address list\n          required: true\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: Token address list\n          name: address_list\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLastPriceResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/Market/Tick/Membership:\n    get:\n      tags:\n        - IbetExchange\n      summary: Membership Token Tick (Bulk Get)\n      description: '[会員権]歩み値取得'\n      operationId: MembershipTick\n      parameters:\n        - description: Token address list\n          required: true\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: Token address list\n          name: address_list\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllTicksResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/Market/OrderBook/Coupon:\n    get:\n      tags:\n        - IbetExchange\n      summary: Coupon Token Order Book\n      description: '[クーポン]板情報取得'\n      operationId: CouponOrderBook\n      parameters:\n        - description: Orderer's account address. Orders from the given address will not be included in the response.\n          required: false\n          schema:\n            title: Account Address\n            type: string\n            description: Orderer's account address. Orders from the given address will not be included in the response.\n          name: account_address\n          in: query\n        - description: Token address\n          required: true\n          schema:\n            title: Token Address\n            type: string\n            description: Token address\n          name: token_address\n          in: query\n        - description: Settlement agent address on ibet exchange\n          required: true\n          schema:\n            title: Exchange Agent Address\n            type: string\n            description: Settlement agent address on ibet exchange\n          name: exchange_agent_address\n          in: query\n        - description: Order type to be executed by the Orderer. If \"buy\" is selected, the sell order book will be returned.\n          required: true\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderType'\n            description: Order type to be executed by the Orderer. If \"buy\" is selected, the sell order book will be returned.\n          name: order_type\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllOrderBookItemResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/Market/LastPrice/Coupon:\n    get:\n      tags:\n        - IbetExchange\n      summary: Coupon Token Last Price (Bulk Get)\n      description: '[クーポン]現在値取得'\n      operationId: CouponLastPrice\n      parameters:\n        - description: Token address list\n          required: true\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: Token address list\n          name: address_list\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllLastPriceResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/Market/Tick/Coupon:\n    get:\n      tags:\n        - IbetExchange\n      summary: Coupon Token Tick (Bulk Get)\n      description: '[クーポン]歩み値取得'\n      operationId: CouponTick\n      parameters:\n        - description: Token address list\n          required: true\n          schema:\n            title: Address List\n            type: array\n            items:\n              type: string\n            description: Token address list\n          name: address_list\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_ListAllTicksResponse_'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/OrderList/Membership:\n    get:\n      tags:\n        - IbetExchange\n      summary: Membership Order History (Bulk Get)\n      description: 'Endpoint: /DEX/OrderList/Membership'\n      operationId: MembershipOrderList\n      parameters:\n        - description: Account address list\n          required: true\n          schema:\n            title: Account Address List\n            type: array\n            items:\n              type: string\n            description: Account address list\n          name: account_address_list\n          in: query\n        - description: Whether to include canceled orders or canceled agreements.\n          required: false\n          schema:\n            title: Include Canceled Items\n            type: boolean\n            description: Whether to include canceled orders or canceled agreements.\n          name: include_canceled_items\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.token_membership.RetrieveMembershipTokenResponse__'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/OrderList/Coupon:\n    get:\n      tags:\n        - IbetExchange\n      summary: Coupon Order History (Bulk Get)\n      description: 'Endpoint: /DEX/OrderList/Coupon'\n      operationId: CouponOrderList\n      parameters:\n        - description: Account address list\n          required: true\n          schema:\n            title: Account Address List\n            type: array\n            items:\n              type: string\n            description: Account address list\n          name: account_address_list\n          in: query\n        - description: Whether to include canceled orders or canceled agreements.\n          required: false\n          schema:\n            title: Include Canceled Items\n            type: boolean\n            description: Whether to include canceled orders or canceled agreements.\n          name: include_canceled_items\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.token_coupon.RetrieveCouponTokenResponse__'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\n  /DEX/OrderList/{token_address}:\n    get:\n      tags:\n        - IbetExchange\n      summary: Order History filtered by token (Bulk Get)\n      description: 'Endpoint: /DEX/OrderList/{token_address}'\n      operationId: IbetExchange\n      parameters:\n        - required: true\n          schema:\n            title: Token Address\n            type: string\n          name: token_address\n          in: path\n        - description: Account address list\n          required: true\n          schema:\n            title: Account Address List\n            type: array\n            items:\n              type: string\n            description: Account address list\n          name: account_address_list\n          in: query\n        - description: Whether to include canceled orders or canceled agreements.\n          required: false\n          schema:\n            title: Include Canceled Items\n            type: boolean\n            description: Whether to include canceled orders or canceled agreements.\n          name: include_canceled_items\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.dex_order_list.TokenAddress__'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                title: Response 400 Ibetexchange\n                anyOf:\n                  - $ref: '#/components/schemas/InvalidParameterErrorResponse'\n                  - $ref: '#/components/schemas/RequestValidationErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotSupportedErrorResponse'\ncomponents:\n  schemas:\n    ABI:\n      title: ABI\n      type: array\n      items: {}\n    Agreement:\n      title: Agreement\n      required:\n        - exchange_address\n        - order_id\n        - agreement_id\n        - amount\n        - price\n        - is_buy\n        - canceled\n        - agreement_timestamp\n      type: object\n      properties:\n        exchange_address:\n          title: Exchange Address\n          type: string\n          description: exchange address\n        order_id:\n          title: Order Id\n          type: integer\n        agreement_id:\n          title: Agreement Id\n          type: integer\n        amount:\n          title: Amount\n          type: integer\n        price:\n          title: Price\n          type: integer\n        is_buy:\n          title: Is Buy\n          type: boolean\n        canceled:\n          title: Canceled\n          type: boolean\n        agreement_timestamp:\n          title: Agreement Timestamp\n          type: string\n    AgreementSet:\n      title: AgreementSet\n      required:\n        - token\n        - agreement\n        - sort_id\n      type: object\n      properties:\n        token:\n          title: Token\n          anyOf:\n            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'\n            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'\n            - $ref: '#/components/schemas/app__model__schema__dex_order_list__TokenAddress'\n        agreement:\n          $ref: '#/components/schemas/Agreement'\n        sort_id:\n          title: Sort Id\n          type: integer\n    AppErrorMetainfo:\n      title: AppErrorMetainfo\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 0\n        message:\n          title: Message\n          type: string\n          example: ''\n    AppErrorResponse:\n      title: AppErrorResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/AppErrorMetainfo'\n        details:\n          title: Details\n          type: object\n    ApprovalStatus:\n      title: ApprovalStatus\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n      type: integer\n      description: An enumeration.\n    BlockData:\n      title: BlockData\n      required:\n        - number\n        - hash\n        - transactions\n        - timestamp\n        - gas_limit\n        - gas_used\n        - size\n      type: object\n      properties:\n        number:\n          title: Number\n          minimum: 0\n          type: integer\n          description: Block number\n        hash:\n          title: Hash\n          type: string\n          description: Block hash\n        transactions:\n          title: Transactions\n          type: array\n          items:\n            type: string\n          description: Transaction list\n        timestamp:\n          title: Timestamp\n          type: integer\n        gas_limit:\n          title: Gas Limit\n          type: integer\n        gas_used:\n          title: Gas Used\n          type: integer\n        size:\n          title: Size\n          minimum: 0\n          type: integer\n    BlockDataDetail:\n      title: BlockDataDetail\n      required:\n        - number\n        - parent_hash\n        - sha3_uncles\n        - miner\n        - state_root\n        - transactions_root\n        - receipts_root\n        - logs_bloom\n        - difficulty\n        - gas_limit\n        - gas_used\n        - timestamp\n        - proof_of_authority_data\n        - mix_hash\n        - nonce\n        - hash\n        - size\n        - transactions\n      type: object\n      properties:\n        number:\n          title: Number\n          minimum: 0\n          type: integer\n          description: Block number\n        parent_hash:\n          title: Parent Hash\n          type: string\n        sha3_uncles:\n          title: Sha3 Uncles\n          type: string\n        miner:\n          title: Miner\n          type: string\n        state_root:\n          title: State Root\n          type: string\n        transactions_root:\n          title: Transactions Root\n          type: string\n        receipts_root:\n          title: Receipts Root\n          type: string\n        logs_bloom:\n          title: Logs Bloom\n          type: string\n        difficulty:\n          title: Difficulty\n          type: integer\n        gas_limit:\n          title: Gas Limit\n          type: integer\n        gas_used:\n          title: Gas Used\n          type: integer\n        timestamp:\n          title: Timestamp\n          type: integer\n        proof_of_authority_data:\n          title: Proof Of Authority Data\n          type: string\n        mix_hash:\n          title: Mix Hash\n          type: string\n        nonce:\n          title: Nonce\n          type: string\n        hash:\n          title: Hash\n          type: string\n          description: Block hash\n        size:\n          title: Size\n          minimum: 0\n          type: integer\n        transactions:\n          title: Transactions\n          type: array\n          items:\n            type: string\n          description: Transaction list\n    BlockDataListResponse:\n      title: BlockDataListResponse\n      required:\n        - result_set\n        - block_data\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        block_data:\n          title: Block Data\n          type: array\n          items:\n            $ref: '#/components/schemas/BlockData'\n    BlockDataResponse:\n      $ref: '#/components/schemas/BlockDataDetail'\n      title: BlockDataResponse\n    BlockIdentifier:\n      title: BlockIdentifier\n      enum:\n        - latest\n        - earliest\n        - pending\n      type: string\n      description: An enumeration.\n    CompleteAgreementSet:\n      title: CompleteAgreementSet\n      required:\n        - token\n        - agreement\n        - sort_id\n        - settlement_timestamp\n      type: object\n      properties:\n        token:\n          title: Token\n          anyOf:\n            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'\n            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'\n            - $ref: '#/components/schemas/app__model__schema__dex_order_list__TokenAddress'\n        agreement:\n          $ref: '#/components/schemas/Agreement'\n        sort_id:\n          title: Sort Id\n          type: integer\n        settlement_timestamp:\n          title: Settlement Timestamp\n          type: string\n          description: settlement timestamp\n    CouponImage:\n      title: CouponImage\n      required:\n        - id\n        - url\n      type: object\n      properties:\n        id:\n          title: Id\n          type: integer\n        url:\n          title: Url\n          type: string\n    CouponPositionWithAddress:\n      title: CouponPositionWithAddress\n      required:\n        - balance\n        - exchange_balance\n        - exchange_commitment\n        - used\n        - token_address\n      type: object\n      properties:\n        balance:\n          title: Balance\n          type: integer\n        exchange_balance:\n          title: Exchange Balance\n          type: integer\n        exchange_commitment:\n          title: Exchange Commitment\n          type: integer\n        used:\n          title: Used\n          type: integer\n        token_address:\n          title: Token Address\n          type: string\n          description: set when include_token_details=true\n    CouponPositionWithDetail:\n      title: CouponPositionWithDetail\n      required:\n        - balance\n        - exchange_balance\n        - exchange_commitment\n        - used\n        - token\n      type: object\n      properties:\n        balance:\n          title: Balance\n          type: integer\n        exchange_balance:\n          title: Exchange Balance\n          type: integer\n        exchange_commitment:\n          title: Exchange Commitment\n          type: integer\n        used:\n          title: Used\n          type: integer\n        token:\n          title: Token\n          allOf:\n            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'\n          description: set when include_token_details=false or null\n    CouponPositionsResponse:\n      title: CouponPositionsResponse\n      required:\n        - result_set\n        - positions\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        positions:\n          title: Positions\n          anyOf:\n            - type: array\n              items:\n                $ref: '#/components/schemas/CouponPositionWithDetail'\n            - type: array\n              items:\n                $ref: '#/components/schemas/CouponPositionWithAddress'\n    CouponTokensSortItem:\n      title: CouponTokensSortItem\n      enum:\n        - token_address\n        - owner_address\n        - name\n        - symbol\n        - company_name\n        - tradable_exchange\n        - status\n        - personal_info_address\n        - transferable\n        - initial_offering_status\n        - created\n      type: string\n      description: An enumeration.\n    CreateTokenHoldersCollectionRequest:\n      title: CreateTokenHoldersCollectionRequest\n      required:\n        - list_id\n        - block_number\n      type: object\n      properties:\n        list_id:\n          title: List Id\n          type: string\n          description: Unique id to be assigned to each token holder list.This must be Version4 UUID.\n          format: uuid\n          example: cfd83622-34dc-4efe-a68b-2cc275d3d824\n        block_number:\n          title: Block Number\n          type: integer\n          description: block number\n    CreateTokenHoldersCollectionResponse:\n      title: CreateTokenHoldersCollectionResponse\n      required:\n        - list_id\n        - status\n      type: object\n      properties:\n        list_id:\n          title: List Id\n          type: string\n          description: Unique id to be assigned to each token holder list.This must be Version4 UUID.\n          format: uuid\n          example: cfd83622-34dc-4efe-a68b-2cc275d3d824\n        status:\n          allOf:\n            - $ref: '#/components/schemas/TokenHoldersCollectionBatchStatus'\n          description: status code of batch job\n    DataConflictErrorMetainfo:\n      title: DataConflictErrorMetainfo\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 40\n        message:\n          title: Message\n          type: string\n          example: Data Conflict\n    DataConflictErrorResponse:\n      title: DataConflictErrorResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/DataConflictErrorMetainfo'\n        details:\n          title: Details\n          type: object\n    DataNotExistsErrorMetainfo:\n      title: DataNotExistsErrorMetainfo\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 30\n        message:\n          title: Message\n          type: string\n          example: Data Not Exists\n    DataNotExistsErrorResponse:\n      title: DataNotExistsErrorResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/DataNotExistsErrorMetainfo'\n        details:\n          title: Details\n          type: object\n    DividendInformation:\n      title: DividendInformation\n      required:\n        - dividends\n        - dividend_record_date\n        - dividend_payment_date\n      type: object\n      properties:\n        dividends:\n          title: Dividends\n          type: number\n          example: 999.9999999999999\n        dividend_record_date:\n          title: Dividend Record Date\n          type: string\n          example: '20200909'\n        dividend_payment_date:\n          title: Dividend Payment Date\n          type: string\n          example: '20201001'\n    E2EMessageEncryptionKeyResponse:\n      title: E2EMessageEncryptionKeyResponse\n      required:\n        - key\n        - key_type\n      type: object\n      properties:\n        key:\n          title: Key\n          type: string\n          description: Message encryption key\n        key_type:\n          title: Key Type\n          type: string\n          description: key type\n          example: RSA4096\n    E2EMessagingEventType:\n      title: E2EMessagingEventType\n      enum:\n        - PublicKeyUpdated\n        - Message\n      type: string\n      description: An enumeration.\n    Event:\n      title: Event\n      required:\n        - event\n        - transaction_hash\n        - block_number\n        - block_timestamp\n        - log_index\n      type: object\n      properties:\n        event:\n          title: Event\n          type: string\n          description: the event name\n        args:\n          title: Args\n          description: event args\n        transaction_hash:\n          title: Transaction Hash\n          type: string\n          description: transaction hash\n        block_number:\n          title: Block Number\n          type: integer\n          description: the block number where this log was in\n        block_timestamp:\n          title: Block Timestamp\n          type: integer\n          description: timestamp where this log was in\n        log_index:\n          title: Log Index\n          type: integer\n          description: integer of the log index position in the block\n    GenericSecurityTokenPositionsResponse:\n      title: GenericSecurityTokenPositionsResponse\n      required:\n        - result_set\n        - positions\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        positions:\n          title: Positions\n          anyOf:\n            - type: array\n              items:\n                $ref: '#/components/schemas/SecurityTokenPositionWithDetail'\n            - type: array\n              items:\n                $ref: '#/components/schemas/SecurityTokenPositionWithAddress'\n    GenericSuccessResponse_ABI_:\n      title: GenericSuccessResponse[ABI]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ABI'\n    GenericSuccessResponse_BlockDataListResponse_:\n      title: GenericSuccessResponse[BlockDataListResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/BlockDataListResponse'\n    GenericSuccessResponse_BlockDataResponse_:\n      title: GenericSuccessResponse[BlockDataResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/BlockDataResponse'\n    GenericSuccessResponse_CouponPositionWithDetail_:\n      title: GenericSuccessResponse[CouponPositionWithDetail]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/CouponPositionWithDetail'\n    GenericSuccessResponse_CouponPositionsResponse_:\n      title: GenericSuccessResponse[CouponPositionsResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/CouponPositionsResponse'\n    GenericSuccessResponse_CreateTokenHoldersCollectionResponse_:\n      title: GenericSuccessResponse[CreateTokenHoldersCollectionResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/CreateTokenHoldersCollectionResponse'\n    GenericSuccessResponse_E2EMessageEncryptionKeyResponse_:\n      title: GenericSuccessResponse[E2EMessageEncryptionKeyResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/E2EMessageEncryptionKeyResponse'\n    GenericSuccessResponse_GetAdminTokenTypeResponse_:\n      title: GenericSuccessResponse[GetAdminTokenTypeResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/GetAdminTokenTypeResponse'\n    GenericSuccessResponse_GetBlockSyncStatusResponse_:\n      title: GenericSuccessResponse[GetBlockSyncStatusResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/GetBlockSyncStatusResponse'\n    GenericSuccessResponse_GetNodeInfoResponse_:\n      title: GenericSuccessResponse[GetNodeInfoResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/GetNodeInfoResponse'\n    GenericSuccessResponse_ListAllAdminTokensResponse_:\n      title: GenericSuccessResponse[ListAllAdminTokensResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllAdminTokensResponse'\n    GenericSuccessResponse_ListAllCompanyInfoResponse_:\n      title: GenericSuccessResponse[ListAllCompanyInfoResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllCompanyInfoResponse'\n    GenericSuccessResponse_ListAllCompanyTokensResponse_:\n      title: GenericSuccessResponse[ListAllCompanyTokensResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllCompanyTokensResponse'\n    GenericSuccessResponse_ListAllCouponTokenAddressesResponse_:\n      title: GenericSuccessResponse[ListAllCouponTokenAddressesResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllCouponTokenAddressesResponse'\n    GenericSuccessResponse_ListAllCouponTokensResponse_:\n      title: GenericSuccessResponse[ListAllCouponTokensResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllCouponTokensResponse'\n    GenericSuccessResponse_ListAllEventsResponse_:\n      title: GenericSuccessResponse[ListAllEventsResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllEventsResponse'\n    GenericSuccessResponse_ListAllLastPriceResponse_:\n      title: GenericSuccessResponse[ListAllLastPriceResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllLastPriceResponse'\n    GenericSuccessResponse_ListAllMembershipTokenAddressesResponse_:\n      title: GenericSuccessResponse[ListAllMembershipTokenAddressesResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllMembershipTokenAddressesResponse'\n    GenericSuccessResponse_ListAllMembershipTokensResponse_:\n      title: GenericSuccessResponse[ListAllMembershipTokensResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllMembershipTokensResponse'\n    GenericSuccessResponse_ListAllOrderBookItemResponse_:\n      title: GenericSuccessResponse[ListAllOrderBookItemResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllOrderBookItemResponse'\n    GenericSuccessResponse_ListAllShareTokenAddressesResponse_:\n      title: GenericSuccessResponse[ListAllShareTokenAddressesResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllShareTokenAddressesResponse'\n    GenericSuccessResponse_ListAllShareTokensResponse_:\n      title: GenericSuccessResponse[ListAllShareTokensResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllShareTokensResponse'\n    GenericSuccessResponse_ListAllStraightBondTokenAddressesResponse_:\n      title: GenericSuccessResponse[ListAllStraightBondTokenAddressesResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllStraightBondTokenAddressesResponse'\n    GenericSuccessResponse_ListAllStraightBondTokensResponse_:\n      title: GenericSuccessResponse[ListAllStraightBondTokensResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllStraightBondTokensResponse'\n    GenericSuccessResponse_ListAllTicksResponse_:\n      title: GenericSuccessResponse[ListAllTicksResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllTicksResponse'\n    GenericSuccessResponse_MembershipPositionWithDetail_:\n      title: GenericSuccessResponse[MembershipPositionWithDetail]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/MembershipPositionWithDetail'\n    GenericSuccessResponse_MembershipPositionsResponse_:\n      title: GenericSuccessResponse[MembershipPositionsResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/MembershipPositionsResponse'\n    GenericSuccessResponse_NotificationUpdateResponse_:\n      title: GenericSuccessResponse[NotificationUpdateResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/NotificationUpdateResponse'\n    GenericSuccessResponse_NotificationsCountResponse_:\n      title: GenericSuccessResponse[NotificationsCountResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/NotificationsCountResponse'\n    GenericSuccessResponse_NotificationsResponse_:\n      title: GenericSuccessResponse[NotificationsResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/NotificationsResponse'\n    GenericSuccessResponse_RetrieveAdminTokenResponse_:\n      title: GenericSuccessResponse[RetrieveAdminTokenResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrieveAdminTokenResponse'\n    GenericSuccessResponse_RetrieveAgreementDetailResponse_:\n      title: GenericSuccessResponse[RetrieveAgreementDetailResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrieveAgreementDetailResponse'\n    GenericSuccessResponse_RetrieveCompanyInfoResponse_:\n      title: GenericSuccessResponse[RetrieveCompanyInfoResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrieveCompanyInfoResponse'\n    GenericSuccessResponse_RetrieveCouponTokenResponse_:\n      title: GenericSuccessResponse[RetrieveCouponTokenResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrieveCouponTokenResponse'\n    GenericSuccessResponse_RetrieveMembershipTokenResponse_:\n      title: GenericSuccessResponse[RetrieveMembershipTokenResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrieveMembershipTokenResponse'\n    GenericSuccessResponse_RetrievePaymentAccountRegistrationStatusResponse_:\n      title: GenericSuccessResponse[RetrievePaymentAccountRegistrationStatusResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrievePaymentAccountRegistrationStatusResponse'\n    GenericSuccessResponse_RetrievePersonalInfoRegistrationStatusResponse_:\n      title: GenericSuccessResponse[RetrievePersonalInfoRegistrationStatusResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrievePersonalInfoRegistrationStatusResponse'\n    GenericSuccessResponse_RetrieveShareTokenResponse_:\n      title: GenericSuccessResponse[RetrieveShareTokenResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrieveShareTokenResponse'\n    GenericSuccessResponse_RetrieveStraightBondTokenResponse_:\n      title: GenericSuccessResponse[RetrieveStraightBondTokenResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'\n    GenericSuccessResponse_SendRawTransactionsNoWaitResponse_:\n      title: GenericSuccessResponse[SendRawTransactionsNoWaitResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/SendRawTransactionsNoWaitResponse'\n    GenericSuccessResponse_SendRawTransactionsResponse_:\n      title: GenericSuccessResponse[SendRawTransactionsResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/SendRawTransactionsResponse'\n    GenericSuccessResponse_TokenHoldersCollectionResponse_:\n      title: GenericSuccessResponse[TokenHoldersCollectionResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TokenHoldersCollectionResponse'\n    GenericSuccessResponse_TokenHoldersCountResponse_:\n      title: GenericSuccessResponse[TokenHoldersCountResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TokenHoldersCountResponse'\n    GenericSuccessResponse_TokenHoldersResponse_:\n      title: GenericSuccessResponse[TokenHoldersResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TokenHoldersResponse'\n    GenericSuccessResponse_TokenStatusResponse_:\n      title: GenericSuccessResponse[TokenStatusResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TokenStatusResponse'\n    GenericSuccessResponse_TransactionCountResponse_:\n      title: GenericSuccessResponse[TransactionCountResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TransactionCountResponse'\n    GenericSuccessResponse_TransferApprovalHistoriesResponse_:\n      title: GenericSuccessResponse[TransferApprovalHistoriesResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TransferApprovalHistoriesResponse'\n    GenericSuccessResponse_TransferHistoriesResponse_:\n      title: GenericSuccessResponse[TransferHistoriesResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TransferHistoriesResponse'\n    GenericSuccessResponse_TxDataListResponse_:\n      title: GenericSuccessResponse[TxDataListResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TxDataListResponse'\n    GenericSuccessResponse_TxDataResponse_:\n      title: GenericSuccessResponse[TxDataResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/TxDataResponse'\n    GenericSuccessResponse_WaitForTransactionReceiptResponse_:\n      title: GenericSuccessResponse[WaitForTransactionReceiptResponse]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/WaitForTransactionReceiptResponse'\n    GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.dex_order_list.TokenAddress__:\n      title: GenericSuccessResponse[app.model.schema.dex_order_list.ListAllOrderListResponse[app.model.schema.dex_order_list.TokenAddress]]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllOrderListResponse'\n    GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.token_coupon.RetrieveCouponTokenResponse__:\n      title: GenericSuccessResponse[app.model.schema.dex_order_list.ListAllOrderListResponse[app.model.schema.token_coupon.RetrieveCouponTokenResponse]]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllOrderListResponse'\n    GenericSuccessResponse_app.model.schema.dex_order_list.ListAllOrderListResponse_app.model.schema.token_membership.RetrieveMembershipTokenResponse__:\n      title: GenericSuccessResponse[app.model.schema.dex_order_list.ListAllOrderListResponse[app.model.schema.token_membership.RetrieveMembershipTokenResponse]]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/ListAllOrderListResponse'\n    GenericSuccessResponse_app.model.schema.position.GenericSecurityTokenPositionsResponse_app.model.schema.token_bond.RetrieveStraightBondTokenResponse__:\n      title: GenericSuccessResponse[app.model.schema.position.GenericSecurityTokenPositionsResponse[app.model.schema.token_bond.RetrieveStraightBondTokenResponse]]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/GenericSecurityTokenPositionsResponse'\n    GenericSuccessResponse_app.model.schema.position.GenericSecurityTokenPositionsResponse_app.model.schema.token_share.RetrieveShareTokenResponse__:\n      title: GenericSuccessResponse[app.model.schema.position.GenericSecurityTokenPositionsResponse[app.model.schema.token_share.RetrieveShareTokenResponse]]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/GenericSecurityTokenPositionsResponse'\n    GenericSuccessResponse_app.model.schema.position.SecurityTokenPositionWithDetail_app.model.schema.token_bond.RetrieveStraightBondTokenResponse__:\n      title: GenericSuccessResponse[app.model.schema.position.SecurityTokenPositionWithDetail[app.model.schema.token_bond.RetrieveStraightBondTokenResponse]]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/SecurityTokenPositionWithDetail'\n    GenericSuccessResponse_app.model.schema.position.SecurityTokenPositionWithDetail_app.model.schema.token_share.RetrieveShareTokenResponse__:\n      title: GenericSuccessResponse[app.model.schema.position.SecurityTokenPositionWithDetail[app.model.schema.token_share.RetrieveShareTokenResponse]]\n      required:\n        - meta\n        - data\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          $ref: '#/components/schemas/SecurityTokenPositionWithDetail'\n    GetAdminTokenTypeResponse:\n      title: GetAdminTokenTypeResponse\n      required:\n        - IbetStraightBond\n        - IbetShare\n        - IbetMembership\n        - IbetCoupon\n      type: object\n      properties:\n        IbetStraightBond:\n          title: Ibetstraightbond\n          type: boolean\n        IbetShare:\n          title: Ibetshare\n          type: boolean\n        IbetMembership:\n          title: Ibetmembership\n          type: boolean\n        IbetCoupon:\n          title: Ibetcoupon\n          type: boolean\n    GetBlockSyncStatusResponse:\n      title: GetBlockSyncStatusResponse\n      required:\n        - is_synced\n        - latest_block_number\n      type: object\n      properties:\n        is_synced:\n          title: Is Synced\n          type: boolean\n          description: block sync status\n        latest_block_number:\n          title: Latest Block Number\n          type: integer\n          description: latest block number (returns null if is_synced is false)\n    GetNodeInfoResponse:\n      title: GetNodeInfoResponse\n      type: object\n      properties:\n        payment_gateway_address:\n          title: Payment Gateway Address\n          type: string\n        payment_gateway_abi:\n          title: Payment Gateway Abi\n        personal_info_address:\n          title: Personal Info Address\n          type: string\n        personal_info_abi:\n          title: Personal Info Abi\n        ibet_membership_exchange_address:\n          title: Ibet Membership Exchange Address\n          type: string\n        ibet_membership_exchange_abi:\n          title: Ibet Membership Exchange Abi\n        ibet_coupon_exchange_address:\n          title: Ibet Coupon Exchange Address\n          type: string\n        ibet_coupon_exchange_abi:\n          title: Ibet Coupon Exchange Abi\n        ibet_escrow_address:\n          title: Ibet Escrow Address\n          type: string\n        ibet_escrow_abi:\n          title: Ibet Escrow Abi\n        ibet_security_token_escrow_address:\n          title: Ibet Security Token Escrow Address\n          type: string\n        ibet_security_token_escrow_abi:\n          title: Ibet Security Token Escrow Abi\n        e2e_messaging_address:\n          title: E2E Messaging Address\n          type: string\n        e2e_messaging_abi:\n          title: E2E Messaging Abi\n    HTTPValidationError:\n      title: HTTPValidationError\n      type: object\n      properties:\n        detail:\n          title: Detail\n          type: array\n          items:\n            $ref: '#/components/schemas/ValidationError'\n    IbetEscrowEventType:\n      title: IbetEscrowEventType\n      enum:\n        - Deposited\n        - Withdrawn\n        - EscrowCreated\n        - EscrowCanceled\n        - EscrowFinished\n      type: string\n      description: An enumeration.\n    IbetSecurityTokenEscrowEventType:\n      title: IbetSecurityTokenEscrowEventType\n      enum:\n        - Deposited\n        - Withdrawn\n        - EscrowCreated\n        - EscrowCanceled\n        - EscrowFinished\n        - ApplyForTransfer\n        - CancelTransfer\n        - ApproveTransfer\n        - FinishTransfer\n      type: string\n      description: An enumeration.\n    InvalidParameterErrorMetainfo:\n      title: InvalidParameterErrorMetainfo\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 88\n        message:\n          title: Message\n          type: string\n          example: Invalid Parameter\n    InvalidParameterErrorResponse:\n      title: InvalidParameterErrorResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/InvalidParameterErrorMetainfo'\n        details:\n          title: Details\n          type: object\n    LastPrice:\n      title: LastPrice\n      required:\n        - token_address\n        - last_price\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n        last_price:\n          title: Last Price\n          type: integer\n    ListAllAdminTokensResponse:\n      title: ListAllAdminTokensResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/RetrieveAdminTokenResponse'\n    ListAllCompanyInfoResponse:\n      title: ListAllCompanyInfoResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/RetrieveCompanyInfoResponse'\n    ListAllCompanyTokensResponse:\n      title: ListAllCompanyTokensResponse\n      type: array\n      items:\n        anyOf:\n          - $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'\n          - $ref: '#/components/schemas/RetrieveShareTokenResponse'\n          - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'\n          - $ref: '#/components/schemas/RetrieveCouponTokenResponse'\n    ListAllCouponTokenAddressesResponse:\n      title: ListAllCouponTokenAddressesResponse\n      required:\n        - result_set\n        - address_list\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        address_list:\n          title: Address List\n          type: array\n          items:\n            type: string\n    ListAllCouponTokensResponse:\n      title: ListAllCouponTokensResponse\n      required:\n        - result_set\n        - tokens\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        tokens:\n          title: Tokens\n          type: array\n          items:\n            $ref: '#/components/schemas/RetrieveCouponTokenResponse'\n    ListAllEventsResponse:\n      title: ListAllEventsResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/Event'\n    ListAllLastPriceResponse:\n      title: ListAllLastPriceResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/LastPrice'\n    ListAllMembershipTokenAddressesResponse:\n      title: ListAllMembershipTokenAddressesResponse\n      required:\n        - result_set\n        - address_list\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        address_list:\n          title: Address List\n          type: array\n          items:\n            type: string\n    ListAllMembershipTokensResponse:\n      title: ListAllMembershipTokensResponse\n      required:\n        - result_set\n        - tokens\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        tokens:\n          title: Tokens\n          type: array\n          items:\n            $ref: '#/components/schemas/RetrieveMembershipTokenResponse'\n    ListAllOrderBookItemResponse:\n      title: ListAllOrderBookItemResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/OrderBookItem'\n    ListAllOrderListResponse:\n      title: ListAllOrderListResponse\n      required:\n        - order_list\n        - settlement_list\n        - complete_list\n      type: object\n      properties:\n        order_list:\n          title: Order List\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderSet'\n        settlement_list:\n          title: Settlement List\n          type: array\n          items:\n            $ref: '#/components/schemas/AgreementSet'\n        complete_list:\n          title: Complete List\n          type: array\n          items:\n            $ref: '#/components/schemas/CompleteAgreementSet'\n    ListAllShareTokenAddressesResponse:\n      title: ListAllShareTokenAddressesResponse\n      required:\n        - result_set\n        - address_list\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        address_list:\n          title: Address List\n          type: array\n          items:\n            type: string\n    ListAllShareTokensResponse:\n      title: ListAllShareTokensResponse\n      required:\n        - result_set\n        - tokens\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        tokens:\n          title: Tokens\n          type: array\n          items:\n            $ref: '#/components/schemas/RetrieveShareTokenResponse'\n    ListAllStraightBondTokenAddressesResponse:\n      title: ListAllStraightBondTokenAddressesResponse\n      required:\n        - result_set\n        - address_list\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        address_list:\n          title: Address List\n          type: array\n          items:\n            type: string\n    ListAllStraightBondTokensResponse:\n      title: ListAllStraightBondTokensResponse\n      required:\n        - result_set\n        - tokens\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        tokens:\n          title: Tokens\n          type: array\n          items:\n            $ref: '#/components/schemas/RetrieveStraightBondTokenResponse'\n    ListAllTicksResponse:\n      title: ListAllTicksResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/Ticks'\n    MembershipImage:\n      title: MembershipImage\n      required:\n        - id\n        - url\n      type: object\n      properties:\n        id:\n          title: Id\n          type: integer\n        url:\n          title: Url\n          type: string\n    MembershipPositionWithAddress:\n      title: MembershipPositionWithAddress\n      required:\n        - balance\n        - exchange_balance\n        - exchange_commitment\n        - token_address\n      type: object\n      properties:\n        balance:\n          title: Balance\n          type: integer\n        exchange_balance:\n          title: Exchange Balance\n          type: integer\n        exchange_commitment:\n          title: Exchange Commitment\n          type: integer\n        token_address:\n          title: Token Address\n          type: string\n          description: set when include_token_details=true\n    MembershipPositionWithDetail:\n      title: MembershipPositionWithDetail\n      required:\n        - balance\n        - exchange_balance\n        - exchange_commitment\n        - token\n      type: object\n      properties:\n        balance:\n          title: Balance\n          type: integer\n        exchange_balance:\n          title: Exchange Balance\n          type: integer\n        exchange_commitment:\n          title: Exchange Commitment\n          type: integer\n        token:\n          title: Token\n          allOf:\n            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'\n          description: set when include_token_details=false or null\n    MembershipPositionsResponse:\n      title: MembershipPositionsResponse\n      required:\n        - result_set\n        - positions\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        positions:\n          title: Positions\n          anyOf:\n            - type: array\n              items:\n                $ref: '#/components/schemas/MembershipPositionWithDetail'\n            - type: array\n              items:\n                $ref: '#/components/schemas/MembershipPositionWithAddress'\n    MembershipTokensSortItem:\n      title: MembershipTokensSortItem\n      enum:\n        - token_address\n        - owner_address\n        - name\n        - symbol\n        - company_name\n        - tradable_exchange\n        - status\n        - personal_info_address\n        - transferable\n        - initial_offering_status\n        - created\n      type: string\n      description: An enumeration.\n    NotSupportedErrorMetainfo:\n      title: NotSupportedErrorMetainfo\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 10\n        message:\n          title: Message\n          type: string\n          example: Not Supported\n    NotSupportedErrorResponse:\n      title: NotSupportedErrorResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/NotSupportedErrorMetainfo'\n        details:\n          title: Details\n          type: object\n    Notification:\n      title: Notification\n      required:\n        - notification_type\n        - id\n        - priority\n        - block_timestamp\n        - is_read\n        - is_flagged\n        - is_deleted\n        - metainfo\n        - account_address\n        - sort_id\n        - created\n      type: object\n      properties:\n        notification_type:\n          allOf:\n            - $ref: '#/components/schemas/NotificationType'\n          example: NewOrder\n        id:\n          title: Id\n          type: string\n          example: '0x00000373ca8600000000000000'\n        priority:\n          title: Priority\n          type: integer\n        block_timestamp:\n          title: Block Timestamp\n          type: string\n          description: block timestamp\n        is_read:\n          title: Is Read\n          type: boolean\n        is_flagged:\n          title: Is Flagged\n          type: boolean\n        is_deleted:\n          title: Is Deleted\n          type: boolean\n        deleted_at:\n          title: Deleted At\n          type: string\n          description: datetime of deletion\n        args:\n          title: Args\n        metainfo:\n          title: Metainfo\n          anyOf:\n            - $ref: '#/components/schemas/NotificationMetainfo'\n            - type: object\n        account_address:\n          title: Account Address\n          type: string\n        sort_id:\n          title: Sort Id\n          type: integer\n        created:\n          title: Created\n          type: string\n          description: datetime of create\n    NotificationMetainfo:\n      title: NotificationMetainfo\n      required:\n        - company_name\n        - token_address\n        - token_name\n        - exchange_address\n        - token_type\n      type: object\n      properties:\n        company_name:\n          title: Company Name\n          type: string\n        token_address:\n          title: Token Address\n          type: string\n        token_name:\n          title: Token Name\n          type: string\n        exchange_address:\n          title: Exchange Address\n          type: string\n        token_type:\n          $ref: '#/components/schemas/TokenType'\n    NotificationReadRequest:\n      title: NotificationReadRequest\n      required:\n        - address\n        - is_read\n      type: object\n      properties:\n        address:\n          title: Address\n          type: string\n        is_read:\n          title: Is Read\n          type: boolean\n    NotificationType:\n      title: NotificationType\n      enum:\n        - NewOrder\n        - NewOrderCounterpart\n        - CancelOrder\n        - CancelOrderCounterpart\n        - ForceCancelOrder\n        - BuyAgreement\n        - BuySettlementOK\n        - BuySettlementNG\n        - SellAgreement\n        - SellSettlementOK\n        - SellSettlementNG\n        - Transfer\n        - ApplyForTransfer\n        - ApproveTransfer\n        - CancelTransfer\n      type: string\n      description: An enumeration.\n    NotificationUpdateResponse:\n      title: NotificationUpdateResponse\n      required:\n        - notification_type\n        - id\n        - priority\n        - block_timestamp\n        - is_read\n        - is_flagged\n        - is_deleted\n        - metainfo\n        - account_address\n      type: object\n      properties:\n        notification_type:\n          allOf:\n            - $ref: '#/components/schemas/NotificationType'\n          example: NewOrder\n        id:\n          title: Id\n          type: string\n          example: '0x00000373ca8600000000000000'\n        priority:\n          title: Priority\n          type: integer\n        block_timestamp:\n          title: Block Timestamp\n          type: string\n          description: block timestamp\n        is_read:\n          title: Is Read\n          type: boolean\n        is_flagged:\n          title: Is Flagged\n          type: boolean\n        is_deleted:\n          title: Is Deleted\n          type: boolean\n        deleted_at:\n          title: Deleted At\n          type: string\n          description: datetime of deletion\n        args:\n          title: Args\n        metainfo:\n          title: Metainfo\n          anyOf:\n            - $ref: '#/components/schemas/NotificationMetainfo'\n            - type: object\n        account_address:\n          title: Account Address\n          type: string\n    NotificationsCountResponse:\n      title: NotificationsCountResponse\n      required:\n        - unread_counts\n      type: object\n      properties:\n        unread_counts:\n          title: Unread Counts\n          type: integer\n    NotificationsResponse:\n      title: NotificationsResponse\n      required:\n        - result_set\n        - notifications\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        notifications:\n          title: Notifications\n          type: array\n          items:\n            $ref: '#/components/schemas/Notification'\n    NotificationsSortItem:\n      title: NotificationsSortItem\n      enum:\n        - notification_type\n        - priority\n        - block_timestamp\n        - created\n      type: string\n      description: An enumeration.\n    Order:\n      title: Order\n      required:\n        - order_id\n        - counterpart_address\n        - amount\n        - price\n        - is_buy\n        - canceled\n        - order_timestamp\n      type: object\n      properties:\n        order_id:\n          title: Order Id\n          type: integer\n        counterpart_address:\n          title: Counterpart Address\n          type: string\n        amount:\n          title: Amount\n          type: integer\n        price:\n          title: Price\n          type: integer\n        is_buy:\n          title: Is Buy\n          type: boolean\n        canceled:\n          title: Canceled\n          type: boolean\n        order_timestamp:\n          title: Order Timestamp\n          type: string\n    OrderBookItem:\n      title: OrderBookItem\n      required:\n        - exchange_address\n        - order_id\n        - price\n        - amount\n        - account_address\n      type: object\n      properties:\n        exchange_address:\n          title: Exchange Address\n          type: string\n          description: Exchange contract address\n        order_id:\n          title: Order Id\n          type: integer\n          description: Order id\n        price:\n          title: Price\n          type: integer\n          description: Order price\n        amount:\n          title: Amount\n          type: integer\n          description: Order volume\n        account_address:\n          title: Account Address\n          type: string\n          description: An orderrer of each order book\n    OrderSet:\n      title: OrderSet\n      required:\n        - token\n        - order\n        - sort_id\n      type: object\n      properties:\n        token:\n          title: Token\n          anyOf:\n            - $ref: '#/components/schemas/RetrieveMembershipTokenResponse'\n            - $ref: '#/components/schemas/RetrieveCouponTokenResponse'\n            - $ref: '#/components/schemas/app__model__schema__dex_order_list__TokenAddress'\n        order:\n          $ref: '#/components/schemas/Order'\n        sort_id:\n          title: Sort Id\n          type: integer\n    OrderType:\n      title: OrderType\n      enum:\n        - buy\n        - sell\n      type: string\n      description: An enumeration.\n    RegisterAdminTokenRequest:\n      title: RegisterAdminTokenRequest\n      required:\n        - contract_address\n        - is_public\n      type: object\n      properties:\n        contract_address:\n          title: Contract Address\n          type: string\n          description: Token Address\n        is_public:\n          title: Is Public\n          type: boolean\n          description: Public and private listings\n        max_holding_quantity:\n          title: Max Holding Quantity\n          minimum: 0\n          type: integer\n          description: Maximum holding quantity limit\n        max_sell_amount:\n          title: Max Sell Amount\n          minimum: 0\n          type: integer\n          description: Maximum sell amount limit\n    RequestValidationErrorDict:\n      title: RequestValidationErrorDict\n      required:\n        - loc\n        - msg\n        - type\n      type: object\n      properties:\n        loc:\n          title: Loc\n          type: array\n          items:\n            type: string\n          example:\n            - body\n            - contract_address\n        msg:\n          title: Msg\n          type: string\n          example: field required\n        type:\n          title: Type\n          type: string\n          example: value_error.missing\n    RequestValidationErrorInfo:\n      title: RequestValidationErrorInfo\n      required:\n        - code\n        - message\n        - description\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 88\n        message:\n          title: Message\n          type: string\n          example: Invalid Parameter\n        description:\n          title: Description\n          type: array\n          items:\n            $ref: '#/components/schemas/RequestValidationErrorDict'\n    RequestValidationErrorResponse:\n      title: RequestValidationErrorResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/RequestValidationErrorInfo'\n        details:\n          title: Details\n          type: object\n    ResponseLimitExceededErrorMetainfo:\n      title: ResponseLimitExceededErrorMetainfo\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 30\n        message:\n          title: Message\n          type: string\n          example: Response Limit Exceeded\n    ResponseLimitExceededErrorResponse:\n      title: ResponseLimitExceededErrorResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/ResponseLimitExceededErrorMetainfo'\n        details:\n          title: Details\n          type: object\n    ResultSet:\n      title: ResultSet\n      required:\n        - offset\n        - limit\n      type: object\n      properties:\n        count:\n          title: Count\n          type: integer\n        offset:\n          title: Offset\n          type: integer\n          description: start position\n        limit:\n          title: Limit\n          type: integer\n          description: number of set\n        total:\n          title: Total\n          type: integer\n      description: result set for pagination\n    RetrieveAdminTokenResponse:\n      title: RetrieveAdminTokenResponse\n      required:\n        - id\n        - token_address\n        - is_public\n        - owner_address\n        - created\n      type: object\n      properties:\n        id:\n          title: Id\n          type: integer\n        token_address:\n          title: Token Address\n          type: string\n        is_public:\n          title: Is Public\n          type: boolean\n        max_holding_quantity:\n          title: Max Holding Quantity\n          type: integer\n        max_sell_amount:\n          title: Max Sell Amount\n          type: integer\n        owner_address:\n          title: Owner Address\n          type: string\n        created:\n          title: Created\n          type: string\n          description: Create Datetime (JST)\n    RetrieveAgreementDetailResponse:\n      title: RetrieveAgreementDetailResponse\n      required:\n        - token_address\n        - counterpart\n        - buyer_address\n        - seller_address\n        - amount\n        - price\n        - canceled\n        - paid\n        - expiry\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n          description: token address\n        counterpart:\n          title: Counterpart\n          type: string\n          description: taker account address\n        buyer_address:\n          title: Buyer Address\n          type: string\n          description: buyer account address\n        seller_address:\n          title: Seller Address\n          type: string\n          description: seller account address\n        amount:\n          title: Amount\n          type: integer\n          description: agreement token amount\n        price:\n          title: Price\n          type: integer\n          description: agreement price\n        canceled:\n          title: Canceled\n          type: boolean\n          description: agreement canceled status\n        paid:\n          title: Paid\n          type: boolean\n          description: agreement payment status\n        expiry:\n          title: Expiry\n          type: string\n          description: expiry (unixtime)\n    RetrieveCompanyInfoResponse:\n      title: RetrieveCompanyInfoResponse\n      required:\n        - address\n        - corporate_name\n        - rsa_publickey\n        - homepage\n      type: object\n      properties:\n        address:\n          title: Address\n          type: string\n        corporate_name:\n          title: Corporate Name\n          type: string\n        rsa_publickey:\n          title: Rsa Publickey\n          type: string\n        homepage:\n          title: Homepage\n          type: string\n    RetrieveCouponTokenResponse:\n      title: RetrieveCouponTokenResponse\n      required:\n        - token_address\n        - token_template\n        - owner_address\n        - company_name\n        - rsa_publickey\n        - name\n        - symbol\n        - total_supply\n        - tradable_exchange\n        - contact_information\n        - privacy_policy\n        - status\n        - details\n        - return_details\n        - expiration_date\n        - memo\n        - transferable\n        - initial_offering_status\n        - image_url\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n        token_template:\n          title: Token Template\n          type: string\n          example: IbetCoupon\n        owner_address:\n          title: Owner Address\n          type: string\n          description: issuer address\n        company_name:\n          title: Company Name\n          type: string\n        rsa_publickey:\n          title: Rsa Publickey\n          type: string\n        name:\n          title: Name\n          type: string\n          description: token name\n        symbol:\n          title: Symbol\n          type: string\n          description: token symbol\n        total_supply:\n          title: Total Supply\n          type: integer\n        tradable_exchange:\n          title: Tradable Exchange\n          type: string\n        contact_information:\n          title: Contact Information\n          type: string\n        privacy_policy:\n          title: Privacy Policy\n          type: string\n        status:\n          title: Status\n          type: boolean\n        max_holding_quantity:\n          title: Max Holding Quantity\n          type: integer\n        max_sell_amount:\n          title: Max Sell Amount\n          type: integer\n        details:\n          title: Details\n          type: string\n        return_details:\n          title: Return Details\n          type: string\n        expiration_date:\n          title: Expiration Date\n          type: string\n        memo:\n          title: Memo\n          type: string\n        transferable:\n          title: Transferable\n          type: boolean\n        initial_offering_status:\n          title: Initial Offering Status\n          type: boolean\n        image_url:\n          title: Image Url\n          type: array\n          items:\n            $ref: '#/components/schemas/CouponImage'\n    RetrieveMembershipTokenResponse:\n      title: RetrieveMembershipTokenResponse\n      required:\n        - token_address\n        - token_template\n        - owner_address\n        - company_name\n        - rsa_publickey\n        - name\n        - symbol\n        - total_supply\n        - tradable_exchange\n        - contact_information\n        - privacy_policy\n        - status\n        - details\n        - return_details\n        - expiration_date\n        - memo\n        - transferable\n        - initial_offering_status\n        - image_url\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n        token_template:\n          title: Token Template\n          type: string\n          example: IbetMembership\n        owner_address:\n          title: Owner Address\n          type: string\n          description: issuer address\n        company_name:\n          title: Company Name\n          type: string\n        rsa_publickey:\n          title: Rsa Publickey\n          type: string\n        name:\n          title: Name\n          type: string\n          description: token name\n        symbol:\n          title: Symbol\n          type: string\n          description: token symbol\n        total_supply:\n          title: Total Supply\n          type: integer\n        tradable_exchange:\n          title: Tradable Exchange\n          type: string\n        contact_information:\n          title: Contact Information\n          type: string\n        privacy_policy:\n          title: Privacy Policy\n          type: string\n        status:\n          title: Status\n          type: boolean\n        max_holding_quantity:\n          title: Max Holding Quantity\n          type: integer\n        max_sell_amount:\n          title: Max Sell Amount\n          type: integer\n        details:\n          title: Details\n          type: string\n        return_details:\n          title: Return Details\n          type: string\n        expiration_date:\n          title: Expiration Date\n          type: string\n        memo:\n          title: Memo\n          type: string\n        transferable:\n          title: Transferable\n          type: boolean\n        initial_offering_status:\n          title: Initial Offering Status\n          type: boolean\n        image_url:\n          title: Image Url\n          type: array\n          items:\n            $ref: '#/components/schemas/MembershipImage'\n    RetrievePaymentAccountRegistrationStatusResponse:\n      title: RetrievePaymentAccountRegistrationStatusResponse\n      required:\n        - account_address\n        - agent_address\n        - approval_status\n      type: object\n      properties:\n        account_address:\n          title: Account Address\n          type: string\n        agent_address:\n          title: Agent Address\n          type: string\n        approval_status:\n          allOf:\n            - $ref: '#/components/schemas/ApprovalStatus'\n          description: approval status (NONE(0)/NG(1)/OK(2)/WARN(3)/BAN(4))\n    RetrievePersonalInfoRegistrationStatusResponse:\n      title: RetrievePersonalInfoRegistrationStatusResponse\n      required:\n        - account_address\n        - owner_address\n        - registered\n      type: object\n      properties:\n        account_address:\n          title: Account Address\n          type: string\n        owner_address:\n          title: Owner Address\n          type: string\n          description: link address\n        registered:\n          title: Registered\n          type: boolean\n    RetrieveShareTokenResponse:\n      title: RetrieveShareTokenResponse\n      required:\n        - token_address\n        - token_template\n        - owner_address\n        - company_name\n        - rsa_publickey\n        - name\n        - symbol\n        - total_supply\n        - tradable_exchange\n        - contact_information\n        - privacy_policy\n        - status\n        - personal_info_address\n        - transferable\n        - is_offering\n        - transfer_approval_required\n        - issue_price\n        - cancellation_date\n        - memo\n        - principal_value\n        - is_canceled\n        - dividend_information\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n        token_template:\n          title: Token Template\n          type: string\n          example: IbetShare\n        owner_address:\n          title: Owner Address\n          type: string\n          description: issuer address\n        company_name:\n          title: Company Name\n          type: string\n        rsa_publickey:\n          title: Rsa Publickey\n          type: string\n        name:\n          title: Name\n          type: string\n          description: token name\n        symbol:\n          title: Symbol\n          type: string\n          description: token symbol\n        total_supply:\n          title: Total Supply\n          type: integer\n        tradable_exchange:\n          title: Tradable Exchange\n          type: string\n        contact_information:\n          title: Contact Information\n          type: string\n        privacy_policy:\n          title: Privacy Policy\n          type: string\n        status:\n          title: Status\n          type: boolean\n        max_holding_quantity:\n          title: Max Holding Quantity\n          type: integer\n        max_sell_amount:\n          title: Max Sell Amount\n          type: integer\n        personal_info_address:\n          title: Personal Info Address\n          type: string\n        transferable:\n          title: Transferable\n          type: boolean\n        is_offering:\n          title: Is Offering\n          type: boolean\n        transfer_approval_required:\n          title: Transfer Approval Required\n          type: boolean\n        issue_price:\n          title: Issue Price\n          type: integer\n        cancellation_date:\n          title: Cancellation Date\n          type: string\n        memo:\n          title: Memo\n          type: string\n        principal_value:\n          title: Principal Value\n          type: integer\n        is_canceled:\n          title: Is Canceled\n          type: boolean\n        dividend_information:\n          $ref: '#/components/schemas/DividendInformation'\n    RetrieveStraightBondTokenResponse:\n      title: RetrieveStraightBondTokenResponse\n      required:\n        - token_address\n        - token_template\n        - owner_address\n        - company_name\n        - rsa_publickey\n        - name\n        - symbol\n        - total_supply\n        - tradable_exchange\n        - contact_information\n        - privacy_policy\n        - status\n        - personal_info_address\n        - transferable\n        - is_offering\n        - transfer_approval_required\n        - face_value\n        - interest_rate\n        - redemption_date\n        - redemption_value\n        - return_date\n        - return_amount\n        - purpose\n        - memo\n        - is_redeemed\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n        token_template:\n          title: Token Template\n          type: string\n          example: IbetStraightBond\n        owner_address:\n          title: Owner Address\n          type: string\n          description: issuer address\n        company_name:\n          title: Company Name\n          type: string\n        rsa_publickey:\n          title: Rsa Publickey\n          type: string\n        name:\n          title: Name\n          type: string\n          description: token name\n        symbol:\n          title: Symbol\n          type: string\n          description: token symbol\n        total_supply:\n          title: Total Supply\n          type: integer\n        tradable_exchange:\n          title: Tradable Exchange\n          type: string\n        contact_information:\n          title: Contact Information\n          type: string\n        privacy_policy:\n          title: Privacy Policy\n          type: string\n        status:\n          title: Status\n          type: boolean\n        max_holding_quantity:\n          title: Max Holding Quantity\n          type: integer\n        max_sell_amount:\n          title: Max Sell Amount\n          type: integer\n        personal_info_address:\n          title: Personal Info Address\n          type: string\n        transferable:\n          title: Transferable\n          type: boolean\n        is_offering:\n          title: Is Offering\n          type: boolean\n        transfer_approval_required:\n          title: Transfer Approval Required\n          type: boolean\n        face_value:\n          title: Face Value\n          type: integer\n        interest_rate:\n          title: Interest Rate\n          type: number\n        interest_payment_date1:\n          title: Interest Payment Date1\n          type: string\n        interest_payment_date2:\n          title: Interest Payment Date2\n          type: string\n        interest_payment_date3:\n          title: Interest Payment Date3\n          type: string\n        interest_payment_date4:\n          title: Interest Payment Date4\n          type: string\n        interest_payment_date5:\n          title: Interest Payment Date5\n          type: string\n        interest_payment_date6:\n          title: Interest Payment Date6\n          type: string\n        interest_payment_date7:\n          title: Interest Payment Date7\n          type: string\n        interest_payment_date8:\n          title: Interest Payment Date8\n          type: string\n        interest_payment_date9:\n          title: Interest Payment Date9\n          type: string\n        interest_payment_date10:\n          title: Interest Payment Date10\n          type: string\n        interest_payment_date11:\n          title: Interest Payment Date11\n          type: string\n        interest_payment_date12:\n          title: Interest Payment Date12\n          type: string\n        redemption_date:\n          title: Redemption Date\n          type: string\n        redemption_value:\n          title: Redemption Value\n          type: integer\n        return_date:\n          title: Return Date\n          type: string\n        return_amount:\n          title: Return Amount\n          type: string\n        purpose:\n          title: Purpose\n          type: string\n        memo:\n          title: Memo\n          type: string\n        is_redeemed:\n          title: Is Redeemed\n          type: boolean\n    SecurityTokenPositionWithAddress:\n      title: SecurityTokenPositionWithAddress\n      required:\n        - balance\n        - pending_transfer\n        - exchange_balance\n        - exchange_commitment\n        - token_address\n      type: object\n      properties:\n        balance:\n          title: Balance\n          type: integer\n        pending_transfer:\n          title: Pending Transfer\n          type: integer\n        exchange_balance:\n          title: Exchange Balance\n          type: integer\n        exchange_commitment:\n          title: Exchange Commitment\n          type: integer\n        token_address:\n          title: Token Address\n          type: string\n          description: set when include_token_details=true\n    SecurityTokenPositionWithDetail:\n      title: SecurityTokenPositionWithDetail\n      required:\n        - balance\n        - pending_transfer\n        - exchange_balance\n        - exchange_commitment\n        - token\n      type: object\n      properties:\n        balance:\n          title: Balance\n          type: integer\n        pending_transfer:\n          title: Pending Transfer\n          type: integer\n        exchange_balance:\n          title: Exchange Balance\n          type: integer\n        exchange_commitment:\n          title: Exchange Commitment\n          type: integer\n        token:\n          title: Token\n          anyOf:\n            - {}\n            - $ref: '#/components/schemas/app__model__schema__position__TokenAddress'\n          description: set when include_token_details=false or null\n    SendRawTransactionNoWaitResponse:\n      title: SendRawTransactionNoWaitResponse\n      required:\n        - id\n        - status\n      type: object\n      properties:\n        id:\n          title: Id\n          type: integer\n          description: transaction send order\n          example: 1\n        status:\n          title: Status\n          type: integer\n          description: execution failure:0, execution success:1\n          example: 1\n        transaction_hash:\n          title: Transaction Hash\n          type: string\n          description: transaction hash\n    SendRawTransactionRequest:\n      title: SendRawTransactionRequest\n      required:\n        - raw_tx_hex_list\n      type: object\n      properties:\n        raw_tx_hex_list:\n          title: Raw Tx Hex List\n          minItems: 1\n          type: array\n          items:\n            type: string\n          description: Signed transaction list\n    SendRawTransactionResponse:\n      title: SendRawTransactionResponse\n      required:\n        - id\n        - status\n      type: object\n      properties:\n        id:\n          title: Id\n          type: integer\n          description: transaction send order\n          example: 1\n        status:\n          title: Status\n          type: integer\n          description: execution failure:0, execution success:1, execution success(pending transaction):2\n          example: 1\n        transaction_hash:\n          title: Transaction Hash\n          type: string\n          description: transaction hash\n        error_code:\n          title: Error Code\n          type: integer\n          description: error code thrown from contract\n          example: 240202\n        error_msg:\n          title: Error Msg\n          type: string\n          description: error msg\n          example: Message sender is not token owner.\n    SendRawTransactionsNoWaitResponse:\n      title: SendRawTransactionsNoWaitResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/SendRawTransactionNoWaitResponse'\n    SendRawTransactionsResponse:\n      title: SendRawTransactionsResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/SendRawTransactionResponse'\n    ShareTokensSortItem:\n      title: ShareTokensSortItem\n      enum:\n        - token_address\n        - owner_address\n        - name\n        - symbol\n        - company_name\n        - tradable_exchange\n        - status\n        - personal_info_address\n        - transferable\n        - is_offering\n        - transfer_approval_required\n        - is_canceled\n        - created\n      type: string\n      description: An enumeration.\n    SortOrder:\n      title: SortOrder\n      enum:\n        - 0\n        - 1\n      type: integer\n      description: An enumeration.\n    StraightBondTokensSortItem:\n      title: StraightBondTokensSortItem\n      enum:\n        - token_address\n        - owner_address\n        - name\n        - symbol\n        - company_name\n        - tradable_exchange\n        - status\n        - personal_info_address\n        - transferable\n        - is_offering\n        - transfer_approval_required\n        - is_redeemed\n        - created\n      type: string\n      description: An enumeration.\n    Success200MetaModel:\n      title: Success200MetaModel\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 200\n        message:\n          title: Message\n          type: string\n          example: OK\n    SuccessResponse:\n      title: SuccessResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          title: Meta\n          allOf:\n            - $ref: '#/components/schemas/Success200MetaModel'\n          example:\n            code: 200\n            message: OK\n        data:\n          title: Data\n          type: object\n          default: {}\n    SuspendedTokenErrorMetainfo:\n      title: SuspendedTokenErrorMetainfo\n      required:\n        - code\n        - message\n      type: object\n      properties:\n        code:\n          title: Code\n          type: integer\n          example: 20\n        message:\n          title: Message\n          type: string\n          example: Suspended Token\n    SuspendedTokenErrorResponse:\n      title: SuspendedTokenErrorResponse\n      required:\n        - meta\n      type: object\n      properties:\n        meta:\n          $ref: '#/components/schemas/SuspendedTokenErrorMetainfo'\n        details:\n          title: Details\n          type: object\n    Tick:\n      title: Tick\n      required:\n        - block_timestamp\n        - buy_address\n        - sell_address\n        - order_id\n        - agreement_id\n        - price\n        - amount\n      type: object\n      properties:\n        block_timestamp:\n          title: Block Timestamp\n          type: string\n          description: block timestamp (UTC)\n        buy_address:\n          title: Buy Address\n          type: string\n        sell_address:\n          title: Sell Address\n          type: string\n        order_id:\n          title: Order Id\n          type: integer\n        agreement_id:\n          title: Agreement Id\n          type: integer\n        price:\n          title: Price\n          type: integer\n        amount:\n          title: Amount\n          type: integer\n    Ticks:\n      title: Ticks\n      required:\n        - token_address\n        - tick\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n        tick:\n          title: Tick\n          type: array\n          items:\n            $ref: '#/components/schemas/Tick'\n    TokenHolder:\n      title: TokenHolder\n      required:\n        - token_address\n        - account_address\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n        account_address:\n          title: Account Address\n          type: string\n        amount:\n          title: Amount\n          type: integer\n          default: 0\n        pending_transfer:\n          title: Pending Transfer\n          type: integer\n          default: 0\n        exchange_balance:\n          title: Exchange Balance\n          type: integer\n          default: 0\n        exchange_commitment:\n          title: Exchange Commitment\n          type: integer\n          default: 0\n    TokenHoldersCollectionBatchStatus:\n      title: TokenHoldersCollectionBatchStatus\n      enum:\n        - pending\n        - done\n        - failed\n      type: string\n      description: An enumeration.\n    TokenHoldersCollectionHolder:\n      title: TokenHoldersCollectionHolder\n      required:\n        - account_address\n        - hold_balance\n      type: object\n      properties:\n        account_address:\n          title: Account Address\n          type: string\n          description: Account address of token holder.\n        hold_balance:\n          title: Hold Balance\n          type: integer\n          description: Amount of balance.This includes balance/pending_transfer/exchange_balance/exchange_commitment.\n    TokenHoldersCollectionResponse:\n      title: TokenHoldersCollectionResponse\n      required:\n        - status\n        - holders\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/TokenHoldersCollectionBatchStatus'\n        holders:\n          title: Holders\n          type: array\n          items:\n            $ref: '#/components/schemas/TokenHoldersCollectionHolder'\n          description: Token holder list.This list is excluding token owner address.\n    TokenHoldersCountResponse:\n      title: TokenHoldersCountResponse\n      required:\n        - count\n      type: object\n      properties:\n        count:\n          title: Count\n          type: integer\n    TokenHoldersResponse:\n      title: TokenHoldersResponse\n      type: array\n      items:\n        $ref: '#/components/schemas/TokenHolder'\n    TokenStatusResponse:\n      title: TokenStatusResponse\n      required:\n        - token_template\n        - status\n        - transferable\n      type: object\n      properties:\n        token_template:\n          title: Token Template\n          type: string\n          example: IbetStraightBond\n        status:\n          title: Status\n          type: boolean\n        transferable:\n          title: Transferable\n          type: boolean\n    TokenType:\n      title: TokenType\n      enum:\n        - IbetStraightBond\n        - IbetShare\n        - IbetMembership\n        - IbetCoupon\n      type: string\n      description: An enumeration.\n    TransactionCountResponse:\n      title: TransactionCountResponse\n      required:\n        - nonce\n        - gasprice\n        - chainid\n      type: object\n      properties:\n        nonce:\n          title: Nonce\n          type: integer\n          example: 34\n        gasprice:\n          title: Gasprice\n          type: integer\n          example: 0\n        chainid:\n          title: Chainid\n          type: string\n          example: '2017'\n    TransferApprovalHistoriesResponse:\n      title: TransferApprovalHistoriesResponse\n      required:\n        - result_set\n        - transfer_approval_history\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        transfer_approval_history:\n          title: Transfer Approval History\n          type: array\n          items:\n            $ref: '#/components/schemas/TransferApprovalHistory'\n          description: Transfer approval history\n    TransferApprovalHistory:\n      title: TransferApprovalHistory\n      required:\n        - token_address\n        - application_id\n        - from_address\n        - to_address\n        - value\n        - application_datetime\n        - application_blocktimestamp\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n          description: Token address\n        exchange_address:\n          title: Exchange Address\n          type: string\n          description: Exchange address\n        application_id:\n          title: Application Id\n          type: integer\n          description: Application id\n        from_address:\n          title: From Address\n          type: string\n          description: Account address of transfer source\n        to_address:\n          title: To Address\n          type: string\n          description: Account address of transfer destination\n        value:\n          title: Value\n          type: integer\n          description: Transfer quantity\n        application_datetime:\n          title: Application Datetime\n          type: string\n          description: application datetime (JST)\n        application_blocktimestamp:\n          title: Application Blocktimestamp\n          type: string\n          description: application blocktimestamp (JST)\n        approval_datetime:\n          title: Approval Datetime\n          type: string\n          description: approval datetime (JST)\n        approval_blocktimestamp:\n          title: Approval Blocktimestamp\n          type: string\n          description: approval blocktimestamp (JST)\n        cancelled:\n          title: Cancelled\n          type: boolean\n          description: Cancellation status\n        transfer_approved:\n          title: Transfer Approved\n          type: boolean\n          description: transfer approval status\n    TransferHistoriesResponse:\n      title: TransferHistoriesResponse\n      required:\n        - result_set\n        - transfer_history\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        transfer_history:\n          title: Transfer History\n          type: array\n          items:\n            $ref: '#/components/schemas/TransferHistory'\n          description: Transfer history\n    TransferHistory:\n      title: TransferHistory\n      required:\n        - transaction_hash\n        - token_address\n        - from_address\n        - to_address\n        - value\n        - created\n      type: object\n      properties:\n        transaction_hash:\n          title: Transaction Hash\n          type: string\n          description: Transaction hash\n        token_address:\n          title: Token Address\n          type: string\n          description: Token address\n        from_address:\n          title: From Address\n          type: string\n          description: Account address of transfer source\n        to_address:\n          title: To Address\n          type: string\n          description: Account address of transfer destination\n        value:\n          title: Value\n          type: integer\n          description: Transfer quantity\n        created:\n          title: Created\n          type: string\n          description: block_timestamp when Transfer log was emitted (JST)\n    TxData:\n      title: TxData\n      required:\n        - hash\n        - block_hash\n        - block_number\n        - transaction_index\n        - from_address\n      type: object\n      properties:\n        hash:\n          title: Hash\n          type: string\n          description: Transaction hash\n        block_hash:\n          title: Block Hash\n          type: string\n        block_number:\n          title: Block Number\n          minimum: 0\n          type: integer\n        transaction_index:\n          title: Transaction Index\n          minimum: 0\n          type: integer\n        from_address:\n          title: From Address\n          type: string\n        to_address:\n          title: To Address\n          type: string\n    TxDataDetail:\n      title: TxDataDetail\n      required:\n        - hash\n        - block_hash\n        - block_number\n        - transaction_index\n        - from_address\n        - gas\n        - gas_price\n        - value\n        - nonce\n      type: object\n      properties:\n        hash:\n          title: Hash\n          type: string\n          description: Transaction hash\n        block_hash:\n          title: Block Hash\n          type: string\n        block_number:\n          title: Block Number\n          minimum: 0\n          type: integer\n        transaction_index:\n          title: Transaction Index\n          minimum: 0\n          type: integer\n        from_address:\n          title: From Address\n          type: string\n        to_address:\n          title: To Address\n          type: string\n        contract_name:\n          title: Contract Name\n          type: string\n        contract_function:\n          title: Contract Function\n          type: string\n        contract_parameters:\n          title: Contract Parameters\n          type: object\n        gas:\n          title: Gas\n          minimum: 0\n          type: integer\n        gas_price:\n          title: Gas Price\n          minimum: 0\n          type: integer\n        value:\n          title: Value\n          minimum: 0\n          type: integer\n        nonce:\n          title: Nonce\n          minimum: 0\n          type: integer\n    TxDataListResponse:\n      title: TxDataListResponse\n      required:\n        - result_set\n        - tx_data\n      type: object\n      properties:\n        result_set:\n          $ref: '#/components/schemas/ResultSet'\n        tx_data:\n          title: Tx Data\n          type: array\n          items:\n            $ref: '#/components/schemas/TxData'\n    TxDataResponse:\n      $ref: '#/components/schemas/TxDataDetail'\n      title: TxDataResponse\n    UpdateAdminTokenRequest:\n      title: UpdateAdminTokenRequest\n      type: object\n      properties:\n        is_public:\n          title: Is Public\n          type: boolean\n        max_holding_quantity:\n          title: Max Holding Quantity\n          minimum: 0\n          type: integer\n        max_sell_amount:\n          title: Max Sell Amount\n          minimum: 0\n          type: integer\n        owner_address:\n          title: Owner Address\n          type: string\n    UpdateNotificationRequest:\n      title: UpdateNotificationRequest\n      type: object\n      properties:\n        is_read:\n          title: Is Read\n          type: boolean\n          description: Read update\n        is_flagged:\n          title: Is Flagged\n          type: boolean\n          description: Set flag\n        is_deleted:\n          title: Is Deleted\n          type: boolean\n          description: Logical deletion\n    ValidationError:\n      title: ValidationError\n      required:\n        - loc\n        - msg\n        - type\n      type: object\n      properties:\n        loc:\n          title: Location\n          type: array\n          items:\n            anyOf:\n              - type: string\n              - type: integer\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n    WaitForTransactionReceiptResponse:\n      title: WaitForTransactionReceiptResponse\n      required:\n        - status\n      type: object\n      properties:\n        status:\n          title: Status\n          type: integer\n          description: transaction revert:0, transaction success:1\n          example: 1\n        error_code:\n          title: Error Code\n          type: integer\n          description: error code thrown from contract\n          example: 240202\n        error_msg:\n          title: Error Msg\n          type: string\n          description: error msg\n          example: Message sender is not token owner.\n    app__model__schema__dex_order_list__TokenAddress:\n      title: TokenAddress\n      required:\n        - token_address\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\n    app__model__schema__position__TokenAddress:\n      title: TokenAddress\n      required:\n        - token_address\n      type: object\n      properties:\n        token_address:\n          title: Token Address\n          type: string\ntags:\n  - name: Admin\n    description: System administration\n  - name: NodeInfo\n    description: Information about blockchain and contracts\n  - name: ABI\n    description: Contract ABIs\n  - name: Companies\n    description: Company information\n  - name: User\n    description: User information\n  - name: Eth\n    description: Blockchain Transactions\n  - name: Token\n    description: Attribute information of the listed tokens\n  - name: Position\n    description: Token balance held by the user\n  - name: Notifications\n    description: Notifications for users\n  - name: E2EMessage\n    description: Features related to the E2EMessaging contract\n  - name: Events\n    description: Contract event logs\n  - name: IbetExchange\n    description: Trade related features on IbetExchange (Only for utility tokens)\n",
			"canonicalURL": "/github.com/BoostryJP/ibet-Wallet-API@7fb7397ddf66d8f0bfd9ead669f727d60ccac45f/-/blob/docs/ibet_wallet_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/BoostryJP/ibet-Wallet-API/blob/7fb7397ddf66d8f0bfd9ead669f727d60ccac45f/docs/ibet_wallet_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"SuccessResponse\": resolve \"#/components/schemas/SuccessResponse\": property \"data\": at docs/ibet_wallet_api.yaml:7017:20: parse default: unexpected type: \"object\""
}