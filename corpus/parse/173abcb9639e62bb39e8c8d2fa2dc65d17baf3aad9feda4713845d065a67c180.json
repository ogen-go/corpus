{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Traewelling/traewelling"
		},
		"file": {
			"name": "api-swagger-v0.yml",
			"size": 0,
			"path": "api-swagger-v0.yml",
			"byteSize": 71237,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"This is the REST API for Träwelling.\"\n  version: 0.5.1\n  title: \"TRWL app API\"\n  contact:\n    name: \"Träwelling Dev Team\"\n    url: \"https://github.com/traewelling/traewelling\"\nservers:\n  - url: \"https://testing.traewelling.de/api/v0\"\n  - url: \"https://traewelling.de/api/v0\"\n  - url: \"https://localhost:8000/api/v0\"\n\ntags:\n  - name: \"Auth\"\n    description: Login, register and logout\n  - name: \"User profile\"\n    description: Routes for editing the current user’s profile.\n  - name: \"Statuses\"\n    description: Query, add, update, and delete statuses\n  - name: \"Check-in\"\n    description: Routes required to complete a full check-in workflow.\n  - name: \"Notifications\"\n    description: Notifications to keep the user updated about current events.\n\npaths:\n  /auth/login:\n    post:\n      tags: [Auth]\n      summary: Log in with your user account.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - password\n                - email\n              properties:\n                email:\n                  type: string\n                  example: gertrud@traewelling.de\n                  description: Email of the user to be logged in\n                password:\n                  type: string\n                  example: thisisnotasecurepassword123\n                  description: Password of the user to be logged in\n      responses:\n        200:\n          description: Ok.\n            The user has been authenticated and a session has been started.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BearerToken'\n\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /auth/signup:\n    post:\n      tags: [Auth]\n      summary: Register a account and log in.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - username\n                - name\n                - email\n                - password\n                - confirm_password\n              properties:\n                username:\n                  type: string\n                  example: Gertrud123\n                  description: Username of the user\n                name:\n                  type: string\n                  example: Gertrud Musterfrau\n                  description: Displayname of the user\n                email:\n                  type: string\n                  example: gertrud@traewelling.de\n                  description: Email of the user\n                password:\n                  type: string\n                  example: thisisnotasecurepassword123\n                  description: Password of the user to be logged in\n                confirm_password:\n                  type: string\n                  example: thisisnotasecurepassword123\n                  description: Password of the user to be logged in\n      responses:\n        200:\n          description: Ok.\n            The user has been authenticated and a session has been started.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/BearerToken'\n                  - type: object\n                    properties:\n                      message:\n                        type: string\n                        example: Registration successfull..\n        400:\n          $ref: '#/components/responses/BadRequestError'\n  /auth/logout:\n    post:\n      security:\n        - bearerAuth: []\n      tags: [Auth]\n      summary: Logs the user out and destroys the access token.\n      responses:\n        200:\n          description: Ok.\n            The user has been deauthenticated and the access token has been destroyed.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: Successfully logged out.\n  /statuses/enroute/all/:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Statuses]\n      summary: Retrieves a list of all active statuses.\n      responses:\n        200:\n          description: OK.\n            The returned array may be empty if there are no active statuses.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Status'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /statuses/:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Statuses]\n      summary: Retrieves the dashboard\n      parameters:\n        - in: query\n          name: view\n          schema:\n            type: string\n            enum: [global, personal, user]\n            default: global\n          description: Filters the list of statuses so that it will either return the\n            global view (i.e. all public statuses == global dashboard), just the statuses\n            of the current user’s follows (i.e. the user’s dashboard).\n        - in: query\n          name: username\n          schema:\n            $ref: '#/components/schemas/username'\n          description: Only required if the “view” parameter is set to “user”. If that is\n            the case this parameter takes the ID of the user to fetch statuses for.\n        - in: query\n          name: page\n          schema:\n            type: integer\n            example: 1\n          description: Needed to show next or previous page of pagination\n      responses:\n        200:\n          description: OK.\n            The returned array may be empty if there are no active statuses.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/status_paginate'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /statuses/event/{id}:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Statuses]\n      summary: Shows all statuses for a specific event.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            $ref: '#/components/schemas/event_id'\n          required: true\n          description: The slug of the event to show.\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/status_paginate'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /statuses/{id}:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Statuses]\n      summary: Retrieves a single status.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            $ref: '#/components/schemas/status_id'\n          required: true\n          description: The ID of the status to show.\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n    put:\n      security:\n        - bearerAuth: []\n      tags: [Statuses]\n      summary: Update a status that the current user had posted previously.\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n              maxLength: 280\n        description: The new status text to set in the status with the given ID.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            $ref: '#/components/schemas/status_id'\n          required: true\n          description: The ID of the status to modify.\n      responses:\n        200:\n          description: OK.\n            The status object has been modified on the server (i.e. the status text was\n            changed). The response contains the modified version of the status.\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  $ref: '#/components/schemas/Status'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n    delete:\n      security:\n        - bearerAuth: []\n      tags: [Statuses]\n      summary: Removes a status that the current user had posted previously.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            $ref: '#/components/schemas/status_id'\n          required: true\n          description: The ID of the status to delete.\n      responses:\n        204:\n          description: No content.\n            The status with the given ID has been deleted. Nothing further needs to be said, so\n            the response will not have any content.\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /statuses/{id}/likes:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Statuses, Likes]\n      summary: Retrieves all likes for a specific status.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            $ref: '#/components/schemas/status_id'\n          required: true\n          description: The ID of the status to show the likes for.\n        - in: query\n          name: page\n          schema:\n            type: integer\n            example: 1\n          description: Needed to show next or previous page of pagination\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/likes_paginate'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /statuses/{id}/like:\n    post:\n      security:\n        - bearerAuth: []\n      tags: [Statuses, Likes]\n      summary: Creates a like for a status.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            $ref: '#/components/schemas/status_id'\n          required: true\n          description: The ID of the status to like\n      responses:\n        200:\n          description: OK.\n          content:\n            text/plain:\n              schema:\n                type: boolean\n                example: true\n                description: Returns true, if like has been created, false if there's already a like\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n    delete:\n      security:\n        - bearerAuth: []\n      tags: [Statuses, Likes]\n      summary: Deletes a like for a status.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            $ref: '#/components/schemas/status_id'\n          required: true\n          description: The ID of the status to unlike\n      responses:\n        200:\n          description: OK.\n          content:\n            text/plain:\n              schema:\n                type: boolean\n                example: true\n                description: Returns true, if like has been deleted, false if there was no like to delete\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n\n\n\n  /trains/autocomplete/{query}:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Check-in]\n      summary: Retrieves a list of stations.\n      description: This endpoint can be called multiple times in succession when searching\n        stations by name to provide suggestions for the user to select from. Please provide\n        at least 3 characters when retrieving suggestions. Otherwise, only call this endpoint\n        with less than 3 characters if the user explicitly requested a search.\n      parameters:\n        - in: path\n          name: query\n          schema:\n            type: string\n          required: true\n          description: The ID of the status to modify.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/querystation'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /trains/stationboard:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Check-in]\n      summary: Retrieves departures for a station.\n      parameters:\n        - in: query\n          name: station\n          schema:\n            type: string\n          required: true\n          description: The name of the train station\n        - in: query\n          name: when\n          schema:\n            type: timestamp\n            example: 2021-01-01T13:14:15+01:00\n          required: false\n          description: The time of the query\n        - in: query\n          name: travelType\n          schema:\n            type: string\n            enum: [nationalExpress, national, regionalExp, regional, suburban, bus, ferry, subway, tram, taxi]\n          required: false\n          description: Filter of transport types\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  station:\n                    $ref: '#/components/schemas/querystation'\n                  when:\n                    type: number\n                    description: UNIX-Timestamp\n                    example: 1575230596\n                  departures:\n                    $ref: '#/components/schemas/db_rest_departure'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /trains/trip:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Check-in]\n      summary: Retrieves departures for a station.\n      parameters:\n        - in: query\n          name: tripID\n          schema:\n            type: string\n            example: \"1|463098|0|80|1122019\"\n          required: true\n          description: Trip ID of the train\n        - in: query\n          name: lineName\n          schema:\n            type: string\n            example: \"S 32\"\n          required: true\n          description: Linename of train\n        - in: query\n          name: start\n          schema:\n            type: string\n            example: \"8000191\"\n          required: true\n          description: Starting point of the trip\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  station:\n                    $ref: '#/components/schemas/querystation'\n                  start:\n                    type: string\n                    example: \"Karlsruhe Hbf\"\n                  destination:\n                    type: string\n                    example: \"Menzingen(Baden)\"\n                  train:\n                    $ref: '#/components/schemas/hafas_trip'\n                  stopovers:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/db_rest_stopover'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /trains/checkin:\n    post:\n      security:\n        - bearerAuth: []\n      tags: [Check-in]\n      summary: Adds a train-status for the current user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tripID:\n                  allOf:\n                    - $ref: '#/components/schemas/trip_id'\n                  required:\n                    - tripID\n                lineName:\n                  description: Required if /trains/trips isn't called before\n                  nullable: true\n                  example: \"STB 7\"\n                start:\n                  allOf:\n                    - $ref: '#/components/schemas/ibnr'\n                  required:\n                    - start\n                destination:\n                  allOf:\n                    - $ref: '#/components/schemas/ibnr'\n                  required:\n                    - destintation\n                body:\n                  type: string\n                  nullable: true\n                  maxLength: 280\n                  example: \"This is my first checkin!\"\n                tweet:\n                  type: boolean\n                toot:\n                  type: boolean\n                departure:\n                  description: Time of departure at the start station\n                  nullable: true\n                  example: \"2021-01-01T12:00:00+01:00\"\n                arrival:\n                  description: Time of arrival at the destination station\n                  nullable: true\n                  example: \"2021-01-01T12:00:00+01:00\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  distance:\n                    type: number\n                    example: 16.152\n                    description: Travel distance in kilometers\n                  duration:\n                    type: number\n                    example: 900\n                    description: Travel time in Seconds\n                  statusId:\n                    type: number\n                    example: 34\n                    description: ID of the generated Status\n                  points:\n                    type: number\n                    example: 1\n                  lineName:\n                    type: string\n                    example: \"S 32\"\n                  alsoOnThisConnection:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/User'\n                    description: Array of users that are also on the same connection\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /trains/latest:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Check-in]\n      summary: Shows the last 5 stations the logged in user arrived at.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/station'\n  /trains/home:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Check-in]\n      summary: Retrieves the home-station for logged in user.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/station'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n    put:\n      security:\n        - bearerAuth: []\n      tags: [Check-in]\n      summary: Sets the home-station for logged in user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ibnr:\n                  type: number\n                  example: 8123\n                  required:\n                    - ibnr\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Ost.Punkt 812 km\"\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /trains/nearby:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Nearby]\n      summary: Retrieves the nearest station from coordinates\n      description: This endpoint queries the nearest station to given coordinates.\n      parameters:\n        - in: query\n          name: latitude\n          schema:\n            type: number\n            example: 48.994348\n          required: true\n          description: The latitude of the coordinates\n        - in: query\n          name: longitude\n          schema:\n            type: number\n            example: 8.399583\n          required: true\n          description: The longitude of the coordinates\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: \"station\"\n                  id:\n                    type: string\n                    example: \"8000191\"\n                  name:\n                    type: string\n                    example: \"Karlsruhe Hbf\"\n                  location:\n                    $ref: '#/components/schemas/hafas_location'\n                  products:\n                    $ref: '#/components/schemas/hafas_products'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /user/leaderboard:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [User profile]\n      summary: Gets the current leaderboard for friends, kilometers and users.\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  users:\n                    $ref: '#/components/schemas/leaderboardarray'\n                  friends:\n                    $ref: '#/components/schemas/leaderboardarray'\n                  kilometers:\n                    $ref: '#/components/schemas/leaderboardarray'\n\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /user/profilepicture:\n    put:\n      security:\n        - bearerAuth: []\n      tags: [User profile]\n      summary: Sets/updates the profile picture of the logged in user.\n      requestBody:\n        content:\n          image/jpeg:\n            schema:\n              type: string\n              format: binary\n          image/png:\n            schema:\n              type: string\n              format: binary\n        description: An image to be used as the new avatar for the current user.\n      responses:\n        200:\n          description: OK.\n            The avatar was successfully uploaded.\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /user/displayname:\n    put:\n      security:\n        - bearerAuth: []\n      tags: [User profile]\n      summary: Updates the dipslay name of the current user.\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n        description: The new display name to be used for the current user.\n      responses:\n        200:\n          description: OK.\n            The displayName of the current user was changed.\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /user/accept_privacy:\n    put:\n      security:\n        - bearerAuth: []\n      tags: [User profile]\n      summary: Accepts the Privacy Agreement\n      responses:\n        202:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: \"privacy agreement successfully accepted\"\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /user/{username}:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [User profile]\n      summary: Gets User profile\n      parameters:\n        - in: path\n          name: username\n          schema:\n            $ref: '#/components/schemas/username'\n          required: true\n          description: The username of the requested user.\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Userprofile'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /user/{username}/active:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [User profile]\n      summary: Gets active status of user.\n      parameters:\n        - in: path\n          name: username\n          schema:\n            $ref: '#/components/schemas/username'\n          required: true\n          description: The username of the requested user.\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Status'\n        204:\n          description: No Content\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /user/search/{searchQuery}:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [User profile]\n      summary: Searches for a user\n      parameters:\n        - in: path\n          name: searchQuery\n          schema:\n            type: string\n            example: 'jdo'\n          required: true\n          description: The query for the user search.\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  current_page:\n                    type: integer\n                    example: 1\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/User'\n                  first_page_url:\n                    type: string\n                    example: \"https://traewelling.de/api/v0/user/search/jdo?page=1\"\n                  from:\n                    type: integer\n                    example: 1\n                    description: Frist element on page\n                  next_page_url:\n                    type: string\n                    example: \"https://traewelling.de/api/v0/user/search/jdo?page=2\"\n                    nullable: true\n                  path:\n                    type: string\n                    example: \"https://traewelling.de/api/v0/user/search/jdo\"\n                  per_page:\n                    type: integer\n                    example: 5\n                  prev_page_url:\n                    type: string\n                    example: null\n                    nullable: true\n                  to:\n                    type: integer\n                    example: 5\n                    description: Last element on page\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /getuser:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [User profile]\n      summary: Gets current user\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n  /notifications:\n    get:\n      security:\n        - bearerAuth: []\n      tags: [Notifications]\n      description: Gets latest notifications for user\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/notifications'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n    put:\n      security:\n        - bearerAuth: []\n      tags: [Notifications]\n      responses:\n        201:\n          description: new state = read\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/notifications'\n        202:\n          description: new state = unread\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/notifications'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n    delete:\n      security:\n        - bearerAuth: []\n      tags: [Notifications]\n      responses:\n        200:\n          description: OK. Notification has been deleted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/notifications'\n\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        406:\n          $ref: '#/components/responses/GDPRError'\n\n\n\n\n\n\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  responses:\n    UnauthorizedError:\n      description: Unauthorized.\n        Will be returned by the server if no user was logged in or wrong credentials were supplied.\n    NotFoundError:\n      description: Not found\n        The parameters in the request were valid, but the server did not find a corresponding object.\n    ForbiddenError:\n      description: Forbidden\n        The logged in user is not permitted to perform this action. (e.g. edit a status of another user.)\n    BadRequestError:\n      description: Bad Request\n        The parameters are wrong or not given.\n    GDPRError:\n      description: Not Acceptable\n        The privacy agreement has not yet been accepted.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n                example: \"Privacy agreement not yet accepted!\"\n              updated:\n                type: string\n                example: \"2019-11-04 20:07:00\"\n                description: Date and time when the privacy agreement has been updated\n              german:\n                type: string\n                description: German version of the privacy agreement in markdown.\n              english:\n                type: string\n                description: English version of the privacy agreement in markdown.\n\n\n\n\n  schemas:\n    BearerToken:\n      type: object\n      properties:\n        token:\n          type: string\n          example: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImQxYjIzZGFlNTc0YzlhOTk3MzQ5MTQwMWZhNjRkMmU2MzgwNGQ4MWJhOTI0MjRlMmQ2ZmYyZjIyZjFiZmU1ZDUyOTExZjE0N2M4YWM5MTI3In0.eyJhdWQiOiIzIiwianRpIjoiZDFiMjNkYWU1NzRjOWE5OTczNDkxNDAxZmE2NGQyZTYzODA0ZDgxYmE5MjQyNGUyZDZmZjJmMjJmMWJmZTVkNTI5MTFmMTQ3YzhhYzkxMjciLCJpYXQiOjE1ODI5MDIyMDIsIm5iZiI6MTU4MjkwMjIwMiwiZXhwIjoxNjE0NTI0NjAyLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.XWJcsbhgOQXqk-OrjKaRMRouo5AS4TkniyShH50O8K8KjaJYHP9Ltm3eMCpqarZpaBVucnsSKKimVVT9c1AD-Iq5n8AqZ3Mhgbh6Ik5-VqMAs89mLBwWj8seh_hgUmS0AqZMxUvkzZDpaU7Ub_EtoBUQ6l7up2tNXrA12mvg57LpvibWl6tXVLI2cBlEvNoTY3DPEjLFKMkdela7bhkoh4OAtJAnv1iNspuxcuhHp4PfgWlmaVGn4HdyfchNDJdSiWuiYy1LbRzpb9gdmmZtrDa--OfVRxodzE9sVIrLWXD_RRldejqyarbSke88ucMlALgCbBL88r00X2LEAXq565_s7ILbqEfVh1YN9ehfP8kCM9bf_Yop4G9QxgkO_xEhcv-Sj72rUph6TgS68QjEXculgizeVRTeCgW5X07UxCxy12jGuZMq3JjYU_kOmF1Sr79KSSZnFe27_f1kjbgEGSVwVKq_R4HcmM9ZGazpfbRPqaZnjUl3H5_0YAa7hZh0P1MYcJywx0tdY3inkZFBXhz1_3Xt6sULqlFRS4Lh0hP0o2E5jrCtVmeKGTgUvvbumEVyKpisjzpQK08i-rMSnYXSUbI6JNXc9z3PVgWzVt1lAdG66xNci7JQ3gdIoM4cQFBcGI8qQmfRMjvzXmmvoWY_hottmtOSK9AV_AP4zSw\"\n        expires_at:\n          type: string\n          example: \"2021-10-01T12:00:00+02:00\"\n    notifications:\n      type: object\n      properties:\n        id:\n          type: string\n          example: \"87eed448-6ddc-44bc-97c6-bb4fe2c8d9e0\"\n        type:\n          type: string\n          enum:\n            - \"App\\\\Notifications\\\\MastodonNotSent\"\n            - \"App\\\\Notifications\\\\StatusLiked\"\n            - \"App\\\\Notifications\\\\TwitterNotSent\"\n            - \"App\\\\Notifications\\\\UserFollowed\"\n            - \"App\\\\Notifications\\\\UserJoinedConnection\"\n        notifiable_type:\n          type: string\n          enum:\n            - \"App\\\\User\"\n        notifiable_id:\n          type: string\n          example: \"1\"\n        data:\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/notification_mastodon_not_sent_data'\n            - $ref: '#/components/schemas/notification_status_liked_data'\n            - $ref: '#/components/schemas/notification_twitter_not_sent_data'\n            - $ref: '#/components/schemas/notification_user_followed_data'\n            - $ref: '#/components/schemas/notification_user_joined_connection_data'\n        read_at:\n          type: string\n          nullable: true\n          example: \"2020-02-29 13:37:00\"\n        created_at:\n          type: string\n          example: \"2020-02-29 13:37:00\"\n        updated_at:\n          type: string\n          example: \"2020-02-29 13:37:00\"\n        detail:\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/notification_mastodon_not_sent'\n            - $ref: '#/components/schemas/notification_status_liked'\n            - $ref: '#/components/schemas/notification_twitter_not_sent'\n            - $ref: '#/components/schemas/notification_user_followed'\n            - $ref: '#/components/schemas/notification_user_joined_connection'\n\n    notification_mastodon_not_sent:\n      type: object\n      description: \"App\\\\Notifications\\\\MastodonNotSent\"\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n    notification_mastodon_not_sent_data:\n      type: object\n      description: \"App\\\\Notifications\\\\MastodonNotSent\"\n      properties:\n        error:\n          type: string\n          additionalProperties: true\n        status_id:\n          $ref: '#/components/schemas/status_id'\n    notification_twitter_not_sent:\n      type: object\n      description: \"App\\\\Notifications\\\\TwitterNotSent\"\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n    notification_twitter_not_sent_data:\n      type: object\n      description: \"App\\\\Notifications\\\\TwitterNotSent\"\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n    notification_status_liked:\n      type: object\n      description: \"App\\\\Notifications\\\\StatusLiked\"\n      properties:\n        follow:\n          type: object\n          properties:\n            id:\n              type: integer\n              example: 2\n            created_at:\n              type: string\n              example: \"2020-02-29 13:37:00\"\n            updated_at:\n              type: string\n              example: \"2020-02-29 13:37:00\"\n            user_id:\n              type: string\n              description: The user that created the follow.\n              example: \"10\"\n            follow:id:\n              description: The user that is followed.\n              type: string\n              example: \"1\"\n        sender:\n          $ref: '#/components/schemas/User'\n    notification_status_liked_data:\n      type: object\n      description: \"App\\\\Notifications\\\\StatusLiked\"\n      properties:\n        follow:\n          type: object\n          properties:\n            status_id:\n              $ref: '#/components/schemas/status_id'\n            like_id:\n              type: integer\n              example: 1\n            liked_by:\n              type: integer\n              example: 10\n        sender:\n          $ref: '#/components/schemas/User'\n    notification_user_followed:\n      type: object\n      description: \"App\\\\Notifications\\\\UserFollowed\"\n      properties:\n        sender:\n          $ref: '#/components/schemas/User'\n        status:\n          $ref: '#/components/schemas/Status'\n    notification_user_followed_data:\n      type: object\n      description: \"App\\\\Notifications\\\\UserFollowed\"\n      properties:\n        follow_id:\n          type: integer\n          example: 1\n    notification_user_joined_connection:\n      type: object\n      description: \"App\\\\Notifications\\\\UserJoinedConnection\"\n      properties:\n        status:\n          $ref: '#/components/schemas/Status'\n    notification_user_joined_connection_data:\n      type: object\n      description: \"App\\\\Notifications\\\\UserJoinedConnection\"\n      properties:\n        status_id:\n          $ref: '#/components/schemas/status_id'\n        linename:\n          $ref: '#/components/schemas/linename'\n        origin:\n          type: string\n          example: \"Limurg Süd\"\n        destination:\n          type: string\n          example: \"Ulm Hbf\"\n    status_paginate:\n      type: object\n      properties:\n        current_page:\n          type: integer\n          example: 1\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Status'\n        first_page_url:\n          type: string\n          example: \"https://traewelling.de/api/v0/statuses?page=1\"\n        from:\n          type: integer\n          example: 1\n          description: Frist element on page\n        next_page_url:\n          type: string\n          example: \"https://traewelling.de/api/v0/statuses?page=2\"\n          nullable: true\n        path:\n          type: string\n          example: \"https://traewelling.de/api/v0/statuses\"\n        per_page:\n          type: integer\n          example: 15\n        prev_page_url:\n          type: string\n          example: null\n          nullable: true\n        to:\n          type: integer\n          example: 15\n          description: Last element on page\n    likes_paginate:\n      type: object\n      properties:\n        current_page:\n          type: integer\n          example: 1\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                example: 1\n              created_at:\n                $ref: '#/components/schemas/timestamp'\n              updated_at:\n                $ref: '#/components/schemas/timestamp'\n              user_id:\n                type: string\n                example: \"1\"\n              status_id:\n                type: string\n                example: \"1\"\n              user:\n                $ref: '#/components/schemas/User'\n        first_page_url:\n          type: string\n          example: \"https://traewelling.de/api/v0/statuses/1/likes?page=1\"\n        from:\n          type: integer\n          example: 1\n          description: Frist element on page\n        next_page_url:\n          type: string\n          example: \"https://traewelling.de/api/v0/statuses/1/likes?page=2\"\n          nullable: true\n        path:\n          type: string\n          example: \"https://traewelling.de/api/v0/statuses\"\n        per_page:\n          type: integer\n          example: 15\n        prev_page_url:\n          type: string\n          example: null\n          nullable: true\n        to:\n          type: integer\n          example: 15\n          description: Last element on page\n    Userprofile:\n      type: object\n      properties:\n        username:\n          $ref: '#/components/schemas/username'\n        twitterUrl:\n          $ref: '#/components/schemas/twitterUrl'\n        mastodonUrl:\n          $ref: '#/components/schemas/mastodonUrl'\n        statuses:\n          allOf:\n            - $ref: '#/components/schemas/status_paginate'\n            - nullable: true\n        user:\n          $ref: '#/components/schemas/User'\n    Status:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/status_id'\n        created_at:\n          $ref: '#/components/schemas/timestamp'\n        updated_at:\n          $ref: '#/components/schemas/timestamp'\n        body:\n          type: string\n          maxLength: 280\n          example: \"This is my first checkin!\"\n          nullable: true\n        type:\n          type: string\n          example: \"hafas\"\n        event_id:\n          type: integer\n          nullable: true\n          example: 1\n        likes_count:\n          type: integer\n          example: \"15\"\n          description: Show how many accounts liked this status\n        favorited:\n          type: boolean\n          example: true\n          description: Shows whether the user has liked this status.\n        user:\n          $ref: '#/components/schemas/User'\n        train_checkin:\n          $ref: '#/components/schemas/train_checkin'\n        event:\n          $ref: '#/components/schemas/event'\n    User:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/userId'\n        name:\n          type: string\n          example: \"J. Doe\"\n        username:\n          type: string\n          example: \"jdoe\"\n        train_distance:\n          type: string\n          format: float\n          example: \"454.59\"\n        train_duration:\n          type: string\n          format: integer\n          example: \"317\"\n        points:\n          type: string\n          format: integer\n          example: \"66\"\n        private_profile:\n          type: boolean\n          example: false\n        averageSpeed:\n          type: number\n          format: float\n          example: 100.5678954\n    db_rest_stopover:\n      type: object\n      properties:\n        stop:\n          type: object\n          properties:\n            type:\n              type: string\n              example: \"stop\"\n            id:\n              type: string\n              example: \"8000191\"\n            name:\n              type: string\n              example: \"Karlsruhe Hbf\"\n            location:\n              $ref: '#/components/schemas/hafas_location'\n            products:\n              $ref: '#/components/schemas/hafas_products'\n        arrival:\n          type: string\n          example: \"2019-12-01T21:56:00+01:00\"\n        arrivalDelay:\n          type: string\n          example: \"60\"\n        arrivalPlattform:\n          type: string\n          example: \"1\"\n        departure:\n          type: string\n          example: \"2019-12-01T21:56:00+01:00\"\n        departureDelay:\n          type: string\n          example: \"60\"\n        departurePlatform:\n          type: string\n          example: \"1\"\n    db_rest_departure:\n      type: object\n      properties:\n        trip_id:\n          $ref: '#/components/schemas/trip_id'\n        stop:\n          type: object\n          properties:\n            type:\n              type: string\n              example: \"stop\"\n            id:\n              $ref: '#/components/schemas/ibnr'\n            name:\n              type: string\n              description: Name of Station\n              example: \"Karlsruhe Bahnhofsvorplatz\"\n            location:\n              $ref: '#/components/schemas/hafas_location'\n            products:\n              $ref: '#/components/schemas/hafas_products'\n            station:\n              type: object\n              properties:\n                type:\n                  type: string\n                  example: \"station\"\n                id:\n                  type: string\n                  example: \"8000191\"\n                name:\n                  type: string\n                  example: \"Karlsruhe Hbf\"\n                location:\n                  $ref: '#/components/schemas/hafas_location'\n                products:\n                  $ref: '#/components/schemas/hafas_products'\n            when:\n              type: string\n              example: \"2019-12-01T21:03:00+01:00\"\n            directoin:\n              type: string\n              example: \"3 Tivoli\"\n            line:\n              type: object\n              properties:\n                type:\n                  type: string\n                  example: \"line\"\n                id:\n                  type: string\n                  example: \"re-6\"\n                fahrtNr:\n                  type: string\n                  example: \"12042\"\n                name:\n                  type: string\n                  example: \"RE 6\"\n                public:\n                  type: boolean\n                  example: true\n                operator:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      example: \"operator\"\n                    id:\n                      type: string\n                      example: \"db-regio-ag-mitte\"\n                    name:\n                      type: string\n                      example: \"DB Regio AG Mitte\"\n                additionalName:\n                  type: string\n                  example: \"RE 6\"\n            remarks:\n              type: string\n              description: actually array but almost always empty. Don't know what it does.\n            delay:\n              type: integer\n              example: \"60\"\n              description: Delay in seconds\n              nullable: true\n            platform:\n              type: string\n    hafas_location:\n      type: object\n      properties:\n        type:\n          type: string\n          example: \"location\"\n        id:\n          $ref: '#/components/schemas/ibnr'\n        latitude:\n          type: number\n          example: 48.994348\n        longitude:\n          type: number\n          example: 8.399583\n    hafas_products:\n      type: object\n      properties:\n        nationalExpress:\n          type: boolean\n        national:\n          type: boolean\n        regionalExp:\n          type: boolean\n        regional:\n          type: boolean\n        suburban:\n          type: boolean\n        bus:\n          type: boolean\n        ferry:\n          type: boolean\n        subway:\n          type: boolean\n        tram:\n          type: boolean\n        taxi:\n          type: boolean\n    train_checkin:\n      type: object\n      properties:\n        id:\n          type: integer\n        status_id:\n          $ref: '#/components/schemas/status_id'\n        trip_id:\n          $ref: '#/components/schemas/trip_id'\n        origin:\n          $ref: '#/components/schemas/station'\n        destination:\n          $ref: '#/components/schemas/station'\n        distance:\n          type: number\n          format: float\n          example: \"3.606\"\n        departure:\n          $ref: '#/components/schemas/timestamp'\n        arrival:\n          $ref: '#/components/schemas/timestamp'\n        points:\n          type: integer\n          example: \"3\"\n        delay:\n          type: integer\n          example: \"0\"\n          nullable: true\n        hafas_trip:\n          $ref: '#/components/schemas/hafas_trip'\n    hafas_trip:\n      type: object\n      properties:\n        id:\n          type: number\n          example: 16\n        trip_id:\n          $ref: '#/components/schemas/trip_id'\n        category:\n          $ref: '#/components/schemas/category'\n        number:\n          $ref: '#/components/schemas/number'\n        linename:\n          $ref: '#/components/schemas/linename'\n        origin:\n          $ref: '#/components/schemas/ibnr'\n        destination:\n          $ref: '#/components/schemas/ibnr'\n        stopovers:\n          type: string\n          example: \"[{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"8079041\\\",\\\"name\\\":\\\"Karlsruhe Bahnhofsvorplatz\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"8079041\\\",\\\"latitude\\\":48.994348,\\\"longitude\\\":8.399583},\\\"products\\\":{\\\"nationalExpress\\\":true,\\\"national\\\":true,\\\"regionalExp\\\":true,\\\"regional\\\":true,\\\"suburban\\\":true,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":true,\\\"taxi\\\":true}},\\\"arrival\\\":null,\\\"arrivalDelay\\\":null,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:50:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null,\\\"remarks\\\":[{\\\"type\\\":\\\"hint\\\",\\\"code\\\":\\\"text.journeystop.product.or.direction.changes.stop.message\\\",\\\"text\\\":\\\"As Bus 62 heading towards 62 Entenfang \u003e70 from here\\\"}]},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"362191\\\",\\\"name\\\":\\\"Ebertstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"362191\\\",\\\"latitude\\\":48.994519,\\\"longitude\\\":8.395395},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":true,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":true,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T15:51:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:51:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"377218\\\",\\\"name\\\":\\\"Welfenstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"377218\\\",\\\"latitude\\\":48.99531,\\\"longitude\\\":8.386118},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":true,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T15:53:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:53:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721329\\\",\\\"name\\\":\\\"Beiertheim West, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721329\\\",\\\"latitude\\\":48.994896,\\\"longitude\\\":8.382693},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T15:54:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:54:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721468\\\",\\\"name\\\":\\\"Windeckstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721468\\\",\\\"latitude\\\":48.99122,\\\"longitude\\\":8.371016},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":true}},\\\"arrival\\\":\\\"2019-11-24T15:55:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:55:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"723868\\\",\\\"name\\\":\\\"Hardecksiedlung, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"723868\\\",\\\"latitude\\\":48.992262,\\\"longitude\\\":8.368813},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":true,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T15:56:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:56:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721437\\\",\\\"name\\\":\\\"Schwimmschulweg, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721437\\\",\\\"latitude\\\":48.994653,\\\"longitude\\\":8.364247},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T15:57:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:57:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721380\\\",\\\"name\\\":\\\"Hornisgrindestra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721380\\\",\\\"latitude\\\":48.995966,\\\"longitude\\\":8.360409},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T15:58:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:58:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721349\\\",\\\"name\\\":\\\"Edelbergstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721349\\\",\\\"latitude\\\":48.996865,\\\"longitude\\\":8.354071},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T15:59:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T15:59:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721458\\\",\\\"name\\\":\\\"Wattkopfstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721458\\\",\\\"latitude\\\":48.994573,\\\"longitude\\\":8.351635},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:00:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:00:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721333\\\",\\\"name\\\":\\\"Bernsteinstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721333\\\",\\\"latitude\\\":48.991912,\\\"longitude\\\":8.348363},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:01:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:01:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721350\\\",\\\"name\\\":\\\"Eichelbergstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721350\\\",\\\"latitude\\\":48.99353,\\\"longitude\\\":8.345109},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:02:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:02:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721455\\\",\\\"name\\\":\\\"T\\\\u00dcV, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721455\\\",\\\"latitude\\\":48.996667,\\\"longitude\\\":8.348426},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:03:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:03:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"723629\\\",\\\"name\\\":\\\"St. Josef Kirche, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"723629\\\",\\\"latitude\\\":48.998851,\\\"longitude\\\":8.348615},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:04:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:04:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721346\\\",\\\"name\\\":\\\"Durmersheimer Stra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721346\\\",\\\"latitude\\\":49.000514,\\\"longitude\\\":8.350619},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:05:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:05:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"723802\\\",\\\"name\\\":\\\"Sinner (Durmersheimer Stra\\\\u00dfe), Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"723802\\\",\\\"latitude\\\":49.002663,\\\"longitude\\\":8.35506},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:06:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:06:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721415\\\",\\\"name\\\":\\\"Gr\\\\u00fcnwinkel Friedhof, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721415\\\",\\\"latitude\\\":49.005521,\\\"longitude\\\":8.356103},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:07:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:07:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721339\\\",\\\"name\\\":\\\"Blohnstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721339\\\",\\\"latitude\\\":49.007346,\\\"longitude\\\":8.356417},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:08:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:08:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null,\\\"remarks\\\":[{\\\"type\\\":\\\"hint\\\",\\\"code\\\":\\\"text.journeystop.product.or.direction.changes.stop.message\\\",\\\"text\\\":\\\"As Bus 62 heading towards 70 Heidehof from here\\\"}]},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"363851\\\",\\\"name\\\":\\\"Entenfang, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"363851\\\",\\\"latitude\\\":49.010609,\\\"longitude\\\":8.359501},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":true,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":true,\\\"taxi\\\":true}},\\\"arrival\\\":\\\"2019-11-24T16:10:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:12:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null,\\\"remarks\\\":[{\\\"type\\\":\\\"hint\\\",\\\"code\\\":\\\"text.journeystop.product.or.direction.changes.stop.message\\\",\\\"text\\\":\\\"As Bus 70 heading towards 70 Heidehof from here\\\"}]},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721398\\\",\\\"name\\\":\\\"K\\\\u00e4rcherstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721398\\\",\\\"latitude\\\":49.015895,\\\"longitude\\\":8.361559},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:14:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:14:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"373522\\\",\\\"name\\\":\\\"Hertzstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"373522\\\",\\\"latitude\\\":49.020246,\\\"longitude\\\":8.364984},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":true,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:15:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:15:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721326\\\",\\\"name\\\":\\\"Barbaraweg, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721326\\\",\\\"latitude\\\":49.023967,\\\"longitude\\\":8.365946},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:15:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:15:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721410\\\",\\\"name\\\":\\\"Madenburgweg, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721410\\\",\\\"latitude\\\":49.027051,\\\"longitude\\\":8.36546},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:16:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:16:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721332\\\",\\\"name\\\":\\\"Berliner Stra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721332\\\",\\\"latitude\\\":49.03026,\\\"longitude\\\":8.364939},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:17:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:17:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721364\\\",\\\"name\\\":\\\"Germersheimer Stra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721364\\\",\\\"latitude\\\":49.032894,\\\"longitude\\\":8.364858},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:17:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:17:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721462\\\",\\\"name\\\":\\\"Wei\\\\u00dfenburger Stra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721462\\\",\\\"latitude\\\":49.036957,\\\"longitude\\\":8.366989},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:18:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:18:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721436\\\",\\\"name\\\":\\\"Schweigener Stra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721436\\\",\\\"latitude\\\":49.03844,\\\"longitude\\\":8.369586},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:19:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:19:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721385\\\",\\\"name\\\":\\\"Kaiserslauterner Stra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721385\\\",\\\"latitude\\\":49.036687,\\\"longitude\\\":8.374153},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:20:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:20:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721900\\\",\\\"name\\\":\\\"Neureut Flughafenstra\\\\u00dfe, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721900\\\",\\\"latitude\\\":49.036139,\\\"longitude\\\":8.380535},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:21:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:21:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"721172\\\",\\\"name\\\":\\\"Neureut Rosmarinweg, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"721172\\\",\\\"latitude\\\":49.035482,\\\"longitude\\\":8.385605},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":false,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:22:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":\\\"2019-11-24T16:22:00+01:00\\\",\\\"departureDelay\\\":0,\\\"departurePlatform\\\":null},{\\\"stop\\\":{\\\"type\\\":\\\"stop\\\",\\\"id\\\":\\\"377009\\\",\\\"name\\\":\\\"Heidehof, Karlsruhe\\\",\\\"location\\\":{\\\"type\\\":\\\"location\\\",\\\"id\\\":\\\"377009\\\",\\\"latitude\\\":49.031536,\\\"longitude\\\":8.387008},\\\"products\\\":{\\\"nationalExpress\\\":false,\\\"national\\\":false,\\\"regionalExp\\\":false,\\\"regional\\\":false,\\\"suburban\\\":false,\\\"bus\\\":true,\\\"ferry\\\":false,\\\"subway\\\":false,\\\"tram\\\":true,\\\"taxi\\\":false}},\\\"arrival\\\":\\\"2019-11-24T16:23:00+01:00\\\",\\\"arrivalDelay\\\":0,\\\"arrivalPlatform\\\":null,\\\"departure\\\":null,\\\"departureDelay\\\":null,\\\"departurePlatform\\\":null}]\"\n        polyline:\n          $ref: '#/components/schemas/polyline'\n        departure:\n          $ref: '#/components/schemas/timestamp'\n        arrival:\n          $ref: '#/components/schemas/timestamp'\n        delay:\n          type: integer\n          example: \"0\"\n          nullable: true\n    event:\n      type: object\n      nullable: true\n      properties:\n        id:\n          $ref: '#/components/schemas/event_id'\n        name:\n          type: string\n          example: \"Weihnachten 2019\"\n        slug:\n          $ref: '#/components/schemas/event_slug'\n        hashtag:\n          type: string\n          example: \"MerryTräwellingMas\"\n        host:\n          type: string\n          example: \"Welt\"\n        url:\n          type: string\n          example: \"https://www.weihnachten.de/\"\n        trainstation:\n          $ref: '#/components/schemas/ibnr'\n        begin:\n          type: string\n          example: \"2019-12-24 00:00:00\"\n        end:\n          type: string\n          example: \"2019-12-24 23:59:59\"\n\n    station:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 3\n        ibnr:\n          $ref: '#/components/schemas/ibnr'\n        name:\n          type: string\n          example: \"Karlsruhe Bahnhofsvorplatz\"\n        latitude:\n          type: number\n          format: float\n          example: \"48.994348\"\n        longitude:\n          type: number\n          format: float\n          example: 48.994348\n    querystation:\n      type: object\n      properties:\n        ibnr:\n          $ref: '#/components/schemas/ibnr'\n        name:\n          type: string\n          example: \"Karlsruhe Bahnhofsvorplatz\"\n        provider:\n          type: string\n          example: \"train\"\n    leaderboardarray:\n      type: array\n      items:\n        type: object\n        properties:\n          username:\n            $ref: '#/components/schemas/username'\n          train_duration:\n            type: string\n            example: \"90\"\n          train_distance:\n            type: string\n            example: \"26711.37\"\n          points:\n            type: string\n            example: \"1337\"\n    status_id:\n      type: integer\n      example: 10\n    event_id:\n      type: integer\n      example: 1\n    event_slug:\n      type: string\n      example: \"weihnachten_2019\"\n    trip_id:\n      type: string\n      example: \"1|1937395|17|80|24112019\"\n    userId:\n      type: integer\n      example: 1\n    username:\n      type: string\n      example: \"testuser\"\n    twitterUrl:\n      type: string\n      example: \"https://twitter.com/traewelling\"\n    mastodonUrl:\n      type: string\n      example: \"https://chaos.social/traewelling\"\n    timestamp:\n      type: string\n      pattern: \"YYYY-MM-DD hh:mm:ss\"\n      example: \"2019-11-24 15:44:16\"\n    ibnr:\n      type: string\n      example: \"8079041\"\n    category:\n      type: string\n      example: \"bus\"\n    number:\n      type: string\n      example: \"bus-62\"\n    linename:\n      type: string\n      example: \"62\"\n    polyline:\n      type: string\n      format: hash\n      example: \"cac715508e44ae253f424562fe5d286e\"\n",
			"canonicalURL": "/github.com/Traewelling/traewelling@647e56177fcde74f90302335b4af44648fc43983/-/blob/api-swagger-v0.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Traewelling/traewelling/blob/647e56177fcde74f90302335b4af44648fc43983/api-swagger-v0.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/statuses/{id}\": put: responses: 200: content: application/json: schema: parse schema: at 1:42366: object cannot contain 'items' field"
}