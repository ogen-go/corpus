{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/slack.com/1.7.0/openapi.yaml",
			"byteSize": 728350,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://slack.com/api\ninfo:\n  contact:\n    name: Slack developer relations\n    url: https://api.slack.com/support\n  description: One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.\n  title: Slack Web API\n  version: 1.7.0\n  x-apisguru-categories:\n    - collaboration\n    - messaging\n  x-logo:\n    url: http://static.tumblr.com/wvuzcz9/LlKncfhmp/slack_logo_240.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/slackapi/slack-api-specs/master/web-api/slack_web_openapi_v2.json\n      version: \"3.0\"\n  x-providerName: slack.com\nexternalDocs:\n  description: Learn more about the Slack Web API\n  url: https://api.slack.com/web\ntags: []\npaths:\n  /admin.apps.approve:\n    post:\n      description: Approve an app for installation on a workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.apps.approve\n      operationId: admin_apps_approve\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.apps:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                app_id:\n                  description: The id of the app to approve.\n                  type: string\n                request_id:\n                  description: The id of the request to approve.\n                  type: string\n                team_id:\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.apps:write\n      tags:\n        - admin.apps\n        - admin\n  /admin.apps.approved.list:\n    get:\n      description: List approved apps for an org or workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.apps.approved.list\n      operationId: admin_apps_approved_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.apps:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return. Must be between 1 - 1000 both inclusive.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - in: query\n          name: team_id\n          schema:\n            type: string\n        - in: query\n          name: enterprise_id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    approved_apps:\n                      - app:\n                          additional_info: \"\"\n                          app_directory_url: https://myteam.enterprise.slack.com/apps/A0W7UKG8E-my-test-app\n                          app_homepage_url: https://www.slack.com\n                          description: test app\n                          help_url: https://www.slack.com\n                          icons:\n                            image_1024: https://3026743124446w96_2bd4ea1ad1f89a23c242_1024.png\n                            image_128: https://30267341249446w6_2bd4ea1ad1f89a23c242_128.png\n                            image_192: https://30267431249446w6_2bd4ea1ad1f89a23c242_192.png\n                            image_32: https://302674312496446w_2bd4ea1ad1f89a23c242_32.png\n                            image_36: https://302674312496446w_2bd4ea1ad1f89a23c242_36.png\n                            image_48: https://302674312496446w_2bd4ea1ad1f89a23c242_48.png\n                            image_512: https://30267431249446w6_2bd4ea1ad1f89a23c242_512.png\n                            image_64: https://302674312496446w_2bd4ea1ad1f89a23c242_64.png\n                            image_72: https://302674312496446w_2bd4ea1ad1f89a23c242_72.png\n                            image_96: https://302674312496446w_2bd4ea1ad1f89a23c242_96.png\n                            image_original: https://302674446w12496_2bd4ea1ad1f89a23c242_original.png\n                          id: A0W7UKG8E\n                          is_app_directory_approved: false\n                          is_internal: false\n                          name: My Test App\n                          privacy_policy_url: https://www.slack.com\n                        date_updated: 1574296707\n                        last_resolved_by:\n                          actor_id: W0G82F4FD\n                          actor_type: user\n                        scopes:\n                          - description: Add the ability for people to direct message or mention @my_test_app\n                            is_sensitive: true\n                            name: bot\n                            token_type: bot\n                    ok: true\n                    response_metadata:\n                      next_cursor: \"\"\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.apps:read\n      tags:\n        - admin.apps.approved\n        - admin\n  /admin.apps.requests.list:\n    get:\n      description: List app requests for a team/workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.apps.requests.list\n      operationId: admin_apps_requests_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.apps:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return. Must be between 1 - 1000 both inclusive.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - in: query\n          name: team_id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    app_requests:\n                      - app:\n                          additional_info: \"\"\n                          app_directory_url: https://acmecorp.slack.com/apps/A061BL8RQ0-test-app\n                          app_homepage_url: \"\"\n                          description: \"\"\n                          help_url: \"\"\n                          icons:\n                            image_1024: /cdn/15258203/img/testapp/service_1024.png\n                            image_128: /cdn/157258203/img/testapp/service_128.png\n                            image_192: /cdn/157258203/img/testapp/service_192.png\n                            image_32: /cdn/157658203/img/testapp/service_32.png\n                            image_36: /cdn/157658203/img/testapp/service_36.png\n                            image_48: /cdn/157658203/img/testapp/service_48.png\n                            image_512: /cdn/15758203/img/testapp/service_512.png\n                            image_64: /cdn/157658203/img/testapp/service_64.png\n                            image_72: /cdn/157658203/img/testapp/service_72.png\n                            image_96: /cdn/157658203/img/testapp/service_96.png\n                          id: A061BL8RQ0\n                          is_app_directory_approved: true\n                          is_internal: false\n                          name: Test App\n                          privacy_policy_url: https://testapp.com/privacy\n                        date_created: 1578956327\n                        id: Ar0XJGFLMLS\n                        message: test test again\n                        previous_resolution: null\n                        scopes:\n                          - description: Post messages to specific channels in Slack\n                            is_sensitive: false\n                            name: incoming-webhook\n                            token_type: user\n                        team:\n                          domain: acmecorp\n                          id: T0M94LNUCR\n                          name: Acme Corp\n                        user:\n                          email: janedoe@example.com\n                          id: W08RA9G5HR\n                          name: Jane Doe\n                    ok: true\n                    response_metadata:\n                      next_cursor: \"\"\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: missing_scope\n                    needed: admin.apps:read\n                    ok: false\n                    provided: read,client,admin,identify,post,apps\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.apps:read\n      tags:\n        - admin.apps.requests\n        - admin\n  /admin.apps.restrict:\n    post:\n      description: Restrict an app for installation on a workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.apps.restrict\n      operationId: admin_apps_restrict\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.apps:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                app_id:\n                  description: The id of the app to restrict.\n                  type: string\n                request_id:\n                  description: The id of the request to restrict.\n                  type: string\n                team_id:\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.apps:write\n      tags:\n        - admin.apps\n        - admin\n  /admin.apps.restricted.list:\n    get:\n      description: List restricted apps for an org or workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.apps.restricted.list\n      operationId: admin_apps_restricted_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.apps:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return. Must be between 1 - 1000 both inclusive.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - in: query\n          name: team_id\n          schema:\n            type: string\n        - in: query\n          name: enterprise_id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    response_metadata:\n                      next_cursor: \"\"\n                    restricted_apps:\n                      - app:\n                          additional_info: \"\"\n                          app_directory_url: https://myteam.enterprise.slack.com/apps/A0FDLP8M2L-my-test-app\n                          app_homepage_url: https://example.com\n                          description: A fun test app for Slack\n                          help_url: https://example.com\n                          icons:\n                            image_1024: https://1433265338rl878408_eb57dbc818daa4ba15d6_1024.png\n                            image_128: https://4332653438rl87808_eb57dbc818daa4ba15d6_128.png\n                            image_192: https://4332653438rl87808_eb57dbc818daa4ba15d6_192.png\n                            image_32: https://143326534038rl8788_eb57dbc818daa4ba15d6_32.png\n                            image_36: https://143326534038rl8788_eb57dbc818daa4ba15d6_36.png\n                            image_48: https://143326534038rl8788_eb57dbc818daa4ba15d6_48.png\n                            image_512: https://4332653438rl87808_eb57dbc818daa4ba15d6_512.png\n                            image_64: https://143326534038rl8788_eb57dbc818daa4ba15d6_64.png\n                            image_72: https://143326534038rl8788_eb57dbc818daa4ba15d6_72.png\n                            image_96: https://143326534038rl8788_eb57dbc818daa4ba15d6_96.png\n                            image_original: https://143338rl8782653408_eb57dbc818daa4ba15d6_original.png\n                          id: A0FDLP8M2L\n                          is_app_directory_approved: true\n                          is_internal: false\n                          name: My Test App\n                          privacy_policy_url: https://example.com\n                        date_updated: 1574296721\n                        last_resolved_by:\n                          actor_id: W0G82LMFD\n                          actor_type: user\n                        scopes:\n                          - description: Upload, edit, and delete files on the user‟s behalf\n                            is_sensitive: true\n                            name: files:write:user\n                            token_type: user\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.apps:read\n      tags:\n        - admin.apps.restricted\n        - admin\n  /admin.conversations.archive:\n    post:\n      description: Archive a public or private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.archive\n      operationId: admin_conversations_archive\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to archive.\n                  type: string\n              required:\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.archive\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.archive schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.archive\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - channel_not_found\n                      - channel_type_not_supported\n                      - default_org_wide_channel\n                      - already_archived\n                      - cant_archive_general\n                      - restricted_action\n                      - could_not_archive_channel\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.archive error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.convertToPrivate:\n    post:\n      description: Convert a public channel to a private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.convertToPrivate\n      operationId: admin_conversations_convertToPrivate\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to convert to private.\n                  type: string\n              required:\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.convertToPrivate\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.convertToPrivate schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.convertToPrivate\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - restricted_action\n                      - name_taken\n                      - channel_not_found\n                      - channel_type_not_supported\n                      - default_org_wide_channel\n                      - method_not_supported_for_channel_type\n                      - could_not_convert_channel\n                      - external_channel_migrating\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.convertToPrivate error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.create:\n    post:\n      description: Create a public or private channel-based conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.create\n      operationId: admin_conversations_create\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                description:\n                  description: Description of the public or private channel to create.\n                  type: string\n                is_private:\n                  description: When `true`, creates a private channel instead of a public channel\n                  type: boolean\n                name:\n                  description: Name of the public or private channel to create.\n                  type: string\n                org_wide:\n                  description: \"When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel\"\n                  type: boolean\n                team_id:\n                  description: \"The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`.\"\n                  type: string\n              required:\n                - name\n                - is_private\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel_id: C12345\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.create\n                properties:\n                  channel_id:\n                    $ref: \"#/components/schemas/defs_channel_id\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.create schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.create\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - name_taken\n                      - restricted_action\n                      - team_not_found\n                      - invalid_team\n                      - invalid_name\n                      - could_not_create_channel\n                      - team_id_or_org_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.create error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.delete:\n    post:\n      description: Delete a public or private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.delete\n      operationId: admin_conversations_delete\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to delete.\n                  type: string\n              required:\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.delete\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.delete schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.delete\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - not_an_admin\n                      - channel_not_found\n                      - channel_type_not_supported\n                      - default_org_wide_channel\n                      - restricted_action\n                      - could_not_delete_channel\n                      - missing_scope\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.delete error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.disconnectShared:\n    post:\n      description: Disconnect a connected channel from one or more workspaces.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.disconnectShared\n      operationId: admin_conversations_disconnectShared\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to be disconnected from some workspaces.\n                  type: string\n                leaving_team_ids:\n                  description: The team to be removed from the channel. Currently only a single team id can be specified.\n                  type: string\n              required:\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.disconnectShared\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.rename schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.disconnectShared\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - not_an_admin\n                      - not_an_enterprise\n                      - channel_not_found\n                      - not_supported\n                      - team_not_found\n                      - restricted_action\n                      - missing_scope\n                      - leaving_team_not_in_channel\n                      - no_teams_to_disconnect\n                      - leaving_team_required\n                      - cannot_kick_team\n                      - cannot_kick_home_team\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.disconnectShared error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.ekm.listOriginalConnectedChannelInfo:\n    get:\n      description: List all disconnected channels—i.e., channels that were once connected to other workspaces and then disconnected—and the corresponding original channel IDs for key revocation with EKM.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.ekm.listOriginalConnectedChannelInfo\n      operationId: admin_conversations_ekm_listOriginalConnectedChannelInfo\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of channels to filter to.\n          in: query\n          name: channel_ids\n          schema:\n            type: string\n        - description: A comma-separated list of the workspaces to which the channels you would like returned belong.\n          in: query\n          name: team_ids\n          schema:\n            type: string\n        - description: The maximum number of items to return. Must be between 1 - 1000 both inclusive.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channels:\n                      - id: string\n                        internal_team_ids: array\n                        original_connected_channel_id: string\n                        original_connected_host_id: string\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:read\n      tags:\n        - admin.conversations.ekm\n        - admin\n  /admin.conversations.getConversationPrefs:\n    get:\n      description: Get conversation preferences for a public or private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.getConversationPrefs\n      operationId: admin_conversations_getConversationPrefs\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The channel to get preferences for.\n          in: query\n          name: channel_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.getConversationPrefs\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  prefs:\n                    properties:\n                      can_thread:\n                        properties:\n                          type:\n                            items:\n                              type: string\n                            type: array\n                          user:\n                            items:\n                              type: string\n                            type: array\n                        type: object\n                      who_can_post:\n                        properties:\n                          type:\n                            items:\n                              type: string\n                            type: array\n                          user:\n                            items:\n                              type: string\n                            type: array\n                        type: object\n                    type: object\n                required:\n                  - ok\n                title: admin.conversations.getConversationPrefs schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.getConversationPrefs\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - not_an_admin\n                      - not_an_enterprise\n                      - restricted_action\n                      - missing_scope\n                      - channel_not_found\n                      - channel_type_not_supported\n                      - could_not_get_conversation_prefs\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.unarchive error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:read\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.getTeams:\n    get:\n      description: Get all the workspaces a given public or private channel is connected to within this Enterprise org.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.getTeams\n      operationId: admin_conversations_getTeams\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The channel to determine connected workspaces within the organization for.\n          in: query\n          name: channel_id\n          required: true\n          schema:\n            type: string\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The maximum number of items to return. Must be between 1 - 1000 both inclusive.\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    teams:\n                      - T1234\n                      - T5678\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.getTeams\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  response_metadata:\n                    additionalProperties: false\n                    properties:\n                      next_cursor:\n                        type: string\n                    required:\n                      - next_cursor\n                    type: object\n                  team_ids:\n                    items:\n                      $ref: \"#/components/schemas/defs_team\"\n                    type: array\n                required:\n                  - ok\n                  - team_ids\n                title: admin.conversations.getTeams schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.getTeams\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - channel_not_found\n                      - channel_type_not_supported\n                      - unsupported_team_type\n                      - restricted_action\n                      - could_not_get_teams\n                      - invalid_cursor\n                      - invalid_limit\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.getTeams error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:read\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.invite:\n    post:\n      description: Invite a user to a public or private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.invite\n      operationId: admin_conversations_invite\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel that the users will be invited to.\n                  type: string\n                user_ids:\n                  description: The users to invite.\n                  type: string\n              required:\n                - user_ids\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.invite\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.invite schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: Schema for error response from admin.conversations.invite\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - channel_not_found\n                      - channel_type_not_supported\n                      - default_org_wide_channel\n                      - restricted_action\n                      - user_must_be_admin\n                      - failed_for_some_users\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.invite error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.rename:\n    post:\n      description: Rename a public or private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.rename\n      operationId: admin_conversations_rename\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to rename.\n                  type: string\n                name:\n                  type: string\n              required:\n                - channel_id\n                - name\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.rename\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.rename schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.rename\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - channel_not_found\n                      - channel_type_not_supported\n                      - restricted_action\n                      - could_not_rename_channel\n                      - default_org_wide_channel\n                      - name_taken\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.unarchive error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.restrictAccess.addGroup:\n    post:\n      description: Add an allowlist of IDP groups for accessing a channel\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.restrictAccess.addGroup\n      operationId: admin_conversations_restrictAccess_addGroup\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to link this group to.\n                  type: string\n                group_id:\n                  description: The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel.\n                  type: string\n                team_id:\n                  description: The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n                  type: string\n              required:\n                - token\n                - group_id\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations.restrictAccess\n        - admin\n  /admin.conversations.restrictAccess.listGroups:\n    get:\n      description: List all IDP Groups linked to a channel\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.restrictAccess.listGroups\n      operationId: admin_conversations_restrictAccess_listGroups\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: channel_id\n          required: true\n          schema:\n            type: string\n        - description: The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.\n          in: query\n          name: team_id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    group_ids:\n                      - YOUR_GROUP_ID\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:read\n      tags:\n        - admin.conversations.restrictAccess\n        - admin\n  /admin.conversations.restrictAccess.removeGroup:\n    post:\n      description: Remove a linked IDP group linked from a private channel\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.restrictAccess.removeGroup\n      operationId: admin_conversations_restrictAccess_removeGroup\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to remove the linked group from.\n                  type: string\n                group_id:\n                  description: The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to remove from the private channel.\n                  type: string\n                team_id:\n                  description: The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n                  type: string\n              required:\n                - token\n                - team_id\n                - group_id\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations.restrictAccess\n        - admin\n  /admin.conversations.search:\n    get:\n      description: Search for public or private channels in an Enterprise organization.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.search\n      operationId: admin_conversations_search\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Comma separated string of team IDs, signifying the workspaces to search through.\n          in: query\n          name: team_ids\n          schema:\n            type: string\n        - description: Name of the the channel to query by.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Maximum number of items to be returned. Must be between 1 - 20 both inclusive. Default is 10.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The type of channel to include or exclude in the search. For example `private` will search private channels, while `private_exclude` will exclude them. For a full list of types, check the [Types section](#types).\n          in: query\n          name: search_channel_types\n          schema:\n            type: string\n        - description: \"Possible values are `relevant` (search ranking based on what we think is closest), `name` (alphabetical), `member_count` (number of users in the channel), and `created` (date channel was created). You can optionally pair this with the `sort_dir` arg to change how it is sorted \"\n          in: query\n          name: sort\n          schema:\n            type: string\n        - description: Sort direction. Possible values are `asc` for ascending order like (1, 2, 3) or (a, b, c), and `desc` for descending order like (3, 2, 1) or (c, b, a)\n          in: query\n          name: sort_dir\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channels:\n                      - created: 1449252889\n                        creator: U012A3CDE\n                        id: C012AB3CD\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: true\n                        is_group: false\n                        is_im: false\n                        is_member: true\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: general\n                        name_normalized: general\n                        num_members: 4\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: \"\"\n                          last_set: 0\n                          value: This channel is for team-wide communication and announcements. All team members are in this channel.\n                        topic:\n                          creator: \"\"\n                          last_set: 0\n                          value: Company-wide announcements and work-based matters\n                        unlinked: 0\n                    ok: true\n                    response_metadata:\n                      next_cursor: dGVhbTpDMDYxRkE1UEI=\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.search\n                properties:\n                  channels:\n                    items:\n                      $ref: \"#/components/schemas/objs_channel\"\n                    type: array\n                  next_cursor:\n                    type: string\n                required:\n                  - channels\n                  - next_cursor\n                title: admin.conversations.search schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: not_an_enterprise\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.search\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - not_an_admin\n                      - not_an_enterprise\n                      - team_not_found\n                      - not_allowed\n                      - invalid_auth\n                      - invalid_cursor\n                      - invalid_search_channel_type\n                      - invalid_sort\n                      - invalid_sort_dir\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.search error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:read\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.setConversationPrefs:\n    post:\n      description: Set the posting permissions for a public or private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.setConversationPrefs\n      operationId: admin_conversations_setConversationPrefs\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to set the prefs for\n                  type: string\n                prefs:\n                  description: The prefs for this channel in a stringified JSON format.\n                  type: string\n              required:\n                - channel_id\n                - prefs\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.setConversationPrefs\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.setConversationPrefs schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.setConversationPrefs\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - not_an_admin\n                      - channel_not_found\n                      - channel_type_not_supported\n                      - restricted_action\n                      - missing_scope\n                      - could_not_set_channel_pref\n                      - default_org_wide_channel\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.setConversationPrefs error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.setTeams:\n    post:\n      description: Set the workspaces in an Enterprise grid org that connect to a public or private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.setTeams\n      operationId: admin_conversations_setTeams\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The encoded `channel_id` to add or remove to workspaces.\n                  type: string\n                org_channel:\n                  description: True if channel has to be converted to an org channel\n                  type: boolean\n                target_team_ids:\n                  description: A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide.\n                  type: string\n                team_id:\n                  description: The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel.\n                  type: string\n              required:\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.conversations.unarchive:\n    post:\n      description: Unarchive a public or private channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.conversations.unarchive\n      operationId: admin_conversations_unarchive\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.conversations:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_id:\n                  description: The channel to unarchive.\n                  type: string\n              required:\n                - channel_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of admin.conversations.unarchive\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: admin.conversations.unarchive schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from admin.conversations.unarchive\n                properties:\n                  error:\n                    enum:\n                      - feature_not_enabled\n                      - channel_not_found\n                      - channel_not_archived\n                      - channel_type_not_supported\n                      - restricted_action\n                      - could_not_unarchive_channel\n                      - default_org_wide_channel\n                      - missing_scope\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: admin.conversations.unarchive error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.conversations:write\n      tags:\n        - admin.conversations\n        - admin\n  /admin.emoji.add:\n    post:\n      description: Add an emoji.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.emoji.add\n      operationId: admin_emoji_add\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                name:\n                  description: The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `admin.teams:write`\"\n                  type: string\n                url:\n                  description: The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best.\n                  type: string\n              required:\n                - token\n                - name\n                - url\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.emoji\n        - admin\n  /admin.emoji.addAlias:\n    post:\n      description: Add an emoji alias.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.emoji.addAlias\n      operationId: admin_emoji_addAlias\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                alias_for:\n                  description: The alias of the emoji.\n                  type: string\n                name:\n                  description: The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `admin.teams:write`\"\n                  type: string\n              required:\n                - token\n                - name\n                - alias_for\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.emoji\n        - admin\n  /admin.emoji.list:\n    get:\n      description: List emoji for an Enterprise Grid organization.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.emoji.list\n      operationId: admin_emoji_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The maximum number of items to return. Must be between 1 - 1000 both inclusive.\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    cache_ts: \"1575283387.000000\"\n                    categories:\n                      - emoji_names:\n                          - grinning\n                          - grin\n                          - joy\n                          - etc etc ...\n                        name: Smileys \u0026 People\n                    categories_version: \"5\"\n                    emoji:\n                      black_square: alias:black_large_square\n                      bowtie: https://emoji.slack-edge.com/T9TK3CUKW/bowtie/f3ec6f2bb0.png\n                      cubimal_chick: https://emoji.slack-edge.com/T9TK3CUKW/cubimal_chick/85961c43d7.png\n                      dusty_stick: https://emoji.slack-edge.com/T9TK3CUKW/dusty_stick/6177a62312.png\n                      glitch_crab: https://emoji.slack-edge.com/T9TK3CUKW/glitch_crab/db049f1f9c.png\n                      piggy: https://emoji.slack-edge.com/T9TK3CUKW/piggy/b7762ee8cd.png\n                      pride: https://emoji.slack-edge.com/T9TK3CUKW/pride/56b1bd3388.png\n                      shipit: alias:squirrel\n                      simple_smile:\n                        apple: https://a.slack-edge.com/80588/img/emoji_2017_12_06/apple/simple_smile.png\n                        google: https://a.slack-edge.com/80588/img/emoji_2017_12_06/google/simple_smile.png\n                      slack: https://emoji.slack-edge.com/T9TK3CUKW/slack/7d462d2443.png\n                      slack_call: https://emoji.slack-edge.com/T9TK3CUKW/slack_call/b81fffd6dd.png\n                      squirrel: https://emoji.slack-edge.com/T9TK3CUKW/squirrel/465f40c0e0.png\n                      thumbsup_all: https://emoji.slack-edge.com/T9TK3CUKW/thumbsup_all/50096a1020.gif\n                      white_square: alias:white_large_square\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:read\n      tags:\n        - admin.emoji\n        - admin\n  /admin.emoji.remove:\n    post:\n      description: Remove an emoji across an Enterprise Grid organization\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.emoji.remove\n      operationId: admin_emoji_remove\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                name:\n                  description: The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `admin.teams:write`\"\n                  type: string\n              required:\n                - token\n                - name\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.emoji\n        - admin\n  /admin.emoji.rename:\n    post:\n      description: Rename an emoji.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.emoji.rename\n      operationId: admin_emoji_rename\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                name:\n                  description: The name of the emoji to be renamed. Colons (`:myemoji:`) around the value are not required, although they may be included.\n                  type: string\n                new_name:\n                  description: The new name of the emoji.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `admin.teams:write`\"\n                  type: string\n              required:\n                - token\n                - name\n                - new_name\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.emoji\n        - admin\n  /admin.inviteRequests.approve:\n    post:\n      description: Approve a workspace invite request.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.inviteRequests.approve\n      operationId: admin_inviteRequests_approve\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.invites:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/admin_inviteRequests_approve\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.invites:write\n      tags:\n        - admin.inviteRequests\n        - admin\n  /admin.inviteRequests.approved.list:\n    get:\n      description: List all approved workspace invite requests.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.inviteRequests.approved.list\n      operationId: admin_inviteRequests_approved_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.invites:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: ID for the workspace where the invite requests were made.\n          in: query\n          name: team_id\n          schema:\n            type: string\n        - description: Value of the `next_cursor` field sent as part of the previous API response\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The number of results that will be returned by the API on each invocation. Must be between 1 - 1000, both inclusive\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.invites:read\n      tags:\n        - admin.inviteRequests.approved\n        - admin\n  /admin.inviteRequests.denied.list:\n    get:\n      description: List all denied workspace invite requests.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.inviteRequests.denied.list\n      operationId: admin_inviteRequests_denied_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.invites:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: ID for the workspace where the invite requests were made.\n          in: query\n          name: team_id\n          schema:\n            type: string\n        - description: Value of the `next_cursor` field sent as part of the previous api response\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The number of results that will be returned by the API on each invocation. Must be between 1 - 1000 both inclusive\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.invites:read\n      tags:\n        - admin.inviteRequests.denied\n        - admin\n  /admin.inviteRequests.deny:\n    post:\n      description: Deny a workspace invite request.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.inviteRequests.deny\n      operationId: admin_inviteRequests_deny\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.invites:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/admin_inviteRequests_approve\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.invites:write\n      tags:\n        - admin.inviteRequests\n        - admin\n  /admin.inviteRequests.list:\n    get:\n      description: List all pending workspace invite requests.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.inviteRequests.list\n      operationId: admin_inviteRequests_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.invites:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: ID for the workspace where the invite requests were made.\n          in: query\n          name: team_id\n          schema:\n            type: string\n        - description: Value of the `next_cursor` field sent as part of the previous API response\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The number of results that will be returned by the API on each invocation. Must be between 1 - 1000, both inclusive\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.invites:read\n      tags:\n        - admin.inviteRequests\n        - admin\n  /admin.teams.admins.list:\n    get:\n      description: List all of the admins on a given workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.admins.list\n      operationId: admin_teams_admins_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - in: query\n          name: team_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    admin_ids:\n                      - U1234\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:read\n      tags:\n        - admin.teams.admins\n        - admin\n  /admin.teams.create:\n    post:\n      description: Create an Enterprise team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.create\n      operationId: admin_teams_create\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                team_description:\n                  description: Description for the team.\n                  type: string\n                team_discoverability:\n                  description: Who can join the team. A team's discoverability can be `open`, `closed`, `invite_only`, or `unlisted`.\n                  type: string\n                team_domain:\n                  description: Team domain (for example, slacksoftballteam).\n                  type: string\n                team_name:\n                  description: Team name (for example, Slack Softball Team).\n                  type: string\n              required:\n                - team_domain\n                - team_name\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    team: T12345\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.teams\n        - admin\n  /admin.teams.list:\n    get:\n      description: List all teams on an Enterprise organization\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.list\n      operationId: admin_teams_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return. Must be between 1 - 100 both inclusive.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    teams:\n                      - discoverability: hidden\n                        id: T1234\n                        name: My Team\n                        primary_owner:\n                          email: bront@slack.com\n                          user_id: W1234\n                        team_url: https://subarachnoid.slack.com/\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:read\n      tags:\n        - admin.teams\n        - admin\n  /admin.teams.owners.list:\n    get:\n      description: List all of the owners on a given workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.owners.list\n      operationId: admin_teams_owners_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: team_id\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return. Must be between 1 - 1000 both inclusive.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    owner_ids:\n                      - U1234\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:read\n      tags:\n        - admin.teams.owners\n        - admin\n  /admin.teams.settings.info:\n    get:\n      description: Fetch information about settings in a workspace\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.settings.info\n      operationId: admin_teams_settings_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: team_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    team:\n                      default_channels: array\n                      domain: string\n                      email_domain: string\n                      enterprise_id: string\n                      enterprise_name: string\n                      icon: array\n                      id: string\n                      name: string\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:read\n      tags:\n        - admin.teams.settings\n        - admin\n  /admin.teams.settings.setDefaultChannels:\n    post:\n      description: Set the default channels of a workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.settings.setDefaultChannels\n      operationId: admin_teams_settings_setDefaultChannels\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_ids:\n                  description: An array of channel IDs.\n                  type: string\n                team_id:\n                  description: ID for the workspace to set the default channel for.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `admin.teams:write`\"\n                  type: string\n              required:\n                - token\n                - team_id\n                - channel_ids\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.teams.settings\n        - admin\n  /admin.teams.settings.setDescription:\n    post:\n      description: Set the description of a given workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.settings.setDescription\n      operationId: admin_teams_settings_setDescription\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                description:\n                  description: The new description for the workspace.\n                  type: string\n                team_id:\n                  description: ID for the workspace to set the description for.\n                  type: string\n              required:\n                - team_id\n                - description\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.teams.settings\n        - admin\n  /admin.teams.settings.setDiscoverability:\n    post:\n      description: An API method that allows admins to set the discoverability of a given workspace\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.settings.setDiscoverability\n      operationId: admin_teams_settings_setDiscoverability\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                discoverability:\n                  description: This workspace's discovery setting. It must be set to one of `open`, `invite_only`, `closed`, or `unlisted`.\n                  type: string\n                team_id:\n                  description: The ID of the workspace to set discoverability on.\n                  type: string\n              required:\n                - team_id\n                - discoverability\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.teams.settings\n        - admin\n  /admin.teams.settings.setIcon:\n    post:\n      description: Sets the icon of a workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.settings.setIcon\n      operationId: admin_teams_settings_setIcon\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                image_url:\n                  description: Image URL for the icon\n                  type: string\n                team_id:\n                  description: ID for the workspace to set the icon for.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `admin.teams:write`\"\n                  type: string\n              required:\n                - token\n                - image_url\n                - team_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.teams.settings\n        - admin\n  /admin.teams.settings.setName:\n    post:\n      description: Set the name of a given workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.teams.settings.setName\n      operationId: admin_teams_settings_setName\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                name:\n                  description: The new name of the workspace.\n                  type: string\n                team_id:\n                  description: ID for the workspace to set the name for.\n                  type: string\n              required:\n                - team_id\n                - name\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.teams.settings\n        - admin\n  /admin.usergroups.addChannels:\n    post:\n      description: Add one or more default channels to an IDP group.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.usergroups.addChannels\n      operationId: admin_usergroups_addChannels\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.usergroups:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_ids:\n                  description: Comma separated string of channel IDs.\n                  type: string\n                team_id:\n                  description: The workspace to add default channels in.\n                  type: string\n                usergroup_id:\n                  description: ID of the IDP group to add default channels for.\n                  type: string\n              required:\n                - usergroup_id\n                - channel_ids\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: not_an_admin\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response if the token provided is not associated with an Org Admin or Owner\n      security:\n        - slackAuth:\n            - admin.usergroups:write\n      tags:\n        - admin.usergroups\n        - admin\n  /admin.usergroups.addTeams:\n    post:\n      description: Associate one or more default workspaces with an organization-wide IDP group.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.usergroups.addTeams\n      operationId: admin_usergroups_addTeams\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.teams:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                auto_provision:\n                  description: When `true`, this method automatically creates new workspace accounts for the IDP group members.\n                  type: boolean\n                team_ids:\n                  description: A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token.\n                  type: string\n                usergroup_id:\n                  description: An encoded usergroup (IDP Group) ID.\n                  type: string\n              required:\n                - usergroup_id\n                - team_ids\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.teams:write\n      tags:\n        - admin.usergroups\n        - admin\n  /admin.usergroups.listChannels:\n    get:\n      description: List the channels linked to an org-level IDP group (user group).\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.usergroups.listChannels\n      operationId: admin_usergroups_listChannels\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.usergroups:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: ID of the IDP group to list default channels for.\n          in: query\n          name: usergroup_id\n          required: true\n          schema:\n            type: string\n        - description: ID of the the workspace.\n          in: query\n          name: team_id\n          schema:\n            type: string\n        - description: Flag to include or exclude the count of members per channel.\n          in: query\n          name: include_num_members\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channels:\n                      - id: C024BE91L\n                        name: fun\n                        num_members: 34\n                        team_id: T024BE911\n                      - id: C024BE91K\n                        name: more fun\n                        team_id: T024BE912\n                      - id: C024BE91M\n                        is_redacted: true\n                        name: public-channel\n                        num_members: 34\n                        team_id: T024BE911\n                      - id: C024BE91N\n                        name: some more fun\n                        team_id: T024BE921\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: not_an_admin\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response if the token provided is not associated with an Org Admin or Owner\n      security:\n        - slackAuth:\n            - admin.usergroups:read\n      tags:\n        - admin.usergroups\n        - admin\n  /admin.usergroups.removeChannels:\n    post:\n      description: Remove one or more default channels from an org-level IDP group (user group).\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.usergroups.removeChannels\n      operationId: admin_usergroups_removeChannels\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.usergroups:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_ids:\n                  description: Comma-separated string of channel IDs\n                  type: string\n                usergroup_id:\n                  description: ID of the IDP Group\n                  type: string\n              required:\n                - usergroup_id\n                - channel_ids\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: not_an_admin\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response if the token provided is not associated with an Org Admin or Owner\n      security:\n        - slackAuth:\n            - admin.usergroups:write\n      tags:\n        - admin.usergroups\n        - admin\n  /admin.users.assign:\n    post:\n      description: Add an Enterprise user to a workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.assign\n      operationId: admin_users_assign\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_ids:\n                  description: Comma separated values of channel IDs to add user in the new workspace.\n                  type: string\n                is_restricted:\n                  description: True if user should be added to the workspace as a guest.\n                  type: boolean\n                is_ultra_restricted:\n                  description: True if user should be added to the workspace as a single-channel guest.\n                  type: boolean\n                team_id:\n                  description: The ID (`T1234`) of the workspace.\n                  type: string\n                user_id:\n                  description: The ID of the user to add to the workspace.\n                  type: string\n              required:\n                - team_id\n                - user_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users\n        - admin\n  /admin.users.invite:\n    post:\n      description: Invite a user to a workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.invite\n      operationId: admin_users_invite\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel_ids:\n                  description: A comma-separated list of `channel_id`s for this user to join. At least one channel is required.\n                  type: string\n                custom_message:\n                  description: An optional message to send to the user in the invite email.\n                  type: string\n                email:\n                  description: The email address of the person to invite.\n                  type: string\n                guest_expiration_ts:\n                  description: Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date.\n                  type: string\n                is_restricted:\n                  description: \"Is this user a multi-channel guest user? (default: false)\"\n                  type: boolean\n                is_ultra_restricted:\n                  description: \"Is this user a single channel guest user? (default: false)\"\n                  type: boolean\n                real_name:\n                  description: Full name of the user.\n                  type: string\n                resend:\n                  description: \"Allow this invite to be resent in the future if a user has not signed up yet. (default: false)\"\n                  type: boolean\n                team_id:\n                  description: The ID (`T1234`) of the workspace.\n                  type: string\n              required:\n                - team_id\n                - email\n                - channel_ids\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users\n        - admin\n  /admin.users.list:\n    get:\n      description: List users on a workspace\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.list\n      operationId: admin_users_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The ID (`T1234`) of the workspace.\n          in: query\n          name: team_id\n          required: true\n          schema:\n            type: string\n        - description: Set `cursor` to `next_cursor` returned by the previous call to list items in the next page.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: Limit for how many users to be retrieved per page\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    users:\n                      - email: bront@slack.com\n                        id: T1234\n                        is_admin: false\n                        is_bot: false\n                        is_owner: false\n                        is_primary_owner: false\n                        is_restricted: false\n                        is_ultra_restricted: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:read\n      tags:\n        - admin.users\n        - admin\n  /admin.users.remove:\n    post:\n      description: Remove a user from a workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.remove\n      operationId: admin_users_remove\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                team_id:\n                  description: The ID (`T1234`) of the workspace.\n                  type: string\n                user_id:\n                  description: The ID of the user to remove.\n                  type: string\n              required:\n                - team_id\n                - user_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users\n        - admin\n  /admin.users.session.invalidate:\n    post:\n      description: Invalidate a single session for a user by session_id\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.session.invalidate\n      operationId: admin_users_session_invalidate\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                session_id:\n                  type: integer\n                team_id:\n                  description: ID of the team that the session belongs to\n                  type: string\n              required:\n                - team_id\n                - session_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users.session\n        - admin\n  /admin.users.session.reset:\n    post:\n      description: Wipes all valid sessions on all devices for a given user\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.session.reset\n      operationId: admin_users_session_reset\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                mobile_only:\n                  description: \"Only expire mobile sessions (default: false)\"\n                  type: boolean\n                user_id:\n                  description: The ID of the user to wipe sessions for\n                  type: string\n                web_only:\n                  description: \"Only expire web sessions (default: false)\"\n                  type: boolean\n              required:\n                - user_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users.session\n        - admin\n  /admin.users.setAdmin:\n    post:\n      description: Set an existing guest, regular user, or owner to be an admin user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.setAdmin\n      operationId: admin_users_setAdmin\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                team_id:\n                  description: The ID (`T1234`) of the workspace.\n                  type: string\n                user_id:\n                  description: The ID of the user to designate as an admin.\n                  type: string\n              required:\n                - team_id\n                - user_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users\n        - admin\n  /admin.users.setExpiration:\n    post:\n      description: Set an expiration for a guest user\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.setExpiration\n      operationId: admin_users_setExpiration\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                expiration_ts:\n                  description: Timestamp when guest account should be disabled.\n                  type: integer\n                team_id:\n                  description: The ID (`T1234`) of the workspace.\n                  type: string\n                user_id:\n                  description: The ID of the user to set an expiration for.\n                  type: string\n              required:\n                - team_id\n                - user_id\n                - expiration_ts\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users\n        - admin\n  /admin.users.setOwner:\n    post:\n      description: Set an existing guest, regular user, or admin user to be a workspace owner.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.setOwner\n      operationId: admin_users_setOwner\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                team_id:\n                  description: The ID (`T1234`) of the workspace.\n                  type: string\n                user_id:\n                  description: Id of the user to promote to owner.\n                  type: string\n              required:\n                - team_id\n                - user_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users\n        - admin\n  /admin.users.setRegular:\n    post:\n      description: Set an existing guest user, admin user, or owner to be a regular user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/admin.users.setRegular\n      operationId: admin_users_setRegular\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin.users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                team_id:\n                  description: The ID (`T1234`) of the workspace.\n                  type: string\n                user_id:\n                  description: The ID of the user to designate as a regular user.\n                  type: string\n              required:\n                - team_id\n                - user_id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin.users:write\n      tags:\n        - admin.users\n        - admin\n  /api.test:\n    get:\n      description: Checks API calling code.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/api.test\n      operationId: api_test\n      parameters:\n        - description: Error response to return\n          in: query\n          name: error\n          schema:\n            type: string\n        - description: example property to return\n          in: query\n          name: foo\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties:\n                  type: object\n                description: Schema for successful response api.test method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: api.test success schema\n                type: object\n          description: Standard success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    args:\n                      error: my_error\n                    error: my_error\n                    ok: false\n              schema:\n                additionalProperties:\n                  type: object\n                description: Schema for error response api.test method\n                properties:\n                  error:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: api.test error schema\n                type: object\n          description: Artificial error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - api\n  /apps.event.authorizations.list:\n    get:\n      description: Get a list of authorizations for the given event context. Each authorization represents an app installation that the event is visible to.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/apps.event.authorizations.list\n      operationId: apps_event_authorizations_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `authorizations:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: event_context\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: cursor\n          schema:\n            type: string\n        - in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    authorizations:\n                      enterprise_id: string\n                      is_bot: string\n                      team_id: string\n                      user_id: string\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - authorizations:read\n      tags:\n        - apps.event.authorizations\n        - apps\n  /apps.permissions.info:\n    get:\n      description: Returns list of permissions this app has on a team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/apps.permissions.info\n      operationId: apps_permissions_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    info:\n                      app_home:\n                        resources:\n                          ids:\n                            - D0C0NU1Q8\n                            - D0BH95DLH\n                        scopes:\n                          - chat:write\n                          - im:history\n                          - im:read\n                      channel:\n                        resources:\n                          excluded_ids: []\n                          ids:\n                            - C061FA5PB\n                          wildcard: false\n                        scopes:\n                          - channels:read\n                      group:\n                        resources:\n                          ids: []\n                        scopes: []\n                      im:\n                        resources:\n                          ids: []\n                        scopes: []\n                      mpim:\n                        resources:\n                          ids: []\n                        scopes: []\n                      team:\n                        resources:\n                          ids: []\n                        scopes: []\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from apps.permissions.info method\n                properties:\n                  info:\n                    properties:\n                      app_home:\n                        properties:\n                          resources:\n                            $ref: \"#/components/schemas/objs_resources\"\n                          scopes:\n                            $ref: \"#/components/schemas/objs_scopes\"\n                        type: object\n                      channel:\n                        properties:\n                          resources:\n                            $ref: \"#/components/schemas/objs_resources\"\n                          scopes:\n                            $ref: \"#/components/schemas/objs_scopes\"\n                        type: object\n                      group:\n                        properties:\n                          resources:\n                            $ref: \"#/components/schemas/objs_resources\"\n                          scopes:\n                            $ref: \"#/components/schemas/objs_scopes\"\n                        type: object\n                      im:\n                        properties:\n                          resources:\n                            $ref: \"#/components/schemas/objs_resources\"\n                          scopes:\n                            $ref: \"#/components/schemas/objs_scopes\"\n                        type: object\n                      mpim:\n                        properties:\n                          resources:\n                            $ref: \"#/components/schemas/objs_resources\"\n                          scopes:\n                            $ref: \"#/components/schemas/objs_scopes\"\n                        type: object\n                      team:\n                        properties:\n                          resources:\n                            $ref: \"#/components/schemas/objs_resources\"\n                          scopes:\n                            $ref: \"#/components/schemas/objs_scopes\"\n                        required:\n                          - scopes\n                          - resources\n                        type: object\n                    required:\n                      - team\n                      - channel\n                      - group\n                      - mpim\n                      - im\n                      - app_home\n                    type: object\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - info\n                title: apps.permissions.info schema\n                type: object\n          description: Standard success response when used with a user token\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from apps.permissions.info method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: apps.permissions.info error schema\n                type: object\n          description: Standard failure response when used with an invalid token\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps.permissions\n        - apps\n  /apps.permissions.request:\n    get:\n      description: Allows an app to request additional scopes\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/apps.permissions.request\n      operationId: apps_permissions_request\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: A comma separated list of scopes to request for\n          in: query\n          name: scopes\n          required: true\n          schema:\n            type: string\n        - description: Token used to trigger the permissions API\n          in: query\n          name: trigger_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from apps.permissions.request method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: apps.permissions.request schema\n                type: object\n          description: Standard success response when used with a user token\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_trigger_id\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from apps.permissions.request method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - invalid_trigger\n                      - trigger_exchanged\n                      - invalid_scope\n                      - invalid_user\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: apps.permissions.request error schema\n                type: object\n          description: Standard failure response when trigger_id is invalid\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps.permissions\n        - apps\n  /apps.permissions.resources.list:\n    get:\n      description: Returns list of resource grants this app has on a team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/apps.permissions.resources.list\n      operationId: apps_permissions_resources_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The maximum number of items to return.\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    resources:\n                      - id: T0DES3UAN\n                        type: team\n                      - id: D024BFF1M\n                        type: app_home\n                      - id: C024BE91L\n                        type: channel\n                    response_metadata:\n                      next_cursor: dGVhbTpDMUg5UkVTR0w=\n              schema:\n                additionalProperties: true\n                description: Schema for successful response apps.permissions.resources.list method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  resources:\n                    items:\n                      properties:\n                        id:\n                          title: An ID for a resource\n                          type: string\n                          x-examples:\n                            - T0DES3UAN\n                            - C0ABC1ABC\n                        type:\n                          title: The type of resource the `id` corresponds to\n                          type: string\n                          x-examples:\n                            - team\n                            - channel\n                            - mpim\n                      type: object\n                    type: array\n                  response_metadata:\n                    additionalProperties: false\n                    properties:\n                      next_cursor:\n                        type: string\n                        x-examples:\n                          - dGVhbTpDMUg5UkVTR0w=\n                    required:\n                      - next_cursor\n                    type: object\n                required:\n                  - ok\n                  - resources\n                title: apps.permissions.resources.list success schema\n                type: object\n          description: Typical successful paginated response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_cursor\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from apps.permissions.resources.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - invalid_cursor\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: apps.permissions.resources.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps.permissions.resources\n        - apps\n  /apps.permissions.scopes.list:\n    get:\n      description: Returns list of scopes this app has on a team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/apps.permissions.scopes.list\n      operationId: apps_permissions_scopes_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    scopes:\n                      app_home:\n                        - chat:write\n                        - im:history\n                        - im:read\n                      channel:\n                        - channels:history\n                        - chat:write\n                      group:\n                        - chat:write\n                      im:\n                        - chat:write\n                      mpim:\n                        - chat:write\n                      team:\n                        - users:read\n                      user: []\n              schema:\n                additionalProperties: true\n                description: Schema for successful response api.permissions.scopes.list method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  scopes:\n                    additionalProperties: true\n                    properties:\n                      app_home:\n                        $ref: \"#/components/schemas/objs_scopes\"\n                      channel:\n                        $ref: \"#/components/schemas/objs_scopes\"\n                      group:\n                        $ref: \"#/components/schemas/objs_scopes\"\n                      im:\n                        $ref: \"#/components/schemas/objs_scopes\"\n                      mpim:\n                        $ref: \"#/components/schemas/objs_scopes\"\n                      team:\n                        $ref: \"#/components/schemas/objs_scopes\"\n                      user:\n                        $ref: \"#/components/schemas/objs_scopes\"\n                    type: object\n                required:\n                  - ok\n                  - scopes\n                title: api.permissions.scopes.list success schema\n                type: object\n          description: Typical successful paginated response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from apps.permissions.scopes.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: apps.permissions.scopes.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps.permissions.scopes\n        - apps\n  /apps.permissions.users.list:\n    get:\n      description: Returns list of user grants and corresponding scopes this app has on a team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/apps.permissions.users.list\n      operationId: apps_permissions_users_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The maximum number of items to return.\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    resources:\n                      - id: U0DES3UAN\n                        scopes:\n                          - dnd:write:user\n                          - reminders:write:user\n                      - id: U024BFF1M\n                        scopes:\n                          - reminders:write:user\n                    response_metadata:\n                      next_cursor: dGVhbTdPMUg5UkFTT0w=\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical successful paginated response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_cursor\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps.permissions.users\n        - apps\n  /apps.permissions.users.request:\n    get:\n      description: Enables an app to trigger a permissions modal to grant an app access to a user access scope.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/apps.permissions.users.request\n      operationId: apps_permissions_users_request\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: A comma separated list of user scopes to request for\n          in: query\n          name: scopes\n          required: true\n          schema:\n            type: string\n        - description: Token used to trigger the request\n          in: query\n          name: trigger_id\n          required: true\n          schema:\n            type: string\n        - description: The user this scope is being requested for\n          in: query\n          name: user\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Standard success response when used with a user token\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_trigger_id\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Standard failure response when trigger_id is invalid\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps.permissions.users\n        - apps\n  /apps.uninstall:\n    get:\n      description: Uninstalls your app from a workspace.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/apps.uninstall\n      operationId: apps_uninstall\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Issued when you created your application.\n          in: query\n          name: client_id\n          schema:\n            type: string\n        - description: Issued when you created your application.\n          in: query\n          name: client_secret\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from apps.uninstall method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: apps.uninstall schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from apps.uninstall method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - invalid_client_id\n                      - bad_client_secret\n                      - client_id_token_mismatch\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: apps.uninstall error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - apps\n  /auth.revoke:\n    get:\n      description: Revokes a token.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/auth.revoke\n      operationId: auth_revoke\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Setting this parameter to `1` triggers a _testing mode_ where the specified token will not actually be revoked.\n          in: query\n          name: test\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    revoked: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from auth.revoke method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  revoked:\n                    type: boolean\n                required:\n                  - ok\n                  - revoked\n                title: auth.revoke schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from auth.revoke method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: auth.revoke error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - auth\n  /auth.test:\n    get:\n      description: Checks authentication \u0026 identity.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/auth.test\n      operationId: auth_test\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    team: Subarachnoid Workspace\n                    team_id: T12345678\n                    url: https://subarachnoid.slack.com/\n                    user: grace\n                    user_id: W12345678\n              schema:\n                additionalProperties: false\n                description: Schema for successful response auth.test method\n                properties:\n                  bot_id:\n                    $ref: \"#/components/schemas/defs_bot_id\"\n                  is_enterprise_install:\n                    type: boolean\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  team:\n                    type: string\n                  team_id:\n                    $ref: \"#/components/schemas/defs_team\"\n                  url:\n                    type: string\n                  user:\n                    type: string\n                  user_id:\n                    $ref: \"#/components/schemas/defs_user_id\"\n                required:\n                  - ok\n                  - url\n                  - team\n                  - user\n                  - team_id\n                  - user_id\n                title: auth.test success schema\n                type: object\n          description: Standard success response when used with a user token\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response auth.test method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - token_revoked\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: auth.test error schema\n                type: object\n          description: Standard failure response when used with an invalid token\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - auth\n  /bots.info:\n    get:\n      description: Gets information about a bot user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/bots.info\n      operationId: bots_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `users:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Bot user to get info on\n          in: query\n          name: bot\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    bot:\n                      app_id: A161CLERW\n                      deleted: false\n                      icons:\n                        image_36: https://...\n                        image_48: https://...\n                        image_72: https://...\n                      id: B061F7JD2\n                      name: beforebot\n                      updated: 1449272004\n                      user_id: U012ABCDEF\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from bots.info method\n                properties:\n                  bot:\n                    additionalProperties: false\n                    properties:\n                      app_id:\n                        $ref: \"#/components/schemas/defs_app_id\"\n                      deleted:\n                        type: boolean\n                      icons:\n                        additionalProperties: false\n                        properties:\n                          image_36:\n                            format: uri\n                            type: string\n                          image_48:\n                            format: uri\n                            type: string\n                          image_72:\n                            format: uri\n                            type: string\n                        required:\n                          - image_36\n                          - image_48\n                          - image_72\n                        type: object\n                      id:\n                        $ref: \"#/components/schemas/defs_bot_id\"\n                      name:\n                        type: string\n                      updated:\n                        type: integer\n                      user_id:\n                        $ref: \"#/components/schemas/defs_user_id\"\n                    required:\n                      - id\n                      - deleted\n                      - name\n                      - updated\n                      - app_id\n                      - icons\n                    type: object\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - bot\n                title: bots.info schema\n                type: object\n          description: When successful, returns bot info by bot ID.\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: bot_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from bots.info method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - bot_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: bots.info error schema\n                type: object\n          description: When no bot can be found, it returns an error.\n      security:\n        - slackAuth:\n            - users:read\n      tags:\n        - bots\n  /calls.add:\n    post:\n      description: Registers a new Call.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/calls.add\n      operationId: calls_add\n      parameters:\n        - description: \"Authentication token. Requires scope: `calls:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                created_by:\n                  description: The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required.\n                  type: string\n                date_start:\n                  description: Call start time in UTC UNIX timestamp format\n                  type: integer\n                desktop_app_join_url:\n                  description: When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.\n                  type: string\n                external_display_id:\n                  description: An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object.\n                  type: string\n                external_unique_id:\n                  description: An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service.\n                  type: string\n                join_url:\n                  description: The URL required for a client to join the Call.\n                  type: string\n                title:\n                  description: The name of the Call.\n                  type: string\n                users:\n                  description: The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users).\n                  type: string\n              required:\n                - external_unique_id\n                - join_url\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - calls:write\n      tags:\n        - calls\n  /calls.end:\n    post:\n      description: Ends a Call.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/calls.end\n      operationId: calls_end\n      parameters:\n        - description: \"Authentication token. Requires scope: `calls:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                duration:\n                  description: Call duration in seconds\n                  type: integer\n                id:\n                  description: \"`id` returned when registering the call using the [`calls.add`](/methods/calls.add) method.\"\n                  type: string\n              required:\n                - id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - calls:write\n      tags:\n        - calls\n  /calls.info:\n    get:\n      description: Returns information about a Call.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/calls.info\n      operationId: calls_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `calls:read`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: \"`id` of the Call returned by the [`calls.add`](/methods/calls.add) method.\"\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - calls:read\n      tags:\n        - calls\n  /calls.participants.add:\n    post:\n      description: Registers new participants added to a Call.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/calls.participants.add\n      operationId: calls_participants_add\n      parameters:\n        - description: \"Authentication token. Requires scope: `calls:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                id:\n                  description: \"`id` returned by the [`calls.add`](/methods/calls.add) method.\"\n                  type: string\n                users:\n                  description: The list of users to add as participants in the Call. [Read more on how to specify users here](/apis/calls#users).\n                  type: string\n              required:\n                - id\n                - users\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - calls:write\n      tags:\n        - calls.participants\n        - calls\n  /calls.participants.remove:\n    post:\n      description: Registers participants removed from a Call.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/calls.participants.remove\n      operationId: calls_participants_remove\n      parameters:\n        - description: \"Authentication token. Requires scope: `calls:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                id:\n                  description: \"`id` returned by the [`calls.add`](/methods/calls.add) method.\"\n                  type: string\n                users:\n                  description: The list of users to remove as participants in the Call. [Read more on how to specify users here](/apis/calls#users).\n                  type: string\n              required:\n                - id\n                - users\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - calls:write\n      tags:\n        - calls.participants\n        - calls\n  /calls.update:\n    post:\n      description: Updates information about a Call.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/calls.update\n      operationId: calls_update\n      parameters:\n        - description: \"Authentication token. Requires scope: `calls:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                desktop_app_join_url:\n                  description: When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.\n                  type: string\n                id:\n                  description: \"`id` returned by the [`calls.add`](/methods/calls.add) method.\"\n                  type: string\n                join_url:\n                  description: The URL required for a client to join the Call.\n                  type: string\n                title:\n                  description: The name of the Call.\n                  type: string\n              required:\n                - id\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - calls:write\n      tags:\n        - calls\n  /chat.delete:\n    post:\n      description: Deletes a message.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.delete\n      operationId: chat_delete\n      parameters:\n        - description: \"Authentication token. Requires scope: `chat:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                as_user:\n                  description: Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.\n                  type: boolean\n                channel:\n                  description: Channel containing the message to be deleted.\n                  type: string\n                ts:\n                  description: Timestamp of the message to be deleted.\n                  type: number\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel: C024BE91L\n                    ok: true\n                    ts: \"1401383885.000061\"\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of chat.delete method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/defs_channel\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  ts:\n                    $ref: \"#/components/schemas/defs_ts\"\n                required:\n                  - ok\n                  - channel\n                  - ts\n                title: chat.delete success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: message_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from chat.delete method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - message_not_found\n                      - channel_not_found\n                      - cant_delete_message\n                      - compliance_exports_prevent_deletion\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.delete error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - chat:write:user\n            - chat:write:bot\n      tags:\n        - chat\n  /chat.deleteScheduledMessage:\n    post:\n      description: Deletes a pending scheduled message from the queue.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.deleteScheduledMessage\n      operationId: chat_deleteScheduledMessage\n      parameters:\n        - description: \"Authentication token. Requires scope: `chat:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                as_user:\n                  description: Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.\n                  type: boolean\n                channel:\n                  description: The channel the scheduled_message is posting to\n                  type: string\n                scheduled_message_id:\n                  description: \"`scheduled_message_id` returned from call to chat.scheduleMessage\"\n                  type: string\n              required:\n                - channel\n                - scheduled_message_id\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from chat.deleteScheduledMessage method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: chat.deleteScheduledMessage schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_scheduled_message_id\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from chat.deleteScheduledMessage method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - invalid_scheduled_message_id\n                      - channel_not_found\n                      - bad_token\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - ekm_access_denied\n                      - missing_scope\n                      - invalid_arguments\n                      - invalid_arg_name\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.deleteScheduledMessage error schema\n                type: object\n          description: Typical error response if no message is found\n      security:\n        - slackAuth:\n            - chat:write:user\n            - chat:write:bot\n      tags:\n        - chat\n  /chat.getPermalink:\n    get:\n      description: Retrieve a permalink URL for a specific extant message\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.getPermalink\n      operationId: chat_getPermalink\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The ID of the conversation or channel containing the message\n          in: query\n          name: channel\n          required: true\n          schema:\n            type: string\n        - description: A message's `ts` value, uniquely identifying it within a channel\n          in: query\n          name: message_ts\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel: C1H9RESGA\n                    ok: true\n                    permalink: https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008\n              schema:\n                additionalProperties: false\n                description: Schema for successful response chat.getPermalink\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/defs_channel\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  permalink:\n                    format: uri\n                    type: string\n                required:\n                  - ok\n                  - channel\n                  - permalink\n                title: chat.getPermalink success schema\n                type: object\n          description: Standard success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from chat.getPermalink method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - channel_not_found\n                      - message_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.getPermalink error schema\n                type: object\n          description: Error response when channel cannot be found\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - chat\n  /chat.meMessage:\n    post:\n      description: Share a me message into a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.meMessage\n      operationId: chat_meMessage\n      parameters:\n        - description: \"Authentication token. Requires scope: `chat:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name.\n                  type: string\n                text:\n                  description: Text of the message to send.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel: C024BE7LR\n                    ok: true\n                    ts: \"1417671948.000006\"\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from chat.meMessage method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/defs_channel\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  ts:\n                    $ref: \"#/components/schemas/defs_ts\"\n                required:\n                  - ok\n                title: chat.meMessage schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from chat.meMessage method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - channel_not_found\n                      - not_in_channel\n                      - is_archived\n                      - msg_too_long\n                      - no_text\n                      - rate_limited\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.meMessage error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - chat:write:user\n            - chat:write:bot\n      tags:\n        - chat\n  /chat.postEphemeral:\n    post:\n      description: Sends an ephemeral message to a user in a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.postEphemeral\n      operationId: chat_postEphemeral\n      parameters:\n        - description: \"Authentication token. Requires scope: `chat:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                as_user:\n                  description: Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false.\n                  type: boolean\n                attachments:\n                  description: A JSON-based array of structured attachments, presented as a URL-encoded string.\n                  type: string\n                blocks:\n                  description: A JSON-based array of structured blocks, presented as a URL-encoded string.\n                  type: string\n                channel:\n                  description: Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.\n                  type: string\n                icon_emoji:\n                  description: Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.\n                  type: string\n                icon_url:\n                  description: URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.\n                  type: string\n                link_names:\n                  description: Find and link channel names and usernames.\n                  type: boolean\n                parse:\n                  description: Change how messages are treated. Defaults to `none`. See [below](#formatting).\n                  type: string\n                text:\n                  description: How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.\n                  type: string\n                thread_ts:\n                  description: Provide another message's `ts` value to post this message in a thread. Avoid using a reply's `ts` value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread.\n                  type: string\n                user:\n                  description: \"`id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument.\"\n                  type: string\n                username:\n                  description: Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.\n                  type: string\n              required:\n                - channel\n                - user\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    message_ts: \"1502210682.580145\"\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from chat.postEphemeral method\n                properties:\n                  message_ts:\n                    $ref: \"#/components/schemas/defs_ts\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - message_ts\n                title: chat.postEphemeral success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: user_not_in_channel\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from chat.postEphemeral method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - channel_not_found\n                      - is_archived\n                      - msg_too_long\n                      - no_text\n                      - restricted_action\n                      - too_many_attachments\n                      - user_not_in_channel\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.postEphemeral error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - chat:write:user\n            - chat:write:bot\n      tags:\n        - chat\n  /chat.postMessage:\n    post:\n      description: Sends a message to a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.postMessage\n      operationId: chat_postMessage\n      parameters:\n        - description: \"Authentication token. Requires scope: `chat:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                as_user:\n                  description: Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below.\n                  type: string\n                attachments:\n                  description: A JSON-based array of structured attachments, presented as a URL-encoded string.\n                  type: string\n                blocks:\n                  description: A JSON-based array of structured blocks, presented as a URL-encoded string.\n                  type: string\n                channel:\n                  description: Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.\n                  type: string\n                icon_emoji:\n                  description: Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.\n                  type: string\n                icon_url:\n                  description: URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.\n                  type: string\n                link_names:\n                  description: Find and link channel names and usernames.\n                  type: boolean\n                mrkdwn:\n                  description: Disable Slack markup parsing by setting to `false`. Enabled by default.\n                  type: boolean\n                parse:\n                  description: Change how messages are treated. Defaults to `none`. See [below](#formatting).\n                  type: string\n                reply_broadcast:\n                  description: Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.\n                  type: boolean\n                text:\n                  description: How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.\n                  type: string\n                thread_ts:\n                  description: Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.\n                  type: string\n                unfurl_links:\n                  description: Pass true to enable unfurling of primarily text-based content.\n                  type: boolean\n                unfurl_media:\n                  description: Pass false to disable unfurling of media content.\n                  type: boolean\n                username:\n                  description: Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.\n                  type: string\n              required:\n                - channel\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel: C1H9RESGL\n                    message:\n                      attachments:\n                        - fallback: This is an attachment's fallback\n                          id: 1\n                          text: This is an attachment\n                      bot_id: B19LU7CSY\n                      subtype: bot_message\n                      text: Here's a message for you\n                      ts: \"1503435956.000247\"\n                      type: message\n                      username: ecto1\n                    ok: true\n                    ts: \"1503435956.000247\"\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of chat.postMessage method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/defs_channel\"\n                  message:\n                    $ref: \"#/components/schemas/objs_message\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  ts:\n                    $ref: \"#/components/schemas/defs_ts\"\n                required:\n                  - ok\n                  - channel\n                  - ts\n                  - message\n                title: chat.postMessage success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: too_many_attachments\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response chat.postMessage method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - channel_not_found\n                      - not_in_channel\n                      - is_archived\n                      - msg_too_long\n                      - no_text\n                      - too_many_attachments\n                      - rate_limited\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.postMessage error schema\n                type: object\n          description: Typical error response if too many attachments are included\n      security:\n        - slackAuth:\n            - chat:write:user\n            - chat:write:bot\n      tags:\n        - chat\n  /chat.scheduleMessage:\n    post:\n      description: Schedules a message to be sent to a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.scheduleMessage\n      operationId: chat_scheduleMessage\n      parameters:\n        - description: \"Authentication token. Requires scope: `chat:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                as_user:\n                  description: Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship).\n                  type: boolean\n                attachments:\n                  description: A JSON-based array of structured attachments, presented as a URL-encoded string.\n                  type: string\n                blocks:\n                  description: A JSON-based array of structured blocks, presented as a URL-encoded string.\n                  type: string\n                channel:\n                  description: Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.\n                  type: string\n                link_names:\n                  description: Find and link channel names and usernames.\n                  type: boolean\n                parse:\n                  description: Change how messages are treated. Defaults to `none`. See [chat.postMessage](chat.postMessage#formatting).\n                  type: string\n                post_at:\n                  description: Unix EPOCH timestamp of time in future to send the message.\n                  type: string\n                reply_broadcast:\n                  description: Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.\n                  type: boolean\n                text:\n                  description: How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.\n                  type: string\n                thread_ts:\n                  description: Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.\n                  type: number\n                unfurl_links:\n                  description: Pass true to enable unfurling of primarily text-based content.\n                  type: boolean\n                unfurl_media:\n                  description: Pass false to disable unfurling of media content.\n                  type: boolean\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel: C1H9RESGL\n                    message:\n                      attachments:\n                        - fallback: This is an attachment's fallback\n                          id: 1\n                          text: This is an attachment\n                      bot_id: B19LU7CSY\n                      subtype: bot_message\n                      text: Here's a message for you in the future\n                      type: delayed_message\n                      username: ecto1\n                    ok: true\n                    post_at: \"1562180400\"\n                    scheduled_message_id: Q1298393284\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of chat.scheduleMessage method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/defs_channel\"\n                  message:\n                    additionalProperties: false\n                    properties:\n                      bot_id:\n                        $ref: \"#/components/schemas/defs_bot_id\"\n                      bot_profile:\n                        $ref: \"#/components/schemas/objs_bot_profile\"\n                      team:\n                        $ref: \"#/components/schemas/defs_team\"\n                      text:\n                        type: string\n                      type:\n                        type: string\n                      user:\n                        $ref: \"#/components/schemas/defs_user_id\"\n                      username:\n                        type: string\n                    required:\n                      - type\n                      - text\n                      - bot_id\n                      - user\n                      - team\n                    type: object\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  post_at:\n                    pattern: ^\\d{10}$\n                    type: integer\n                  scheduled_message_id:\n                    pattern: ^[Q][A-Z0-9]{8,}$\n                    title: Scheduled Message ID\n                    type: string\n                required:\n                  - ok\n                  - channel\n                  - post_at\n                  - scheduled_message_id\n                  - message\n                title: chat.scheduleMessage success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: time_in_past\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response chat.scheduleMessage method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - invalid_time\n                      - time_in_past\n                      - time_too_far\n                      - channel_not_found\n                      - not_in_channel\n                      - is_archived\n                      - msg_too_long\n                      - no_text\n                      - restricted_action\n                      - restricted_action_read_only_channel\n                      - restricted_action_thread_only_channel\n                      - restricted_action_non_threadable_channel\n                      - too_many_attachments\n                      - rate_limited\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - ekm_access_denied\n                      - missing_scope\n                      - invalid_arguments\n                      - invalid_arg_name\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.scheduleMessage error schema\n                type: object\n          description: Typical error response if the `post_at` is invalid (ex. in the past or too far into the future)\n      security:\n        - slackAuth:\n            - chat:write:user\n            - chat:write:bot\n      tags:\n        - chat\n  /chat.scheduledMessages.list:\n    get:\n      description: Returns a list of scheduled messages.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.scheduledMessages.list\n      operationId: chat_scheduledMessages_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: header\n          name: token\n          schema:\n            type: string\n        - description: The channel of the scheduled messages\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: A UNIX timestamp of the latest value in the time range\n          in: query\n          name: latest\n          schema:\n            type: number\n        - description: A UNIX timestamp of the oldest value in the time range\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Maximum number of original entries to return.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: For pagination purposes, this is the `cursor` value returned from a previous call to `chat.scheduledmessages.list` indicating where you want to start this call from.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    response_metadata:\n                      next_cursor: \"\"\n                    scheduled_messages:\n                      - channel_id: C1H9RESGL\n                        date_created: 1551891734\n                        id: 1298393284\n                        post_at: 1551991428\n                        text: Here's a message for you in the future\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from chat.scheduledMessages.list method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  response_metadata:\n                    additionalProperties: false\n                    properties:\n                      next_cursor:\n                        type: string\n                    required:\n                      - next_cursor\n                    type: object\n                  scheduled_messages:\n                    items:\n                      additionalProperties: false\n                      properties:\n                        channel_id:\n                          $ref: \"#/components/schemas/defs_channel_id\"\n                        date_created:\n                          pattern: ^\\d{10}$\n                          type: integer\n                        id:\n                          pattern: ^[Q][A-Z0-9]{8,}$\n                          type: string\n                        post_at:\n                          pattern: ^\\d{10}$\n                          type: integer\n                        text:\n                          type: string\n                      required:\n                        - id\n                        - channel_id\n                        - post_at\n                        - date_created\n                      type: object\n                    type: array\n                required:\n                  - ok\n                  - scheduled_messages\n                  - response_metadata\n                title: chat.scheduledMessages.list schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_channel\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from chat.scheduledMessages.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - invalid_channel\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - ekm_access_denied\n                      - missing_scope\n                      - invalid_arguments\n                      - invalid_arg_name\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.scheduledMessages.list error schema\n                type: object\n          description: Typical error response if the channel passed is invalid\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - chat.scheduledMessages\n        - chat\n  /chat.unfurl:\n    post:\n      description: Provide custom unfurl behavior for user-posted URLs\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.unfurl\n      operationId: chat_unfurl\n      parameters:\n        - description: \"Authentication token. Requires scope: `links:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel ID of the message\n                  type: string\n                ts:\n                  description: Timestamp of the message to add unfurl behavior to.\n                  type: string\n                unfurls:\n                  description: URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl blocks or message attachments.\n                  type: string\n                user_auth_message:\n                  description: Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior\n                  type: string\n                user_auth_required:\n                  description: Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain\n                  type: boolean\n                user_auth_url:\n                  description: Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded.\n                  type: string\n              required:\n                - channel\n                - ts\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from chat.unfurl method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: chat.unfurl success schema\n                type: object\n          description: Typical, minimal success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: cannot_unfurl_url\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from chat.unfurl method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - cannot_unfurl_url\n                      - cannot_find_service\n                      - missing_unfurls\n                      - cannot_prompt\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.unfurl error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - links:write\n      tags:\n        - chat\n  /chat.update:\n    post:\n      description: Updates a message.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/chat.update\n      operationId: chat_update\n      parameters:\n        - description: \"Authentication token. Requires scope: `chat:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                as_user:\n                  description: Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users.\n                  type: string\n                attachments:\n                  description: A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field.\n                  type: string\n                blocks:\n                  description: A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field.\n                  type: string\n                channel:\n                  description: Channel containing the message to be updated.\n                  type: string\n                link_names:\n                  description: Find and link channel names and usernames. Defaults to `none`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `none`.\n                  type: string\n                parse:\n                  description: Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. Accepts either `none` or `full`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `client`.\n                  type: string\n                text:\n                  description: New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`.\n                  type: string\n                ts:\n                  description: Timestamp of the message to be updated.\n                  type: string\n              required:\n                - channel\n                - ts\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel: C024BE91L\n                    message:\n                      text: Updated text you carefully authored\n                      user: U34567890\n                    ok: true\n                    text: Updated text you carefully authored\n                    ts: \"1401383885.000061\"\n              schema:\n                additionalProperties: false\n                description: Schema for successful response of chat.update method\n                properties:\n                  channel:\n                    type: string\n                  message:\n                    properties:\n                      attachments:\n                        items:\n                          type: object\n                        type: array\n                      blocks:\n                        type: object\n                      text:\n                        type: string\n                    required:\n                      - text\n                    title: Message object\n                    type: object\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  text:\n                    type: string\n                  ts:\n                    type: string\n                required:\n                  - ok\n                  - channel\n                  - ts\n                  - text\n                  - message\n                title: chat.update success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: cant_update_message\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response chat.update method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - message_not_found\n                      - cant_update_message\n                      - channel_not_found\n                      - edit_window_closed\n                      - msg_too_long\n                      - too_many_attachments\n                      - rate_limited\n                      - no_text\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - request_timeout\n                      - invalid_json\n                      - json_not_object\n                      - upgrade_required\n                      - fatal_error\n                      - is_inactive\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: chat.update error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - chat:write:user\n            - chat:write:bot\n      tags:\n        - chat\n  /conversations.archive:\n    post:\n      description: Archives a conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.archive\n      operationId: conversations_archive\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: ID of conversation to archive\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response conversations.archive method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: conversations.archive success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.archive method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - not_supported\n                      - channel_not_found\n                      - already_archived\n                      - cant_archive_general\n                      - restricted_action\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.archive error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.close:\n    post:\n      description: Closes a direct message or multi-person direct message.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.close\n      operationId: conversations_close\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Conversation to close.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response conversations.close method\n                properties:\n                  already_closed:\n                    type: boolean\n                  no_op:\n                    type: boolean\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: conversations.close success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.close method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - channel_not_found\n                      - user_does_not_own_channel\n                      - missing_scope\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.close error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.create:\n    post:\n      description: Initiates a public or private channel-based conversation\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.create\n      operationId: conversations_create\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                is_private:\n                  description: Create a private channel instead of a public one\n                  type: boolean\n                name:\n                  description: Name of the public or private channel to create\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1504554479\n                      creator: U0123456\n                      id: C0EAQDV4Z\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: false\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_shared: false\n                      last_read: \"0000000000.000000\"\n                      latest: null\n                      name: endeavor\n                      name_normalized: endeavor\n                      pending_shared: []\n                      previous_names: []\n                      priority: 0\n                      purpose:\n                        creator: \"\"\n                        last_set: 0\n                        value: \"\"\n                      topic:\n                        creator: \"\"\n                        last_set: 0\n                        value: \"\"\n                      unlinked: 0\n                      unread_count: 0\n                      unread_count_display: 0\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response conversations.create method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/objs_conversation\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - channel\n                title: conversations.create success schema\n                type: object\n          description: If successful, the command returns a rather stark [conversation object](/types/conversation)\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: name_taken\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.create method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  detail:\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - name_taken\n                      - restricted_action\n                      - no_channel\n                      - invalid_name_required\n                      - invalid_name_punctuation\n                      - invalid_name_maxlength\n                      - invalid_name_specials\n                      - invalid_name\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.create error schema\n                type: object\n          description: Typical error response when name already in use\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.history:\n    get:\n      description: Fetches a conversation's history of messages and events.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.history\n      operationId: conversations_history\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:history`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Conversation ID to fetch history for.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: End of time range of messages to include in results.\n          in: query\n          name: latest\n          schema:\n            type: number\n        - description: Start of time range of messages to include in results.\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Include messages with latest or oldest timestamp in results only when either timestamp is specified.\n          in: query\n          name: inclusive\n          schema:\n            type: boolean\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    has_more: true\n                    messages:\n                      - text: I find you punny and would like to smell your nose letter\n                        ts: \"1512085950.000216\"\n                        type: message\n                        user: U012AB3CDE\n                      - text: What, you want to smell my shoes better?\n                        ts: \"1512104434.000490\"\n                        type: message\n                        user: U061F7AUR\n                    ok: true\n                    pin_count: 0\n                    response_metadata:\n                      next_cursor: bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.history method\n                properties:\n                  channel_actions_count:\n                    type: integer\n                  channel_actions_ts:\n                    items:\n                      anyOf:\n                        - type: integer\n                        - nullable: true\n                  has_more:\n                    type: boolean\n                  messages:\n                    items:\n                      $ref: \"#/components/schemas/objs_message\"\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  pin_count:\n                    type: integer\n                required:\n                  - ok\n                  - messages\n                  - has_more\n                  - pin_count\n                  - channel_actions_ts\n                  - channel_actions_count\n                title: conversations.history success schema\n                type: object\n          description: Typical success response containing a channel's messages\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.history method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - missing_scope\n                      - channel_not_found\n                      - invalid_ts_latest\n                      - invalid_ts_oldest\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.history error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:history\n            - groups:history\n            - im:history\n            - mpim:history\n      tags:\n        - conversations\n  /conversations.info:\n    get:\n      description: Retrieve information about a conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.info\n      operationId: conversations_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Conversation ID to learn more about\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: Set this to `true` to receive the locale for this conversation. Defaults to `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n        - description: Set to `true` to include the member count for the specified conversation. Defaults to `false`\n          in: query\n          name: include_num_members\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1449252889\n                      creator: W012A3BCD\n                      id: C012AB3CD\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: true\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_read_only: false\n                      is_shared: false\n                      last_read: \"1502126650.228446\"\n                      locale: en-US\n                      name: general\n                      name_normalized: general\n                      parent_conversation: null\n                      pending_shared: []\n                      previous_names:\n                        - specifics\n                        - abstractions\n                        - etc\n                      purpose:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: This part of the workspace is for fun. Make fun here.\n                      topic:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: For public discussion of generalities\n                      unlinked: 0\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response conversations.info\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/objs_conversation\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - channel\n                title: conversations.info success schema\n                type: object\n          description: Typical success response for a public channel. (Also, a response from a private channel and a multi-party IM is very similar to this example.)\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.info method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - missing_scope\n                      - channel_not_found\n                      - team_added_to_org\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.info error schema\n                type: object\n          description: Typical error response when a channel cannot be found\n      security:\n        - slackAuth:\n            - channels:read\n            - groups:read\n            - im:read\n            - mpim:read\n      tags:\n        - conversations\n  /conversations.invite:\n    post:\n      description: Invites users to a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.invite\n      operationId: conversations_invite\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: The ID of the public or private channel to invite user(s) to.\n                  type: string\n                users:\n                  description: A comma separated list of user IDs. Up to 1000 users may be listed.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1449252889\n                      creator: W012A3BCD\n                      id: C012AB3CD\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: true\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_read_only: false\n                      is_shared: false\n                      last_read: \"1502126650.228446\"\n                      locale: en-US\n                      name: general\n                      name_normalized: general\n                      num_members: 23\n                      pending_shared: []\n                      previous_names:\n                        - specifics\n                        - abstractions\n                        - etc\n                      purpose:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: This part of the workspace is for fun. Make fun here.\n                      topic:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: For public discussion of generalities\n                      unlinked: 0\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.invite method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/objs_conversation\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - channel\n                title: conversations.invite error schema\n                type: object\n          description: Typical success response when an invitation is extended\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: method_not_supported_for_channel_type\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.invite method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - user_not_found\n                      - no_user\n                      - cant_invite_self\n                      - not_in_channel\n                      - already_in_channel\n                      - is_archived\n                      - cant_invite\n                      - too_many_users\n                      - ura_max_channels\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  errors:\n                    items:\n                      additionalProperties: false\n                      properties:\n                        error:\n                          enum:\n                            - method_not_supported_for_channel_type\n                            - missing_scope\n                            - channel_not_found\n                            - user_not_found\n                            - no_user\n                            - cant_invite_self\n                            - not_in_channel\n                            - already_in_channel\n                            - is_archived\n                            - cant_invite\n                            - too_many_users\n                            - ura_max_channels\n                            - not_authed\n                            - invalid_auth\n                            - account_inactive\n                            - user_is_bot\n                            - user_is_restricted\n                            - user_is_ultra_restricted\n                            - invalid_arg_name\n                            - invalid_array_arg\n                            - invalid_charset\n                            - invalid_form_data\n                            - invalid_post_type\n                            - missing_post_type\n                            - invalid_json\n                            - json_not_object\n                            - request_timeout\n                            - upgrade_required\n                            - team_added_to_org\n                            - missing_charset\n                            - superfluous_charset\n                          type: string\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_false\"\n                        user:\n                          $ref: \"#/components/schemas/defs_user_id\"\n                      required:\n                        - ok\n                        - error\n                      type: object\n                    minItems: 1\n                    title: errors is returned when an error associates an user\n                    type: array\n                    uniqueItems: true\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                title: conversations.invite error schema\n                type: object\n          description: Typical error response when an invite is attempted on a conversation type that does not support it\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.join:\n    post:\n      description: Joins an existing conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.join\n      operationId: conversations_join\n      parameters:\n        - description: \"Authentication token. Requires scope: `channels:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: ID of conversation to join\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1449252889\n                      creator: U061F7AUR\n                      id: C061EG9SL\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: true\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_shared: false\n                      name: general\n                      name_normalized: general\n                      pending_shared: []\n                      previous_names: []\n                      purpose:\n                        creator: \"\"\n                        last_set: 0\n                        value: For widget discussion\n                      topic:\n                        creator: \"\"\n                        last_set: 0\n                        value: Which widget do you worry about?\n                      unlinked: 0\n                    ok: true\n                    response_metadata:\n                      warnings:\n                        - already_in_channel\n                    warning: already_in_channel\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.join method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/objs_conversation\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  response_metadata:\n                    properties:\n                      warnings:\n                        items:\n                          type: string\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                    title: Response metadata\n                    type: object\n                  warning:\n                    type: string\n                required:\n                  - ok\n                  - channel\n                title: conversations.join success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: is_archived\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.join method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - is_archived\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.join error schema\n                type: object\n          description: Typical error response if the conversation is archived and cannot be joined\n      security:\n        - slackAuth:\n            - channels:write\n      tags:\n        - conversations\n  /conversations.kick:\n    post:\n      description: Removes a user from a conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.kick\n      operationId: conversations_kick\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: ID of conversation to remove user from.\n                  type: string\n                user:\n                  description: User ID to be removed.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response conversations.kick method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: conversations.kick success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: cant_kick_self\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response conversations.kick method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - user_not_found\n                      - cant_kick_self\n                      - not_in_channel\n                      - cant_kick_from_general\n                      - restricted_action\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.kick error schema\n                type: object\n          description: Typical error response when you attempt to kick yourself from a channel\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.leave:\n    post:\n      description: Leaves a conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.leave\n      operationId: conversations_leave\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Conversation to leave\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.leave method\n                properties:\n                  not_in_channel:\n                    enum:\n                      - true\n                    type: boolean\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: conversations.leave success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: cant_leave_general\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.leave method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - last_member\n                      - missing_scope\n                      - channel_not_found\n                      - is_archived\n                      - cant_leave_general\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.leave error schema\n                type: object\n          description: Typical error response when attempting to leave a workspace's \"general\" channel\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.list:\n    get:\n      description: Lists all channels in a Slack team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.list\n      operationId: conversations_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Set to `true` to exclude archived channels from the list\n          in: query\n          name: exclude_archived\n          schema:\n            type: boolean\n        - description: Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`\n          in: query\n          name: types\n          schema:\n            type: string\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channels:\n                      - created: 1449252889\n                        creator: U012A3CDE\n                        id: C012AB3CD\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: true\n                        is_group: false\n                        is_im: false\n                        is_member: true\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: general\n                        name_normalized: general\n                        num_members: 4\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: \"\"\n                          last_set: 0\n                          value: This channel is for team-wide communication and announcements. All team members are in this channel.\n                        topic:\n                          creator: \"\"\n                          last_set: 0\n                          value: Company-wide announcements and work-based matters\n                        unlinked: 0\n                      - created: 1449252889\n                        creator: U061F7AUR\n                        id: C061EG9T2\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: false\n                        is_group: false\n                        is_im: false\n                        is_member: true\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: random\n                        name_normalized: random\n                        num_members: 4\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: \"\"\n                          last_set: 0\n                          value: A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\n                        topic:\n                          creator: \"\"\n                          last_set: 0\n                          value: Non-work banter and water cooler conversation\n                        unlinked: 0\n                    ok: true\n                    response_metadata:\n                      next_cursor: dGVhbTpDMDYxRkE1UEI=\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.list method\n                properties:\n                  channels:\n                    items:\n                      $ref: \"#/components/schemas/objs_conversation\"\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  response_metadata:\n                    additionalProperties: false\n                    properties:\n                      next_cursor:\n                        type: string\n                    required:\n                      - next_cursor\n                    type: object\n                required:\n                  - ok\n                  - channels\n                title: conversations.list success schema\n                type: object\n          description: Typical success response with only public channels\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - missing_scope\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:read\n            - groups:read\n            - im:read\n            - mpim:read\n      tags:\n        - conversations\n  /conversations.mark:\n    post:\n      description: Sets the read cursor in a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.mark\n      operationId: conversations_mark\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel or conversation to set the read cursor for.\n                  type: string\n                ts:\n                  description: Unique identifier of message you want marked as most recently seen in this conversation.\n                  type: number\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response conversations.mark method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: conversations.mark success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.mark method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - invalid_timestamp\n                      - not_in_channel\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - not_allowed_token_type\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.mark error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.members:\n    get:\n      description: Retrieve members of a conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.members\n      operationId: conversations_members\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: ID of the conversation to retrieve members for\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    members:\n                      - U023BECGF\n                      - U061F7AUR\n                      - W012A3CDE\n                    ok: true\n                    response_metadata:\n                      next_cursor: e3VzZXJfaWQ6IFcxMjM0NTY3fQ==\n              schema:\n                additionalProperties: false\n                description: Schema for successful response conversations.members method\n                properties:\n                  members:\n                    items:\n                      $ref: \"#/components/schemas/defs_user_id\"\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  response_metadata:\n                    additionalProperties: false\n                    properties:\n                      next_cursor:\n                        type: string\n                    required:\n                      - next_cursor\n                    type: object\n                required:\n                  - ok\n                  - members\n                  - response_metadata\n                title: conversations.members success schema\n                type: object\n          description: Typical paginated success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_cursor\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response conversations.members method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - channel_not_found\n                      - invalid_limit\n                      - invalid_cursor\n                      - fetch_members_failed\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: conversations.members error schema\n                type: object\n          description: Typical error response when an invalid cursor is provided\n      security:\n        - slackAuth:\n            - channels:read\n            - groups:read\n            - im:read\n            - mpim:read\n      tags:\n        - conversations\n  /conversations.open:\n    post:\n      description: Opens or resumes a direct message or multi-person direct message.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.open\n      operationId: conversations_open\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead.\n                  type: string\n                return_im:\n                  description: Boolean, indicates you want the full IM channel definition in the response.\n                  type: boolean\n                users:\n                  description: Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel:\n                      id: D069C7QFK\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.open method when opening channels, ims, mpims\n                properties:\n                  already_open:\n                    type: boolean\n                  channel:\n                    items:\n                      anyOf:\n                        - $ref: \"#/components/schemas/objs_conversation\"\n                        - additionalProperties: false\n                          properties:\n                            created:\n                              type: string\n                            id:\n                              $ref: \"#/components/schemas/defs_dm_id\"\n                            is_im:\n                              type: boolean\n                            is_open:\n                              type: boolean\n                            last_read:\n                              $ref: \"#/components/schemas/defs_ts\"\n                            latest:\n                              $ref: \"#/components/schemas/objs_message\"\n                            unread_count:\n                              type: number\n                            unread_count_display:\n                              type: number\n                            user:\n                              $ref: \"#/components/schemas/defs_user_id\"\n                          required:\n                            - id\n                          type: object\n                  no_op:\n                    type: boolean\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - channel\n                title: conversations.open success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.open method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - user_not_found\n                      - user_not_visible\n                      - user_disabled\n                      - users_list_not_supplied\n                      - not_enough_users\n                      - too_many_users\n                      - invalid_user_combination\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - channel_not_found\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: conversations.open error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.rename:\n    post:\n      description: Renames a conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.rename\n      operationId: conversations_rename\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: ID of conversation to rename\n                  type: string\n                name:\n                  description: New name for conversation.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channel:\n                      created: 1449252889\n                      creator: W012A3BCD\n                      id: C012AB3CD\n                      is_archived: false\n                      is_channel: true\n                      is_ext_shared: false\n                      is_general: true\n                      is_group: false\n                      is_im: false\n                      is_member: true\n                      is_mpim: false\n                      is_org_shared: false\n                      is_pending_ext_shared: false\n                      is_private: false\n                      is_read_only: false\n                      is_shared: false\n                      last_read: \"1502126650.228446\"\n                      locale: en-US\n                      name: general\n                      name_normalized: general\n                      num_members: 23\n                      pending_shared: []\n                      previous_names:\n                        - specifics\n                        - abstractions\n                        - etc\n                      purpose:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: This part of the workspace is for fun. Make fun here.\n                      topic:\n                        creator: W012A3BCD\n                        last_set: 1449709364\n                        value: For public discussion of generalities\n                      unlinked: 0\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.rename method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/objs_conversation\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - channel\n                title: conversations.rename success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: not_in_channel\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.rename method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - user_is_restricted\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - not_in_channel\n                      - not_authorized\n                      - invalid_name\n                      - name_taken\n                      - invalid_name_required\n                      - invalid_name_punctuation\n                      - invalid_name_maxlength\n                      - invalid_name_specials\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.rename error schema\n                type: object\n          description: Typical error response when the calling user is not a member of the conversation\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.replies:\n    get:\n      description: Retrieve a thread of messages posted to a conversation\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.replies\n      operationId: conversations_replies\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:history`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Conversation ID to fetch thread from.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: Unique identifier of a thread's parent message. `ts` must be the timestamp of an existing message with 0 or more replies. If there are no replies then just the single message referenced by `ts` will return - it is just an ordinary, unthreaded message.\n          in: query\n          name: ts\n          schema:\n            type: number\n        - description: End of time range of messages to include in results.\n          in: query\n          name: latest\n          schema:\n            type: number\n        - description: Start of time range of messages to include in results.\n          in: query\n          name: oldest\n          schema:\n            type: number\n        - description: Include messages with latest or oldest timestamp in results only when either timestamp is specified.\n          in: query\n          name: inclusive\n          schema:\n            type: boolean\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    has_more: true\n                    messages:\n                      - last_read: \"1484678597.521003\"\n                        reply_count: 3\n                        subscribed: true\n                        text: island\n                        thread_ts: \"1482960137.003543\"\n                        ts: \"1482960137.003543\"\n                        type: message\n                        unread_count: 0\n                        user: U061F7AUR\n                      - parent_user_id: U061F7AUR\n                        text: one island\n                        thread_ts: \"1482960137.003543\"\n                        ts: \"1483037603.017503\"\n                        type: message\n                        user: U061F7AUR\n                      - parent_user_id: U061F7AUR\n                        text: two island\n                        thread_ts: \"1482960137.003543\"\n                        ts: \"1483051909.018632\"\n                        type: message\n                        user: U061F7AUR\n                      - parent_user_id: U061F7AUR\n                        text: three for the land\n                        thread_ts: \"1482960137.003543\"\n                        ts: \"1483125339.020269\"\n                        type: message\n                        user: U061F7AUR\n                    ok: true\n                    response_metadata:\n                      next_cursor: bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.replies method\n                properties:\n                  has_more:\n                    type: boolean\n                  messages:\n                    items:\n                      items:\n                        anyOf:\n                          - additionalProperties: false\n                            properties:\n                              last_read:\n                                $ref: \"#/components/schemas/defs_ts\"\n                              latest_reply:\n                                $ref: \"#/components/schemas/defs_ts\"\n                              reply_count:\n                                type: integer\n                              reply_users:\n                                items:\n                                  $ref: \"#/components/schemas/defs_user_id\"\n                                type: array\n                                uniqueItems: true\n                              reply_users_count:\n                                type: integer\n                              source_team:\n                                $ref: \"#/components/schemas/defs_team\"\n                              subscribed:\n                                type: boolean\n                              team:\n                                $ref: \"#/components/schemas/defs_team\"\n                              text:\n                                type: string\n                              thread_ts:\n                                $ref: \"#/components/schemas/defs_ts\"\n                              ts:\n                                $ref: \"#/components/schemas/defs_ts\"\n                              type:\n                                type: string\n                              unread_count:\n                                type: integer\n                              user:\n                                $ref: \"#/components/schemas/defs_user_id\"\n                              user_profile:\n                                $ref: \"#/components/schemas/objs_user_profile_short\"\n                              user_team:\n                                $ref: \"#/components/schemas/defs_team\"\n                            required:\n                              - type\n                              - user\n                              - text\n                              - thread_ts\n                              - reply_count\n                              - subscribed\n                              - ts\n                            type: object\n                          - additionalProperties: false\n                            properties:\n                              is_starred:\n                                type: boolean\n                              parent_user_id:\n                                $ref: \"#/components/schemas/defs_user_id\"\n                              source_team:\n                                $ref: \"#/components/schemas/defs_team\"\n                              team:\n                                $ref: \"#/components/schemas/defs_team\"\n                              text:\n                                type: string\n                              thread_ts:\n                                $ref: \"#/components/schemas/defs_ts\"\n                              ts:\n                                $ref: \"#/components/schemas/defs_ts\"\n                              type:\n                                type: string\n                              user:\n                                $ref: \"#/components/schemas/defs_user_id\"\n                              user_profile:\n                                $ref: \"#/components/schemas/objs_user_profile_short\"\n                              user_team:\n                                $ref: \"#/components/schemas/defs_team\"\n                            required:\n                              - type\n                              - user\n                              - text\n                              - thread_ts\n                              - parent_user_id\n                              - ts\n                            type: object\n                    type: array\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - messages\n                title: conversations.replies success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: thread_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.replies method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - missing_scope\n                      - channel_not_found\n                      - thread_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.replies error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:history\n            - groups:history\n            - im:history\n            - mpim:history\n      tags:\n        - conversations\n  /conversations.setPurpose:\n    post:\n      description: Sets the purpose for a conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.setPurpose\n      operationId: conversations_setPurpose\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Conversation to set the purpose of\n                  type: string\n                purpose:\n                  description: A new, specialer purpose\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.setPurpose method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/objs_conversation\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - channel\n                title: conversations.setPurpose success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.setPurpose method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - not_in_channel\n                      - is_archived\n                      - too_long\n                      - user_is_restricted\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.setPurpose error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.setTopic:\n    post:\n      description: Sets the topic for a conversation.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.setTopic\n      operationId: conversations_setTopic\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Conversation to set the topic of\n                  type: string\n                topic:\n                  description: The new topic string. Does not support formatting or linkification.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.setTopic method\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/objs_conversation\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - channel\n                title: conversations.setTopic success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.setTopic method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - not_in_channel\n                      - is_archived\n                      - too_long\n                      - user_is_restricted\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.setTopic error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /conversations.unarchive:\n    post:\n      description: Reverses conversation archival.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/conversations.unarchive\n      operationId: conversations_unarchive\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: ID of conversation to unarchive\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from conversations.unarchive method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: conversations.unarchive success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from conversations.unarchive method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - channel_not_found\n                      - not_archived\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - user_is_bot\n                      - user_is_restricted\n                      - user_is_ultra_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - team_added_to_org\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  needed:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  provided:\n                    type: string\n                required:\n                  - ok\n                  - error\n                title: conversations.unarchive error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:write\n            - groups:write\n            - im:write\n            - mpim:write\n      tags:\n        - conversations\n  /dialog.open:\n    get:\n      description: Open a dialog with a user\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/dialog.open\n      operationId: dialog_open\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: The dialog definition. This must be a JSON-encoded string.\n          in: query\n          name: dialog\n          required: true\n          schema:\n            type: string\n        - description: Exchange a trigger to post to the user.\n          in: query\n          name: trigger_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from dialog.open method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: dialog.open schema\n                type: object\n          description: Typical success response is quite minimal.\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: missing_trigger\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from dialog.open method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - validation_errors\n                      - missing_trigger\n                      - missing_dialog\n                      - trigger_exchanged\n                      - trigger_expired\n                      - invalid_trigger\n                      - app_missing_action_url\n                      - cannot_create_dialog\n                      - failed_sending_dialog\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: dialog.open error schema\n                type: object\n          description: Typical error response, before getting to any possible validation errors.\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - dialog\n  /dnd.endDnd:\n    post:\n      description: Ends the current user's Do Not Disturb session immediately.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/dnd.endDnd\n      operationId: dnd_endDnd\n      parameters:\n        - description: \"Authentication token. Requires scope: `dnd:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from dnd.endDnd method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: dnd.endDnd schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from dnd.endDnd method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - unknown_error\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: dnd.endDnd error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - dnd:write\n      tags:\n        - dnd\n  /dnd.endSnooze:\n    post:\n      description: Ends the current user's snooze mode immediately.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/dnd.endSnooze\n      operationId: dnd_endSnooze\n      parameters:\n        - description: \"Authentication token. Requires scope: `dnd:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from dnd.endSnooze method\n                properties:\n                  dnd_enabled:\n                    type: boolean\n                  next_dnd_end_ts:\n                    type: integer\n                  next_dnd_start_ts:\n                    type: integer\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  snooze_enabled:\n                    type: boolean\n                required:\n                  - ok\n                  - dnd_enabled\n                  - next_dnd_start_ts\n                  - next_dnd_end_ts\n                  - snooze_enabled\n                title: dnd.endSnooze schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from dnd.endSnooze method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - snooze_not_active\n                      - snooze_end_failed\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: dnd.endSnooze error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - dnd:write\n      tags:\n        - dnd\n  /dnd.info:\n    get:\n      description: Retrieves a user's current Do Not Disturb status.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/dnd.info\n      operationId: dnd_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `dnd:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: User to fetch status for (defaults to current user)\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from dnd.info method\n                properties:\n                  dnd_enabled:\n                    type: boolean\n                  next_dnd_end_ts:\n                    type: integer\n                  next_dnd_start_ts:\n                    type: integer\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  snooze_enabled:\n                    type: boolean\n                  snooze_endtime:\n                    type: integer\n                  snooze_remaining:\n                    type: integer\n                required:\n                  - ok\n                  - dnd_enabled\n                  - next_dnd_start_ts\n                  - next_dnd_end_ts\n                title: dnd.info schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from dnd.info method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - user_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: dnd.info error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - dnd:read\n      tags:\n        - dnd\n  /dnd.setSnooze:\n    post:\n      description: Turns on Do Not Disturb mode for the current user, or changes its duration.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/dnd.setSnooze\n      operationId: dnd_setSnooze\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                num_minutes:\n                  description: Number of minutes, from now, to snooze until.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `dnd:write`\"\n                  type: string\n              required:\n                - token\n                - num_minutes\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from dnd.setSnooze method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  snooze_enabled:\n                    type: boolean\n                  snooze_endtime:\n                    type: integer\n                  snooze_remaining:\n                    type: integer\n                required:\n                  - ok\n                  - snooze_enabled\n                  - snooze_endtime\n                  - snooze_remaining\n                title: dnd.setSnooze schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from dnd.setSnooze method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - missing_duration\n                      - snooze_failed\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - too_long\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: dnd.setSnooze error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - dnd:write\n      tags:\n        - dnd\n  /dnd.teamInfo:\n    get:\n      description: Retrieves the Do Not Disturb status for up to 50 users on a team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/dnd.teamInfo\n      operationId: dnd_teamInfo\n      parameters:\n        - description: \"Authentication token. Requires scope: `dnd:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Comma-separated list of users to fetch Do Not Disturb status for\n          in: query\n          name: users\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    users:\n                      U023BECGF:\n                        dnd_enabled: true\n                        next_dnd_end_ts: 1450423800\n                        next_dnd_start_ts: 1450387800\n                      W058CJVAA:\n                        dnd_enabled: false\n                        next_dnd_end_ts: 1\n                        next_dnd_start_ts: 1\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - dnd:read\n      tags:\n        - dnd\n  /emoji.list:\n    get:\n      description: Lists custom emoji for a team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/emoji.list\n      operationId: emoji_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `emoji:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - emoji:read\n      tags:\n        - emoji\n  /files.comments.delete:\n    post:\n      description: Deletes an existing comment on a file.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.comments.delete\n      operationId: files_comments_delete\n      parameters:\n        - description: \"Authentication token. Requires scope: `files:write:user`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                file:\n                  description: File to delete a comment from.\n                  type: string\n                id:\n                  description: The comment to delete.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response files.comments.delete method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: files.comments.delete schema\n                type: object\n          description: Standard success response is very simple\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: file_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response files.comments.delete method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - cant_delete\n                      - comment_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: files.comments.delete error schema\n                type: object\n          description: Standard failure response when used with an invalid token\n      security:\n        - slackAuth:\n            - files:write:user\n      tags:\n        - files.comments\n        - files\n  /files.delete:\n    post:\n      description: Deletes a file.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.delete\n      operationId: files_delete\n      parameters:\n        - description: \"Authentication token. Requires scope: `files:write:user`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                file:\n                  description: ID of file to delete.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response files.delete method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: files.delete schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response files.delete method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - file_not_found\n                      - file_deleted\n                      - cant_delete_file\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: files.delete error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - files:write:user\n      tags:\n        - files\n  /files.info:\n    get:\n      description: Gets information about a file.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.info\n      operationId: files_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `files:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Specify a file by providing its ID.\n          in: query\n          name: file\n          schema:\n            type: string\n        - in: query\n          name: count\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: \"Parameter for pagination. File comments are paginated for a single file. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \\\"page\\\" of the collection of comments. See [pagination](/docs/pagination) for more details.\"\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    comments: []\n                    file:\n                      channels:\n                        - C0T8SE4AU\n                      comments_count: 0\n                      created: 1531763342\n                      deanimate_gif: https://.../tedair_deanimate_gif.png\n                      display_as_bot: false\n                      editable: false\n                      external_type: \"\"\n                      filetype: gif\n                      groups: []\n                      has_rich_preview: false\n                      id: F0S43PZDF\n                      image_exif_rotation: 1\n                      ims: []\n                      is_external: false\n                      is_public: true\n                      is_starred: false\n                      mimetype: image/gif\n                      mode: hosted\n                      name: tedair.gif\n                      original_h: 226\n                      original_w: 176\n                      permalink: https://.../tedair.gif\n                      permalink_public: https://.../...\n                      pjpeg: https://.../tedair_pjpeg.jpg\n                      pretty_type: GIF\n                      public_url_shared: false\n                      shares:\n                        public:\n                          C0T8SE4AU:\n                            - channel_name: file-under\n                              latest_reply: \"1531763348.000001\"\n                              reply_count: 1\n                              reply_users:\n                                - U061F7AUR\n                              reply_users_count: 1\n                              team_id: T061EG9R6\n                              thread_ts: \"1531763273.000015\"\n                              ts: \"1531763348.000001\"\n                      size: 137531\n                      thumb_160: https://.../tedair_=_160.png\n                      thumb_360: https://.../tedair_360.png\n                      thumb_360_gif: https://.../tedair_360.gif\n                      thumb_360_h: 226\n                      thumb_360_w: 176\n                      thumb_64: https://.../tedair_64.png\n                      thumb_80: https://.../tedair_80.png\n                      timestamp: 1531763342\n                      title: tedair.gif\n                      url_private: https://.../tedair.gif\n                      url_private_download: https://.../tedair.gif\n                      user: U061F7AUR\n                      username: \"\"\n                    ok: true\n                    response_metadata:\n                      next_cursor: dGVhbTpDMUg5UkVTR0w=\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from files.info method\n                properties:\n                  comments:\n                    $ref: \"#/components/schemas/objs_comments\"\n                  content_html:\n                    nullable: true\n                  editor:\n                    $ref: \"#/components/schemas/defs_user_id\"\n                  file:\n                    $ref: \"#/components/schemas/objs_file\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  paging:\n                    $ref: \"#/components/schemas/objs_paging\"\n                  response_metadata:\n                    $ref: \"#/components/schemas/objs_response_metadata\"\n                required:\n                  - ok\n                  - file\n                  - comments\n                title: files.info schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from files.info method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - file_not_found\n                      - file_deleted\n                      - timezone_count_failed\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: files.info error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - files:read\n      tags:\n        - files\n  /files.list:\n    get:\n      description: List for a team, in a channel, or from a user with applied filters.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.list\n      operationId: files_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `files:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Filter files created by a single user.\n          in: query\n          name: user\n          schema:\n            type: string\n        - description: Filter files appearing in a specific channel, indicated by its ID.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: Filter files created after this timestamp (inclusive).\n          in: query\n          name: ts_from\n          schema:\n            type: number\n        - description: Filter files created before this timestamp (inclusive).\n          in: query\n          name: ts_to\n          schema:\n            type: number\n        - description: Filter files by type ([see below](#file_types)). You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list.\n          in: query\n          name: types\n          schema:\n            type: string\n        - in: query\n          name: count\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n        - description: Show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit.\n          in: query\n          name: show_files_hidden_by_limit\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    files:\n                      - channels:\n                          - C0T8SE4AU\n                        comments_count: 0\n                        created: 1531763254\n                        deanimate_gif: https://.../billair_deanimate_gif.png\n                        display_as_bot: false\n                        editable: false\n                        external_type: \"\"\n                        filetype: gif\n                        groups: []\n                        id: F0S43P1CZ\n                        image_exif_rotation: 1\n                        ims: []\n                        is_external: false\n                        is_public: true\n                        mimetype: image/gif\n                        mode: hosted\n                        name: billair.gif\n                        original_h: 226\n                        original_w: 176\n                        permalink: https://.../billair.gif\n                        permalink_public: https://.../...\n                        pjpeg: https://.../billair_pjpeg.jpg\n                        pretty_type: GIF\n                        public_url_shared: false\n                        size: 144538\n                        thumb_160: https://.../billair_=_160.png\n                        thumb_360: https://.../billair_360.png\n                        thumb_360_gif: https://.../billair_360.gif\n                        thumb_360_h: 226\n                        thumb_360_w: 176\n                        thumb_64: https://.../billair_64.png\n                        thumb_80: https://.../billair_80.png\n                        timestamp: 1531763254\n                        title: billair.gif\n                        url_private: https://.../billair.gif\n                        url_private_download: https://.../billair.gif\n                        user: U061F7AUR\n                        username: \"\"\n                      - channels:\n                          - C0T8SE4AU\n                        comments_count: 0\n                        created: 1531763342\n                        deanimate_gif: https://.../tedair_deanimate_gif.png\n                        display_as_bot: false\n                        editable: false\n                        external_type: \"\"\n                        filetype: gif\n                        groups: []\n                        id: F0S43PZDF\n                        image_exif_rotation: 1\n                        ims: []\n                        is_external: false\n                        is_public: true\n                        mimetype: image/gif\n                        mode: hosted\n                        name: tedair.gif\n                        original_h: 226\n                        original_w: 176\n                        permalink: https://.../tedair.gif\n                        permalink_public: https://.../...\n                        pjpeg: https://.../tedair_pjpeg.jpg\n                        pretty_type: GIF\n                        public_url_shared: false\n                        size: 137531\n                        thumb_160: https://.../tedair_=_160.png\n                        thumb_360: https://.../tedair_360.png\n                        thumb_360_gif: https://.../tedair_360.gif\n                        thumb_360_h: 226\n                        thumb_360_w: 176\n                        thumb_64: https://.../tedair_64.png\n                        thumb_80: https://.../tedair_80.png\n                        timestamp: 1531763342\n                        title: tedair.gif\n                        url_private: https://.../tedair.gif\n                        url_private_download: https://.../tedair.gif\n                        user: U061F7AUR\n                        username: \"\"\n                    ok: true\n                    paging:\n                      count: 100\n                      page: 1\n                      pages: 1\n                      total: 2\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from files.list method\n                properties:\n                  files:\n                    items:\n                      $ref: \"#/components/schemas/objs_file\"\n                    minItems: 0\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  paging:\n                    $ref: \"#/components/schemas/objs_paging\"\n                required:\n                  - ok\n                  - files\n                  - paging\n                title: files.list schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from files.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - user_not_found\n                      - unknown_type\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: files.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - files:read\n      tags:\n        - files\n  /files.remote.add:\n    post:\n      description: Adds a file from a remote service\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.remote.add\n      operationId: files_remote_add\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                external_id:\n                  description: Creator defined GUID for the file.\n                  type: string\n                external_url:\n                  description: URL of the remote file.\n                  type: string\n                filetype:\n                  description: type of file\n                  type: string\n                indexable_file_contents:\n                  description: A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file.\n                  type: string\n                preview_image:\n                  description: Preview of the document via `multipart/form-data`.\n                  type: string\n                title:\n                  description: Title of the file being shared.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `remote_files:write`\"\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - remote_files:write\n      tags:\n        - files.remote\n        - files\n  /files.remote.info:\n    get:\n      description: Retrieve information about a remote file added to Slack\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.remote.info\n      operationId: files_remote_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `remote_files:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Specify a file by providing its ID.\n          in: query\n          name: file\n          schema:\n            type: string\n        - description: Creator defined GUID for the file.\n          in: query\n          name: external_id\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - remote_files:read\n      tags:\n        - files.remote\n        - files\n  /files.remote.list:\n    get:\n      description: Retrieve information about a remote file added to Slack\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.remote.list\n      operationId: files_remote_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `remote_files:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Filter files appearing in a specific channel, indicated by its ID.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: Filter files created after this timestamp (inclusive).\n          in: query\n          name: ts_from\n          schema:\n            type: number\n        - description: Filter files created before this timestamp (inclusive).\n          in: query\n          name: ts_to\n          schema:\n            type: number\n        - description: The maximum number of items to return.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - remote_files:read\n      tags:\n        - files.remote\n        - files\n  /files.remote.remove:\n    post:\n      description: Remove a remote file.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.remote.remove\n      operationId: files_remote_remove\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                external_id:\n                  description: Creator defined GUID for the file.\n                  type: string\n                file:\n                  description: Specify a file by providing its ID.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `remote_files:write`\"\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - remote_files:write\n      tags:\n        - files.remote\n        - files\n  /files.remote.share:\n    get:\n      description: Share a remote file into a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.remote.share\n      operationId: files_remote_share\n      parameters:\n        - description: \"Authentication token. Requires scope: `remote_files:share`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Specify a file registered with Slack by providing its ID. Either this field or `external_id` or both are required.\n          in: query\n          name: file\n          schema:\n            type: string\n        - description: The globally unique identifier (GUID) for the file, as set by the app registering the file with Slack.  Either this field or `file` or both are required.\n          in: query\n          name: external_id\n          schema:\n            type: string\n        - description: Comma-separated list of channel IDs where the file will be shared.\n          in: query\n          name: channels\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - remote_files:share\n      tags:\n        - files.remote\n        - files\n  /files.remote.update:\n    post:\n      description: Updates an existing remote file.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.remote.update\n      operationId: files_remote_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                external_id:\n                  description: Creator defined GUID for the file.\n                  type: string\n                external_url:\n                  description: URL of the remote file.\n                  type: string\n                file:\n                  description: Specify a file by providing its ID.\n                  type: string\n                filetype:\n                  description: type of file\n                  type: string\n                indexable_file_contents:\n                  description: File containing contents that can be used to improve searchability for the remote file.\n                  type: string\n                preview_image:\n                  description: Preview of the document via `multipart/form-data`.\n                  type: string\n                title:\n                  description: Title of the file being shared.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `remote_files:write`\"\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - remote_files:write\n      tags:\n        - files.remote\n        - files\n  /files.revokePublicURL:\n    post:\n      description: Revokes public/external sharing access for a file\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.revokePublicURL\n      operationId: files_revokePublicURL\n      parameters:\n        - description: \"Authentication token. Requires scope: `files:write:user`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                file:\n                  description: File to revoke\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from files.revokePublicURL method\n                properties:\n                  file:\n                    $ref: \"#/components/schemas/objs_file\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - file\n                title: files.revokePublicURL schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from files.revokePublicURL method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - file_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: files.revokePublicURL error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - files:write:user\n      tags:\n        - files\n  /files.sharedPublicURL:\n    post:\n      description: Enables a file for public/external sharing.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.sharedPublicURL\n      operationId: files_sharedPublicURL\n      parameters:\n        - description: \"Authentication token. Requires scope: `files:write:user`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                file:\n                  description: File to share\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from files.sharedPublicURL method\n                properties:\n                  file:\n                    $ref: \"#/components/schemas/objs_file\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - file\n                title: files.sharedPublicURL schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from files.sharedPublicURL method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - file_not_found\n                      - not_allowed\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: files.sharedPublicURL error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - files:write:user\n      tags:\n        - files\n  /files.upload:\n    post:\n      description: Uploads or creates a file.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/files.upload\n      operationId: files_upload\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channels:\n                  description: Comma-separated list of channel names or IDs where the file will be shared.\n                  type: string\n                content:\n                  description: File contents via a POST variable. If omitting this parameter, you must provide a `file`.\n                  type: string\n                file:\n                  description: File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.\n                  type: string\n                filename:\n                  description: Filename of file.\n                  type: string\n                filetype:\n                  description: A [file type](/types/file#file_types) identifier.\n                  type: string\n                initial_comment:\n                  description: The message text introducing the file in specified `channels`.\n                  type: string\n                thread_ts:\n                  description: Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead.\n                  type: number\n                title:\n                  description: Title of file.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `files:write:user`\"\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    file:\n                      channels: []\n                      comments_count: 0\n                      created: 1532293501\n                      display_as_bot: false\n                      editable: false\n                      external_type: \"\"\n                      filetype: gif\n                      groups: []\n                      has_rich_preview: false\n                      id: F0TD00400\n                      image_exif_rotation: 1\n                      ims:\n                        - D0L4B9P0Q\n                      is_external: false\n                      is_public: false\n                      is_starred: false\n                      mimetype: image/jpeg\n                      mode: hosted\n                      name: dramacat.gif\n                      original_h: 366\n                      original_w: 526\n                      permalink: https://.../dramacat.gif\n                      permalink_public: https://.../More-Path-Components\n                      pretty_type: JPEG\n                      public_url_shared: false\n                      shares:\n                        private:\n                          D0L4B9P0Q:\n                            - reply_count: 0\n                              reply_users: []\n                              reply_users_count: 0\n                              ts: \"1532293503.000001\"\n                      size: 43518\n                      thumb_160: https://.../dramacat_160.gif\n                      thumb_360: https://.../dramacat_360.gif\n                      thumb_360_h: 250\n                      thumb_360_w: 360\n                      thumb_480: https://.../dramacat_480.gif\n                      thumb_480_h: 334\n                      thumb_480_w: 480\n                      thumb_64: https://.../dramacat_64.gif\n                      thumb_80: https://.../dramacat_80.gif\n                      timestamp: 1532293501\n                      title: dramacat\n                      url_private: https://.../dramacat.gif\n                      url_private_download: https://.../dramacat.gif\n                      user: U0L4B9NSU\n                      username: \"\"\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response files.upload method\n                properties:\n                  file:\n                    $ref: \"#/components/schemas/objs_file\"\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                  - file\n                title: files.upload schema\n                type: object\n          description: Success response after uploading a file to a channel with an initial message\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response files.upload method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - posting_to_general_channel_denied\n                      - invalid_channel\n                      - file_uploads_disabled\n                      - file_uploads_except_images_disabled\n                      - storage_limit_reached\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: files.upload error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - files:write:user\n      tags:\n        - files\n  /migration.exchange:\n    get:\n      description: For Enterprise Grid workspaces, map local user IDs to global user IDs\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/migration.exchange\n      operationId: migration_exchange\n      parameters:\n        - description: \"Authentication token. Requires scope: `tokens.basic`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of user ids, up to 400 per request\n          in: query\n          name: users\n          required: true\n          schema:\n            type: string\n        - description: Specify team_id starts with `T` in case of Org Token\n          in: query\n          name: team_id\n          schema:\n            type: string\n        - description: Specify `true` to convert `W` global user IDs to workspace-specific `U` IDs. Defaults to `false`.\n          in: query\n          name: to_old\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    enterprise_id: E1KQTNXE1\n                    invalid_user_ids:\n                      - U21ABZZXX\n                    ok: true\n                    team_id: T1KR7PE1W\n                    user_id_map:\n                      U06UBSUN5: W06M56XJM\n                      U06UBSVB3: W06PUUDLY\n                      U06UBSVDX: W06PUUDMW\n                      U06UEB62U: W06PTT6GH\n                      W06UAZ65Q: W06UAZ65Q\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from migration.exchange method\n                properties:\n                  enterprise_id:\n                    title: The enterprise grid organization ID containing the workspace/team.\n                    type: string\n                  invalid_user_ids:\n                    items:\n                      type: string\n                    title: A list of User IDs that cannot be mapped or found\n                    type: array\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  team_id:\n                    $ref: \"#/components/schemas/defs_team\"\n                  user_id_map:\n                    additionalProperties: true\n                    title: A mapping of provided user IDs with mapped user IDs\n                    type: object\n                required:\n                  - ok\n                  - team_id\n                  - enterprise_id\n                title: migration.exchange success schema\n                type: object\n          description: Typical success response when mappings exist for the specified user IDs\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: not_enterprise_team\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from migration.exchange method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_enterprise_team\n                      - too_many_users\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: migration.exchange error schema\n                type: object\n          description: Typical error response when there are no mappings to provide\n      security:\n        - slackAuth:\n            - tokens.basic\n      tags:\n        - migration\n  /oauth.access:\n    get:\n      description: Exchanges a temporary OAuth verifier code for an access token.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/oauth.access\n      operationId: oauth_access\n      parameters:\n        - description: Issued when you created your application.\n          in: query\n          name: client_id\n          schema:\n            type: string\n        - description: Issued when you created your application.\n          in: query\n          name: client_secret\n          schema:\n            type: string\n        - description: The `code` param returned via the OAuth callback.\n          in: query\n          name: code\n          schema:\n            type: string\n        - description: This must match the originally submitted URI (if one was sent).\n          in: query\n          name: redirect_uri\n          schema:\n            type: string\n        - description: Request the user to add your app only to a single channel. Only valid with a [legacy workspace app](https://api.slack.com/legacy-workspace-apps).\n          in: query\n          name: single_channel\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    access_token: xoxp-XXXXXXXX-XXXXXXXX-XXXXX\n                    enterprise_id: null\n                    scope: groups:write\n                    team_id: TXXXXXXXXX\n                    team_name: Wyld Stallyns LLC\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Successful user token negotiation for a single scope\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_client_id\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - oauth\n  /oauth.token:\n    get:\n      description: Exchanges a temporary OAuth verifier code for a workspace token.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/oauth.token\n      operationId: oauth_token\n      parameters:\n        - description: Issued when you created your application.\n          in: query\n          name: client_id\n          schema:\n            type: string\n        - description: Issued when you created your application.\n          in: query\n          name: client_secret\n          schema:\n            type: string\n        - description: The `code` param returned via the OAuth callback.\n          in: query\n          name: code\n          schema:\n            type: string\n        - description: This must match the originally submitted URI (if one was sent).\n          in: query\n          name: redirect_uri\n          schema:\n            type: string\n        - description: Request the user to add your app only to a single channel.\n          in: query\n          name: single_channel\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    access_token: xoxa-access-token-string\n                    app_id: A012345678\n                    app_user_id: U0AB12ABC\n                    authorizing_user_id: U0HTT3Q0G\n                    installer_user_id: U061F7AUR\n                    ok: true\n                    permissions:\n                      - resource_id: 0\n                        resource_type: channel\n                        scopes:\n                          - channels:read\n                          - chat:write:user\n                    single_channel_id: C061EG9T2\n                    team_id: T061EG9Z9\n                    team_name: Subarachnoid Workspace\n                    token_type: app\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Success example using a workspace app produces a very different kind of response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_client_id\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - oauth\n  /oauth.v2.access:\n    get:\n      description: Exchanges a temporary OAuth verifier code for an access token.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/oauth.v2.access\n      operationId: oauth_v2_access\n      parameters:\n        - description: Issued when you created your application.\n          in: query\n          name: client_id\n          schema:\n            type: string\n        - description: Issued when you created your application.\n          in: query\n          name: client_secret\n          schema:\n            type: string\n        - description: The `code` param returned via the OAuth callback.\n          in: query\n          name: code\n          required: true\n          schema:\n            type: string\n        - description: This must match the originally submitted URI (if one was sent).\n          in: query\n          name: redirect_uri\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    access_token: xoxb-17653672481-19874698323-pdFZKVeTuE8sk7oOcBrzbqgy\n                    app_id: A0KRD7HC3\n                    authed_user:\n                      access_token: xoxp-1234\n                      id: U1234\n                      scope: chat:write\n                      token_type: user\n                    bot_user_id: U0KRQLJ9H\n                    enterprise:\n                      id: E12345678\n                      name: slack-sports\n                    ok: true\n                    scope: commands,incoming-webhook\n                    team:\n                      id: T9TK3CUKW\n                      name: Slack Softball Team\n                    token_type: bot\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Successful token request with scopes for both a bot user and a user token\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_client_id\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - oauth.v2\n        - oauth\n  /pins.add:\n    post:\n      description: Pins an item to a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/pins.add\n      operationId: pins_add\n      parameters:\n        - description: \"Authentication token. Requires scope: `pins:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel to pin the item in.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to pin.\n                  type: string\n              required:\n                - channel\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from pins.add method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: pins.add schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: channel_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from pins.add method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - message_not_found\n                      - channel_not_found\n                      - no_item_specified\n                      - already_pinned\n                      - permission_denied\n                      - file_not_shared\n                      - not_pinnable\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: pins.add error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - pins:write\n      tags:\n        - pins\n  /pins.list:\n    get:\n      description: Lists items pinned to a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/pins.list\n      operationId: pins_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `pins:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Channel to get pinned items for.\n          in: query\n          name: channel\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    items:\n                      - channel: C2U86NC6H\n                        created: 1508881078\n                        created_by: U2U85N1RZ\n                        message:\n                          permalink: https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151\n                          pinned_to:\n                            - C2U86NC6H\n                          text: What is the meaning of life?\n                          ts: \"1508197641.000151\"\n                          type: message\n                          user: U2U85N1RZ\n                        type: message\n                      - channel: C2U86NC6H\n                        created: 1508880991\n                        created_by: U2U85N1RZ\n                        message:\n                          permalink: https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015\n                          pinned_to:\n                            - C2U86NC6H\n                          text: The meaning of life, the universe, and everything is 42.\n                          ts: \"1503289197.000015\"\n                          type: message\n                          user: U2U85N1RZ\n                        type: message\n                    ok: true\n              schema:\n                description: Schema for successful response from pins.list method\n                items:\n                  anyOf:\n                    - additionalProperties: false\n                      properties:\n                        items:\n                          items:\n                            anyOf:\n                              - additionalProperties: false\n                                properties:\n                                  created:\n                                    type: integer\n                                  created_by:\n                                    $ref: \"#/components/schemas/defs_user_id\"\n                                  file:\n                                    $ref: \"#/components/schemas/objs_file\"\n                                  type:\n                                    enum:\n                                      - file\n                                    type: string\n                                title: File Pin\n                                type: object\n                              - additionalProperties: false\n                                properties:\n                                  channel:\n                                    $ref: \"#/components/schemas/defs_channel\"\n                                  created:\n                                    type: integer\n                                  created_by:\n                                    $ref: \"#/components/schemas/defs_user_id\"\n                                  message:\n                                    $ref: \"#/components/schemas/objs_message\"\n                                  type:\n                                    enum:\n                                      - message\n                                    type: string\n                                title: Message Pin\n                                type: object\n                          type: array\n                          uniqueItems: true\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                      required:\n                        - ok\n                        - items\n                      type: object\n                    - additionalProperties: false\n                      properties:\n                        count:\n                          type: integer\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                      required:\n                        - ok\n                        - count\n                      type: object\n                title: pins.list success schema\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from pins.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - channel_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: pins.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - pins:read\n      tags:\n        - pins\n  /pins.remove:\n    post:\n      description: Un-pins an item from a channel.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/pins.remove\n      operationId: pins_remove\n      parameters:\n        - description: \"Authentication token. Requires scope: `pins:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel where the item is pinned to.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to un-pin.\n                  type: string\n              required:\n                - channel\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from pins.remove method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: pins.remove schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: no_pin\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from pins.remove method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - file_not_found\n                      - file_comment_not_found\n                      - message_not_found\n                      - no_item_specified\n                      - not_pinned\n                      - permission_denied\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_typ\n                      - missing_post_typ\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeou\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: pins.remove error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - pins:write\n      tags:\n        - pins\n  /reactions.add:\n    post:\n      description: Adds a reaction to an item.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reactions.add\n      operationId: reactions_add\n      parameters:\n        - description: \"Authentication token. Requires scope: `reactions:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel where the message to add reaction to was posted.\n                  type: string\n                name:\n                  description: Reaction (emoji) name.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to add reaction to.\n                  type: string\n              required:\n                - channel\n                - name\n                - timestamp\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from reactions.add method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: reactions.add schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: already_reacted\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reactions.add method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - message_not_found\n                      - no_item_specified\n                      - invalid_name\n                      - already_reacted\n                      - too_many_emoji\n                      - too_many_reactions\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reactions.add error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reactions:write\n      tags:\n        - reactions\n  /reactions.get:\n    get:\n      description: Gets reactions for an item.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reactions.get\n      operationId: reactions_get\n      parameters:\n        - description: \"Authentication token. Requires scope: `reactions:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Channel where the message to get reactions for was posted.\n          in: query\n          name: channel\n          schema:\n            type: string\n        - description: File to get reactions for.\n          in: query\n          name: file\n          schema:\n            type: string\n        - description: File comment to get reactions for.\n          in: query\n          name: file_comment\n          schema:\n            type: string\n        - description: If true always return the complete reaction list.\n          in: query\n          name: full\n          schema:\n            type: boolean\n        - description: Timestamp of the message to get reactions for.\n          in: query\n          name: timestamp\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    file:\n                      channels:\n                        - C2U7V2YA2\n                      comments_count: 1\n                      created: 1507850315\n                      groups: []\n                      id: F7H0D7ZA4\n                      ims: []\n                      name: computer.gif\n                      reactions:\n                        - count: 1\n                          name: stuck_out_tongue_winking_eye\n                          users:\n                            - U2U85N1RV\n                      timestamp: 1507850315\n                      title: computer.gif\n                      user: U2U85N1RV\n                    ok: true\n                    type: file\n              schema:\n                description: Schema for successful response from reactions.get method\n                items:\n                  anyOf:\n                    - additionalProperties: false\n                      properties:\n                        channel:\n                          $ref: \"#/components/schemas/defs_channel\"\n                        message:\n                          $ref: \"#/components/schemas/objs_message\"\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                        type:\n                          enum:\n                            - message\n                          type: string\n                      required:\n                        - ok\n                        - type\n                        - channel\n                        - message\n                    - additionalProperties: false\n                      properties:\n                        file:\n                          $ref: \"#/components/schemas/objs_file\"\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                        type:\n                          enum:\n                            - file\n                          type: string\n                      required:\n                        - ok\n                        - type\n                        - file\n                    - additionalProperties: false\n                      properties:\n                        comment:\n                          $ref: \"#/components/schemas/objs_comment\"\n                        file:\n                          $ref: \"#/components/schemas/objs_file\"\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                        type:\n                          enum:\n                            - file_comment\n                          type: string\n                      required:\n                        - ok\n                        - type\n                        - file\n                        - comment\n                title: reactions.get success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reactions.get method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - file_not_found\n                      - file_comment_not_found\n                      - message_not_found\n                      - no_item_specified\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reactions.get error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reactions:read\n      tags:\n        - reactions\n  /reactions.list:\n    get:\n      description: Lists reactions made by a user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reactions.list\n      operationId: reactions_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `reactions:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Show reactions made by this user. Defaults to the authed user.\n          in: query\n          name: user\n          schema:\n            type: string\n        - description: If true always return the complete reaction list.\n          in: query\n          name: full\n          schema:\n            type: boolean\n        - in: query\n          name: count\n          schema:\n            type: integer\n        - in: query\n          name: page\n          schema:\n            type: integer\n        - description: \"Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \\\"page\\\" of the collection. See [pagination](/docs/pagination) for more details.\"\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    items:\n                      - channel: C3UKJTQAC\n                        message:\n                          bot_id: B4VLRLMKJ\n                          reactions:\n                            - count: 1\n                              name: robot_face\n                              users:\n                                - U2U85N1RV\n                          subtype: bot_message\n                          text: \"Hello from Python! :tada:\"\n                          ts: \"1507849573.000090\"\n                          username: Shipit Notifications\n                        type: message\n                      - comment:\n                          comment: This is a file comment\n                          created: 1508286096\n                          id: Fc7LP08P1U\n                          reactions:\n                            - count: 1\n                              name: white_check_mark\n                              users:\n                                - U2U85N1RV\n                          timestamp: 1508286096\n                          type: file_comment\n                          user: U2U85N1RV\n                        file:\n                          channels:\n                            - C2U7V2YA2\n                          comments_count: 1\n                          created: 1507850315\n                          reactions:\n                            - count: 1\n                              name: stuck_out_tongue_winking_eye\n                              users:\n                                - U2U85N1RV\n                          title: computer.gif\n                          user: U2U85N1RV\n                          username: \"\"\n                      - file:\n                          channels:\n                            - C2U7V2YA2\n                          comments_count: 1\n                          created: 1507850315\n                          id: F7H0D7ZA4\n                          name: computer.gif\n                          reactions:\n                            - count: 1\n                              name: stuck_out_tongue_winking_eye\n                              users:\n                                - U2U85N1RV\n                          size: 1639034\n                          title: computer.gif\n                          user: U2U85N1RV\n                          username: \"\"\n                        type: file\n                    ok: true\n                    response_metadata:\n                      next_cursor: dGVhbTpDMUg5UkVTR0w=\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from reactions.list method\n                properties:\n                  items:\n                    items:\n                      items:\n                        anyOf:\n                          - additionalProperties: false\n                            properties:\n                              channel:\n                                $ref: \"#/components/schemas/defs_channel\"\n                              message:\n                                $ref: \"#/components/schemas/objs_message\"\n                              type:\n                                enum:\n                                  - message\n                                type: string\n                            required:\n                              - type\n                              - channel\n                              - message\n                            type: object\n                          - additionalProperties: false\n                            properties:\n                              file:\n                                $ref: \"#/components/schemas/objs_file\"\n                              type:\n                                enum:\n                                  - file\n                                type: string\n                            required:\n                              - type\n                              - file\n                            type: object\n                          - additionalProperties: false\n                            properties:\n                              comment:\n                                $ref: \"#/components/schemas/objs_comment\"\n                              file:\n                                $ref: \"#/components/schemas/objs_file\"\n                              type:\n                                enum:\n                                  - file_comment\n                                type: string\n                            required:\n                              - type\n                              - file\n                              - comment\n                            type: object\n                    type: array\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  paging:\n                    $ref: \"#/components/schemas/objs_paging\"\n                  response_metadata:\n                    $ref: \"#/components/schemas/objs_response_metadata\"\n                required:\n                  - ok\n                  - items\n                title: reactions.list schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reactions.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - user_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactiv\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reactions.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reactions:read\n      tags:\n        - reactions\n  /reactions.remove:\n    post:\n      description: Removes a reaction from an item.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reactions.remove\n      operationId: reactions_remove\n      parameters:\n        - description: \"Authentication token. Requires scope: `reactions:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel where the message to remove reaction from was posted.\n                  type: string\n                file:\n                  description: File to remove reaction from.\n                  type: string\n                file_comment:\n                  description: File comment to remove reaction from.\n                  type: string\n                name:\n                  description: Reaction (emoji) name.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to remove reaction from.\n                  type: string\n              required:\n                - name\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from reactions.remove method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: reactions.remove schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: no_reaction\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reactions.remove method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - file_not_found\n                      - file_comment_not_found\n                      - message_not_found\n                      - no_item_specified\n                      - invalid_name\n                      - no_reaction\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reactions.remove error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reactions:write\n      tags:\n        - reactions\n  /reminders.add:\n    post:\n      description: Creates a reminder.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reminders.add\n      operationId: reminders_add\n      parameters:\n        - description: \"Authentication token. Requires scope: `reminders:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                text:\n                  description: The content of the reminder\n                  type: string\n                time:\n                  description: 'When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")'\n                  type: string\n                user:\n                  description: The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.\n                  type: string\n              required:\n                - text\n                - time\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from reminders.add method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  reminder:\n                    $ref: \"#/components/schemas/objs_reminder\"\n                required:\n                  - ok\n                  - reminder\n                title: reminders.add schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reminders.add method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - cannot_parse\n                      - user_not_found\n                      - cannot_add_bot\n                      - cannot_add_slackbot\n                      - cannot_add_others\n                      - cannot_add_others_recurring\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reminders.add error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reminders:write\n      tags:\n        - reminders\n  /reminders.complete:\n    post:\n      description: Marks a reminder as complete.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reminders.complete\n      operationId: reminders_complete\n      parameters:\n        - description: \"Authentication token. Requires scope: `reminders:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                reminder:\n                  description: The ID of the reminder to be marked as complete\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from reminders.complete method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: reminders.complete schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reminders.complete method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_found\n                      - cannot_complete_recurring\n                      - cannot_complete_others\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reminders.complete error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reminders:write\n      tags:\n        - reminders\n  /reminders.delete:\n    post:\n      description: Deletes a reminder.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reminders.delete\n      operationId: reminders_delete\n      parameters:\n        - description: \"Authentication token. Requires scope: `reminders:write`\"\n          in: header\n          name: token\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                reminder:\n                  description: The ID of the reminder\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from reminders.delete method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: reminders.delete schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reminders.delete method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reminders.delete error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reminders:write\n      tags:\n        - reminders\n  /reminders.info:\n    get:\n      description: Gets information about a reminder.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reminders.info\n      operationId: reminders_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `reminders:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: The ID of the reminder\n          in: query\n          name: reminder\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from reminders.info method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  reminder:\n                    $ref: \"#/components/schemas/objs_reminder\"\n                required:\n                  - ok\n                  - reminder\n                title: reminders.info schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reminders.info method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reminders.info error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reminders:read\n      tags:\n        - reminders\n  /reminders.list:\n    get:\n      description: Lists all reminders created by or for a given user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/reminders.list\n      operationId: reminders_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `reminders:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from reminders.list method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  reminders:\n                    items:\n                      $ref: \"#/components/schemas/objs_reminder\"\n                    type: array\n                required:\n                  - ok\n                  - reminders\n                title: reminders.list schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from reminders.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: reminders.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - reminders:read\n      tags:\n        - reminders\n  /rtm.connect:\n    get:\n      description: Starts a Real Time Messaging session.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/rtm.connect\n      operationId: rtm_connect\n      parameters:\n        - description: \"Authentication token. Requires scope: `rtm:stream`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Batch presence deliveries via subscription. Enabling changes the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching).\n          in: query\n          name: batch_presence_aware\n          schema:\n            type: boolean\n        - description: Only deliver presence events when requested by subscription. See [presence subscriptions](/docs/presence-and-status#subscriptions).\n          in: query\n          name: presence_sub\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    self:\n                      id: U4X318ZMZ\n                      name: robotoverlord\n                    team:\n                      domain: slackdemo\n                      id: T2U81E2FP\n                      name: SlackDemo\n                    url: wss://...\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from rtm.connect method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  self:\n                    additionalProperties: false\n                    properties:\n                      id:\n                        $ref: \"#/components/schemas/defs_user_id\"\n                      name:\n                        type: string\n                    required:\n                      - id\n                      - name\n                    type: object\n                  team:\n                    additionalProperties: false\n                    properties:\n                      domain:\n                        type: string\n                      id:\n                        $ref: \"#/components/schemas/defs_team\"\n                      name:\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - domain\n                    type: object\n                  url:\n                    format: uri\n                    type: string\n                required:\n                  - ok\n                  - url\n                  - team\n                  - self\n                title: rtm.connect schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from rtm.connect method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: rtm.connect error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - rtm:stream\n      tags:\n        - rtm\n  /search.messages:\n    get:\n      description: Searches for messages matching a query.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/search.messages\n      operationId: search_messages\n      parameters:\n        - description: \"Authentication token. Requires scope: `search:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Pass the number of results you want per \"page\". Maximum of `100`.\n          in: query\n          name: count\n          schema:\n            type: integer\n        - description: Pass a value of `true` to enable query highlight markers (see below).\n          in: query\n          name: highlight\n          schema:\n            type: boolean\n        - in: query\n          name: page\n          schema:\n            type: integer\n        - description: Search query.\n          in: query\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: Return matches sorted by either `score` or `timestamp`.\n          in: query\n          name: sort\n          schema:\n            type: string\n        - description: Change sort direction to ascending (`asc`) or descending (`desc`).\n          in: query\n          name: sort_dir\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    messages:\n                      matches:\n                        - channel:\n                            id: C12345678\n                            is_ext_shared: false\n                            is_mpim: false\n                            is_org_shared: false\n                            is_pending_ext_shared: false\n                            is_private: false\n                            is_shared: false\n                            name: general\n                            pending_shared: []\n                          iid: cb64bdaa-c1e8-4631-8a91-0f78080113e9\n                          permalink: https://hitchhikers.slack.com/archives/C12345678/p1508284197000015\n                          team: T12345678\n                          text: The meaning of life the universe and everything is 42.\n                          ts: \"1508284197.000015\"\n                          type: message\n                          user: U2U85N1RV\n                          username: roach\n                        - channel:\n                            id: C12345678\n                            is_ext_shared: false\n                            is_mpim: false\n                            is_org_shared: false\n                            is_pending_ext_shared: false\n                            is_private: false\n                            is_shared: false\n                            name: random\n                            pending_shared: []\n                          iid: 9a00d3c9-bd2d-45b0-988b-6cff99ae2a90\n                          permalink: https://hitchhikers.slack.com/archives/C12345678/p1508795665000236\n                          team: T12345678\n                          text: The meaning of life the universe and everything is 101010\n                          ts: \"1508795665.000236\"\n                          type: message\n                          user: \"\"\n                          username: robot overlord\n                      pagination:\n                        first: 1\n                        last: 2\n                        page: 1\n                        page_count: 1\n                        per_page: 20\n                        total_count: 2\n                      paging:\n                        count: 20\n                        page: 1\n                        pages: 1\n                        total: 2\n                      total: 2\n                    ok: true\n                    query: The meaning of life the universe and everything\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: No query passed\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - search:read\n      tags:\n        - search\n  /stars.add:\n    post:\n      description: Adds a star to an item.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/stars.add\n      operationId: stars_add\n      parameters:\n        - description: \"Authentication token. Requires scope: `stars:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`).\n                  type: string\n                file:\n                  description: File to add star to.\n                  type: string\n                file_comment:\n                  description: File comment to add star to.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to add star to.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from stars.add method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: stars.add schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from stars.add method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - message_not_found\n                      - file_not_found\n                      - file_comment_not_found\n                      - channel_not_found\n                      - no_item_specified\n                      - already_starred\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: stars.add error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - stars:write\n      tags:\n        - stars\n  /stars.list:\n    get:\n      description: Lists stars for a user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/stars.list\n      operationId: stars_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `stars:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - in: query\n          name: count\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n        - description: \"Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \\\"page\\\" of the collection. See [pagination](/docs/pagination) for more details.\"\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.\n          in: query\n          name: limit\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from stars.list method\n                properties:\n                  items:\n                    items:\n                      items:\n                        anyOf:\n                          - additionalProperties: false\n                            properties:\n                              channel:\n                                $ref: \"#/components/schemas/defs_channel\"\n                              date_create:\n                                type: integer\n                              message:\n                                $ref: \"#/components/schemas/objs_message\"\n                              type:\n                                enum:\n                                  - message\n                                type: string\n                            required:\n                              - type\n                              - channel\n                              - message\n                              - date_create\n                            type: object\n                          - additionalProperties: false\n                            properties:\n                              date_create:\n                                type: integer\n                              file:\n                                $ref: \"#/components/schemas/objs_file\"\n                              type:\n                                enum:\n                                  - file\n                                type: string\n                            required:\n                              - type\n                              - file\n                              - date_create\n                            type: object\n                          - additionalProperties: false\n                            properties:\n                              comment:\n                                $ref: \"#/components/schemas/objs_comment\"\n                              date_create:\n                                type: integer\n                              file:\n                                $ref: \"#/components/schemas/objs_file\"\n                              type:\n                                enum:\n                                  - file_comment\n                                type: string\n                            required:\n                              - type\n                              - file\n                              - comment\n                              - date_create\n                            type: object\n                          - additionalProperties: false\n                            properties:\n                              channel:\n                                $ref: \"#/components/schemas/defs_channel\"\n                              date_create:\n                                type: integer\n                              type:\n                                enum:\n                                  - channel\n                                type: string\n                            required:\n                              - type\n                              - channel\n                              - date_create\n                            type: object\n                          - additionalProperties: false\n                            properties:\n                              channel:\n                                $ref: \"#/components/schemas/defs_dm_id\"\n                              date_create:\n                                type: integer\n                              type:\n                                enum:\n                                  - im\n                                type: string\n                            required:\n                              - type\n                              - channel\n                              - date_create\n                            type: object\n                          - additionalProperties: false\n                            properties:\n                              channel:\n                                $ref: \"#/components/schemas/defs_group_id\"\n                              date_create:\n                                type: integer\n                              type:\n                                enum:\n                                  - group\n                                type: string\n                            required:\n                              - type\n                              - channel\n                              - date_create\n                            type: object\n                    type: array\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  paging:\n                    $ref: \"#/components/schemas/objs_paging\"\n                required:\n                  - ok\n                  - items\n                title: stars.list schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from stars.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: stars.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - stars:read\n      tags:\n        - stars\n  /stars.remove:\n    post:\n      description: Removes a star from an item.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/stars.remove\n      operationId: stars_remove\n      parameters:\n        - description: \"Authentication token. Requires scope: `stars:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channel:\n                  description: Channel to remove star from, or channel where the message to remove star from was posted (used with `timestamp`).\n                  type: string\n                file:\n                  description: File to remove star from.\n                  type: string\n                file_comment:\n                  description: File comment to remove star from.\n                  type: string\n                timestamp:\n                  description: Timestamp of the message to remove star from.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from stars.remove method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: stars.remove schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from stars.remove method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - bad_timestamp\n                      - message_not_found\n                      - file_not_found\n                      - file_comment_not_found\n                      - channel_not_found\n                      - no_item_specified\n                      - not_starred\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: stars.remove error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - stars:write\n      tags:\n        - stars\n  /team.accessLogs:\n    get:\n      description: Gets the access logs for the current team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/team.accessLogs\n      operationId: team_accessLogs\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: End of time range of logs to include in results (inclusive).\n          in: query\n          name: before\n          schema:\n            type: string\n        - in: query\n          name: count\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    logins:\n                      - count: 1\n                        country: US\n                        date_first: 1422922864\n                        date_last: 1422922864\n                        ip: 127.0.0.1\n                        isp: BigCo ISP\n                        region: CA\n                        user_agent: SlackWeb Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.35 Safari/537.36\n                        user_id: U45678\n                        username: alice\n                      - count: 1\n                        country: US\n                        date_first: 1422922493\n                        date_last: 1422922493\n                        ip: 127.0.0.1\n                        isp: BigCo ISP\n                        region: CA\n                        user_agent: SlackWeb Mozilla/5.0 (iPhone; CPU iPhone OS 8_1_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12B466 Safari/600.1.4\n                        user_id: U12345\n                        username: white_rabbit\n                    ok: true\n                    paging:\n                      count: 100\n                      page: 1\n                      pages: 1\n                      total: 2\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from team.accessLogs method\n                properties:\n                  logins:\n                    items:\n                      additionalProperties: false\n                      properties:\n                        count:\n                          type: integer\n                        country:\n                          nullable: true\n                          type: string\n                        date_first:\n                          type: integer\n                        date_last:\n                          type: integer\n                        ip:\n                          nullable: true\n                          type: string\n                        isp:\n                          nullable: true\n                          type: string\n                        region:\n                          nullable: true\n                          type: string\n                        user_agent:\n                          type: string\n                        user_id:\n                          $ref: \"#/components/schemas/defs_user_id\"\n                        username:\n                          type: string\n                      required:\n                        - user_id\n                        - username\n                        - date_first\n                        - date_last\n                        - count\n                        - ip\n                        - user_agent\n                        - isp\n                        - country\n                        - region\n                      type: object\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  paging:\n                    $ref: \"#/components/schemas/objs_paging\"\n                required:\n                  - ok\n                  - logins\n                  - paging\n                title: team.accessLogs schema\n                type: object\n          description: This response demonstrates pagination and two access log entries.\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: paid_only\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from team.accessLogs method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - paid_only\n                      - over_pagination_limit\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: team.accessLogs error schema\n                type: object\n          description: \"A workspace must be on a paid plan to use this method, otherwise the `paid_only` error is thrown:\"\n      security:\n        - slackAuth:\n            - admin\n      tags:\n        - team\n  /team.billableInfo:\n    get:\n      description: Gets billable users information for the current team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/team.billableInfo\n      operationId: team_billableInfo\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: A user to retrieve the billable information for. Defaults to all users.\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    billable_info:\n                      U02UCPE1R:\n                        billing_active: true\n                      U02UEBSD2:\n                        billing_active: true\n                      U0632EWRW:\n                        billing_active: false\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin\n      tags:\n        - team\n  /team.info:\n    get:\n      description: Gets information about the current team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/team.info\n      operationId: team_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `team:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Team to get info on, if omitted, will return information about the current team. Will only return team that the authenticated token is allowed to see through external shared channels\n          in: query\n          name: team\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    team:\n                      domain: example\n                      email_domain: example.com\n                      enterprise_id: E1234A12AB\n                      enterprise_name: Umbrella Corporation\n                      icon:\n                        image_102: https://...\n                        image_132: https://...\n                        image_34: https://...\n                        image_44: https://...\n                        image_68: https://...\n                        image_88: https://...\n                        image_default: true\n                      id: T12345\n                      name: My Team\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from team.info method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  team:\n                    $ref: \"#/components/schemas/objs_team\"\n                required:\n                  - ok\n                  - team\n                title: team.info schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from team.info method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: team.info error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - team:read\n      tags:\n        - team\n  /team.integrationLogs:\n    get:\n      description: Gets the integration logs for the current team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/team.integrationLogs\n      operationId: team_integrationLogs\n      parameters:\n        - description: \"Authentication token. Requires scope: `admin`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Filter logs to this Slack app. Defaults to all logs.\n          in: query\n          name: app_id\n          schema:\n            type: string\n        - description: Filter logs with this change type. Defaults to all logs.\n          in: query\n          name: change_type\n          schema:\n            type: string\n        - in: query\n          name: count\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: string\n        - description: Filter logs to this service. Defaults to all logs.\n          in: query\n          name: service_id\n          schema:\n            type: string\n        - description: Filter logs generated by this user’s actions. Defaults to all logs.\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from team.integrationLogs method\n                properties:\n                  logs:\n                    items:\n                      additionalProperties: false\n                      properties:\n                        admin_app_id:\n                          $ref: \"#/components/schemas/defs_app_id\"\n                        app_id:\n                          $ref: \"#/components/schemas/defs_app_id\"\n                        app_type:\n                          type: string\n                        change_type:\n                          type: string\n                        channel:\n                          $ref: \"#/components/schemas/defs_channel\"\n                        date:\n                          type: string\n                        scope:\n                          type: string\n                        service_id:\n                          type: string\n                        service_type:\n                          type: string\n                        user_id:\n                          $ref: \"#/components/schemas/defs_user_id\"\n                        user_name:\n                          type: string\n                      required:\n                        - user_id\n                        - user_name\n                        - date\n                        - change_type\n                        - app_type\n                        - app_id\n                        - scope\n                      type: object\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  paging:\n                    $ref: \"#/components/schemas/objs_paging\"\n                required:\n                  - ok\n                  - logs\n                  - paging\n                title: team.integrationLogs schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from team.integrationLogs method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: team.integrationLogs error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - admin\n      tags:\n        - team\n  /team.profile.get:\n    get:\n      description: Retrieve a team's profile.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/team.profile.get\n      operationId: team_profile_get\n      parameters:\n        - description: \"Authentication token. Requires scope: `users.profile:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Filter by visibility.\n          in: query\n          name: visibility\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    profile:\n                      fields:\n                        - hint: Enter the extension to reach your desk\n                          id: Xf06054AAA\n                          is_hidden: 1\n                          label: Phone extension\n                          options: null\n                          ordering: 0\n                          possible_values: null\n                          type: text\n                        - hint: When you were born\n                          id: Xf06054BBB\n                          label: Date of birth\n                          options: null\n                          ordering: 1\n                          possible_values: null\n                          type: date\n                        - hint: Enter a link to your Facebook profile\n                          id: Xf06054CCC\n                          label: Facebook\n                          options: null\n                          ordering: 2\n                          possible_values: null\n                          type: link\n                        - hint: Hogwarts, obviously\n                          id: Xf06054DDD\n                          label: House\n                          options: null\n                          ordering: 3\n                          possible_values:\n                            - Gryffindor\n                            - Hufflepuff\n                            - Ravenclaw\n                            - Slytherin\n                          type: options_list\n                        - hint: Office location (LDAP)\n                          id: Xf06054EEE\n                          label: Location\n                          options:\n                            is_protected: 1\n                          ordering: 4\n                          possible_values: null\n                          type: text\n                        - hint: The boss\n                          id: Xf06054FFF\n                          label: Manager\n                          options: null\n                          ordering: 5\n                          possible_values: null\n                          type: user\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from team.profile.get method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  profile:\n                    additionalProperties: false\n                    properties:\n                      fields:\n                        items:\n                          $ref: \"#/components/schemas/objs_team_profile_field\"\n                        type: array\n                        uniqueItems: true\n                    required:\n                      - fields\n                    type: object\n                required:\n                  - ok\n                  - profile\n                title: team.profile.get success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from team.profile.get method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_typ\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeou\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: team.profile.get error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users.profile:read\n      tags:\n        - team.profile\n        - team\n  /usergroups.create:\n    post:\n      description: Create a User Group\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/usergroups.create\n      operationId: usergroups_create\n      parameters:\n        - description: \"Authentication token. Requires scope: `usergroups:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channels:\n                  description: A comma separated string of encoded channel IDs for which the User Group uses as a default.\n                  type: string\n                description:\n                  description: A short description of the User Group.\n                  type: string\n                handle:\n                  description: A mention handle. Must be unique among channels, users and User Groups.\n                  type: string\n                include_count:\n                  description: Include the number of users in each User Group.\n                  type: boolean\n                name:\n                  description: A name for the User Group. Must be unique among User Groups.\n                  type: string\n              required:\n                - name\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from usergroups.create method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  usergroup:\n                    $ref: \"#/components/schemas/objs_subteam\"\n                required:\n                  - ok\n                  - usergroup\n                title: usergroups.create schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from usergroups.create method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - permission_denied\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: usergroups.create error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - usergroups:write\n      tags:\n        - usergroups\n  /usergroups.disable:\n    post:\n      description: Disable an existing User Group\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/usergroups.disable\n      operationId: usergroups_disable\n      parameters:\n        - description: \"Authentication token. Requires scope: `usergroups:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                include_count:\n                  description: Include the number of users in the User Group.\n                  type: boolean\n                usergroup:\n                  description: The encoded ID of the User Group to disable.\n                  type: string\n              required:\n                - usergroup\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from usergroups.disable method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  usergroup:\n                    $ref: \"#/components/schemas/objs_subteam\"\n                required:\n                  - ok\n                  - usergroup\n                title: usergroups.disable schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from usergroups.disable method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - permission_denied\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: usergroups.disable error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - usergroups:write\n      tags:\n        - usergroups\n  /usergroups.enable:\n    post:\n      description: Enable a User Group\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/usergroups.enable\n      operationId: usergroups_enable\n      parameters:\n        - description: \"Authentication token. Requires scope: `usergroups:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                include_count:\n                  description: Include the number of users in the User Group.\n                  type: boolean\n                usergroup:\n                  description: The encoded ID of the User Group to enable.\n                  type: string\n              required:\n                - usergroup\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from usergroups.enable method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  usergroup:\n                    $ref: \"#/components/schemas/objs_subteam\"\n                required:\n                  - ok\n                  - usergroup\n                title: usergroups.enable schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from usergroups.enable method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_require\n                      - fatal_error\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: usergroups.enable error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - usergroups:write\n      tags:\n        - usergroups\n  /usergroups.list:\n    get:\n      description: List all User Groups for a team\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/usergroups.list\n      operationId: usergroups_list\n      parameters:\n        - description: Include the list of users for each User Group.\n          in: query\n          name: include_users\n          schema:\n            type: boolean\n        - description: \"Authentication token. Requires scope: `usergroups:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Include the number of users in each User Group.\n          in: query\n          name: include_count\n          schema:\n            type: boolean\n        - description: Include disabled User Groups.\n          in: query\n          name: include_disabled\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    usergroups:\n                      - auto_type: admin\n                        created_by: USLACKBOT\n                        date_create: 1446598059\n                        date_delete: 0\n                        date_update: 1446670362\n                        deleted_by: null\n                        description: A group of all Administrators on your team.\n                        handle: admins\n                        id: S0614TZR7\n                        is_external: false\n                        is_usergroup: true\n                        name: Team Admins\n                        prefs:\n                          channels: []\n                          groups: []\n                        team_id: T060RNRCH\n                        updated_by: U060RNRCZ\n                        user_count: \"2\"\n                      - auto_type: owner\n                        created_by: USLACKBOT\n                        date_create: 1446678371\n                        date_delete: 0\n                        date_update: 1446678371\n                        deleted_by: null\n                        description: A group of all Owners on your team.\n                        handle: owners\n                        id: S06158AV7\n                        is_external: false\n                        is_usergroup: true\n                        name: Team Owners\n                        prefs:\n                          channels: []\n                          groups: []\n                        team_id: T060RNRCH\n                        updated_by: USLACKBOT\n                        user_count: \"1\"\n                      - auto_type: null\n                        created_by: U060RNRCZ\n                        date_create: 1446746793\n                        date_delete: 1446748865\n                        date_update: 1446747767\n                        deleted_by: null\n                        description: Marketing gurus, PR experts and product advocates.\n                        handle: marketing-team\n                        id: S0615G0KT\n                        is_external: false\n                        is_usergroup: true\n                        name: Marketing Team\n                        prefs:\n                          channels: []\n                          groups: []\n                        team_id: T060RNRCH\n                        updated_by: U060RNRCZ\n                        user_count: \"0\"\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from usergroups.list method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  usergroups:\n                    items:\n                      $ref: \"#/components/schemas/objs_subteam\"\n                    type: array\n                required:\n                  - ok\n                  - usergroups\n                title: usergroups.list schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from usergroups.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_require\n                      - fatal_error\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: usergroups.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - usergroups:read\n      tags:\n        - usergroups\n  /usergroups.update:\n    post:\n      description: Update an existing User Group\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/usergroups.update\n      operationId: usergroups_update\n      parameters:\n        - description: \"Authentication token. Requires scope: `usergroups:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                channels:\n                  description: A comma separated string of encoded channel IDs for which the User Group uses as a default.\n                  type: string\n                description:\n                  description: A short description of the User Group.\n                  type: string\n                handle:\n                  description: A mention handle. Must be unique among channels, users and User Groups.\n                  type: string\n                include_count:\n                  description: Include the number of users in the User Group.\n                  type: boolean\n                name:\n                  description: A name for the User Group. Must be unique among User Groups.\n                  type: string\n                usergroup:\n                  description: The encoded ID of the User Group to update.\n                  type: string\n              required:\n                - usergroup\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    usergroup:\n                      auto_type: null\n                      created_by: U060R4BJ4\n                      date_create: 1447096577\n                      date_delete: 0\n                      date_update: 1447102109\n                      deleted_by: null\n                      description: Marketing gurus, PR experts and product advocates.\n                      handle: marketing-team\n                      id: S0616NG6M\n                      is_external: false\n                      is_usergroup: true\n                      name: Marketing Team\n                      prefs:\n                        channels: []\n                        groups: []\n                      team_id: T060R4BHN\n                      updated_by: U060R4BJ4\n                      user_count: 1\n                      users:\n                        - U060R4BJ4\n                        - U060RNRCZ\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from usergroups.update method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  usergroup:\n                    $ref: \"#/components/schemas/objs_subteam\"\n                required:\n                  - ok\n                  - usergroup\n                title: usergroups.update schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from usergroups.update method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - permission_denied\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_require\n                      - fatal_error\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: usergroups.update error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - usergroups:write\n      tags:\n        - usergroups\n  /usergroups.users.list:\n    get:\n      description: List all users in a User Group\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/usergroups.users.list\n      operationId: usergroups_users_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `usergroups:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Allow results that involve disabled User Groups.\n          in: query\n          name: include_disabled\n          schema:\n            type: boolean\n        - description: The encoded ID of the User Group to update.\n          in: query\n          name: usergroup\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    users:\n                      - U060R4BJ4\n                      - W123A4BC5\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from usergroups.users.list method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  users:\n                    items:\n                      $ref: \"#/components/schemas/defs_user_id\"\n                    type: array\n                required:\n                  - ok\n                  - users\n                title: usergroups.users.list schema\n                type: object\n          description: Standard success response when used with a user token\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from usergroups.users.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_require\n                      - fatal_error\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: usergroups.users.list error schema\n                type: object\n          description: Standard failure response when used with an invalid token\n      security:\n        - slackAuth:\n            - usergroups:read\n      tags:\n        - usergroups.users\n        - usergroups\n  /usergroups.users.update:\n    post:\n      description: Update the list of users for a User Group\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/usergroups.users.update\n      operationId: usergroups_users_update\n      parameters:\n        - description: \"Authentication token. Requires scope: `usergroups:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                include_count:\n                  description: Include the number of users in the User Group.\n                  type: boolean\n                usergroup:\n                  description: The encoded ID of the User Group to update.\n                  type: string\n                users:\n                  description: A comma separated string of encoded user IDs that represent the entire list of users for the User Group.\n                  type: string\n              required:\n                - usergroup\n                - users\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    usergroup:\n                      auto_type: null\n                      created_by: U060R4BJ4\n                      date_create: 1447096577\n                      date_delete: 0\n                      date_update: 1447102109\n                      deleted_by: null\n                      description: Marketing gurus, PR experts and product advocates.\n                      handle: marketing-team\n                      id: S0616NG6M\n                      is_external: false\n                      is_usergroup: true\n                      name: Marketing Team\n                      prefs:\n                        channels: []\n                        groups: []\n                      team_id: T060R4BHN\n                      updated_by: U060R4BJ4\n                      user_count: 1\n                      users:\n                        - U060R4BJ4\n                        - U060RNRCZ\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from usergroups.users.update method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  usergroup:\n                    $ref: \"#/components/schemas/objs_subteam\"\n                required:\n                  - ok\n                  - usergroup\n                title: usergroups.users.update schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from usergroups.users.update method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - permission_denied\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - user_is_restricted\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_require\n                      - fatal_error\n                      - missing_charset\n                      - superfluous_charset\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: usergroups.users.update error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - usergroups:write\n      tags:\n        - usergroups.users\n        - usergroups\n  /users.conversations:\n    get:\n      description: List conversations the calling user may access.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.conversations\n      operationId: users_conversations\n      parameters:\n        - description: \"Authentication token. Requires scope: `conversations:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: Browse conversations by a specific user ID's membership. Non-public channels are restricted to those where the calling user shares membership.\n          in: query\n          name: user\n          schema:\n            type: string\n        - description: Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`\n          in: query\n          name: types\n          schema:\n            type: string\n        - description: Set to `true` to exclude archived channels from the list\n          in: query\n          name: exclude_archived\n          schema:\n            type: boolean\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    channels:\n                      - created: 1449252889\n                        creator: U012A3CDE\n                        id: C012AB3CD\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: true\n                        is_group: false\n                        is_im: false\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: general\n                        name_normalized: general\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: \"\"\n                          last_set: 0\n                          value: This channel is for team-wide communication and announcements. All team members are in this channel.\n                        topic:\n                          creator: \"\"\n                          last_set: 0\n                          value: Company-wide announcements and work-based matters\n                        unlinked: 0\n                      - created: 1449252889\n                        creator: U061F7AUR\n                        id: C061EG9T2\n                        is_archived: false\n                        is_channel: true\n                        is_ext_shared: false\n                        is_general: false\n                        is_group: false\n                        is_im: false\n                        is_mpim: false\n                        is_org_shared: false\n                        is_pending_ext_shared: false\n                        is_private: false\n                        is_shared: false\n                        name: random\n                        name_normalized: random\n                        pending_shared: []\n                        previous_names: []\n                        purpose:\n                          creator: \"\"\n                          last_set: 0\n                          value: A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\n                        topic:\n                          creator: \"\"\n                          last_set: 0\n                          value: Non-work banter and water cooler conversation\n                        unlinked: 0\n                    ok: true\n                    response_metadata:\n                      next_cursor: dGVhbTpDMDYxRkE1UEI=\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from users.conversations method. Returned conversation objects do not include `num_members` or `is_member`\n                properties:\n                  channels:\n                    items:\n                      $ref: \"#/components/schemas/objs_conversation\"\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  response_metadata:\n                    additionalProperties: false\n                    properties:\n                      next_cursor:\n                        type: string\n                    required:\n                      - next_cursor\n                    type: object\n                required:\n                  - ok\n                  - channels\n                title: users.conversations success schema\n                type: object\n          description: Typical success response with only public channels. Note how `num_members` and `is_member` are not returned like typical `conversations` objects.\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.conversations method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - method_not_supported_for_channel_type\n                      - missing_scope\n                      - invalid_types\n                      - invalid_cursor\n                      - invalid_limit\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.conversations error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - channels:read\n            - groups:read\n            - im:read\n            - mpim:read\n      tags:\n        - users\n  /users.deletePhoto:\n    post:\n      description: Delete the user profile photo\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.deletePhoto\n      operationId: users_deletePhoto\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                token:\n                  description: \"Authentication token. Requires scope: `users.profile:write`\"\n                  type: string\n              required:\n                - token\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from users.deletePhoto method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: users.deletePhoto schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.deletePhoto method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.deletePhoto error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users.profile:write\n      tags:\n        - users\n  /users.getPresence:\n    get:\n      description: Gets user presence information.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.getPresence\n      operationId: users_getPresence\n      parameters:\n        - description: \"Authentication token. Requires scope: `users:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: User to get presence info on. Defaults to the authed user.\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    presence: active\n              schema:\n                additionalProperties: true\n                description: Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65\n                properties:\n                  auto_away:\n                    type: boolean\n                  connection_count:\n                    type: integer\n                  last_activity:\n                    type: integer\n                  manual_away:\n                    type: boolean\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  online:\n                    type: boolean\n                  presence:\n                    type: string\n                required:\n                  - ok\n                  - presence\n                title: \"API method: users.getPresence\"\n                type: object\n          description: When requesting information for a different user, this method just returns the current presence (either `active` or `away`).\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties:\n                  type: object\n                description: Schema for error response users.getPresence method\n                properties:\n                  error:\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.counts error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users:read\n      tags:\n        - users\n  /users.identity:\n    get:\n      description: Get a user's identity.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.identity\n      operationId: users_identity\n      parameters:\n        - description: \"Authentication token. Requires scope: `identity.basic`\"\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    team:\n                      id: T0G9PQBBK\n                    user:\n                      id: U0G9QF9C6\n                      name: Sonny Whether\n              schema:\n                description: Schema for successful response from users.identity method\n                items:\n                  anyOf:\n                    - additionalProperties: false\n                      description: Schema for 'identity.basic' scope\n                      properties:\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                        team:\n                          additionalProperties: false\n                          properties:\n                            id:\n                              $ref: \"#/components/schemas/defs_team\"\n                          required:\n                            - id\n                          type: object\n                        user:\n                          additionalProperties: false\n                          properties:\n                            id:\n                              $ref: \"#/components/schemas/defs_user_id\"\n                            name:\n                              type: string\n                          required:\n                            - name\n                            - id\n                          type: object\n                      required:\n                        - ok\n                        - user\n                        - team\n                      type: object\n                    - additionalProperties: false\n                      description: Schema for 'identity.basic,identity.email' scopes\n                      properties:\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                        team:\n                          additionalProperties: false\n                          properties:\n                            id:\n                              $ref: \"#/components/schemas/defs_team\"\n                          required:\n                            - id\n                          type: object\n                        user:\n                          additionalProperties: false\n                          properties:\n                            email:\n                              format: email\n                              type: string\n                            id:\n                              $ref: \"#/components/schemas/defs_user_id\"\n                            name:\n                              type: string\n                          required:\n                            - name\n                            - id\n                            - email\n                          type: object\n                      required:\n                        - ok\n                        - user\n                        - team\n                      type: object\n                    - additionalProperties: false\n                      description: Schema for 'identity.basic,identity.avatar' scopes\n                      properties:\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                        team:\n                          additionalProperties: false\n                          properties:\n                            id:\n                              $ref: \"#/components/schemas/defs_team\"\n                          required:\n                            - id\n                          type: object\n                        user:\n                          additionalProperties: false\n                          properties:\n                            id:\n                              $ref: \"#/components/schemas/defs_user_id\"\n                            image_192:\n                              format: url\n                              type: string\n                            image_24:\n                              format: url\n                              type: string\n                            image_32:\n                              format: url\n                              type: string\n                            image_48:\n                              format: url\n                              type: string\n                            image_512:\n                              format: url\n                              type: string\n                            image_72:\n                              format: url\n                              type: string\n                            name:\n                              type: string\n                          required:\n                            - name\n                            - id\n                            - image_24\n                            - image_32\n                            - image_48\n                            - image_72\n                            - image_192\n                            - image_512\n                          type: object\n                      required:\n                        - ok\n                        - user\n                        - team\n                      type: object\n                    - additionalProperties: false\n                      description: Schema for 'identity.basic,identity.team' scopes\n                      properties:\n                        ok:\n                          $ref: \"#/components/schemas/defs_ok_true\"\n                        team:\n                          additionalProperties: false\n                          properties:\n                            domain:\n                              type: string\n                            id:\n                              $ref: \"#/components/schemas/defs_team\"\n                            image_102:\n                              format: url\n                              type: string\n                            image_132:\n                              format: url\n                              type: string\n                            image_230:\n                              format: url\n                              type: string\n                            image_34:\n                              format: url\n                              type: string\n                            image_44:\n                              format: url\n                              type: string\n                            image_68:\n                              format: url\n                              type: string\n                            image_88:\n                              format: url\n                              type: string\n                            image_default:\n                              type: boolean\n                            name:\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - domain\n                            - image_34\n                            - image_44\n                            - image_68\n                            - image_88\n                            - image_102\n                            - image_132\n                            - image_230\n                            - image_default\n                          type: object\n                        user:\n                          additionalProperties: false\n                          properties:\n                            id:\n                              $ref: \"#/components/schemas/defs_user_id\"\n                            name:\n                              type: string\n                          required:\n                            - name\n                            - id\n                          type: object\n                      required:\n                        - ok\n                        - user\n                        - team\n                      type: object\n                title: users.identity schema\n          description: \"You will receive at a minimum the following information:\"\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: account_inactive\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.identity method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.identity error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - identity.basic\n      tags:\n        - users\n  /users.info:\n    get:\n      description: Gets information about a user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.info\n      operationId: users_info\n      parameters:\n        - description: \"Authentication token. Requires scope: `users:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Set this to `true` to receive the locale for this user. Defaults to `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n        - description: User to get info on\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    user:\n                      color: 9f69e7\n                      deleted: false\n                      has_2fa: false\n                      id: W012A3CDE\n                      is_admin: true\n                      is_app_user: false\n                      is_bot: false\n                      is_owner: false\n                      is_primary_owner: false\n                      is_restricted: false\n                      is_ultra_restricted: false\n                      name: spengler\n                      profile:\n                        avatar_hash: ge3b51ca72de\n                        display_name: spengler\n                        display_name_normalized: spengler\n                        email: spengler@ghostbusters.example.com\n                        image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_original: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        real_name: Egon Spengler\n                        real_name_normalized: Egon Spengler\n                        status_emoji: \":books:\"\n                        status_text: Print is dead\n                        team: T012AB3C4\n                      real_name: Egon Spengler\n                      team_id: T012AB3C4\n                      tz: America/Los_Angeles\n                      tz_label: Pacific Daylight Time\n                      tz_offset: -25200\n                      updated: 1502138686\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from users.info method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  user:\n                    $ref: \"#/components/schemas/objs_user\"\n                required:\n                  - ok\n                  - user\n                title: users.info success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: user_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.info method\n                properties:\n                  callstack:\n                    type: string\n                  error:\n                    enum:\n                      - user_not_found\n                      - user_not_visible\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.info error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users:read\n      tags:\n        - users\n  /users.list:\n    get:\n      description: Lists all users in a Slack team.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.list\n      operationId: users_list\n      parameters:\n        - description: \"Authentication token. Requires scope: `users:read`\"\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached. Providing no `limit` value will result in Slack attempting to deliver you the entire result set. If the collection is too large you may experience `limit_required` or HTTP 500 errors.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail.\n          in: query\n          name: cursor\n          schema:\n            type: string\n        - description: Set this to `true` to receive the locale for users. Defaults to `false`\n          in: query\n          name: include_locale\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    cache_ts: 1498777272\n                    members:\n                      - color: 9f69e7\n                        deleted: false\n                        has_2fa: false\n                        id: W012A3CDE\n                        is_admin: true\n                        is_app_user: false\n                        is_bot: false\n                        is_owner: false\n                        is_primary_owner: false\n                        is_restricted: false\n                        is_ultra_restricted: false\n                        name: spengler\n                        profile:\n                          avatar_hash: ge3b51ca72de\n                          display_name: spengler\n                          display_name_normalized: spengler\n                          email: spengler@ghostbusters.example.com\n                          image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                          real_name: Egon Spengler\n                          real_name_normalized: Egon Spengler\n                          status_emoji: \":books:\"\n                          status_text: Print is dead\n                          team: T012AB3C4\n                        real_name: spengler\n                        team_id: T012AB3C4\n                        tz: America/Los_Angeles\n                        tz_label: Pacific Daylight Time\n                        tz_offset: -25200\n                        updated: 1502138686\n                      - color: 9f69e7\n                        deleted: false\n                        has_2fa: false\n                        id: W07QCRPA4\n                        is_admin: true\n                        is_bot: false\n                        is_owner: false\n                        is_primary_owner: false\n                        is_restricted: false\n                        is_ultra_restricted: false\n                        name: glinda\n                        profile:\n                          avatar_hash: 8fbdd10b41c6\n                          display_name: Glinda the Fairly Good\n                          display_name_normalized: Glinda the Fairly Good\n                          email: glenda@south.oz.coven\n                          first_name: Glinda\n                          image_1024: https://a.slack-edge.com...png\n                          image_192: https://a.slack-edge.com...png\n                          image_24: https://a.slack-edge.com...png\n                          image_32: https://a.slack-edge.com...png\n                          image_48: https://a.slack-edge.com...png\n                          image_512: https://a.slack-edge.com...png\n                          image_72: https://a.slack-edge.com...png\n                          image_original: https://a.slack-edge.com...png\n                          last_name: Southgood\n                          phone: \"\"\n                          real_name: Glinda Southgood\n                          real_name_normalized: Glinda Southgood\n                          skype: \"\"\n                          title: Glinda the Good\n                        real_name: Glinda Southgood\n                        team_id: T0G9PQBBK\n                        tz: America/Los_Angeles\n                        tz_label: Pacific Daylight Time\n                        tz_offset: -25200\n                        updated: 1480527098\n                    ok: true\n                    response_metadata:\n                      next_cursor: dXNlcjpVMEc5V0ZYTlo=\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from users.list method\n                properties:\n                  cache_ts:\n                    type: integer\n                  members:\n                    items:\n                      $ref: \"#/components/schemas/objs_user\"\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  response_metadata:\n                    $ref: \"#/components/schemas/objs_response_metadata\"\n                required:\n                  - ok\n                  - members\n                  - cache_ts\n                title: users.list schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_cursor\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.list method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - limit_required\n                      - invalid_cursor\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.list error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users:read\n      tags:\n        - users\n  /users.lookupByEmail:\n    get:\n      description: Find a user with an email address.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.lookupByEmail\n      operationId: users_lookupByEmail\n      parameters:\n        - description: \"Authentication token. Requires scope: `users:read.email`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: An email address belonging to a user in the workspace\n          in: query\n          name: email\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    user:\n                      color: 9f69e7\n                      deleted: false\n                      has_2fa: false\n                      id: W012A3CDE\n                      is_admin: true\n                      is_app_user: false\n                      is_bot: false\n                      is_owner: false\n                      is_primary_owner: false\n                      is_restricted: false\n                      is_ultra_restricted: false\n                      name: spengler\n                      profile:\n                        avatar_hash: ge3b51ca72de\n                        display_name: spengler\n                        display_name_normalized: spengler\n                        email: spengler@ghostbusters.example.com\n                        image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                        real_name: Egon Spengler\n                        real_name_normalized: Egon Spengler\n                        status_emoji: \":books:\"\n                        status_text: Print is dead\n                        team: T012AB3C4\n                      real_name: Egon Spengler\n                      team_id: T012AB3C4\n                      tz: America/Los_Angeles\n                      tz_label: Pacific Daylight Time\n                      tz_offset: -25200\n                      updated: 1502138686\n              schema:\n                additionalProperties: true\n                description: Schema for successful response from users.lookupByEmail method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  user:\n                    $ref: \"#/components/schemas/objs_user\"\n                required:\n                  - ok\n                  - user\n                title: users.lookupByEmail success schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: users_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.lookupByEmail method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - users_not_found\n                      - enterprise_is_restricted\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - no_permission\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.lookupByEmail error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users:read.email\n      tags:\n        - users\n  /users.profile.get:\n    get:\n      description: Retrieves a user's profile information.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.profile.get\n      operationId: users_profile_get\n      parameters:\n        - description: \"Authentication token. Requires scope: `users.profile:read`\"\n          in: query\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Include labels for each ID in custom profile fields\n          in: query\n          name: include_labels\n          schema:\n            type: boolean\n        - description: User to retrieve profile info for\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    profile:\n                      avatar_hash: ge3b51ca72de\n                      display_name: spengler\n                      display_name_normalized: spengler\n                      email: spengler@ghostbusters.example.com\n                      image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_original: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      real_name: Egon Spengler\n                      real_name_normalized: Egon Spengler\n                      status_emoji: \":books:\"\n                      status_expiration: 0\n                      status_text: Print is dead\n                      team: T012AB3C4\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from users.profile.get method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  profile:\n                    $ref: \"#/components/schemas/objs_user_profile\"\n                required:\n                  - ok\n                  - profile\n                title: users.profile.get schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: user_not_found\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.profile.get method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - user_not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.profile.get error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users.profile:read\n      tags:\n        - users.profile\n        - users\n  /users.profile.set:\n    post:\n      description: Set the profile information for a user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.profile.set\n      operationId: users_profile_set\n      parameters:\n        - description: \"Authentication token. Requires scope: `users.profile:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                name:\n                  description: Name of a single key to set. Usable only if `profile` is not passed.\n                  type: string\n                profile:\n                  description: Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters.\n                  type: string\n                user:\n                  description: ID of user to change. This argument may only be specified by team admins on paid teams.\n                  type: string\n                value:\n                  description: Value to set a single key to. Usable only if `profile` is not passed.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    profile:\n                      avatar_hash: ge3b51ca72de\n                      display_name: spengler\n                      display_name_normalized: spengler\n                      email: spengler@ghostbusters.example.com\n                      image_192: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_24: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_32: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_48: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_512: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      image_72: https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\n                      real_name: Egon Spengler\n                      real_name_normalized: Egon Spengler\n                      status_emoji: \":books:\"\n                      status_expiration: 0\n                      status_text: Print is dead\n                      team: T012AB3C4\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from users.profile.set method\n                properties:\n                  email_pending:\n                    format: email\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  profile:\n                    $ref: \"#/components/schemas/objs_user_profile\"\n                  username:\n                    type: string\n                required:\n                  - ok\n                  - username\n                  - profile\n                title: users.profile.set schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_profile\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.profile.set method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - reserved_name\n                      - invalid_profile\n                      - profile_set_failed\n                      - not_admin\n                      - not_app_admin\n                      - cannot_update_admin_user\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.profile.set error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users.profile:write\n      tags:\n        - users.profile\n        - users\n  /users.setActive:\n    post:\n      description: Marked a user as active. Deprecated and non-functional.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.setActive\n      operationId: users_setActive\n      parameters:\n        - description: \"Authentication token. Requires scope: `users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from users.setActive method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: users.setActive schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.setActive method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - ekm_access_denied\n                      - missing_scope\n                      - invalid_arguments\n                      - invalid_arg_name\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - request_timeout\n                      - fatal_error\n                      - internal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.setActive error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users:write\n      tags:\n        - users\n  /users.setPhoto:\n    post:\n      description: Set the user profile photo\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.setPhoto\n      operationId: users_setPhoto\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                crop_w:\n                  description: Width/height of crop box (always square)\n                  type: string\n                crop_x:\n                  description: X coordinate of top-left corner of crop box\n                  type: string\n                crop_y:\n                  description: Y coordinate of top-left corner of crop box\n                  type: string\n                image:\n                  description: File contents via `multipart/form-data`.\n                  type: string\n                token:\n                  description: \"Authentication token. Requires scope: `users.profile:write`\"\n                  type: string\n              required:\n                - token\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from users.setPhoto method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                  profile:\n                    additionalProperties: false\n                    properties:\n                      avatar_hash:\n                        pattern: ^[0-9a-f]{12}$\n                        type: string\n                      image_1024:\n                        format: uri\n                        type: string\n                      image_192:\n                        format: uri\n                        type: string\n                      image_24:\n                        format: uri\n                        type: string\n                      image_32:\n                        format: uri\n                        type: string\n                      image_48:\n                        format: uri\n                        type: string\n                      image_512:\n                        format: uri\n                        type: string\n                      image_72:\n                        format: uri\n                        type: string\n                      image_original:\n                        format: uri\n                        type: string\n                    required:\n                      - image_24\n                      - image_32\n                      - image_48\n                      - image_72\n                      - image_192\n                      - image_512\n                      - image_1024\n                      - image_original\n                      - avatar_hash\n                    type: object\n                required:\n                  - ok\n                  - profile\n                title: users.setPhoto schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.setPhoto method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  debug_step:\n                    description: possibly DEV/QA only\n                    type: string\n                  dims:\n                    description: possibly DEV/QA only\n                    type: string\n                  error:\n                    enum:\n                      - bad_image\n                      - too_large\n                      - too_many_frames\n                      - not_found\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - user_is_bot\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                  time_ident:\n                    description: possibly DEV/QA only\n                    type: integer\n                required:\n                  - ok\n                  - error\n                title: users.setPhoto error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users.profile:write\n      tags:\n        - users\n  /users.setPresence:\n    post:\n      description: Manually sets user presence.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/users.setPresence\n      operationId: users_setPresence\n      parameters:\n        - description: \"Authentication token. Requires scope: `users:write`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                presence:\n                  description: Either `auto` or `away`\n                  type: string\n              required:\n                - presence\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: false\n                description: Schema for successful response from users.setPresence method\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: users.setPresence schema\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: false\n                description: Schema for error response from users.setPresence method\n                properties:\n                  callstack:\n                    description: \"Note: PHP callstack is only visible in dev/qa\"\n                    type: string\n                  error:\n                    enum:\n                      - invalid_presence\n                      - not_authed\n                      - invalid_auth\n                      - account_inactive\n                      - token_revoked\n                      - no_permission\n                      - org_login_required\n                      - invalid_arg_name\n                      - invalid_array_arg\n                      - invalid_charset\n                      - invalid_form_data\n                      - invalid_post_type\n                      - missing_post_type\n                      - team_added_to_org\n                      - invalid_json\n                      - json_not_object\n                      - request_timeout\n                      - upgrade_required\n                      - fatal_error\n                    type: string\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                  - error\n                title: users.setPresence error schema\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - users:write\n      tags:\n        - users\n  /views.open:\n    get:\n      description: Open a view for a user.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/views.open\n      operationId: views_open\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Exchange a trigger to post to the user.\n          in: query\n          name: trigger_id\n          required: true\n          schema:\n            type: string\n        - description: A [view payload](/reference/surfaces/views). This must be a JSON-encoded string.\n          in: query\n          name: view\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    view:\n                      app_id: AA4928AQ\n                      blocks:\n                        - block_id: a_block_id\n                          element:\n                            action_id: an_action_id\n                            type: plain_text_input\n                          label:\n                            emoji: true\n                            text: A simple label\n                            type: plain_text\n                          optional: false\n                          type: input\n                      bot_id: BA13894H\n                      callback_id: identify_your_modals\n                      clear_on_close: false\n                      external_id: \"\"\n                      hash: \"156772938.1827394\"\n                      id: VMHU10V25\n                      notify_on_close: false\n                      private_metadata: Shh it is a secret\n                      root_view_id: VMHU10V25\n                      state:\n                        values: {}\n                      submit:\n                        text: Create\n                        type: plain_text\n                      team_id: T8N4K1JN\n                      title:\n                        text: Quite a plain modal\n                        type: plain_text\n                      type: modal\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response includes the opened view payload.\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_arguments\n                    ok: false\n                    response_metadata:\n                      messages:\n                        - invalid `trigger_id`\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response, before getting to any possible validation errors.\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - views\n  /views.publish:\n    get:\n      description: Publish a static view for a User.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/views.publish\n      operationId: views_publish\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: \"`id` of the user you want publish a view to.\"\n          in: query\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: A [view payload](/reference/surfaces/views). This must be a JSON-encoded string.\n          in: query\n          name: view\n          required: true\n          schema:\n            type: string\n        - description: A string that represents view state to protect against possible race conditions.\n          in: query\n          name: hash\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    view:\n                      app_id: AA4928AQ\n                      blocks:\n                        - block_id: 2WGp9\n                          text:\n                            text: A simple section with some sample sentence.\n                            type: mrkdwn\n                            verbatim: false\n                          type: section\n                      bot_id: BA13894H\n                      callback_id: identify_your_home_tab\n                      clear_on_close: false\n                      close: null\n                      external_id: \"\"\n                      hash: \"156772938.1827394\"\n                      id: VMHU10V25\n                      notify_on_close: false\n                      previous_view_id: null\n                      private_metadata: Shh it is a secret\n                      root_view_id: VMHU10V25\n                      state:\n                        values: {}\n                      submit: null\n                      team_id: T8N4K1JN\n                      type: home\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response includes the published view payload.\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_arguments\n                    ok: false\n                    response_metadata:\n                      messages:\n                        - invalid `user_id`\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response, before getting to any possible validation errors.\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - views\n  /views.push:\n    get:\n      description: Push a view onto the stack of a root view.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/views.push\n      operationId: views_push\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Exchange a trigger to post to the user.\n          in: query\n          name: trigger_id\n          required: true\n          schema:\n            type: string\n        - description: A [view payload](/reference/surfaces/views). This must be a JSON-encoded string.\n          in: query\n          name: view\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    view:\n                      app_id: AAD3351BQ\n                      blocks:\n                        - block_id: edit_details\n                          element:\n                            action_id: detail_input\n                            type: plain_text_input\n                          label:\n                            text: Edit details\n                            type: plain_text\n                          type: input\n                      bot_id: BADF7A34H\n                      callback_id: view_4\n                      clear_on_close: true\n                      close:\n                        emoji: true\n                        text: Back\n                        type: plain_text\n                      external_id: \"\"\n                      hash: 1569362015.55b5e41b\n                      id: VNM522E2U\n                      notify_on_close: false\n                      previous_view_id: null\n                      private_metadata: \"\"\n                      root_view_id: VNN729E3U\n                      state:\n                        values: {}\n                      submit:\n                        emoji: true\n                        text: Save\n                        type: plain_text\n                      team_id: T9M4RL1JM\n                      title:\n                        emoji: true\n                        text: Pushed Modal\n                        type: plain_text\n                      type: modal\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response includes the pushed view payload.\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_arguments\n                    ok: false\n                    response_metadata:\n                      messages:\n                        - \"missing required field: title\"\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response.\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - views\n  /views.update:\n    get:\n      description: Update an existing view.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/views.update\n      operationId: views_update\n      parameters:\n        - description: \"Authentication token. Requires scope: `none`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: A unique identifier of the view to be updated. Either `view_id` or `external_id` is required.\n          in: query\n          name: view_id\n          schema:\n            type: string\n        - description: A unique identifier of the view set by the developer. Must be unique for all views on a team. Max length of 255 characters. Either `view_id` or `external_id` is required.\n          in: query\n          name: external_id\n          schema:\n            type: string\n        - description: A [view object](/reference/surfaces/views). This must be a JSON-encoded string.\n          in: query\n          name: view\n          schema:\n            type: string\n        - description: A string that represents view state to protect against possible race conditions.\n          in: query\n          name: hash\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n                    view:\n                      app_id: AAD3351BQ\n                      blocks:\n                        - accessory:\n                            action_id: button_4\n                            text:\n                              text: Click me\n                              type: plain_text\n                            type: button\n                          block_id: s_block\n                          text:\n                            emoji: true\n                            text: I am but an updated modal\n                            type: plain_text\n                          type: section\n                      bot_id: BADF7A34H\n                      callback_id: view_2\n                      clear_on_close: true\n                      close:\n                        emoji: true\n                        text: Close\n                        type: plain_text\n                      external_id: \"\"\n                      hash: 1569262015.55b5e41b\n                      id: VNM522E2U\n                      notify_on_close: false\n                      previous_view_id: null\n                      private_metadata: \"\"\n                      root_view_id: VNN729E3U\n                      state:\n                        values: {}\n                      submit: null\n                      team_id: T9M4RL1JM\n                      title:\n                        emoji: true\n                        text: Updated Modal\n                        type: plain_text\n                      type: modal\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response includes the updated view payload.\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: not_found\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response.\n      security:\n        - slackAuth:\n            - none\n      tags:\n        - views\n  /workflows.stepCompleted:\n    get:\n      description: Indicate that an app's step in a workflow completed execution.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/workflows.stepCompleted\n      operationId: workflows_stepCompleted\n      parameters:\n        - description: \"Authentication token. Requires scope: `workflow.steps:execute`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Context identifier that maps to the correct workflow step execution.\n          in: query\n          name: workflow_step_execute_id\n          required: true\n          schema:\n            type: string\n        - description: Key-value object of outputs from your step. Keys of this object reflect the configured `key` properties of your [`outputs`](/reference/workflows/workflow_step#output) array from your `workflow_step` object.\n          in: query\n          name: outputs\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - workflow.steps:execute\n      tags:\n        - workflows\n  /workflows.stepFailed:\n    get:\n      description: Indicate that an app's step in a workflow failed to execute.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/workflows.stepFailed\n      operationId: workflows_stepFailed\n      parameters:\n        - description: \"Authentication token. Requires scope: `workflow.steps:execute`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: Context identifier that maps to the correct workflow step execution.\n          in: query\n          name: workflow_step_execute_id\n          required: true\n          schema:\n            type: string\n        - description: A JSON-based object with a `message` property that should contain a human readable error message.\n          in: query\n          name: error\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - workflow.steps:execute\n      tags:\n        - workflows\n  /workflows.updateStep:\n    get:\n      description: Update the configuration for a workflow extension step.\n      externalDocs:\n        description: API method documentation\n        url: https://api.slack.com/methods/workflows.updateStep\n      operationId: workflows_updateStep\n      parameters:\n        - description: \"Authentication token. Requires scope: `workflow.steps:execute`\"\n          in: header\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: A context identifier provided with `view_submission` payloads used to call back to `workflows.updateStep`.\n          in: query\n          name: workflow_step_edit_id\n          required: true\n          schema:\n            type: string\n        - description: \"A JSON key-value map of inputs required from a user during configuration. This is the data your app expects to receive when the workflow step starts. **Please note**: the embedded variable format is set and replaced by the workflow system. You cannot create custom variables that will be replaced at runtime. [Read more about variables in workflow steps here](/workflows/steps#variables).\"\n          in: query\n          name: inputs\n          schema:\n            type: string\n        - description: An JSON array of output objects used during step execution. This is the data your app agrees to provide when your workflow step was executed.\n          in: query\n          name: outputs\n          schema:\n            type: string\n        - description: An optional field that can be used to override the step name that is shown in the Workflow Builder.\n          in: query\n          name: step_name\n          schema:\n            type: string\n        - description: An optional field that can be used to override app image that is shown in the Workflow Builder.\n          in: query\n          name: step_image_url\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    ok: true\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_true\"\n                required:\n                  - ok\n                title: Default success template\n                type: object\n          description: Typical success response\n        default:\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    error: invalid_auth\n                    ok: false\n              schema:\n                additionalProperties: true\n                description: This method either only returns a brief _not OK_ response or a verbose schema is not available for this method.\n                properties:\n                  ok:\n                    $ref: \"#/components/schemas/defs_ok_false\"\n                required:\n                  - ok\n                title: Default error template\n                type: object\n          description: Typical error response\n      security:\n        - slackAuth:\n            - workflow.steps:execute\n      tags:\n        - workflows\ncomponents:\n  requestBodies:\n    admin_inviteRequests_approve:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            properties:\n              invite_request_id:\n                description: ID of the request to invite.\n                type: string\n              team_id:\n                description: ID for the workspace where the invite request was made.\n                type: string\n            required:\n              - invite_request_id\n            type: object\n  schemas:\n    blocks:\n      description: This is a very loose definition, in the future, we'll populate this with deeper schema in this definition namespace.\n      items:\n        additionalProperties: true\n        properties:\n          type:\n            type: string\n        required:\n          - type\n        type: object\n      title: Block Kit blocks\n      type: array\n    defs_app_id:\n      pattern: ^A[A-Z0-9]{1,}$\n      title: App ID\n      type: string\n    defs_bot_id:\n      pattern: ^B[A-Z0-9]{8,}$\n      title: Bot User ID\n      type: string\n    defs_channel:\n      pattern: ^[CGD][A-Z0-9]{8,}$\n      title: Channel-like conversation ID\n      type: string\n    defs_channel_id:\n      pattern: ^[C][A-Z0-9]{2,}$\n      title: Channel ID\n      type: string\n    defs_channel_name:\n      title: Name of a channel\n      type: string\n    defs_comment_id:\n      pattern: ^Fc[A-Z0-9]{8,}$\n      title: File Comment ID\n      type: string\n    defs_dm_id:\n      pattern: ^[D][A-Z0-9]{8,}$\n      title: Direct Message Channel ID\n      type: string\n    defs_enterprise_id:\n      pattern: ^[E][A-Z0-9]{8,}$\n      title: Enterprise ID\n      type: string\n    defs_enterprise_name:\n      title: Name of the enterprise org\n      type: string\n    defs_enterprise_user_id:\n      pattern: ^[WU][A-Z0-9]{8,}$\n      title: Enterprise User ID\n      type: string\n    defs_file_id:\n      pattern: ^[F][A-Z0-9]{8,}$\n      title: File ID\n      type: string\n    defs_group_id:\n      pattern: ^[G][A-Z0-9]{8,}$\n      title: Private Channel ID\n      type: string\n    defs_ok_false:\n      enum:\n        - false\n      title: default failure response\n      type: boolean\n    defs_ok_true:\n      enum:\n        - true\n      title: default success response\n      type: boolean\n    defs_optional_app_id:\n      pattern: ^(A[A-Z0-9]{1,})?$\n      title: App ID or empty string\n      type: string\n    defs_pinned_info:\n      additionalProperties: false\n      title: Info for a pinned item\n      type: object\n    defs_reminder_id:\n      pattern: ^Rm[A-Z0-9]{8,}$\n      title: Reminder ID\n      type: string\n    defs_subteam_id:\n      pattern: ^S[A-Z0-9]{2,}$\n      title: Subteam ID\n      type: string\n    defs_team:\n      pattern: ^[T][A-Z0-9]{2,}$\n      title: Team ID\n      type: string\n    defs_topic_purpose_creator:\n      pattern: ^[UW][A-Z0-9]{8,}$|^$\n      title: User ID or empty string, used for topic and purpose creation\n      type: string\n    defs_ts:\n      pattern: ^\\d{10}\\.\\d{6}$\n      title: Timestamp in format 0123456789.012345\n      type: string\n    defs_user_id:\n      pattern: ^[UW][A-Z0-9]{2,}$\n      title: User ID\n      type: string\n    defs_workspace_id:\n      pattern: ^[TE][A-Z0-9]{8,}$\n      title: Team or Enterprise ID\n      type: string\n    objs_bot_profile:\n      additionalProperties: false\n      properties:\n        app_id:\n          $ref: \"#/components/schemas/defs_app_id\"\n        deleted:\n          type: boolean\n        icons:\n          additionalProperties: false\n          properties:\n            image_36:\n              format: uri\n              type: string\n            image_48:\n              format: uri\n              type: string\n            image_72:\n              format: uri\n              type: string\n          required:\n            - image_36\n            - image_48\n            - image_72\n          type: object\n        id:\n          $ref: \"#/components/schemas/defs_bot_id\"\n        name:\n          type: string\n        team_id:\n          $ref: \"#/components/schemas/defs_team\"\n        updated:\n          type: integer\n      required:\n        - id\n        - deleted\n        - name\n        - updated\n        - app_id\n        - icons\n        - team_id\n      title: Bot Profile Object\n      type: object\n    objs_channel:\n      additionalProperties: false\n      properties:\n        accepted_user:\n          $ref: \"#/components/schemas/defs_user_id\"\n        created:\n          type: integer\n        creator:\n          $ref: \"#/components/schemas/defs_user_id\"\n        id:\n          $ref: \"#/components/schemas/defs_channel_id\"\n        is_archived:\n          type: boolean\n        is_channel:\n          type: boolean\n        is_frozen:\n          type: boolean\n        is_general:\n          type: boolean\n        is_member:\n          type: boolean\n        is_moved:\n          type: integer\n        is_mpim:\n          type: boolean\n        is_non_threadable:\n          type: boolean\n        is_org_shared:\n          type: boolean\n        is_pending_ext_shared:\n          type: boolean\n        is_private:\n          type: boolean\n        is_read_only:\n          type: boolean\n        is_shared:\n          type: boolean\n        is_thread_only:\n          type: boolean\n        last_read:\n          $ref: \"#/components/schemas/defs_ts\"\n        latest:\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/objs_message\"\n              - nullable: true\n        members:\n          items:\n            $ref: \"#/components/schemas/defs_user_id\"\n          minItems: 0\n          type: array\n          uniqueItems: true\n        name:\n          type: string\n        name_normalized:\n          type: string\n        num_members:\n          type: integer\n        pending_shared:\n          items:\n            $ref: \"#/components/schemas/defs_team\"\n          minItems: 0\n          type: array\n          uniqueItems: true\n        previous_names:\n          items:\n            $ref: \"#/components/schemas/defs_channel_name\"\n          minItems: 0\n          type: array\n          uniqueItems: true\n        priority:\n          type: number\n        purpose:\n          additionalProperties: false\n          properties:\n            creator:\n              $ref: \"#/components/schemas/defs_topic_purpose_creator\"\n            last_set:\n              type: integer\n            value:\n              type: string\n          required:\n            - value\n            - creator\n            - last_set\n          type: object\n        topic:\n          additionalProperties: false\n          properties:\n            creator:\n              $ref: \"#/components/schemas/defs_topic_purpose_creator\"\n            last_set:\n              type: integer\n            value:\n              type: string\n          required:\n            - value\n            - creator\n            - last_set\n          type: object\n        unlinked:\n          title: Field to determine whether a channel has ever been shared/disconnected in the past\n          type: integer\n        unread_count:\n          type: integer\n        unread_count_display:\n          type: integer\n      required:\n        - id\n        - name\n        - created\n        - creator\n        - is_channel\n        - is_org_shared\n        - is_private\n        - is_mpim\n        - is_shared\n        - name_normalized\n        - members\n        - topic\n        - purpose\n      title: Channel Object\n      type: object\n    objs_comment:\n      additionalProperties: false\n      properties:\n        comment:\n          type: string\n        created:\n          type: integer\n        id:\n          $ref: \"#/components/schemas/defs_comment_id\"\n        is_intro:\n          type: boolean\n        is_starred:\n          type: boolean\n        num_stars:\n          type: integer\n        pinned_info:\n          $ref: \"#/components/schemas/defs_pinned_info\"\n        pinned_to:\n          items:\n            $ref: \"#/components/schemas/defs_channel\"\n          type: array\n        reactions:\n          items:\n            $ref: \"#/components/schemas/objs_reaction\"\n          type: array\n        timestamp:\n          type: integer\n        user:\n          $ref: \"#/components/schemas/defs_user_id\"\n      required:\n        - id\n        - created\n        - timestamp\n        - user\n        - is_intro\n        - comment\n      title: File Comment Object\n      type: object\n    objs_comments:\n      items: {}\n      title: file comments object\n      type: array\n    objs_conversation:\n      items:\n        anyOf:\n          - additionalProperties: false\n            properties:\n              accepted_user:\n                $ref: \"#/components/schemas/defs_user_id\"\n              connected_team_ids:\n                items:\n                  $ref: \"#/components/schemas/defs_workspace_id\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              conversation_host_id:\n                $ref: \"#/components/schemas/defs_workspace_id\"\n              created:\n                type: integer\n              creator:\n                $ref: \"#/components/schemas/defs_user_id\"\n              display_counts:\n                additionalProperties: false\n                properties:\n                  display_counts:\n                    type: integer\n                  guest_counts:\n                    type: integer\n                required:\n                  - display_counts\n                  - guest_counts\n                type: object\n              enterprise_id:\n                $ref: \"#/components/schemas/defs_enterprise_id\"\n              has_pins:\n                type: boolean\n              id:\n                $ref: \"#/components/schemas/defs_channel\"\n              internal_team_ids:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              is_archived:\n                type: boolean\n              is_channel:\n                type: boolean\n              is_ext_shared:\n                type: boolean\n              is_frozen:\n                type: boolean\n              is_general:\n                type: boolean\n              is_global_shared:\n                type: boolean\n              is_group:\n                type: boolean\n              is_im:\n                type: boolean\n              is_member:\n                type: boolean\n              is_moved:\n                type: integer\n              is_mpim:\n                enum:\n                  - false\n                type: boolean\n              is_non_threadable:\n                type: boolean\n              is_open:\n                type: boolean\n              is_org_default:\n                type: boolean\n              is_org_mandatory:\n                type: boolean\n              is_org_shared:\n                type: boolean\n              is_pending_ext_shared:\n                type: boolean\n              is_private:\n                type: boolean\n              is_read_only:\n                type: boolean\n              is_shared:\n                type: boolean\n              is_starred:\n                type: boolean\n              is_thread_only:\n                type: boolean\n              last_read:\n                $ref: \"#/components/schemas/defs_ts\"\n              latest:\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/objs_message\"\n                    - nullable: true\n              members:\n                items:\n                  $ref: \"#/components/schemas/defs_user_id\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              name:\n                type: string\n              name_normalized:\n                type: string\n              num_members:\n                type: integer\n              parent_conversation:\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/defs_channel\"\n                    - nullable: true\n              pending_connected_team_ids:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              pending_shared:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              pin_count:\n                type: integer\n              previous_names:\n                items:\n                  $ref: \"#/components/schemas/defs_channel_name\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              priority:\n                type: number\n              purpose:\n                additionalProperties: false\n                properties:\n                  creator:\n                    $ref: \"#/components/schemas/defs_topic_purpose_creator\"\n                  last_set:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - value\n                  - creator\n                  - last_set\n                type: object\n              shared_team_ids:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              shares:\n                items:\n                  additionalProperties: false\n                  properties:\n                    accepted_user:\n                      $ref: \"#/components/schemas/defs_user_id\"\n                    is_active:\n                      type: boolean\n                    team:\n                      $ref: \"#/components/schemas/objs_team\"\n                    user:\n                      $ref: \"#/components/schemas/defs_user_id\"\n                  required:\n                    - team\n                    - user\n                    - is_active\n                  type: object\n                minItems: 0\n                type: array\n                uniqueItems: true\n              timezone_count:\n                type: integer\n              topic:\n                additionalProperties: false\n                properties:\n                  creator:\n                    $ref: \"#/components/schemas/defs_topic_purpose_creator\"\n                  last_set:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - value\n                  - creator\n                  - last_set\n                type: object\n              unlinked:\n                title: Field to determine whether a channel has ever been shared/disconnected in the past\n                type: integer\n              unread_count:\n                type: integer\n              unread_count_display:\n                type: integer\n              use_case:\n                type: string\n              user:\n                $ref: \"#/components/schemas/defs_user_id\"\n              version:\n                type: integer\n            required:\n              - id\n              - name\n              - created\n              - creator\n              - is_archived\n              - is_channel\n              - is_general\n              - is_mpim\n              - is_group\n              - is_org_shared\n              - is_im\n              - is_shared\n              - is_private\n              - name_normalized\n              - topic\n              - purpose\n            title: Conversation object\n            type: object\n          - additionalProperties: false\n            properties:\n              accepted_user:\n                $ref: \"#/components/schemas/defs_user_id\"\n              connected_team_ids:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              conversation_host_id:\n                $ref: \"#/components/schemas/defs_workspace_id\"\n              created:\n                type: integer\n              creator:\n                $ref: \"#/components/schemas/defs_user_id\"\n              display_counts:\n                additionalProperties: false\n                properties:\n                  display_counts:\n                    type: integer\n                  guest_counts:\n                    type: integer\n                required:\n                  - display_counts\n                  - guest_counts\n                type: object\n              id:\n                $ref: \"#/components/schemas/defs_channel\"\n              internal_team_ids:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              is_archived:\n                type: boolean\n              is_channel:\n                type: boolean\n              is_ext_shared:\n                type: boolean\n              is_frozen:\n                type: boolean\n              is_general:\n                type: boolean\n              is_group:\n                type: boolean\n              is_im:\n                type: boolean\n              is_member:\n                type: boolean\n              is_moved:\n                type: integer\n              is_mpim:\n                enum:\n                  - true\n                type: boolean\n              is_non_threadable:\n                type: boolean\n              is_open:\n                type: boolean\n              is_org_shared:\n                type: boolean\n              is_pending_ext_shared:\n                type: boolean\n              is_private:\n                type: boolean\n              is_read_only:\n                type: boolean\n              is_shared:\n                type: boolean\n              is_starred:\n                type: boolean\n              is_thread_only:\n                type: boolean\n              last_read:\n                $ref: \"#/components/schemas/defs_ts\"\n              latest:\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/objs_message\"\n                    - nullable: true\n              members:\n                items:\n                  $ref: \"#/components/schemas/defs_user_id\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              name:\n                type: string\n              name_normalized:\n                type: string\n              num_members:\n                type: integer\n              parent_conversation:\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/defs_channel\"\n                    - nullable: true\n              pending_connected_team_ids:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              pending_shared:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              pin_count:\n                type: integer\n              previous_names:\n                items:\n                  $ref: \"#/components/schemas/defs_channel_name\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              priority:\n                type: number\n              purpose:\n                additionalProperties: false\n                properties:\n                  creator:\n                    $ref: \"#/components/schemas/defs_topic_purpose_creator\"\n                  last_set:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - value\n                  - creator\n                  - last_set\n                type: object\n              shared_team_ids:\n                items:\n                  $ref: \"#/components/schemas/defs_team\"\n                minItems: 0\n                type: array\n                uniqueItems: true\n              shares:\n                items:\n                  additionalProperties: false\n                  properties:\n                    accepted_user:\n                      $ref: \"#/components/schemas/defs_user_id\"\n                    is_active:\n                      type: boolean\n                    team:\n                      $ref: \"#/components/schemas/objs_team\"\n                    user:\n                      $ref: \"#/components/schemas/defs_user_id\"\n                  required:\n                    - team\n                    - user\n                    - is_active\n                  type: object\n                minItems: 0\n                type: array\n                uniqueItems: true\n              timezone_count:\n                type: integer\n              topic:\n                additionalProperties: false\n                properties:\n                  creator:\n                    $ref: \"#/components/schemas/defs_topic_purpose_creator\"\n                  last_set:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - value\n                  - creator\n                  - last_set\n                type: object\n              unlinked:\n                title: Field to determine whether a channel has ever been shared/disconnected in the past\n                type: integer\n              unread_count:\n                type: integer\n              unread_count_display:\n                type: integer\n              user:\n                $ref: \"#/components/schemas/defs_user_id\"\n              version:\n                type: integer\n            required:\n              - id\n              - name\n              - created\n              - creator\n              - is_archived\n              - is_channel\n              - is_general\n              - is_mpim\n              - is_group\n              - is_org_shared\n              - is_im\n              - is_shared\n              - is_private\n              - name_normalized\n              - topic\n              - purpose\n            title: Conversation MPIM Object\n            type: object\n          - additionalProperties: false\n            properties:\n              created:\n                type: integer\n              has_pins:\n                type: boolean\n              id:\n                $ref: \"#/components/schemas/defs_dm_id\"\n              is_archived:\n                type: boolean\n              is_ext_shared:\n                type: boolean\n              is_frozen:\n                type: boolean\n              is_im:\n                type: boolean\n              is_open:\n                type: boolean\n              is_org_shared:\n                type: boolean\n              is_shared:\n                type: boolean\n              is_starred:\n                type: boolean\n              is_user_deleted:\n                type: boolean\n              last_read:\n                $ref: \"#/components/schemas/defs_ts\"\n              latest:\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/objs_message\"\n                    - nullable: true\n              parent_conversation:\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/defs_channel\"\n                    - nullable: true\n              pin_count:\n                type: integer\n              priority:\n                type: number\n              shares:\n                items:\n                  additionalProperties: false\n                  properties:\n                    date_create:\n                      type: integer\n                    id:\n                      $ref: \"#/components/schemas/defs_team\"\n                    is_active:\n                      type: boolean\n                    name:\n                      type: string\n                    team:\n                      $ref: \"#/components/schemas/objs_team\"\n                  required:\n                    - id\n                    - name\n                    - team\n                    - date_create\n                    - is_active\n                  type: object\n                minItems: 0\n                type: array\n                uniqueItems: true\n              unread_count:\n                type: integer\n              unread_count_display:\n                type: integer\n              user:\n                $ref: \"#/components/schemas/defs_user_id\"\n              version:\n                type: integer\n            required:\n              - id\n              - created\n              - is_im\n              - is_org_shared\n              - user\n              - priority\n            title: Conversation IM Channel Object from conversations.* methods\n            type: object\n    objs_enterprise_user:\n      additionalProperties: false\n      properties:\n        enterprise_id:\n          $ref: \"#/components/schemas/defs_enterprise_id\"\n        enterprise_name:\n          $ref: \"#/components/schemas/defs_enterprise_name\"\n        id:\n          $ref: \"#/components/schemas/defs_enterprise_user_id\"\n        is_admin:\n          type: boolean\n        is_owner:\n          type: boolean\n        teams:\n          items:\n            $ref: \"#/components/schemas/defs_team\"\n          type: array\n          uniqueItems: true\n      required:\n        - id\n        - enterprise_id\n        - enterprise_name\n        - is_admin\n        - is_owner\n        - teams\n      type: object\n    objs_external_org_migrations:\n      properties:\n        current:\n          items:\n            properties:\n              date_started:\n                type: integer\n              team_id:\n                type: string\n            required:\n              - team_id\n              - date_started\n            type: object\n          type: array\n        date_updated:\n          type: integer\n      required:\n        - date_updated\n        - current\n      title: External Org Migrations\n      type: object\n    objs_file:\n      additionalProperties: false\n      properties:\n        channels:\n          items:\n            $ref: \"#/components/schemas/defs_channel_id\"\n          type: array\n          uniqueItems: true\n        comments_count:\n          type: integer\n        created:\n          type: integer\n        date_delete:\n          type: integer\n        display_as_bot:\n          type: boolean\n        editable:\n          type: boolean\n        editor:\n          $ref: \"#/components/schemas/defs_user_id\"\n        external_id:\n          type: string\n        external_type:\n          type: string\n        external_url:\n          format: uri\n          type: string\n        filetype:\n          type: string\n        groups:\n          items:\n            $ref: \"#/components/schemas/defs_group_id\"\n          type: array\n          uniqueItems: true\n        has_rich_preview:\n          type: boolean\n        id:\n          $ref: \"#/components/schemas/defs_file_id\"\n        image_exif_rotation:\n          type: integer\n        ims:\n          items:\n            $ref: \"#/components/schemas/defs_dm_id\"\n          type: array\n          uniqueItems: true\n        is_external:\n          type: boolean\n        is_public:\n          type: boolean\n        is_starred:\n          type: boolean\n        is_tombstoned:\n          type: boolean\n        last_editor:\n          $ref: \"#/components/schemas/defs_user_id\"\n        mimetype:\n          type: string\n        mode:\n          type: string\n        name:\n          type: string\n        non_owner_editable:\n          type: boolean\n        num_stars:\n          type: integer\n        original_h:\n          type: integer\n        original_w:\n          type: integer\n        permalink:\n          format: uri\n          type: string\n        permalink_public:\n          format: uri\n          type: string\n        pinned_info:\n          $ref: \"#/components/schemas/defs_pinned_info\"\n        pinned_to:\n          items:\n            $ref: \"#/components/schemas/defs_channel\"\n          type: array\n        pretty_type:\n          type: string\n        preview:\n          type: string\n        public_url_shared:\n          type: boolean\n        reactions:\n          items:\n            $ref: \"#/components/schemas/objs_reaction\"\n          type: array\n        shares:\n          additionalProperties: false\n          properties:\n            private:\n              additionalProperties: false\n            public:\n              additionalProperties: false\n          type: object\n        size:\n          type: integer\n        source_team:\n          $ref: \"#/components/schemas/defs_team\"\n        state:\n          type: string\n        thumb_1024:\n          format: uri\n          type: string\n        thumb_1024_h:\n          type: integer\n        thumb_1024_w:\n          type: integer\n        thumb_160:\n          format: uri\n          type: string\n        thumb_360:\n          format: uri\n          type: string\n        thumb_360_h:\n          type: integer\n        thumb_360_w:\n          type: integer\n        thumb_480:\n          format: uri\n          type: string\n        thumb_480_h:\n          type: integer\n        thumb_480_w:\n          type: integer\n        thumb_64:\n          format: uri\n          type: string\n        thumb_720:\n          format: uri\n          type: string\n        thumb_720_h:\n          type: integer\n        thumb_720_w:\n          type: integer\n        thumb_80:\n          format: uri\n          type: string\n        thumb_800:\n          format: uri\n          type: string\n        thumb_800_h:\n          type: integer\n        thumb_800_w:\n          type: integer\n        thumb_960:\n          format: uri\n          type: string\n        thumb_960_h:\n          type: integer\n        thumb_960_w:\n          type: integer\n        thumb_tiny:\n          type: string\n        timestamp:\n          type: integer\n        title:\n          type: string\n        updated:\n          type: integer\n        url_private:\n          format: uri\n          type: string\n        url_private_download:\n          format: uri\n          type: string\n        user:\n          type: string\n        user_team:\n          $ref: \"#/components/schemas/defs_team\"\n        username:\n          type: string\n      title: file object\n      type: object\n    objs_icon:\n      properties:\n        image_102:\n          type: string\n        image_132:\n          type: string\n        image_230:\n          type: string\n        image_34:\n          type: string\n        image_44:\n          type: string\n        image_68:\n          type: string\n        image_88:\n          type: string\n        image_default:\n          type: boolean\n      type: object\n    objs_message:\n      additionalProperties: false\n      properties:\n        attachments:\n          items:\n            additionalProperties: false\n            properties:\n              fallback:\n                type: string\n              id:\n                type: integer\n              image_bytes:\n                type: integer\n              image_height:\n                type: integer\n              image_url:\n                type: string\n              image_width:\n                type: integer\n            required:\n              - id\n            type: object\n          minItems: 1\n          type: array\n          uniqueItems: true\n        blocks:\n          $ref: \"#/components/schemas/blocks\"\n        bot_id:\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/defs_bot_id\"\n              - nullable: true\n                title: Nil bot_id set when display_as_bot is false\n        bot_profile:\n          $ref: \"#/components/schemas/objs_bot_profile\"\n        client_msg_id:\n          type: string\n        comment:\n          $ref: \"#/components/schemas/objs_comment\"\n        display_as_bot:\n          type: boolean\n        file:\n          $ref: \"#/components/schemas/objs_file\"\n        files:\n          items:\n            $ref: \"#/components/schemas/objs_file\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n        icons:\n          additionalProperties: false\n          properties:\n            emoji:\n              type: string\n            image_64:\n              format: uri\n              type: string\n          type: object\n        inviter:\n          $ref: \"#/components/schemas/defs_user_id\"\n        is_delayed_message:\n          type: boolean\n        is_intro:\n          type: boolean\n        is_starred:\n          type: boolean\n        last_read:\n          $ref: \"#/components/schemas/defs_ts\"\n        latest_reply:\n          $ref: \"#/components/schemas/defs_ts\"\n        name:\n          type: string\n        old_name:\n          type: string\n        parent_user_id:\n          $ref: \"#/components/schemas/defs_user_id\"\n        permalink:\n          format: uri\n          type: string\n        pinned_to:\n          items:\n            $ref: \"#/components/schemas/defs_channel\"\n          type: array\n        purpose:\n          type: string\n        reactions:\n          items:\n            $ref: \"#/components/schemas/objs_reaction\"\n          type: array\n        reply_count:\n          type: integer\n        reply_users:\n          items:\n            $ref: \"#/components/schemas/defs_user_id\"\n          minItems: 1\n          type: array\n          uniqueItems: true\n        reply_users_count:\n          type: integer\n        source_team:\n          $ref: \"#/components/schemas/defs_workspace_id\"\n        subscribed:\n          type: boolean\n        subtype:\n          type: string\n        team:\n          $ref: \"#/components/schemas/defs_workspace_id\"\n        text:\n          type: string\n        thread_ts:\n          $ref: \"#/components/schemas/defs_ts\"\n        topic:\n          type: string\n        ts:\n          $ref: \"#/components/schemas/defs_ts\"\n        type:\n          type: string\n        unread_count:\n          type: integer\n        upload:\n          type: boolean\n        user:\n          $ref: \"#/components/schemas/defs_user_id\"\n        user_profile:\n          $ref: \"#/components/schemas/objs_user_profile_short\"\n        user_team:\n          $ref: \"#/components/schemas/defs_workspace_id\"\n        username:\n          type: string\n      required:\n        - text\n        - type\n        - ts\n      title: Message object\n      type: object\n    objs_paging:\n      additionalProperties: false\n      properties:\n        count:\n          type: integer\n        page:\n          type: integer\n        pages:\n          type: integer\n        per_page:\n          type: integer\n        spill:\n          type: integer\n        total:\n          type: integer\n      required:\n        - page\n        - total\n      title: paging object\n      type: object\n    objs_primary_owner:\n      properties:\n        email:\n          type: string\n        id:\n          type: string\n      required:\n        - id\n        - email\n      type: object\n    objs_reaction:\n      additionalProperties: true\n      properties:\n        count:\n          type: integer\n        name:\n          type: string\n        users:\n          items:\n            $ref: \"#/components/schemas/defs_user_id\"\n          type: array\n      required:\n        - name\n        - users\n        - count\n      title: Reaction object\n      type: object\n    objs_reminder:\n      additionalProperties: false\n      properties:\n        complete_ts:\n          type: integer\n        creator:\n          $ref: \"#/components/schemas/defs_user_id\"\n        id:\n          $ref: \"#/components/schemas/defs_reminder_id\"\n        recurring:\n          type: boolean\n        text:\n          type: string\n        time:\n          type: integer\n        user:\n          $ref: \"#/components/schemas/defs_user_id\"\n      required:\n        - id\n        - creator\n        - user\n        - text\n        - recurring\n      type: object\n    objs_resources:\n      additionalProperties: false\n      properties:\n        excluded_ids:\n          items:\n            items:\n              anyOf:\n                - $ref: \"#/components/schemas/defs_channel\"\n                - $ref: \"#/components/schemas/defs_team\"\n          type: array\n        ids:\n          items:\n            items:\n              anyOf:\n                - $ref: \"#/components/schemas/defs_channel\"\n                - $ref: \"#/components/schemas/defs_team\"\n          type: array\n        wildcard:\n          type: boolean\n      required:\n        - ids\n      title: resources in info from apps.permissions.info\n      type: object\n    objs_response_metadata:\n      items:\n        anyOf:\n          - additionalProperties: false\n            properties:\n              next_cursor:\n                type: string\n            required:\n              - next_cursor\n            title: new paging style\n            type: object\n          - additionalProperties: false\n            properties:\n              messages:\n                items:\n                  type: string\n                type: array\n              warnings:\n                items:\n                  enum:\n                    - method_deprecated\n                  type: string\n                type: array\n            required:\n              - messages\n              - warnings\n            title: deprecation_warning\n            type: object\n          - additionalProperties: false\n            properties:\n              messages:\n                items:\n                  type: string\n                type: array\n              next_cursor:\n                type: string\n              warnings:\n                items:\n                  enum:\n                    - method_deprecated\n                  type: string\n                type: array\n            required:\n              - messages\n              - warnings\n              - next_cursor\n            title: deprecation_warning and paging style together\n            type: object\n    objs_scopes:\n      items:\n        title: Named OAuth scopes\n        type: string\n        x-examples:\n          - chat:write\n          - im:history\n          - im:read\n      type: array\n    objs_subteam:\n      additionalProperties: false\n      properties:\n        auto_provision:\n          type: boolean\n        auto_type:\n          items:\n            anyOf:\n              - nullable: true\n              - enum:\n                  - owner\n                  - admin\n                type: string\n        channel_count:\n          type: integer\n        created_by:\n          $ref: \"#/components/schemas/defs_user_id\"\n        date_create:\n          type: integer\n        date_delete:\n          type: integer\n        date_update:\n          type: integer\n        deleted_by:\n          items:\n            anyOf:\n              - nullable: true\n              - $ref: \"#/components/schemas/defs_user_id\"\n        description:\n          type: string\n        enterprise_subteam_id:\n          type: string\n        handle:\n          type: string\n        id:\n          $ref: \"#/components/schemas/defs_subteam_id\"\n        is_external:\n          type: boolean\n        is_subteam:\n          type: boolean\n        is_usergroup:\n          type: boolean\n        name:\n          type: string\n        prefs:\n          additionalProperties: false\n          properties:\n            channels:\n              items:\n                $ref: \"#/components/schemas/defs_channel_id\"\n              type: array\n            groups:\n              items:\n                $ref: \"#/components/schemas/defs_group_id\"\n              type: array\n          required:\n            - channels\n            - groups\n          type: object\n        team_id:\n          $ref: \"#/components/schemas/defs_team\"\n        updated_by:\n          $ref: \"#/components/schemas/defs_user_id\"\n        user_count:\n          type: integer\n        users:\n          items:\n            $ref: \"#/components/schemas/defs_user_id\"\n          type: array\n      required:\n        - id\n        - team_id\n        - is_usergroup\n        - is_subteam\n        - name\n        - description\n        - handle\n        - is_external\n        - date_create\n        - date_update\n        - date_delete\n        - auto_type\n        - auto_provision\n        - enterprise_subteam_id\n        - created_by\n        - updated_by\n        - deleted_by\n        - prefs\n      title: Subteam/Usergroup Object\n      type: object\n    objs_team:\n      additionalProperties: false\n      properties:\n        archived:\n          type: boolean\n        avatar_base_url:\n          format: uri\n          type: string\n        created:\n          type: integer\n        date_create:\n          type: integer\n        deleted:\n          type: boolean\n        description:\n          nullable: true\n          type: string\n        discoverable:\n          items:\n            anyOf:\n              - nullable: true\n              - type: string\n        domain:\n          type: string\n        email_domain:\n          type: string\n        enterprise_id:\n          $ref: \"#/components/schemas/defs_enterprise_id\"\n        enterprise_name:\n          $ref: \"#/components/schemas/defs_enterprise_name\"\n        external_org_migrations:\n          $ref: \"#/components/schemas/objs_external_org_migrations\"\n        has_compliance_export:\n          type: boolean\n        icon:\n          $ref: \"#/components/schemas/objs_icon\"\n        id:\n          $ref: \"#/components/schemas/defs_workspace_id\"\n        is_assigned:\n          type: boolean\n        is_enterprise:\n          type: integer\n        is_over_storage_limit:\n          type: boolean\n        limit_ts:\n          type: integer\n        locale:\n          type: string\n        messages_count:\n          type: integer\n        msg_edit_window_mins:\n          type: integer\n        name:\n          type: string\n        over_integrations_limit:\n          type: boolean\n        over_storage_limit:\n          type: boolean\n        pay_prod_cur:\n          type: string\n        plan:\n          enum:\n            - \"\"\n            - std\n            - plus\n            - compliance\n            - enterprise\n          type: string\n        primary_owner:\n          $ref: \"#/components/schemas/objs_primary_owner\"\n        sso_provider:\n          properties:\n            label:\n              type: string\n            name:\n              type: string\n            type:\n              type: string\n          type: object\n      required:\n        - id\n        - name\n        - domain\n        - email_domain\n        - icon\n      title: Team Object\n      type: object\n    objs_team_profile_field:\n      additionalProperties: false\n      properties:\n        field_name:\n          nullable: true\n          type: string\n        hint:\n          type: string\n        id:\n          pattern: ^X[a-zA-Z0-9]{9,}$\n          type: string\n        is_hidden:\n          type: boolean\n        label:\n          type: string\n        options:\n          items:\n            anyOf:\n              - nullable: true\n              - $ref: \"#/components/schemas/objs_team_profile_field_option\"\n        ordering:\n          type: number\n        possible_values:\n          items:\n            type: string\n          nullable: true\n          type: array\n        type:\n          enum:\n            - text\n            - date\n            - link\n            - mailto\n            - options_list\n            - user\n          type: string\n      required:\n        - id\n        - ordering\n        - label\n        - hint\n        - type\n      type: object\n    objs_team_profile_field_option:\n      additionalProperties: false\n      properties:\n        is_custom:\n          nullable: true\n          type: boolean\n        is_multiple_entry:\n          nullable: true\n          type: boolean\n        is_protected:\n          nullable: true\n          type: boolean\n        is_scim:\n          nullable: true\n          type: boolean\n      type: object\n    objs_user:\n      items:\n        anyOf:\n          - additionalProperties: false\n            description: user object for non enterprise type\n            properties:\n              color:\n                pattern: ^[a-fA-F0-9]{6}$\n                type: string\n              deleted:\n                type: boolean\n              enterprise_user:\n                $ref: \"#/components/schemas/objs_enterprise_user\"\n              has_2fa:\n                type: boolean\n              id:\n                $ref: \"#/components/schemas/defs_user_id\"\n              is_admin:\n                type: boolean\n              is_app_user:\n                type: boolean\n              is_bot:\n                type: boolean\n              is_external:\n                type: boolean\n              is_forgotten:\n                type: boolean\n              is_invited_user:\n                type: boolean\n              is_owner:\n                type: boolean\n              is_primary_owner:\n                type: boolean\n              is_restricted:\n                type: boolean\n              is_stranger:\n                type: boolean\n              is_ultra_restricted:\n                type: boolean\n              locale:\n                type: string\n              name:\n                type: string\n              presence:\n                type: string\n              profile:\n                $ref: \"#/components/schemas/objs_user_profile\"\n              real_name:\n                type: string\n              team:\n                $ref: \"#/components/schemas/defs_workspace_id\"\n              team_id:\n                $ref: \"#/components/schemas/defs_workspace_id\"\n              team_profile:\n                additionalProperties: false\n                properties:\n                  fields:\n                    items:\n                      $ref: \"#/components/schemas/objs_team_profile_field\"\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - fields\n                type: object\n              two_factor_type:\n                type: string\n              tz:\n                items:\n                  anyOf:\n                    - nullable: true\n                    - type: string\n              tz_label:\n                type: string\n              tz_offset:\n                type: number\n              updated:\n                type: number\n            required:\n              - id\n              - name\n              - profile\n              - is_bot\n              - updated\n              - is_app_user\n            type: object\n          - additionalProperties: false\n            description: enterprise user\n            properties:\n              color:\n                description: \"refercing to bug: https://jira.tinyspeck.com/browse/EVALUE-1559\"\n                pattern: ^([a-fA-F0-9]{6})?$\n                type: string\n              deleted:\n                type: boolean\n              enterprise_user:\n                $ref: \"#/components/schemas/objs_enterprise_user\"\n              has_2fa:\n                type: boolean\n              id:\n                $ref: \"#/components/schemas/defs_user_id\"\n              is_admin:\n                type: boolean\n              is_app_user:\n                type: boolean\n              is_bot:\n                type: boolean\n              is_external:\n                type: boolean\n              is_forgotten:\n                type: boolean\n              is_owner:\n                type: boolean\n              is_primary_owner:\n                type: boolean\n              is_restricted:\n                type: boolean\n              is_stranger:\n                type: boolean\n              is_ultra_restricted:\n                type: boolean\n              locale:\n                type: string\n              name:\n                type: string\n              presence:\n                type: string\n              profile:\n                $ref: \"#/components/schemas/objs_user_profile\"\n              real_name:\n                type: string\n              team_id:\n                $ref: \"#/components/schemas/defs_workspace_id\"\n              team_profile:\n                additionalProperties: false\n                properties:\n                  fields:\n                    items:\n                      $ref: \"#/components/schemas/objs_team_profile_field\"\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - fields\n                type: object\n              teams:\n                items:\n                  $ref: \"#/components/schemas/defs_workspace_id\"\n                minItems: 1\n                type: array\n                uniqueItems: true\n              two_factor_type:\n                type: string\n              tz:\n                items:\n                  anyOf:\n                    - nullable: true\n                    - type: string\n              tz_label:\n                type: string\n              tz_offset:\n                type: number\n              updated:\n                type: number\n            required:\n              - id\n              - name\n              - profile\n              - is_bot\n              - updated\n              - is_app_user\n            type: object\n    objs_user_profile:\n      additionalProperties: false\n      properties:\n        always_active:\n          type: boolean\n        api_app_id:\n          $ref: \"#/components/schemas/defs_optional_app_id\"\n        avatar_hash:\n          type: string\n        bot_id:\n          $ref: \"#/components/schemas/defs_bot_id\"\n        display_name:\n          type: string\n        display_name_normalized:\n          type: string\n        email:\n          format: email\n          nullable: true\n          type: string\n        fields:\n          items:\n            type: object\n          nullable: true\n          oneOf:\n            - type: object\n            - items: {}\n              type: array\n        first_name:\n          nullable: true\n          type: string\n        guest_expiration_ts:\n          nullable: true\n          type: integer\n        guest_invited_by:\n          nullable: true\n          type: string\n        image_1024:\n          format: uri\n          nullable: true\n          type: string\n        image_192:\n          format: uri\n          nullable: true\n          type: string\n        image_24:\n          format: uri\n          nullable: true\n          type: string\n        image_32:\n          format: uri\n          nullable: true\n          type: string\n        image_48:\n          format: uri\n          nullable: true\n          type: string\n        image_512:\n          format: uri\n          nullable: true\n          type: string\n        image_72:\n          format: uri\n          nullable: true\n          type: string\n        image_original:\n          format: uri\n          nullable: true\n          type: string\n        is_app_user:\n          type: boolean\n        is_custom_image:\n          type: boolean\n        is_restricted:\n          nullable: true\n          type: boolean\n        is_ultra_restricted:\n          nullable: true\n          type: boolean\n        last_avatar_image_hash:\n          type: string\n        last_name:\n          nullable: true\n          type: string\n        memberships_count:\n          type: integer\n        name:\n          nullable: true\n          type: string\n        phone:\n          type: string\n        pronouns:\n          type: string\n        real_name:\n          type: string\n        real_name_normalized:\n          type: string\n        skype:\n          type: string\n        status_default_emoji:\n          type: string\n        status_default_text:\n          type: string\n        status_default_text_canonical:\n          nullable: true\n          type: string\n        status_emoji:\n          type: string\n        status_expiration:\n          type: integer\n        status_text:\n          type: string\n        status_text_canonical:\n          nullable: true\n          type: string\n        team:\n          $ref: \"#/components/schemas/defs_workspace_id\"\n        title:\n          type: string\n        updated:\n          type: integer\n        user_id:\n          type: string\n        username:\n          nullable: true\n          type: string\n      required:\n        - real_name\n        - display_name\n        - avatar_hash\n        - real_name_normalized\n        - display_name_normalized\n        - title\n        - phone\n        - skype\n        - status_text\n        - status_emoji\n        - fields\n      title: User profile object\n      type: object\n    objs_user_profile_short:\n      additionalProperties: false\n      properties:\n        avatar_hash:\n          type: string\n        display_name:\n          type: string\n        display_name_normalized:\n          type: string\n        first_name:\n          nullable: true\n          type: string\n        image_72:\n          format: uri\n          type: string\n        is_restricted:\n          type: boolean\n        is_ultra_restricted:\n          type: boolean\n        name:\n          type: string\n        real_name:\n          type: string\n        real_name_normalized:\n          type: string\n        team:\n          $ref: \"#/components/schemas/defs_workspace_id\"\n      required:\n        - avatar_hash\n        - image_72\n        - first_name\n        - real_name\n        - display_name\n        - team\n        - name\n        - is_restricted\n        - is_ultra_restricted\n      type: object\n  securitySchemes:\n    slackAuth:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://slack.com/oauth/authorize\n          scopes:\n            admin: admin\n            admin.apps:read: admin.apps:read\n            admin.apps:write: admin.apps:write\n            admin.conversations:read: admin.conversations:read\n            admin.conversations:write: admin.conversations:write\n            admin.invites:read: admin.invites:read\n            admin.invites:write: admin.invites:write\n            admin.teams:read: admin.teams:read\n            admin.teams:write: admin.teams:write\n            admin.usergroups:read: admin.usergroups:read\n            admin.usergroups:write: admin.usergroups:write\n            admin.users:read: admin.users:read\n            admin.users:write: admin.users:write\n            authorizations:read: authorizations:read\n            bot: Bot user scope\n            calls:read: calls:read\n            calls:write: calls:write\n            channels:history: channels:history\n            channels:manage: channels:manage\n            channels:read: channels:read\n            channels:write: channels:write\n            chat:write: chat:write\n            chat:write:bot: Author messages as a bot\n            chat:write:user: Author messages as a user\n            conversations:history: conversations:history\n            conversations:read: conversations:read\n            conversations:write: conversations:write\n            dnd:read: dnd:read\n            dnd:write: dnd:write\n            emoji:read: emoji:read\n            files:read: files:read\n            files:write:user: files:write:user\n            groups:history: groups:history\n            groups:read: groups:read\n            groups:write: groups:write\n            identity.basic: identity.basic\n            im:history: im:history\n            im:read: im:read\n            im:write: im:write\n            links:write: links:write\n            mpim:history: mpim:history\n            mpim:read: mpim:read\n            mpim:write: mpim:write\n            none: No scope required\n            pins:read: pins:read\n            pins:write: pins:write\n            reactions:read: reactions:read\n            reactions:write: reactions:write\n            reminders:read: reminders:read\n            reminders:write: reminders:write\n            remote_files:read: remote_files:read\n            remote_files:share: remote_files:share\n            remote_files:write: remote_files:write\n            rtm:stream: rtm:stream\n            search:read: search:read\n            stars:read: stars:read\n            stars:write: stars:write\n            team:read: team:read\n            tokens.basic: tokens.basic\n            usergroups:read: usergroups:read\n            usergroups:write: usergroups:write\n            users.profile:read: users.profile:read\n            users.profile:write: users.profile:write\n            users:read: users:read\n            users:read.email: users:read.email\n            users:write: users:write\n            workflow.steps:execute: workflow.steps:execute\n          tokenUrl: https://slack.com/api/oauth.access\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@297a6aabc26a26ce6a88a81c8a82120430c15265/-/blob/APIs/slack.com/1.7.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/297a6aabc26a26ce6a88a81c8a82120430c15265/APIs/slack.com/1.7.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/reactions.get\": get: operation \"reactions_get\": responses: 200: content: application/json: schema: at 1:342972: parse schema: object cannot contain 'items' field"
}