{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cc32d9/wax2.1"
		},
		"file": {
			"name": "producer.swagger.yaml",
			"size": 0,
			"path": "plugins/producer_api_plugin/producer.swagger.yaml",
			"byteSize": 16646,
			"content": "openapi: 3.0.0\ninfo:\n  title: Producer API\n  version: 1.0.0\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  contact:\n    url: https://eos.io\ntags:\n  - name: eosio\nservers:\n  - url: \"{protocol}://{host}:{port}/v1/\"\n    variables:\n      protocol:\n        enum:\n          - http\n          - https\n        default: http\n      host:\n        default: localhost\n      port:\n        default: \"8080\"\ncomponents:\n  securitySchemes: {}\n  schemas: {}\nsecurity:\n  - {}\npaths:\n  /producer/pause:\n    post:\n      summary: pause\n      description: Pause producer node\n      operationId: pause\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: \"returns status\"\n  /producer/resume:\n    post:\n      summary: resume\n      description: Resume producer node\n      operationId: resume\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Resumes activity for producer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: Returns Nothing\n  /producer/paused:\n    post:\n      summary: paused\n      description: Retreives paused status for producer node\n      operationId: paused\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: True if producer is paused, false otherwise\n  /producer/get_runtime_options:\n    post:\n      summary: get_runtime_options\n      description: Retreives run time options for producer node\n      operationId: get_runtime_options\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Returns run time options set for the producer\n                properties:\n                  max_transaction_time:\n                    type: integer\n                    description: Max transaction time\n                  max_irreversible_block_age:\n                    type: integer\n                    description: Max irreversible block age\n                  produce_time_offset_us:\n                    type: integer\n                    description: Time offset\n                  last_block_time_offset_us:\n                    type: integer\n                    description: Last block time offset\n                  max_scheduled_transaction_time_per_block_ms:\n                    type: integer\n                    description: Max scheduled transaction time per block in ms\n                  subjective_cpu_leeway_us:\n                    type: integer\n                    description: Subjective CPU leeway\n                  incoming_defer_ratio:\n                    type: integer\n                    description: Incoming defer ration\n  /producer/update_runtime_options:\n    post:\n      summary: update_runtime_options\n      description: Update run time options for producer node\n      operationId: update_runtime_options\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - options\n              properties:\n                options:\n                  type: object\n                  description: Defines the run time options to set for the producer\n                  properties:\n                    max_transaction_time:\n                      type: integer\n                      description: Max transaction time\n                    max_irreversible_block_age:\n                      type: integer\n                      description: Max irreversible block age\n                    produce_time_offset_us:\n                      type: integer\n                      description: Time offset\n                    last_block_time_offset_us:\n                      type: integer\n                      description: Last block time offset\n                    max_scheduled_transaction_time_per_block_ms:\n                      type: integer\n                      description: Max scheduled transaction time per block in ms\n                    subjective_cpu_leeway_us:\n                      type: integer\n                      description: Subjective CPU leeway\n                    incoming_defer_ratio:\n                      type: integer\n                      description: Incoming defer ration\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: Returns Nothing\n  /producer/get_greylist:\n    post:\n      summary: get_greylist\n      description: Retreives the greylist for producer node\n      operationId: get_greylist\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                description: List of account names stored in the greylist\n                items:\n                  $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n\n  /producer/add_greylist_accounts:\n    post:\n      summary: add_greylist_accounts\n      description: Adds accounts to grey list for producer node\n      operationId: add_greylist_accounts\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - params\n              properties:\n                params:\n                  type: object\n                  properties:\n                    accounts:\n                      type: array\n                      description: List of account names to add\n                      items:\n                        $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: Returns Nothing\n  /producer/remove_greylist_accounts:\n    post:\n      summary: remove_greylist_accounts\n      description: Removes accounts from greylist for producer node\n      operationId: remove_greylist_accounts\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - params\n              properties:\n                params:\n                  type: object\n                  properties:\n                    accounts:\n                      type: array\n                      description: List of account names to remove\n                      items:\n                        $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                description: List of account names stored in the greylist\n                items:\n                  $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n\n  /producer/get_whitelist_blacklist:\n    post:\n      summary: get_whitelist_blacklist\n      description: Retreives the white list and black list for producer node\n      operationId: get_whitelist_blacklist\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Defines the actor whitelist and blacklist, the contract whitelist and blacklist, the action blacklist and key blacklist\n                properties:\n                  actor_whitelist:\n                    type: array\n                    items:\n                      $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                  actor_blacklist:\n                    type: array\n                    items:\n                      $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                  contract_whitelist:\n                    type: array\n                    items:\n                      $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                  contract_blacklist:\n                    type: array\n                    items:\n                      $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                  action_blacklist:\n                    type: array\n                    items:\n                      type: array\n                      description: Array of two string values, the account name as the first and action name as the second\n                      items:\n                        allOf:\n                          - $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                          - $ref: \"https://eosio.github.io/schemata/v2.1/oas/CppSignature.yaml\"\n                  key_blacklist:\n                    type: array\n                    items:\n                      $ref: \"https://eosio.github.io/schemata/v2.1/oas/KeyType.yaml\"\n\n  /producer/set_whitelist_blacklist:\n    post:\n      summary: set_whitelist_blacklist\n      description: Sets the white list and black list for producer node\n      operationId: set_whitelist_blacklist\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - params\n              properties:\n                params:\n                  type: object\n                  description: Defines the actor whitelist and blacklist, the contract whitelist and blacklist, the action blacklist and key blacklist\n                  properties:\n                    actor_whitelist:\n                      type: array\n                      items:\n                        $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                    actor_blacklist:\n                      type: array\n                      items:\n                        $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                    contract_whitelist:\n                      type: array\n                      items:\n                        $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                    contract_blacklist:\n                      type: array\n                      items:\n                        $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                    action_blacklist:\n                      type: array\n                      items:\n                        type: array\n                        description: Array of two string values, the account name as the first and action name as the second\n                        items:\n                          allOf:\n                            - $ref: \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\"\n                            - $ref: \"https://eosio.github.io/schemata/v2.1/oas/CppSignature.yaml\"\n                    key_blacklist:\n                      type: array\n                      items:\n                        $ref: \"https://eosio.github.io/schemata/v2.1/oas/KeyType.yaml\"\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: Returns Nothing\n  /producer/create_snapshot:\n    post:\n      summary: create_snapshot\n      description: Creates a snapshot for producer node\n      operationId: create_snapshot\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - next\n              properties:\n                next:\n                  type: object\n                  description: Defines the snapshot to be created\n                  properties:\n                    head_block_id:\n                      $ref: \"https://eosio.github.io/schemata/v2.1/oas/Sha256.yaml\"\n                    head_block_num:\n                      type: integer\n                      description: Highest block number on the chain\n                    head_block_time:\n                      type: string\n                      description: Highest block unix timestamp\n                    version:\n                      type: integer\n                      description: Version number\n                    snapshot_name:\n                      type: string\n                      description: The name of the snapshot\n\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: Returns Nothing\n\n  /producer/get_integrity_hash:\n    post:\n      summary: get_integrity_hash\n      description: Retreives the integrity hash for producer node\n      operationId: get_integrity_hash\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Defines the integrity hash information details\n                properties:\n                  integrity_hash:\n                    $ref: \"https://eosio.github.io/schemata/v2.1/oas/Sha256.yaml\"\n                  head_block_id:\n                    $ref: \"https://eosio.github.io/schemata/v2.1/oas/Sha256.yaml\"\n\n  /producer/schedule_protocol_feature_activations:\n    post:\n      summary: schedule_protocol_feature_activations\n      description: Schedule protocol feature activation for producer node\n      operationId: schedule_protocol_feature_activations\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - schedule\n              properties:\n                schedule:\n                  type: object\n                  properties:\n                    protocol_features_to_activate:\n                      type: array\n                      description: List of protocol features to activate\n                      items:\n                        $ref: \"https://eosio.github.io/schemata/v2.1/oas/Sha256.yaml\"\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: Returns Nothing\n\n  /producer/get_supported_protocol_features:\n    post:\n      summary: get_supported_protocol_features\n      description: Retreives supported protocol features for producer node\n      operationId: get_supported_protocol_features\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - params\n              properties:\n                params:\n                  type: object\n                  description: Defines filters based on which to return the supported protocol features\n                  properties:\n                    exclude_disabled:\n                      type: boolean\n                      description: Exclude disabled protocol features\n                    exclude_unactivatable:\n                      type: boolean\n                      description: Exclude unactivatable protocol features\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                description: Variant type, an array of strings with the supported protocol features\n                items:\n                  type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /producer/add_greylist_accounts: post: operation \"add_greylist_accounts\": requestBody: content: \"application/json\": parse schema: parse schema: params: parse schema: accounts: parse schema: item: parse schema: reference \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\": resolve reference \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\": invalid schema reference \"https://eosio.github.io/schemata/v2.1/oas/Name.yaml\""
}