{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/serverless-application-model"
		},
		"file": {
			"name": "implicit_http_api_with_many_conditions.json",
			"size": 0,
			"path": "tests/translator/output/implicit_http_api_with_many_conditions.json",
			"byteSize": 41292,
			"content": "{\n  \"AWSTemplateFormatVersion\": \"2010-09-09\",\n  \"Conditions\": {\n    \"Cond\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond1\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond2\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond3\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond4\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond5\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond6\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond7\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond8\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"Cond9\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"MyCondition\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"ServerlessHttpApiCondition\": {\n      \"Fn::Or\": [\n        {\n          \"Condition\": \"MyCondition\"\n        },\n        {\n          \"Condition\": \"ServerlessHttpApiCondition1\"\n        }\n      ]\n    },\n    \"ServerlessHttpApiCondition1\": {\n      \"Fn::Or\": [\n        {\n          \"Condition\": \"Cond\"\n        },\n        {\n          \"Condition\": \"Cond1\"\n        },\n        {\n          \"Condition\": \"Cond2\"\n        },\n        {\n          \"Condition\": \"Cond3\"\n        },\n        {\n          \"Condition\": \"Cond4\"\n        },\n        {\n          \"Condition\": \"Cond5\"\n        },\n        {\n          \"Condition\": \"Cond6\"\n        },\n        {\n          \"Condition\": \"Cond7\"\n        },\n        {\n          \"Condition\": \"Cond8\"\n        },\n        {\n          \"Condition\": \"Cond9\"\n        }\n      ]\n    }\n  },\n  \"Description\": \"A template to test for implicit HttpApi condition handling.\",\n  \"Resources\": {\n    \"ServerlessHttpApi\": {\n      \"Condition\": \"ServerlessHttpApiCondition\",\n      \"Properties\": {\n        \"Body\": {\n          \"components\": {\n            \"securitySchemes\": {\n              \"oauth2\": {\n                \"type\": \"oauth2\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"identitySource\": \"$request.querystring.param\",\n                  \"jwtConfiguration\": {\n                    \"audience\": [\n                      \"MyApi\"\n                    ],\n                    \"issuer\": \"https://www.example.com/v1/connect/oidc\"\n                  },\n                  \"type\": \"jwt\"\n                }\n              }\n            }\n          },\n          \"info\": {\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"version\": \"1.0\"\n          },\n          \"openapi\": \"3.0.1\",\n          \"paths\": {\n            \"$default\": {\n              \"Fn::If\": [\n                \"Cond\",\n                {\n                  \"x-amazon-apigateway-any-method\": {\n                    \"Fn::If\": [\n                      \"Cond\",\n                      {\n                        \"isDefaultRoute\": true,\n                        \"responses\": {},\n                        \"security\": [\n                          {\n                            \"oauth2\": [\n                              \"scope4\"\n                            ]\n                          }\n                        ],\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld1099.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/hello/again\": {\n              \"Fn::If\": [\n                \"Cond\",\n                {\n                  \"get\": {\n                    \"Fn::If\": [\n                      \"Cond\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld1099.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub\": {\n              \"Fn::If\": [\n                \"MyCondition\",\n                {\n                  \"get\": {\n                    \"Fn::If\": [\n                      \"MyCondition\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"MyCondition\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${hello.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub1\": {\n              \"Fn::If\": [\n                \"Cond1\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond1\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond1\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld1.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub2\": {\n              \"Fn::If\": [\n                \"Cond2\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond2\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond2\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld2.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub3\": {\n              \"Fn::If\": [\n                \"Cond3\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond3\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond3\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld3.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub4\": {\n              \"Fn::If\": [\n                \"Cond4\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond4\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond4\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld4.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub5\": {\n              \"Fn::If\": [\n                \"Cond5\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond5\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond5\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld5.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub6\": {\n              \"Fn::If\": [\n                \"Cond6\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond6\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond6\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld6.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub7\": {\n              \"Fn::If\": [\n                \"Cond7\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond7\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond7\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld7.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub8\": {\n              \"Fn::If\": [\n                \"Cond8\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond8\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond8\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld8.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            },\n            \"/sub9\": {\n              \"Fn::If\": [\n                \"Cond9\",\n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond9\",\n                      {\n                        \"responses\": {},\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\",\n                          \"payloadFormatVersion\": \"2.0\",\n                          \"type\": \"aws_proxy\",\n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond9\",\n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld9.Arn}/invocations\"\n                              },\n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }\n                        }\n                      },\n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }\n          },\n          \"tags\": [\n            {\n              \"name\": \"httpapi:createdBy\",\n              \"x-amazon-apigateway-tag-value\": \"SAM\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::ApiGatewayV2::Api\"\n    },\n    \"ServerlessHttpApiApiGatewayDefaultStage\": {\n      \"Condition\": \"ServerlessHttpApiCondition\",\n      \"Properties\": {\n        \"ApiId\": {\n          \"Ref\": \"ServerlessHttpApi\"\n        },\n        \"AutoDeploy\": true,\n        \"RouteSettings\": {\n          \"$default\": {\n            \"Fn::If\": [\n              \"Cond\",\n              {\n                \"ThrottlingBurstLimit\": 200\n              },\n              {\n                \"Ref\": \"AWS::NoValue\"\n              }\n            ]\n          },\n          \"GET /sub\": {\n            \"Fn::If\": [\n              \"MyCondition\",\n              {\n                \"ThrottlingBurstLimit\": 200\n              },\n              {\n                \"Ref\": \"AWS::NoValue\"\n              }\n            ]\n          }\n        },\n        \"StageName\": \"$default\",\n        \"Tags\": {\n          \"httpapi:createdBy\": \"SAM\"\n        }\n      },\n      \"Type\": \"AWS::ApiGatewayV2::Stage\"\n    },\n    \"hello\": {\n      \"Condition\": \"MyCondition\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloRole\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloHttpApiEventPermission\": {\n      \"Condition\": \"MyCondition\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"hello\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/sub\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloRole\": {\n      \"Condition\": \"MyCondition\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld1\": {\n      \"Condition\": \"Cond1\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld1Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld1099\": {\n      \"Condition\": \"Cond\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld1099Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld1099HttpApiEventPermission\": {\n      \"Condition\": \"Cond\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld1099\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld1099Role\": {\n      \"Condition\": \"Cond\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld1HttpApiEventPermission\": {\n      \"Condition\": \"Cond1\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld1\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub1\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld1Role\": {\n      \"Condition\": \"Cond1\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld2\": {\n      \"Condition\": \"Cond2\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld2Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld2HttpApiEventPermission\": {\n      \"Condition\": \"Cond2\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld2\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub2\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld2Role\": {\n      \"Condition\": \"Cond2\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld3\": {\n      \"Condition\": \"Cond3\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld3Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld3HttpApiEventPermission\": {\n      \"Condition\": \"Cond3\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld3\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub3\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld3Role\": {\n      \"Condition\": \"Cond3\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld4\": {\n      \"Condition\": \"Cond4\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld4Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld4HttpApiEventPermission\": {\n      \"Condition\": \"Cond4\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld4\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub4\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld4Role\": {\n      \"Condition\": \"Cond4\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld5\": {\n      \"Condition\": \"Cond5\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld5Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld5HttpApiEventPermission\": {\n      \"Condition\": \"Cond5\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld5\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub5\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld5Role\": {\n      \"Condition\": \"Cond5\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld6\": {\n      \"Condition\": \"Cond6\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld6Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld6HttpApiEventPermission\": {\n      \"Condition\": \"Cond6\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld6\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub6\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld6Role\": {\n      \"Condition\": \"Cond6\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld7\": {\n      \"Condition\": \"Cond7\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld7Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld7HttpApiEventPermission\": {\n      \"Condition\": \"Cond7\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld7\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub7\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld7Role\": {\n      \"Condition\": \"Cond7\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld8\": {\n      \"Condition\": \"Cond8\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld8Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld8HttpApiEventPermission\": {\n      \"Condition\": \"Cond8\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld8\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub8\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld8Role\": {\n      \"Condition\": \"Cond8\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"helloworld9\": {\n      \"Condition\": \"Cond9\",\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": 128,\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld9Role\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ],\n        \"Timeout\": 3\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"helloworld9HttpApiEventPermission\": {\n      \"Condition\": \"Cond9\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"helloworld9\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub9\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"helloworld9Role\": {\n      \"Condition\": \"Cond9\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/aws/serverless-application-model@2f53aebdcf9b322a395eaa872e5368ddc3c76c95/-/blob/tests/translator/output/implicit_http_api_with_many_conditions.json",
			"externalURLs": [
				{
					"url": "https://github.com/aws/serverless-application-model/blob/2f53aebdcf9b322a395eaa872e5368ddc3c76c95/tests/translator/output/implicit_http_api_with_many_conditions.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at tests/translator/output/implicit_http_api_with_many_conditions.json:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}