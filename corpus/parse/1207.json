{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ITISFoundation/osparc-simcore"
		},
		"file": {
			"name": "openapi.json",
			"path": "services/director-v2/openapi.json",
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"simcore-service-director-v2\",\n    \"description\": \" Orchestrates the pipeline of services defined by the user\",\n    \"version\": \"2.0.0\"\n  },\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"summary\": \"Check Service Health\",\n        \"operationId\": \"check_service_health__get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/meta\": {\n      \"get\": {\n        \"summary\": \"Get Service Metadata\",\n        \"operationId\": \"get_service_metadata_meta_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Meta\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v0/services\": {\n      \"get\": {\n        \"tags\": [\n          \"services\"\n        ],\n        \"summary\": \"List Services\",\n        \"description\": \"Lists services available in the deployed registry\",\n        \"operationId\": \"list_services_v0_services_get\",\n        \"parameters\": [\n          {\n            \"description\": \"The service type:\\n   - computational - a computational service\\n   - interactive - an interactive service\\n\",\n            \"required\": false,\n            \"schema\": {\n              \"allOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ServiceType\"\n                }\n              ],\n              \"description\": \"The service type:\\n   - computational - a computational service\\n   - interactive - an interactive service\\n\"\n            },\n            \"name\": \"service_type\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServicesArrayEnveloped\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v0/services/{service_key}/{service_version}/extras\": {\n      \"get\": {\n        \"tags\": [\n          \"services\"\n        ],\n        \"summary\": \"Get Extra Service Versioned\",\n        \"description\": \"Returns the service extras\",\n        \"operationId\": \"get_extra_service_versioned_v0_services__service_key___service_version__extras_get\",\n        \"parameters\": [\n          {\n            \"description\": \"Distinctive name for the node based on the docker registry path\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Service Key\",\n              \"pattern\": \"^(simcore)/(services)/(comp|dynamic|frontend)(/[\\\\w/-]+)+$\",\n              \"type\": \"string\",\n              \"description\": \"Distinctive name for the node based on the docker registry path\"\n            },\n            \"name\": \"service_key\",\n            \"in\": \"path\"\n          },\n          {\n            \"description\": \"The tag/version of the service\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Service Version\",\n              \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n              \"type\": \"string\",\n              \"description\": \"The tag/version of the service\"\n            },\n            \"name\": \"service_version\",\n            \"in\": \"path\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServiceExtrasEnveloped\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v0/services/{service_key}/{service_version}\": {\n      \"get\": {\n        \"tags\": [\n          \"services\"\n        ],\n        \"summary\": \"Get Service Versioned\",\n        \"description\": \"Returns details of the selected service if available in the platform\",\n        \"operationId\": \"get_service_versioned_v0_services__service_key___service_version__get\",\n        \"parameters\": [\n          {\n            \"description\": \"Distinctive name for the node based on the docker registry path\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Service Key\",\n              \"pattern\": \"^(simcore)/(services)/(comp|dynamic|frontend)(/[\\\\w/-]+)+$\",\n              \"type\": \"string\",\n              \"description\": \"Distinctive name for the node based on the docker registry path\"\n            },\n            \"name\": \"service_key\",\n            \"in\": \"path\"\n          },\n          {\n            \"description\": \"The tag/version of the service\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Service Version\",\n              \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n              \"type\": \"string\",\n              \"description\": \"The tag/version of the service\"\n            },\n            \"name\": \"service_version\",\n            \"in\": \"path\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ServicesArrayEnveloped\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v0/running_interactive_services\": {\n      \"get\": {\n        \"tags\": [\n          \"services\"\n        ],\n        \"summary\": \"List Running Interactive Services\",\n        \"description\": \"Lists of running interactive services\",\n        \"operationId\": \"list_running_interactive_services_v0_running_interactive_services_get\",\n        \"parameters\": [\n          {\n            \"description\": \"The ID of the user that starts the service\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"User Id\",\n              \"type\": \"string\",\n              \"description\": \"The ID of the user that starts the service\"\n            },\n            \"name\": \"user_id\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"The ID of the project in which the service starts\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Project Id\",\n              \"type\": \"string\",\n              \"description\": \"The ID of the project in which the service starts\"\n            },\n            \"name\": \"project_id\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RunningServicesDetailsArrayEnveloped\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"services\"\n        ],\n        \"summary\": \"Start Interactive Service\",\n        \"description\": \"Starts an interactive service in the  platform\",\n        \"operationId\": \"start_interactive_service_v0_running_interactive_services_post\",\n        \"parameters\": [\n          {\n            \"description\": \"The ID of the user that starts the service\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"User Id\",\n              \"type\": \"string\",\n              \"description\": \"The ID of the user that starts the service\"\n            },\n            \"name\": \"user_id\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"The ID of the project in which the service starts\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Project Id\",\n              \"type\": \"string\",\n              \"description\": \"The ID of the project in which the service starts\"\n            },\n            \"name\": \"project_id\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"distinctive name for the node based on the docker registry path\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Service Key\",\n              \"pattern\": \"^(simcore)/(services)/(comp|dynamic|frontend)(/[\\\\w/-]+)+$\",\n              \"type\": \"string\",\n              \"description\": \"distinctive name for the node based on the docker registry path\"\n            },\n            \"example\": [\n              \"simcore/services/comp/itis/sleeper\",\n              \"simcore/services/dynamic/3dviewer\"\n            ],\n            \"name\": \"service_key\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"The tag/version of the service\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Service Version\",\n              \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n              \"type\": \"string\",\n              \"description\": \"The tag/version of the service\"\n            },\n            \"example\": \"1.0.0\",\n            \"name\": \"service_version\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"The uuid to assign the service with\",\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Service Uuid\",\n              \"type\": \"string\",\n              \"description\": \"The uuid to assign the service with\"\n            },\n            \"name\": \"service_uuid\",\n            \"in\": \"query\"\n          },\n          {\n            \"description\": \"predefined basepath for the backend service otherwise uses root\",\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Service Base Path\",\n              \"type\": \"string\",\n              \"description\": \"predefined basepath for the backend service otherwise uses root\",\n              \"default\": \"\"\n            },\n            \"example\": \"/x/EycCXbU0H/\",\n            \"name\": \"service_base_path\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v0/running_interactive_services/{service_uuid}\": {\n      \"delete\": {\n        \"tags\": [\n          \"services\"\n        ],\n        \"summary\": \"Stop Interactive Service\",\n        \"operationId\": \"stop_interactive_service_v0_running_interactive_services__service_uuid__delete\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Service Uuid\",\n              \"type\": \"string\"\n            },\n            \"name\": \"service_uuid\",\n            \"in\": \"path\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/demo\": {\n      \"get\": {\n        \"tags\": [\n          \"demo\"\n        ],\n        \"summary\": \"Get Service Metadata\",\n        \"operationId\": \"get_service_metadata_v2_demo_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Meta\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/computations\": {\n      \"post\": {\n        \"tags\": [\n          \"computations\"\n        ],\n        \"summary\": \"Create and optionally start a new computation\",\n        \"operationId\": \"create_computation_v2_computations_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ComputationTaskCreate\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ComputationTaskOut\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/computations/{project_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"computations\"\n        ],\n        \"summary\": \"Returns a computation pipeline state\",\n        \"operationId\": \"get_computation_v2_computations__project_id__get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Project Id\",\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"name\": \"project_id\",\n            \"in\": \"path\"\n          },\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"User Id\",\n              \"exclusiveMinimum\": 0.0,\n              \"type\": \"integer\"\n            },\n            \"name\": \"user_id\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ComputationTaskOut\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"computations\"\n        ],\n        \"summary\": \"Deletes a computation pipeline\",\n        \"operationId\": \"delete_pipeline_v2_computations__project_id__delete\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Project Id\",\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"name\": \"project_id\",\n            \"in\": \"path\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ComputationTaskDelete\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Response\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/computations/{project_id}:stop\": {\n      \"post\": {\n        \"tags\": [\n          \"computations\"\n        ],\n        \"summary\": \"Stops a computation pipeline\",\n        \"operationId\": \"stop_computation_project_v2_computations__project_id__stop_post\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Project Id\",\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"name\": \"project_id\",\n            \"in\": \"path\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ComputationTaskStop\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ComputationTaskOut\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/dynamic_services\": {\n      \"get\": {\n        \"tags\": [\n          \"dynamic services\"\n        ],\n        \"summary\": \"returns a list of running interactive services filtered by user_id and/or project_idboth legacy (director-v0) and modern (director-v2)\",\n        \"operationId\": \"list_running_dynamic_services_v2_dynamic_services_get\",\n        \"parameters\": [\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"User Id\",\n              \"exclusiveMinimum\": 0.0,\n              \"type\": \"integer\"\n            },\n            \"name\": \"user_id\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Project Id\",\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"name\": \"project_id\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response List Running Dynamic Services V2 Dynamic Services Get\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RunningDynamicServiceDetails\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"dynamic services\"\n        ],\n        \"summary\": \"creates \u0026 starts the dynamic service\",\n        \"operationId\": \"create_dynamic_service_v2_dynamic_services_post\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"X-Dynamic-Sidecar-Request-Dns\",\n              \"type\": \"string\"\n            },\n            \"name\": \"x-dynamic-sidecar-request-dns\",\n            \"in\": \"header\"\n          },\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"X-Dynamic-Sidecar-Request-Scheme\",\n              \"type\": \"string\"\n            },\n            \"name\": \"x-dynamic-sidecar-request-scheme\",\n            \"in\": \"header\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ServiceDetails\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RunningDynamicServiceDetails\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/dynamic_services/{node_uuid}\": {\n      \"get\": {\n        \"tags\": [\n          \"dynamic services\"\n        ],\n        \"summary\": \"assembles the status for the dynamic-sidecar\",\n        \"operationId\": \"get_dynamic_sidecar_status_v2_dynamic_services__node_uuid__get\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Node Uuid\",\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"name\": \"node_uuid\",\n            \"in\": \"path\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RunningDynamicServiceDetails\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"dynamic services\"\n        ],\n        \"summary\": \"stops previously spawned dynamic-sidecar\",\n        \"operationId\": \"stop_dynamic_service_v2_dynamic_services__node_uuid__delete\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Node Uuid\",\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"name\": \"node_uuid\",\n            \"in\": \"path\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Save State\",\n              \"type\": \"boolean\",\n              \"default\": true\n            },\n            \"name\": \"can_save\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v2/dynamic_services/{node_uuid}:retrieve\": {\n      \"post\": {\n        \"tags\": [\n          \"dynamic services\"\n        ],\n        \"summary\": \"Calls the dynamic service's retrieve endpoint with optional port_keys\",\n        \"operationId\": \"service_retrieve_data_on_ports_v2_dynamic_services__node_uuid__retrieve_post\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Node Uuid\",\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"name\": \"node_uuid\",\n            \"in\": \"path\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RetrieveDataIn\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RetrieveDataOutEnveloped\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Author\": {\n        \"title\": \"Author\",\n        \"required\": [\n          \"name\",\n          \"email\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the author\",\n            \"example\": \"Jim Knopf\"\n          },\n          \"email\": {\n            \"title\": \"Email\",\n            \"type\": \"string\",\n            \"description\": \"Email address\",\n            \"format\": \"email\",\n            \"examples\": [\n              \"sun@sense.eight\",\n              \"deleen@minbar.bab\"\n            ]\n          },\n          \"affiliation\": {\n            \"title\": \"Affiliation\",\n            \"type\": \"string\",\n            \"description\": \"Affiliation of the author\",\n            \"examples\": [\n              \"Sense8\",\n              \"Babylon 5\"\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"Badge\": {\n        \"title\": \"Badge\",\n        \"required\": [\n          \"name\",\n          \"image\",\n          \"url\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the subject\",\n            \"examples\": [\n              \"travis-ci\",\n              \"coverals.io\",\n              \"github.io\"\n            ]\n          },\n          \"image\": {\n            \"title\": \"Image\",\n            \"maxLength\": 2083,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"Url to the badge\",\n            \"format\": \"uri\",\n            \"examples\": [\n              \"https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master\",\n              \"https://coveralls.io/repos/github/ITISFoundation/osparc-simcore/badge.svg?branch=master\",\n              \"https://img.shields.io/website-up-down-green-red/https/itisfoundation.github.io.svg?label=documentation\"\n            ]\n          },\n          \"url\": {\n            \"title\": \"Url\",\n            \"maxLength\": 2083,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"Link to the status\",\n            \"format\": \"uri\",\n            \"examples\": [\n              \"https://travis-ci.org/ITISFoundation/osparc-simcore 'State of CI: build, test and pushing images'\",\n              \"https://coveralls.io/github/ITISFoundation/osparc-simcore?branch=master 'Test coverage'\",\n              \"https://itisfoundation.github.io/\"\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ComputationTaskCreate\": {\n        \"title\": \"ComputationTaskCreate\",\n        \"required\": [\n          \"user_id\",\n          \"project_id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"user_id\": {\n            \"title\": \"User Id\",\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\"\n          },\n          \"project_id\": {\n            \"title\": \"Project Id\",\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"start_pipeline\": {\n            \"title\": \"Start Pipeline\",\n            \"type\": \"boolean\",\n            \"description\": \"if True the computation pipeline will start right away\",\n            \"default\": false\n          },\n          \"subgraph\": {\n            \"title\": \"Subgraph\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"description\": \"An optional set of nodes that must be executed, if empty the whole pipeline is executed\"\n          },\n          \"force_restart\": {\n            \"title\": \"Force Restart\",\n            \"type\": \"boolean\",\n            \"description\": \"if True will force re-running all dependent nodes\",\n            \"default\": false\n          }\n        }\n      },\n      \"ComputationTaskDelete\": {\n        \"title\": \"ComputationTaskDelete\",\n        \"required\": [\n          \"user_id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"user_id\": {\n            \"title\": \"User Id\",\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\"\n          },\n          \"force\": {\n            \"title\": \"Force\",\n            \"type\": \"boolean\",\n            \"description\": \"if True then the pipeline will be removed even if it is running\",\n            \"default\": false\n          }\n        }\n      },\n      \"ComputationTaskOut\": {\n        \"title\": \"ComputationTaskOut\",\n        \"required\": [\n          \"id\",\n          \"state\",\n          \"pipeline_details\",\n          \"url\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"Id\",\n            \"type\": \"string\",\n            \"description\": \"the id of the computation task\",\n            \"format\": \"uuid\"\n          },\n          \"state\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/RunningState\"\n              }\n            ],\n            \"description\": \"the state of the computational task\"\n          },\n          \"result\": {\n            \"title\": \"Result\",\n            \"type\": \"string\",\n            \"description\": \"the result of the computational task\"\n          },\n          \"pipeline_details\": {\n            \"title\": \"Pipeline Details\",\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/PipelineDetails\"\n              }\n            ],\n            \"description\": \"the details of the generated pipeline\"\n          },\n          \"url\": {\n            \"title\": \"Url\",\n            \"maxLength\": 65536,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"the link where to get the status of the task\",\n            \"format\": \"uri\"\n          },\n          \"stop_url\": {\n            \"title\": \"Stop Url\",\n            \"maxLength\": 65536,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"the link where to stop the task\",\n            \"format\": \"uri\"\n          }\n        },\n        \"example\": {\n          \"id\": \"42838344-03de-4ce2-8d93-589a5dcdfd05\",\n          \"state\": \"PUBLISHED\",\n          \"pipeline_details\": {\n            \"adjacency_list\": {\n              \"2fb4808a-e403-4a46-b52c-892560d27862\": [],\n              \"19a40c7b-0a40-458a-92df-c77a5df7c886\": [\n                \"2fb4808a-e403-4a46-b52c-892560d27862\"\n              ]\n            },\n            \"node_states\": {\n              \"2fb4808a-e403-4a46-b52c-892560d27862\": {\n                \"modified\": true,\n                \"dependencies\": []\n              },\n              \"19a40c7b-0a40-458a-92df-c77a5df7c886\": {\n                \"modified\": false,\n                \"dependencies\": [\n                  \"2fb4808a-e403-4a46-b52c-892560d27862\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"ComputationTaskStop\": {\n        \"title\": \"ComputationTaskStop\",\n        \"required\": [\n          \"user_id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"user_id\": {\n            \"title\": \"User Id\",\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"HTTPValidationError\": {\n        \"title\": \"HTTPValidationError\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"errors\": {\n            \"title\": \"Validation errors\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ValidationError\"\n            }\n          }\n        }\n      },\n      \"Meta\": {\n        \"title\": \"Meta\",\n        \"required\": [\n          \"name\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"title\": \"Version\",\n            \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n            \"type\": \"string\"\n          },\n          \"released\": {\n            \"title\": \"Released\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n              \"type\": \"string\"\n            },\n            \"description\": \"Maps every route's path tag with a released version\"\n          }\n        },\n        \"example\": {\n          \"name\": \"simcore_service_foo\",\n          \"version\": \"2.4.45\",\n          \"released\": {\n            \"v1\": \"1.3.4\",\n            \"v2\": \"2.4.45\"\n          }\n        }\n      },\n      \"NodeRequirements\": {\n        \"title\": \"NodeRequirements\",\n        \"required\": [\n          \"CPU\",\n          \"RAM\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"CPU\": {\n            \"title\": \"Cpu\",\n            \"type\": \"number\",\n            \"description\": \"defines the required (maximum) CPU shares for running the services\"\n          },\n          \"GPU\": {\n            \"title\": \"Gpu\",\n            \"minimum\": 0.0,\n            \"type\": \"integer\",\n            \"description\": \"defines the required (maximum) GPU for running the services\"\n          },\n          \"RAM\": {\n            \"title\": \"Ram\",\n            \"minimum\": 1024.0,\n            \"type\": \"integer\",\n            \"description\": \"defines the required (maximum) amount of RAM for running the services in bytes\"\n          },\n          \"MPI\": {\n            \"title\": \"Mpi\",\n            \"maximum\": 1.0,\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\",\n            \"description\": \"defines whether a MPI node is required for running the services\",\n            \"deprecated\": true\n          }\n        }\n      },\n      \"NodeState\": {\n        \"title\": \"NodeState\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"modified\": {\n            \"title\": \"Modified\",\n            \"type\": \"boolean\",\n            \"description\": \"true if the node's outputs need to be re-computed\",\n            \"default\": true\n          },\n          \"dependencies\": {\n            \"title\": \"Dependencies\",\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"description\": \"contains the node inputs dependencies if they need to be computed first\"\n          },\n          \"currentStatus\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/RunningState\"\n              }\n            ],\n            \"description\": \"the node's current state\",\n            \"default\": \"NOT_STARTED\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"examples\": [\n          {\n            \"modified\": true,\n            \"dependencies\": [],\n            \"current_status\": \"NOT_STARTED\"\n          },\n          {\n            \"modified\": true,\n            \"dependencies\": [\n              \"42838344-03de-4ce2-8d93-589a5dcdfd05\"\n            ],\n            \"current_status\": \"ABORTED\"\n          },\n          {\n            \"modified\": false,\n            \"dependencies\": [],\n            \"current_status\": \"SUCCESS\"\n          }\n        ]\n      },\n      \"PipelineDetails\": {\n        \"title\": \"PipelineDetails\",\n        \"required\": [\n          \"adjacency_list\",\n          \"node_states\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"adjacency_list\": {\n            \"title\": \"Adjacency List\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"format\": \"uuid\"\n              }\n            },\n            \"description\": \"The adjacency list of the current pipeline in terms of {NodeID: [successor NodeID]}\"\n          },\n          \"node_states\": {\n            \"title\": \"Node States\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/NodeState\"\n            },\n            \"description\": \"The states of each of the computational nodes in the pipeline\"\n          }\n        }\n      },\n      \"RetrieveDataIn\": {\n        \"title\": \"RetrieveDataIn\",\n        \"required\": [\n          \"port_keys\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"port_keys\": {\n            \"title\": \"Port Keys\",\n            \"type\": \"array\",\n            \"items\": {\n              \"pattern\": \"^[-_a-zA-Z0-9]+$\",\n              \"type\": \"string\"\n            },\n            \"description\": \"The port keys to retrieve data from\"\n          }\n        }\n      },\n      \"RetrieveDataOut\": {\n        \"title\": \"RetrieveDataOut\",\n        \"required\": [\n          \"size_bytes\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"size_bytes\": {\n            \"title\": \"Size Bytes\",\n            \"type\": \"integer\",\n            \"description\": \"The amount of data transferred by the retrieve call\"\n          }\n        }\n      },\n      \"RetrieveDataOutEnveloped\": {\n        \"title\": \"RetrieveDataOutEnveloped\",\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/RetrieveDataOut\"\n          }\n        }\n      },\n      \"RunningDynamicServiceDetails\": {\n        \"title\": \"RunningDynamicServiceDetails\",\n        \"required\": [\n          \"service_key\",\n          \"service_version\",\n          \"user_id\",\n          \"project_id\",\n          \"service_uuid\",\n          \"service_host\",\n          \"service_port\",\n          \"service_state\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"service_key\": {\n            \"title\": \"Service Key\",\n            \"pattern\": \"^(simcore)/(services)/dynamic(/[\\\\w/-]+)+$\",\n            \"type\": \"string\",\n            \"description\": \"distinctive name for the node based on the docker registry path\",\n            \"examples\": [\n              \"simcore/services/dynamic/3dviewer\"\n            ]\n          },\n          \"service_version\": {\n            \"title\": \"Service Version\",\n            \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n            \"type\": \"string\",\n            \"description\": \"semantic version number of the node\",\n            \"examples\": [\n              \"1.0.0\",\n              \"0.0.1\"\n            ]\n          },\n          \"user_id\": {\n            \"title\": \"User Id\",\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\"\n          },\n          \"project_id\": {\n            \"title\": \"Project Id\",\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"service_uuid\": {\n            \"title\": \"Service Uuid\",\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"service_basepath\": {\n            \"title\": \"Service Basepath\",\n            \"type\": \"string\",\n            \"description\": \"predefined path where the dynamic service should be served. If empty, the service shall use the root endpoint.\",\n            \"format\": \"path\"\n          },\n          \"boot_type\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ServiceBootType\"\n              }\n            ],\n            \"description\": \"Describes how the dynamic services was started (legacy=V0, modern=V2).Since legacy services do not have this label it defaults to V0.\",\n            \"default\": \"V0\"\n          },\n          \"service_host\": {\n            \"title\": \"Service Host\",\n            \"type\": \"string\",\n            \"description\": \"the service swarm internal host name\"\n          },\n          \"service_port\": {\n            \"title\": \"Service Port\",\n            \"exclusiveMaximum\": 65535.0,\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\",\n            \"description\": \"the service swarm internal port\"\n          },\n          \"published_port\": {\n            \"title\": \"Published Port\",\n            \"exclusiveMaximum\": 65535.0,\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\",\n            \"description\": \"the service swarm published port if any\",\n            \"deprecated\": true\n          },\n          \"entry_point\": {\n            \"title\": \"Entry Point\",\n            \"type\": \"string\",\n            \"description\": \"if empty the service entrypoint is on the root endpoint.\",\n            \"deprecated\": true\n          },\n          \"service_state\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ServiceState\"\n              }\n            ],\n            \"description\": \"service current state\"\n          },\n          \"service_message\": {\n            \"title\": \"Service Message\",\n            \"type\": \"string\",\n            \"description\": \"additional information related to service state\"\n          }\n        },\n        \"examples\": [\n          {\n            \"boot_type\": \"V0\",\n            \"key\": \"simcore/services/dynamic/3dviewer\",\n            \"version\": \"2.4.5\",\n            \"user_id\": 234,\n            \"project_id\": \"dd1d04d9-d704-4f7e-8f0f-1ca60cc771fe\",\n            \"uuid\": \"75c7f3f4-18f9-4678-8610-54a2ade78eaa\",\n            \"basepath\": \"/x/75c7f3f4-18f9-4678-8610-54a2ade78eaa\",\n            \"host\": \"3dviewer_75c7f3f4-18f9-4678-8610-54a2ade78eaa\",\n            \"internal_port\": 8888,\n            \"state\": \"running\",\n            \"message\": \"\",\n            \"node_uuid\": \"75c7f3f4-18f9-4678-8610-54a2ade78eaa\"\n          },\n          {\n            \"boot_type\": \"V2\",\n            \"key\": \"simcore/services/dynamic/dy-static-file-viewer-dynamic-sidecar\",\n            \"version\": \"1.0.0\",\n            \"user_id\": 234,\n            \"project_id\": \"dd1d04d9-d704-4f7e-8f0f-1ca60cc771fe\",\n            \"uuid\": \"75c7f3f4-18f9-4678-8610-54a2ade78eaa\",\n            \"host\": \"dy-sidecar_75c7f3f4-18f9-4678-8610-54a2ade78eaa\",\n            \"internal_port\": 80,\n            \"state\": \"running\",\n            \"message\": \"\",\n            \"node_uuid\": \"75c7f3f4-18f9-4678-8610-54a2ade78eaa\"\n          }\n        ]\n      },\n      \"RunningServiceDetails\": {\n        \"title\": \"RunningServiceDetails\",\n        \"required\": [\n          \"entry_point\",\n          \"service_uuid\",\n          \"service_key\",\n          \"service_version\",\n          \"service_host\",\n          \"service_basepath\",\n          \"service_state\",\n          \"service_message\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"published_port\": {\n            \"title\": \"Published Port\",\n            \"exclusiveMaximum\": 65535.0,\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\",\n            \"description\": \"The ports where the service provides its interface on the docker swarm\",\n            \"deprecated\": true\n          },\n          \"entry_point\": {\n            \"title\": \"Entry Point\",\n            \"type\": \"string\",\n            \"description\": \"The entry point where the service provides its interface\"\n          },\n          \"service_uuid\": {\n            \"title\": \"Service Uuid\",\n            \"pattern\": \"^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$\",\n            \"type\": \"string\",\n            \"description\": \"The node UUID attached to the service\"\n          },\n          \"service_key\": {\n            \"title\": \"Service Key\",\n            \"pattern\": \"^(simcore)/(services)/(comp|dynamic|frontend)(/[\\\\w/-]+)+$\",\n            \"type\": \"string\",\n            \"description\": \"distinctive name for the node based on the docker registry path\",\n            \"example\": [\n              \"simcore/services/comp/itis/sleeper\",\n              \"simcore/services/dynamic/3dviewer\"\n            ]\n          },\n          \"service_version\": {\n            \"title\": \"Service Version\",\n            \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n            \"type\": \"string\",\n            \"description\": \"service version number\",\n            \"example\": [\n              \"1.0.0\",\n              \"0.0.1\"\n            ]\n          },\n          \"service_host\": {\n            \"title\": \"Service Host\",\n            \"type\": \"string\",\n            \"description\": \"service host name within the network\"\n          },\n          \"service_port\": {\n            \"title\": \"Service Port\",\n            \"exclusiveMaximum\": 65535.0,\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\",\n            \"description\": \"port to access the service within the network\",\n            \"default\": 80\n          },\n          \"service_basepath\": {\n            \"title\": \"Service Basepath\",\n            \"type\": \"string\",\n            \"description\": \"the service base entrypoint where the service serves its contents\"\n          },\n          \"service_state\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ServiceState\"\n              }\n            ],\n            \"description\": \"the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start\"\n          },\n          \"service_message\": {\n            \"title\": \"Service Message\",\n            \"type\": \"string\",\n            \"description\": \"the service message\"\n          }\n        }\n      },\n      \"RunningServicesDetailsArray\": {\n        \"title\": \"RunningServicesDetailsArray\",\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/RunningServiceDetails\"\n        }\n      },\n      \"RunningServicesDetailsArrayEnveloped\": {\n        \"title\": \"RunningServicesDetailsArrayEnveloped\",\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/RunningServicesDetailsArray\"\n          }\n        }\n      },\n      \"RunningState\": {\n        \"title\": \"RunningState\",\n        \"enum\": [\n          \"UNKNOWN\",\n          \"PUBLISHED\",\n          \"NOT_STARTED\",\n          \"PENDING\",\n          \"STARTED\",\n          \"RETRY\",\n          \"SUCCESS\",\n          \"FAILED\",\n          \"ABORTED\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"State of execution of a project's computational workflow\\n\\nSEE StateType for task state\"\n      },\n      \"SelectBox\": {\n        \"title\": \"SelectBox\",\n        \"required\": [\n          \"structure\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"structure\": {\n            \"title\": \"Structure\",\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Structure\"\n            }\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ServiceBootType\": {\n        \"title\": \"ServiceBootType\",\n        \"enum\": [\n          \"V0\",\n          \"V2\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"An enumeration.\"\n      },\n      \"ServiceBuildDetails\": {\n        \"title\": \"ServiceBuildDetails\",\n        \"required\": [\n          \"build_date\",\n          \"vcs_ref\",\n          \"vcs_url\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"build_date\": {\n            \"title\": \"Build Date\",\n            \"type\": \"string\"\n          },\n          \"vcs_ref\": {\n            \"title\": \"Vcs Ref\",\n            \"type\": \"string\"\n          },\n          \"vcs_url\": {\n            \"title\": \"Vcs Url\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ServiceDetails\": {\n        \"title\": \"ServiceDetails\",\n        \"required\": [\n          \"service_key\",\n          \"service_version\",\n          \"user_id\",\n          \"project_id\",\n          \"service_uuid\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"service_key\": {\n            \"title\": \"Service Key\",\n            \"pattern\": \"^(simcore)/(services)/dynamic(/[\\\\w/-]+)+$\",\n            \"type\": \"string\",\n            \"description\": \"distinctive name for the node based on the docker registry path\",\n            \"examples\": [\n              \"simcore/services/dynamic/3dviewer\"\n            ]\n          },\n          \"service_version\": {\n            \"title\": \"Service Version\",\n            \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n            \"type\": \"string\",\n            \"description\": \"semantic version number of the node\",\n            \"examples\": [\n              \"1.0.0\",\n              \"0.0.1\"\n            ]\n          },\n          \"user_id\": {\n            \"title\": \"User Id\",\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\"\n          },\n          \"project_id\": {\n            \"title\": \"Project Id\",\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"service_uuid\": {\n            \"title\": \"Service Uuid\",\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"service_basepath\": {\n            \"title\": \"Service Basepath\",\n            \"type\": \"string\",\n            \"description\": \"predefined path where the dynamic service should be served. If empty, the service shall use the root endpoint.\",\n            \"format\": \"path\"\n          }\n        },\n        \"example\": {\n          \"key\": \"simcore/services/dynamic/3dviewer\",\n          \"version\": \"2.4.5\",\n          \"user_id\": 234,\n          \"project_id\": \"dd1d04d9-d704-4f7e-8f0f-1ca60cc771fe\",\n          \"node_uuid\": \"75c7f3f4-18f9-4678-8610-54a2ade78eaa\",\n          \"basepath\": \"/x/75c7f3f4-18f9-4678-8610-54a2ade78eaa\"\n        }\n      },\n      \"ServiceDockerData\": {\n        \"title\": \"ServiceDockerData\",\n        \"required\": [\n          \"name\",\n          \"description\",\n          \"key\",\n          \"version\",\n          \"type\",\n          \"authors\",\n          \"contact\",\n          \"inputs\",\n          \"outputs\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"description\": \"short, human readable name for the node\",\n            \"example\": \"Fast Counter\"\n          },\n          \"thumbnail\": {\n            \"title\": \"Thumbnail\",\n            \"maxLength\": 2083,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"url to the thumbnail\",\n            \"format\": \"uri\",\n            \"examples\": [\n              \"https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png\"\n            ]\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"description\": \"human readable description of the purpose of the node\",\n            \"examples\": [\n              \"Our best node type\",\n              \"The mother of all nodes, makes your numbers shine!\"\n            ]\n          },\n          \"key\": {\n            \"title\": \"Key\",\n            \"pattern\": \"^(simcore)/(services)/(comp|dynamic|frontend)(/[\\\\w/-]+)+$\",\n            \"type\": \"string\",\n            \"description\": \"distinctive name for the node based on the docker registry path\",\n            \"examples\": [\n              \"simcore/services/comp/itis/sleeper\",\n              \"simcore/services/dynamic/3dviewer\"\n            ]\n          },\n          \"version\": {\n            \"title\": \"Version\",\n            \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n            \"type\": \"string\",\n            \"description\": \"service version number\",\n            \"examples\": [\n              \"1.0.0\",\n              \"0.0.1\"\n            ]\n          },\n          \"integration-version\": {\n            \"title\": \"Integration-Version\",\n            \"pattern\": \"^(0|[1-9]\\\\d*)(\\\\.(0|[1-9]\\\\d*)){2}(-(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*)(\\\\.(0|[1-9]\\\\d*|\\\\d*[-a-zA-Z][-\\\\da-zA-Z]*))*)?(\\\\+[-\\\\da-zA-Z]+(\\\\.[-\\\\da-zA-Z-]+)*)?$\",\n            \"type\": \"string\",\n            \"description\": \"integration version number\",\n            \"examples\": [\n              \"1.0.0\"\n            ]\n          },\n          \"type\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ServiceType\"\n              }\n            ],\n            \"description\": \"service type\",\n            \"examples\": [\n              \"computational\"\n            ]\n          },\n          \"badges\": {\n            \"title\": \"Badges\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Badge\"\n            }\n          },\n          \"authors\": {\n            \"title\": \"Authors\",\n            \"minItems\": 1,\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Author\"\n            }\n          },\n          \"contact\": {\n            \"title\": \"Contact\",\n            \"type\": \"string\",\n            \"description\": \"email to correspond to the authors about the node\",\n            \"format\": \"email\",\n            \"examples\": [\n              \"lab@net.flix\"\n            ]\n          },\n          \"inputs\": {\n            \"title\": \"Inputs\",\n            \"type\": \"object\",\n            \"description\": \"definition of the inputs of this node\",\n            \"patternProperties\": {\n              \"^[-_a-zA-Z0-9]+$\": {\n                \"$ref\": \"#/components/schemas/ServiceInput\"\n              }\n            }\n          },\n          \"outputs\": {\n            \"title\": \"Outputs\",\n            \"type\": \"object\",\n            \"description\": \"definition of the outputs of this node\",\n            \"patternProperties\": {\n              \"^[-_a-zA-Z0-9]+$\": {\n                \"$ref\": \"#/components/schemas/ServiceOutput\"\n              }\n            }\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Static metadata for a service injected in the image labels\",\n        \"examples\": [\n          {\n            \"name\": \"oSparc Python Runner\",\n            \"key\": \"simcore/services/comp/osparc-python-runner\",\n            \"type\": \"computational\",\n            \"integration-version\": \"1.0.0\",\n            \"version\": \"1.7.0\",\n            \"description\": \"oSparc Python Runner\",\n            \"contact\": \"smith@company.com\",\n            \"authors\": [\n              {\n                \"name\": \"John Smith\",\n                \"email\": \"smith@company.com\",\n                \"affiliation\": \"Company\"\n              },\n              {\n                \"name\": \"Richard Brown\",\n                \"email\": \"brown@uni.edu\",\n                \"affiliation\": \"University\"\n              }\n            ],\n            \"inputs\": {\n              \"input_1\": {\n                \"displayOrder\": 1,\n                \"label\": \"Input data\",\n                \"description\": \"Any code, requirements or data file\",\n                \"type\": \"data:*/*\"\n              }\n            },\n            \"outputs\": {\n              \"output_1\": {\n                \"displayOrder\": 1,\n                \"label\": \"Output data\",\n                \"description\": \"All data produced by the script is zipped as output_data.zip\",\n                \"type\": \"data:*/*\",\n                \"fileToKeyMap\": {\n                  \"output_data.zip\": \"output_1\"\n                }\n              }\n            }\n          },\n          {\n            \"name\": \"oSparc Python Runner\",\n            \"key\": \"simcore/services/comp/osparc-python-runner\",\n            \"type\": \"computational\",\n            \"integration-version\": \"1.0.0\",\n            \"version\": \"1.7.0\",\n            \"description\": \"oSparc Python Runner\",\n            \"contact\": \"smith@company.com\",\n            \"authors\": [\n              {\n                \"name\": \"John Smith\",\n                \"email\": \"smith@company.com\",\n                \"affiliation\": \"Company\"\n              },\n              {\n                \"name\": \"Richard Brown\",\n                \"email\": \"brown@uni.edu\",\n                \"affiliation\": \"University\"\n              }\n            ],\n            \"inputs\": {\n              \"input_1\": {\n                \"label\": \"Input data\",\n                \"description\": \"Any code, requirements or data file\",\n                \"type\": \"data:*/*\"\n              }\n            },\n            \"outputs\": {\n              \"output_1\": {\n                \"label\": \"Output data\",\n                \"description\": \"All data produced by the script is zipped as output_data.zip\",\n                \"type\": \"data:*/*\",\n                \"fileToKeyMap\": {\n                  \"output_data.zip\": \"output_1\"\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"ServiceExtras\": {\n        \"title\": \"ServiceExtras\",\n        \"required\": [\n          \"node_requirements\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"node_requirements\": {\n            \"$ref\": \"#/components/schemas/NodeRequirements\"\n          },\n          \"service_build_details\": {\n            \"$ref\": \"#/components/schemas/ServiceBuildDetails\"\n          }\n        }\n      },\n      \"ServiceExtrasEnveloped\": {\n        \"title\": \"ServiceExtrasEnveloped\",\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/ServiceExtras\"\n          }\n        }\n      },\n      \"ServiceInput\": {\n        \"title\": \"ServiceInput\",\n        \"required\": [\n          \"label\",\n          \"description\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"displayOrder\": {\n            \"title\": \"Displayorder\",\n            \"type\": \"number\",\n            \"description\": \"DEPRECATED: new display order is taken from the item position. This will be removed.\",\n            \"deprecated\": true\n          },\n          \"label\": {\n            \"title\": \"Label\",\n            \"type\": \"string\",\n            \"description\": \"short name for the property\",\n            \"example\": \"Age\"\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"description\": \"description of the property\",\n            \"example\": \"Age in seconds since 1970\"\n          },\n          \"type\": {\n            \"title\": \"Type\",\n            \"pattern\": \"^(number|integer|boolean|string|data:([^/\\\\s,]+/[^/\\\\s,]+|\\\\[[^/\\\\s,]+/[^/\\\\s,]+(,[^/\\\\s]+/[^/,\\\\s]+)*\\\\]))$\",\n            \"type\": \"string\",\n            \"description\": \"data type expected on this input glob matching for data type is allowed\",\n            \"examples\": [\n              \"number\",\n              \"boolean\",\n              \"data:*/*\",\n              \"data:text/*\",\n              \"data:[image/jpeg,image/png]\",\n              \"data:application/json\",\n              \"data:application/json;schema=https://my-schema/not/really/schema.json\",\n              \"data:application/vnd.ms-excel\",\n              \"data:text/plain\",\n              \"data:application/hdf5\",\n              \"data:application/edu.ucdavis@ceclancy.xyz\"\n            ]\n          },\n          \"fileToKeyMap\": {\n            \"title\": \"Filetokeymap\",\n            \"type\": \"object\",\n            \"description\": \"Place the data associated with the named keys in files\",\n            \"patternProperties\": {\n              \".+\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[-_a-zA-Z0-9]+$\"\n              }\n            },\n            \"examples\": [\n              {\n                \"dir/input1.txt\": \"key_1\",\n                \"dir33/input2.txt\": \"key2\"\n              }\n            ]\n          },\n          \"unit\": {\n            \"title\": \"Unit\",\n            \"type\": \"string\",\n            \"description\": \"Units, when it refers to a physical quantity\"\n          },\n          \"defaultValue\": {\n            \"title\": \"Defaultvalue\",\n            \"anyOf\": [\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"integer\"\n              },\n              {\n                \"type\": \"number\"\n              },\n              {\n                \"type\": \"string\"\n              }\n            ],\n            \"examples\": [\n              \"Dog\",\n              true\n            ]\n          },\n          \"widget\": {\n            \"title\": \"Widget\",\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Widget\"\n              }\n            ],\n            \"description\": \"custom widget to use instead of the default one determined from the data-type\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Metadata on a service input port\",\n        \"examples\": [\n          {\n            \"displayOrder\": 1,\n            \"label\": \"Input files\",\n            \"description\": \"Files downloaded from service connected at the input\",\n            \"type\": \"data:*/*\"\n          },\n          {\n            \"displayOrder\": 2,\n            \"label\": \"Sleep Time\",\n            \"description\": \"Time to wait before completion\",\n            \"type\": \"number\",\n            \"defaultValue\": 0,\n            \"unit\": \"second\",\n            \"widget\": {\n              \"type\": \"TextArea\",\n              \"details\": {\n                \"minHeight\": 3\n              }\n            }\n          },\n          {\n            \"label\": \"Sleep Time\",\n            \"description\": \"Time to wait before completion\",\n            \"type\": \"number\",\n            \"defaultValue\": 0,\n            \"unit\": \"second\",\n            \"widget\": {\n              \"type\": \"TextArea\",\n              \"details\": {\n                \"minHeight\": 3\n              }\n            }\n          }\n        ]\n      },\n      \"ServiceOutput\": {\n        \"title\": \"ServiceOutput\",\n        \"required\": [\n          \"label\",\n          \"description\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"displayOrder\": {\n            \"title\": \"Displayorder\",\n            \"type\": \"number\",\n            \"description\": \"DEPRECATED: new display order is taken from the item position. This will be removed.\",\n            \"deprecated\": true\n          },\n          \"label\": {\n            \"title\": \"Label\",\n            \"type\": \"string\",\n            \"description\": \"short name for the property\",\n            \"example\": \"Age\"\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"description\": \"description of the property\",\n            \"example\": \"Age in seconds since 1970\"\n          },\n          \"type\": {\n            \"title\": \"Type\",\n            \"pattern\": \"^(number|integer|boolean|string|data:([^/\\\\s,]+/[^/\\\\s,]+|\\\\[[^/\\\\s,]+/[^/\\\\s,]+(,[^/\\\\s]+/[^/,\\\\s]+)*\\\\]))$\",\n            \"type\": \"string\",\n            \"description\": \"data type expected on this input glob matching for data type is allowed\",\n            \"examples\": [\n              \"number\",\n              \"boolean\",\n              \"data:*/*\",\n              \"data:text/*\",\n              \"data:[image/jpeg,image/png]\",\n              \"data:application/json\",\n              \"data:application/json;schema=https://my-schema/not/really/schema.json\",\n              \"data:application/vnd.ms-excel\",\n              \"data:text/plain\",\n              \"data:application/hdf5\",\n              \"data:application/edu.ucdavis@ceclancy.xyz\"\n            ]\n          },\n          \"fileToKeyMap\": {\n            \"title\": \"Filetokeymap\",\n            \"type\": \"object\",\n            \"description\": \"Place the data associated with the named keys in files\",\n            \"patternProperties\": {\n              \".+\": {\n                \"type\": \"string\",\n                \"pattern\": \"^[-_a-zA-Z0-9]+$\"\n              }\n            },\n            \"examples\": [\n              {\n                \"dir/input1.txt\": \"key_1\",\n                \"dir33/input2.txt\": \"key2\"\n              }\n            ]\n          },\n          \"unit\": {\n            \"title\": \"Unit\",\n            \"type\": \"string\",\n            \"description\": \"Units, when it refers to a physical quantity\"\n          },\n          \"widget\": {\n            \"title\": \"Widget\",\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Widget\"\n              }\n            ],\n            \"description\": \"custom widget to use instead of the default one determined from the data-type\",\n            \"deprecated\": true\n          }\n        },\n        \"additionalProperties\": false,\n        \"description\": \"Metadata on a service input or output port\",\n        \"examples\": [\n          {\n            \"displayOrder\": 2,\n            \"label\": \"Time Slept\",\n            \"description\": \"Time the service waited before completion\",\n            \"type\": \"number\"\n          },\n          {\n            \"displayOrder\": 2,\n            \"label\": \"Time Slept\",\n            \"description\": \"Time the service waited before completion\",\n            \"type\": \"number\",\n            \"unit\": \"second\"\n          },\n          {\n            \"label\": \"Time Slept\",\n            \"description\": \"Time the service waited before completion\",\n            \"type\": \"number\",\n            \"unit\": \"second\"\n          }\n        ]\n      },\n      \"ServiceState\": {\n        \"title\": \"ServiceState\",\n        \"enum\": [\n          \"pending\",\n          \"pulling\",\n          \"starting\",\n          \"running\",\n          \"complete\",\n          \"failed\"\n        ],\n        \"description\": \"An enumeration.\"\n      },\n      \"ServiceType\": {\n        \"title\": \"ServiceType\",\n        \"enum\": [\n          \"computational\",\n          \"dynamic\",\n          \"frontend\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"An enumeration.\"\n      },\n      \"ServicesArrayEnveloped\": {\n        \"title\": \"ServicesArrayEnveloped\",\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"title\": \"Data\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceDockerData\"\n            }\n          }\n        }\n      },\n      \"Structure\": {\n        \"title\": \"Structure\",\n        \"required\": [\n          \"key\",\n          \"label\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"title\": \"Key\",\n            \"anyOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"boolean\"\n              },\n              {\n                \"type\": \"number\"\n              }\n            ]\n          },\n          \"label\": {\n            \"title\": \"Label\",\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TextArea\": {\n        \"title\": \"TextArea\",\n        \"required\": [\n          \"minHeight\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"minHeight\": {\n            \"title\": \"Minheight\",\n            \"exclusiveMinimum\": 0.0,\n            \"type\": \"integer\",\n            \"description\": \"minimum Height of the textarea\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ValidationError\": {\n        \"title\": \"ValidationError\",\n        \"required\": [\n          \"loc\",\n          \"msg\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"loc\": {\n            \"title\": \"Location\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"msg\": {\n            \"title\": \"Message\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"title\": \"Error Type\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Widget\": {\n        \"title\": \"Widget\",\n        \"required\": [\n          \"type\",\n          \"details\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/WidgetType\"\n              }\n            ],\n            \"description\": \"type of the property\"\n          },\n          \"details\": {\n            \"title\": \"Details\",\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/components/schemas/TextArea\"\n              },\n              {\n                \"$ref\": \"#/components/schemas/SelectBox\"\n              }\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"WidgetType\": {\n        \"title\": \"WidgetType\",\n        \"enum\": [\n          \"TextArea\",\n          \"SelectBox\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"An enumeration.\"\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "callback: json: cannot unmarshal number into Go struct field Schema.exclusiveMinimum of type bool"
}