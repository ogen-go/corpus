{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/uc-cdis/hatchery"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapis/openapi.yaml",
			"byteSize": 4200,
			"content": "openapi: 3.0.1\ninfo:\n  title: Hatchery API\n  description: Workspace service for launching and interacting with containers.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nservers:\n- url: http://nci-crdc-demo.datacommons.io/lw-workspace/\ntags:\n- name: workspace\n  description: Operations about workspaces\nsecurity:\n  - bearerAuth: []\npaths:\n  /launch:\n    post:\n      tags:\n      - workspace\n      summary: LaunchAWorkspace\n      operationId: launch\n      parameters:\n      - in: query\n        name: id\n        schema:\n          type: string\n        description: The ID of the workspace to launch from the /options list.\n      responses:\n        200:\n          description: successfully started launching\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /terminate:\n    post:\n      tags:\n      - workspace\n      summary: Terminate the actively running workspace\n      operationId: terminate\n      responses:\n        200:\n          description: successfully started terminating\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /status:\n    get:\n      tags:\n      - workspace\n      summary: Get the current status of the workspace\n      operationId: status\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /options:\n    get:\n      tags:\n      - workspace\n      summary: Get the available workspace options that can be launched\n      operationId: options\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Container'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n  /paymodels:\n    get:\n      tags:\n      - workspace\n      summary: Get the current user's pay model data\n      operationId: paymodels\n\ncomponents:\n  schemas:\n    Status:\n      type: object\n      properties:\n        status:\n          type: string\n          enum: [Launching, Running, Terminating, Stopped, Not Found]\n          description: \u003e\n            Value:\n             * `Terminating` - The workspace is shutting down\n             * `Launching` - The workspace is starting up\n             * `Stopped` - The workspace is in a failed state and must be terminated\n             * `Running` - The workspace is running and ready to be used\n             * `Not Found` - The workspace could not be found\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PodCondition'\n          description: The condition of the pod\n        containerStates:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContainerState'\n          description: The state of all the containers\n    Container:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The display name for the container\n        cpu-limit:\n          type: string\n          description: The CPU limit for the container\n        memory-limit:\n          type: string\n          description: The memory limit for the container\n        id:\n          type: string\n          description: The hash of the container, passed to /launch\n    PodCondition:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [PodScheduled, Initialized, ContainersReady, Ready]\n          description: \tName of this Pod condition\n        status:\n          type: string\n          enum: [\"True\", \"False\", Unknown]\n          description: \tIndicates whether that condition is applicable\n    ContainerState:\n      type: object\n      properties:\n        name:\n          type: string\n          description: \tName of this container\n        state:\n          type: object\n          description: \tDetails about the container's current condition\n  responses:\n    UnauthorizedError:\n      description: Access token is missing or invalid\n"
		}
	},
	"Error": "parse: parse spec: paths: /launch: post: operation \"launch\": security: unknown security schema \"bearerAuth\""
}