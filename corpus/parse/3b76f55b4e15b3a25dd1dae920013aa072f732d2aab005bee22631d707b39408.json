{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/BioKIC/NEON-Biorepository"
		},
		"file": {
			"name": "api-docs.json",
			"size": 0,
			"path": "api/storage/api-docs/api-docs.json",
			"byteSize": 29984,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Symbiota API\",\n        \"contact\": {\n            \"name\": \"Symbiota Support Hub Team\",\n            \"email\": \"symbiota@asu.edu\"\n        },\n        \"version\": \"2.0\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"../\"\n        }\n    ],\n    \"paths\": {\n        \"/api/v2/collection\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/collection\",\n                \"parameters\": [\n                    {\n                        \"name\": \"managementType\",\n                        \"in\": \"query\",\n                        \"description\": \"live, snapshot, aggregate\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"collectionType\",\n                        \"in\": \"query\",\n                        \"description\": \"preservedSpecimens, observations, researchObservation\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Controls the number of results per page\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 1000\n                        }\n                    },\n                    {\n                        \"name\": \"offset\",\n                        \"in\": \"query\",\n                        \"description\": \"Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns list of collections\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. \"\n                    }\n                }\n            }\n        },\n        \"/api/v2/collection/{identifier}\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/collection/identifier\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Installation ID or GUID associated with target collection\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns collection data\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. Collection identifier is required.\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/installation\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/installation\",\n                \"parameters\": [\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Pagination parameter: maximum number of records per page\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 100\n                        }\n                    },\n                    {\n                        \"name\": \"offset\",\n                        \"in\": \"query\",\n                        \"description\": \"Pagination parameter: page number\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns list of installations registered within system\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. \"\n                    }\n                }\n            }\n        },\n        \"/api/v2/installation/{identifier}\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/installation/identifier\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Installation ID or GUID associated with target installation\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns metabase on installation registered within system with matching ID\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. Installation identifier is required.\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/installation/ping\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/installation/ping\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns installation metadata\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. \"\n                    }\n                }\n            }\n        },\n        \"/api/v2/installation/{identifier}/touch\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/installation/identifier/touch\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Identifier of the remote installation\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"endpoint\",\n                        \"in\": \"query\",\n                        \"description\": \"Url to Symbiota root of remote installation\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns metabase remote installation, if successfully registered\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. Identifier of remote installation is required.\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/installation/{identifier}/occurrence\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/installation/identifier/occurrence\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"Identifier of the remote installation\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Pagination parameter: maximum number of records per page\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 100\n                        }\n                    },\n                    {\n                        \"name\": \"offset\",\n                        \"in\": \"query\",\n                        \"description\": \"Pagination parameter: page number\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns list of occurrences associated with an installations\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. Identifier of remote installation is required.\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/inventory\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/inventory\",\n                \"parameters\": [\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Controls the number of results in the page.\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 100\n                        }\n                    },\n                    {\n                        \"name\": \"offset\",\n                        \"in\": \"query\",\n                        \"description\": \"Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns list of inventories registered within system\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. \"\n                    }\n                }\n            }\n        },\n        \"/api/v2/inventory/{identifier}\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/inventory/identifier\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"PK, GUID, or recordID associated with target inventory\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns metabase on inventory registered within system with matching ID\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. Inventory identifier is required.\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/inventory/{identifier}/taxa\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/inventory/identifier/taxa\",\n                \"parameters\": [\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Controls the number of results per page\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 100\n                        }\n                    },\n                    {\n                        \"name\": \"offset\",\n                        \"in\": \"query\",\n                        \"description\": \"Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns list of inventories registered within system\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. \"\n                    }\n                }\n            }\n        },\n        \"/api/v2/occurrence/annotation/search\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/occurrence/annotation/search\",\n                \"parameters\": [\n                    {\n                        \"name\": \"collid\",\n                        \"in\": \"query\",\n                        \"description\": \"Internal identifier (PK) for collection\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"description\": \"Annoration type (internal, external) \",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"internal\",\n                            \"enum\": [\n                                \"internal\",\n                                \"external\"\n                            ]\n                        }\n                    },\n                    {\n                        \"name\": \"source\",\n                        \"in\": \"query\",\n                        \"description\": \"External source of Annoration (e.g. geolocate) \",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"fieldName\",\n                        \"in\": \"query\",\n                        \"description\": \"Name of occurrence field that was annotated (e.g. recordedBy, eventDate) \",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"fromDate\",\n                        \"in\": \"query\",\n                        \"description\": \"The start date of a date range the annotation was created (e.g. 2022-02-05) \",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"date\"\n                        }\n                    },\n                    {\n                        \"name\": \"toDate\",\n                        \"in\": \"query\",\n                        \"description\": \"The end date of a date range the annotation was created (e.g. 2022-02-05) \",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"date\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Controls the number of results per page\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 500\n                        }\n                    },\n                    {\n                        \"name\": \"offset\",\n                        \"in\": \"query\",\n                        \"description\": \"Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns list of occurrence edits\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. \"\n                    }\n                }\n            }\n        },\n        \"/api/v2/occurrence/search\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/occurrence/search\",\n                \"parameters\": [\n                    {\n                        \"name\": \"catalogNumber\",\n                        \"in\": \"query\",\n                        \"description\": \"catalogNumber\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"occurrenceID\",\n                        \"in\": \"query\",\n                        \"description\": \"occurrenceID\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"country\",\n                        \"in\": \"query\",\n                        \"description\": \"country\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"stateProvince\",\n                        \"in\": \"query\",\n                        \"description\": \"State, Province, or second level political unit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"county\",\n                        \"in\": \"query\",\n                        \"description\": \"County, parish, or third level political unit\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"collid\",\n                        \"in\": \"query\",\n                        \"description\": \"collid - collection identifier in portal\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"datasetID\",\n                        \"in\": \"query\",\n                        \"description\": \"dataset ID within portal\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"family\",\n                        \"in\": \"query\",\n                        \"description\": \"family\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"sciname\",\n                        \"in\": \"query\",\n                        \"description\": \"Scientific Name - binomen only without authorship\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"eventDate\",\n                        \"in\": \"query\",\n                        \"description\": \"Date as YYYY, YYYY-MM or YYYY-MM-DD\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"limit\",\n                        \"in\": \"query\",\n                        \"description\": \"Controls the number of results per page\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 100\n                        }\n                    },\n                    {\n                        \"name\": \"offset\",\n                        \"in\": \"query\",\n                        \"description\": \"Determines the offset for the search results. A limit of 200 and offset of 100, will get the third page of 100 results.\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns list of occurrences\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. \"\n                    }\n                }\n            }\n        },\n        \"/api/v2/occurrence/{identifier}\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/occurrence/identifier\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"occid or specimen GUID (occurrenceID) associated with target occurrence\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"includeMedia\",\n                        \"in\": \"query\",\n                        \"description\": \"Whether to include media within output\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"includeIdentifications\",\n                        \"in\": \"query\",\n                        \"description\": \"Whether to include full Identification History within output\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns single occurrence record\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. Occurrence identifier is required.\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/occurrence/{identifier}/identification\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/occurrence/identifier/identification\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"occid or specimen GUID (occurrenceID) associated with target occurrence\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns identification records associated with a given occurrence record\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. Occurrence identifier is required.\"\n                    }\n                }\n            }\n        },\n        \"/api/v2/occurrence/{identifier}/media\": {\n            \"get\": {\n                \"tags\": [\n                    \"\"\n                ],\n                \"operationId\": \"/api/v2/occurrence/identifier/media\",\n                \"parameters\": [\n                    {\n                        \"name\": \"identifier\",\n                        \"in\": \"path\",\n                        \"description\": \"occid or specimen GUID (occurrenceID) associated with target occurrence\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns media records associated with a given occurrence record\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error: Bad request. Occurrence identifier is required.\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"responses\": {\n            \"200\": {\n                \"description\": \"Triggers a reharvest event of a snapshot record. If record is Live managed, request is ignored\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {}\n                    }\n                }\n            },\n            \"400\": {\n                \"description\": \"Error: Bad request: Occurrence identifier is required, API can only be triggered locally (at this time).\"\n            },\n            \"500\": {\n                \"description\": \"Error: unable to locate record\"\n            }\n        },\n        \"parameters\": {\n            \"identifier\": {\n                \"name\": \"identifier\",\n                \"in\": \"path\",\n                \"description\": \"occid or specimen GUID (occurrenceID) associated with target occurrence\",\n                \"required\": true,\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/BioKIC/NEON-Biorepository@04739e1b4baee64d9a54ecc478682c20929abb0e/-/blob/api/storage/api-docs/api-docs.json",
			"externalURLs": [
				{
					"url": "https://github.com/BioKIC/NEON-Biorepository/blob/04739e1b4baee64d9a54ecc478682c20929abb0e/api/storage/api-docs/api-docs.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v2/inventory/{identifier}/taxa\": get: operation \"/api/v2/inventory/identifier/taxa\": at api/storage/api-docs/api-docs.json:375:20: parse path \"/api/v2/inventory/{identifier}/taxa\": path parameter not specified: \"identifier\""
}