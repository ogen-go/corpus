{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/icerockdev/moko-template"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "mpp-library/domain/src/openapi.yml",
			"byteSize": 7147,
			"content": "openapi: 3.0.0\ninfo:\n  title: News API\n  version: v2\nservers: \n  - url: https://newsapi.org/v2\n    description: live\npaths:\n  /top-headlines:\n    get:\n      tags:\n        - news\n      summary: 'live top and breaking headlines'\n      description: |\n        This endpoint provides live top and breaking headlines for a country, specific category in a country, single source, or multiple sources. You can also search with keywords. Articles are sorted by the earliest date published first. \n      \n        This endpoint is great for retrieving headlines for display on news tickers or similar.\n      parameters: \n        - name: country\n          in: query\n          description: The 2-letter ISO 3166-1 code of the country you want to get headlines for.\n          required: false\n          schema:\n            type: string\n            enum: \n              - ae\n              - ar\n              - at\n              - au\n              - be\n              - bg \n              - br\n              - ca\n              - ch\n              - cn\n              - co\n              - cu\n              - cz\n              - de\n              - eg\n              - fr\n              - gb\n              - gr\n              - hk\n              - hu\n              - id\n              - ie\n              - il\n              - in\n              - it\n              - jp\n              - kr\n              - lt\n              - lv\n              - ma\n              - mx\n              - my\n              - ng\n              - nl\n              - no\n              - nz\n              - ph\n              - pl\n              - pt\n              - ro\n              - rs\n              - ru\n              - sa\n              - se\n              - sg\n              - si\n              - sk\n              - th\n              - tr\n              - tw\n              - ua\n              - us\n              - ve\n              - za\n        - name: category\n          in: query\n          description: The category you want to get headlines for\n          required: false\n          schema:\n            type: string\n            enum: \n            - business\n            - entertainment\n            - general\n            - health\n            - science\n            - sports\n            - technology\n        - name: q\n          in: query\n          schema:\n            type: string\n          description: Keywords or a phrase to search for\n          required: false\n          example: android\n        - name: pageSize\n          in: query\n          required: false\n          schema:\n            type: integer\n          description: The number of results to return per page (request). 20 is the default, 100 is the maximum.\n          example: 20\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n          description: Use this to page through the results if the total results found is greater than the page size.\n      security: \n        - bearerAuth: []\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopHeadlinesResponse'\n        '400':\n          description: 'Bad request'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    BadRequest:\n      properties:\n        status:\n          description: \u003e\n            If the request was successful or not. \n            Options: ok, error. In the case of error a code and message property will be populated.\n          type: string\n          enum: [ok, error]\n          example: error\n        code:\n          type: string\n          example: parametersMissing\n        message:\n          type: string\n          example: \u003e\n            Required parameters are missing. Please set any of the following parameters and try again: sources, q, language, country, category.\n      required: \n        - status\n        - code\n        - message\n    TopHeadlinesResponse:\n      properties:\n        status:\n          description: \u003e\n            If the request was successful or not. \n            Options: ok, error. In the case of error a code and message property will be populated.\n          type: string\n          enum: [ok, error]\n          example: ok\n        totalResults:\n          type: integer\n          description: The total number of results available for your request.\n        articles:\n          type: array\n          items:\n            $ref: '#/components/schemas/Article'\n      required: \n        - status\n        - totalResults\n        - articles\n      type: object\n    Article:\n      type: object\n      properties:\n        source:\n          $ref: '#/components/schemas/Source'\n        author:\n          type: string\n          description: The author of the article\n          example: Stephen King\n        title:\n          type: string\n          description: The headline or title of the article.\n          example: The Dark Tower\n        description:\n          type: string\n          description: A description or snippet from the article.\n          example: The Dark Tower is a series of eight books and one short story written by American author Stephen King that incorporate themes from multiple genres.\n        url:\n          type: string\n          description: The direct URL to the article.\n          example: https://en.wikipedia.org/wiki/The_Dark_Tower_(series)\n        urlToImage:\n          type: string\n          description: The URL to a relevant image for the article.\n          example: https://upload.wikimedia.org/wikipedia/en/5/54/Thedarktower7.jpg\n        publishedAt:\n          type: string\n          format: date-time\n          description: The date and time that the article was published, in UTC (+000)\n        content:\n          type: string\n          description: The unformatted content of the article, where available. This is truncated to 260 chars for Developer plan users.\n          example: \u003e\n            The series was chiefly inspired by the poem \"Childe Roland to the Dark Tower Came\" by Robert Browning, whose full text was included in the final volume's appendix. In the preface to the revised 2003 edition of The Gunslinger, King also identifies The Lord of the Rings, Arthurian Legend, and The Good, the Bad and the Ugly as inspirations. He identifies Clint Eastwood's \"Man with No Name\" character as one of the major inspirations for the protagonist, Roland Deschain. King's style of location names in the series, such as Mid-World, and his development of a unique language abstract to our own (High Speech), are also influenced by J. R. R. Tolkien's work.\n      required: \n        - source\n        - title\n        - url\n        - publishedAt\n    Source:\n      type: object\n      properties:\n        id:\n          type: string\n          example: wiki\n        name:\n          type: string\n          example: Wikipedia\n      required: \n        - name\n  parameters:\n    Authorization:\n      name: Authorization\n      in: header\n      required: true\n      schema:\n        type: string",
			"canonicalURL": "/github.com/icerockdev/moko-template@1e202b699153a337944ca4b00353ecf3a685884d/-/blob/mpp-library/domain/src/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/icerockdev/moko-template/blob/1e202b699153a337944ca4b00353ecf3a685884d/mpp-library/domain/src/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/top-headlines\": get: parameters: parse parameter \"country\": schema: at 1:3837: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}