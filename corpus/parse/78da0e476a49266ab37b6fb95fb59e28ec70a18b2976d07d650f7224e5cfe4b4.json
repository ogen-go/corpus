{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anoma/namada"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "documentation/dev/src/specs/ledger/openapi.yml",
			"byteSize": 8944,
			"content": "openapi: 3.0.3\ninfo:\n  title: Anoma\n  description: Interacting with an Anoma blockchain via Tendermint RPC\n  version: 0.6.1\nservers:\n  - url: http://127.0.0.1:26657\n    description: Tendermint RPC endpoint for an Anoma ledger\npaths:\n  /:\n    post:\n      summary: Interact with the Anoma blockchain via Tendermint RPC\n      operationId: abci_query\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  description: Should be unique between requests\n                  type: integer\n                  example: 58392\n                method:\n                  description: The Tendermint RPC method being called which in this case should always be abci_query\n                  type: string\n                  enum:\n                    - \"abci_query\"\n                params:\n                  type: object\n                  required:\n                    - path\n                  properties:\n                    path:\n                      description: Path as will be recognized by the ledger\n                      oneOf:\n                        - type: string\n                          enum:\n                            - \"epoch\"\n                            - \"dry_run_tx\"\n                          description: \u003e\n                            * `epoch` - Get the epoch of the last block (the height argument is not yet supported \u003chttps://github.com/anoma/namada/issues/172\u003e)\n                            * `dry_run_tx` - Dry run a transaction\n                        - type: string\n                          description: Read a storage value with exact storage key\n                          pattern: r\"^value\\/.+$\"\n                        - type: string\n                          description: Read a range of storage values with a matching key prefix\n                          pattern: r\"^prefix\\/.+$\"\n                        - type: string\n                          description: Check if the given storage key exists\n                          pattern: r\"^has_key\\/.+$\"\n                    data:\n                      description: Optional data to go along with the query (base64-encoded if necessary)\n                      type: string\n                      example: \"abcd\"\n                      default: \"\"\n                    height:\n                      description: Height as a base64 encoded integer (0 means latest)\n                      type: string\n                      example: \"1\"\n                      default: \"0\"\n                    prove:\n                      description: Include proofs of the transaction's inclusion in the block\n                      type: boolean\n                      example: true\n                      default: false\n            examples:\n              epoch_latest:\n                summary: Get the latest epoch\n                value:\n                  {\n                    \"id\": 2,\n                    \"method\": \"abci_query\",\n                    \"params\": { \"path\": \"epoch\" },\n                  }\n              epoch_at_height:\n                summary: Get the epoch at a given height\n                value:\n                  {\n                    \"id\": 2,\n                    \"method\": \"abci_query\",\n                    \"params\": { \"path\": \"epoch\", \"height\": 2 },\n                  }\n              get_account_public_key:\n                summary: Get the public key for an account which has been initialized with a validity predicate, with proof\n                value:\n                  {\n                    \"id\": 2,\n                    \"method\": \"abci_query\",\n                    \"params\":\n                      {\n                        \"path\": \"value/#atest1v4ehgw36g4pyg3j9x3qnjd3cxgmyz3fk8qcrys3hxdp5xwfnx3zyxsj9xgunxsfjg5u5xvzyzrrqtn/public_key\",\n                        \"prove\": true,\n                      },\n                  }\n      responses:\n        \"200\":\n          description: Response of the submitted query, which may have been successful or may have errored at the application level.\n          content:\n            application/json:\n              schema:\n                $ref: \"https://docs.tendermint.com/v0.34/rpc/openapi.yaml#/components/schemas/ABCIQueryResponse\"\n              examples:\n                epoch_latest:\n                  value:\n                    {\n                      \"jsonrpc\": \"2.0\",\n                      \"id\": 2,\n                      \"result\":\n                        {\n                          \"response\":\n                            {\n                              \"code\": 0,\n                              \"log\": \"\",\n                              \"info\": \"\",\n                              \"index\": \"0\",\n                              \"key\": null,\n                              \"value\": \"lQAAAAAAAAA=\",\n                              \"proofOps\": null,\n                              \"height\": \"0\",\n                              \"codespace\": \"\",\n                            },\n                        },\n                    }\n                get_account_public_key:\n                  value:\n                    {\n                      \"jsonrpc\": \"2.0\",\n                      \"id\": 2,\n                      \"result\":\n                        {\n                          \"response\":\n                            {\n                              \"code\": 0,\n                              \"log\": \"\",\n                              \"info\": \"\",\n                              \"index\": \"0\",\n                              \"key\": null,\n                              \"value\": \"ABdruiwJLZ4w4Z/MoD+aW3fH4vkc9+QhGOCGmDr1oVz+\",\n                              \"proofOps\":\n                                {\n                                  \"ops\":\n                                    [\n                                      {\n                                        \"type\": \"ics23_CommitmentProof\",\n                                        \"key\": \"I2F0ZXN0MXY0ZWhndzM2ZzRweWczajl4M3FuamQzY3hnbXl6M2ZrOHFjcnlzM2h4ZHA1eHdmbngzenl4c2o5eGd1bnhzZmpnNXU1eHZ6eXpycnF0bi9wdWJsaWNfa2V5\",\n                                        \"data\": \"Cu0CCmAjYXRlc3QxdjRlaGd3MzZnNHB5ZzNqOXgzcW5qZDNjeGdteXozZms4cWNyeXMzaHhkcDV4d2ZueDN6eXhzajl4Z3VueHNmamc1dTV4dnp5enJycXRuL3B1YmxpY19rZXkSIQAXa7osCS2eMOGfzKA/mlt3x+L5HPfkIRjghpg69aFc/hooCAEQARgBKiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIkCAESIOQIgEOVb0Hv2eOTmYDks2uP4L4gs0RgmV2wUisInkbQIiQIARog04WfgQqfT2X9aD9qhA/fWy6LS6JjdmkpmUfkK9hoKOwiJAgBEiB+tFAPUElWCcCpAL4khjoihfs19F7tfdagbWWE44kCESIkCAEaIBtq2MVGbblK4zgD3h5vxQNKiCU+dmaHLQSpzWvBT3lwIiQIARogwl8LV3ECHOBxasQriaEAE/dgSZnKZ6vBm6Zm7vTED0Y=\",\n                                      },\n                                      {\n                                        \"type\": \"ics23_CommitmentProof\",\n                                        \"key\": \"I2F0ZXN0MXY0ZWhndzM2ZzRweWczajl4M3FuamQzY3hnbXl6M2ZrOHFjcnlzM2h4ZHA1eHdmbngzenl4c2o5eGd1bnhzZmpnNXU1eHZ6eXpycnF0bi9wdWJsaWNfa2V5\",\n                                        \"data\": \"CnkKB2FjY291bnQSIMMIWmruLiaYEqu6LGhBd6QS74N0WncwSIe+tIux4F+BGiYIARABKiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIkCAESIG3BkVXL0ICjUIY1bV7YSPruEfFZLIB2vlL7lpwQ3ycX\",\n                                      },\n                                    ],\n                                },\n                              \"height\": \"0\",\n                              \"codespace\": \"\",\n                            },\n                        },\n                    }\n                invalid_storage_key:\n                  value:\n                    {\n                      \"jsonrpc\": \"2.0\",\n                      \"id\": 2,\n                      \"result\":\n                        {\n                          \"response\":\n                            {\n                              \"code\": 1,\n                              \"log\": \"\",\n                              \"info\": \"RPC error: Invalid storage key: Error parsing address: Error decoding address from Bech32m: invalid length\",\n                              \"index\": \"0\",\n                              \"key\": null,\n                              \"value\": null,\n                              \"proofOps\": null,\n                              \"height\": \"0\",\n                              \"codespace\": \"\",\n                            },\n                        },\n                    }\n        \"500\":\n          description: Tendermint-level error\n          content:\n            application/json:\n              schema:\n                $ref: \"https://docs.tendermint.com/v0.34/rpc/openapi.yaml#/components/schemas/ErrorResponse\"\n              example:\n                {\n                  \"jsonrpc\": \"2.0\",\n                  \"error\":\n                    {\n                      \"code\": -32700,\n                      \"message\": \"Parse error. Invalid JSON\",\n                      \"data\": \"error unmarshaling request: invalid character 'd' after object key:value pair\",\n                    },\n                }\n",
			"canonicalURL": "/github.com/anoma/namada@f82c253f878ed393929d4768c5fa34d707e1fd59/-/blob/documentation/dev/src/specs/ledger/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/anoma/namada/blob/f82c253f878ed393929d4768c5fa34d707e1fd59/documentation/dev/src/specs/ledger/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/\": post: operation \"abci_query\": responses: 200: content: application/json: schema: parse schema: at 1:4054: external \"https://docs.tendermint.com/v0.34/rpc/openapi.yaml\": get: https: do: Get \"https://docs.tendermint.com/v0.34/rpc/openapi.yaml\": host \"docs.tendermint.com\" is not allowed"
}