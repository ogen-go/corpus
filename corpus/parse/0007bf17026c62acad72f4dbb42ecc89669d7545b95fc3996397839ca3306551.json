{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/awslabs/service-workbench-on-aws"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 97902,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: service-workbench-on-aws\n  description: API collection of service-workbench-on-aws\n  contact:\n    email: aws-chamonix-dev@amazon.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: v1.4.3\ntags:\n  - name: admins\n    description: Secured Admin-only calls\n  - name: researchers\n    description: Operations available to regular researchers\n  - name: internal-guests\n    description: Operations available to guest users\n  - name: guests\n    description: Operations available to guest users\n  - name: public\n    description: Operations available to public\n  - name: BYOB\n    description: Operations for bring your own bucket configuration\n  - name: SC-EnvType\n    description: Operations for service catalog environment types\n  - name: SC-EnvTypeConfig\n    description: Operations for service catalog environment type configurations\n  - name: SC-EnvWorkspace\n    description: Operations for create and manage workspaces with service catalog environment types\n  - name: Studies\n    description: Operations for create and manage studies (Data folders)\n  - name: Budgets\n    description: Operations for create and manage budgets\n  - name: Accounts\n    description: Operations available for managing internal accounts\n  - name: AwsAccounts\n    description: Operations available for managing AWS accounts which back internal accounts\n  - name: Compute\n    description: Operations for compute platforms available for provisioning\n  - name: Index\n    description: Operations for managing Indexes\n  - name: IP\n    description: Operation for getting IP address\n  - name: Project\n    description: Operations for managing Projects\n  - name: CfnTemplate\n    description: Operation to fetch CloudFormation templates\n  - name: UserRoles\n    description: Operation to fetch all types of user roles\n  - name: User\n    description: Operations to manage users in Service Workbench\n  - name: Cost\n    description: Operation to view cost breakdown\n  - name: StepTemplates\n    description: Operations for viewing step templates. Step templates can be added to new Workflows\n  - name: authN\n    description: Operation for login, logout, authN provider\n  - name: Workflows\n    description: Operations for viewing, editing, and adding Workflows\n  - name: WorkflowTemplates\n    description: Operations for viewing, editing, and adding Workflow Templates\n  - name: KeyPairs\n    description: Operations for viewing, editing, and adding KeyPairs\npaths:\n  /api/authentication/provider/configs:\n    get:\n      tags:\n        - admin\n        - authN\n      summary: Get authentication provider configs detail\n      operationId: GetAuthNConfigsDetail\n      description: |\n        Get authentication provider configs detail\n      responses:\n        '200':\n          description: Array of authN provider configs detail\n  /api/authentication/provider/types:\n    get:\n      tags:\n        - admin\n        - authN\n      summary: Get authentication provider types\n      operationId: GetAuthNTypes\n      description: |\n        Get authentication provider types\n      responses:\n        '200':\n          description: Array of authN provider types\n  /api/authentication/public/provider/configs/:\n    get:\n      tags:\n        - public\n        - authN\n      summary: Get authentication provider configs\n      operationId: GetAuthNConfigs\n      description: |\n        Get authentication provider configs\n      responses:\n        '200':\n          description: Array of authN provider configs\n  /api/authentication/logout:\n    post:\n      tags:\n        - authN\n      summary: Log out\n      operationId: LogOut\n      description: |\n        Log out\n      responses:\n        '200':\n          description: Revoked message\n  /api/costs:\n    get:\n      tags:\n        - researchers\n        - admins\n      summary: Get cost breakdown\n      operationId: GetCosts\n      description: |\n        Get cost breakdown based on query parameters\n      parameters:\n        - in: query\n          name: env\n          schema:\n            type: string\n            description: 'EnvironmentId for fetching costs'\n        - in: query\n          name: scEnv\n          schema:\n            type: string\n            description: 'Service Catalog EnvironmentId for fetching costs'\n        - in: query\n          name: proj\n          schema:\n            type: string\n            description: 'Index to use for fetching costs'\n        - in: query\n          name: groupByUser\n          schema:\n            type: boolean\n            description: 'true if grouping costs by user'\n        - in: query\n          name: groupByEnv\n          schema:\n            type: boolean\n            description: 'true if grouping costs by environment'\n        - in: query\n          name: groupByService\n          schema:\n            type: boolean\n            description: 'true if grouping costs by service'\n        - in: query\n          name: numberOfDaysInPast\n          schema:\n            type: string\n            description: 'How far back to look for fetching costs'\n      responses:\n        '200':\n          description: Cost breakdown\n  /api/users:\n    get:\n      tags:\n        - admins\n        - researchers\n        - guests\n        - internal-guests\n        - User\n      summary: List all users\n      operationId: ListUsers\n      description: |\n        List all users\n      responses:\n        '200':\n          description: Array of registered users\n    post:\n      tags:\n        - admins\n        - User\n      summary: Create a new User\n      operationId: CreateUser\n      description: |\n        Create a new User\n      requestBody:\n        description: User information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserRequest'\n      responses:\n        '200':\n          description: User added\n  /api/users/bulk:\n    post:\n      tags:\n        - admins\n        - User\n      summary: Create users in bulk\n      operationId: CreateUsers\n      description: |\n        Create a new User\n      requestBody:\n        description: Bulk User information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUsersRequest'\n      responses:\n        '200':\n          description: Users added\n  /api/users/{userId}:\n    parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/UserId'\n    put:\n      tags:\n        - admins\n        - User\n      summary: Update user\n      operationId: UpdateUser\n      requestBody:\n        description: User information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n      description: |\n        Update a user\n      responses:\n        '200':\n          description: User updated\n  /api/user:\n    get:\n      tags:\n        - admins\n        - researchers\n        - guests\n        - internal guests\n        - User\n      summary: Get user information of current user\n      operationId: getCurrentUser\n      description: |\n        Get current user information\n      responses:\n        '200':\n          description: user information\n    put:\n      tags:\n        - admins\n        - researchers\n        - guests\n        - internal guests\n        - User\n      summary: Update user information of current user\n      operationId: updateCurrentUser\n      description: |\n        Update current user information\n      responses:\n        '200':\n          description: updated user information\n      requestBody:\n        description: fields to update in user information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCurrentUserInfo'\n  /api/user-roles:\n    get:\n      tags:\n        - admins\n        - guests\n        - internal-guests\n        - researchers\n        - UserRoles\n      summary: Fetch all user roles present in Service Workbench\n      operationId: ListUserRoles\n      description: |\n        Fetch all user roles present in Service Workbench\n      responses:\n        '200':\n          description: Array of all the registered user roles\n  /api/template/{templateId}:\n    get:\n      tags:\n        - admins\n        - guests\n        - internal-guests\n        - researchers\n        - CfnTemplate\n      summary: Fetch S3 pre-signed URL which points to the requested CloudFormation template\n      operationId: GetCfnTemplateById\n      parameters:\n        - name: templateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/TemplateId'\n      description: |\n        Fetch S3 pre-signed URL which points to the requested CloudFormation template\n      responses:\n        '200':\n          description: Pre-signed URL pointing to requested CloudFormation template\n  /api/ip:\n    get:\n      tags:\n        - admins\n        - guests\n        - internal-guests\n        - researchers\n        - IP\n      summary: Fetch IP address of the requester\n      operationId: GetIPAddress\n      description: |\n        Fetch IP address of the requester\n      responses:\n        '200':\n          description: IP address of the requester\n  /api/projects:\n    get:\n      tags:\n        - admins\n        - Project\n      summary: List all projects\n      operationId: ListProjects\n      description: |\n        List all projects\n      responses:\n        '200':\n          description: Array of registered projects\n    post:\n      tags:\n        - admins\n        - Project\n      summary: Create a new Project\n      operationId: CreateProject\n      description: |\n        Create new Project\n      requestBody:\n        description: Project information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProjectRequest'\n      responses:\n        '200':\n          description: Project added\n  /api/projects/{projectId}:\n    parameters:\n      - name: projectId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/ProjectId'\n    get:\n      tags:\n        - admins\n        - Project\n      summary: Get Project by projectId\n      operationId: GetProjectById\n      description: |\n        List Project by projectId\n      responses:\n        '200':\n          description: The requested project\n    put:\n      tags:\n        - admins\n        - Project\n      summary: Update a Project\n      operationId: UpdateProject\n      requestBody:\n        description: Project information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProjectRequest'\n      description: |\n        Update a Project\n      responses:\n        '200':\n          description: Project updated\n  /api/indexes:\n    get:\n      tags:\n        - admins\n        - Index\n      summary: List all indexes\n      operationId: ListIndex\n      description: |\n        List all indexes\n      responses:\n        '200':\n          description: Array of registered indexes\n    post:\n      tags:\n        - admins\n        - Index\n      summary: Create a new Index\n      operationId: CreateIndex\n      description: |\n        Create new Index\n      requestBody:\n        description: Index information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateIndexRequest'\n      responses:\n        '200':\n          description: Index added\n  /api/indexes/{indexId}:\n    parameters:\n      - name: indexId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/IndexId'\n    get:\n      tags:\n        - admins\n        - Index\n      summary: Get Index by indexId\n      operationId: GetIndexById\n      description: |\n        List Index by indexId\n      responses:\n        '200':\n          description: Array of registered indexes\n    put:\n      tags:\n        - admins\n        - Index\n      summary: Update an Index\n      operationId: UpdateIndex\n      requestBody:\n        description: Index information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateIndexRequest'\n      description: |\n        Update an Index\n      responses:\n        '200':\n          description: Index updated\n    delete:\n      tags:\n        - admins\n        - Index\n      summary: Delete an Index\n      operationId: DeleteIndex\n      description: |\n        Delete an Index\n      responses:\n        '200':\n          description: Index deleted\n  /api/aws-accounts:\n    get:\n      tags:\n        - admins\n        - AwsAccounts\n      summary: List all registered AWS accounts\n      operationId: ListAwsAccounts\n      description: |\n        List all registered AWS accounts\n      responses:\n        '200':\n          description: Array of registered AWS accounts\n    post:\n      tags:\n        - admins\n        - AwsAccounts\n      summary: Create a new AWS Account\n      operationId: CreateAwsAccount\n      description: |\n        Create the AWS Account. Note that this doesn't provision a new account, just adds an entry in backend\n      requestBody:\n        description: AWS Account information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAwsAccountRequest'\n      responses:\n        '200':\n          description: AWS Account information added\n  /api/aws-accounts/{awsAccountUUID}:\n    get:\n      tags:\n        - admins\n        - AwsAccounts\n      summary: Get AWS account information\n      operationId: GetAwsAccount\n      parameters:\n        - name: awsAccountUUID\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/AwsAccountUUID'\n      description: |\n        Get AWS Account information\n      responses:\n        '200':\n          description: AWS Account information\n    put:\n      tags:\n        - admins\n        - AwsAccounts\n      summary: Update an existing AWS Account\n      operationId: UpdateAwsAccount\n      description: |\n        Update an existing AWS Account's details in the backend DB\n      requestBody:\n        description: Updated AWS Account information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAwsAccount'\n      responses:\n        '200':\n          description: AWS Account updated\n  /api/aws-accounts/provision:\n    post:\n      tags:\n        - admins\n        - AwsAccounts\n      summary: Provision a new AWS Account\n      operationId: ProvisionAwsAccounts\n      description: |\n        Provision a new AWS Account\n      requestBody:\n        description: AWS Account information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProvisionAccountRequest'\n      responses:\n        '200':\n          description: AWS Account provisioning started\n  /api/aws-accounts/permissions:\n    get:\n      tags:\n        - admins\n        - AwsAccounts\n      summary: Get status of permissions for all AWS accounts from CFN stacks\n      operationId: getAllAwsAccountsPermissionsStatus\n      description: |\n        Get status of permissions for all AWS accounts from CFN stacks\n      responses:\n        '200':\n          description: Permissions status information\n  /api/aws-accounts/{awsAccountUUID}/permissions:\n    parameters:\n      - name: awsAccountUUID\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/GetAwsAccountPermissionsStatus'\n    get:\n      tags:\n        - admins\n        - AwsAccounts\n      summary: Get status of permissions for a specific AWS account using CFN stack\n      operationId: getAwsAccountPermissionsStatus\n      description: |\n        Get status of permissions for a specific AWS account using CFN stack\n      responses:\n        '200':\n          description: Permissions status information\n  /api/aws-accounts/{awsAccountUUID}/get-template:\n    parameters:\n      - name: awsAccountUUID\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/GetAwsAccountPermissionsStatus'\n    get:\n      tags:\n        - admins\n        - AwsAccounts\n      summary: Upload template to S3 and return information necessary to access the template\n      operationId: getAndUploadTemplateForAccount\n      description: |\n        Uploads expected CFN tempalte for AWS accounts to S3, and returns an object containing a \n        signed URL to access the template (valid for 12 hours by default). Also returns info\n        about the stack to be saved in the backend DB for the AWS account.\n      responses:\n        '200':\n          description: CFN Stack info with S3 signed URL.\n  /api/accounts:\n    get:\n      tags:\n        - admins\n        - Accounts\n      summary: List all registered accounts\n      operationId: ListAccounts\n      description: |\n        List all registered accounts\n      responses:\n        '200':\n          description: Array of registered accounts\n    post:\n      tags:\n        - admins\n        - Accounts\n      summary: Provision a new AWS Account\n      operationId: ProvisionAccount\n      description: |\n        Provision the requested AWS Account\n      requestBody:\n        description: AWS account info for provisioning\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProvisionAccountRequest'\n      responses:\n        '200':\n          description: AWS Account provisioning started\n  /api/accounts/{awsAccountId}:\n    parameters:\n      - name: awsAccountId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/AwsAccountId'\n    get:\n      tags:\n        - admins\n        - Accounts\n      summary: Get account information\n      operationId: GetAccount\n      description: |\n        Get account information\n      responses:\n        '200':\n          description: Account information\n    put:\n      tags:\n        - admins\n        - Accounts\n      summary: Update account information\n      operationId: UpdateAccount\n      description: |\n        Update the requested Account\n      requestBody:\n        description: Account information to update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccountRequest'\n      responses:\n        '200':\n          description: Account information updated\n    delete:\n      tags:\n        - admins\n        - Accounts\n      summary: Delete account\n      operationId: DeleteAccount\n      description: |\n        Delete account\n      responses:\n        '200':\n          description: Account deleted\n  /api/data-sources/accounts:\n    get:\n      tags:\n        - admins\n        - BYOB\n      summary: List DS Acccounts\n      operationId: ListDSAcccounts\n      description: |\n        List all external DataSource accounts\n      responses:\n        '200':\n          description: Array of data source accounts\n    post:\n      tags:\n        - admins\n        - BYOB\n      summary: Register DS account\n      description: Add a data source account\n      operationId: RegisterDSaccount\n      requestBody:\n        description: Data source AWS account to add\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDataSourceAccount'\n      responses:\n        \"201\":\n          description: item created\n  /api/data-sources/accounts/{awsAccountId}:\n    put:\n      tags:\n        - admins\n        - BYOB\n      summary: Update DS account\n      operationId: UpdateDSaccount\n      parameters:\n        - name: awsAccountId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/AwsAccountId'\n      responses:\n        '200':\n          description: 'Update existing data source account'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataSourceAccount'\n  /api/data-sources/accounts/{awsAccountId}/buckets:\n    post:\n      tags:\n        - admins\n        - BYOB\n      summary: Register DS bucket\n      operationId: RegisterDSbucket\n      parameters:\n        - name: awsAccountId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/AwsAccountId'\n      responses:\n        '201':\n          description: 'bucket registered'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterDataSourceBucket'\n  /api/data-sources/accounts/ops/reachability:\n    post:\n      tags:\n        - admins\n        - BYOB\n      summary: Attempt to reach\n      description: Attempt to test reachability/availability of registered accounts and their studies.\n      operationId: AttemptReach\n      responses:\n        '200':\n          description: reachability/availability of registered accounts and their studies requested\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataSourceReachability'\n  /api/data-sources/accounts/{awsAccountId}/cfn:\n    post:\n      tags:\n        - admins\n        - BYOB\n      summary: Generate Account CFN template\n      operationId: GenerateAccountCFNtemplate\n      description: Creates a CloudFormation template which will create an IAM role in Data Source Account which allows Service Workbench to create roles which will have access to S3 Study paths and KMS keys\n      parameters:\n        - name: awsAccountId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/AwsAccountId'\n      responses:\n        '200':\n          description: cfn template for data source account onboard\n  /api/data-sources/accounts/{awsAccountId}/studies:\n    get:\n      tags:\n        - admins\n        - BYOB\n      summary: List studies for account\n      description: List all the studies under a data source account\n      operationId: ListStudiesForAccount\n      parameters:\n        - name: awsAccountId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/AwsAccountId'\n      responses:\n        '200':\n          description: array of studies under the data source account specified\n  /api/data-sources/accounts/{awsAccountId}/buckets/{bucketName}/studies:\n    post:\n      tags:\n        - admins\n        - BYOB\n      summary: Register Study\n      operationId: RegisterStudy\n      parameters:\n        - name: awsAccountId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/AwsAccountId'\n        - name: bucketName\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: array of studies under the bucket specified\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterStudy'\n\n  /api/workspace-type-candidates:\n    get:\n      tags:\n        - SC-EnvType\n        - admins\n      summary: list workspace type candidates\n      operationId: listWSTypeCandidates\n      parameters:\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum:\n              - '*'\n              - 'not-imported'\n        - name: version\n          in: query\n          schema:\n            type: string\n            enum:\n              - '*'\n              - 'latest'\n      responses:\n        '200':\n          description: Object containing the default Service Catalog portfolio ID, and an array of workspace type candidates that fits the query filters (by default this array contains latest not imported workspace type candidates).\n  /api/workspace-types:\n    get:\n      tags:\n        - SC-EnvType\n        - admins\n      summary: list workspace types\n      operationId: listWSTypes\n      parameters:\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum:\n              - '*'\n              - 'not-approved'\n              - 'approved'\n      responses:\n        '200':\n          description: Array of workspace types in the status queried. Default return approved.\n    post:\n      tags:\n        - SC-EnvType\n        - admins\n      summary: create (import) workspace type\n      operationId: createWSType\n      responses:\n        '200':\n          description: 'Return the workspace type imported.'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEnvType'\n  /api/workspace-types/{envTypeId}:\n    parameters:\n      - name: envTypeId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/EnvTypeId'\n    get:\n      tags:\n        - admins\n        - SC-EnvType\n      summary: get environment type\n      operationId: getEnvType\n      responses:\n        '200':\n          description: 'return the environment type requested'\n    delete:\n      tags:\n        - admins\n        - SC-EnvType\n      summary: delete (unimport) environment type\n      operationId: deleteEnvType\n      responses:\n        '200':\n          description: 'Return empty json object'\n    put:\n      tags:\n        - admins\n        - SC-EnvType\n      summary: update environment type\n      operationId: updateEnvType\n      responses:\n        '200':\n          description: 'Return the updated environment type'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEnvType'\n  /api/workspace-types/{envTypeId}/approve:\n    put:\n      tags:\n        - admins\n        - SC-EnvType\n      summary: approve imported environment type\n      operationId: approveEnvType\n      responses:\n        '200':\n          description: 'Return the approved workspace type'\n      parameters:\n        - name: envTypeId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/EnvTypeId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                rev:\n                  type: integer\n                  description: revision number of the workspace type\n  /api/workspace-types/{envTypeId}/revoke:\n    put:\n      summary: revoke\n      operationId: revoke\n      tags:\n        - admins\n        - SC-EnvType\n      parameters:\n        - name: envTypeId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/EnvTypeId'\n      responses:\n        '200':\n          description: 'Return the revoked workspace type'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                rev:\n                  type: integer\n                  description: revision number of the workspace type\n  /api/workspace-types/{envTypeId}/configurations/:\n    parameters:\n      - name: envTypeId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/EnvTypeId'\n    get:\n      summary: list environment configurations\n      operationId: listEnvConfigs\n      tags:\n        - admins\n        - SC-EnvTypeConfig\n      parameters:\n        - name: include\n          in: query\n          schema:\n            type: string\n            enum:\n              - all\n      responses:\n        '200':\n          description: 'Return array of environment type configurations. Default return allowed to use only.'\n    post:\n      summary: create environment type configuration\n      operationId: createEnvTypeConfig\n      tags:\n        - admins\n        - SC-EnvTypeConfig\n      responses:\n        '200':\n          description: 'Return the env type config created'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnvTypeConfig'\n  /api/workspace-types/{envTypeId}/configurations/{envTypeConfigId}:\n    parameters:\n      - name: envTypeId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/EnvTypeId'\n      - name: envTypeConfigId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: get a environment type configuration\n      operationId: getEnvTypeConfig\n      tags:\n        - admins\n        - SC-EnvTypeConfig\n      responses:\n        '200':\n          description: 'Return the env type config requested'\n    put:\n      summary: update env type config\n      operationId: updateEnvTypeConfig\n      tags:\n        - admins\n        - SC-EnvTypeConfig\n      responses:\n        '200':\n          description: 'Return the updated env type config'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnvTypeConfig'\n    delete:\n      tags:\n        - admins\n        - SC-EnvTypeConfig\n      summary: delete\n      operationId: delete\n      responses:\n        '200':\n          description: 'Return the config that was deleted'\n  /api/workspace-types/{envTypeId}/config-vars/:\n    get:\n      summary: list config vars for env type config\n      operationId: listConfigVars\n      parameters:\n        - name: envTypeId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/EnvTypeId'\n      tags:\n        - admins\n        - SC-EnvTypeConfig\n      responses:\n        '200':\n          description: 'Array of env type config variables'\n  /api/step-templates:\n    get:\n      tags:\n        - admins\n        - StepTemplates\n      summary: list step templates\n      operationId: listStepTemplates\n      responses:\n        '200':\n          description: 'Return list of step templates'\n  /api/step-templates/latest:\n    get:\n      tags:\n        - admins\n        - StepTemplates\n      summary: list latest step templates\n      operationId: listLatestStepTemplates\n      responses:\n        '200':\n          description: 'Return list of the latest version of each step template'\n  /api/step-templates/{stepTemplateId}:\n    get:\n      tags:\n        - admins\n        - StepTemplates\n      summary: get step template\n      operationId: getStepTemplate\n      parameters:\n        - name: stepTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/StepTemplateId'\n      responses:\n        '200':\n          description: 'Return list of all versions of the requested step template'\n  /api/step-templates/{stepTemplateId}/latest:\n    get:\n      tags:\n        - admins\n        - StepTemplates\n      summary: get latest step template\n      operationId: getStepTemplateLatest\n      parameters:\n        - name: stepTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/StepTemplateId'\n      responses:\n        '200':\n          description: 'Return the latest step template requested'\n  /api/step-templates/{stepTemplateId}/v/{versionId}:\n    get:\n      tags:\n        - admins\n        - StepTemplates\n      summary: get step template by id and version\n      operationId: getStepTemplateByVersion\n      parameters:\n        - name: stepTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/StepTemplateId'\n        - name: versionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/VersionId'\n      responses:\n        '200':\n          description: 'Return requested step template'\n  /api/step-templates/{stepTemplateId}/v/{versionId}/validate:\n    post:\n      tags:\n        - admins\n        - StepTemplates\n      summary: validate step template\n      operationId: validateStepTemplate\n      parameters:\n        - name: stepTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/StepTemplateId'\n        - name: versionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/VersionId'\n      requestBody:\n        required: false\n        description: 'Validation rules to check for'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateConfig'\n      responses:\n        '200':\n          description: 'Return any validation errors for the requested step template and version'\n        '404':\n          description: 'Requested step template was not found'\n  /api/workflows/{workflowId}/v/{versionId}/trigger:\n    post:\n      tags:\n        - admins\n        - Workflows\n      summary: trigger a workflow to start\n      operationId: triggerWorkflow\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n        - name: versionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/VersionId'\n      requestBody:\n        required: true\n        description: 'Metadata and input of workflow.'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkflowTriggerRequest'\n      responses:\n        '200':\n          description: 'Return executionArn and status of StepFunction'\n  /api/workflows/{workflowId}/v/{versionId}/instances:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: get instances of the requested workflow\n      operationId: getWorkflowInstances\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n        - name: versionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/VersionId'\n      responses:\n        '200':\n          description: 'Return array of instances of the requested workflow'\n  /api/workflows/{workflowId}/v/{versionId}/instances/{workflowInstanceId}:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: get requested instance of the workflow\n      operationId: getWorkflowInstance\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n        - name: versionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/VersionId'\n        - name: workflowInstanceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowInstanceId'\n      responses:\n        '200':\n          description: 'Return requested instance of the workflow'\n  /api/workflows/instances/{status}:\n    post:\n      tags:\n        - admins\n        - Workflows\n      summary: List workflow instances, filtered by status and created time\n      operationId: workflowInstanceStatuses\n      parameters:\n        - name: status\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowInstanceStatus'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstanceStatusTimePeriod'\n      responses:\n        '200':\n          description: 'Return array of workflow instances filtered by status and created time'\n  /api/workflows/{workflowId}/assignments:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: List the requested workflow's assignments\n      operationId: workflowAssignments\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n      responses:\n        '200':\n          description: 'Return array of assignments for the requested workflow'\n  /api/workflows/drafts:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: List all workflow drafts\n      operationId: getWorkflowDrafts\n      responses:\n        '200':\n          description: 'Return array of workflow drafts'\n    post:\n      tags:\n        - admins\n        - Workflows\n      summary: Create a draft workflow\n      operationId: createDraftWorkflow\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDraftWorkflow'\n      responses:\n        '200':\n          description: 'Return created draft workflow'\n  /api/workflows/drafts/{workflowId}:\n    put:\n      tags:\n        - admins\n        - Workflows\n      summary: Edit draft workflow\n      operationId: editDraftWorkflow\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditDraftWorkflow'\n      responses:\n        '200':\n          description: 'Return edited draft workflow'\n    delete:\n      tags:\n        - admins\n        - Workflows\n      summary: Delete draft workflow\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n      responses:\n        '200':\n          description: 'Return empty object'\n  /api/workflows/drafts/publish:\n    post:\n      tags:\n        - admins\n        - Workflows\n      summary: Publish draft workflow\n      operationId: publishDraftWorkflow\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublishDraftWorkflow'\n      responses:\n        '200':\n          description: 'Return published draft workflow'\n\n  /api/workflows:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: List all workflows\n      operationId: getWorkflows\n      responses:\n        '200':\n          description: 'Return array of workflows'\n  /api/workflows/latest:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: List the latest version of each workflow\n      operationId: getLatestWorkflows\n      responses:\n        '200':\n          description: 'Return array of latest version of each workflow'\n  /api/workflows/{workflowId}:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: Get requested workflow\n      operationId: getWorkflowById\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n      responses:\n        '200':\n          description: 'Return requested workflow'\n  /api/workflows/{workflowId}/latest:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: Get latest version of requested workflow\n      operationId: getLatestWorkflowById\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n      responses:\n        '200':\n          description: 'Return latest version of requested workflow'\n  /api/workflows/{workflowId}/v/{versionId}:\n    get:\n      tags:\n        - admins\n        - Workflows\n      summary: Get requested workflow by version ID\n      operationId: getWorkflowByVersionId\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n        - name: versionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/VersionId'\n      responses:\n        '200':\n          description: 'Return requested workflow'\n  /api/workflows/{workflowId}/v:\n    post:\n      tags:\n        - admins\n        - Workflows\n      summary: Create a workflow with given workflowId\n      operationId: createWorkflow\n      parameters:\n        - name: workflowId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWorkflow'\n      responses:\n        '200':\n          description: 'Return created workflow'\n  /api/workflow-templates/drafts:\n    get:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Get draft workflow templates\n      operationId: getDraftWorkflowTemplates\n      responses:\n        '200':\n          description: 'Return array of draft workflow templates'\n    post:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Created draft workflow template\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDraftWorkflowTemplate'\n      operationId: createDraftWorkflowTemplate\n      responses:\n        '200':\n          description: 'Return created draft workflow template'\n  /api/workflow-templates/drafts/{workflowTemplateId}:\n    put:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Edit draft workflow template\n      parameters:\n        - name: workflowTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowTemplateId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublishDraftWorkflowTemplate'\n      operationId: editDraftWorkflowTemplate\n      responses:\n        '200':\n          description: 'Return edited draft workflow template'\n    delete:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Delete draft workflow template\n      parameters:\n        - name: workflowTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowTemplateId'\n      operationId: deleteDraftWorkflowTemplate\n      responses:\n        '200':\n          description: 'Return empty object'\n\n  /api/workflow-templates/drafts/publish:\n    post:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Publish draft workflow template\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublishDraftWorkflowTemplate'\n      operationId: publishDraftWorkflowTemplate\n      responses:\n        '200':\n          description: 'Return created workflow template'\n  /api/workflow-templates:\n    get:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Get workflow templates\n      operationId: getWorkflowTemplates\n      responses:\n        '200':\n          description: 'Return array of workflow templates'\n  /api/workflow-templates/latest:\n    get:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Get latest workflow templates\n      operationId: getLatestWorkflowTemplates\n      responses:\n        '200':\n          description: 'Return array of latest workflow templates'\n  /api/workflow-templates/{workflowTemplateId}:\n    get:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Get all versions of requested workflow template\n      parameters:\n        - name: workflowTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowTemplateId'\n      operationId: getWorkflowTemplate\n      responses:\n        '200':\n          description: 'Return array of all versions of requested workflow template'\n  /api/workflow-templates/{workflowTemplateId}/latest:\n    get:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Get latest version of requested workflow template\n      parameters:\n        - name: workflowTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowTemplateId'\n      operationId: getLatestWorkflowTemplateById\n      responses:\n        '200':\n          description: 'Return latest version of requested workflow template'\n  /api/workflow-templates/{workflowTemplateId}/v/{versionId}:\n    get:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Get requested workflow template by id and versionId\n      parameters:\n        - name: workflowTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowTemplateId'\n        - name: versionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/VersionId'\n      operationId: getWorkflowTemplateByIdAndVersion\n      responses:\n        '200':\n          description: 'Return requested workflow template'\n  /api/workflow-templates/{workflowTemplateId}/v:\n    post:\n      tags:\n        - admins\n        - WorkflowTemplates\n      summary: Created new workflow template\n      parameters:\n        - name: workflowTemplateId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkflowTemplateId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWorkflowTemplate'\n      operationId: createWorkflowTemplate\n      responses:\n        '200':\n          description: 'Return created workflow template'\n  /api/key-pairs:\n    get:\n      tags:\n        - KeyPairs\n      summary: Get all key pairs\n      operationId: getKeyPairs\n      responses:\n        '200':\n          description: 'Return all key pairs user has access to, including public key but not private key'\n    post:\n      tags:\n        - KeyPairs\n      summary: Create a key pair\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateKeyPair'\n      operationId: createKeyPair\n      responses:\n        '200':\n          description: 'Return created key pair, including private key'\n  /api/key-pairs/{keyPairId}:\n    get:\n      tags:\n        - KeyPairs\n      summary: Get all key pairs\n      parameters:\n        - name: keyPairId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/KeyPairId'\n      operationId: getKeyPair\n      responses:\n        '200':\n          description: 'Return requested keypair including public key but not private key'\n    put:\n      tags:\n        - KeyPairs\n      summary: Edit key pair\n      parameters:\n        - name: keyPairId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/KeyPairId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditKeyPair'\n      operationId: editKeyPair\n      responses:\n        '200':\n          description: 'Return requested keypair including public key but not private key'\n    delete:\n      tags:\n        - KeyPairs\n      summary: Delete keypair\n      parameters:\n        - name: keyPairId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/KeyPairId'\n      operationId: deleteKeyPair\n      responses:\n        '200':\n          description: 'Return empty object'\n  /api/key-pairs/{keyPairId}/deactivate:\n    put:\n      tags:\n        - KeyPairs\n      summary: Deactivate key pair\n      parameters:\n        - name: keyPairId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/KeyPairId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyPairRev'\n      operationId: deactivateKeyPair\n      responses:\n        '200':\n          description: 'Return deactivated keypair including public key but not private key'\n  /api/key-pairs/{keyPairId}/activate:\n    put:\n      tags:\n        - KeyPairs\n      summary: Activate key pair\n      parameters:\n        - name: keyPairId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/KeyPairId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyPairRev'\n      operationId: ActivateKeyPair\n      responses:\n        '200':\n          description: 'Return activated keypair including public key but not private key'\n\n  /api/workspaces/service-catalog:\n    post:\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n      summary: create environment using a configured SC product\n      operationId: createSCEnv\n      responses:\n        '200':\n          description: 'Return the workspace created'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSCWorkspace'\n    get:\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n      summary: list SC Workspaces\n      operationId: listScWorkspaces\n      responses:\n        '200':\n          description: 'Return list of Service Catalog workspaces'\n  /api/workspaces/service-catalog/{workspaceId}:\n    get:\n      summary: get SC workspace\n      operationId: getSCWorkspace\n      parameters:\n        - name: workspaceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkspaceId'\n      responses:\n        '200':\n          description: 'Return the service catalog workspace requested'\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n    delete:\n      summary: delete(terminate) SC workspace\n      operationId: deleteSCWorkspace\n      parameters:\n        - name: workspaceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkspaceId'\n      responses:\n        '200':\n          description: 'Return empty object'\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n  /api/workspaces/service-catalog/{workspaceId}/stop:\n    put:\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n      parameters:\n        - name: workspaceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkspaceId'\n      summary: Stop a SC workspace\n      operationId: stopScWs\n      responses:\n        '200':\n          description: 'Return the workspace stopped'\n  /api/workspaces/service-catalog/{workspaceId}/start:\n    put:\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n      parameters:\n        - name: workspaceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkspaceId'\n      summary: start SC workspace\n      operationId: startScWs\n      responses:\n        '200':\n          description: 'Return the workspace started'\n  /api/workspaces/service-catalog/{workspaceId}/connections:\n    get:\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n      parameters:\n        - name: workspaceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkspaceId'\n      summary: list connections of a SC workspace\n      operationId: listConnections\n      responses:\n        '200':\n          description: 'Array of connections of the workspace'\n  /api/workspaces/service-catalog/{workspaceId}/connections/{connectionId}/url:\n    post:\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n      parameters:\n        - name: workspaceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkspaceId'\n        - name: connectionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/ConnectionId'\n      summary: Create connection URL\n      operationId: createConnectionURL\n      responses:\n        '200':\n          description: 'Return connection information with URL'\n  /api/workspaces/service-catalog/{workspaceId}/connections/{connectionId}/windows-rdp-info:\n    get:\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n      parameters:\n        - name: workspaceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkspaceId'\n        - name: connectionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/ConnectionId'\n      summary: get Windows password data for rdp\n      operationId: getRdpInfo\n      responses:\n        '200':\n          description: 'Return windows rdp info'\n  /api/workspaces/service-catalog/{workspaceId}/connections/{connectionId}/send-ssh-public-key:\n    post:\n      tags:\n        - researchers\n        - SC-EnvWorkspace\n      parameters:\n        - name: workspaceId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/WorkspaceId'\n        - name: connectionId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/ConnectionId'\n      summary: Send SSH public key\n      operationId: sendPublicKey\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [keyPairId]\n              properties:\n                keyPairId:\n                  type: string\n                  description: uuid of the SSH key\n      responses:\n        '200':\n          description: 'Array of network interfaces'\n  /api/studies:\n    get:\n      tags:\n        - researchers\n        - Studies\n      summary: list studies\n      operationId: listStudies\n      parameters:\n        - in: query\n          name: category\n          required: true\n          schema:\n            $ref: '#/components/schemas/StudyCategory'\n      responses:\n        '200':\n          description: 'Return array of studies'\n    post:\n      tags:\n        - researchers\n        - Studies\n      summary: create study\n      operationId: createStudy\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStudy'\n      responses:\n        '200':\n          description: 'Return the study created'\n  /api/studies/{studyId}:\n    parameters:\n      - name: studyId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/StudyId'\n    get:\n      tags:\n        - researchers\n        - Studies\n      summary: get study\n      operationId: getStudy\n      responses:\n        '200':\n          description: 'Return the study'\n    put:\n      tags:\n        - researchers\n        - Studies\n      summary: update study\n      operationId: updateStudy\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStudy'\n      responses:\n        '200':\n          description: ''\n  /api/studies/{studyId}/permissions:\n    parameters:\n      - name: studyId\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/StudyId'\n    get:\n      tags:\n        - researchers\n        - Studies\n      summary: get study permissions\n      operationId: getStudyPermissions\n      responses:\n        '200':\n          description: 'Return study permissions'\n    put:\n      tags:\n        - researchers\n        - Studies\n      summary: update study permissions\n      operationId: updateStudyPermissions\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStudyPermission'\n      responses:\n        '200':\n          description: 'Return updated study permissions'\n  /api/studies/{studyId}/files:\n    get:\n      tags:\n        - researchers\n        - Studies\n      summary: list study files\n      operationId: listStudyFiles\n      parameters:\n        - name: studyId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/StudyId'\n      responses:\n        '200':\n          description: 'Return study files'\n  /api/studies/{studyId}/upload-requests:\n    get:\n      tags:\n        - researchers\n        - Studies\n      summary: create presigned upload requests\n      operationId: createPresignedUploadRequests\n      parameters:\n        - name: studyId\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/StudyId'\n        - in: query\n          name: filenames\n          schema:\n            type: string\n            description: 'Comma separated filenames to upload'\n      responses:\n        '200':\n          description: 'Return presigned url for file upload'\n  /api/budgets/aws-account/{awsAccountUUID}:\n    parameters:\n      - name: awsAccountUUID\n        in: path\n        required: true\n        schema:\n          $ref: '#/components/schemas/AwsAccountUUID'\n    get:\n      tags:\n        - admins\n        - Budgets\n      summary: get budget\n      operationId: getBudget\n      responses:\n        '200':\n          description: 'Return budget of the AWS account'\n  /api/budgets/aws-account:\n    post:\n      tags:\n        - admins\n        - Budgets\n      summary: create budget\n      operationId: createBudget\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBudget'\n      responses:\n        '200':\n          description: 'Return success create message'\n    put:\n      tags:\n        - admins\n        - Budgets\n      summary: update budget\n      operationId: updateBudget\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBudget'\n      responses:\n        '200':\n          description: 'Return success update message'\n  /api/migrate/my-studies:\n    put:\n      tags:\n        - migrate\n        - admins\n        - adminOnly\n      summary: migrate My Study(s) to new user(s)\n      operationId: migrateMyStudyPermissions\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MigrationMappings'\n      responses:\n        '200':\n          description: 'Return updated My Study permissions'\n    get:\n      tags:\n        - migrate\n        - admins\n        - list\n        - My Study\n      summary: list My Study(s) in environment\n      operationId: listMyStudies\n      responses:\n        '200':\n          description: 'Return My Study(s) owned by internal auth users that need migration. Empty list means nothing to migrate.'\n  \ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    RoleArn:\n      type: string\n      pattern: '^arn:aws:iam::.*$'\n      example: 'arn:aws:iam::000000000000:role/role-arn'\n    VpcId:\n      type: string\n      pattern: '^vpc-[a-f0-9]{8,17}$'\n      example: 'vpc-00000000000000000'\n    SubnetId:\n      type: string\n      pattern: '^subnet-[a-f0-9]{8,17}$'\n      example: 'subnet-00000000000000000'\n    EncryptionKeyArn:\n      type: string\n      pattern: '^arn:aws:kms:.*$'\n      example: 'arn:aws:kms:us-west-2:000000000000:key/1234a5b6-c7d8-11ea-b397-791ba40a5d32'\n    AwsAccountId:\n      type: string\n      example: '123456789101'\n      pattern: ^[0-9]{12}$\n    TemplateId:\n      type: string\n      example: 'sagemaker.cfn.yml'\n    ProjectId:\n      type: string\n      minLength: 1\n      maxLength: 100\n      pattern: \"^[A-Za-z0-9-_]+$\"\n      example: 'ServiceWorkbenchProject'\n    IndexId:\n      type: string\n      minLength: 1\n      maxLength: 100\n      pattern: \"^[A-Za-z0-9-_]+$\"\n      example: 'ServiceWorkbenchIndex'\n    AwsAccountUUID:\n      type: string\n      example: '1234a5b6-c7d8-11ea-b397-791ba40a5d32'\n      minLength: 1\n      maxLength: 100\n      pattern: '^[A-Za-z0-9-_ ]+$'\n    StepTemplateId:\n      type: string\n      minLength: 1\n      maxLength: 100\n      pattern: \"^[A-Za-z0-9-_]+$\"\n      example: 'create-network-interface'\n    VersionId:\n      type: number\n      example: 2\n    ValidateConfig:\n      type: object\n      example: { \"fieldA\": \"A string value\", \"fieldB\": 1}\n    WorkflowTriggerRequest:\n      type: object\n      properties:\n        meta:\n          type: object\n        input:\n          type: object\n    WorkflowId:\n      type: string\n      minLength: 1\n      maxLength: 100\n      pattern: \"^[A-Za-z0-9-_]+$\"\n      example: 'wf-create-environment'\n    KeyPairId:\n      type: string\n      minLength: 1\n      maxLength: 1024\n      pattern: \"^[A-Za-z0-9-_]+$\"\n      example: 'bdf175e3-2966-456b-bd6a-a6125fa33b8c'\n    KeyPairRev:\n      type: object\n      example: { \"rev\": 0}\n    WorkflowInstanceId:\n      type: string\n      minLength: 1\n      maxLength: 100\n      pattern: \"^[A-Za-z0-9-_]+$\"\n      example: '9FEAamTBlj464aqCDKql5'\n    InstanceStatusTimePeriod:\n      type: object\n      properties:\n        startTime:\n          type: string\n        endTime:\n          type: string\n      example: {startTime: '2020-10-05T14:48:00.000Z', endTime: '2020-11-05T14:48:00.000Z'}\n    WorkflowTemplateId:\n      type: string\n      minLength: 1\n      maxLength: 100\n      pattern: \"^[A-Za-z0-9-_]+$\"\n      example: 'wt-empty'\n    CreateWorkflow:\n      type: object\n      properties:\n        workflowTemplateId:\n          $ref: '#/components/schemas/WorkflowTemplateId'\n        selectedSteps:\n          $ref: '#/components/schemas/SelectedStep'\n        desc:\n          type: string\n        workflowTemplateVer:\n          type: number\n        v:\n          type: number\n        id:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: \"^[A-Za-z0-9-_]+$\"\n        title:\n          type: string\n      example: {\n        \"workflowTemplateId\": \"wt-empty\",\n        \"selectedSteps\": [ ],\n        \"desc\": \"Start a Service Catalog SageMaker Jupyter Notebook.\\n\",\n        \"workflowTemplateVer\": 1,\n        \"v\": 1,\n        \"title\": \"Start a Service Catalog SageMaker Notebook\",\n        \"id\": \"foo-5-workflow\",\n      }\n    CreateDraftWorkflow:\n      type: object\n      properties:\n        selectedSteps:\n          $ref: '#/components/schemas/SelectedSteps'\n        desc:\n          type: string\n        workflowTemplateVer:\n          type: number\n        v:\n          type: number\n        title:\n          type: string\n        templateId:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: \"^[A-Za-z0-9-_]+$\"\n        workflowId:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: \"^[A-Za-z0-9-_]+$\"\n      example: {\n        \"workflowId\": \"foo-1-draft-workflow\",\n        \"selectedSteps\": [ ],\n        \"desc\": \"Start a Service Catalog SageMaker Jupyter Notebook.\\n\",\n        \"workflowTemplateVer\": 1,\n        \"v\": 1,\n        \"title\": \"Start a Service Catalog SageMaker Notebook\",\n        \"templateId\": \"wt-empty\",\n      }\n    EditDraftWorkflow:\n      type: object\n      properties:\n        rev:\n          type: number\n        workflowId:\n          type: string\n        templateId:\n          type: string\n        id:\n          type: string\n        workflow:\n          type: object\n      example: {\n        \"rev\": 6,\n        \"workflowId\": \"wf-foo-1-draft-workflow\",\n        \"templateId\": \"wt-empty\",\n        \"updatedBy\": \"u-uodoD9RlS9IAOfwpFyqwQ\",\n        \"id\": \"u-uodoD9RlS9IAOfwpFyqwQ_wf-foo-1-draft-workflow_0\",\n        \"workflow\": {\n          \"id\": \"wf-foo-1-draft-workflow\",\n          \"selectedSteps\": [ ],\n          \"desc\": \"An empty workflow so that you have full control of the workflow.\\n\",\n          \"workflowTemplateVer\": 1,\n          \"v\": 1,\n          \"title\": \"Empty Workflow\",\n          \"workflowTemplateId\": \"wt-empty\",\n          \"updatedAt\": \"2021-01-28T22:04:16.341Z\"\n        },\n      }\n    PublishDraftWorkflow:\n      type: object\n      properties:\n        rev:\n          type: number\n        workflow:\n          type: object\n        workflowId:\n          type: string\n        templateVer:\n          type: number\n        templateId:\n          type: string\n        workflowVer:\n          type: number\n        updatedBy:\n          type: string\n        id:\n          type: string\n        createdBy:\n          type: string\n      example: {\n        \"rev\": 0,\n        \"workflow\": {\n          \"rev\": 0,\n          \"updatedBy\": \"u-uodoD9RlS9IAOfwpFyqwQ\",\n          \"selectedSteps\": [ ],\n          \"builtin\": false,\n          \"title\": \"Empty Workflow\",\n          \"createdAt\": \"2021-01-28T22:31:03.542Z\",\n          \"workflowTemplateId\": \"wt-empty\",\n          \"createdBy\": \"u-uodoD9RlS9IAOfwpFyqwQ\",\n          \"v\": 1,\n          \"id\": \"wf-foo-5-draft-workflow\",\n          \"workflowTemplateVer\": 1,\n          \"desc\": \"An empty workflow so that you have full control of the workflow.\\n\",\n          \"updatedAt\": \"2021-01-28T22:31:03.542Z\"\n        },\n        \"workflowId\": \"wf-foo-5-draft-workflow\",\n        \"templateVer\": 1,\n        \"templateId\": \"wt-empty\",\n        \"workflowVer\": 0,\n        \"updatedBy\": \"u-uodoD9RlS9IAOfwpFyqwQ\",\n        \"id\": \"u-uodoD9RlS9IAOfwpFyqwQ_wf-foo-5-draft-workflow_0\",\n        \"createdBy\": \"u-uodoD9RlS9IAOfwpFyqwQ\"\n      }\n    CreateWorkflowTemplate:\n      type: object\n      properties:\n        desc:\n          type: string\n        id:\n          type: string\n        v:\n          type: number\n        selectedSteps:\n          $ref: '#/components/schemas/SelectedSteps'\n        title:\n          type: string\n        propsOverrideOption:\n          type: object\n      example: {\n        \"desc\": \"Start a Service Catalog SageMaker Jupyter Notebook.\\n\",\n        \"id\": \"foo-1-workflow\",\n        \"v\": 1,\n        \"selectedSteps\": [ ],\n        \"title\": \"Start a Service Catalog SageMaker Notebook\",\n        \"propsOverrideOption\": { }\n      }\n    CreateDraftWorkflowTemplate:\n      type: object\n      properties:\n        desc:\n          type: string\n        templateId:\n          type: string\n        title:\n          type: string\n      example: {\n        \"desc\": \"An empty workflow so that you have full control of the workflow.\\n\",\n        \"templateId\": \"wt-draft-foo5\",\n        \"title\": \"Empty Workflow\"\n      }\n    PublishDraftWorkflowTemplate:\n      type: object\n      properties:\n        id:\n          type: string\n        template:\n          type: object\n        templateId:\n          type: string\n      example: {\n        \"id\": \"u-uodoD9RlS9IAOfwpFyqwQ_wt-draft-foo-7_0\",\n        \"template\": {\n          \"id\": \"wt-draft-foo-7\",\n          \"propsOverrideOption\": { },\n          \"selectedSteps\": [ ],\n          \"title\": \"Untitled\",\n          \"v\": 1\n        },\n        \"templateId\": \"wt-draft-foo7\"\n      }\n    SelectedStep:\n      type: object\n      properties:\n        stepTemplateId:\n          type: string\n        configs:\n          type: object\n        stepTemplateVer:\n          type: number\n        skippable:\n          type: boolean\n        id:\n          type: string\n        title:\n          type: string\n        desc:\n          type: string\n      example: {\n        \"stepTemplateId\": \"st-start-sagemaker-environment-sc\",\n        \"configs\": { },\n        \"stepTemplateVer\": 1,\n        \"skippable\": true,\n        \"id\": \"wf-step_1_1517380435823_28\",\n        \"title\": \"Start SageMaker Environment\",\n        \"desc\": \"Start a SageMaker Jupyter Notebook.\\n\"\n      }\n    SelectedSteps:\n      type: array\n      items:\n        $ref: '#/components/schemas/SelectedStep'\n      example: [\n        {\n          \"stepTemplateId\": \"st-start-sagemaker-environment-sc\",\n          \"configs\": { },\n          \"stepTemplateVer\": 1,\n          \"skippable\": true,\n          \"id\": \"wf-step_1_1517380435823_28\",\n          \"title\": \"Start SageMaker Environment\",\n          \"desc\": \"Start a SageMaker Jupyter Notebook.\\n\"\n        }\n      ]\n    CreateKeyPair:\n      type: object\n      properties:\n        name:\n          type: string\n        desc:\n          type: string\n      example: {\"name\": \"foo2-key\", \"desc\": \"Example key being created\"}\n    EditKeyPair:\n      type: object\n      properties:\n        rev:\n          type: number\n        name:\n          type: string\n        desc:\n          type: string\n      example: { \"rev\": 0, \"name\": \"foo2-key\", \"desc\": \"Example key being created\" }\n    WorkflowInstanceStatus:\n      type: string\n      enum:\n        - not_started\n        - in_progress\n        - done\n      example: 'done'\n    WorkspaceId:\n      type: string\n      example: '1234a5b6-c7d8-11ea-b397-791ba40a5d32'\n      minLength: 1\n      maxLength: 100\n      pattern: '^[A-Za-z0-9-_ ]+$'\n    StudyId:\n      type: string\n      example: 'test_study_id'\n      minLength: 1\n      maxLength: 100\n      pattern: '^[A-Za-z0-9-_ ]+$'\n    StudyCategory:\n      type: string\n      enum:\n        - My Studies\n        - Organization\n        - Open Data\n      example: 'Organization'\n    UserId:\n      type: string\n      example: 'u-C-l14OuIfNk7vL7AqmjvC'\n      description: id used to uniquely identify a user\n    ConnectionId:\n      type: string\n      example: 'id-0'\n    AwsPartition:\n      type: string\n      enum:\n        - aws\n        - aws-cn\n        - aws-us-gov\n      example: 'aws'\n    AwsRegion:\n      type: string\n      example: 'us-east-1'\n      enum:\n        - us-west-1\n        - us-west-2\n        - us-east-1\n        - us-east-2\n        - af-south-1\n        - ap-east-1\n        - ap-south-1\n        - ap-northeast-1\n        - ap-northeast-2\n        - ap-northeast-3\n        - ap-southeast-1\n        - ap-southeast-2\n        - ca-central-1\n        - cn-north-1\n        - cn-northwest-1\n        - eu-central-1\n        - eu-north-1\n        - eu-south-1\n        - eu-west-1\n        - eu-west-2\n        - eu-west-3\n        - me-south-1\n        - sa-east-1\n        - us-gov-east-1\n        - us-gov-west-1\n    CreateUsersRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/CreateUserRequest'\n    LogInRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          minLength: 3\n          maxLength: 300\n          pattern: '^[A-Za-z0-9-_.]+$|^[a-zA-Z0-9.!#$%\u0026’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$'\n          example: 'testuser'\n        password:\n          type: string\n          example: 'randompassword'\n        authenticationProviderId:\n          type: string\n          example: 'internal'\n    CreateUserRequest:\n      required:\n        - username\n      type: object\n      properties:\n        username:\n          type: string\n          minLength: 3\n          maxLength: 300\n          pattern: '^[A-Za-z0-9-_.]+$|^[a-zA-Z0-9.!#$%\u0026’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$'\n          example: 'testuser'\n        usernameInIdp:\n          type: string\n          minLength: 3\n          maxLength: 300\n          pattern: '^[A-Za-z0-9-_.]+$|^[a-zA-Z0-9.!#$%\u0026’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$'\n          example: 'testidpuser'\n        password:\n          type: string\n          example: 'randompassword'\n        authenticationProviderId:\n          type: string\n          example: 'https://cognito-idp.us-west-2.amazonaws.com/us-west-2_123456789'\n        identityProviderName:\n          type: string\n          example: 'AWS-SSO'\n        email:\n          type: string\n          pattern: '^[a-zA-Z0-9.!#$%\u0026’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$'\n          example: 'nobody@example.com'\n        firstName:\n          type: string\n          minLength: 1\n          maxLength: 500\n          pattern: '^[A-Za-z0-9 .-]+$'\n          example: 'Test'\n        lastName:\n          type: string\n          minLength: 1\n          maxLength: 500\n          pattern: '^[A-Za-z0-9 .-]+$'\n          example: 'User'\n        userType:\n          type: string\n          enum:\n            - root\n          example: 'root'\n        isSamlAuthenticatedUser:\n          type: boolean\n          example: true\n        isAdmin:\n          type: boolean\n          example: true\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n            - pending\n          example: 'active'\n        rev:\n          type: number\n          example: 0\n        userRole:\n          type: string\n          example: 'researcher'\n        projectId:\n          type: string\n          example: 'TestProject'\n        isExternalUser:\n          type: boolean\n          example: true\n        encryptedCreds:\n          type: string\n          example: 'EncryptedCreds123'\n        applyReason:\n          type: string\n          example: 'Research'\n    UpdateUserRequest:\n      required:\n        - uid\n        - rev\n      type: object\n      properties:\n        uid:\n          $ref: '#/components/schemas/UserId'\n        email:\n          type: string\n          pattern: '^[a-zA-Z0-9.!#$%\u0026’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$'\n          example: 'nobody@example.com'\n          description: 'Email address of the user'\n        firstName:\n          type: string\n          minLength: 1\n          maxLength: 500\n          pattern: '^[A-Za-z0-9 .-]+$'\n          example: 'Test'\n          description: 'First name of the user'\n        lastName:\n          type: string\n          minLength: 1\n          maxLength: 500\n          pattern: '^[A-Za-z0-9 .-]+$'\n          example: 'User'\n          description: 'Last name of the user'\n        userType:\n          type: string\n          enum:\n            - root\n          example: 'root'\n          description: 'Specify if user is root'\n        isSamlAuthenticatedUser:\n          type: boolean\n          example: true\n          description: 'If using Cognito, is the user authenticated using SAML'\n        isAdmin:\n          type: boolean\n          example: true\n          description: 'True if user is admin'\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n            - pending\n          example: 'active'\n          description: 'Status of the user. Only active users are allowed access'\n        rev:\n          type: number\n          example: 1\n          description: 'Revision specifying the updates the record has gone through'\n        userRole:\n          type: string\n          example: 'researcher'\n        projectId:\n          type: array\n          items:\n            type: string\n          example: ['project1','project2']\n        isExternalUser:\n          type: boolean\n          example: true\n        encryptedCreds:\n          type: string\n          example: 'EncryptedCreds123'\n        applyReason:\n          type: string\n          example: 'Research'\n    UpdateUserPasswordRequest:\n      required:\n        - password\n      type: object\n      properties:\n        password:\n          type: string\n          example: 'TeStPa$$word6235'\n          description: 'Password of the user which should be a string of atleast 4 characters'\n    UpdateCurrentUserInfo:\n      type: object\n      additionalProperties: false\n      properties:\n        uid:\n          $ref: '#/components/schemas/UserId'\n        email:\n          type: string\n          pattern: '^[a-zA-Z0-9.!#$%\u0026’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$'\n          example: 'nobody@example.com'\n          description: 'Email address of the user'\n        firstName:\n          type: string\n          maxLength: 500\n          pattern: '^[A-Za-z0-9 .-]+$'\n          example: 'Test'\n          description: 'First name of the user'\n        lastName:\n          type: string\n          maxLength: 500\n          pattern: '^[A-Za-z0-9 .-]+$'\n          example: 'Test'\n          description: 'First name of the user'\n        userType:\n          type: string\n          enum:\n            - root\n          example: 'root'\n          description: 'Specify if user is root'\n        isSamlAuthenticatedUser:\n          type: boolean\n          example: true\n          description: 'If using Cognito, is the user authenticated using SAML'\n        isAdmin:\n          type: boolean\n          example: true\n          description: 'True if user is admin'\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n            - pending\n          example: 'active'\n          description: 'Status of the user. Only active users are allowed access'\n        rev:\n          type: number\n          example: 1\n          description: 'Revision specifying the updates the record has gone through'\n      required:\n        - uid\n        - rev\n    CfnInfo:\n      required:\n        - vpcId\n        - subnetId\n        - crossAccountExecutionRoleArn\n        - crossAccountEnvMgmtRoleArn\n        - stackId\n        - encryptionKeyArn\n      type: object\n      properties:\n        vpcId:\n          $ref: '#/components/schemas/VpcId'\n        subnetId:\n          $ref: '#/components/schemas/SubnetId'\n        crossAccountExecutionRoleArn:\n          $ref: '#/components/schemas/RoleArn'\n        crossAccountEnvMgmtRoleArn:\n          $ref: '#/components/schemas/RoleArn'\n        stackId:\n          type: string\n        encryptionKeyArn:\n          $ref: '#/components/schemas/EncryptionKeyArn'\n    CreateProjectRequest:\n      required:\n        - id\n        - indexId\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/ProjectId'\n        indexId:\n          type: string\n          minLength: 1\n          example: 'TestIndex'\n        projectAdmins:\n          type: array\n          items:\n            type: string\n          default: []\n          example: ['user1','user2']\n        description:\n          type: string\n          example: 'Test Project'\n    UpdateProjectRequest:\n      required:\n        - id\n        - rev\n        - indexId\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/ProjectId'\n        indexId:\n          type: string\n          example: 'TestIndex'\n        description:\n          type: string\n          maxLength: 3000\n          example: 'Test Project'\n        projectAdmins:\n          type: array\n          items:\n            type: string\n          default: []\n          example: ['user1','user2']\n        rev:\n          type: number\n          example: 0\n    CreateIndexRequest:\n      required:\n        - id\n        - awsAccountId\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/IndexId'\n        awsAccountId:\n          type: string\n          minLength: 1\n          example: '11111111-5541-11eb-8eed-65cc7fae9077'\n        description:\n          type: string\n          example: 'Test Index'\n    UpdateIndexRequest:\n      required:\n        - id\n        - rev\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/IndexId'\n        awsAccountId:\n          type: string\n          minLength: 1\n          example: '11111111-5541-11eb-8eed-65cc7fae9077'\n        description:\n          type: string\n          example: 'Test Index'\n        rev:\n          type: number\n          example: 0\n    CreateAwsAccountRequest:\n      required:\n        - name\n        - description\n        - accountId\n\n      type: object\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n          example: 'TestAccount'\n        description:\n          type: string\n          maxLength: 2048\n          example: 'Test Account Description'\n        accountId:\n          $ref: '#/components/schemas/AwsAccountId'\n\n    ProvisionAccountRequest:\n      required:\n        - accountName\n        - accountEmail\n        - masterRoleArn\n        - externalId\n        - description\n      type: object\n      properties:\n        accountName:\n          type: string\n          example: 'TestAccount'\n        accountEmail:\n          type: string\n          example: 'test-account-email@testing-domain.com'\n        masterRoleArn:\n          type: string\n          example: 'arn:aws:iam::000000000000:role/master-role-arn'\n        externalId:\n          type: string\n          example: 'ExternalId'\n        description:\n          type: string\n          example: 'My test account'\n        route53HostedZone:\n          type: string\n    UpdateAwsAccount:\n      required:\n        - id\n        - rev\n      type: object\n      properties:\n        id:\n          type: string\n          example: 12345678-abcd-abcd-1234-123456789abc\n        rev:\n          type: number\n          example: 12 \n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n          example: 'TestAccount'\n        description:\n          type: string\n          maxLength: 2048\n          example: 'Test Account Description'\n        accountId:\n          $ref: '#/components/schemas/AwsAccountId'\n        cfnStackId:\n          type: string\n          maxLength: 255\n          example: 'arn:aws:cloudformation::000000000000:region/stack-name'\n        roleArn:\n          type: string\n          minLength: 10\n          example: 'arn:aws:iam::000000000000:role/role-arn'\n        onboardStatusRoleArn:\n          type: string\n          minLength: 10\n          example: 'arn:aws:iam::000000000000:role/role-arn'\n        externalId:\n          type: string\n          minLength: 1\n          example: 'ExternalId'\n        vpcId:\n          $ref: '#/components/schemas/VpcId'\n        subnetId:\n          $ref: '#/components/schemas/SubnetId'\n        encryptionKeyArn:\n          $ref: '#/components/schemas/EncryptionKeyArn'\n        route53HostedZone:\n          type: string\n    UpdateAccountRequest:\n      required:\n        - id\n        - stackId\n        - cfnInfo\n        - status\n        - name\n      type: object\n      properties:\n        id:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[A-Za-z0-9-_]+$'\n          example: '000000000000'\n        stackId:\n          type: string\n          minLength: 1\n          maxLength: 255\n          example: 'arn:aws:cloudformation:us-west-2:000000000000:stack/initial-stack-0000000000000/00000000-0000-0000-0000-000000000000'\n        cfnInfo:\n          $ref: '#/components/schemas/CfnInfo'\n        status:\n          type: string\n          example: 'COMPLETED'\n        name:\n          type: string\n          example: 'TestAccount'\n    CreateDataSourceAccount:\n      required:\n        - id\n        - mainRegion\n        - name\n      type: object\n      properties:\n        name:\n          maxLength: 300\n          minLength: 1\n          type: string\n          example: 'test data source account name'\n        description:\n          maxLength: 2048\n          type: string\n          example: 'this is a data source account for testing'\n        contactInfo:\n          maxLength: 2048\n          type: string\n          example: 'nobody@example.com'\n        id:\n          $ref: '#/components/schemas/AwsAccountId'\n        mainRegion:\n          $ref: '#/components/schemas/AwsRegion'\n    UpdateDataSourceAccount:\n      type: object\n      required:\n        - id\n        - rev\n      properties:\n        id:\n          $ref: '#/components/schemas/AwsAccountId'\n        rev:\n          type: number\n          example: 1\n        name:\n          maxLength: 300\n          minLength: 1\n          type: string\n          example: 'test data source account name'\n        description:\n          maxLength: 2048\n          type: string\n          example: 'this is a data source account for testing'\n        contactInfo:\n          maxLength: 2048\n          type: string\n          example: 'nobody@example.com'\n    RegisterDataSourceBucket:\n      type: object\n      additionalProperties: false\n      properties:\n        accountId:\n          $ref: '#/components/schemas/AwsAccountId'\n        name:\n          type: string\n          minLength: 3\n          maxLength: 63\n          pattern: '^[a-z0-9-.]+$'\n          example: 'testbucketname'\n        region:\n          $ref: '#/components/schemas/AwsRegion'\n        awsPartition:\n          $ref: '#/components/schemas/AwsPartition'\n        kmsArn:\n          type: string\n          example: 'arn:aws:kms:us-east-1:123456789101:key/2e3c97b6-8bb3-4cf8-bc77-d56ebf847d23'\n          maxLength: 90\n        access:\n          type: string\n          example: 'roles'\n          enum:\n            - roles\n            - accessPoint\n            - bucketPolicy\n        sse:\n          type: string\n          example: 'kms'\n          enum:\n            - kms\n            - s3\n            - none\n      required:\n        - accountId\n        - name\n        - region\n        - awsPartition\n        - access\n        - sse\n    DataSourceReachability:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          description: Use * for bulk reach data source account, or dsAccountId, studyId with type\n          example: 'test_study_id'\n        type:\n          type: string\n          enum:\n            - dsAccount\n            - study\n          description: id must NOT be * when type is specified\n          example: 'study'\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n            - pending\n            - error\n            - reachable\n            - \"*\"\n          description: id must be * when status is specified\n    RegisterStudy:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[A-Za-z0-9-_ ]+$'\n          example: 'org-study-byob-test-3'\n        name:\n          type: string\n          maxLength: 300\n          example: 'Org Study test 3'\n        category:\n          $ref: '#/components/schemas/StudyCategory'\n        description:\n          type: string\n          maxLength: 2048\n          example: 'This is a test study'\n        projectId:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[A-Za-z0-9-_]+$'\n          example: 'test-project-id'\n        folder:\n          type: string\n          minLength: 1\n          maxLength: 1000\n          example: 'study-folder-test-3'\n        kmsArn:\n          type: string\n          example: 'arn:aws:kms:us-east-1:123456789101:key/2e3c97b6-8bb3-4cf8-bc77-d56ebf847d23'\n          maxLength: 90\n        kmsScope:\n          enum:\n            - bucket\n            - study\n            - none\n          example: bucket\n        adminUsers:\n          type: array\n          items:\n            type: string\n          example: 'u-C-l14OuIfNk7vL7AqmjvC'\n        accessType:\n          type: string\n          enum:\n            - readonly\n            - readwrite\n          example: 'readwrite'\n      required:\n        - id\n        - category\n        - folder\n        - accessType\n        - adminUsers\n    EnvTypeId:\n      type: string\n      example: 'prod-hpr4lsrmztito-pa-vg2oae2qdhmfq'\n      maxLength: 100\n      minLength: 2\n      pattern: '^[a-zA-Z0-9_\\\\-]*'\n    CreateEnvType:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          $ref: '#/components/schemas/EnvTypeId'\n        name:\n          type: string\n          maxLength: 16383\n          minLength: 2\n          pattern: '^[a-zA-Z0-9_\\\\-]*'\n          example: 'EC2 Windows-v6'\n        desc:\n          type: string\n          maxLength: 8191\n          example: 'An EC2 Windows instance with RDP access'\n        status:\n          type: string\n          enum:\n            - not-approved\n            - approved\n          example: 'not-approved'\n        product:\n          type: object\n          additionalProperties: false\n          properties:\n            productId:\n              type: string\n              maxLength: 100\n              pattern: '^[a-zA-Z0-9_\\\\-]*'\n              example: 'prod-w7buwy2wj3blo'\n          required:\n            - productId\n        provisioningArtifact:\n          type: object\n          additionalProperties: false\n          properties:\n            id:\n              type: string\n              maxLength: 100\n              pattern: '^[a-zA-Z0-9_\\\\-]*'\n              example: 'pa-k5flbawwg5b6q'\n          required:\n            - id\n      required:\n        - id\n        - name\n        - product\n        - provisioningArtifact\n    UpdateEnvType:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          $ref: '#/components/schemas/EnvTypeId'\n        rev:\n          type: number\n          example: 1\n        name:\n          type: string\n          maxLength: 16383\n          minLength: 2\n          pattern: '^[a-zA-Z0-9_\\\\-]*'\n          example: 'EC2 Windows-v6'\n        desc:\n          type: string\n          maxLength: 8191\n          example: 'An EC2 Windows instance with RDP access'\n        status:\n          type: string\n          enum:\n            - not-approved\n            - approved\n          example: 'approved'\n      required:\n        - id\n        - rev\n    EnvTypeConfig:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          maxLength: 128\n          minLength: 2\n          pattern: '^[A-Za-z0-9-_]+$'\n          example: 'small'\n        name:\n          type: string\n          maxLength: 128\n          minLength: 2\n          pattern: '^[A-Za-z0-9-_ ]+$'\n          example: 'small'\n        desc:\n          type: string\n          maxLength: 8191\n          example: 'A small research workspace meant for prototyping and proving out scripts before scaling up to a larger. It costs the least amount per hour.'\n        estimatedCostInfo:\n          type: string\n          maxLength: 1024\n        allowRoleIds:\n          type: array\n          example: ['admin','researcher']\n          items:\n            type: string\n            maxLength: 100\n            pattern: '^[A-Za-z0-9-_ ]+$'\n        denyRoleIds:\n          type: array\n          example: ['guest']\n          items:\n            type: string\n            maxLength: 100\n            pattern: '^[A-Za-z0-9-_ ]+$'\n        params:\n          type: array\n          example: [\n          {\n            \"key\":\"InstanceType\",\n            \"value\":\"ml.t3.xlarge\"\n          },\n          {\n            \"key\": \"EncryptionKeyArn\",\n            \"value\": \"${encryptionKeyArn}\"\n          },\n          {\n            \"key\": \"IamPolicyDocument\",\n            \"value\": \"${iamPolicyDocument}\"\n          },\n          {\n            \"key\": \"VPC\",\n            \"value\": \"${vpcId}\"\n          },\n          {\n            \"key\": \"EnvironmentInstanceFiles\",\n            \"value\": \"${environmentInstanceFiles}\"\n          },\n          {\n            \"key\": \"Subnet\",\n            \"value\": \"${subnetId}\"\n          },\n          {\n            \"key\": \"S3Mounts\",\n            \"value\": \"${s3Mounts}\"\n          },\n          {\n            \"key\": \"Namespace\",\n            \"value\": \"${namespace}\"\n          }\n          ]\n          items:\n            type: object\n            properties:\n              key:\n                type: string\n              value:\n                type: string\n        tags:\n          type: array\n          items:\n            type: object\n            properties:\n              key:\n                type: string\n              value:\n                type: string\n      required:\n        - id\n        - name\n    CreateSCWorkspace:\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          type: string\n          maxLength: 128\n          minLength: 3\n          pattern: '^[A-Za-z][A-Za-z0-9-]+$'\n          example: 'test-sagemaker-env'\n        description:\n          type: string\n          maxLength: 2048\n          example: 'test-sagemaker-env'\n        envTypeId:\n          $ref: '#/components/schemas/EnvTypeId'\n        envTypeConfigId:\n          type: string\n          minLength: 1\n          maxLength: 300\n          example: 'small'\n        projectId:\n          type: string\n          example: 'test-project-id'\n        cidr:\n          type: string\n          pattern: '^(?:([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?)?$'\n          example: '192.255.255.255/32'\n          description: optional field only to be specified if AppStream feature is disabled\n        studyIds:\n          type: array\n          example: ['test_study1']\n          items:\n            type: string\n            minLength: 1\n      required:\n        - name\n        - envTypeId\n        - envTypeConfigId\n    CreateStudy:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[A-Za-z0-9-_ ]+$'\n          example: 'org-study-test-2'\n        name:\n          type: string\n          maxLength: 300\n          example: 'Org Study 2'\n        category:\n          type: string\n          enum:\n            - My Studies\n            - Organization\n            - Open Data\n          example: 'Organization'\n        description:\n          type: string\n          maxLength: 2048\n          example: 'An org study to test a few things'\n        projectId:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[A-Za-z0-9-_]+$'\n          example: 'test-project-id'\n        uploadLocationEnabled:\n          type: boolean\n          example: false\n        sha:\n          type: string\n          maxLength: 64\n          description: sha is only used for open data study in system originated update, external request should leave this field empty\n        resources:\n          type: array\n          example: [\n          {\"arn\": \"arn:aws:s3:::123456789101-studydata/studies/Organization/org-study-2/\"}\n          ]\n          items:\n            type: object\n            additionalProperties: false\n            properties:\n              arn:\n                type: string\n                maxLength: 2048\n        accessType:\n          type: string\n          enum:\n            - readonly\n            - readwrite\n          example: 'readonly'\n      required:\n        - id\n        - category\n    UpdateStudy:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[A-Za-z0-9-_ ]+$'\n          example: 'org-study-test-2'\n        rev:\n          type: number\n          example: 2\n        name:\n          type: string\n          maxLength: 300\n          example: 'Org Study Test'\n        description:\n          type: string\n          maxLength: 2048\n          example: 'An org study to test a few things'\n        sha:\n          type: string\n          maxLength: 64\n          description: sha is only used for open data study in system originated update, external request should leave this field empty\n        appRoleArn:\n          type: string\n          maxLength: 2048\n          example: 'arn:aws:iam::123456789101:role/swb-data-access-role'\n        resources:\n          type: array\n          example: [\n          {\"arn\": \"arn:aws:s3:::123456789101-studydata/studies/Organization/org-study-2/\"}\n          ]\n          items:\n            type: object\n            additionalProperties: false\n            properties:\n              arn:\n                type: string\n                maxLength: 2048                 \n              fileShareArn:\n                type: string\n                maxLength: 2048\n      required:\n        - id\n    permissionLevel:\n      type: string\n      enum:\n        - admin\n        - readonly\n        - writeonly\n        - readwrite\n      example: readonly\n    userEntry:\n      type: object\n      properties:\n        uid:\n          $ref: '#/components/schemas/UserId'\n        permissionLevel:\n          $ref: '#/components/schemas/permissionLevel'\n      required:\n        - uid\n    UpdateStudyPermission:\n      type: object\n      additionalProperties: false\n      properties:\n        usersToAdd:\n          type: array\n          items:\n            $ref: '#/components/schemas/userEntry'\n        usersToRemove:\n          type: array\n          items:\n            $ref: '#/components/schemas/userEntry'\n    CreateBudget:\n      type: object\n      required:\n        - id\n        - budgetConfiguration\n      properties:\n        id:\n          $ref: '#/components/schemas/AwsAccountUUID'\n        budgetConfiguration:\n          type: object\n          required:\n            - budgetLimit\n            - startDate\n            - endDate\n          properties:\n            budgetLimit:\n              type: string\n              example: '1000'\n              maxLength: 2048\n            startDate:\n              type: integer\n              example: 1611964800\n            endDate:\n              type: integer\n              example: 1611964800\n            description:\n              type: string\n              maxLength: 2048\n              example: 'An org study to test a few things'\n            thresholds:\n              type: array\n              example: [50,90]\n              items:\n                type: number\n                enum:\n                  - 50\n                  - 70\n                  - 80\n                  - 90\n                  - 100\n              description: thresholds and notification depend on each other\n            notificationEmail:\n              type: string\n              example: 'test@example.com'\n              format: email\n              maxLength: 2048\n              description: thresholds and notification depend on each other\n          additionalProperties: false\n      additionalProperties: false\n    MigrationMappings:\n      type: array\n      items:\n        type: object\n        properties:\n          studyId:\n            $ref: '#/components/schemas/StudyId'\n          uid:\n            $ref: '#/components/schemas/UserId'\nsecurity:\n  - bearerAuth: []"
		}
	},
	"Error": "parse: parse spec: parse operations: /api/aws-accounts/{awsAccountUUID}/permissions: parameters: parse parameter \"awsAccountUUID\": schema: parse schema: resolve \"#/components/schemas/GetAwsAccountPermissionsStatus\": find schema: resolve \"#/components/schemas/GetAwsAccountPermissionsStatus\": can't find value for \"components/schemas/GetAwsAccountPermissionsStatus\""
}