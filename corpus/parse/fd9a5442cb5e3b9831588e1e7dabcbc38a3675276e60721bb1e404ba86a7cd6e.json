{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/go-chai/chai"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "examples/docs/openapi3/swagger.yaml",
			"byteSize": 21062,
			"content": "components:\n  schemas:\n    controller.Message:\n      properties:\n        message:\n          example: message\n          type: string\n      type: object\n    httputil.Error:\n      properties:\n        error:\n          type: string\n        error_debug:\n          type: string\n        error_description:\n          type: string\n        status_code:\n          type: integer\n      type: object\n    model.Account:\n      properties:\n        id:\n          example: 1\n          format: int64\n          type: integer\n        name:\n          example: account name\n          type: string\n        some_number:\n          example: 1234\n          type: integer\n        uuid:\n          example: 550e8400-e29b-41d4-a716-446655440000\n          format: uuid\n          type: string\n      type: object\n    model.Account2:\n      properties:\n        custom_type_4567:\n          description: zzz\n          items:\n            $ref: '#/components/schemas/model.CustomType456'\n          type: array\n        custom_val_123:\n          example: custom val 123\n          type: string\n        id:\n          example: 113\n          format: int64\n          maximum: 195\n          type: integer\n        name:\n          example: account name\n          type: string\n        some_number:\n          example: 1234\n          type: integer\n        uuid:\n          example: 550e8400-e29b-41d4-a716-446655440000\n          format: uuid\n          type: string\n      type: object\n    model.AddAccount:\n      properties:\n        name:\n          example: account name\n          type: string\n      type: object\n    model.Admin:\n      properties:\n        id:\n          example: 1\n          type: integer\n        name:\n          example: admin name\n          type: string\n      type: object\n    model.Bottle:\n      properties:\n        account:\n          $ref: '#/components/schemas/model.Account'\n        id:\n          example: 1\n          type: integer\n        name:\n          example: bottle_name\n          type: string\n      type: object\n    model.CustomType456:\n      properties:\n        zz:\n          example: 34\n          type: integer\n        zzStr:\n          example: zz string value\n          type: string\n      type: object\n    model.UpdateAccount:\n      properties:\n        name:\n          example: account name\n          type: string\n      type: object\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-XSRF-TOKEN\n      type: apiKey\n    BasicAuth:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n    OAuth2AccessToken:\n      in: header\n      name: X-XSRF-TOKEN\n      type: apiKey\n    OAuth2Application:\n      in: header\n      name: X-XSRF-TOKEN\n      type: apiKey\n    OAuth2Implicit:\n      in: header\n      name: X-XSRF-TOKEN\n      type: apiKey\n    OAuth2Password:\n      in: header\n      name: X-XSRF-TOKEN\n      type: apiKey\ninfo:\n  contact:\n    email: support@swagger.io\n    name: API Support\n    url: http://www.swagger.io/support\n  description: This is a sample celler server.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: http://swagger.io/terms/\n  title: Swagger Example API\n  version: \"1.0\"\nopenapi: 3.0.3\npaths:\n  /api/v1/accounts/:\n    get:\n      description: get accounts\n      parameters:\n      - description: name search by q\n        in: query\n        name: q\n        schema:\n          format: email\n          type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/model.Account'\n                type: array\n          description: Created\n        \"202\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/model.Account'\n                type: array\n          description: Accepted\n        \"203\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/model.Account'\n                type: array\n          description: Non-Authoritative Information\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Internal Server Error\n      summary: List accounts\n      tags:\n      - accounts\n    post:\n      description: add by json account\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/model.AddAccount'\n        description: Add account\n        required: true\n        x-originalParamName: account\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/model.Account'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Internal Server Error\n      summary: Add an account\n      tags:\n      - accounts\n  /api/v1/accounts/{id}:\n    delete:\n      description: Delete by account ID\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          pattern: ^[0-9]+$\n          type: integer\n      responses:\n        \"204\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/model.Account'\n          description: No Content\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Internal Server Error\n      summary: Delete an account\n      tags:\n      - accounts\n    get:\n      description: get string by ID\n      parameters:\n      - description: Account ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/model.Account'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Internal Server Error\n      summary: Show an account\n      tags:\n      - accounts\n    patch:\n      description: Update by json account\n      parameters:\n      - description: Account ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/model.UpdateAccount'\n        description: Update account\n        required: true\n        x-originalParamName: account\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/model.Account'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Internal Server Error\n      summary: Update an account\n      tags:\n      - accounts\n  /api/v1/accounts/{id}/images:\n    post:\n      description: Upload file\n      parameters:\n      - description: Account ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: account image\n                  format: binary\n                  required:\n                  - file\n                  type: string\n                  x-formData-name: file\n              required:\n              - file\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/controller.Message'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Internal Server Error\n      summary: Upload account image\n      tags:\n      - accounts\n  /api/v1/admin/auth:\n    post:\n      description: get admin info\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        x-originalParamName: body\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/model.Admin'\n          description: \"\"\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Internal Server Error\n      security:\n      - ApiKeyAuth: []\n      summary: Auth admin\n      tags:\n      - accounts\n      - admin\n  /api/v1/bottles/:\n    get:\n      description: get bottles\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/model.Bottle'\n                type: array\n          description: \"\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/model.Bottle'\n                type: array\n          description: \"\"\n        \"202\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/model.Bottle'\n                type: array\n          description: \"\"\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: \"\"\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: \"\"\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: \"\"\n      summary: List bottles\n      tags:\n      - bottles\n  /api/v1/bottles/{id}:\n    get:\n      description: get string by ID\n      operationId: get-string-by-int\n      parameters:\n      - description: Bottle ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/model.Bottle'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: Internal Server Error\n      summary: Show a bottle\n      tags:\n      - bottles\n  /api/v1/examples/attribute:\n    get:\n      description: attribute\n      parameters:\n      - description: string default\n        in: query\n        name: default\n        schema:\n          default: A\n          type: string\n      - description: int enums\n        in: query\n        name: enumint\n        schema:\n          enum:\n          - 1\n          - 2\n          - 3\n          type: integer\n      - description: int enums\n        in: query\n        name: enumnumber\n        schema:\n          enum:\n          - 1.1\n          - 1.2\n          - 1.3\n          type: number\n      - description: string enums\n        in: query\n        name: enumstring\n        schema:\n          enum:\n          - A\n          - B\n          - C\n          type: string\n      - description: int valid\n        in: query\n        name: int\n        schema:\n          maximum: 10\n          minimum: 1\n          type: integer\n      - description: string valid\n        in: query\n        name: string\n        schema:\n          maxLength: 10\n          minLength: 5\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: answer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"404\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"500\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n      summary: attribute example\n      tags:\n      - example\n    post:\n      description: post request example\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/model.Account'\n        x-originalParamName: body\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/model.Account2'\n          description: \"\"\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/httputil.Error'\n          description: \"\"\n      summary: post request example\n  /api/v1/examples/calc:\n    get:\n      description: plus\n      parameters:\n      - description: used for calc\n        in: query\n        name: val1\n        required: true\n        schema:\n          type: integer\n      - description: used for calc\n        in: query\n        name: val2\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: answer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"404\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"500\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n      summary: calc example\n      tags:\n      - example\n  /api/v1/examples/groups/{group_id}/accounts/{account_id}:\n    get:\n      description: path params\n      parameters:\n      - description: Account ID\n        in: path\n        name: account_id\n        required: true\n        schema:\n          type: integer\n      - description: Group ID\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: answer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"404\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"500\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n      summary: path params example\n      tags:\n      - example\n  /api/v1/examples/header:\n    get:\n      description: custome header\n      parameters:\n      - description: Authentication header\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: answer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"404\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"500\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n      summary: custome header example\n      tags:\n      - example\n  /api/v1/examples/ping:\n    get:\n      description: do ping\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: pong\n        \"400\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"404\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"500\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n      summary: ping example\n      tags:\n      - example\n  /api/v1/examples/securities:\n    get:\n      description: custome header\n      parameters:\n      - description: Authentication header\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: answer\n        \"400\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"404\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n        \"500\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: ok\n      security:\n      - ApiKeyAuth: []\n      - OAuth2Implicit:\n        - admin\n        - write\n      summary: custome header example\n      tags:\n      - example\nservers:\n- url: localhost:8080\n",
			"canonicalURL": "/github.com/go-chai/chai@47477ed26ad954870fa288c00c8ce3e8f965e60b/-/blob/examples/docs/openapi3/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/go-chai/chai/blob/47477ed26ad954870fa288c00c8ce3e8f965e60b/examples/docs/openapi3/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/examples/securities\": get: security: at examples/docs/openapi3/swagger.yaml:840:11: list of scopes MUST be empty for \"type\" \"apiKey\""
}