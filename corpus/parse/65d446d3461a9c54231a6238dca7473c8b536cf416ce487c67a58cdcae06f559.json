{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CSCfi/swift-browser-ui"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "docs/_static/api.yml",
			"byteSize": 41392,
			"content": "openapi: \"3.0.3\"\ninfo:\n  title: \"Swift Browser UI\"\n  description: \"API for querying Openstack Swift as well as working with Openstack Swift ACLs in order to enable sharing action.\"\n  version: \"2.0.0\"\n  license:\n    name: MIT\ntags:\n  - name: Frontend \n    description: Endpoints for sharing request \"Filtered proxied API from Openstack Swift used for a browser application\"\n  - name: Sharing Request \n    description: Endpoints for sharing request \"Database and API for storing / querying Openstack Swift ACL share action request information.\"\n  - name: Sharing Account \n    description: Endpoints for sharing request \"Database and API for storing / querying Openstack Swift ACL information\"\n  - name: Upload/Download \n    description: Endpoints for uploading and downloading containers/objects\n  \npaths:\n  /health:\n    get:\n      tags:\n        - Sharing Request\n        - Sharing Account\n        - Frontend\n      summary: health API\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Health'\n  /request/user/{user}/{container}:\n    post:\n      tags:\n        - Sharing Request \n      summary: Publish a new request for access to a container\n      parameters:\n      - name: user\n        in: path\n        description: The user that's requesting access\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      - name: container\n        in: path\n        description: The container that the access is requested to\n        required: true\n        schema:\n          type: string\n          example: test-container\n      - name: owner\n        in: query\n        description: The container owner that the access is requested from.\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NewRequest\"\n    delete:\n      tags:\n        - Sharing Request \n      summary: Delete an existing request for access\n      parameters:\n      - name: user\n        in: path\n        description: The user that originally requested access\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      - name: container\n        in: path\n        description: The container that the access was requested to\n        required: true\n        schema:\n          type: string\n          example: test-container\n      - name: owner\n        in: query\n        description: The container owner that the access was requeted from.\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          content:\n            text/plain:\n                schema:\n                  type: string\n                  example: OK\n    options:\n      tags:\n        - Sharing Request \n      summary: Handle preflight for existing request for access\n      parameters:\n      - name: user\n        in: path\n        description: The user that originally requested access\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      - name: container\n        in: path\n        description: The container that the access was requested to\n        required: true\n        schema:\n          type: string\n          example: test-container\n      - name: owner\n        in: query\n        description: The container owner that the access was requeted from.\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          headers:\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n                example: POST, OPTIONS, DELETE\n            Access-Control-Max-Age:\n              schema:\n                type: string\n                example: 84600\n  /request/user/{user}:\n    get:\n      tags:\n        - Sharing Request \n      summary: List container share requests made by a user.\n      parameters:\n      - name: user\n        in: path\n        description: The user querying\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Requests\"\n  /request/owner/{user}:\n    get:\n      tags:\n        - Sharing Request \n      summary: List the requests owned by the user (made for the user).\n      parameters:\n      - name: user\n        in: path\n        description: The user querying\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Requests\"\n  /request/container/{container}:\n    get:\n      tags:\n        - Sharing Request \n      summary: List share requests made for a container.\n      parameters:\n      - name: container\n        in: path\n        description: The container queried for\n        required: true\n        schema:\n          type: string\n          example: test-container\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerRequests\"\n  \n  /access/{user}:\n    get:\n      tags:\n        - Sharing Account \n      summary: List container names that have been shared to the user.\n      parameters:\n      - name: user\n        in: path\n        description: The user querying\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HasAccess\"\n        400:\n          description: Client Error\n  /access/{user}/{container}:\n    get:\n      tags:\n        - Sharing Account \n      summary: Get details of a container that has been shared to the user.\n      parameters:\n      - name: container\n        in: path\n        description: The container that is to be queried.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      - name: user\n        in: path\n        description: The user querying\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      - name: owner\n        in: query\n        description: The container owner\n        required: true\n        schema:\n          type: string\n          example: AUTH_otherexample\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDetails\"\n        400:\n          description: Client Error\n  /share/{owner}:\n    get:\n      tags:\n        - Sharing Account \n      summary: List container names that the user has shared to someone else.\n      parameters:\n      - name: owner\n        in: path\n        description: The user requesting the shared container listing.\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GaveAccess\"\n        400:\n          description: Client Error\n  /share/{owner}/{container}:\n    get:\n      tags:\n        - Sharing Account \n      summary: Get details of a container that the user has shared.\n      parameters:\n      - name: container\n        in: path\n        description: The container that is to be queried.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      - name: owner\n        in: path\n        description: The user that is requesting the sharing details.\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SharedDetails\"\n        400:\n          description: Client Error\n    post:\n      tags:\n        - Sharing Account \n      summary: Give user / users access rights on a specified container.\n      parameters:\n      - name: container\n        in: path\n        description: The container that is to be shared.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      - name: user\n        in: query\n        description: The user / users that the container is shared to.\n        required: true\n        schema:\n          type: string\n          example: \"AUTH_user1,AUTH_user2,AUTH_user3,AUTH_user4\"\n      - name: access\n        in: query\n        description: The access types to be granted.\n        required: true\n        schema:\n          type: string\n          example: \"r,l,w\"\n      - name: owner\n        in: path\n        description: The owner of the container to be shared.\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      - name: address\n        in: query\n        description: The address of the container to be shared.\n        required: true\n        schema:\n          type: string\n          example: \"https://example-obj-store.os-example.com:443/swift/v1/AUTH_example/test-container-1\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SharedDetails\"\n        400:\n          description: Client Error\n    patch:\n      tags:\n        - Sharing Account \n      summary: Edit specified user's access rights on a specified container.\n      parameters:\n      - name: container\n        in: path\n        description: The container that is to be edited.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      - name: user\n        in: query\n        description: The user / users that the container is shared to.\n        required: true\n        schema:\n          type: string\n          example: \"AUTH_user1,AUTH_user2,AUTH_user3,AUTH_user4\"\n      - name: access\n        in: query\n        description: The access types to be granted.\n        required: true\n        schema:\n          type: string\n          example: \"r,l,w\"\n      - name: owner\n        in: path\n        description: The owner of the container to be edited.\n        required: true\n        schema:\n          type: string\n          example: AUTH_example\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SharedDetails\"\n        400:\n          description: Client Error\n    delete:\n      tags:\n        - Sharing Account \n      summary: Revoke specified access to container from the user/users specified in the query.\n      parameters:\n      - name: container\n        in: path\n        description: The container that is to be revoked.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      - name: user\n        in: query\n        description: The user / users that the container is revoked from.\n        required: true\n        schema:\n          type: string\n          example: \"user1,user2,user3,user4\"\n      - name: owner\n        in: path\n        description: The owner of the shared container.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      responses:\n        204:\n          description: OK\n        404:\n          description: Not Found\n        400:\n          description: Client Error\n    options:\n      tags:\n        - Sharing Account \n      summary: Serve correct response headers to allowed DELETE preflight query.\n      parameters:\n      - name: container\n        in: path\n        description: The container that is to be revoked.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      - name: user\n        in: query\n        description: The user / users that the container is revoked from.\n        required: true\n        schema:\n          type: string\n          example: \"user1,user2,user3,user4\"\n      - name: owner\n        in: path\n        description: The owner of the shared container.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      responses:\n        200:\n          description: OK\n          headers:\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n                example: POST, OPTIONS, DELETE\n            Access-Control-Max-Age:\n              schema:\n                type: string\n                example: 84600\n  \n  /token/{project}/{id}:\n    post:\n      tags:\n        - Sharing Account\n        - Sharing Request\n      summary: Add a token to the user.\n      parameters:\n      - name: project\n        in: path\n        description: The project where the token is to be added.\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      - name: id\n        in: path\n        description: The id of the token.\n        required: true\n        schema:\n          type: string\n          example: \"id1\"\n      responses:\n        200:\n          description: OK\n    delete:\n      tags:\n        - Sharing Account\n        - Sharing Request\n      summary: Delete a token to the user.\n      parameters:\n      - name: project\n        in: path\n        description: The project where the token is to be added.\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      - name: id\n        in: path\n        description: The id of the token.\n        required: true\n        schema:\n          type: string\n          example: \"id1\"\n      responses:\n        200:\n          description: OK\n    options:\n      tags:\n        - Sharing Account\n        - Sharing Request\n      summary: Serve correct response headers to allowed DELETE preflight query.\n      parameters:\n      - name: project\n        in: path\n        description: The project where the token is to be revoked.\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      - name: id\n        in: path\n        description: The id of the token.\n        required: true\n        schema:\n          type: string\n          example: \"id1\"\n      responses:\n        200:\n          description: OK\n          headers:\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n                example: POST, OPTIONS, DELETE\n            Access-Control-Max-Age:\n              schema:\n                type: string\n                example: 84600\n  /token/{project}:\n    get:\n      tags:\n        - Sharing Account\n        - Sharing Request\n      summary: Handle call for listing API tokens.\n      parameters:\n      - name: project\n        in: path\n        description: The project where the token is to be revoked.\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                example: ['id1']\n  /api/username:\n    get:\n      tags:\n        - Frontend \n      summary: Get Openstack username for the authenticated user.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Username'\n        401:\n          description: Unauthorized\n  /api/projects:\n    get:\n      tags:\n        - Frontend \n      summary: Get Openstack projects available for the authenticated user.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Projects'\n        401:\n          description: Unauthorized\n  /api/{project}/acl:\n    get:\n      tags:\n        - Frontend \n      summary: Fetch a compilation of ACL information for sharing discovery.\n      parameters:\n        - name: project\n          in: path\n          description: The project for which the ACL information is queried for\n          required: true\n          schema:\n            type: string\n            example: test-project-1\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectAcl'\n        401:\n          description: Unauthorized\n  /api/{project}/address:\n    get:\n      tags:\n        - Frontend \n      summary: Get the project specific object storage address.\n      parameters:\n        - name: project\n          in: path\n          description: The project for which the address is queried for\n          required: true\n          schema:\n            type: string\n            example: test-project-1\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n                example: http://endpoint\n        401:\n          description: Unauthorized\n  /api/meta/{project}:\n    get:\n      tags:\n        - Frontend \n      summary: Get the filtered project metadata for the currently active project.\n      parameters:\n        - name: project\n          in: path\n          description: The project for which the metadata is queried for\n          required: true\n          schema:\n            type: string\n            example: test-project-1\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectMeta'\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n  /api/{project}:\n    get:\n      tags:\n        - Frontend \n      summary: Get the listing for containers for specified project\n      parameters:\n        - name: project\n          in: path\n          description: The project for which the containers are queried for\n          required: true\n          schema:\n            type: string\n            example: test-project-1\n        - name: marker\n          in: query\n          description: The marker from which to continue paging the container listing\n          required: false\n          schema:\n            type: string\n            example: test-container\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Containers'\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n  /api/{project}/{container}:\n    get:\n      tags:\n        - Frontend \n      summary: Get the listing for objects in a given container.\n      parameters:\n        - name: project\n          in: path\n          description: The project for which the ACL information is queried for\n          required: true\n          schema:\n            type: string\n            example: test-project-1\n        - name: container\n          in: path\n          description: The container for which objects are to be queried\n          required: true\n          schema:\n            type: string\n            example: test-container\n        - name: marker\n          in: query\n          description: The marker from which to continue paging the object listing\n          required: false\n          schema:\n            type: string\n            example: test-object\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Objects'\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n    put:\n      tags:\n        - Frontend\n      summary: Create a container to the specified project\n      parameters:\n        - name: project\n          in: path\n          description: The project in which to create the container\n          required: true\n          schema:\n            type: string\n            example: test-project\n        - name: container\n          in: path\n          description: The container to create\n          required: true\n          schema:\n            type: string\n            example: test-container\n      responses:\n        201:\n          description: Created\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        409:\n          description: Conflict\n    delete:\n      tags:\n        - Frontend\n      summary: Delete an empty container from the project\n      parameters:\n      - name: project\n        in: path\n        description: The project in which to remove the container\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: container\n        in: path\n        description: The container to remove\n        required: true\n        schema:\n          type: string\n          example: test-container\n      - name: objects\n        in: query\n        description: Toggle object deletion\n        required: false\n        schema:\n          type: boolean\n          example: true\n      requestBody:\n        description: A list of the objects to delete\n        required: false\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                example: test-object\n      responses:\n        204:\n          description: No Content\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n  /api/meta/{project}/{container}:\n    get:\n      tags:\n        - Frontend \n      summary: Get container metadata.\n      parameters:\n      - name: project\n        in: path\n        description: The project for which to query the metadata\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: container\n        in: path\n        description: The container to query\n        required: true\n        schema:\n          type: string\n          example: test-container\n      - name: objects\n        in: query\n        description: Toggle for fetching object metadata\n        required: false\n        schema:\n          type: boolean\n          example: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Meta'\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n    post:\n      tags:\n        - Frontend\n      summary: Update container metadata.\n      parameters:\n      - name: project\n        in: path\n        description: The project for which to update the metadata\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: container\n        in: path\n        description: The container to update\n        required: true\n        schema:\n          type: string\n          example: test-container\n      - name: objects\n        in: query\n        description: Toggle for updating object metadata\n        required: false\n        schema:\n          type: boolean\n          example: true\n      requestBody:\n        description: Container metadata as a key-value object. Updates must include all the metadata for the container. Omitted keys are removed by the swift backend.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                key:\n                  type: string\n              example:\n                owner: project-team\n      responses:\n        204:\n          description: Container metadata was updated. No Content.\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Container was not found\n  /api/{project}/{container}/{object}:\n    get:\n      tags:\n        - Frontend \n      summary: Download the object specified in the download link.\n      parameters:\n      - name: project\n        in: path\n        description: The project from which to download the object\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: container\n        in: path\n        description: The container to download from\n        required: true\n        schema:\n          type: string\n          example: test-container\n      - name: object\n        in: path\n        description: The object to download\n        required: true\n        schema:\n          type: string\n          example: test-object\n      responses:\n        302:\n          description: OK\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        404:\n          description: Not Found\n  /api/access/{project}/{container}/{receiver}:\n    delete:\n      tags:\n        - Frontend\n      summary: Remove access from a project in container acl.\n      parameters:\n      - name: project\n        in: path\n        description: The project that owns the container\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: container\n        in: path\n        description: The container where access is to be removed from.\n        required: true\n        schema:\n          type: string\n          example: test-container\n      - name: receiver\n        in: path\n        description: The project which the access is to be revoked from\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      responses:\n        200:\n          description: OK\n        401:\n          description: Unauthorized\n        404:\n          description: NotFound\n  /api/access/{project}/{container}:\n    post:\n      tags:\n        - Frontend\n      summary: Add access for a project in container acl.\n      parameters:\n      - name: project\n        in: path\n        description: The project owning the container\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: container\n        in: path\n        description: The container that is to be added acls to.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      - name: projects\n        in: query\n        description: The projects that are to be added to the acls\n        required: true\n        schema:\n          type: string\n          example: test-project-1,test-project-2,test-project-3\n      - name: rights\n        in: query\n        description: The rights to be added to the projects\n        required: true\n        schema:\n          type: string\n          example: rw\n      responses:\n        201:\n          description: Created\n        401:\n          description: Unauthorized\n        404:\n          description: Not Found\n    delete:\n      tags:\n        - Frontend\n      summary: Remove all allowed projects from container acl.\n      parameters:\n      - name: project\n        in: path\n        description: The project that owns the container\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: container\n        in: path\n        description: The container that is to be deleted.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      responses:\n        200:\n          description: OK\n        401:\n          description: Unauthorized\n        404:\n          description: Not Found\n  /token/{project}/{token_id}:\n    get:\n      tags:\n        - Frontend\n      summary: Handle call for an API token create.\n      parameters:\n      - name: project\n        in: path\n        description: The project that will own the token\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: token_id\n        in: path\n        description: The id of the token to be created.\n        required: true\n        schema:\n          type: string\n          example: token_id\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: string\n                example: 11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n        401:\n          description: Unauthorized\n    delete:\n      tags:\n        - Frontend\n      summary: Handle call for an API token delete.\n      parameters:\n      - name: project\n        in: path\n        description: The project that owns the token\n        required: true\n        schema:\n          type: string\n          example: test-project\n      - name: token_id\n        in: path\n        description: The id that is to be deleted.\n        required: true\n        schema:\n          type: string\n          example: token_id\n      responses:\n        204:\n          description: No Content\n        401:\n          description: Unauthorized\n\n  /token/{project_id}:\n    get:\n      tags:\n        - Frontend\n      summary: Handle call for listing API tokens.\n      parameters:\n      - name: project_id\n        in: path\n        description: The project the tokens of which are to be queried\n        required: true\n        schema:\n          type: string\n          example: test-project\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                example: ['11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111']\n        401:\n          description: Unauthorized\n\n\n  /{project}/{container}/{object_name}:\n    get:\n      tags:\n        - Upload/Download\n      summary: Request for getting object content.\n      parameters:\n      - name: project\n        in: path\n        description: The project name.\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      - name: container\n        in: path\n        description: The container name.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      - name: object_name\n        in: path\n        description: The object name.\n        required: true\n        schema:\n          type: string\n          example: test-object_name-1\n      responses:\n        200:\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                \n  /{project}/{container}:\n    post:\n      tags:\n        - Upload/Download\n      summary: Handle request for posting an object chunk.\n      parameters:\n      - name: project\n        in: path\n        description: The project which is uploading.\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      - name: container\n        in: path\n        description: The container to upload to.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      responses:\n        201:\n          description: Created\n        200:\n          description: OK\n    get:\n      tags:\n        - Upload/Download\n      summary: Handle request for getting container contents as an archive.\n      parameters:\n      - name: project\n        in: path\n        description: The project that owns the container.\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      - name: container\n        in: path\n        description: The container to download.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      responses:\n        200:\n          description: OK\n          content:\n            application/x-tar:\n              schema:\n                type: string\n                format: binary\n    options:\n      tags:\n        - Upload/Download\n      summary: Handle request for getting object content.\n      parameters:\n      - name: project\n        in: path\n        description: The project that owns the container.\n        required: true\n        schema:\n          type: string\n          example: test-project-1\n      - name: container\n        in: path\n        description: The container being queried.\n        required: true\n        schema:\n          type: string\n          example: test-container-1\n      responses:\n        200:\n          description: OK\n          headers:\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n                example: POST, OPTIONS, GET\n            Access-Control-Max-Age:\n              schema:\n                type: string\n                example: 84600\ncomponents:\n  schemas:\n\n    NewRequest:\n      type: object\n      properties:\n        user:\n          type: string\n          description: The user requesting access\n          example: AUTH_example\n        container:\n          type: string\n          description: The container the access is requested for\n          example: test-container\n        owner:\n          type: string\n          description: The owner that the access is requested from\n          example: AUTH_example\n        date:\n          type: string\n          description: The date the request was posted\n          example: \"2012-04-23T18:25:43.511Z\"\n\n    ListedRequest:\n      type: object\n      properties:\n        user:\n          type: string\n          description: The user requesting access\n          example: AUTH_example\n        container:\n          type: string\n          description: The container the access is requested for\n          example: test-container\n        owner:\n          type: string\n          description: The owner that the access is requested from\n          example: AUTH_example\n        date:\n          type: string\n          description: The date the request was posted\n          example: \"2012-04-23T18:25:43.511Z\"\n\n    Requests:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ListedRequest\"\n\n    ContainerRequests:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ListedRequest\"\n        \n    ListedContainer:\n      type: object\n      properties:\n        container:\n          type: string\n          description: The container name.\n          example: test-container-1\n        owner:\n          type: string\n          description: The real owner of the container.\n          example: AUTH_example\n\n    DetailedContainer:\n      type: object\n      properties:\n        container:\n          type: string\n          description: The container name.\n          example: test-container-1\n        owner:\n          type: string\n          description: The real owner of the container.\n          example: AUTH_example\n        shared:\n          type: string\n          description: The user the container was shared to.\n          example: AUTH_otherexample\n        address:\n          type: string\n          description: The URL of the container.\n          example: \"https://example-obj-store.os-example.com:443/swift/v1/AUTH_example/test-container-1\"\n        rights:\n          type: string\n          description: The rights that the user has / was given to.\n\n    HasAccess:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ListedContainer\"\n\n    GetDetails:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DetailedContainer\"\n\n    GaveAccess:\n      type: array\n      items:\n        type: string\n\n    SharedDetails:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DetailedContainer\"\n        \n    Username:\n      type: string\n      example: test_user_name\n      description: Openstack username that's authenticated for the session cookie.\n\n    Project:\n      type: object\n      properties:\n        id:\n          type: string\n          example: placeholder_openstack_project_id\n          description: Unique ID for identifying the exact project to Openstack.\n        name:\n          type: string\n          example: placeholcer_openstack_project_name\n          description: Projct name, also used for parsing the project URL for e.g. using the object storage\n\n    Projects:\n      type: array\n      items:\n        $ref: '#/components/schemas/Project'\n\n    ProjectMeta:\n      type: object\n      properties:\n        Account:\n          type: string\n          example: AUTH_placeholder_openstack_project_name\n          description: The account used for the project object storage in the currently active project (this is different from the Openstack account)\n        Containers:\n          type: integer\n          example: 10\n          description: The amount of containers in the currently active project.\n        Objects:\n          type: integer\n          example: 200\n          description: The amount of objects in the currently active project.\n        Bytes:\n          type: integer\n          example: 4294967296\n          description: The total amount of storage usage in bytes for the currently active project.\n    \n    ProjectAcl:\n      type: object\n      properties:\n        address: \n          type: string\n          example: host\n        access:\n          type: object\n          example:\n            containerName1: \n              ownerID1: \n                read: \"*\"\n                write: \"*\"\n            containerName2:\n               ownerID2: \n                read: \"*\"\n            \n    Container:\n      type: object\n      properties:\n        name:\n          type: string\n          example: test-container-1\n          description: The unique container name, that is used for identifying the container and creating the container URL.\n        count:\n          type: integer\n          example: 10\n          description: The amount of objects in the container.\n        bytes:\n          type: integer\n          example: 4294967296\n          description: The amount of storage used by the objects in the container.\n\n    Containers:\n      type: array\n      items:\n        $ref: '#/components/schemas/Container'\n\n    SwiftObject:\n      type: object\n      properties:\n        hash:\n          type: string\n          example: Picture an example ETag here\n          description: The object hash\n        name:\n          type: string\n          example: example-object\n          description: The unique object name, also used for parsing the object URL.\n        last_modified:\n          type: string\n          example: \"2019-08-02T11:07:48.979100\"\n          description: The date of last modification for the object\n        bytes:\n          type: integer\n          example: 2048\n          description: The object size in bytes\n        content_type:\n          type: string\n          example: binary/octet-stream\n          description: The object content type.\n\n    Objects:\n      type: array\n      items:\n        $ref: '#/components/schemas/SwiftObject'\n\n    SSSMeta:\n      type: object\n      properties:\n        atime:\n          type: string\n          example: 1536648772\n          description: Time of object addition.\n        gname:\n          type: string\n          example: example-object-name\n          description: S3 generated object name.\n\n    MetaItem:\n      type: object\n      properties:\n        example-metadata:\n          type: string\n          example: example-metadata\n          description: Example metadata key-value pair, there can be an arbitrary amount of keys-value pairs present.\n        s3cmd-attrs:\n          type: object\n          example:\n            $ref: '#/components/schemas/SSSMeta'\n          description: Amazon S3 client created metadata, if that's present.\n\n    Meta:\n      type: array\n      items:\n        $ref: '#/components/schemas/MetaItem'\n        \n    Health:\n      type: object\n      required:\n      - status\n      properties:\n        status:\n          type: string\n          example: \"Ok\"\n        degraded:\n          type: array\n          items:\n            type: string\n            example: database\n        services:\n          type: object\n          required:\n          - status\n          properties:\n            status:\n              type: string\n              example: \"Ok\"\n            degraded:\n              type: array\n              items:\n                type: string\n                example: database\n        performance:\n          type: object\n          required:\n          - status\n          properties:\n            status:\n              type: string\n              example: \"Ok\"\n            degraded:\n              type: array\n              items:\n                type: string\n                example: database\n\n",
			"canonicalURL": "/github.com/CSCfi/swift-browser-ui@29466b9f8def38cf4d3adc12b5d9f332d1b4071a/-/blob/docs/_static/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/CSCfi/swift-browser-ui/blob/29466b9f8def38cf4d3adc12b5d9f332d1b4071a/docs/_static/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:26428: duplicate path: \"/token/{project}\""
}