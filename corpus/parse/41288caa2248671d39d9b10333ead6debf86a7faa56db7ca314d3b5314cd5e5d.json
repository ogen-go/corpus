{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/regulaforensics/FaceSDK-web-openapi"
		},
		"file": {
			"name": "common.yml",
			"size": 0,
			"path": "common.yml",
			"byteSize": 13286,
			"content": "openapi: 3.0.3\n\ncomponents:\n  parameters:\n    page:\n      name: page\n      in: query\n      required: true\n      description: \"The page number to get a list of persons or groups.\"\n      schema:\n        type: integer\n        default: 1\n    size:\n      name: size\n      in: query\n      required: true\n      description: \"The page size with a list of persons or groups, items.\"\n      schema:\n        type: integer\n        default: 1000\n    x-request:\n      in: header\n      name: X-RequestID\n      schema:\n        type: string\n\n  responses:\n    BadLicense:\n      description: \"Bad license. Either the server or request does not contain a valid license.\"\n    BadRequest:\n      description: \"Bad request. Check your input data.\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/OperationLog\"\n\n\n  schemas:\n    ProcessParam:\n      type: object\n      description: \"The processing parameters.\"\n      properties:\n        scenario:\n          $ref: \"#/components/schemas/FaceQualityScenarios\"\n        onlyCentralFace:\n          type: boolean\n          description: \"Whether to process only the central face on the image (true) or all the faces (false).\"\n          example: false\n        outputImageParams:\n          $ref: \"#/components/schemas/OutputImageParams\"\n        quality:\n          $ref: \"#/components/schemas/QualityRequest\"\n\n    OutputImageParams:\n      type: object\n      description: \"Whether to process the uploaded image according to the indicated settings.\"\n      properties:\n        backgroundColor:\n          description: \"The RGB value for the background color: the silhouette of a person is cut out and the background is filled with this color.\"\n          $ref: \"#/components/schemas/RGB\"\n        crop:\n          description: \"Whether to return the Base64 of an aligned and cropped portrait in the crop field.\"\n          $ref: \"#/components/schemas/Crop\"\n\n    QualityRequest:\n      type: object\n      description: \"Whether to perform the portrait quality check.\"\n      properties:\n        backgroundMatchColor:\n          description: \"The RGB value for the background color: the silhouette of a person is cut out and the background is filled with this color.\"\n          $ref: \"#/components/schemas/RGB\"\n        config:\n          $ref: \"#/components/schemas/QualityConfigList\"\n\n    Crop:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/FaceImageQualityAlignType\"\n          description: \"The dimensions ratio to the height of the required pattern.\"\n          example: 1\n        padColor:\n          $ref: \"#/components/schemas/RGB\"\n          description: \"The RGB value for the color that will complement the image if this is needed for alignment.\"\n        size:\n          type: array\n          items:\n            type: integer\n          minItems: 2\n          maxItems: 2\n          description: \"The resize value in case type matches this value. If it doesn't, no resize is done.\"\n          example: [300, 400]\n        returnOriginalRect:\n          type: boolean\n          description: \"Whether to return the coordinates of the rectangle with the face in the original image prepared for the face crop.\"\n          example: true\n\n    QualityConfigList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/QualityConfig\"\n\n    QualityConfig:\n      type: object\n      description: \"The configuration that defines the list of returned quality check characteristics.\n       For every characteristic, includes name, range, unit.\"\n      properties:\n        name:\n          description: \"The name of the characteristic.\"\n          $ref: \"#/components/schemas/FaceQualityConfigName\"\n          example: \"Roll\"\n        range:\n          type: array\n          items:\n            type: float\n          minItems: 2\n          maxItems: 2\n          description: \"The range of applicable values for this characteristic.\n          If the returned in the Response value fits this range,\n          the value is identified as compliant with the requirements.\"\n          example: [x, y]\n\n    QualityDetailsGroups:\n      type: object\n      properties:\n        groupId:\n          description: \"The ID of the characteristics group.\"\n          $ref: \"#/components/schemas/FaceImageQualityGroups\"\n        name:\n          $ref: \"#/components/schemas/FaceQualityConfigName\"\n          description: \"The name of the characteristics group.\"\n        totalCount:\n          type: integer\n          description: \"The total number of characteristics in the group.\"\n          example: 5\n        compliantCount:\n          type: integer\n          description: \"The number of compliant characteristics in the group.\"\n          example: 4\n\n    QualityDetail:\n      type: object\n      properties:\n        groupId:\n          description: \"The ID of the characteristics group.\"\n          $ref: \"#/components/schemas/FaceImageQualityGroups\"\n          example: 0\n        name:\n          $ref: \"#/components/schemas/FaceQualityConfigName\"\n          description: \"The name of the characteristic.\"\n          example: \"Roll\"\n        range:\n          type: array\n          description: \"The range of set values for this characteristic.\"\n          items:\n            type: float\n          minItems: 2\n          maxItems: 2\n          example: [x, y]\n        status:\n          $ref: \"#/components/schemas/FaceImageQualityStatus\"\n          example: 1\n          description: \"The assessment status.\"\n        value:\n          type: float\n          description: \"The assessed value for the characteristic, returned in the set units.\"\n          example: 0.0\n\n    RGB:\n      type: array\n      items:\n        type: integer\n      minItems: 3\n      maxItems: 3\n      example: [128, 128, 128]\n\n    FaceImageQualityStatus:\n      type: integer\n      description: \"The processing status returned for each assessed quality characteristic.\" \n      enum:\n        - 0\n        - 1\n        - 2\n      x-enum-varnames:\n        - QUALITY_STATUS_FALSE\n        - QUALITY_STATUS_TRUE\n        - QUALITY_STATUS_UNDETERMINED\n\n    FaceQualityScenarios:\n      type: string\n      description: \"Face detection scenarios.\"\n      enum:\n        - \"QualityFull\"\n        - \"QualityICAO\"\n        - \"QualityVisaSchengen\"\n        - \"QualityVisaUSA\"\n        - \"CropCentralFace\"\n        - \"CropAllFaces\"\n        - \"Thumbnail\"\n      x-enum-varnames:\n        - QUALITY_FULL\n        - QUALITY_ICAO\n        - QUALITY_VISA_SCHENGEN\n        - QUALITY_VISA_USA\n        - CROP_CENTRAL_FACE\n        - CROP_ALL_FACES\n        - THUMBNAIL\n\n    FaceImageQualityGroups:\n      type: integer\n      description: \"Face image quality group types for face image quality assessment.\"\n      enum:\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 7\n        - 8\n      x-enum-varnames:\n        - IMAGE_CHARACTERISTICS\n        - HEAD_SIZE_AND_POSITIONS\n        - FACE_QUALITY\n        - EYES_CHARACTERISTICS\n        - SHADOWS_AND_LIGHTNING\n        - POSE_AND_EXPRESSION\n        - HEAD_OCCLUSION\n        - BACKGROUND\n\n    FaceQualityConfigName:\n      type: string\n      description: \"All image characteristics that can be assessed during face image quality assessment.\"\n      enum:\n        - \"ArtFace\"\n        - \"ImageWidth\"\n        - \"ImageHeight\"\n        - \"ImageWidthToHeight\"\n        - \"ImageChannelsNumber\"\n        - \"PaddingRatio\"\n        - \"FaceMidPointHorizontalPosition\"\n        - \"FaceMidPointVerticalPosition\"\n        - \"HeadWidthRatio\"\n        - \"HeadHeightRatio\"\n        - \"EyesDistance\"\n        - \"Yaw\"\n        - \"Pitch\"\n        - \"Roll\"\n        - \"BlurLevel\"\n        - \"NoiseLevel\"\n        - \"EyeRightClosed\"\n        - \"EyeLeftClosed\"\n        - \"EyeRightOccluded\"\n        - \"EyeLeftOccluded\"\n        - \"EyesRed\"\n        - \"EyeRightCoveredWithHair\"\n        - \"EyeLeftCoveredWithHair\"\n        - \"OffGaze\"\n        - \"FaceDynamicRange\"\n        - \"UnnaturalSkinTone\"\n        - \"TooDark\"\n        - \"TooLight\"\n        - \"FaceGlare\"\n        - \"ShadowsOnFace\"\n        - \"DarkGlasses\"\n        - \"ReflectionOnGlasses\"\n        - \"FramesTooHeavy\"\n        - \"FaceOccluded\"\n        - \"HeadCovering\"\n        - \"BackgroundUniformity\"\n        - \"ShadowsOnBackground\"\n        - \"OtherFaces\"\n        - \"ShouldersPose\"\n        - \"ExpressionLevel\"\n        - \"MouthOpen\"\n        - \"ForeheadCovering\"\n        - \"Smile\"\n        - \"StrongMakeup\"\n        - \"Headphones\"\n        - \"MedicalMask\"\n        - \"BackgroundColorMatch\"\n      x-enum-varnames:\n        - ART_FACE\n        - IMAGE_WIDTH\n        - IMAGE_HEIGHT\n        - IMAGE_WIDTH_TO_HEIGHT\n        - IMAGE_CHANNELS_NUMBER\n        - PADDING_RATIO\n        - FACE_MID_POINT_HORIZONTAL_POSITION\n        - FACE_MID_POINT_VERTICAL_POSITION\n        - HEAD_WIDTH_RATIO\n        - HEAD_HEIGHT_RATIO\n        - EYES_DISTANCE\n        - YAW\n        - PITCH\n        - ROLL\n        - BLUR_LEVEL\n        - NOISE_LEVEL\n        - EYE_RIGHT_CLOSED\n        - EYE_LEFT_CLOSED\n        - EYE_RIGHT_OCCLUDED\n        - EYE_LEFT_OCCLUDED\n        - EYES_RED\n        - EYE_RIGHT_COVERED_WITH_HAIR\n        - EYE_LEFT_COVERED_WITH_HAIR\n        - OFF_GAZE\n        - FACE_DYNAMIC_RANGE\n        - UNNATURAL_SKIN_TONE\n        - TOO_DARK\n        - TOO_LIGHT\n        - FACE_GLARE\n        - SHADOWS_ON_FACE\n        - DARK_GLASSES\n        - REFLECTION_ON_GLASSES\n        - FRAMES_TOO_HEAVY\n        - FACE_OCCLUDED\n        - HEAD_COVERING\n        - BACKGROUND_UNIFORMITY\n        - SHADOWS_ON_BACKGROUND\n        - OTHER_FACES\n        - SHOULDERS_POSE\n        - EXPRESSION_LEVEL\n        - MOUTH_OPEN\n        - FOREHEAD_COVERING\n        - SMILE\n        - STRONG_MAKEUP\n        - HEADPHONES\n        - MEDICAL_MASK\n        - BACKGROUND_COLOR_MATCH\n\n    FaceSDKResult:\n      type: object\n      required:\n        - code\n      properties:\n        code:\n          $ref: \"#/components/schemas/FaceSDKResultCode\"\n\n    ImageData:\n      description: \"Base64 encoded image.\"\n      type: string\n      format: byte\n\n    OperationLog:\n      type: object\n      properties:\n        status_code:\n          type: integer\n          description: \"Status code.\"\n        type:\n          type: string\n          description: \"Error type.\"\n        msg:\n          type: string\n          description: \"Error message.\"\n    Page:\n      type: object\n      description: \"Information about current page number and total pages count\"\n      properties:\n        page:\n          type: integer\n          description: \"Current page number.\"\n          example: 1\n        total_pages:\n          type: integer\n          description: \"Total number of pages.\"\n          example: 2\n\n    Bytes:\n      type: string\n      format: binary\n\n    FaceImageQualityAlignType:\n      type: integer\n      description: \"The aspect ratio according to which face alignment is performed during face detection.\"\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n      x-enum-varnames:\n        - ALIGN_3x4\n        - ALIGN_4x5\n        - ALIGN_2x3\n        - ALIGN_1x1\n        - ALIGN_7x9\n\n    FaceSDKResultCode:\n      type: integer\n      description: \"Result codes from core lib.\"\n      enum:\n        - 0\n        - 200\n        - 201\n        - 202\n        - 203\n        - 204\n        - 205\n        - 206\n        - 207\n        - 208\n        - 209\n        - 210\n        - 211\n        - 212\n        - 213\n        - 214\n        - 215\n        - 216\n        - 217\n        - 218\n        - 219\n        - 220\n        - 221\n        - 222\n        - 223\n        - 224\n        - 225\n        - 226\n        - 227\n        - 228\n        - 229\n      x-enum-varnames:\n        - FACER_OK\n        - FACER_NO_LICENSE\n        - FACER_IS_NOT_INITIALIZED\n        - FACER_COMMAND_IS_NOT_SUPPORTED\n        - FACER_COMMAND_PARAMS_READ_ERROR\n        - FACER_SEARCHER_INDEX_FILE_NOT_EXIST\n        - FACER_SEARCHER_INDEX_FILE_READ_ERROR\n        - FACER_SEARCHER_INDEX_FILE_DECRYPTION_ERROR\n        - FACER_SEARCHER_INDEX_LOAD_ERROR\n        - FACER_SEARCHER_WRONG_DESCRIPTOR_VERSION\n        - FACER_SEARCHER_INDEX_FILE_ENCRYPTION_ERROR\n        - FACER_SEARCHER_INDEX_FILE_SAVE_ERROR\n        - FACER_SEARCHER_IMAGE_DECODE_ERROR\n        - FACER_SEARCHER_ID_EXISTS_IN_INDEX\n        - FACER_SEARCHER_ID_NOT_IN_INDEX\n        - FACER_SEARCHER_NO_FACES\n        - FACER_SEARCHER_DESCRIPTOR_EXTRACTOR_ERROR\n        - FACER_SEARCHER_METADATA_READ_ERROR\n        - FACER_SEARCHER_NO_SEARCH_LICENSE\n        - FACER_SEARCHER_DESCRIPTOR_DECODE_ERROR\n        - FACER_SEARCHER_DESCRIPTOR_WRONG_SIZE\n        - FACER_SEARCHER_ZIP_IMAGE_READ_ERROR\n        - FACER_SEARCHER_ZIP_META_READ_ERROR\n        - FACER_SEARCHER_SIMILAR_PHOTOS_EXIST\n        - FACER_SEARCHER_PERSON_ZIP_READ_ERROR\n        - FACER_LESS_THAN_TWO_IMAGES_IN_REQUEST\n        - FACER_SEARCHER_WRONG_ID\n        - FACER_SEARCHER_ID_EXISTS_IN_DELETED\n        - FACER_VIDEO_DECODE_ERROR\n        - FACER_NOT_ENOUGH_FRAMES\n        - FACER_OUTPUT_IS_NOT_DEFINED\n\n    Thumbnail:\n      description: \"Base64 of the cropped portrait.\"\n      type: string\n      format: byte\n\n    FaceRectangular:\n      description: \"Rectangular area of the detected face. First element - X-axis coordinate. Second element - Y-axis coordinate. (X, Y) - left top point. Third element - rectangular width. Fourth element - rectangular height.\"\n      type: array\n      items:\n        type: number\n      example: [x, y, width, height]\n",
			"canonicalURL": "/github.com/regulaforensics/FaceSDK-web-openapi@07562373dd6f7af9e538c70e3f173d614c30b163/-/blob/common.yml",
			"externalURLs": [
				{
					"url": "https://github.com/regulaforensics/FaceSDK-web-openapi/blob/07562373dd6f7af9e538c70e3f173d614c30b163/common.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"QualityConfig\": resolve \"#/components/schemas/QualityConfig\": property \"range\": items: at common.yml:115:19: type: unexpected schema type: \"float\""
}