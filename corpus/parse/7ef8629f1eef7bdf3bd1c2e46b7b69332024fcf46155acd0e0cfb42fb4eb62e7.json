{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackus/ftgogo"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "order/internal/handlers/openapi.yaml",
			"byteSize": 5065,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: Order Service API\n  description: The order-service API is part of the FTGOGO demonstration application\n  contact:\n    name: FTGOGO Issues\n    url: https://github.com/stackus/ftgogo/issues\nservers:\n  - url: https://{host}:{port}/api\n    variables:\n      host:\n        default: localhost\n      port:\n        default: \"8005\"\npaths:\n  /orders:\n    post:\n      summary: Create a new order for delivery\n      operationId: createOrder\n      requestBody:\n        description: create order request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ consumer_id, restaurant_id, delivery_time, delivery_address, line_items ]\n              properties:\n                consumer_id:\n                  type: string\n                restaurant_id:\n                  type: string\n                delivery_time:\n                  type: string\n                  format: date-time\n                delivery_address:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n                line_items:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/MenuItemQuantities'\n      responses:\n        '201':\n          $ref: '#/components/responses/OrderIDResponse'\n        default:\n          $ref: '../../../shared-go/web/spec.yaml#/components/responses/ErrorResponse'\n  /orders/{orderID}:\n    get:\n      summary: Get basic information for an order by ID\n      operationId: getOrder\n      parameters:\n        - $ref: '#/components/parameters/OrderID'\n      responses:\n        '200':\n          $ref: '#/components/responses/OrderResponse'\n        default:\n          $ref: '../../../shared-go/web/spec.yaml#/components/responses/ErrorResponse'\n  /orders/{orderID}/cancel:\n    put:\n      summary: Cancel an order by ID\n      operationId: cancelOrder\n      parameters:\n        - $ref: '#/components/parameters/OrderID'\n      responses:\n        '202':\n          $ref: '#/components/responses/OrderStatusResponse'\n        default:\n          $ref: '../../../shared-go/web/spec.yaml#/components/responses/ErrorResponse'\n  /orders/{orderID}/revise:\n    put:\n      summary: Revise an orders menu items by ID\n      operationId: reviseOrder\n      parameters:\n        - $ref: '#/components/parameters/OrderID'\n      requestBody:\n        description: revise order request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ revised_quantities ]\n              properties:\n                revised_quantities:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/MenuItemQuantities'\n      responses:\n        '202':\n          $ref: '#/components/responses/OrderStatusResponse'\n        default:\n          $ref: '../../../shared-go/web/spec.yaml#/components/responses/ErrorResponse'\n  /restaurants/{restaurantID}:\n    get:\n      summary: Get/Confirm a restaruant exists by ID\n      operationId: getRestaurant\n      parameters:\n        - $ref: '#/components/parameters/RestaurantID'\n      responses:\n        '200':\n          $ref: '#/components/responses/RestaurantIDResponse'\n        default:\n          $ref: '../../../shared-go/web/spec.yaml#/components/responses/ErrorResponse'\n\ncomponents:\n  schemas:\n    MenuItemQuantities:\n      type: object\n      additionalProperties:\n        type: integer\n  parameters:\n    OrderID:\n      in: path\n      name: orderID\n      description: order id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n    RestaurantID:\n      in: path\n      name: restaurantID\n      description: restaurant id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n  responses:\n    EmptyResponse:\n      description: No Content\n    OrderIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    OrderStatusResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ status ]\n            properties:\n              status:\n                type: string\n    OrderResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ order_id, state, order_total ]\n            properties:\n              order_id:\n                type: string\n              state:\n                type: string\n                enum: [ ApprovalPending, Approved, Rejected, CancelPending, Cancelled, RevisionPending ]\n              order_total:\n                type: integer\n    RestaurantIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /orders/{orderID}/cancel: put: operation \"cancelOrder\": responses: default: resolve \"../../../shared-go/web/spec.yaml#/components/responses/ErrorResponse\" reference: external \"../../../shared-go/web/spec.yaml\": file: local file reference is not allowed"
}