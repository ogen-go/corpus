{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/serverless-application-model"
		},
		"file": {
			"name": "api_with_usage_plan.yaml",
			"size": 0,
			"path": "integration/resources/templates/combination/api_with_usage_plan.yaml",
			"byteSize": 4089,
			"content": "Parameters:\n  UsagePlanType:\n    Type: String\n    Default: PER_API\nGlobals:\n  Api:\n    OpenApiVersion: '2.0'\n    Auth:\n      ApiKeyRequired: true\n      UsagePlan:\n        CreateUsagePlan:\n          Ref: UsagePlanType\n        Description: My test usage plan\n        Quota:\n          Limit: 500\n          Period: MONTH\n        Throttle:\n          BurstLimit: 100\n          RateLimit: 50\n\nResources:\n  MyApi:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: Prod\n      DefinitionBody:\n        # Simple HTTP Proxy API\n        swagger: '2.0'\n        info:\n          version: '2016-09-23T22:23:23Z'\n          title: Simple Api 1\n        basePath: /demo\n        schemes:\n        - https\n        paths:\n          /http/{proxy+}:\n            x-amazon-apigateway-any-method:\n              parameters:\n              - name: proxy\n                in: path\n              x-amazon-apigateway-integration:\n                type: http_proxy\n                uri: http://httpbin.org/{proxy}\n                httpMethod: ANY\n                passthroughBehavior: when_no_match\n                requestParameters:\n                  integration.request.path.proxy: method.request.path.proxy\n\n  MyApi2:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: Prod\n      OpenApiVersion: 3.0.1\n      Auth:\n        UsagePlan:\n          CreateUsagePlan: SHARED\n      DefinitionBody:\n        # Simple HTTP Proxy API\n        openapi: 3.0.1\n        info:\n          version: '2016-09-23T22:23:23Z'\n          title: Simple Api 2\n        basePath: /demo\n        schemes:\n        - https\n        paths:\n          /http/{proxy+}:\n            x-amazon-apigateway-any-method:\n              parameters:\n              - name: proxy\n                in: path\n              x-amazon-apigateway-integration:\n                type: http_proxy\n                uri: http://httpbin.org/{proxy}\n                httpMethod: ANY\n                passthroughBehavior: when_no_match\n                requestParameters:\n                  integration.request.path.proxy: method.request.path.proxy\n\n  MyApi3:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: Prod\n      OpenApiVersion: 3.0.1\n      Auth:\n        UsagePlan:\n          CreateUsagePlan: NONE\n      DefinitionBody:\n        # Simple HTTP Proxy API\n        openapi: 3.0.1\n        info:\n          version: '2016-09-23T22:23:23Z'\n          title: Simple Api 3\n        basePath: /demo\n        schemes:\n        - https\n        paths:\n          /http/{proxy+}:\n            x-amazon-apigateway-any-method:\n              parameters:\n              - name: proxy\n                in: path\n              x-amazon-apigateway-integration:\n                type: http_proxy\n                uri: http://httpbin.org/{proxy}\n                httpMethod: ANY\n                passthroughBehavior: when_no_match\n                requestParameters:\n                  integration.request.path.proxy: method.request.path.proxy\n\n  MyApi4:\n    Type: AWS::Serverless::Api\n    Properties:\n      StageName: Prod\n      OpenApiVersion: 3.0.1\n      Auth:\n        UsagePlan:\n          CreateUsagePlan: SHARED\n      DefinitionBody:\n        # Simple HTTP Proxy API\n        openapi: 3.0.1\n        info:\n          version: '2016-09-23T22:23:23Z'\n          title: Simple Api 4\n        basePath: /demo\n        schemes:\n        - https\n        paths:\n          /http/{proxy+}:\n            x-amazon-apigateway-any-method:\n              parameters:\n              - name: proxy\n                in: path\n              x-amazon-apigateway-integration:\n                type: http_proxy\n                uri: http://httpbin.org/{proxy}\n                httpMethod: ANY\n                passthroughBehavior: when_no_match\n                requestParameters:\n                  integration.request.path.proxy: method.request.path.proxy\n\nOutputs:\n  MyApiUsagePlan:\n    Value:\n      Ref: MyApiUsagePlan\n  MyApiApiKey:\n    Value:\n      Ref: MyApiApiKey\n  ServerlessUsagePlan:\n    Value:\n      Ref: ServerlessUsagePlan\n  ServerlessApiKey:\n    Value:\n      Ref: ServerlessApiKey\nMetadata:\n  SamTransformTest: true\n",
			"canonicalURL": "/github.com/aws/serverless-application-model@2f53aebdcf9b322a395eaa872e5368ddc3c76c95/-/blob/integration/resources/templates/combination/api_with_usage_plan.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aws/serverless-application-model/blob/2f53aebdcf9b322a395eaa872e5368ddc3c76c95/integration/resources/templates/combination/api_with_usage_plan.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at integration/resources/templates/combination/api_with_usage_plan.yaml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}