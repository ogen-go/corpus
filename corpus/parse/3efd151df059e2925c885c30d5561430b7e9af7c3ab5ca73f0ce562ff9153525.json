{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "LocationNewRequest.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Core/Locations/Schemas/LocationNewRequest.yaml",
			"byteSize": 5039,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    LocationNewRequest: \n      type: object\n      properties: \n        abbreviation:\n          description: A shortened version of the human readable name for a Location\n          type: string\n          example: L1\n        additionalInfo:\n          additionalProperties:\n            type: string\n          description: A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.\n          type: object\n          example: {}\n        coordinateUncertainty:\n          description: Uncertainty associated with the coordinates in meters. Leave the value empty if the uncertainty is unknown.\n          type: string\n          example: '20'\n        countryCode:\n          description: |-\n            [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec\n            \u003cbr/\u003e MIAPPE V1.1 (DM-17) Geographic location (country) - The country where the experiment took place, either as a full name or preferably as a 2-letter code.'\n          type: string\n          example: PER\n        countryName:\n          description: |-\n            The full name of the country where a Location is located\n            \u003cbr/\u003e MIAPPE V1.1 (DM-17) Geographic location (country) - The country where the experiment took place, either as a full name or preferably as a 2-letter code.\n          type: string\n          example: Peru\n        documentationURL:\n          description: A URL to the human readable documentation of an object\n          format: uri\n          type: string\n          example: https://brapi.org\n        instituteAddress:\n          description: |-\n            The street address of the institute at a particular Location\n            \u003cbr/\u003e MIAPPE V1.1 (DM-16) Contact institution - Name and address of the institution responsible for the study.\n          type: string\n          example: 71 Pilgrim Avenue Chevy Chase MD 20815\n        instituteName:\n          description: |-\n            The full name of the institute at a particular Location\n            \u003cbr/\u003e MIAPPE V1.1 (DM-16) Contact institution - Name and address of the institution responsible for the study.\n          type: string\n          example: Plant Science Institute\n        locationName:\n          description: |-\n            A human readable name for a Location\n            \u003cbr/\u003e MIAPPE V1.1 (DM-18) Experimental site name - The name of the natural site, experimental field, greenhouse, phenotyping facility, etc. where the experiment took place.\n          type: string\n          example: Location 1\n        parentLocationDbId:\n          description: |-\n            The unique identifier for a Location\n            \u003cbr/\u003e The Parent Location defines the encompassing Location that a smaller Location belongs to. \n            For example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields.\n          type: string\n          example: 0a93f7d8\n        parentLocationName:\n          description: |-\n            A human readable name for a location\n            \u003cbr/\u003e The Parent Location defines the encompassing Location that a smaller Location belongs to.  \n            For example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields.\n          type: string\n          example: Field Station Alpha\n        locationType:\n          description: A short description of a type of Location (ex. Field Station, Breeding Location, Storage Location, etc)\n          type: string\n          example: Field Station\n        siteStatus:\n          description: Description of the accessibility of the location (ex. Public, Private)\n          type: string\n          example: Private\n        coordinateDescription:\n          description: Describes the precision and landmarks of the coordinate values used for a Location. (ex. the site, the nearest town, a 10 kilometers radius circle, +/- 20 meters, etc)\n          type: string\n          example: North East corner of greenhouse\n        slope:\n          description: Describes the approximate slope (height/distance) of a Location.\n          type: string\n          example: '0'\n        exposure:\n          description: Describes the level of protection/exposure for things like sun light and wind at a particular Location\n          type: string\n          example: Structure, no exposure\n        environmentType:\n          description: Describes the general type of environment of a Location. (ex. forest, field, nursery, etc)\n          type: string\n          example: Nursery\n        topography:\n          description: Describes the topography of the land at a Location. (ex. Plateau, Cirque, Hill, Valley, etc)\n          type: string\n          example: Valley\n        coordinates:\n          $ref: '#/components/schemas/geoJSON'\n        externalReferences: \n          $ref: '#/components/schemas/ExternalReferences'\n          \n\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@99a2ff6e980fc6b34c5675fe27b7608d0bbf2d4e/-/blob/Specification/BrAPI-Core/Locations/Schemas/LocationNewRequest.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/99a2ff6e980fc6b34c5675fe27b7608d0bbf2d4e/Specification/BrAPI-Core/Locations/Schemas/LocationNewRequest.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"LocationNewRequest\": resolve \"#/components/schemas/LocationNewRequest\": property \"coordinates\": at Specification/BrAPI-Core/Locations/Schemas/LocationNewRequest.yaml:103:17: $ref: resolve \"#/components/schemas/geoJSON\": resolve: can't find value for \"components/schemas/geoJSON\""
}