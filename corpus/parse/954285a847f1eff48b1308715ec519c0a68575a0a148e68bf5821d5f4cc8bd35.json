{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PureStorage-OpenConnect/swagger"
		},
		"file": {
			"name": "FlashArray REST v1.8.yaml",
			"size": 0,
			"path": "html/specs/FlashArray REST v1.8.yaml",
			"byteSize": 209132,
			"content": "components:\n  schemas:\n    delete_1.8_alert_{address}Examples:\n      example:\n        'Example 1: Delete a single alert recipient':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/alert/admin@example.com\n          response:\n            name: admin@example.com\n      properties:\n        ex1:\n          type: object\n    delete_1.8_array_connection_{connection}Examples:\n      example:\n        'Example 1: Disconnect array pure02 from array pure01':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/array/connection/pure02\n          response:\n            name: pure02\n      properties:\n        ex1:\n          type: object\n    delete_1.8_auth_sessionExamples:\n      example:\n        'Example 1: Delete (invalidate) a REST session':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/auth/session\n          response:\n            username: os76\n      properties:\n        ex1:\n          type: object\n    delete_1.8_hgroup_{hgroup}Examples:\n      example:\n        'Example 1: Delete host group hg4':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/hgroup/hg4\n          response:\n            name: hg4\n      properties:\n        ex1:\n          type: object\n    delete_1.8_hgroup_{hgroup}_volume_{volume}Examples:\n      example:\n        'Example 1: Disconnect volume v3 from host group hg4':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/hgroup/hg4/volume/v3\n          response:\n            name: hg4\n            vol: v3\n      properties:\n        ex1:\n          type: object\n    delete_1.8_host_{host}Examples:\n      example:\n        'Example 1: Delete host h5':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/host/h5\n          response:\n            name: h5\n      properties:\n        ex1:\n          type: object\n    delete_1.8_host_{host}_volume_{volume}Examples:\n      example:\n        'Example 1: Disconnect host h5 and volume v5_renamed':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/host/h5/volume/v5_renamed\n          response:\n            name: h5\n            vol: v5_renamed\n      properties:\n        ex1:\n          type: object\n    delete_1.8_network_{vlan_interface}Examples:\n      example:\n        'Example 1: Delete VLAN network interface ct0.eth1.100.':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/network/ct0.eth1.100\n          response:\n            name: ct0.eth1.100\n      properties:\n        ex1:\n          type: object\n    delete_1.8_pgroup_{pgroup}Examples:\n      example:\n        'Example 1: Destroys protection group pg5':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/pgroup/pg5\n          response:\n            name: pg5\n        'Example 2: Eradicates protection group pg5':\n          request:\n            body:\n              eradicate: true\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/pgroup/pg5\n          response:\n            name: pg5\n      properties:\n        ex1:\n          type: object\n    delete_1.8_subnet_{subnet}Examples:\n      example:\n        'Example 1: Delete subnet managementSubnet':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/subnet/managementSubnet\n          response:\n            name: managementSubnet\n      properties:\n        ex1:\n          type: object\n    delete_1.8_volume_{volume}Examples:\n      example:\n        'Example 1: Destroy volume v6':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/volume/v6\n          response:\n            name: v6\n        'Example 2: Eradicate volume v6':\n          request:\n            body: ''\n            method: DELETE\n            url: https://pure01.example.com/api/1.8/volume/v6?eradicate=true\n          response:\n            name: v6\n      properties:\n        ex1:\n          type: object\n    get_1.8_adminExamples:\n      example:\n        'Example 1: List users who have public keys':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/admin?publickey=true\n          response: []\n        'Example 2: List users who have API tokens':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/admin?api_token=true\n          response:\n          - api_token: '****'\n            created: '2016-10-12T02:04:16Z'\n            name: os76\n          - api_token: '****'\n            created: '2016-10-12T02:04:48Z'\n            name: pureuser\n      properties:\n        ex1:\n          type: object\n    get_1.8_alertExamples:\n      example:\n        'Example 1: List all alert recipients':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/alert\n          response:\n          - enabled: false\n            name: flasharray-alerts@purestorage.com\n      properties:\n        ex1:\n          type: object\n    get_1.8_alert_{address}Examples:\n      example:\n        'Example 1: List a single alert recipient':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/alert/flasharray-alerts@purestorage.com\n          response:\n            enabled: false\n            name: flasharray-alerts@purestorage.com\n      properties:\n        ex1:\n          type: object\n    get_1.8_arrayExamples:\n      example:\n        'Example 1: List array attributes':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array\n          response:\n            array_name: pure01\n            id: 6ddab76b-2320-4e7c-bf69-fec0cdce02b9\n            revision: 201610112225+ffa751f\n            version: 4.8.2\n        'Example 2: List array controllers':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array?controllers=true\n          response:\n          - mode: primary\n            model: VMware\n            name: CT0\n            status: ready\n            version: 4.8.2\n        'Example 3: List array space usage':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array?space=true\n          response:\n          - capacity: 3770384763\n            data_reduction: 1.0\n            hostname: pure01\n            parity: 1.0\n            shared_space: 0\n            snapshots: 0\n            system: 0\n            thin_provisioning: 0.0\n            total: 0\n            total_reduction: 1.0\n            volumes: 0\n        'Example 4: List array space usage for the past hour':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array?space=true\u0026historical=1h\n          response:\n          - capacity: 3774649904\n            data_reduction: 1.0\n            hostname: pure01\n            parity: null\n            shared_space: 0\n            snapshots: 0\n            system: 0\n            thin_provisioning: null\n            time: '2016-10-12T02:03:49Z'\n            total: 0\n            total_reduction: null\n            volumes: 0\n          - capacity: 3774649904\n            data_reduction: 1.0\n            hostname: pure01\n            parity: null\n            shared_space: 0\n            snapshots: 0\n            system: 0\n            thin_provisioning: null\n            time: '2016-10-12T02:04:19Z'\n            total_reduction: null\n            volumes: 0\n        'Example 5: List real-time performance data for the array':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array?action=monitor\n          response:\n          - input_per_sec: 0\n            output_per_sec: 0\n            queue_depth: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:05:24Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n        'Example 6: List historical performance data for the array at resolution ''1h''':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array?action=monitor\u0026historical=1h\n          response:\n          - input_per_sec: 0\n            output_per_sec: 0\n            queue_depth: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:03:49Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n          - input_per_sec: 0\n            output_per_sec: 0\n            queue_depth: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:04:19Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n          - input_per_sec: 0\n            output_per_sec: 0\n            queue_depth: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n      properties:\n        ex1:\n          type: object\n    get_1.8_array_connectionExamples:\n      example:\n        'Example 1: List connected arrays':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array/connection\n          response: []\n      properties:\n        ex1:\n          type: object\n    get_1.8_array_console_lockExamples:\n      example:\n        'Example 1: Displays the console lock status':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array/console_lock\n          response:\n            console_lock: disabled\n      properties:\n        ex1:\n          type: object\n    get_1.8_array_phonehomeExamples:\n      example:\n        'Example 1: Display phonehome status':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array/phonehome\n          response:\n            action: null\n            status: null\n      properties:\n        ex1:\n          type: object\n    get_1.8_array_remoteassistExamples:\n      example:\n        'Example 1: Display remoteassist status':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/array/remoteassist\n          response:\n            name: pure01-ct0\n            port: ''\n            status: disabled\n      properties:\n        ex1:\n          type: object\n    get_1.8_certExamples:\n      example:\n        'Example 1: List the attributes of the current certificate':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/cert\n          response:\n            country: US\n            email: null\n            issued_by: db.purestorage.com\n            issued_to: db.purestorage.com\n            key_size: 2048\n            locality: Mountain View\n            organization: Pure Storage Inc.\n            organizational_unit: null\n            state: CA\n            status: self-signed\n            valid_from: '2016-10-12T02:05:24Z'\n            valid_to: '2026-10-10T02:05:24Z'\n        'Example 2: Export the current certificate':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/cert?certificate=true\n          response:\n            certificate: '-----BEGIN CERTIFICATE-----\n\n              MIIDUjCCAjoCCQD2PIz3YkFz5TANBgkqhkiG9w0BAQsFADBrMRYwFAYDVQQHDA1N\n\n              b3VudGFpbiBWaWV3MQswCQYDVQQGEwJVUzELMAkGA1UECAwCQ0ExGzAZBgNVBAMM\n\n              EmRiLnB1cmVzdG9yYWdlLmNvbTEaMBgGA1UECgwRUHVyZSBTdG9yYWdlIEluYy4w\n\n              HhcNMTYxMDEyMDIwNTI0WhcNMjYxMDEwMDIwNTI0WjBrMRYwFAYDVQQHDA1Nb3Vu\n\n              dGFpbiBWaWV3MQswCQYDVQQGEwJVUzELMAkGA1UECAwCQ0ExGzAZBgNVBAMMEmRi\n\n              LnB1cmVzdG9yYWdlLmNvbTEaMBgGA1UECgwRUHVyZSBTdG9yYWdlIEluYy4wggEi\n\n              MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDb4KCxxa8QyaGLd6llNpv+RcnL\n\n              LRG7OFkVnL4mO9lWouNiZUpk63g0Mm+AlsSLKVMvvFJyHtrcA+XoBF3m0kzQcUef\n\n              9wQEMcnPpGrljYdfLzIleiDi1UX0wIRxMV8R6PH3ETvlrsF0QFRBqd7dfWAVDUfm\n\n              UFdnrY5qubi4hK5AMkvGjzozeIQPTq3Fv+4V750lKCpw8ejScCeoXp03PuJgTy9h\n\n              TcYAAnLdbYU7FQihIe4VmuCPsJz8jbXWlFvFvP6ter7tqlURfYDWLFLs+njshpJs\n\n              8GczeoqHlXT0XUrCaD9IZP6ov2eaTs1rFvWXPUIlIK59vyZwv+RgdRxPD6TFAgMB\n\n              AAEwDQYJKoZIhvcNAQELBQADggEBAKkBvHSckuENlLVqBB7QO39iwsrrf0zrz+TA\n\n              Gj/YgDA2P+Bgxi3bhOAS5zPCR5M8lgitjyyBjsw/jj77nRcJIlXKK3jzhtZMaacu\n\n              Ipbq6l6TrWdjnI+2FQbhPiso3WW1LJ3T54qTO9l9YlaGnoRNeiZaTRJowrJ93qc8\n\n              FVj3BWEck1mi5Zwd6bC1VN/wZd9Ej1eaYXgSjAPkdfm3gPE108qmSJdK3nvCyjK7\n\n              ScV5WiLKgusvxketu6mwDyNHvLnjOqLxGS4NvVubMNM4T2RrvQL7dtiXFH1AKNHq\n\n              JGhM0wyxWNngEucrPJh1FQ6iWvUvLFRwGtPviDIMGKnSkaTvqws=\n\n              -----END CERTIFICATE-----\n\n              '\n      properties:\n        ex1:\n          type: object\n    get_1.8_cert_certificate_signing_requestExamples:\n      example:\n        'Example 1: Construct a CSR with the current certificate attributes':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/cert/certificate_signing_request\n          response:\n            certificate_signing_request: '-----BEGIN CERTIFICATE REQUEST-----\n\n              MIICzjCCAbYCAQAwgYgxFjAUBgNVBAcMDU1vdW50YWluIFZpZXcxCzAJBgNVBAYT\n\n              AlVTMQswCQYDVQQIDAJDQTEbMBkGA1UECwwSUHVyZSBTdG9yYWdlLCBJbmMuMRsw\n\n              GQYDVQQDDBJkYi5wdXJlc3RvcmFnZS5jb20xGjAYBgNVBAoMEVB1cmUgU3RvcmFn\n\n              ZSBJbmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2+CgscWvEMmh\n\n              i3epZTab/kXJyy0RuzhZFZy+JjvZVqLjYmVKZOt4NDJvgJbEiylTL7xSch7a3APl\n\n              6ARd5tJM0HFHn/cEBDHJz6Rq5Y2HXy8yJXog4tVF9MCEcTFfEejx9xE75a7BdEBU\n\n              Qane3X1gFQ1H5lBXZ62Oarm4uISuQDJLxo86M3iED06txb/uFe+dJSgqcPHo0nAn\n\n              qF6dNz7iYE8vYU3GAAJy3W2FOxUIoSHuFZrgj7Cc/I211pRbxbz+rXq+7apVEX2A\n\n              1ixS7Pp47IaSbPBnM3qKh5V09F1Kwmg/SGT+qL9nmk7Naxb1lz1CJSCufb8mcL/k\n\n              YHUcTw+kxQIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBANaxJIQH+yprSY5ZpaTs\n\n              sG5Mo7E/4maH/MYUk/pIx+rfhIeEJUt9zqy2iEyoJFBiI+E7aKcNRqZS+cUGFY0q\n\n              7GmSgFnuHzqFre6d1pAAAwvupeYEgF7xiwW9pNDp+GBVFo2Ah8bizIjvG68sgGBw\n\n              Vq/cmLomkOgQSqXSqDi6HPXNoAm7lBN3KxsLhNVK9SpU3zblQwH6FsLeJNzWgUzq\n\n              XEZOnJ+8RyqfnEphWHV0N/zL5JwqhU+sDt0dl81AEhLZha468WpAf0q4w/4SnFv0\n\n              IS6m/ZchdE5KOFZAQIywSmP1oozcgCoUPiWJB0ZGOVCFyJO1XUuN0+cPCqztiBiZ\n\n              esk=\n\n              -----ENDCERTIFICATE REQUEST-----\n\n              '\n        'Example 2: Construct a CSR with the current certificate attributes, but change the common name to db.example.com':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/cert/certificate_signing_request?common_name=db.example.com\n          response:\n            certificate_signing_request: '-----BEGIN CERTIFICATE REQUEST-----\n\n              MIICyjCCAbICAQAwgYQxFjAUBgNVBAcMDU1vdW50YWluIFZpZXcxCzAJBgNVBAYT\n\n              AlVTMQswCQYDVQQIDAJDQTEbMBkGA1UECwwSUHVyZSBTdG9yYWdlLCBJbmMuMRcw\n\n              FQYDVQQDDA5kYi5leGFtcGxlLmNvbTEaMBgGA1UECgwRUHVyZSBTdG9yYWdlIElu\n\n              Yy4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDb4KCxxa8QyaGLd6ll\n\n              Npv+RcnLLRG7OFkVnL4mO9lWouNiZUpk63g0Mm+AlsSLKVMvvFJyHtrcA+XoBF3m\n\n              0kzQcUef9wQEMcnPpGrljYdfLzIleiDi1UX0wIRxMV8R6PH3ETvlrsF0QFRBqd7d\n\n              fWAVDUfmUFdnrY5qubi4hK5AMkvGjzozeIQPTq3Fv+4V750lKCpw8ejScCeoXp03\n\n              PuJgTy9hTcYAAnLdbYU7FQihIe4VmuCPsJz8jbXWlFvFvP6ter7tqlURfYDWLFLs\n\n              +njshpJs8GczeoqHlXT0XUrCaD9IZP6ov2eaTs1rFvWXPUIlIK59vyZwv+RgdRxP\n\n              D6TFAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEARaY1acaQXhl6Brff27e85URx\n\n              azHHM8dX+5lE8GUAyuK7yHBEJZX2K2/0rU8yBNjAotFXTHLhTQxPeW2TFs/AJLyU\n\n              nYowvY3z7MeyR+Nkm3HTwdvA0agynZ1K61gImF6GQ/94aC9er89Va9Qsky+MdlSF\n\n              qmrfmBfgA/rp4Vw1nhuX4ei2ftghMmv1zB5KXXvyssb44EF+v8je0Aw6BEnR+9h9\n\n              dnC5KXITwh2gay2Qf1vPP5KaYCb5BEo2c3JHOYNC/HRGiHwgNPuqQ/pVxQCtG4E6\n\n              isusgOaZESJEmYRgCGd8tyf0+IRhq3XFlpBHnHjaup4xssikjBaHjEa0BZFNYA==\n\n              -----ENDCERTIFICATE REQUEST-----\n\n              '\n      properties:\n        ex1:\n          type: object\n    get_1.8_directoryserviceExamples:\n      example:\n        'Example 1: List the directory service configuration':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/directoryservice\n          response:\n            base_dn: DC=ad1,DC=example,DC=com\n            bind_password: '****'\n            bind_user: readonlyuser\n            check_peer: false\n            enabled: true\n            uri:\n            - ldaps://ad1.example.com\n        'Example 2: List the current configured CA certificate':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/directoryservice?certificate=true\n          response:\n            certificate: '-----BEGIN CERTIFICATE-----\n\n              MIIE6jCCBFOgAwIBAgIDEIGKMA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYTAlVT\n\n              MRAwDgYDVQQKEwdFcXVpZmF4MS0wKwYDVQQLEyRFcXVpZmF4IFNlY3VyZSBDZXJ0\n\n              aWZpY2F0ZSBBdXRob3JpdHkwHhcNMTAwNDAxMjMwMDE0WhcNMTUwNzAzMDQ1MDAw\n\n              WjCBjzEpMCcGA1UEBRMgMmc4YU81d0kxYktKMlpENTg4VXNMdkRlM2dUYmc4RFUx\n\n              CzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYDVQQHEwlTdW5u\n\n              eXZhbGUxFDASBgNVBAoTC1lhaG9vICBJbmMuMRYwFAYDVQQDEw13d3cueWFob28u\n\n              Y29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6ZM1jHCkL8rlEKse\n\n              1riTTxyC3WvYQ5m34TlFK7dK4QFI/HPttKGqQm3aVB1Fqi0aiTxe4YQMbd++jnKt\n\n              djxcpi7sJlFxjMZs4umr1eGo2KgTgSBAJyhxo23k+VpK1SprdPyM3yEfQVdV7JWC\n\n              4Y71CE2nE6+GbsIuhk/to+jJMO7jXx/430jvo8vhNPL6GvWe/D6ObbnxS72ynLSd\n\n              mLtaltykOvZEZiXbbFKgIaYYmCgh89FGVvBkUbGM/Wb5Voiz7ttQLLxKOYRj8Mdk\n\n              TZtzPkM9scIFG1naECPvCxw0NyMyxY3nFOdjUKJ79twanmfCclX2ZO/rk1CpiOuw\n\n              lrrr/QIDAQABo4ICDjCCAgowDgYDVR0PAQH/BAQDAgTwMB0GA1UdDgQWBBSmrfKs\n\n              68m+dDUSf+S7xJrQ/FXAlzA6BgNVHR8EMzAxMC+gLaArhilodHRwOi8vY3JsLmdl\n\n              b3RydXN0LmNvbS9jcmxzL3NlY3VyZWNhLmNybDCCAVsGA1UdEQSCAVIwggFOgg13\n\n              d3cueWFob28uY29tggl5YWhvby5jb22CDHVzLnlhaG9vLmNvbYIMa3IueWFob28u\n\n              Y29tggx1ay55YWhvby5jb22CDGllLnlhaG9vLmNvbYIMZnIueWFob28uY29tggxp\n\n              bi55YWhvby5jb22CDGNhLnlhaG9vLmNvbYIMYnIueWFob28uY29tggxkZS55YWhv\n\n              by5jb22CDGVzLnlhaG9vLmNvbYIMbXgueWFob28uY29tggxpdC55YWhvby5jb22C\n\n              DHNnLnlhaG9vLmNvbYIMaWQueWFob28uY29tggxwaC55YWhvby5jb22CDHFjLnlh\n\n              aG9vLmNvbYIMdHcueWFob28uY29tggxoay55YWhvby5jb22CDGNuLnlhaG9vLmNv\n\n              bYIMYXUueWFob28uY29tggxhci55YWhvby5jb22CDHZuLnlhaG9vLmNvbTAfBgNV\n\n              HSMEGDAWgBRI5mj5K9KylddH2CMgEE8zmJCf1DAdBgNVHSUEFjAUBggrBgEFBQcD\n\n              AQYIKwYBBQUHAwIwDQYJKoZIhvcNAQEFBQADgYEAp9WOMtcDMM5T0yfPecGv5QhH\n\n              RJZRzgeMPZitLksr1JxxicJrdgv82NWq1bw8aMuRj47ijrtaTEWXaCQCy00yXodD\n\n              zoRJVNoYIvY1arYZf5zv9VZjN5I0HqUc39mNMe9XdZtbkWE+K6yVh6OimKLbizna\n\n              inu9YTrN/4P/w6KzHho=\n\n              -----END CERTIFICATE-----'\n        'Example 3: List the directory service group configuration':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/directoryservice?groups=true\n          response:\n            array_admin_group: pureadmins\n            group_base: OU=PureStorage,OU=SAN,OU=IT,OU=US\n            readonly_group: purereadonly\n            storage_admin_group: pureusers\n      properties:\n        ex1:\n          type: object\n    get_1.8_dnsExamples:\n      example:\n        'Example 1: List DNS settings':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/dns\n          response:\n            domain: example.com\n            nameservers:\n            - 192.168.0.1\n            - 192.168.1.1\n      properties:\n        ex1:\n          type: object\n    get_1.8_driveExamples:\n      example:\n        'Example 1: List all flash and NVRAM devices':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/drive\n          response:\n          - capacity: 494927872\n            details: null\n            last_evac_completed: '1970-01-01T00:00:00Z'\n            last_failure: '1970-01-01T00:00:00Z'\n            name: SH0.BAY0\n            status: healthy\n            type: SSD\n          - capacity: 494927872\n            details: null\n            last_evac_completed: '1970-01-01T00:00:00Z'\n            last_failure: '1970-01-01T00:00:00Z'\n            name: SH0.BAY1\n            status: healthy\n            type: SSD\n          - capacity: 494927872\n            details: null\n            last_evac_completed: '1970-01-01T00:00:00Z'\n            last_failure: '1970-01-01T00:00:00Z'\n            name: SH0.BAY2\n            status: healthy\n            type: NVRAM\n      properties:\n        ex1:\n          type: object\n    get_1.8_drive_{drive}Examples:\n      example:\n        'Example 1: List a single flash module or NVRAM module.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/drive/SH0.BAY0\n          response:\n            capacity: 494927872\n            details: null\n            last_evac_completed: '1970-01-01T00:00:00Z'\n            last_failure: '1970-01-01T00:00:00Z'\n            name: SH0.BAY0\n            status: healthy\n            type: SSD\n      properties:\n        ex1:\n          type: object\n    get_1.8_hardwareExamples:\n      example:\n        'Example 1: List all hardware devices':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hardware\n          response:\n          - details: null\n            identify: 'off'\n            index: 0\n            name: CT0\n            slot: null\n            speed: null\n            status: ok\n            temperature: null\n            voltage: null\n          - details: null\n            identify: null\n            index: 0\n            name: CT0.ETH0\n            slot: 0\n            speed: 1000000000\n            status: ok\n            temperature: null\n            voltage: null\n          - details: null\n            temperature: 25\n            voltage: null\n      properties:\n        ex1:\n          type: object\n    get_1.8_hardware_{component}Examples:\n      example:\n        'Example 1: List a single hardware device':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hardware/SH0.BAY0\n          response:\n            details: null\n            identify: 'off'\n            index: 0\n            name: SH0.BAY0\n            slot: null\n            speed: null\n            status: ok\n            temperature: null\n            voltage: null\n      properties:\n        ex1:\n          type: object\n    get_1.8_hgroupExamples:\n      example:\n        'Example 1: List all host groups':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hgroup\n          response:\n          - hosts:\n            - h1\n            - h2\n            name: hg1\n          - hosts: []\n            name: hg2\n        'Example 2: List all host groups'' space usage':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hgroup?space=true\n          response:\n          - data_reduction: 1.0\n            name: hg1\n            size: 1073741824\n            snapshots: 0\n            thin_provisioning: 1.0\n            total: 0\n            total_reduction: 1.0\n            volumes: 0\n          - data_reduction: 1.0\n            name: hg2\n            size: 2147483648\n            snapshots: 0\n            thin_provisioning: 1.0\n            total: 0\n            total_reduction: 1.0\n            volumes: 0\n        'Example 3: Monitor I/O performance of all host groups':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hgroup?action=monitor\n          response:\n          - input_per_sec: 0\n            name: hg2\n            output_per_sec: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:05:30Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n          - input_per_sec: 0\n            name: hg1\n            output_per_sec: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:05:30Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n      properties:\n        ex1:\n          type: object\n    get_1.8_hgroup_{hgroup}Examples:\n      example:\n        'Example 1: List host group hg1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hgroup/hg1\n          response:\n            hosts:\n            - h1\n            - h2\n            name: hg1\n        'Example 2: List space usage for host group hg1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hgroup/hg1?space=true\n          response:\n            data_reduction: 1.0\n            name: hg1\n            size: 1073741824\n            snapshots: 0\n            thin_provisioning: 1.0\n            total: 0\n            total_reduction: 1.0\n            volumes: 0\n        'Example 3: Monitor I/O performance for host group hg1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hgroup/hg1?action=monitor\n          response:\n            input_per_sec: 0\n            name: hg1\n            output_per_sec: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:05:30Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n      properties:\n        ex1:\n          type: object\n    get_1.8_hgroup_{hgroup}_volumeExamples:\n      example:\n        'Example 1: List volumes connected to host group hg1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/hgroup/hg1/volume\n          response:\n          - lun: 254\n            name: hg1\n            vol: v1\n      properties:\n        ex1:\n          type: object\n    get_1.8_hostExamples:\n      example:\n        'Example 1: List all hosts':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host\n          response:\n          - hgroup: hg1\n            iqn: []\n            name: h1\n            wwn:\n            - '0000111122223333'\n          - hgroup: hg1\n            iqn: []\n            name: h2\n            wwn: []\n          - hgroup: null\n            iqn: []\n            name: h3\n            wwn: []\n        'Example 2: Display I/O performance for all hosts':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host?action=monitor\n          response:\n          - input_per_sec: 0\n            name: h1\n            output_per_sec: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:05:28Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n          - input_per_sec: 0\n            name: h2\n            output_per_sec: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:05:28Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n          - input_per_sec: 0\n            name: h3\n            output_per_sec: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n      properties:\n        ex1:\n          type: object\n    get_1.8_host_{host}Examples:\n      example:\n        'Example 1: List space usage for host h1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host/h1?space=true\n          response:\n            data_reduction: 1.0\n            name: h1\n            size: 1073741824\n            snapshots: 0\n            thin_provisioning: 1.0\n            total: 0\n            total_reduction: 1.0\n            volumes: 0\n        'Example 2: List CHAP attributes for host h1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host/h1?chap=true\n          response:\n            host_password: null\n            host_user: null\n            name: h1\n            target_password: null\n            target_user: null\n        'Example 3: List personality attribute for host h1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host/h1?personality=true\n          response:\n            name: h1\n            personality: null\n        'Example 4: Display I/O performance for host h1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host/h1?action=monitor\n          response:\n            input_per_sec: 0\n            name: h1\n            output_per_sec: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:05:28Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n      properties:\n        ex1:\n          type: object\n    get_1.8_host_{host}_volumeExamples:\n      example:\n        'Example 1: List private and shared connections for host h2':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host/h2/volume\n          response:\n          - hgroup: hg1\n            lun: 254\n            name: h2\n            vol: v1\n          - hgroup: null\n            lun: 7\n            name: h2\n            vol: v3\n        'Example 2: List private connections for host h2':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host/h2/volume?private=true\n          response:\n          - lun: 7\n            name: h2\n            vol: v3\n        'Example 3: List shared connections for host h2':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/host/h2/volume?shared=true\n          response:\n          - hgroup: hg1\n            lun: 254\n            name: h2\n            vol: v1\n      properties:\n        ex1:\n          type: object\n    get_1.8_messageExamples:\n      example:\n        'Example 1: List all alert messages':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/message\n          response: []\n        'Example 2: List all audit trail messages':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/message?audit=true\n          response:\n          - component_name: null\n            component_type: puredns\n            details: --domain example.com --nameservers 192.168.0.1,192.168.1.1\n            event: setattr\n            id: 2\n            opened: '2016-10-12T02:03:55Z'\n            user: root\n          - component_name: os76\n            component_type: pureadmin\n            details: --api-token\n            event: create\n            id: 3\n            opened: '2016-10-12T02:04:16Z'\n            user: os76\n          - component_name: pureuser\n            component_type: pureadmin\n            details: --api-token\n            event: create\n            id: 4\n            opened: '2016-10-12T02:05:32Z'\n            user: os76\n      properties:\n        ex1:\n          type: object\n    get_1.8_networkExamples:\n      example:\n        'Example 1: List network interfaces':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/network\n          response:\n          - address: 10.14.228.244\n            enabled: true\n            gateway: 10.14.224.1\n            hwaddr: 00:50:56:83:69:06\n            mtu: 1500\n            name: ct0.eth0\n            netmask: 255.255.240.0\n            services:\n            - management\n            - replication\n            slaves: []\n            speed: 10000000000\n            subnet: null\n          - address: null\n            enabled: true\n            gateway: 10.124.2.1\n            hwaddr: 00:50:56:83:2f:ec\n            mtu: 1500\n            name: ct0.eth1\n            netmask: 255.255.255.0\n            speed: 10000000000\n            subnet: null\n      properties:\n        ex1:\n          type: object\n    get_1.8_network_{network_component}Examples:\n      example:\n        'Example 1: List settings for a single network interface':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/network/ct0.eth0\n          response:\n            address: 10.14.228.244\n            enabled: true\n            gateway: 10.14.224.1\n            hwaddr: 00:50:56:83:69:06\n            mtu: 1500\n            name: ct0.eth0\n            netmask: 255.255.240.0\n            services:\n            - management\n            - replication\n            slaves: []\n            speed: 10000000000\n            subnet: null\n      properties:\n        ex1:\n          type: object\n    get_1.8_pgroupExamples:\n      example:\n        'Example 1: List all protection groups.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup\n          response:\n          - hgroups: null\n            hosts: null\n            name: pg1\n            source: pure01\n            targets: null\n            volumes:\n            - v1\n          - hgroups: null\n            hosts: null\n            name: pg2\n            source: pure01\n            targets: null\n            volumes:\n            - v1\n        'Example 2: List all protection groups created on this array.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup?source=true\n          response:\n          - hgroups: null\n            hosts: null\n            name: pg1\n            source: pure01\n            targets: null\n            volumes:\n            - v1\n          - hgroups: null\n            hosts: null\n            name: pg2\n            source: pure01\n            targets: null\n            volumes:\n            - v1\n        'Example 3: List all protection groups and their schedules.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup?schedule=true\n          response:\n          - name: pg1\n            replicate_at: null\n            replicate_blackout: null\n            replicate_enabled: false\n            replicate_frequency: 14400\n            snap_at: null\n            snap_enabled: false\n            snap_frequency: 3600\n          - name: pg2\n            replicate_at: null\n            replicate_blackout: null\n            replicate_enabled: false\n            replicate_frequency: 14400\n            snap_at: null\n            snap_enabled: false\n            snap_frequency: 3600\n        'Example 4: List all protection groups and their retention policies.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup?retention=true\n          response:\n          - all_for: 86400\n            days: 7\n            name: pg1\n            per_day: 4\n            target_all_for: 86400\n            target_days: 7\n            target_per_day: 4\n          - all_for: 86400\n            days: 7\n            name: pg2\n            per_day: 4\n            target_all_for: 86400\n            target_days: 7\n            target_per_day: 4\n        'Example 6: List all protection groups in the eradication pending state.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup?pending_only=true\n          response:\n          - hgroups: null\n            hosts: null\n            name: pg3\n            source: pure01\n            targets: null\n            time_remaining: 86392\n            volumes:\n            - v2\n            - v3\n        'Example 7: List all protection groups and their space usage.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup?space=true\n          response:\n          - name: pg1\n            snapshots: 0\n          - name: pg2\n            snapshots: 0\n      properties:\n        ex1:\n          type: object\n    get_1.8_pgroup_{pgroup}Examples:\n      example:\n        'Example 1: List protection group pg1.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup/pg1\n          response:\n            hgroups: null\n            hosts: null\n            name: pg1\n            source: pure01\n            targets: null\n            volumes:\n            - v1\n        'Example 2: List protection group pg3 even if it is in eradication pending state.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup/pg3?pending=true\n          response:\n            hgroups: null\n            hosts: null\n            name: pg3\n            source: pure01\n            targets: null\n            time_remaining: 86392\n            volumes:\n            - v2\n            - v3\n        'Example 3: List space usage for protection group pg1.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup/pg1?space=true\n          response:\n            name: pg1\n            snapshots: 0\n        'Example 4: List schedule for protection group pg1.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/pgroup/pg1?schedule=true\n          response:\n            name: pg1\n            replicate_at: null\n            replicate_blackout: null\n            replicate_enabled: false\n            replicate_frequency: 14400\n            snap_at: null\n            snap_enabled: false\n            snap_frequency: 3600\n      properties:\n        ex1:\n          type: object\n    get_1.8_portExamples:\n      example:\n        'Example 1: List all ports':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/port\n          response:\n          - failover: false\n            iqn: null\n            name: CT0.FC0\n            portal: null\n            wwn: '5001500150015080'\n          - failover: false\n            iqn: null\n            name: CT0.FC1\n            portal: null\n            wwn: '5001500150015081'\n          - failover: false\n            iqn: null\n            name: CT0.FC2\n            portal: null\n            wwn: '5001500150015090'\n          - failover: false\n            iqn: null\n            name: CT0.FC3\n            portal: null\n            wwn: '5001500150015091'\n        'Example 2: List all initiator ports':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/port?initiators=true\n          response:\n          - failover: null\n            iqn: null\n            portal: null\n            target: null\n            target_iqn: null\n            target_portal: null\n            target_wwn: null\n            wwn: '0000111122223333'\n          - failover: false\n            iqn: null\n            portal: null\n            target: CT0.FC1\n            target_iqn: null\n            target_portal: null\n            target_wwn: '5001500150015081'\n            wwn: '0001000100010001'\n          - failover: false\n            iqn: null\n            portal: null\n            target_wwn: '5001500150015090'\n            wwn: '0005000500050005'\n      properties:\n        ex1:\n          type: object\n    get_1.8_snmpExamples:\n      example:\n        'Example 1: List all SNMP managers':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/snmp\n          response:\n          - auth_passphrase: null\n            auth_protocol: null\n            community: null\n            host: localhost\n            name: localhost\n            privacy_passphrase: null\n            privacy_protocol: null\n            user: null\n            version: v2c\n        'Example 2: List SNMP v3 engine ID':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/snmp?engine_id=true\n          response:\n            engine_id: 80009e22056b89550e26f7fc9af5723a\n      properties:\n        ex1:\n          type: object\n    get_1.8_subnetExamples:\n      example:\n        'Example 1: List subnets':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/subnet\n          response:\n          - enabled: true\n            gateway: null\n            interfaces: []\n            mtu: 1500\n            name: subnet100\n            prefix: 192.168.0.0/24\n            services: []\n            vlan: 100\n      properties:\n        ex1:\n          type: object\n    get_1.8_subnet_{subnet}Examples:\n      example:\n        'Example 1: List settings for subnet subnet100':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/subnet/subnet100\n          response:\n            enabled: true\n            gateway: null\n            interfaces: []\n            mtu: 1500\n            name: subnet100\n            prefix: 192.168.0.0/24\n            services: []\n            vlan: 100\n      properties:\n        ex1:\n          type: object\n    get_1.8_volumeExamples:\n      example:\n        'Example 1: List all volumes':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume\n          response:\n          - created: '2016-10-12T02:05:21Z'\n            name: v1\n            serial: 6DDAB76B23204E7C00011010\n            size: 1073741824\n            source: null\n          - created: '2016-10-12T02:05:22Z'\n            name: v2\n            serial: 6DDAB76B23204E7C00011011\n            size: 2147483648\n            source: null\n          - created: '2016-10-12T02:05:22Z'\n            name: v3\n            serial: 6DDAB76B23204E7C00011012\n            size: 3221225472\n            source: null\n        'Example 3: List all volumes pending eradication':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume?pending_only=true\n          response:\n          - created: '2016-10-12T02:05:22Z'\n            name: v4\n            serial: 6DDAB76B23204E7C00011013\n            size: 4294967296\n            source: null\n            time_remaining: 86400\n        'Example 4: List all snapshots':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume?snap=true\n          response:\n          - created: '2016-10-12T02:05:22Z'\n            name: v3.4116\n            serial: 6DDAB76B23204E7C00011014\n            size: 3221225472\n            source: v3\n          - created: '2016-10-12T02:05:22Z'\n            name: v3.snap1\n            serial: 6DDAB76B23204E7C00011015\n            size: 3221225472\n            source: v3\n          - created: '2016-10-12T02:05:23Z'\n            name: pg1.monday.v1\n            serial: 6DDAB76B23204E7C00011016\n            size: 1073741824\n            source: v1\n          - created: '2016-10-12T02:05:24Z'\n            name: pg2.1.v1\n            size: 1073741824\n            source: v1\n        ? 'Example 6: List all volume snapshots that were created as part of protection\n          group snapshots for protection groups pg1 and pg2.'\n        : request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume?snap=true\u0026pgrouplist=pg1,pg2\n          response:\n          - created: '2016-10-12T02:05:23Z'\n            name: pg1.monday.v1\n            serial: 6DDAB76B23204E7C00011016\n            size: 1073741824\n            source: v1\n          - created: '2016-10-12T02:05:24Z'\n            name: pg2.1.v1\n            serial: 6DDAB76B23204E7C00011017\n            size: 1073741824\n            source: v1\n          - created: '2016-10-12T02:05:24Z'\n            name: pg1.2.v1\n            serial: 6DDAB76B23204E7C00011018\n            size: 1073741824\n            source: v1\n      properties:\n        ex1:\n          type: object\n    get_1.8_volume_{volume}Examples:\n      example:\n        'Example 1: List details for volume v1':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume/v1\n          response:\n            created: '2016-10-12T02:05:21Z'\n            name: v1\n            serial: 6DDAB76B23204E7C00011010\n            size: 1073741824\n            source: null\n        'Example 2: List snapshots of volume v3':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume/v3?snap=true\n          response:\n          - created: '2016-10-12T02:05:22Z'\n            name: v3.4116\n            serial: 6DDAB76B23204E7C00011014\n            size: 3221225472\n            source: v3\n          - created: '2016-10-12T02:05:22Z'\n            name: v3.snap1\n            serial: 6DDAB76B23204E7C00011015\n            size: 3221225472\n            source: v3\n        'Example 3: List real-time performance data for volume v3.':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume/v3?action=monitor\n          response:\n          - input_per_sec: 0\n            name: v3\n            output_per_sec: 0\n            reads_per_sec: 0\n            time: '2016-10-12T02:05:27Z'\n            usec_per_read_op: 0\n            usec_per_write_op: 0\n            writes_per_sec: 0\n        ? 'Example 4: List volume snapshots of v1 that were created as part of protection\n          group snapshots for protection groups pg1 and pg2.'\n        : request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume/v1?snap=true\u0026pgrouplist=pg1,pg2\n          response:\n          - created: '2016-10-12T02:05:23Z'\n            name: pg1.monday.v1\n            serial: 6DDAB76B23204E7C00011016\n            size: 1073741824\n            source: v1\n          - created: '2016-10-12T02:05:24Z'\n            name: pg2.1.v1\n            serial: 6DDAB76B23204E7C00011017\n            size: 1073741824\n            source: v1\n          - created: '2016-10-12T02:05:24Z'\n            name: pg1.2.v1\n            serial: 6DDAB76B23204E7C00011018\n            size: 1073741824\n            source: v1\n      properties:\n        ex1:\n          type: object\n    get_1.8_volume_{volume}_diffExamples:\n      example:\n        ? 'Example 1: List all block differences for volume snapshot v3.snap1 with\n          a block size of 512 bytes and a length of 2 gigabytes.'\n        : request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume/v3.snap1/diff?block_size=512\u0026length=2G\n          response: []\n      properties:\n        ex1:\n          type: object\n    get_1.8_volume_{volume}_hgroupExamples:\n      example:\n        'Example 1: List shared connections for volume v2':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume/v2/hgroup\n          response:\n          - hgroup: hg2\n            host: null\n            lun: 15\n            name: v2\n            size: 2147483648\n      properties:\n        ex1:\n          type: object\n    get_1.8_volume_{volume}_hostExamples:\n      example:\n        'Example 1: List private connections for volume v3':\n          request:\n            body: ''\n            method: GET\n            url: https://pure01.example.com/api/1.8/volume/v3/host\n          response:\n          - host: h2\n            lun: 7\n            name: v3\n            size: 3221225472\n      properties:\n        ex1:\n          type: object\n    post_1.8_alert_{address}Examples:\n      example:\n        'Example 1: Add a new alert recipient':\n          request:\n            body: ''\n            method: POST\n            url: https://pure01.example.com/api/1.8/alert/admin@example.com\n          response:\n            enabled: true\n            name: admin@example.com\n      properties:\n        ex1:\n          type: object\n    post_1.8_array_connectionExamples:\n      example:\n        'Example 1: Create a connection between array pure01 and array pure02 for replication purposes.':\n          request:\n            body:\n              connection_key: $CONNECTION_KEY\n              management_address: pure02.example.com\n              type:\n              - replication\n            method: POST\n            url: https://pure01.example.com/api/1.8/array/connection\n          response:\n            array_name: pure02\n            id: bd7fed72-4f8a-4800-be5c-554c8fae062f\n            management_address: pure02\n            replication_address: pure02\n            type:\n            - replication\n            version: 4.8.2\n      properties:\n        ex1:\n          type: object\n    post_1.8_auth_apitokenExamples:\n      example:\n        'Example 1: Create an API token':\n          request:\n            body:\n              password: pureuser\n              username: pureuser\n            method: POST\n            url: https://pure01.example.com/api/1.8/auth/apitoken\n          response:\n            api_token: 80fb8695-2b28-1750-8a42-a5ae6a649f03\n      properties:\n        ex1:\n          type: object\n    post_1.8_auth_sessionExamples:\n      example:\n        'Example 1: Create a REST session':\n          request:\n            body:\n              api_token: $APITOKEN\n            method: POST\n            url: https://pure01.example.com/api/1.8/auth/session\n          response:\n            username: os76\n      properties:\n        ex1:\n          type: object\n    post_1.8_hgroup_{hgroup}Examples:\n      example:\n        'Example 1: Create host group hg3':\n          request:\n            body: ''\n            method: POST\n            url: https://pure01.example.com/api/1.8/hgroup/hg3\n          response:\n            hosts: []\n            name: hg3\n      properties:\n        ex1:\n          type: object\n    post_1.8_hgroup_{hgroup}_volume_{volume}Examples:\n      example:\n        'Example 1: Connect volume v3 to host group hg3':\n          request:\n            body: ''\n            method: POST\n            url: https://pure01.example.com/api/1.8/hgroup/hg3/volume/v3\n          response:\n            lun: 254\n            name: hg3\n            vol: v3\n      properties:\n        ex1:\n          type: object\n    post_1.8_host_{host}Examples:\n      example:\n        'Example 1: Create host h4 with one wwn':\n          request:\n            body:\n              wwnlist:\n              - 0000999900009999\n            method: POST\n            url: https://pure01.example.com/api/1.8/host/h4\n          response:\n            iqn: []\n            name: h4\n            wwn:\n            - 0000999900009999\n      properties:\n        ex1:\n          type: object\n    post_1.8_host_{host}_volume_{volume}Examples:\n      example:\n        'Example 1: Create a private connection between host h4 and volume v5_renamed':\n          request:\n            body: ''\n            method: POST\n            url: https://pure01.example.com/api/1.8/host/h4/volume/v5_renamed\n          response:\n            lun: 1\n            name: h4\n            vol: v5_renamed\n      properties:\n        ex1:\n          type: object\n    post_1.8_network_vif_{vlan_interface}Examples:\n      example:\n        'Example 1: Create a VLAN interface and associate it with subnet subnet100.':\n          request:\n            body:\n              address: 192.168.0.100\n              subnet: subnet100\n            method: POST\n            url: https://pure01.example.com/api/1.8/network/vif/ct0.eth1.100\n          response:\n            address: 192.168.0.100\n            enabled: true\n            gateway: null\n            hwaddr: 00:50:56:83:2f:ec\n            mtu: 1500\n            name: ct0.eth1.100\n            netmask: 255.255.255.0\n            services:\n            - iscsi\n            - management\n            slaves: []\n            speed: 10000000000\n            subnet: subnet100\n      properties:\n        ex1:\n          type: object\n    post_1.8_pgroupExamples:\n      example:\n        'Example 1: Create a snapshot of protection group pg1.':\n          request:\n            body:\n              snap: true\n              source:\n              - pg1\n            method: POST\n            url: https://pure01.example.com/api/1.8/pgroup\n          response:\n          - created: '2016-10-12T02:05:31Z'\n            name: pg1.3\n            source: pg1\n        'Example 2: Create a snapshot of protection group pg1with a custom suffix and apply pg1''s retention policy to it.':\n          request:\n            body:\n              apply_retention: true\n              snap: true\n              source:\n              - pg1\n              suffix: crackle\n            method: POST\n            url: https://pure01.example.com/api/1.8/pgroup\n          response:\n          - created: '2016-10-12T02:05:31Z'\n            name: pg1.crackle\n            source: pg1\n      properties:\n        ex1:\n          type: object\n    post_1.8_pgroup_{pgroup}Examples:\n      example:\n        'Example 1: Create protection group pg4.':\n          request:\n            body: ''\n            method: POST\n            url: https://pure01.example.com/api/1.8/pgroup/pg4\n          response:\n            hgroups: null\n            hosts: null\n            name: pg4\n            source: pure01\n            targets: null\n            volumes: null\n        'Example 2: Create protection group pg5 with host h1.':\n          request:\n            body:\n              hostlist:\n              - h1\n            method: POST\n            url: https://pure01.example.com/api/1.8/pgroup/pg5\n          response:\n            hgroups: null\n            hosts:\n            - h1\n            name: pg5\n            source: pure01\n            targets: null\n            volumes: null\n      properties:\n        ex1:\n          type: object\n    post_1.8_subnet_{subnet}Examples:\n      example:\n        'Example 1: Create subnet mgmt with the specified gateway address and prefix':\n          request:\n            body:\n              gateway: 192.168.100.1\n              prefix: 192.168.100.0/24\n            method: POST\n            url: https://pure01.example.com/api/1.8/subnet/mgmt\n          response:\n            enabled: true\n            gateway: 192.168.100.1\n            interfaces: null\n            mtu: 1500\n            name: mgmt\n            prefix: 192.168.100.0/24\n            services: null\n            vlan: null\n      properties:\n        ex1:\n          type: object\n    post_1.8_volumeExamples:\n      example:\n        'Example 1: Create snapshots of v5 and v6':\n          request:\n            body:\n              snap: true\n              source:\n              - v5\n              - v6\n            method: POST\n            url: https://pure01.example.com/api/1.8/volume\n          response:\n          - created: '2016-10-12T02:05:28Z'\n            name: v6.4128\n            serial: 6DDAB76B23204E7C00011020\n            size: 1073741824\n            source: v6\n          - created: '2016-10-12T02:05:28Z'\n            name: v5.4129\n            serial: 6DDAB76B23204E7C00011021\n            size: 5368709120\n            source: v5\n        'Example 2: Create snapshots of v5 and v6 with a custom suffix':\n          request:\n            body:\n              snap: true\n              source:\n              - v5\n              - v6\n              suffix: crackle\n            method: POST\n            url: https://pure01.example.com/api/1.8/volume\n          response:\n          - created: '2016-10-12T02:05:28Z'\n            name: v6.crackle\n            serial: 6DDAB76B23204E7C00011022\n            size: 1073741824\n            source: v6\n          - created: '2016-10-12T02:05:28Z'\n            name: v5.crackle\n            serial: 6DDAB76B23204E7C00011023\n            size: 5368709120\n            source: v5\n      properties:\n        ex1:\n          type: object\n    post_1.8_volume_{volume}Examples:\n      example:\n        'Example 1: Create a new volume':\n          request:\n            body:\n              size: 5G\n            method: POST\n            url: https://pure01.example.com/api/1.8/volume/v5\n          response:\n            created: '2016-10-12T02:05:27Z'\n            name: v5\n            serial: 6DDAB76B23204E7C0001101D\n            size: 5368709120\n            source: null\n        'Example 2: Create v6 by copying v1':\n          request:\n            body:\n              source: v1\n            method: POST\n            url: https://pure01.example.com/api/1.8/volume/v6\n          response:\n            created: '2016-10-12T02:05:27Z'\n            name: v6\n            serial: 6DDAB76B23204E7C0001101E\n            size: 1073741824\n            source: v1\n        'Example 3: Overwrite v6 by copying v1':\n          request:\n            body:\n              overwrite: true\n              source: v1\n            method: POST\n            url: https://pure01.example.com/api/1.8/volume/v6\n          response:\n            created: '2016-10-12T02:05:28Z'\n            name: v6\n            serial: 6DDAB76B23204E7C0001101E\n            size: 1073741824\n            source: v1\n      properties:\n        ex1:\n          type: object\n    put_1.8_alert_{address}Examples:\n      example:\n        'Example 1: Disable a single alert recipient':\n          request:\n            body:\n              enabled: false\n            method: PUT\n            url: https://pure01.example.com/api/1.8/alert/admin@example.com\n          response:\n            enabled: false\n            name: admin@example.com\n      properties:\n        ex1:\n          type: object\n    put_1.8_array_console_lockExamples:\n      example:\n        'Example 1: Enable console lock':\n          request:\n            body:\n              enabled: true\n            method: PUT\n            url: https://pure01.example.com/api/1.8/array/console_lock\n          response:\n            console_lock: enabled\n        'Example 2: Disable console lock':\n          request:\n            body:\n              enabled: false\n            method: PUT\n            url: https://pure01.example.com/api/1.8/array/console_lock\n          response:\n            console_lock: disabled\n      properties:\n        ex1:\n          type: object\n    put_1.8_array_phonehomeExamples:\n      example:\n        'Example 1: Enable phonehome':\n          request:\n            body:\n              enabled: true\n            method: PUT\n            url: https://pure01.example.com/api/1.8/array/phonehome\n          response:\n            phonehome: enabled\n        'Example 2: Disable phonehome':\n          request:\n            body:\n              enabled: false\n            method: PUT\n            url: https://pure01.example.com/api/1.8/array/phonehome\n          response:\n            phonehome: disabled\n      properties:\n        ex1:\n          type: object\n    put_1.8_certExamples:\n      example:\n        'Example 1: Generate a self-signed certificate with the current certificate attributes':\n          request:\n            body:\n              self_signed: true\n            method: PUT\n            url: https://pure01.example.com/api/1.8/cert\n          response:\n            country: US\n            email: null\n            issued_by: db.purestorage.com\n            issued_to: db.purestorage.com\n            key_size: 2048\n            locality: Mountain View\n            organization: Pure Storage Inc.\n            organizational_unit: Pure Storage, Inc.\n            state: CA\n            status: self-signed\n            valid_from: '2016-10-12T02:05:33Z'\n            valid_to: '2026-10-10T02:05:33Z'\n        ? 'Example 2: Generate a self-signed certificate with the current certificate\n          attributes, but change the state to FL and the common name to'\n        : request:\n            body:\n              common_name: db.example.com\n              self_signed: true\n              state: FL\n            method: PUT\n            url: https://pure01.example.com/api/1.8/cert\n          response:\n            country: US\n            email: null\n            issued_by: db.example.com\n            issued_to: db.example.com\n            key_size: 2048\n            locality: Mountain View\n            organization: Pure Storage Inc.\n            organizational_unit: Pure Storage, Inc.\n            state: FL\n            status: self-signed\n            valid_from: '2016-10-12T02:05:33Z'\n            valid_to: '2026-10-10T02:05:33Z'\n      properties:\n        ex1:\n          type: object\n    put_1.8_directoryserviceExamples:\n      example:\n        'Example 1: Disable the directory service':\n          request:\n            body:\n              enabled: false\n            method: PUT\n            url: https://pure01.example.com/api/1.8/directoryservice\n          response:\n            base_dn: DC=ad1,DC=example,DC=com\n            bind_password: '****'\n            bind_user: readonlyuser\n            check_peer: false\n            enabled: false\n            uri:\n            - ldaps://ad1.example.com\n        'Example 2: Enable the directory service':\n          request:\n            body:\n              enabled: true\n            method: PUT\n            url: https://pure01.example.com/api/1.8/directoryservice\n          response:\n            base_dn: DC=ad1,DC=example,DC=com\n            bind_password: '****'\n            bind_user: readonlyuser\n            check_peer: false\n            enabled: true\n            uri:\n            - ldaps://ad1.example.com\n      properties:\n        ex1:\n          type: object\n    put_1.8_dnsExamples:\n      example:\n        'Example 1: Modify DNS settings':\n          request:\n            body:\n              domain: example.com\n              nameservers:\n              - 192.168.1.1\n              - 192.168.0.1\n            method: PUT\n            url: https://pure01.example.com/api/1.8/dns\n          response:\n            domain: example.com\n            nameservers:\n            - 192.168.0.1\n            - 192.168.1.1\n      properties:\n        ex1:\n          type: object\n    put_1.8_hardware_{component}Examples:\n      example:\n        'Example 1: Turn on ID light for SHO.BAY0':\n          request:\n            body:\n              identify: 'on'\n            method: PUT\n            url: https://pure01.example.com/api/1.8/hardware/SH0.BAY0\n          response:\n            identify: 'on'\n            index: 0\n            name: SH0.BAY0\n            slot: null\n        'Example 2: Turn off ID light':\n          request:\n            body:\n              identify: 'off'\n            method: PUT\n            url: https://pure01.example.com/api/1.8/hardware/SH0.BAY0\n          response:\n            identify: 'off'\n            index: 0\n            name: SH0.BAY0\n            slot: null\n      properties:\n        ex1:\n          type: object\n    put_1.8_hgroup_{hgroup}Examples:\n      example:\n        'Example 1: Rename host group':\n          request:\n            body:\n              name: hg4\n            method: PUT\n            url: https://pure01.example.com/api/1.8/hgroup/hg3\n          response:\n            hosts: []\n            name: hg4\n        'Example 2: Set host members for hgroup hg4':\n          request:\n            body:\n              hostlist:\n              - h3\n            method: PUT\n            url: https://pure01.example.com/api/1.8/hgroup/hg4\n          response:\n            hosts:\n            - h3\n            name: hg4\n        'Example 3: Remove host members':\n          request:\n            body:\n              remhostlist:\n              - h3\n            method: PUT\n            url: https://pure01.example.com/api/1.8/hgroup/hg4\n          response:\n            hosts: []\n            name: hg4\n      properties:\n        ex1:\n          type: object\n    put_1.8_host_{host}Examples:\n      example:\n        'Example 1: Replace list of wwns':\n          request:\n            body:\n              wwnlist:\n              - '1111222233334444'\n              - '2222333344445555'\n            method: PUT\n            url: https://pure01.example.com/api/1.8/host/h4\n          response:\n            hgroup: null\n            iqn: []\n            name: h4\n            wwn:\n            - '1111222233334444'\n            - '2222333344445555'\n        'Example 2: Add two more wwns to list':\n          request:\n            body:\n              addwwnlist:\n              - '4444333322221111'\n              - '5555444433332222'\n            method: PUT\n            url: https://pure01.example.com/api/1.8/host/h4\n          response:\n            hgroup: null\n            iqn: []\n            name: h4\n            wwn:\n            - '1111222233334444'\n            - '2222333344445555'\n            - '4444333322221111'\n            - '5555444433332222'\n        'Example 3: Remove one wwn from list':\n          request:\n            body:\n              remwwnlist:\n              - '2222333344445555'\n            method: PUT\n            url: https://pure01.example.com/api/1.8/host/h4\n          response:\n            hgroup: null\n            iqn: []\n            name: h4\n            wwn:\n            - '1111222233334444'\n            - '4444333322221111'\n            - '5555444433332222'\n        'Example 4: Rename a host':\n          request:\n            body:\n              name: h5\n            method: PUT\n            url: https://pure01.example.com/api/1.8/host/h4\n          response:\n            name: h5\n      properties:\n        ex1:\n          type: object\n    put_1.8_network_{network_component}Examples:\n      example:\n        'Example 1: Disable network interface ct0.eth1':\n          request:\n            body:\n              enabled: false\n            method: PUT\n            url: https://pure01.example.com/api/1.8/network/ct0.eth1\n          response:\n            address: null\n            enabled: false\n            gateway: 10.124.2.1\n            hwaddr: 00:50:56:83:2f:ec\n            mtu: 1500\n            name: ct0.eth1\n            netmask: 255.255.255.0\n            services:\n            - iscsi\n            - management\n            slaves: []\n            speed: 10000000000\n            subnet: null\n        'Example 2: Enable network interface ct0.eth1':\n          request:\n            body:\n              enabled: true\n            method: PUT\n            url: https://pure01.example.com/api/1.8/network/ct0.eth1\n          response:\n            address: null\n            enabled: true\n            gateway: 10.124.2.1\n            hwaddr: 00:50:56:83:2f:ec\n            mtu: 1500\n            name: ct0.eth1\n            netmask: 255.255.255.0\n            services:\n            - iscsi\n            - management\n            slaves: []\n            speed: 10000000000\n            subnet: null\n      properties:\n        ex1:\n          type: object\n    put_1.8_pgroup_{pgroup}Examples:\n      example:\n        'Example 1: Rename protection group':\n          request:\n            body:\n              name: pg6\n            method: PUT\n            url: https://pure01.example.com/api/1.8/pgroup/pg2\n          response:\n            name: pg6\n        'Example 2: Set host members':\n          request:\n            body:\n              hostlist:\n              - h3\n            method: PUT\n            url: https://pure01.example.com/api/1.8/pgroup/pg4\n          response:\n            hgroups: null\n            hosts:\n            - h3\n            name: pg4\n            source: pure01\n            targets: null\n            volumes: null\n        'Example 3: Enables the replication schedule for pg4':\n          request:\n            body:\n              replicate_enabled: true\n            method: PUT\n            url: https://pure01.example.com/api/1.8/pgroup/pg4\n          response:\n            name: pg4\n            replicate_at: null\n            replicate_blackout: null\n            replicate_enabled: true\n            replicate_frequency: 14400\n            snap_at: null\n            snap_enabled: false\n            snap_frequency: 3600\n        'Example 4: Sets a replication blackout window from 2am to 4am (in seconds) for pg4':\n          request:\n            body:\n              replicate_blackout:\n                end: 14400\n                start: 7200\n            method: PUT\n            url: https://pure01.example.com/api/1.8/pgroup/pg4\n          response:\n            name: pg4\n            replicate_at: null\n            replicate_blackout:\n            - end: 14400\n              start: 7200\n            replicate_enabled: true\n            replicate_frequency: 14400\n            snap_at: null\n            snap_enabled: false\n            snap_frequency: 3600\n        ? 'Example 5: Sets a retention policy to retain all snapshots for 3 days (in\n          minutes), and keep 12 snapshots per day after the all_for period ends'\n        : request:\n            body:\n              all_for: 4320\n              per_day: 12\n            method: PUT\n            url: https://pure01.example.com/api/1.8/pgroup/pg4\n          response:\n            all_for: 4320\n            days: 7\n            name: pg4\n            per_day: 12\n            target_all_for: 86400\n            target_days: 7\n            target_per_day: 4\n      properties:\n        ex1:\n          type: object\n    put_1.8_subnet_{subnet}Examples:\n      example:\n        'Example 1: Change VLAN ID for subnet mgmt':\n          request:\n            body:\n              vlan: 100\n            method: PUT\n            url: https://pure01.example.com/api/1.8/subnet/mgmt\n          response:\n            enabled: true\n            gateway: 192.168.100.1\n            interfaces: []\n            mtu: 1500\n            name: mgmt\n            prefix: 192.168.100.0/24\n            services: []\n            vlan: 100\n        'Example 2: Clear gateway for subnet mgmt':\n          request:\n            body:\n              gateway: null\n            method: PUT\n            url: https://pure01.example.com/api/1.8/subnet/mgmt\n          response:\n            enabled: true\n            gateway: null\n            interfaces: []\n            mtu: 1500\n            name: mgmt\n            prefix: 192.168.100.0/24\n            services: []\n            vlan: 100\n        'Example 3: Disable subnet mgmt':\n          request:\n            body:\n              enabled: false\n            method: PUT\n            url: https://pure01.example.com/api/1.8/subnet/mgmt\n          response:\n            enabled: false\n            gateway: null\n            interfaces: []\n            mtu: 1500\n            name: mgmt\n            prefix: 192.168.100.0/24\n            services: []\n            vlan: 100\n        'Example 4: Rename subnet mgmt':\n          request:\n            body:\n              name: managementSubnet\n            method: PUT\n            url: https://pure01.example.com/api/1.8/subnet/mgmt\n          response:\n            enabled: false\n            gateway: null\n            interfaces: []\n            mtu: 1500\n            name: managementSubnet\n            prefix: 192.168.100.0/24\n            services: []\n            vlan: 100\n      properties:\n        ex1:\n          type: object\n    put_1.8_volume_{volume}Examples:\n      example:\n        'Example 1: Set the provisioned size for volume v5 to 10G':\n          request:\n            body:\n              size: 10G\n            method: PUT\n            url: https://pure01.example.com/api/1.8/volume/v5\n          response:\n            name: v5\n            size: 10737418240\n        'Example 2: Truncate volume v5 to 1073741824 bytes':\n          request:\n            body:\n              size: 1073741824\n              truncate: true\n            method: PUT\n            url: https://pure01.example.com/api/1.8/volume/v5\n          response:\n            name: v5\n            size: 1073741824\n        'Example 3: Rename volume v5 to v5_renamed':\n          request:\n            body:\n              name: v5_renamed\n            method: PUT\n            url: https://pure01.example.com/api/1.8/volume/v5\n          response:\n            name: v5_renamed\n        'Example 4: Rename suffix of volume snapshot v5.snap from snap to snap2':\n          request:\n            body:\n              name: v3.snap2\n            method: PUT\n            url: https://pure01.example.com/api/1.8/volume/v3.snap1\n          response:\n            name: v3.snap2\n      properties:\n        ex1:\n          type: object\ninfo:\n  description: \"## Pure Swagger UI for FlashArray\\nA light weight tool to explore\\\n    \\ the API for FlashArray, community supported. \\nFor  help with this tool, use\\\n    \\ [Pure1 Community](https://community.purestorage.com/) or the [code-purestorage\\\n    \\ Slack](https://community.purestorage.com/discussion/9561/join-the-new-pure-code-slack-team-for-api-and-extensibility-discussions)\\n\\\n    \\n## Authenticate (uses API Key and returns a cookie)\\nTo get an API Key, you\\\n    \\ can do POST /auth/apitoken with your user/pass, then use your API key with POST\\\n    \\ /auth/session.  The array returns \\na session cookie which is handled by the\\\n    \\ browser automatically.  Session cookies expire by default after 30 minutes.\\n\\\n    \\n## Error Codes\\nUse HTTP Response codes to determine command results.  Error\\\n    \\ message json formats are different depending on the endpoint.\\n\\n## Best practices\\n\\\n    Best practices for building applications [Best Practices](https://support.purestorage.com/FlashArray/PurityFA/Purity_FA_REST_API/Reference/Pure_Storage_REST_API_Best_Practices).\\\n    \\ \\n\\n## Pagenation\\nPagenation/filtering information is not shown here.  However,\\\n    \\ it is available for some endpoints. Please see [the PDF docs](https://support.purestorage.com/FlashArray/PurityFA/Purity_FA_REST_API/Reference/REST_API_PDF_Reference_Guides).\"\n  title: Pure FlashArray API\n  version: '1.8'\nopenapi: 3.0.1\npaths:\n  /1.8/admin:\n    get:\n      description: Lists public key and API token information for all users.Set at\n        least one parameter to true.\n      operationId: get/1.8/admin\n      parameters:\n      - description: If set to true, displays a list of users that have REST API access\n          and the dates in which the API tokens werecreated.Optional.\n        in: query\n        name: api_token\n        schema:\n          type: boolean\n      - description: If api_token is set to true, set the expose parameter to true\n          to unmask the current user's API token. Doesnot unmmask other users' tokens.Optional.\n        in: query\n        name: expose\n        schema:\n          type: boolean\n      - description: If set to true, displays a list of users that have public key\n          access.Optional.\n        in: query\n        name: publickey\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_adminExamples'\n          description: ''\n      tags:\n      - Users\n    put:\n      description: Clears all user permission cache entries.User permission cache\n        entries are also automatically updated when the user starts a new session.\n      operationId: put/1.8/admin\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: When set to refresh, refreshes all user permission\n                    cache entries.\n                  type: string\n                clear:\n                  description: When set to true, clears the entire user permission\n                    cache.Required. Used with the action parameter.\n                  type: boolean\n              required:\n              - action\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Users\n  /1.8/admin/{user}:\n    get:\n      description: Lists public key information for the specified user.\n      operationId: get/1.8/admin/{user}\n      parameters:\n      - in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      - description: If set to true, displays the public key information for the specified\n          user.\n        in: query\n        name: publickey\n        required: true\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Users\n    put:\n      description: Sets the password or public key or refreshes the user permission\n        cache entries for the specified user.Either the publickey, password, or action\n        parameter must be specified.\n      operationId: put/1.8/admin/{user}\n      parameters:\n      - in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: When set to refresh, refreshes the user permission\n                    cache entries for the specified user.Cache entries are also automatically\n                    updated when the user starts a new session.Optional.\n                  type: string\n                clear:\n                  description: If the action parameter is set to \"refresh\", set the\n                    clear parameter to true to clear the user permissioncache for\n                    the specified user.\n                  type: boolean\n                old_password:\n                  description: ''\n                  type: string\n                password:\n                  description: Optional. Used with the action parameter.Used with\n                    the password parameter to change the password for the single,\n                    local administrative accountpureuser. Set the parameter to the\n                    old password.Required if the password parameter is set.Used with\n                    the old_password parameter to change the password for the single,\n                    local administrative accountpureuser. The value must be between\n                    1 and 32 characters in length and be entered from a standard English(U.S.)\n                    keyboard.Optional.\n                  type: string\n                publickey:\n                  description: Changes the public key for SSH access for the specified\n                    user. Only system administrators can change publickeys on behalf\n                    of other users. If no users are provided as arguments, a request\n                    to change the public key will befor the administrator issuing\n                    the request and a request to display set public keys will show\n                    all users with a publickey configured.Optional.\n                  type: string\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Users\n  /1.8/admin/{user}/apitoken:\n    delete:\n      description: Deletes API token for the specified user.\n      operationId: delete/1.8/admin/{user}/apitoken\n      parameters:\n      - in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Users\n    get:\n      description: Lists the API token for the specified user.\n      operationId: get/1.8/admin/{user}/apitoken\n      parameters:\n      - in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Users\n    post:\n      description: Creates an API token for the specified user.\n      operationId: post/1.8/admin/{user}/apitoken\n      parameters:\n      - in: path\n        name: user\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties: {}\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Users\n  /1.8/alert:\n    get:\n      description: Lists email recipients that are designated to receive Purity alert\n        messages.\n      operationId: get/1.8/alert\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_alertExamples'\n          description: ''\n      tags:\n      - Alerts\n    put:\n      description: Tests the ability of the array to send alert messages to all of\n        the designated email addresses.\n      operationId: put/1.8/alert\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: Set the parameter to \"test\" to test the ability of\n                    the array to send alert messages to all of the designatedemail\n                    addresses. Verification of successful test message transmission\n                    is done at the destination.\n                  type: string\n              required:\n              - action\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Alerts\n  /1.8/alert/{address}:\n    delete:\n      description: Deletes an email address from the list of addresses designated\n        to receive Purity alert messages. You cannot delete the built-in flasharray-alerts@purestorage.com\n        address.\n      operationId: delete/1.8/alert/{address}\n      parameters:\n      - in: path\n        name: address\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_alert_{address}Examples'\n          description: ''\n      tags:\n      - Alerts\n    get:\n      description: Lists information about the specified email recipient.\n      operationId: get/1.8/alert/{address}\n      parameters:\n      - in: path\n        name: address\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_alert_{address}Examples'\n          description: ''\n      tags:\n      - Alerts\n    post:\n      description: Designates any valid email address to receive Purity alert messages.Up\n        to 20 addresses can be designated in an array (19 in addition to the built-in\n        flasharray-alerts@purestorage.com address.)\n      operationId: post/1.8/alert/{address}\n      parameters:\n      - in: path\n        name: address\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties: {}\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_alert_{address}Examples'\n          description: ''\n      tags:\n      - Alerts\n    put:\n      description: Tests, enables, and disables the transmission of alert messages\n        to the specified email address.At least one parameter must be specified.\n      operationId: put/1.8/alert/{address}\n      parameters:\n      - in: path\n        name: address\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: Set the parameter to \"test\" to test the ability of\n                    the array to send alert messages to the specified emailaddress,\n                    designated or not. Verification of successful test message transmission\n                    is done at the destination.Optional.\n                  type: string\n                enabled:\n                  description: Enables (true) or disables (false) the transmission\n                    of alert messages to the specified email address.Optional.\n                  type: boolean\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_alert_{address}Examples'\n          description: ''\n      tags:\n      - Alerts\n  /1.8/array:\n    get:\n      description: Lists the attributes for the array, including the array name, Purity\n        version and Purity revision number. Can also display historical performance\n        or capacitydata.\n      operationId: get/1.8/array\n      parameters:\n      - description: If set to monitor, displays the following real-time or historical\n          performance data:usec_per_read_op - average arrival-to-completion time,\n          measured in microseconds, for a host readoperation.usec_per_write_op - average\n          arrival-to-completion time, measured in microseconds, for a host writeoperation.queue_depth\n          - average number of queued I/O requests.reads_per_sec - number of read requests\n          processed per second.writes_per_sec - number of write requests processed\n          per second.input_per_sec - number of bytes written per second.output_per_sec\n          - number of bytes read per second.Optional.\n        in: query\n        name: action\n        schema:\n          type: string\n      - description: Displays the \"message of the day\" (MOTD) text that is sent to\n          all Purity users. The banner message isdisplayed in the login pane of the\n          Purity GUI and via SSH after users log in.Optional.\n        in: query\n        name: banner\n        schema:\n          type: boolean\n      - description: Displays a connection key that can be used to connect to this\n          array.Optional.\n        in: query\n        name: connection_key\n        schema:\n          type: boolean\n      - description: Displays the mode and status of each controller on the array.\n          For arrays to which a second controller has neverbeen connected, only a\n          single controller mode is displayed. Once an additional controller has been\n          connected,its information is always shown.Optional.\n        in: query\n        name: controllers\n        schema:\n          type: boolean\n      - description: 'If the action parameter is set to monitor, set this parameter\n          to display historical performance data at thespecified resolution.If the\n          space parameter is set to true, set this parameter to display historical\n          space data at the specifiedresolution.Valid historical values are: 1h, 3h,\n          24h, 7d, 30d, 90d, and 1y.Optional.'\n        in: query\n        name: historical\n        schema:\n          type: string\n      - description: Displays the idle time limit, in minutes, of the Purity GUI and\n          CLI sessions. Users are automatically logged out asession that exceeds the\n          idle timeout limit.Optional.\n        in: query\n        name: idle_timeout\n        schema:\n          type: boolean\n      - description: Displays the hostnames or IP addresses of the NTP servers currently\n          being used by the array to maintainreference time.Optional.\n        in: query\n        name: ntpserver\n        schema:\n          type: boolean\n      - description: Displays the current state of the Purity phonehome automatic\n          hourly log transmission facility as enabled ordisabled.Optional.\n        in: query\n        name: phonehome\n        schema:\n          type: boolean\n      - description: Displays the proxy host for the phonehome facility when HTTPS\n          is the phonehome protocol (the phonehomefacility itself determines which\n          protocol to use).Optional.\n        in: query\n        name: proxy\n        schema:\n          type: boolean\n      - description: Displays the hostname or IP address of the electronic mail relay\n          server currently being used as a forwardingpoint for email alerts generated\n          by the array.Optional.\n        in: query\n        name: relayhost\n        schema:\n          type: boolean\n      - description: Displays the amount of time (in seconds) that can lapse during\n          an I/O interruption before the target ports log outof the fabric. The default\n          timeout value is 60 seconds.Optional.\n        in: query\n        name: scsi_timeout\n        schema:\n          type: boolean\n      - description: Displays domain name from which Purity sends email alert messages.Optional.\n        in: query\n        name: senderdomain\n        schema:\n          type: boolean\n      - description: Displays the amount of usable physical storage on the array and\n          the amount of storage occupied by data andmetadata.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      - description: Displays remote syslog servers for delivering notifications.Optional.\n        in: query\n        name: syslogserver\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_arrayExamples'\n          description: ''\n      tags:\n      - Array\n    put:\n      description: Modifies the attributes for the array.At least one parameter must\n        be specified.\n      operationId: put/1.8/array\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                banner:\n                  description: Sets a common \"message of the day\" (MOTD) that is sent\n                    to all Purity users. The banner message is displayedin the login\n                    pane of the Purity GUI and via SSH after users log in.Optional.\n                  type: string\n                idle_timeout:\n                  description: Sets the idle time limit, in minutes, of the Purity\n                    GUI and CLI sessions. Valid values are between 5 and 180minutes.\n                    The default timeout value is 30 minutes. Specifying a value of\n                    zero disables the automatic log-offfeature. Changes made to the\n                    idle_timeout value do not apply to existing Purity sessions.Optional.\n                  type: integer\n                name:\n                  description: Renames the array.Optional.\n                  type: string\n                ntpserver:\n                  description: Specifies alternate NTP servers, by IP address or hostname,\n                    assigned as the array source for reference time.Supersedes any\n                    previous NTP server assignments.Optional.\n                  items:\n                    type: object\n                  type: array\n                proxy:\n                  description: Sets the proxy host for the phonehome facility when\n                    HTTPS is the phonehome protocol (the phonehome facilityitself\n                    determines which protocol to use). The format for the value is\n                    https://HOSTNAME:PORT, whereHOSTNAME is the name of the proxy\n                    host and PORT is the TCP/IP port number used by the proxy host.Optional.\n                  type: string\n                relayhost:\n                  description: Sets the hostname or IP address of the electronic mail\n                    relay server currently being used as a forwarding pointfor email\n                    alerts generated by the array. To set Purity to send alert email\n                    messages directly to recipientaddresses rather than routing them\n                    via a relay (mail forwarding) server, set relayhost to an empty\n                    string.Optional.\n                  type: string\n                scsi_timeout:\n                  description: Changes the amount of time, in seconds, that can lapse\n                    during an I/O interruption before the target ports logout of the\n                    fabric. The default timeout value is 60 seconds.Changing the default\n                    timeout value may cause an initiator to mistakenly interpret the\n                    status of the FlashArray asfailed or generate a host timeout.\n                    Contact the Pure Storage Support team before you change thescsi_timeout\n                    value.Optional.\n                  type: integer\n                senderdomain:\n                  description: Sets the domain name from which Purity sends email\n                    alert messages.Optional.\n                  type: string\n                syslogserver:\n                  description: Specifies the remote syslog servers for delivering\n                    notifications. The format for the value is tcp://HOST:PORTor udp://HOST:PORT.Optional.\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Array\n  /1.8/array/connection:\n    get:\n      description: Lists connected arrays.\n      operationId: get/1.8/array/connection\n      parameters:\n      - description: Displays (true) outgoing bandwidth throttling information.Optional.\n        in: query\n        name: throttle\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_array_connectionExamples'\n          description: ''\n      tags:\n      - Array\n    post:\n      description: Creates a connection between the current array and the specified\n        array.\n      operationId: post/1.8/array/connection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                connection_key:\n                  description: The connection_key of the array to be connected.\n                  type: string\n                management_address:\n                  description: The management address of the array to be connected.\n                  type: string\n                replication_address:\n                  description: The replication address of the array to be connected.Optional.\n                  type: string\n                type:\n                  description: The type(s) of connection desired. The only option\n                    supported in this version is 'replication'.\n                  items:\n                    type: object\n                  type: array\n              required:\n              - connection_key\n              - management_address\n              - type\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_array_connectionExamples'\n          description: ''\n      tags:\n      - Array\n  /1.8/array/connection/{connection}:\n    delete:\n      description: Disconnects the current array from the specified array.\n      operationId: delete/1.8/array/connection/{connection}\n      parameters:\n      - in: path\n        name: connection\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_array_connection_{connection}Examples'\n          description: ''\n      tags:\n      - Array\n    put:\n      description: Modifies the bandwidth throttling attributes for a connected array.At\n        least one parameter must be specified.\n      operationId: put/1.8/array/connection/{connection}\n      parameters:\n      - in: path\n        name: connection\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                default_limit:\n                  description: number or string Default maximum bandwidth threshold\n                    for outbound traffic. Once exceeded, bandwidth throttling occurs.Enter\n                    the size as a number (bytes) or as a string with a single character\n                    unit symbol. Valid unit symbols are K,M, G, representing KiB,\n                    MiB, GiB, respectively, where \"Ki\" denotes 2^10, \"Mi\" denotes\n                    2^20, and so on. If theunit symbol is not specified, the unit\n                    defaults to bytes.Optional.\n                  type: string\n                window:\n                  description: Range of time during which --window_limit threshold\n                    is in effect.The start and end times must be set on the hour.Enter\n                    the time range with the start and end attributes, both measured\n                    in seconds, where start representsthe window start time and end\n                    represents the window end time.Optional.\n                  type: object\n                window_limit:\n                  description: number or string Maximum bandwidth threshold for outbound\n                    traffic during the specified window_limit time range. Onceexceeded,\n                    bandwidth throttling occurs.Enter the size as a number (bytes)\n                    or as a string with a single character unit symbol. Valid unit\n                    symbols are K,M, G, representing KiB, MiB, GiB, respectively,\n                    where \"Ki\" denotes 2^10, \"Mi\" denotes 2^20, and so on. If theunit\n                    symbol is not specified, the unit defaults to bytes.Optional.\n                  type: string\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Array\n  /1.8/array/console_lock:\n    get:\n      description: Displays the status of the console lock.\n      operationId: get/1.8/array/console_lock\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_array_console_lockExamples'\n          description: ''\n      tags:\n      - Array\n    put:\n      description: Enables or disables root login through the console.At least one\n        parameter must be specified.\n      operationId: put/1.8/array/console_lock\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                enabled:\n                  description: Enables (true) or disables (false) the console lock\n                    which prevents the root user from logging in through thesystem\n                    console.Optional.\n                  type: boolean\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_array_console_lockExamples'\n          description: ''\n      tags:\n      - Array\n  /1.8/array/phonehome:\n    get:\n      description: Lists information about the status of the transmission logs for\n        the phonehome facility.\n      operationId: get/1.8/array/phonehome\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_array_phonehomeExamples'\n          description: ''\n      tags:\n      - Array\n    put:\n      description: Performs phonehome actions.At least one parameter must be specified.\n      operationId: put/1.8/array/phonehome\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: 'Transmits event logs stored in the array to the Pure\n                    Storage Support team via the phonehome channel. Specifythe phonehome\n                    log time period as any of the following: send_all, send_today,\n                    send_yesterday, cancel.Optional.'\n                  type: string\n                enabled:\n                  description: Enables (true) or disables (false) the automatic hourly\n                    transmission of array logs to the Pure StorageSupport team.Optional.\n                  type: boolean\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_array_phonehomeExamples'\n          description: ''\n      tags:\n      - Array\n  /1.8/array/remoteassist:\n    get:\n      description: Lists information about the status (enabled or disabled) of a remote\n        assist session.\n      operationId: get/1.8/array/remoteassist\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_array_remoteassistExamples'\n          description: ''\n      tags:\n      - Array\n    put:\n      description: Enables or disables a remote assist session.\n      operationId: put/1.8/array/remoteassist\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: Enables (\"connect\") or disables (\"disconnect\") a remote\n                    assist session.\n                  type: string\n              required:\n              - action\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Array\n  /1.8/auth/apitoken:\n    post:\n      description: Generates a REST API token that can be used to create a REST session.API\n        tokens are tied to a particular administrative account. Each administrator\n        has permission to manage their own API token. Administrators cannot managetokens\n        on behalf of other users.\n      operationId: post/1.8/auth/apitoken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                password:\n                  description: Purity user login password used to generate the REST\n                    API token.\n                  type: string\n                username:\n                  description: Purity user login name used to generate the REST API\n                    token. Sometimes referred to as sAMAccountName.\n                  type: string\n              required:\n              - password\n              - username\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_auth_apitokenExamples'\n          description: ''\n      tags:\n      - Authentication\n  /1.8/auth/session:\n    delete:\n      description: Deletes (invalidates) the REST session.\n      operationId: delete/1.8/auth/session\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_auth_sessionExamples'\n          description: ''\n      tags:\n      - Authentication\n    post:\n      description: Creates a REST session using the REST API token.\n      operationId: post/1.8/auth/session\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                api_token:\n                  description: REST API token used to create a REST session.\n                  type: string\n              required:\n              - api_token\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_auth_sessionExamples'\n          description: ''\n      tags:\n      - Authentication\n  /1.8/cert:\n    get:\n      description: Lists certificate attributes or exports certificates.If the request\n        does not include parameters, the REST API call returns the attributes of the\n        certificate. Include the certificate orintermediate_certificate parameter\n        to export the respective certificate.\n      operationId: get/1.8/cert\n      parameters:\n      - description: If set to true, exports the current certificate.Optional.\n        in: query\n        name: certificate\n        schema:\n          type: boolean\n      - description: If set to true, exports the current intermediate certificate.Optional.\n        in: query\n        name: intermediate_certificate\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_certExamples'\n          description: ''\n      tags:\n      - SSL\n    put:\n      description: Creates a self-signed certificate or imports a certificate signed\n        by a certificate authority (CA).Creating a self-signed certificate or importing\n        a certificate replaces the existing certificate. Either the certificate or\n        self-signed parameter must bespecified.\n      operationId: put/1.8/cert\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                certificate:\n                  description: Imports a certificate signed by a certificate authority.Optional.\n                  type: string\n                common_name:\n                  description: Used with the self-signed parameter to specify the\n                    common name. The common name represents thequalified domain name\n                    of the current array. For example, for https://purearray.example.com,\n                    the commonname must be purearray.example.com or *.example.com\n                    for a wildcard certificate. It can also be themanagement IP address\n                    of the array or the short name of the current array. It can't\n                    have more than 64characters.Optional.\n                  type: string\n                country:\n                  description: Used with the self-signed parameter to specify the\n                    country name. The country name represents the two-letter ISO code\n                    for the country where your organization is located.Optional.\n                  type: string\n                days:\n                  description: Used with the self-signed parameter to specify the\n                    number of valid days for the self-signed certificatebeing generated.Optional.\n                  type: integer\n                email:\n                  description: Used with the self-signed parameter to specify the\n                    email address used to contact your organization.Optional.\n                  type: string\n                intermediate_certificate string:\n                  description: Used with the certificate parameter to specify the\n                    intermediate certificate to import.Optional.keystringUsed with\n                    the certificate parameter to specify the private key to import.Optional.key-sizeintUsed\n                    with the new_key parameter to specify the key size in bits. Valid\n                    values are 512, 1024, 2048 (default)or 4096. A key size smaller\n                    than 2048 is considered insecure.Optional.localitystringUsed with\n                    the self-signed parameter to specify the city where your organization\n                    is located.Optional.new_keybooleanUsed with the self-signed parameter\n                    to create a new key when creating the self-signed certificate.\n                    If anew private key is not generated, the certificate uses the\n                    existing private key.Optional.organizationstringUsed with the\n                    self-signed parameter to specify the full and exact legal name\n                    of your organization. Theorganization name should not be abbreviated\n                    and should include suffixes such as Inc, Corp, or LLC. Forexample,'Pure\n                    Storage, Inc.'Optional.organizational_unitstringUsed with the\n                    self-signed parameter to specify the department within your organization\n                    that you want toappear in the certificate.Optional.passphrasestringUsed\n                    with the key parameter to decrypt the private key.Optional.self_signedbooleanGenerates\n                    a self-signed certificate.self_signed or certificate must be set.Optional.statestringUsed\n                    with the self-signed parameter to specify the state or province\n                    where your organization is located.Optional.\n                  type: string\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_certExamples'\n          description: ''\n      tags:\n      - SSL\n  /1.8/cert/certificate_signing_request:\n    get:\n      description: Constructs a certificate signing request (CSR) for signing by a\n        certificate authority (CA).\n      operationId: get/1.8/cert/certificate_signing_request\n      parameters:\n      - description: Sets the common name of the CSR. The common name must be the\n          fully qualified domain name of the currentarray. For example, for https://purearray.example.com,\n          the common name must be purearray.example.com or*.example.com for a wildcard\n          certificate. It can also be the management IP address of the array or the\n          shortname of the current array. It can't have more than 64 characters.Optional.\n        in: query\n        name: common_name\n        schema:\n          type: string\n      - description: Sets the country name of the CSR. The country name represents\n          the two-letter ISO code for the country whereyour organization is located.Optional.\n        in: query\n        name: country\n        schema:\n          type: string\n      - description: Sets the email address used to contact your organization.Optional.\n        in: query\n        name: email\n        schema:\n          type: string\n      - description: Sets the name of the city where your organization is located.Optional.\n        in: query\n        name: locality\n        schema:\n          type: string\n      - description: Sets the name of your organization. Enter the full and exact\n          legal name of your organization. The organizationname should not be abbreviated\n          and should include suffixes such as Inc, Corp, or LLC. For example,'PureStorage,\n          Inc.'Optional.\n        in: query\n        name: organization\n        schema:\n          type: string\n      - description: Sets the name of the department within your organization that\n          you want to appear in the certificate.Optional.\n        in: query\n        name: organizational_unit\n        schema:\n          type: string\n      - description: Sets the name of the state or province where your organization\n          is located.Optional.\n        in: query\n        name: state\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_cert_certificate_signing_requestExamples'\n          description: ''\n      tags:\n      - SSL\n  /1.8/directoryservice:\n    get:\n      description: Lists current base configuration information for the directory\n        service.\n      operationId: get/1.8/directoryservice\n      parameters:\n      - description: If set to true, returns information about the currently configured\n          CA certificate data.Optional.\n        in: query\n        name: certificate\n        schema:\n          type: boolean\n      - description: If set to true, returns information about the group configuration.Optional.\n        in: query\n        name: groups\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_directoryserviceExamples'\n          description: ''\n      tags:\n      - Users\n    put:\n      description: Modifies and tests the directory service configuration.At least\n        one parameter must be specified.\n      operationId: put/1.8/directoryservice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: When set to test, tests the current directory service\n                    configuration; verifies that the URIs can be resolved andthat\n                    Purity can bind and query the tree using the bind user credentials.\n                    The call also verifies that it can find allthe configured groups\n                    to ensure the Common Names and group base are correctly configured.Optional.\n                  type: string\n                array_admin_group:\n                  description: Sets the common Name (CN) of the directory service\n                    group containing administrators with full privileges whenmanaging\n                    the FlashArray. The name should be just the Common Name of the\n                    group without the CN=specifier. Common Names should not exceed\n                    64 characters in length.Optional.\n                  type: string\n                auto_fetch:\n                  description: When used with certificate, set the value to true to\n                    download and confirm the server certificate.Optional.\n                  type: boolean\n                base_dn:\n                  description: Sets the base of the Distinguished Name (DN) of the\n                    directory service groups. The base should consist of onlyDomain\n                    Components (DCs). The base_dn will populate with a default value\n                    when a URI is entered by parsingdomain components from the URI.\n                    The base DN should specify DC= for each domain component and multipleDCs\n                    should be separated by commas.Optional.\n                  type: string\n                bind_password:\n                  description: Sets the password of the bind_user user name account.Optional.\n                  type: string\n                bind_user:\n                  description: Sets the user name that can be used to bind to and\n                    query the directory.For Active Directory, enter the username -\n                    often referred to as sAMAccountName or User Logon Name - ofthe\n                    account that is used to perform directory lookups.For OpenLDAP,\n                    enter the full DN of the user.Optional.\n                  type: string\n                certificate:\n                  description: Certificate string in PEM format, including the \"-----BEGIN\n                    CERTIFICATE-----\" and\"-----END CERTIFICATE-----\" lines.Optional.\n                  type: string\n                check_peer:\n                  description: Enables (true) or disables (false) server authenticity\n                    enforcement with the configured CA certificate.Optional.\n                  type: boolean\n                enabled:\n                  description: Enables (true) or disables (false) directory service\n                    support.Optional.\n                  type: boolean\n                group_base:\n                  description: Specifies where the configured groups are located in\n                    the directory tree. This field consists of OrganizationalUnits\n                    (OUs) that combine with the base DN attribute and the configured\n                    group CNs to complete the fullDistinguished Name of the groups.\n                    The group base should specify OU= for each OU and multiple OUs\n                    shouldbe separated by commas. The order of OUs is important and\n                    should get larger in scope from left to right. EachOU should not\n                    exceed 64 characters in length.Optional.\n                  type: string\n                readonly_group:\n                  description: Sets the common Name (CN) of the configured directory\n                    service group containing users with read-onlyprivileges on the\n                    FlashArray. This name should be just the Common Name of the group\n                    without the CN=specifier. Common Names should not exceed 64 characters\n                    in length.Optional.\n                  type: string\n                storage_admin_group string:\n                  description: Sets the common Name (CN) of the configured directory\n                    service group containing administrators with storage-related privileges\n                    on the FlashArray. This name should be just the Common Name of\n                    the group without theCN= specifier. Common Names should not exceed\n                    64 characters in length.Optional.\n                  type: string\n                trust:\n                  description: When used with certificate, set the value to true to\n                    skip certificate chain trust verification.Optional.\n                  type: boolean\n                uri:\n                  description: 'A list of up to 30 URIs of the directory servers.\n                    These must be full URIs including the scheme: ldap:// orldaps://.\n                    The domain names should be resolvable by configured DNS servers.\n                    If the scheme of the URIs isldaps://, SSL is enabled. SSL is either\n                    enabled or disabled globally, so the scheme of all supplied URIs\n                    mustbe the same. They must also all have the same domain. If base\n                    DN is not configured and a URI is provided,the base DN will automatically\n                    default to the Domain Components of the URIs. Standard ports are\n                    assumed(389 for ldap, 636 for ldaps). Non-standard ports can be\n                    specified in the URI if they are in use.Optional.'\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_directoryserviceExamples'\n          description: ''\n      tags:\n      - Users\n  /1.8/dns:\n    get:\n      description: Lists DNS attributes for the array administrative network.\n      operationId: get/1.8/dns\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_dnsExamples'\n          description: ''\n      tags:\n      - Network\n    put:\n      description: Sets the DNS attributes for the array administrative network.At\n        least one parameter must be specified.\n      operationId: put/1.8/dns\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                domain:\n                  description: Domain suffix to be appended by the array when performing\n                    DNS lookups.Optional.\n                  type: string\n                nameservers:\n                  description: A list of up to three DNS server IP addresses that\n                    replace the current list of name servers. The order of the listis\n                    significant. Purity queries DNS servers in the order in which\n                    their IP addresses are listed in this option.Optional.\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_dnsExamples'\n          description: ''\n      tags:\n      - Network\n  /1.8/drive:\n    get:\n      description: Lists flash modules, NVRAM modules, and their attributes.\n      operationId: get/1.8/drive\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_driveExamples'\n          description: ''\n      tags:\n      - Hardware\n  /1.8/drive/{drive}:\n    get:\n      description: Lists the attributes for the specified flash module or NVRAM module.\n      operationId: get/1.8/drive/{drive}\n      parameters:\n      - in: path\n        name: drive\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_drive_{drive}Examples'\n          description: ''\n      tags:\n      - Hardware\n  /1.8/hardware:\n    get:\n      description: Lists array hardware component information.Returns information\n        about array hardware components that are capable of reporting their status.\n        The display is primarily useful for diagnosing hardware-related problems.\n      operationId: get/1.8/hardware\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_hardwareExamples'\n          description: ''\n      tags:\n      - Hardware\n  /1.8/hardware/{component}:\n    get:\n      description: Lists the attributes for the specified hardware component.\n      operationId: get/1.8/hardware/{component}\n      parameters:\n      - in: path\n        name: component\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_hardware_{component}Examples'\n          description: ''\n      tags:\n      - Hardware\n    put:\n      description: Controls the visual identification of the specified chassis, controllers,\n        flash module bays, NVRAM module bays, and storage shelves.At least one parameter\n        must be specified.\n      operationId: put/1.8/hardware/{component}\n      parameters:\n      - in: path\n        name: component\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                identify:\n                  description: Turns the LED light on or off to identify the specified\n                    component. Valid for chassis, controllers, flash modulebays, NVRAM\n                    module bays, and storage shelves. Set identify to \"on\" to turn\n                    on the LED and identify thespecified component. Set identify to\n                    \"off\" to turn off the LED.Optional.\n                  type: string\n                index:\n                  description: Displays the specified number on the identifying component.Optional.\n                  type: string\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_hardware_{component}Examples'\n          description: ''\n      tags:\n      - Hardware\n  /1.8/hgroup:\n    get:\n      description: Lists or monitors all host groups.\n      operationId: get/1.8/hgroup\n      parameters:\n      - description: If set to monitor, displays host group I/O performance information\n          for all host groups.Optional.\n        in: query\n        name: action\n        schema:\n          type: string\n      - description: Displays all volumes associated with host groups, and the LUNs\n          used by the associated hosts to address them.Optional.\n        in: query\n        name: connect\n        schema:\n          type: boolean\n      - description: Displays specified host groups. Enter multiple host group names\n          in comma-separated format. Host groupnames can include asterisk (*) wildcard\n          characters to represent zero or more characters.Optional.\n        in: query\n        name: names\n        schema:\n          items:\n            type: object\n          type: array\n      - description: Displays (true) all protected host groups and their associated\n          protection groups.Optional.\n        in: query\n        name: protect\n        schema:\n          type: boolean\n      - description: Displays size and space consumption information for each volume\n          associated with each specified host group.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_hgroupExamples'\n          description: ''\n      tags:\n      - Host\n  /1.8/hgroup/{hgroup}:\n    delete:\n      description: Deletes the specified host group. You must disconnect all volumes\n        and remove all hosts from the host group before deleting the host group.\n      operationId: delete/1.8/hgroup/{hgroup}\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_hgroup_{hgroup}Examples'\n          description: ''\n      tags:\n      - Host\n    get:\n      description: Lists or monitors a single host group.\n      operationId: get/1.8/hgroup/{hgroup}\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      - description: If set to monitor, displays host group I/O performance information\n          for the specified host group.Optional.\n        in: query\n        name: action\n        schema:\n          type: string\n      - description: Displays (true) the names of all protection groups associated\n          with the specified host group. If the host group isnot protected, returns\n          an empty response.Optional.\n        in: query\n        name: protect\n        schema:\n          type: boolean\n      - description: Displays size and space consumption information for each volume\n          associated with the specified host group.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_hgroup_{hgroup}Examples'\n          description: ''\n      tags:\n      - Host\n    post:\n      description: Creates a host group with the specified name.\n      operationId: post/1.8/hgroup/{hgroup}\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                hostlist:\n                  description: List of member hosts.Optional.\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_hgroup_{hgroup}Examples'\n          description: ''\n      tags:\n      - Host\n    put:\n      description: Adds, removes, or modifies host members of the host group.At least\n        one parameter must be specified.\n      operationId: put/1.8/hgroup/{hgroup}\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                addhostlist:\n                  description: Adds a list of hosts to the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                hostlist:\n                  description: Replaces the list of member hosts.Optional.\n                  items:\n                    type: object\n                  type: array\n                name:\n                  description: Changes the name of the host group to the specified\n                    name.Optional.\n                  type: string\n                remhostlist:\n                  description: Removes the list of hosts from the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_hgroup_{hgroup}Examples'\n          description: ''\n      tags:\n      - Host\n  /1.8/hgroup/{hgroup}/pgroup/{pgroup}:\n    delete:\n      description: Removes a host group member from a protection group.\n      operationId: delete/1.8/hgroup/{hgroup}/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Host\n    post:\n      description: Adds a host group to a protection group.You can only add members\n        of the same object type to a protection group. For example, you cannot add\n        hosts or host groups to a protection group thatcontains volumes.\n      operationId: post/1.8/hgroup/{hgroup}/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties: {}\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Host\n  /1.8/hgroup/{hgroup}/volume:\n    get:\n      description: Lists volumes associated with the specified host groups and the\n        LUNs used to address them.\n      operationId: get/1.8/hgroup/{hgroup}/volume\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_hgroup_{hgroup}_volumeExamples'\n          description: ''\n      tags:\n      - Host\n  /1.8/hgroup/{hgroup}/volume/{volume}:\n    delete:\n      description: Breaks the connections between all hosts associated with the host\n        group and the specified volume.\n      operationId: delete/1.8/hgroup/{hgroup}/volume/{volume}\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_hgroup_{hgroup}_volume_{volume}Examples'\n          description: ''\n      tags:\n      - Host\n    post:\n      description: Connects a volume to all hosts in the specified host group.If the\n        LUN is not specified, when the volume is connected to the host group, Purity\n        assigns the same LUN to each connection. All hosts in the group use thisLUN\n        to communicate with the volume.\n      operationId: post/1.8/hgroup/{hgroup}/volume/{volume}\n      parameters:\n      - in: path\n        name: hgroup\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                lun:\n                  description: Assigns the specified LUN to each connection.Optional.\n                  type: integer\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_hgroup_{hgroup}_volume_{volume}Examples'\n          description: ''\n      tags:\n      - Host\n  /1.8/host:\n    get:\n      description: Lists all hosts on the array.\n      operationId: get/1.8/host\n      parameters:\n      - description: If set to monitor, displays host-wide I/O performance information\n          in real time. Time is displayed in GreenwichMean Time (GMT).Optional.\n        in: query\n        name: action\n        schema:\n          type: string\n      - description: Displays all visible attributes of the specified hosts, including\n          associated worldwide names, host groups,connected volumes and the LUNs used\n          to address them, and array port worldwide names through which thevolumes\n          are visible.Optional.\n        in: query\n        name: all\n        schema:\n          type: boolean\n      - description: Displays host and target user names and indicates whether host\n          and target passwords have been set.Optional.\n        in: query\n        name: chap\n        schema:\n          type: boolean\n      - description: Displays all host-volume connections, either private or shared,\n          and the LUNs used by the hosts to address thevolumes.Optional.\n        in: query\n        name: connect\n        schema:\n          type: boolean\n      - description: Displays specified hosts. Enter multiple host names in comma-separated\n          format. Host names can includeasterisk (*) wildcard characters to represent\n          zero or more characters.Optional.\n        in: query\n        name: names\n        schema:\n          items:\n            type: object\n          type: array\n      - description: Displays the personality setting associated with the specified\n          hosts.Optional.\n        in: query\n        name: personality\n        schema:\n          type: boolean\n      - description: Used with the connect parameter to display (true) private host-volume\n          connections.Optional.\n        in: query\n        name: private\n        schema:\n          type: boolean\n      - description: Displays all protected hosts and their associated protection\n          groups.Optional.\n        in: query\n        name: protect\n        schema:\n          type: boolean\n      - description: Used with the connect parameter to display (true) shared host-volume\n          connections.Optional.\n        in: query\n        name: shared\n        schema:\n          type: boolean\n      - description: Displays information about provisioned (virtual) size and physical\n          storage consumption for each volumeconnected to the specified hosts.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_hostExamples'\n          description: ''\n      tags:\n      - Hosts\n  /1.8/host/{host}:\n    delete:\n      description: Removes the specified host.Hosts cannot be deleted while they have\n        private connections to volumes or while they are associated with host groups.\n      operationId: delete/1.8/host/{host}\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_host_{host}Examples'\n          description: ''\n      tags:\n      - Hosts\n    get:\n      description: Lists the attributes for the specified host.\n      operationId: get/1.8/host/{host}\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      - description: If set to monitor, displays host-wide I/O performance information\n          in real time. Time is displayed in GreenwichMean Time (GMT).Optional.\n        in: query\n        name: action\n        schema:\n          type: string\n      - description: Displays all visible attributes of the specified host. Display\n          includes associated worldwide names, host groups,connected volumes and the\n          LUNs used to address them, array port worldwide names through which thevolumes\n          are visible.Optional.\n        in: query\n        name: all\n        schema:\n          type: boolean\n      - description: Displays host and target usernames and indicates whether host\n          and target passwords have been set.Optional.\n        in: query\n        name: chap\n        schema:\n          type: boolean\n      - description: Displays the personality setting associated with the specified\n          host.Optional.\n        in: query\n        name: personality\n        schema:\n          type: boolean\n      - description: Displays the names of all protection groups associated with the\n          specified host. If the host is not protected,returns an empty response.Optional.\n        in: query\n        name: protect\n        schema:\n          type: boolean\n      - description: Displays information about provisioned (virtual) size and physical\n          storage consumption for each volumeconnected to the specified host.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_host_{host}Examples'\n          description: ''\n      tags:\n      - Hosts\n    post:\n      description: Creates a host with the specified name.\n      operationId: post/1.8/host/{host}\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                iqnlist:\n                  description: Sets the list of iSCSI qualified names (IQNs) for the\n                    new host.Optional.\n                  items:\n                    type: object\n                  type: array\n                wwnlist:\n                  description: Sets the list of Fibre Channel worldwide names (WWNs)\n                    for the new host.Optional.\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_host_{host}Examples'\n          description: ''\n      tags:\n      - Hosts\n    put:\n      description: Modifies the attributes for the host.At least one parameter must\n        be specified.\n      operationId: put/1.8/host/{host}\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                addiqnlist:\n                  description: Adds the list of iSCSI qualified names (IQNs) to the\n                    specified host.Optional.\n                  items:\n                    type: object\n                  type: array\n                addwwnlist:\n                  description: Adds the list of Fibre Channel worldwide names (WWNs)\n                    to the specified host.Optional.\n                  items:\n                    type: object\n                  type: array\n                host_password:\n                  description: Sets the host password for CHAP authentication.Optional.\n                  type: string\n                host_user:\n                  description: Sets the host user name for CHAP authentication.Optional.\n                  type: string\n                iqnlist:\n                  description: Assigns a list of iSCSI qualified names (IQNs) to the\n                    specified host.Optional.\n                  items:\n                    type: object\n                  type: array\n                name:\n                  description: Changes the name of the host to the specified name.Optional.\n                  type: string\n                personality:\n                  description: Determines the way in which the host personality tunes\n                    the protocol used between the array and the initiator. Ifthe host\n                    is running the HP-UX operating system, set the host personality\n                    to 'hpux'.Optional.\n                  type: string\n                remiqnlist:\n                  description: Removes the list of iSCSI qualified names (IQNs) from\n                    the specified host.Optional.\n                  items:\n                    type: object\n                  type: array\n                remwwnlist:\n                  description: Removes the list of Fibre Channel worldwide names (WWNs)\n                    from the specified host.Optional.\n                  items:\n                    type: object\n                  type: array\n                target_password:\n                  description: Sets the target password for CHAP authentication.Optional.\n                  type: string\n                target_user:\n                  description: Sets the target user name for CHAP authentication.Optional.\n                  type: string\n                wwnlist:\n                  description: Assigns a list of Fibre Channel worldwide names (WWNs)\n                    to the specified host.Optional.\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_host_{host}Examples'\n          description: ''\n      tags:\n      - Hosts\n  /1.8/host/{host}/pgroup/{pgroup}:\n    delete:\n      description: Removes a host member from a protection group.\n      operationId: delete/1.8/host/{host}/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Hosts\n    post:\n      description: Adds a host to a protection group.You can only add members of the\n        same object type to a protection group. For example, you cannot add hosts\n        or host groups to a protection group thatcontains volumes.\n      operationId: post/1.8/host/{host}/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties: {}\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Hosts\n  /1.8/host/{host}/volume:\n    get:\n      description: Lists volumes associated with the specified host and the LUNs used\n        to address them.\n      operationId: get/1.8/host/{host}/volume\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      - description: Restricts (true) the display list to volumes with private connections.Optional.\n        in: query\n        name: private\n        schema:\n          type: boolean\n      - description: Restricts (true) the display list to volumes with shared connections.Optional.\n        in: query\n        name: shared\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_host_{host}_volumeExamples'\n          description: ''\n      tags:\n      - Hosts\n  /1.8/host/{host}/volume/{volume}:\n    delete:\n      description: Breaks the connection between a host and volume.\n      operationId: delete/1.8/host/{host}/volume/{volume}\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_host_{host}_volume_{volume}Examples'\n          description: ''\n      tags:\n      - Hosts\n    post:\n      description: Connects a volume to the host.\n      operationId: post/1.8/host/{host}/volume/{volume}\n      parameters:\n      - in: path\n        name: host\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                lun:\n                  description: Assigns the same LUN to each connection. The connection\n                    fails for any host for which the specified LUN isalready in use.Optional.\n                  type: integer\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_host_{host}_volume_{volume}Examples'\n          description: ''\n      tags:\n      - Hosts\n  /1.8/message:\n    get:\n      description: Lists alert events, audit records, and user login sessions.\n      operationId: get/1.8/message\n      parameters:\n      - description: Lists audit records instead of alerts (default). May not be used\n          with login or open.Optional.\n        in: query\n        name: audit\n        schema:\n          type: boolean\n      - description: Lists flagged messages only. The array automatically flags warnings\n          and critical alerts.Optional.\n        in: query\n        name: flagged\n        schema:\n          type: boolean\n      - description: Lists user session logs instead of alerts (default). May not\n          be used with audit or open.Optional.\n        in: query\n        name: login\n        schema:\n          type: boolean\n      - description: Lists open messages. May not be used with audit or login.Optional.\n        in: query\n        name: open\n        schema:\n          type: boolean\n      - description: Lists recent messages. An audit record is considered recent if\n          it relates to a command issued within the past 24hours. An alert is considered\n          recent if the situation that triggered it is unresolved, or has only been\n          resolvedwithin the past 24 hours. A user session log event is considered\n          recent if the login, logout, or authenticationevent occurred within the\n          past 24 hours.Optional.\n        in: query\n        name: recent\n        schema:\n          type: boolean\n      - description: When audit is set to true, user can be used to list audit records\n          for a specific user. When login is set totrue, user can be used to list\n          user session logs for a specific user.Optional.\n        in: query\n        name: user\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_messageExamples'\n          description: ''\n      tags:\n      - Alerts\n  /1.8/message/{id}:\n    put:\n      description: Flags or unflags a message.\n      operationId: put/1.8/message/{id}\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                flagged:\n                  description: Flags (true) or unflags (false) a message. If set to\n                    true, flags the message with the specified ID. If set tofalse,\n                    unflags the message.\n                  type: boolean\n              required:\n              - flagged\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Alerts\n  /1.8/network:\n    get:\n      description: Lists array administrative network interfaces and their statuses\n        (enabled or disabled) and attributes.\n      operationId: get/1.8/network\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_networkExamples'\n          description: ''\n      tags:\n      - Network\n  /1.8/network/vif/{vlan_interface}:\n    post:\n      description: Creates a VLAN interface.\n      operationId: post/1.8/network/vif/{vlan_interface}\n      parameters:\n      - in: path\n        name: vlan_interface\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  description: Sets the IPv4 address to be associated with the specified\n                    interface. IP addresses may be specified in CIDRformat (ddd.ddd.ddd.ddd/dd).\n                    Alternatively, set the address parameter with the netmask parameter\n                    to specifythe netmask in ddd.ddd.ddd.ddd format. Must match the\n                    subnet prefix.Optional.\n                  type: string\n                subnet:\n                  description: Sets the subnet associated with the specified interface.\n                  type: string\n              required:\n              - subnet\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_network_vif_{vlan_interface}Examples'\n          description: ''\n      tags:\n      - Network\n  /1.8/network/{network_component}:\n    get:\n      description: Lists the attributes for the specified network component.\n      operationId: get/1.8/network/{network_component}\n      parameters:\n      - in: path\n        name: network_component\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_network_{network_component}Examples'\n          description: ''\n      tags:\n      - Network\n    put:\n      description: Performs network interface actions and sets the administrative\n        network component attributes.At least one parameter must be specified.\n      operationId: put/1.8/network/{network_component}\n      parameters:\n      - in: path\n        name: network_component\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  description: Sets the IPv4 address to be associated with the specified\n                    interface. IP addresses may be specified in CIDRformat (ddd.ddd.ddd.ddd/dd).\n                    Alternatively, set the address parameter with the netmask parameter\n                    to specifythe netmask in ddd.ddd.ddd.ddd format.\n                  type: string\n                addslavelist:\n                  description: Required if the netmask parameter is set.Add slaves\n                    to the existing list. May only be used on network bond interfaces.Optional.\n                  items:\n                    type: object\n                  type: array\n                enabled:\n                  description: Enables (true) or disables (false) communication between\n                    the specified Ethernet interface and theadministrative network.\n                    Do not disable the interface through which the administrative\n                    session is beingconducted.Optional.\n                  type: boolean\n                gateway:\n                  description: Sets the IPv4 address (in ddd.ddd.ddd.ddd format) of\n                    the gateway through which the specified interface is tocommunicate\n                    with the network.Optional.\n                  type: string\n                mtu:\n                  description: Maximum message transfer unit (packet) size for the\n                    interface in bytes. Valid values are integers between 1280and\n                    9216 (inclusive). The default value is 1500.Optional.\n                  type: integer\n                netmask:\n                  description: Used with the address parameter to specify the netmask\n                    in ddd.ddd.ddd.ddd format.Optional.\n                  type: string\n                remslavelist:\n                  description: Removes the list of slaves from the existing list.\n                    May only be used on network bond interfaces.Optional.\n                  items:\n                    type: object\n                  type: array\n                slavelist:\n                  description: Replaces the existing slave list. May only be used\n                    on network bond interfaces.Optional.\n                  items:\n                    type: object\n                  type: array\n                subnet:\n                  description: Associates a subnet with the specified VLAN interface.Optional.\n                  type: string\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_network_{network_component}Examples'\n          description: ''\n      tags:\n      - Network\n  /1.8/network/{vlan_interface}:\n    delete:\n      description: Deletes a VLAN interface.\n      operationId: delete/1.8/network/{vlan_interface}\n      parameters:\n      - in: path\n        name: vlan_interface\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_network_{vlan_interface}Examples'\n          description: ''\n      tags:\n      - Network\n  /1.8/pgroup:\n    get:\n      description: Lists protection groups and protection group snapshots and their\n        attributes.\n      operationId: get/1.8/pgroup\n      parameters:\n      - description: Displays specified protection groups. Enter multiple protection\n          group names in comma-separated format.Protection group names can include\n          asterisk (*) wildcard characters to represent zero or more characters.Optional.\n        in: query\n        name: names\n        schema:\n          items:\n            type: object\n          type: array\n      - description: Includes (true) destroyed protection groups that are in the eradication\n          pending state. Time remaining isdisplayed in seconds. The pending option\n          can also be used with the schedule, retention, space, or snapoptions to\n          include a list of pending protection groups or snapshots.Optional.\n        in: query\n        name: pending\n        schema:\n          type: boolean\n      - description: Lists (true) destroyed protection groups that are in the eradication\n          pending state. Time remaining is displayedin seconds. The pending option\n          can also be used with the schedule, retention, space, or snap optionsto\n          include a list of pending protection groups or snapshots.Optional.\n        in: query\n        name: pending_only\n        schema:\n          type: boolean\n      - description: Displays (true) the source/target retention policy.Optional.\n        in: query\n        name: retention\n        schema:\n          type: boolean\n      - description: Displays (true) the snapshot/replication schedule.Optional.\n        in: query\n        name: schedule\n        schema:\n          type: boolean\n      - description: Lists all snapshots (true). Can be used with the space parameter\n          to list space consumption for all snapshots.Optional.\n        in: query\n        name: snap\n        schema:\n          type: boolean\n      - description: Lists (true) protection groups and snapshots created on this\n          array. The source option can be used with theschedule, retention, space,\n          or snap options.Optional.\n        in: query\n        name: source\n        schema:\n          type: boolean\n      - description: Displays (true) size and space consumption information for each\n          volume associated with each specifiedprotection group.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      - description: Lists (true) protection groups and snapshots replicated to this\n          array. The target option can be used with theschedule, retention, space,\n          or snap options.Optional.\n        in: query\n        name: target\n        schema:\n          type: boolean\n      - description: Displays (true) the total space consumption for all protection\n          groups. Must be used with the space parameter.Optional.\n        in: query\n        name: total\n        schema:\n          type: boolean\n      - description: Used with the snap parameter to display (true) replication data\n          transfer statistics, including data transfer starttime, data transfer end\n          time, data transfer progress, and amount of logical/physical data transferred.Optional.\n        in: query\n        name: transfer\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_pgroupExamples'\n          description: ''\n      tags:\n      - Protection\n    post:\n      description: Creates snapshots of one or more protection groups.\n      operationId: post/1.8/pgroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                apply_retention:\n                  description: Applies the retention schedule settings of the protection\n                    group to the snapshot.Optional.\n                  type: boolean\n                replicate:\n                  description: Queues this snapshot for replication to all allowed\n                    target arrays. Purity will begin replicating data to eachallowed\n                    target when all earlier replication sessions for the same protection\n                    group have been completed to thattarget, excluding those started\n                    with replicate_now. May not be used with replicate_now.Optional.\n                  type: boolean\n                replicate_now:\n                  description: Replicates this snapshot immediately to all allowed\n                    target arrays. May not be used with replicate.Optional.\n                  type: boolean\n                snap:\n                  description: Must be set to true to signify that a snapshot is being\n                    created.\n                  type: boolean\n                source:\n                  description: Generates a snapshot for each of the protection groups\n                    specified.\n                  items:\n                    type: object\n                  type: array\n                suffix:\n                  description: Specifies a name suffix for the snapshot to be created.Optional.\n                  type: string\n              required:\n              - snap\n              - source\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_pgroupExamples'\n          description: ''\n      tags:\n      - Protection\n  /1.8/pgroup/{pgroup}:\n    delete:\n      description: Destroys or eradicates the specified protection group or protection\n        group snapshot.\n      operationId: delete/1.8/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      - description: Eradicates the destroyed protection group or protection group\n          snapshot. If destroying or eradicating aprotection group, its protection\n          group snapshots are also destroyed or eradicated.Optional.\n        in: query\n        name: eradicate\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_pgroup_{pgroup}Examples'\n          description: ''\n      tags:\n      - Protection\n    get:\n      description: Lists the attributes for the specified protection group or protection\n        group snapshot.If listing protection group snapshot attributes, the snap parameter\n        must be specified.\n      operationId: get/1.8/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      - description: Includes (true) destroyed protection groups that are in the eradication\n          pending state. Time remaining isdisplayed in seconds. The pending option\n          can also be used with the schedule, retention, space, or snapoptions to\n          include a list of pending protection groups or snapshots.Optional.\n        in: query\n        name: pending\n        schema:\n          type: boolean\n      - description: Used with the snap parameter to list (true) destroyed protection\n          group snapshots that are in the eradicationpending state. Time remaining\n          is displayed in seconds.Optional.\n        in: query\n        name: pending_only\n        schema:\n          type: boolean\n      - description: Displays (true) the source/target retention policy.Optional.\n        in: query\n        name: retention\n        schema:\n          type: boolean\n      - description: Displays (true) the snapshot/replication schedule.Optional.\n        in: query\n        name: schedule\n        schema:\n          type: boolean\n      - description: If listing the attributes for a specified protection group, set\n          snap to true to list all snapshots within theprotection group. If listing\n          the attributes for a specified protection group snapshot, always set snap\n          to true.Can be used with the space parameter to list space consumption for\n          all snapshots.Optional if listing attributes for a specified protection\n          group. Required if listing attributes for a specifiedprotection group snapshot.\n        in: query\n        name: snap\n        schema:\n          type: boolean\n      - description: Displays (true) size and space consumption information for each\n          volume associated with each specifiedprotection group.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      - description: Used with the snap parameter to display (true) the total space\n          consumption for all snapshots of this protectiongroup. Must be used with\n          the space parameter.Optional.\n        in: query\n        name: total\n        schema:\n          type: boolean\n      - description: Used with the snap parameter to display (true) replication data\n          transfer statistics, including data transfer starttime, data transfer end\n          time, data transfer progress, and amount of logical/physical data transferred.Optional.\n        in: query\n        name: transfer\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_pgroup_{pgroup}Examples'\n          description: ''\n      tags:\n      - Protection\n    post:\n      description: Creates a protection group with the specified name or copies a\n        protection group.When copying a protection group, the destination protection\n        group is created if it did not exist previously.\n      operationId: post/1.8/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                hgrouplist:\n                  description: List of one or more host groups to be included in the\n                    new protection group.Optional.\n                  items:\n                    type: object\n                  type: array\n                hostlist:\n                  description: List of one or more hosts to be included in the new\n                    protection group.Optional.\n                  items:\n                    type: object\n                  type: array\n                overwrite:\n                  description: When copying a protection group, overwrite (true) volumes\n                    in the destination protection group that have thesame name as\n                    the volumes in the source protection group. Without the overwrite=true\n                    parameter, the copycommand fails if any volume name collisions\n                    are found. With the overwrite=true parameter, both thesource and\n                    destination protection groups must contain exactly the same volumes\n                    (volume names), otherwisethe entire copy command fails.Optional.\n                  type: boolean\n                source:\n                  description: The source pgroup or pgroup snapshot to copy from.Optional.\n                  type: string\n                targetlist:\n                  description: List of one or more targets to be included in the new\n                    protection group.Optional.\n                  items:\n                    type: object\n                  type: array\n                vollist:\n                  description: List of one or more volumes to be included in the new\n                    protection group.Optional.\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_pgroup_{pgroup}Examples'\n          description: ''\n      tags:\n      - Protection\n    put:\n      description: Modifies a protection group, its snapshot/replication schedule\n        or its retention policy.At least one parameter must be specified.\n      operationId: put/1.8/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: If set to \"recover\", recovers a destroyed protection\n                    group or snapshot.Optional.\n                  type: string\n                addhgrouplist:\n                  description: Adds a list of host groups to the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                addhostlist:\n                  description: Adds a list of hosts to the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                addtargetlist:\n                  description: Adds a list of target arrays to the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                addvollist:\n                  description: Adds a list of volumes to the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                all_for:\n                  description: Modifies the retention policy of the protection group.\n                    Specifies the length of time to keep the snapshots on thesource\n                    array before they are eradicated.Optional.\n                  type: integer\n                allowed:\n                  description: Allows (true) or disallows (false) a protection group\n                    from being replicated.Optional.\n                  type: boolean\n                days:\n                  description: Modifies the retention policy of the protection group.\n                    Specifies the number of days to keep the per_daysnapshots beyond\n                    the all_for period before they are eradicated.Optional.\n                  type: integer\n                hgrouplist:\n                  description: Replaces the list of member host groups.Optional.\n                  items:\n                    type: object\n                  type: array\n                hostlist:\n                  description: Replaces the list of member hosts.Optional.\n                  items:\n                    type: object\n                  type: array\n                name:\n                  description: Renames a protection group.Optional.\n                  type: string\n                per_day:\n                  description: Modifies the retention policy of the protection group.\n                    Specifies the number of per_day snapshots to keepbeyond the all_for\n                    period.Optional.\n                  type: integer\n                remhgrouplist:\n                  description: Removes a list of host groups from the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                remhostlist:\n                  description: Removes a list of hosts from the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                remtargetlist:\n                  description: Removes a list of target arrays from the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                remvollist:\n                  description: Removes a list of volumes from the existing list.Optional.\n                  items:\n                    type: object\n                  type: array\n                replicate_at:\n                  description: Modifies the replication schedule of the protection\n                    group. Specifies the preferred time, on the hour, at which toreplicate\n                    the snapshots.Optional.\n                  type: integer\n                replicate_blackout:\n                  description: Modifies the replication schedule of the protection\n                    group. Specifies the range of time at which to suspendreplication.\n                    See the example for the dictionary format.Optional.\n                  type: object\n                replicate_enabled:\n                  description: Used to enable (true) or disable (false) the protection\n                    group replication schedule.Optional.\n                  type: boolean\n                replicate_frequency:\n                  description: Modifies the replication schedule of the protection\n                    group. Specifies the replication frequency.Optional.\n                  type: integer\n                snap_at:\n                  description: Modifies the snapshot schedule of the protection group.\n                    Specifies the preferred time, on the hour, at which togenerate\n                    the snapshot.Optional.\n                  type: integer\n                snap_enabled:\n                  description: Used to enable (true) or disable (false) the protection\n                    group snapshot schedule.Optional.\n                  type: boolean\n                snap_frequency:\n                  description: Modifies the snapshot schedule of the protection group.\n                    Specifies the snapshot frequency.Optional.\n                  type: integer\n                target_all_for:\n                  description: Modifies the retention policy of the protection group.\n                    Specifies the length of time to keep the replicatedsnapshots on\n                    the target arrays.Optional.\n                  type: integer\n                target_days:\n                  description: Modifies the retention policy of the protection group.\n                    Specifies the number of days to keep the target_per_dayreplicated\n                    snapshots beyond the target_all_for period before they are eradicated.Optional.\n                  type: integer\n                target_per_day:\n                  description: Modifies the retention policy of the protection group.\n                    Specifies the number of per_day replicated snapshots tokeep beyond\n                    the target_all_for period.Optional.\n                  type: integer\n                targetlist:\n                  description: Replaces the list of member target arrays.Optional.\n                  items:\n                    type: object\n                  type: array\n                vollist:\n                  description: Replaces the list of member volumes.Optional.\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_pgroup_{pgroup}Examples'\n          description: ''\n      tags:\n      - Protection\n  /1.8/port:\n    get:\n      description: Lists array ports and the worldwide names assigned to each port.\n      operationId: get/1.8/port\n      parameters:\n      - description: Displays host worldwide names (both those discovered by Purity\n          and those assigned by administrators) and thearray ports (targets) on which\n          they are eligible to communicate.Optional.\n        in: query\n        name: initiators\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_portExamples'\n          description: ''\n      tags:\n      - Connection\n  /1.8/snmp:\n    get:\n      description: Lists designated SNMP managers and their communication and security\n        attributes.\n      operationId: get/1.8/snmp\n      parameters:\n      - description: SNMP v3 only. If set to true, displays the SNMP v3 engine ID\n          generated by Purity for the array.Optional.\n        in: query\n        name: engine_id\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_snmpExamples'\n          description: ''\n      tags:\n      - SNMP\n  /1.8/snmp/{manager}:\n    delete:\n      description: Stops communication with the specified managers and deletes the\n        SNMP manager object.\n      operationId: delete/1.8/snmp/{manager}\n      parameters:\n      - in: path\n        name: manager\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - SNMP\n    get:\n      description: Lists communication and security attributes for the specified SNMP\n        manager.\n      operationId: get/1.8/snmp/{manager}\n      parameters:\n      - in: path\n        name: manager\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - SNMP\n    post:\n      description: Creates a Purity SNMP manager object that identifies a host (SNMP\n        manager) and specifies the protocol attributes for communicating with it.Once\n        a manager object is created, the transmission of SNMP traps is immediately\n        enabled.\n      operationId: post/1.8/snmp/{manager}\n      parameters:\n      - in: path\n        name: manager\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                auth_passphrase:\n                  description: SNMP v3 only. Passphrase used by Purity to authenticate\n                    the array with the specified managers. The valuemust be between\n                    1 and 32 characters in length and from the set {[A-Z], [a-z],\n                    [0-9], _ (underscore), and -(hyphen)}.\n                  type: string\n                auth_protocol:\n                  description: Required if the auth-protocol value is set.SNMP v3\n                    only. Hash algorithm used to validate the authentication passphrase.\n                    Valid values are MD5 or SHA.Optional.\n                  type: string\n                community:\n                  description: SNMP v2c only. Manager community ID under which Purity\n                    is to communicate with the specified managers.The value must be\n                    between 1 and 32 characters in length and from the set {[A-Z],\n                    [a-z], [0-9], _ (underscore),and - (hyphen)}.\n                  type: string\n                host:\n                  description: Required if the version parameter is set to v2c.DNS\n                    hostname or IP address of a computer that hosts an SNMP manager\n                    to which Purity is to send trapmessages when it generates alerts.\n                  type: string\n                privacy_passphrase:\n                  description: SNMP v3 only. Passphrase used to encrypt SNMP messages.\n                    The value must be between 8 and 63 non-spaceASCII characters in\n                    length.\n                  type: string\n                privacy_protocol:\n                  description: Required if the privacy-protocol value is set.SNMP\n                    v3 only. Encryption protocol for SNMP messages. Valid values are\n                    AES or DES.Optional.\n                  type: string\n                user:\n                  description: SNMP v3 only. User ID recognized by the specified SNMP\n                    managers which Purity is to use in communicationswith them. The\n                    value must be between 1 and 32 characters in length and from the\n                    set {[A-Z], [a-z], [0-9], _(underscore), and -(hyphen)}.Optional.\n                  type: string\n                version:\n                  description: Version of the SNMP protocol to be used by Purity in\n                    communications with the specified manager(s). Theversion value\n                    is case sensitive. Valid values are v2c (default) and v3.Optional.\n                  type: string\n              required:\n              - host\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - SNMP\n    put:\n      description: Changes name or the protocol attributes of the specified SNMP manager.At\n        least one parameter must be specified.\n      operationId: put/1.8/snmp/{manager}\n      parameters:\n      - in: path\n        name: manager\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: Set the parameter to \"test\" to send a test trap to\n                    the specified SNMP manager.Optional.\n                  type: string\n                auth_passphrase:\n                  description: SNMP v3 only. Passphrase used by Purity to authenticate\n                    the array with the specified managers. The valuemust be between\n                    1 and 32 characters in length and from the set {[A-Z], [a-z],\n                    [0-9], _ (underscore), and -(hyphen)}.\n                  type: string\n                auth_protocol:\n                  description: Required if the auth-protocol value is set.SNMP v3\n                    only. Hash algorithm used to validate the authentication passphrase.\n                    Valid values are MD5 or SHA.Optional.\n                  type: string\n                community:\n                  description: SNMP v2c only. Manager community ID under which Purity\n                    is to communicate with the specified managers.The value must be\n                    between 1 and 32 characters in length and from the set {[A-Z],\n                    [a-z], [0-9], _ (underscore),and - (hyphen)}.\n                  type: string\n                host:\n                  description: Required if the version parameter is set to v2c.DNS\n                    hostname or IP address of a computer that hosts an SNMP manager\n                    to which Purity is to send trapmessages when it generates alerts.Optional.\n                  type: string\n                name:\n                  description: New name of the SNMP manager. SNMP manager names are\n                    used in Purity administrative commands, andhave no external significance.\n                    Changing the name of the SNMP manager does not change the protocol\n                    andsecurity attributes of the manager object.Optional.\n                  type: string\n                privacy_passphrase:\n                  description: SNMP v3 only. Passphrase used to encrypt SNMP messages.\n                    The value must be between 8 and 63 non-spaceASCII characters in\n                    length.\n                  type: string\n                privacy_protocol:\n                  description: Required if the privacy_protocol value is set.SNMP\n                    v3 only. Encryption protocol for SNMP messages. Valid values are\n                    AES or DES.Optional.\n                  type: string\n                user:\n                  description: SNMP v3 only. User ID recognized by the specified SNMP\n                    managers which Purity is to use in communicationswith them. The\n                    value must be between 1 and 32 characters in length and from the\n                    set {[A-Z], [a-z], [0-9], _(underscore), and -(hyphen)}.Optional.\n                  type: string\n                version:\n                  description: Version of the SNMP protocol to be used by Purity in\n                    communications with the specified manager(s). Theversion value\n                    is case sensitive. Valid values are v2c (default) and v3.Optional.\n                  type: string\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - SNMP\n  /1.8/subnet:\n    get:\n      description: Lists subnets and their statuses (enabled or disabled) and attributes.\n      operationId: get/1.8/subnet\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_subnetExamples'\n          description: ''\n      tags:\n      - Network\n  /1.8/subnet/{subnet}:\n    delete:\n      description: Deletes the specified subnet.\n      operationId: delete/1.8/subnet/{subnet}\n      parameters:\n      - in: path\n        name: subnet\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_subnet_{subnet}Examples'\n          description: ''\n      tags:\n      - Network\n    get:\n      description: Lists the attributes of the specified subnet.\n      operationId: get/1.8/subnet/{subnet}\n      parameters:\n      - in: path\n        name: subnet\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_subnet_{subnet}Examples'\n          description: ''\n      tags:\n      - Network\n    post:\n      description: Creates a subnet with the specified name.At least one parameter\n        must be specified.\n      operationId: post/1.8/subnet/{subnet}\n      parameters:\n      - in: path\n        name: subnet\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                gateway:\n                  description: Sets the IPv4 address (in ddd.ddd.ddd.ddd format) of\n                    the gateway through which the specified subnet is tocommunicate\n                    with the network.Optional.\n                  type: string\n                mtu:\n                  description: Maximum message transfer unit (packet) size for the\n                    subnet in bytes. Valid values are integers between 1280and 9216\n                    (inclusive). The default value is 1500.Optional.\n                  type: integer\n                prefix:\n                  description: Sets the IPv4 address to be associated with the specified\n                    subnet. Prefixes must be specified in CIDR format(ddd.ddd.ddd.ddd/dd).\n                  type: string\n                vlan:\n                  description: VLAN ID.Optional.\n                  type: integer\n              required:\n              - prefix\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_subnet_{subnet}Examples'\n          description: ''\n      tags:\n      - Network\n    put:\n      description: Modifies the attributes of the subnet.At least one parameter must\n        be specified.\n      operationId: put/1.8/subnet/{subnet}\n      parameters:\n      - in: path\n        name: subnet\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                enabled:\n                  description: Enables or disables a subnet.Optional. Cannot be used\n                    with any other parameters.\n                  type: boolean\n                gateway:\n                  description: Sets the IPv4 address (in ddd.ddd.ddd.ddd format) of\n                    the gateway through which the specified subnet is tocommunicate\n                    with the network.Optional.\n                  type: string\n                mtu:\n                  description: Maximum message transfer unit (packet) size for the\n                    subnet in bytes. Valid values are integers between 1280and 9216\n                    (inclusive). The default value is 1500.Optional.\n                  type: integer\n                name:\n                  description: Renames the specified subnet.Optional. Cannot be used\n                    with any other parameters.\n                  type: string\n                prefix:\n                  description: Sets the IPv4 address to be associated with the specified\n                    subnet. Prefixes must be specified in CIDR format(ddd.ddd.ddd.ddd/dd).Optional.\n                  type: string\n                vlan:\n                  description: VLAN ID.Optional.\n                  type: integer\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_subnet_{subnet}Examples'\n          description: ''\n      tags:\n      - Network\n  /1.8/volume:\n    get:\n      description: Lists volumes and snapshots and their attributes.Created time is\n        displayed in Greenwich Mean Time (GMT) and size is displayed in bytes.\n      operationId: get/1.8/volume\n      parameters:\n      - description: If set to monitor, displays real-time or historical performance\n          data. Time is displayed in Greenwich Mean Time(GMT).Optional.\n        in: query\n        name: action\n        schema:\n          type: string\n      - description: Displays all host-volume connections, either private or shared,\n          and the LUNs used by the hosts to address thevolumes.Optional.\n        in: query\n        name: connect\n        schema:\n          type: boolean\n      - description: 'If the action parameter is set to monitor, set this parameter\n          to display historical performance data at thespecified resolution.If the\n          space parameter is set to true, set this parameter to display historical\n          space data at the specifiedresolution.Valid historical values are: 1h, 3h,\n          24h, 7d, 30d, 90d, and 1y.Include the names parameter to only display historical\n          performance or space data for the specified volumes.Optional.'\n        in: query\n        name: historical\n        schema:\n          type: string\n      - description: Displays specified volumes. Enter multiple volume names in comma-separated\n          format. Volume names caninclude asterisk (*) wildcard characters to represent\n          zero or more characters.Optional.\n        in: query\n        name: names\n        schema:\n          items:\n            type: object\n          type: array\n      - description: Includes (true) destroyed volumes that are in the eradication\n          pending state. Time remaining is displayed inseconds.Optional.\n        in: query\n        name: pending\n        schema:\n          type: boolean\n      - description: Lists (true) destroyed volumes that are in the eradication pending\n          state. Time remaining is displayed inseconds.Optional.\n        in: query\n        name: pending_only\n        schema:\n          type: boolean\n      - description: Displays specified protection groups or protection group snapshots.\n          Only valid if the snap parameter is set totrue. Enter multiple names in\n          comma-separated format. Names can include asterisk (*) wildcard characters\n          torepresent zero or more characters.Optional.\n        in: query\n        name: pgrouplist\n        schema:\n          items:\n            type: object\n          type: array\n      - description: Used with the connect parameter to display (true) private host-volume\n          connections.Optional.\n        in: query\n        name: private\n        schema:\n          type: boolean\n      - description: Displays (true) all protected volumes and their associated protection\n          groups.Optional.\n        in: query\n        name: protect\n        schema:\n          type: boolean\n      - description: Used with the connect parameter to display (true) shared host-volume\n          connections.Optional.\n        in: query\n        name: shared\n        schema:\n          type: boolean\n      - description: Lists all snapshots (true).Optional.\n        in: query\n        name: snap\n        schema:\n          type: boolean\n      - description: Lists size and space consumption attributes for each volume.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_volumeExamples'\n          description: ''\n      tags:\n      - Volumes\n    post:\n      description: Creates snapshots of one or more volumes.\n      operationId: post/1.8/volume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                snap:\n                  description: Must be set to true to signify that a snapshot is being\n                    created.\n                  type: boolean\n                source:\n                  description: Names of one or more volumes to snapshot.\n                  items:\n                    type: object\n                  type: array\n                suffix:\n                  description: Specify a custom suffix that is added to the snapshot\n                    name.Optional.\n                  type: string\n              required:\n              - snap\n              - source\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_volumeExamples'\n          description: ''\n      tags:\n      - Volumes\n  /1.8/volume/{volume}:\n    delete:\n      description: Destroys or eradicates the specified volume or snapshot.\n      operationId: delete/1.8/volume/{volume}\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      - description: If set to true, eradicates the specified volume or snapshot.\n          If destroying or eradicating a volume, its snapshotsare also destroyed or\n          eradicated.After destroying a volume or snapshot, you can eradicate it to\n          immediately terminate the 24-hour eradicationperiod and begin storage reclamation.\n          Once eradication has begun, the volume or snapshot can no longer berecovered.If\n          set to false, destroys the specified volume or snapshot. The destroyed volume\n          or snapshot undergoes a 24-hour eradication pending period during which\n          time the volume or snapshot and its data can be fully recovered.After the\n          24-hour pending period, Purity eradicates the destroyed volume or snapshot.Optional.\n        in: query\n        name: eradicate\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/delete_1.8_volume_{volume}Examples'\n          description: ''\n      tags:\n      - Volumes\n    get:\n      description: Lists the attributes for the specified volume or snapshot.If listing\n        volume snapshot attributes, the snap parameter must be specified.\n      operationId: get/1.8/volume/{volume}\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      - description: If set to monitor, displays real-time or historical performance\n          data. Time is displayed in Greenwich Mean Time(GMT).Optional.\n        in: query\n        name: action\n        schema:\n          type: string\n      - description: 'If the action parameter is set to monitor, set this parameter\n          to display historical performance data at thespecified resolution.If the\n          space parameter is set to true, set this parameter to display historical\n          space data at the specifiedresolution.Valid historical values are: 1h, 3h,\n          24h, 7d, 30d, 90d, and 1y.Optional.'\n        in: query\n        name: historical\n        schema:\n          type: string\n      - description: If the volume is in the eradication pending state, set pending\n          to true to display the attributes for the destroyedvolume.Optional.\n        in: query\n        name: pending\n        schema:\n          type: boolean\n      - description: Lists (true) destroyed volumes that are in the eradication pending\n          state and their attributes.Optional.\n        in: query\n        name: pending_only\n        schema:\n          type: boolean\n      - description: Displays specified protection groups or protection group snapshots.\n          Only valid if snap is true. Only valid if thesnap parameter is set to true.\n          Enter multiple names in comma-separated format. Names can include asterisk(*)\n          wildcard characters to represent zero or more characters.Optional.\n        in: query\n        name: pgrouplist\n        schema:\n          items:\n            type: object\n          type: array\n      - description: Displays (true) the names of all protection groups associated\n          with the specified volume. If the volume is notprotected, returns an empty\n          response.Optional.\n        in: query\n        name: protect\n        schema:\n          type: boolean\n      - description: If listing the attributes for a specified volume, set snap to\n          true to list all snapshots within the volume. If listingthe attributes for\n          a specified volume snapshot, always set snap to true.Optional if listing\n          attributes for a specified volume. Required if listing attributes for a\n          specified volume snapshot.\n        in: query\n        name: snap\n        schema:\n          type: boolean\n      - description: Lists size and space consumption attributes for the specified\n          volume.Optional.\n        in: query\n        name: space\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_volume_{volume}Examples'\n          description: ''\n      tags:\n      - Volumes\n    post:\n      description: Creates a volume or copies a volume or snapshot.Either the size\n        or source parameter must be specified.\n      operationId: post/1.8/volume/{volume}\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                overwrite:\n                  description: When used with source, overwrites (true) an existing\n                    volume.Optional.\n                  type: boolean\n                size:\n                  description: number or string Creates a volume with the specified\n                    provisioned size.Enter the size as a number (bytes) or as a string\n                    with a single character unit symbol. Valid unit symbols are K,M,\n                    G, T, P, representing KiB, MiB, GiB, TiB, and PiB, respectively,\n                    where \"Ki\" denotes 2^10, \"Mi\" denotes 2^20,and so on. If the unit\n                    symbol is not specified, the unit defaults to bytes.Optional.\n                  type: string\n                source:\n                  description: Copies a volume or snapshot to create a new volume\n                    or replace an existing one. Specify the name of a volumeor snapshot\n                    whose data is copied to the volume specified.If the volume or\n                    snapshot replaces an existing volume, the overwrite parameter\n                    must also be specified. If thevolume or snapshot replaces an existing\n                    volume, an undo snapshot is automatically taken (providing a 24-hourwindow\n                    during which the previous contents can be retrieved).Optional.\n                  type: string\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post_1.8_volume_{volume}Examples'\n          description: ''\n      tags:\n      - Volumes\n    put:\n      description: Recovers and renames the specified volume or volume snapshot, or\n        resizes the specified volume.Either the size, action or name parameter must\n        be specified.\n      operationId: put/1.8/volume/{volume}\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: Recovers the contents of the specified volume or volume\n                    snapshot. Set the parameter to recover.Optional.\n                  type: string\n                name:\n                  description: Renames the specified volume or volume snapshot.When\n                    renaming a snapshot, only the suffix can be changed.Optional.\n                  type: string\n                size:\n                  description: number or string Changes the provisioned size of the\n                    volume. If the new volume size is smaller than the original, then\n                    thetruncate parameter needs to be set to true.Enter the size as\n                    a number (bytes) or as a string with a single character unit symbol.\n                    Valid unit symbols are K,M, G, T, P, representing KiB, MiB, GiB,\n                    TiB, and PiB, respectively, where \"Ki\" denotes 2^10, \"Mi\" denotes\n                    2^20,and so on. If the unit symbol is not specified, the unit\n                    defaults to bytes.Optional.\n                  type: string\n                truncate:\n                  description: Truncates (true) the volume. When a volume is truncated,\n                    Purity automatically takes an undo snapshot,providing a 24-hour\n                    window during which the previous contents can be retrieved. After\n                    truncating a volume, itsprovisioned size can be subsequently increased,\n                    but the data in truncated sectors cannot be retrieved.Required\n                    if the volume size is set to a size that is smaller than the original.\n                  type: boolean\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/put_1.8_volume_{volume}Examples'\n          description: ''\n      tags:\n      - Volumes\n  /1.8/volume/{volume}/diff:\n    get:\n      description: Lists block differences for the specified volume snapshot.\n      operationId: get/1.8/volume/{volume}/diff\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      - description: Snapshot name to be used as the base for the diff. If a base\n          snapshot is not specified, all mapped blocks forthe volume are returned.Optional.\n        in: query\n        name: base\n        schema:\n          type: string\n      - description: number or string Granularity, in bytes, at which to compare.\n        in: query\n        name: block_size\n        required: true\n        schema:\n          type: string\n      - description: Length of the region, in bytes, to compare.\n        in: query\n        name: length\n        required: true\n        schema:\n          type: string\n      - description: Absolute offset, in bytes, of the region to compare. Must be\n          a multiple of block_size.Optional.\n        in: query\n        name: offset\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_volume_{volume}_diffExamples'\n          description: ''\n      tags:\n      - Volumes\n  /1.8/volume/{volume}/hgroup:\n    get:\n      description: Lists shared connections for the specified volume.\n      operationId: get/1.8/volume/{volume}/hgroup\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_volume_{volume}_hgroupExamples'\n          description: ''\n      tags:\n      - Volumes\n  /1.8/volume/{volume}/host:\n    get:\n      description: Lists private connections for the specified volume.\n      operationId: get/1.8/volume/{volume}/host\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/get_1.8_volume_{volume}_hostExamples'\n          description: ''\n      tags:\n      - Volumes\n  /1.8/volume/{volume}/pgroup/{pgroup}:\n    delete:\n      description: Removes a volume member from a protection group.\n      operationId: delete/1.8/volume/{volume}/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Volumes\n    post:\n      description: Adds a volume to a protection group.You can only add members of\n        the same object type to a protection group. For example, you cannot add hosts\n        or host groups to a protection group thatcontains volumes.\n      operationId: post/1.8/volume/{volume}/pgroup/{pgroup}\n      parameters:\n      - in: path\n        name: volume\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: pgroup\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties: {}\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - Volumes\n  /api_version:\n    get:\n      description: Lists supported API versions on this array.\n      responses:\n        200:\n          description: List supported API versions\n      tags:\n      - API\nservers:\n- description: Local host, PureSwagger Proxy, set array IP at top of page.  API calls\n    are proxied to array.\n  url: /api\ntags:\n- description: List APIs\n  name: API\n- description: Create and destroy REST sessions.\n  name: Authentication\n- description: View and manage the array, and administer the phonehome and remote\n    assist features.\n  name: Array\n- description: View and manage volumes and snapshots.\n  name: Volumes\n- description: View, create, and manage hosts.\n  name: Hosts\n- description: View, create, and manage host groups.\n  name: Host\n- description: View, create, and manage protection groups.\n  name: Protection\n- description: View array host connection port attributes.\n  name: Connection\n- description: View a list of email addresses designated to receive Purity alerts,\n    test the alert feature, enable or disable alert notifications, designate email\n    addresses toreceive Purity alerts, and remove email addresses from the list of\n    designated alert recipients. View a list of alert events, audit records, and user\n    loginsessions. Flag alert and audit messages.\n  name: Alerts\n- description: View and set SNMP manager and trap message attributes.\n  name: SNMP\n- description: View and manage SSL certificates.\n  name: SSL\n- description: View and set DNS and network interface attributes.\n  name: Network\n- description: View and manage array hardware components.\n  name: Hardware\n- description: View and manage users and directory service configurations.\n  name: Users\n",
			"canonicalURL": "/github.com/PureStorage-OpenConnect/swagger@3b72a6a121e8ed68643becc1ff2e8a0ade3d2117/-/blob/html/specs/FlashArray%20REST%20v1.8.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PureStorage-OpenConnect/swagger/blob/3b72a6a121e8ed68643becc1ff2e8a0ade3d2117/html/specs/FlashArray REST v1.8.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: at 1:52228: invalid name: \"put_1.8_volume_{volume}Examples\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}