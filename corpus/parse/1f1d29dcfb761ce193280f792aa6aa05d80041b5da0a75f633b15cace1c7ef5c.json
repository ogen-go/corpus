{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/osscameroon/yotas"
		},
		"file": {
			"name": "specs.yaml",
			"size": 0,
			"path": "docs/backend/static/api/specs.yaml",
			"byteSize": 35472,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.0.0\n  title: Yotas API\n\nservers:\n  - url: http://localhost:8080/v1\n  - url: https://api.yotas.app/v1\n\nsecurity:\n  - bearerAuth: [ ]\n\n\ntags:\n  - name: user_model\n    x-displayName: User\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Users\"/\u003e\n  - name: organisation_model\n    x-displayName: Organisation\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Organisations\"/\u003e\n  - name: organisation_user_model\n    x-displayName: Organisation User\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/OrganisationUsers\"/\u003e\n  - name: wallet_model\n    x-displayName: Wallet\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Wallets\"/\u003e\n  - name: operation_model\n    x-displayName: Operation\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Operations\"/\u003e\n  - name: order_model\n    x-displayName: Order\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Orders\"/\u003e\n  - name: order_item_model\n    x-displayName: Order Item\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/OrderItems\"/\u003e\n  - name: article_model\n    x-displayName: Article\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Articles\"/\u003e\n  - name: picture_model\n    x-displayName: Pictures\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Pictures\"/\u003e\n  - name: contributions_model\n    x-displayName: Contributions\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Contributions\"/\u003e\n\n\n\n\nx-tagGroups:\n  - name: User Management\n    tags:\n      - Auth\n      - Users\n  - name: Organisation\n    tags:\n      - Organisations\n      - OrganisationUsers\n      - Wallets\n      - Operations\n      - Orders\n      - OrderItems\n      - Articles\n      - Pictures\n      - Contributions\n  - name: Models\n    tags:\n      - user_model\n      - organisation_model\n      - organisation_user_model\n      - wallet_model\n      - operation_model\n      - order_model\n      - order_item_model\n      - article_model\n      - picture_model\n      - contributions_model\n\npaths:\n  /auth:\n    get:\n      tags:\n        - Auth\n      summary: Get Redirection URL\n      description: Get authentication URL // TODO - Ecrire une bonne description\n      security: [ ]\n      responses:\n        \"200\":\n          description: Successfull response\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - url\n                properties:\n                  url:\n                    type: string\n    post:\n      tags:\n        - Auth\n      summary: Authenticate\n      description: Login if the account exists, else create a new account\n      security: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - code\n                - state\n              properties:\n                code:\n                  type: string\n                state:\n                  type: string\n      responses:\n        \"200\":\n          description: Successfull response\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - user\n                  - token\n                properties:\n                  user:\n                    $ref: \"#/components/schemas/Users\"\n                  token:\n                    type: string\n        \"400\":\n          description: Invalid state or code\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  messages:\n                    type: array\n                    items:\n                      type: string\n\n  /users/{userId}:\n    get:\n      tags:\n        - Users\n      summary: Retrieve one user\n      description: Retrieve informations of a user\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Users\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n\n  /users/{userId}/deactivate:\n    post:\n      tags:\n        - Users\n      summary: Deactivate a user\n      description: Deactivate the account. Deactivated account are deleted after 30 days\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                reason:\n                  type: string\n      responses:\n        \"200\":\n          description: Account deactivated\n        \"400\":\n          description: Cannot deactivate account when it is the only admin of an organisation\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n\n  /organisations:\n    get:\n      tags:\n        - Organisations\n      description: List all organisations\n      security: [ ]\n      parameters:\n        - $ref: \"#/components/parameters/PageLimit\"\n        - $ref: \"#/components/parameters/PageOffset\"\n        - $ref: \"#/components/parameters/Search\"\n      responses:\n        \"200\":\n          description: successfull response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  limit:\n                    type: number\n                  offset:\n                    type: number\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      $ref: \"#/components/schemas/Organisations\"\n\n    post:\n      tags:\n        - Organisations\n      description: Create a new organisation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Organisations\"\n      responses:\n        \"200\":\n          description: successfull response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organisations\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n\n  /pictures:\n    post:\n      tags:\n        - Pictures\n      summary: Create a picture\n      description: Upload a picture on the system\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - file\n                - alt_text\n              properties:\n                file:\n                  type: object\n                alt_text:\n                  type: string\n      responses:\n        \"200\":\n          description: Picture created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pictures\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n\n  /pictures/{picture_id}:\n    get:\n      tags:\n        - Pictures\n      summary: Retrieve a picture\n      security: [ ]\n      responses:\n        \"200\":\n          description: Picture retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pictures\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n  /articles:\n    get:\n      tags:\n        - Articles\n      summary: List Articles\n      security: [ ]\n      description: List all articles on the organisation shop\n      parameters:\n        - $ref: \"#/components/parameters/PageLimit\"\n        - $ref: \"#/components/parameters/PageOffset\"\n        - $ref: \"#/components/parameters/Search\"\n        - $ref: \"#/components/parameters/Tenant\"\n        - name: price_gte\n          in: query\n          description: The minimum price\n          schema:\n            type: number\n        - name: price_lte\n          in: query\n          description: The maximum price\n          schema:\n            type: number\n        - name: category\n          in: query\n          description: Category Id\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: The sorting criteria\n          schema:\n            type: string\n            enum:\n              - date\n              - price\n              - popularity\n              - name\n      responses:\n        \"200\":\n          description: Successfull Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  limit:\n                    type: number\n                  offset:\n                    type: number\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      $ref: \"#/components/schemas/Articles\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n\n    post:\n      tags:\n        - Articles\n      description: Create an Article\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Articles\"\n      responses:\n        \"200\":\n          description: Article Created Successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Articles\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n\n  /article/{articleId}/:\n    get:\n      tags:\n        - Articles\n      security: [ ]\n      description: Retrieve an Article\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      responses:\n        \"200\":\n          description: Successfull Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Articles\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n    put:\n      tags:\n        - Articles\n      description: Update the Article\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Articles\"\n      responses:\n        \"200\":\n          description: Successfulll Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Articles\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n    delete:\n      tags:\n        - Articles\n      description: Delete an Article\n      responses:\n        \"200\":\n          description: Article Deleted\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n  /articles/random:\n    description: Random articles\n    get:\n      description: list 3 articles randomly from an random selected organisation\n      tags:\n        - Articles \n      responses:\n        \"200\":\n          description: Successfull response\n          content:\n            application/json:\n              schema: \n                type: \"object\"\n                properties:\n                  organisation: \n                    type: \"object\"\n                    $ref: \"#/components/schemas/Organisations\"\n                  articles: \n                    type: \"array\"\n                    items:\n                      type: \"object\"\n                      $ref: \"#/components/schemas/Articles\"\n\n\n  /organisations/{organisationId}:\n    get:\n      tags:\n        - Organisations\n      description: Retrieve organisation infos\n      responses:\n        \"200\":\n          description: Successfull response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organisations\"\n\n  /orders:\n    post:\n      tags:\n        - Orders\n      description: Create a new Order\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Orders\"\n      responses:\n        \"200\":\n          description: Order Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Orders\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n\n    get:\n      description: List orders of an organisation\n      tags:\n        - Orders\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n        - $ref: \"#/components/parameters/PageLimit\"\n        - $ref: \"#/components/parameters/PageOffset\"\n        - $ref: \"#/components/parameters/State\"\n      responses:\n        \"200\":\n          description: Orders fetched successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  limit:\n                    type: number\n                  offset:\n                    type: number\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Orders\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n\n  /orders/wallet:\n    get:\n      description: List orders of a wallet\n      tags:\n        - Orders\n      parameters:\n        - $ref: \"#/components/parameters/Wallet\"\n        - $ref: \"#/components/parameters/Tenant\"\n        - $ref: \"#/components/parameters/PageLimit\"\n        - $ref: \"#/components/parameters/PageOffset\"\n        - $ref: \"#/components/parameters/State\"\n      responses:\n        \"200\":\n          description: Orders fetched successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  limit:\n                    type: number\n                  offset:\n                    type: number\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Orders\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n\n  /orders/{orderId}:\n    get:\n      description: Retrieve an Order\n      tags:\n        - Orders\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      responses:\n        \"200\":\n          description: Order retrieved successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Orders\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n    put:\n      summary: Update an oder\n      description: |\n        - They can update an order if it is not yet paid\n      tags:\n        - Orders\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Orders\"\n      responses:\n        \"200\":\n          description: \"Order updated successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Orders\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n    delete:\n      summary: Delete the order\n      description: |\n        - An order can be delete if it is canceled or it is not yet paid\n        - Only the owner of the command or an admin can delete an order\n      tags:\n        - Orders\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      responses:\n        \"200\":\n          description: Order deleted\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n  /orders/{orderId}/pay:\n    post:\n      tags:\n        - Orders\n      summary: Pay an order\n      description: |\n        The user that create the order can perform this action, when it is done it walled is debited\n        of the order total amount\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          application/json:\n            schema: { }\n      responses:\n        \"200\":\n          description: Payment processed successfully\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n  /orders/{orderId}/process:\n    post:\n      summary: Process an order\n      description: |\n        This endpoint is used by an admin to reject or accept an order.\n        If the order is rejected, we refund the owner of the order\n      tags:\n        - Orders\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accepted\n              properties:\n                reason:\n                  type: string\n                  example: ok\n                accepted:\n                  type: boolean\n                  example: true\n      responses:\n        \"200\":\n          description: Order processed\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n  /contributions:\n    get:\n      description: List contributions\n      tags:\n        - Contributions\n      security: [ ]\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n        - $ref: \"#/components/parameters/Search\"\n        - $ref: \"#/components/parameters/PageLimit\"\n        - $ref: \"#/components/parameters/PageOffset\"\n        - $ref: \"#/components/parameters/User\"\n      responses:\n        \"200\":\n          description: Contributions retrieved\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  limit:\n                    type: number\n                  offset:\n                    type: number\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Contributions\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n\n  /contributions/{contributionId}:\n    get:\n      description: Retrieve a contribution\n      security: [ ]\n      tags:\n        - Contributions\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      responses:\n        \"200\":\n          description: Contribution Retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contributions\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n  /contributions/{contributionId}/set_yotas:\n    post:\n      summary: Attribute yotas to a contribution\n      description: Define the amount of yotas that will be rewarded to the contributor\n      tags:\n        - Contributions\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - amount\n              properties:\n                amount:\n                  type: number\n                  example: 25\n      responses:\n        \"200\":\n          description: Yotas seted\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n\n  /contributions/{contributionId}/reward:\n    post:\n      summary: Reward Contributor\n      description: |\n        Credit the wallet of the contributor with the amount of yotas associated to the contribution\n        After the operation the contribution must be marked rewarded\n        If a contribution has already been rewarded a 400 error is returned\n      tags:\n        - Contributions\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      requestBody:\n        content:\n          application/json:\n            schema: { }\n      responses:\n        \"200\":\n          description: Wallet Credited\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: Wallet credited\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n        \"404\":\n          $ref: \"#/components/responses/404Error\"\n\n  /wallet:\n    get:\n      tags:\n        - Wallets\n      summary: Retrieve user wallet\n      description: Get the wallet of a user for a specific organisation\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n      responses:\n        \"200\":\n          description: Wallet retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Wallets\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n\n  /operations:\n    get:\n      summary: List operations of a user\n      description: List operations perform on a user wallet in an organisation\n      tags:\n        - Operations\n      parameters:\n        - $ref: \"#/components/parameters/Tenant\"\n        - $ref: \"#/components/parameters/PageOffset\"\n        - $ref: \"#/components/parameters/PageLimit\"\n      responses:\n        \"200\":\n          description: Operations retrieved\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  offset:\n                    type: number\n                  limit:\n                    type: number\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Operations\"\n        \"400\":\n          $ref: \"#/components/responses/400TenantError\"\n        \"401\":\n          $ref: \"#/components/responses/401Error\"\n        \"403\":\n          $ref: \"#/components/responses/403Error\"\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Users:\n      type: object\n      required:\n        - name\n        - email\n        - github_id\n      properties:\n        id:\n          type: number\n          readOnly: true\n          example: 1\n        github_profile:\n          type: object\n          properties:\n            name:\n              type: string\n              description: User name\n              example: John Doe\n            email:\n              type: string\n              description: User email\n              example: john.doe@gmail.com\n            github_id:\n              type: string\n              description: Github handle\n              example: johndoe\n            avatar_url:\n              type: string\n              description: Url of the user github avatar\n              example: https://avatars.githubusercontent.com/u/32160720\n        active:\n          type: boolean\n          description: Activation status\n          example: true\n        created_at:\n          type: string\n          description: Creation ISO datetime\n          example: '2021-06-02T16:46:45-01:00'\n          readOnly: true\n        updated_at:\n          type: string\n          description: Last update ISO datetime\n          example: '2021-06-02T16:46:45-01:00'\n          readOnly: true\n\n    Organisations:\n      type: object\n      required:\n        - name\n        - email\n        - description\n      properties:\n        id:\n          type: number\n          readOnly: true\n          example: 1\n        name:\n          type: string\n          example: OSS Cameroon\n        email:\n          type: string\n          example: osscameroon@gmail.com\n        logo:\n          type: string\n          example: https://avatars.githubusercontent.com/u/73784866\n        website:\n          type: string\n          example: https://osscameroon.com\n        description:\n          type: string\n          maxLength: 2000\n          example: Open source society driven by cameroonian developers\n        number_of_members:\n          type: number\n          description: Number of user in the organisation on Yotas\n          readOnly: true\n          example: 30\n        created_at:\n          type: string\n          example: '2021-06-12T12:06:30-01:00'\n          readOnly: true\n        updated_at:\n          type: string\n          example: '2021-06-12T12:06:30-01:00'\n          readOnly: true\n\n    OrganisationUsers:\n      type: object\n      required:\n        - organisation_id\n        - user_id\n        - role\n        - active\n      properties:\n        id:\n          type: number\n          readOnly: true\n          example: 1\n        organisation_id:\n          type: string\n          example: 1\n          readOnly: true\n        user_id:\n          type: string\n        role:\n          type: string\n          enum:\n            - admin\n            - accounter\n            - shoper\n            - regular\n          example: admin\n        active:\n          type: boolean\n          example: true\n        created_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n        updated_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n\n    Wallets:\n      type: object\n      required:\n        - organisation_id\n        - wallet_id\n        - user_id\n      properties:\n        id:\n          type: string\n          readOnly: true\n        organisation_id:\n          type: string\n          readOnly: true\n          example: 4\n        user_id:\n          type: string\n          readOnly: true\n          example: 2\n        wallet_id:\n          type: string\n          readOnly: true\n        balance:\n          type: number\n          example: 45\n          readOnly: true\n        created_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n        updated_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n\n    Operations:\n      type: object\n      required:\n        - wallet_id\n        - operation_type\n        - amount\n      properties:\n        id:\n          type: string\n          readOnly: true\n        wallet_id:\n          type: string\n          readOnly: true\n        amount:\n          type: number\n        description:\n          type: string\n        operation_type:\n          type: string\n          enum:\n            - debit\n            - credit\n            - refund\n        approved:\n          type: boolean\n        operation_hash:\n          type: string\n        created_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n        updated_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n\n    OrderItems:\n      type: object\n      required:\n        - article_id\n        - quantity\n      properties:\n        id:\n          type: string\n          readOnly: true\n          example: 1\n        article_id:\n          type: string\n          example: 4\n        article_price:\n          type: number\n          readOnly: true\n          description: Price at the momment of the order\n          example: 13\n        article:\n          type: object\n          readOnly: true\n          properties:\n            name:\n              type: string\n              example: Oss stickers\n            quantity:\n              type: string\n              description: Left in stocks\n              example: 10\n            picture_url:\n              type: string\n              description: small picture url\n              example: https://storage.yotas.app/small.png\n        quantity:\n          type: number\n          example: 2\n        created_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n        updated_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n\n    Orders:\n      type: object\n      required:\n        - wallet_id\n        - items\n      properties:\n        id:\n          type: number\n          readOnly: true\n          example: 1\n        wallet_id:\n          type: number\n          example: 2\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderItems'\n        total_amount:\n          type: number\n          readOnly: true\n          example: 145\n        state:\n          type: string\n          enum:\n            - not paid\n            - to review\n            - accepted\n            - declined\n          readOnly: true\n          example: 'not paid'\n        decision:\n          type: string\n          description: 'The reason why the order are accepted or declined'\n          readOnly: true\n        created_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n        updated_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n\n    Pictures:\n      type: object\n      properties:\n        id:\n          type: number\n          example: 1\n        organisation_id:\n          readOnly: true\n          type: number\n          example: 1\n        alt_text:\n          type: string\n          example: oss cameroon sticker image\n        original:\n          readOnly: true\n          type: string\n          description: URL of the original picture sent by user\n          example: https://storage.yotas.app/original.png\n        small:\n          type: string\n          readOnly: true\n          description: URL of the small version of the picture\n          example: https://storage.yotas.app/small.png\n        medium:\n          type: string\n          readOnly: true\n          description: URL of the medium version of the picture\n          example: https://storage.yotas.app/medium.png\n        large:\n          type: string\n          readOnly: true\n          description: URL of the large version of the picture\n          example: https://storage.yotas.app/large.png\n\n    Articles:\n      type: object\n      required:\n        - name\n        - quantity\n        - price\n      properties:\n        id:\n          type: number\n          readOnly: True\n          example: 1\n        name:\n          type: string\n          example: Oss Stickers\n        description:\n          type: string\n          example: Stickers for Oss open source projects\n        quantity:\n          type: number\n          example: 10\n        price:\n          type: number\n          example: 5\n        pictures:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Pictures\"\n\n        metadata:\n          type: string\n        created_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n        updated_at:\n          type: string\n          readOnly: true\n          example: '2021-06-12T12:40:01-01:00'\n\n    Contributions:\n      type: object\n      required:\n        - author\n        - type\n        - repository_id\n        - date\n        - github_link\n      properties:\n        id:\n          type: number\n          example: 1\n        organisation_id:\n          type: number\n          example: 1\n        author:\n          $ref: \"#/components/schemas/Users\"\n        type:\n          type: string\n          enum:\n            - pull_request\n            - issue\n          example: issue\n        date:\n          type: string\n          example: \"2021-07-08T08:09:01+00:00\"\n        github_link:\n          type: string\n          example: https://github.com/osscameroon/yotas/issues/1\n        yotas_attributed:\n          type: number\n          example: 25\n        rewarded:\n          type: boolean\n          example: false\n\n  parameters:\n    PageLimit:\n      name: limit\n      in: query\n      description: Limits the number of items on a page\n      schema:\n        type: integer\n    PageOffset:\n      name: offset\n      in: query\n      description: Specifies the page number to be displayed\n      schema:\n        type: integer\n    Search:\n      name: search\n      in: query\n      description: Specifies the keyword to look for in displayed items\n      schema:\n        type: integer\n    State:\n      name: state\n      in: query\n      description: Specifies the orders state\n      schema:\n        type: string\n    Tenant:\n      name: Tenant\n      required: true\n      in: header\n      description: Id of the organisation for which the request is addressed\n      schema:\n        type: string\n    Wallet:\n      name: wallet\n      required: true\n      in: query\n      description: Wallet of an organisation user\n      schema:\n        type: string\n    User:\n      name: user\n      required: false\n      in: query\n      description: Filter with user ID\n      schema:\n        type: string\n\n  responses:\n    400Error:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              messages:\n                type: array\n                items:\n                  type: string\n    401Error:\n      description: Access token is missing or invalid\n    403Error:\n      description: Access forbidden\n    404Error:\n      description: Resource not  found\n    400TenantError:\n      description: You must provide Tenant (organisation Id) on Header"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /article/{articleId}/: get: operation \"\": parse path: path parameter not specified: \"articleId\""
}