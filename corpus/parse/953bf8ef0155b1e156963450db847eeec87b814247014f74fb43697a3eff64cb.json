{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql"
		},
		"file": {
			"name": "mybusinessaccountmanagement-v1.yaml",
			"size": 0,
			"path": "test/registry/src/googleapis.com/v1/services/mybusinessaccountmanagement-v1.yaml",
			"byteSize": 55680,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    AcceptInvitationRequest:\n      description: Request message for AccessControl.AcceptInvitation.\n      properties: {}\n      type: object\n    Account:\n      description: An account is a container for your location. If you are the only\n        user who manages locations for your business, you can use your personal Google\n        Account. To share management of locations with multiple users, [create a business\n        account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).\n      properties:\n        accountName:\n          description: Required. The name of the account. For an account of type `PERSONAL`,\n            this is the first and last name of the user account.\n          type: string\n        accountNumber:\n          description: Output only. Account reference number if provisioned.\n          readOnly: true\n          type: string\n        name:\n          description: Immutable. The resource name, in the format `accounts/{account_id}`.\n          type: string\n        organizationInfo:\n          $ref: '#/components/schemas/OrganizationInfo'\n          description: Output only. Additional info for an organization. This is populated\n            only for an organization account.\n          readOnly: true\n        permissionLevel:\n          description: Output only. Specifies the permission level the user has for\n            this account.\n          enum:\n          - PERMISSION_LEVEL_UNSPECIFIED\n          - OWNER_LEVEL\n          - MEMBER_LEVEL\n          readOnly: true\n          type: string\n        primaryOwner:\n          description: Required. Input only. The resource name of the account which\n            will be the primary owner of the account being created. It should be of\n            the form `accounts/{account_id}/`.\n          type: string\n        role:\n          description: Output only. Specifies the AccountRole of this account.\n          enum:\n          - ACCOUNT_ROLE_UNSPECIFIED\n          - PRIMARY_OWNER\n          - OWNER\n          - MANAGER\n          - SITE_MANAGER\n          readOnly: true\n          type: string\n        type:\n          description: Required. Contains the type of account. Accounts of type PERSONAL\n            and ORGANIZATION cannot be created using this API.\n          enum:\n          - ACCOUNT_TYPE_UNSPECIFIED\n          - PERSONAL\n          - LOCATION_GROUP\n          - USER_GROUP\n          - ORGANIZATION\n          type: string\n        verificationState:\n          description: Output only. If verified, future locations that are created\n            are automatically connected to Google Maps, and have Google+ pages created,\n            without requiring moderation.\n          enum:\n          - VERIFICATION_STATE_UNSPECIFIED\n          - VERIFIED\n          - UNVERIFIED\n          - VERIFICATION_REQUESTED\n          readOnly: true\n          type: string\n        vettedState:\n          description: Output only. Indicates whether the account is vetted by Google.\n            A vetted account is able to verify locations via the VETTED_PARTNER method.\n          enum:\n          - VETTED_STATE_UNSPECIFIED\n          - NOT_VETTED\n          - VETTED\n          - INVALID\n          readOnly: true\n          type: string\n      type: object\n    Admin:\n      description: An administrator of an Account or a location.\n      properties:\n        admin:\n          description: Optional. The name of the admin. When making the initial invitation,\n            this is the invitee's email address. On `GET` calls, the user's email\n            address is returned if the invitation is still pending. Otherwise, it\n            contains the user's first and last names. This field is only needed to\n            be set during admin creation.\n          type: string\n        name:\n          description: 'Immutable. The resource name. For account admins, this is\n            in the form: `accounts/{account_id}/admins/{admin_id}` For location admins,\n            this is in the form: `locations/{location_id}/admins/{admin_id}` This\n            field will be ignored if set during admin creation.'\n          type: string\n        pendingInvitation:\n          description: Output only. Indicates whether this admin has a pending invitation\n            for the specified resource.\n          readOnly: true\n          type: boolean\n        role:\n          description: Required. Specifies the role that this admin uses with the\n            specified Account or Location.\n          enum:\n          - ADMIN_ROLE_UNSPECIFIED\n          - PRIMARY_OWNER\n          - OWNER\n          - MANAGER\n          - SITE_MANAGER\n          type: string\n      type: object\n    DeclineInvitationRequest:\n      description: Request message for AccessControl.DeclineInvitation.\n      properties: {}\n      type: object\n    Empty:\n      description: 'A generic empty message that you can re-use to avoid defining\n        duplicated empty messages in your APIs. A typical example is to use it as\n        the request or the response type of an API method. For instance: service Foo\n        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON\n        representation for `Empty` is empty JSON object `{}`.'\n      properties: {}\n      type: object\n    Invitation:\n      description: Represents a pending invitation.\n      properties:\n        name:\n          description: Required. The resource name for the invitation. `accounts/{account_id}/invitations/{invitation_id}`.\n          type: string\n        role:\n          description: Output only. The invited role on the account.\n          enum:\n          - ADMIN_ROLE_UNSPECIFIED\n          - PRIMARY_OWNER\n          - OWNER\n          - MANAGER\n          - SITE_MANAGER\n          readOnly: true\n          type: string\n        targetAccount:\n          $ref: '#/components/schemas/Account'\n          description: The sparsely populated account this invitation is for.\n        targetLocation:\n          $ref: '#/components/schemas/TargetLocation'\n          description: The target location this invitation is for.\n        targetType:\n          description: Output only. Specifies which target types should appear in\n            the response.\n          enum:\n          - TARGET_TYPE_UNSPECIFIED\n          - ACCOUNTS_ONLY\n          - LOCATIONS_ONLY\n          readOnly: true\n          type: string\n      type: object\n    ListAccountAdminsResponse:\n      description: Response message for AccessControl.ListAccountAdmins.\n      properties:\n        accountAdmins:\n          description: A collection of Admin instances.\n          items:\n            $ref: '#/components/schemas/Admin'\n          type: array\n      type: object\n    ListAccountsResponse:\n      description: Response message for Accounts.ListAccounts.\n      properties:\n        accounts:\n          description: A collection of accounts to which the user has access. The\n            personal account of the user doing the query will always be the first\n            item of the result, unless it is filtered out.\n          items:\n            $ref: '#/components/schemas/Account'\n          type: array\n        nextPageToken:\n          description: If the number of accounts exceeds the requested page size,\n            this field is populated with a token to fetch the next page of accounts\n            on a subsequent call to `accounts.list`. If there are no more accounts,\n            this field is not present in the response.\n          type: string\n      type: object\n    ListInvitationsResponse:\n      description: Response message for AccessControl.ListInvitations.\n      properties:\n        invitations:\n          description: A collection of invitations that are pending for the account.\n            The number of invitations listed here cannot exceed 1000.\n          items:\n            $ref: '#/components/schemas/Invitation'\n          type: array\n      type: object\n    ListLocationAdminsResponse:\n      description: Response message for AccessControl.ListLocationAdmins.\n      properties:\n        admins:\n          description: A collection of Admins.\n          items:\n            $ref: '#/components/schemas/Admin'\n          type: array\n      type: object\n    OrganizationInfo:\n      description: Additional information stored for an organization.\n      properties:\n        address:\n          $ref: '#/components/schemas/PostalAddress'\n          description: Output only. The postal address for the account.\n          readOnly: true\n        phoneNumber:\n          description: Output only. The contact number for the organization.\n          readOnly: true\n          type: string\n        registeredDomain:\n          description: Output only. The registered domain for the account.\n          readOnly: true\n          type: string\n      type: object\n    PostalAddress:\n      description: 'Represents a postal address, e.g. for postal delivery or payments\n        addresses. Given a postal address, a postal service can deliver items to a\n        premise, P.O. Box or similar. It is not intended to model geographical locations\n        (roads, towns, mountains). In typical usage an address would be created via\n        user input or from importing existing data, depending on the type of process.\n        Advice on address input / editing: - Use an i18n-ready address widget such\n        as https://github.com/google/libaddressinput) - Users should not be presented\n        with UI elements for input or editing of fields outside countries where that\n        field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478'\n      properties:\n        addressLines:\n          description: Unstructured address lines describing the lower levels of an\n            address. Because values in address_lines do not have type information\n            and may sometimes contain multiple values in a single field (e.g. \"Austin,\n            TX\"), it is important that the line order is clear. The order of address\n            lines should be \"envelope order\" for the country/region of the address.\n            In places where this can vary (e.g. Japan), address_language is used to\n            make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\"\n            or \"en\" for small-to-large). This way, the most specific line of an address\n            can be selected based on the language. The minimum permitted structural\n            representation of an address consists of a region_code with all remaining\n            information placed in the address_lines. It would be possible to format\n            such an address very approximately without geocoding, but no semantic\n            reasoning could be made about any of the address components until it was\n            at least partially resolved. Creating an address only containing a region_code\n            and address_lines, and then geocoding is the recommended way to handle\n            completely unstructured addresses (as opposed to guessing which parts\n            of the address should be localities or administrative areas).\n          items:\n            type: string\n          type: array\n        administrativeArea:\n          description: Optional. Highest administrative subdivision which is used\n            for postal addresses of a country or region. For example, this can be\n            a state, a province, an oblast, or a prefecture. Specifically, for Spain\n            this is the province and not the autonomous community (e.g. \"Barcelona\"\n            and not \"Catalonia\"). Many countries don't use an administrative area\n            in postal addresses. E.g. in Switzerland this should be left unpopulated.\n          type: string\n        languageCode:\n          description: 'Optional. BCP-47 language code of the contents of this address\n            (if known). This is often the UI language of the input form or is expected\n            to match one of the languages used in the address'' country/region, or\n            their transliterated equivalents. This can affect formatting in certain\n            countries, but is not critical to the correctness of the data and will\n            never affect any validation or other non-formatting related operations.\n            If this value is not known, it should be omitted (rather than specifying\n            a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".'\n          type: string\n        locality:\n          description: 'Optional. Generally refers to the city/town portion of the\n            address. Examples: US city, IT comune, UK post town. In regions of the\n            world where localities are not well defined or do not fit into this structure\n            well, leave locality empty and use address_lines.'\n          type: string\n        organization:\n          description: Optional. The name of the organization at the address.\n          type: string\n        postalCode:\n          description: Optional. Postal code of the address. Not all countries use\n            or require postal codes to be present, but where they are used, they may\n            trigger additional validation with other parts of the address (e.g. state/zip\n            validation in the U.S.A.).\n          type: string\n        recipients:\n          description: Optional. The recipient at the address. This field may, under\n            certain circumstances, contain multiline information. For example, it\n            might contain \"care of\" information.\n          items:\n            type: string\n          type: array\n        regionCode:\n          description: 'Required. CLDR region code of the country/region of the address.\n            This is never inferred and it is up to the user to ensure the value is\n            correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html\n            for details. Example: \"CH\" for Switzerland.'\n          type: string\n        revision:\n          description: The schema revision of the `PostalAddress`. This must be set\n            to 0, which is the latest revision. All new revisions **must** be backward\n            compatible with old revisions.\n          format: int32\n          type: integer\n        sortingCode:\n          description: \"Optional. Additional, country-specific, sorting code. This\\\n            \\ is not used in most regions. Where it is used, the value is either a\\\n            \\ string like \\\"CEDEX\\\", optionally followed by a number (e.g. \\\"CEDEX\\\n            \\ 7\\\"), or just a number alone, representing the \\\"sector code\\\" (Jamaica),\\\n            \\ \\\"delivery area indicator\\\" (Malawi) or \\\"post office indicator\\\" (e.g.\\\n            \\ C\\xF4te d'Ivoire).\"\n          type: string\n        sublocality:\n          description: Optional. Sublocality of the address. For example, this can\n            be neighborhoods, boroughs, districts.\n          type: string\n      type: object\n    TargetLocation:\n      description: Represents a target location for a pending invitation.\n      properties:\n        address:\n          description: The address of the location to which the user is invited.\n          type: string\n        locationName:\n          description: The name of the location to which the user is invited.\n          type: string\n      type: object\n    TransferLocationRequest:\n      description: Request message for AccessControl.TransferLocation.\n      properties:\n        destinationAccount:\n          description: Required. Name of the account resource to transfer the location\n            to (for example, \"accounts/{account}\").\n          type: string\n      type: object\n  x-stackQL-resources:\n    accounts:\n      id: google.mybusinessaccountmanagement.accounts\n      methods:\n        create:\n          operation:\n            $ref: '#/paths/~1v1~1accounts/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1accounts/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: accounts\n      title: accounts\n    accounts.admins:\n      id: google.mybusinessaccountmanagement.accounts.admins\n      methods:\n        create:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1admins/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1admins~1{adminsId}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1admins/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1admins~1{adminsId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: accounts.admins\n      title: accounts.admins\n    accounts.invitations:\n      id: google.mybusinessaccountmanagement.accounts.invitations\n      methods:\n        accept:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1invitations~1{invitationsId}:accept/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        decline:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1invitations~1{invitationsId}:decline/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1accounts~1{accountsId}~1invitations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: accounts.invitations\n      title: accounts.invitations\n    locations:\n      id: google.mybusinessaccountmanagement.locations\n      methods:\n        transfer:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}:transfer/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: locations\n      title: locations\n    locations.admins:\n      id: google.mybusinessaccountmanagement.locations.admins\n      methods:\n        create:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1admins/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1admins~1{adminsId}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1admins/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1admins~1{adminsId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: locations.admins\n      title: locations.admins\nexternalDocs:\n  url: https://developers.google.com/my-business/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: The My Business Account Management API provides an interface for managing\n    access to a location on Google.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: My Business Account Management API\n  version: v1\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n  - format: google\n    url: https://mybusinessaccountmanagement.googleapis.com/$discovery/rest?version=v1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: mybusinessaccountmanagement\nopenapi: 3.0.0\npaths:\n  /v1/accounts:\n    get:\n      description: Lists all of the accounts for the authenticated user. This includes\n        all accounts that the user owns, as well as any accounts for which the user\n        has management rights.\n      operationId: mybusinessaccountmanagement.accounts.list\n      parameters:\n      - description: Optional. A filter constraining the accounts to return. The response\n          includes only entries that match the filter. If `filter` is empty, then\n          no constraints are applied and all accounts (paginated) are retrieved for\n          the requested account. For example, a request with the filter `type=USER_GROUP`\n          will only return user groups. The `type` field is the only supported filter.\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. How many accounts to fetch per page. The minimum supported\n          page_size is 2. The default and maximum is 20.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. If specified, the next page of accounts is retrieved.\n          The `pageToken` is returned when a call to `accounts.list` returns more\n          results than can fit into the requested page size.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Optional. The resource name of the account for which the list\n          of directly accessible accounts is to be retrieved. This only makes sense\n          for Organizations and User Groups. If empty, will return `ListAccounts`\n          for the authenticated user. `accounts/{account_id}`.\n        in: query\n        name: parentAccount\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAccountsResponse'\n          description: Successful response\n      tags:\n      - accounts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates an account with the specified name and type under the given\n        parent. - Personal accounts and Organizations cannot be created. - User Groups\n        cannot be created with a Personal account as primary owner. - Location Groups\n        cannot be created with a primary owner of a Personal account if the Personal\n        account is in an Organization. - Location Groups cannot own Location Groups.\n      operationId: mybusinessaccountmanagement.accounts.create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Successful response\n      tags:\n      - accounts\n  /v1/accounts/{accountsId}:\n    delete:\n      description: Removes the specified admin as a manager of the specified location.\n      operationId: mybusinessaccountmanagement.locations.admins.delete\n      parameters:\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - locations\n    get:\n      description: Gets the specified account. Returns `NOT_FOUND` if the account\n        does not exist or if the caller does not have access rights to it.\n      operationId: mybusinessaccountmanagement.accounts.get\n      parameters:\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Successful response\n      tags:\n      - accounts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Updates the Admin for the specified location. Only the AdminRole\n        of the Admin can be updated.\n      operationId: mybusinessaccountmanagement.locations.admins.patch\n      parameters:\n      - description: Required. The specific fields that should be updated. The only\n          editable field is role.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      - description: Optional. If true, the request is validated without actually\n          updating the account.\n        in: query\n        name: validateOnly\n        schema:\n          type: boolean\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Admin'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Admin'\n          description: Successful response\n      tags:\n      - locations\n  /v1/accounts/{accountsId}/admins:\n    get:\n      description: Lists all of the admins for the specified location.\n      operationId: mybusinessaccountmanagement.locations.admins.list\n      parameters:\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLocationAdminsResponse'\n          description: Successful response\n      tags:\n      - locations\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Invites the specified user to become an administrator for the specified\n        location. The invitee must accept the invitation in order to be granted access\n        to the location. See AcceptInvitation to programmatically accept an invitation.\n      operationId: mybusinessaccountmanagement.locations.admins.create\n      parameters:\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Admin'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Admin'\n          description: Successful response\n      tags:\n      - locations\n  /v1/accounts/{accountsId}/admins/{adminsId}:\n    delete:\n      description: Removes the specified admin as a manager of the specified location.\n      operationId: mybusinessaccountmanagement.locations.admins.delete\n      parameters:\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: adminsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - locations\n    get:\n      description: Gets the specified account. Returns `NOT_FOUND` if the account\n        does not exist or if the caller does not have access rights to it.\n      operationId: mybusinessaccountmanagement.accounts.get\n      parameters:\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: adminsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Successful response\n      tags:\n      - accounts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Updates the Admin for the specified location. Only the AdminRole\n        of the Admin can be updated.\n      operationId: mybusinessaccountmanagement.locations.admins.patch\n      parameters:\n      - description: Required. The specific fields that should be updated. The only\n          editable field is role.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      - description: Optional. If true, the request is validated without actually\n          updating the account.\n        in: query\n        name: validateOnly\n        schema:\n          type: boolean\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: adminsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Admin'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Admin'\n          description: Successful response\n      tags:\n      - locations\n  /v1/accounts/{accountsId}/invitations:\n    get:\n      description: Lists pending invitations for the specified account.\n      operationId: mybusinessaccountmanagement.accounts.invitations.list\n      parameters:\n      - description: Optional. Filtering the response is supported via the Invitation.target_type\n          field.\n        in: query\n        name: filter\n        schema:\n          type: string\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListInvitationsResponse'\n          description: Successful response\n      tags:\n      - accounts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/accounts/{accountsId}/invitations/{invitationsId}:accept:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Accepts the specified invitation.\n      operationId: mybusinessaccountmanagement.accounts.invitations.accept\n      parameters:\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: invitationsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AcceptInvitationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - accounts\n  /v1/accounts/{accountsId}/invitations/{invitationsId}:decline:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Declines the specified invitation.\n      operationId: mybusinessaccountmanagement.accounts.invitations.decline\n      parameters:\n      - in: path\n        name: accountsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: invitationsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeclineInvitationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - accounts\n  /v1/locations/{locationsId}/admins:\n    get:\n      description: Lists all of the admins for the specified location.\n      operationId: mybusinessaccountmanagement.locations.admins.list\n      parameters:\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLocationAdminsResponse'\n          description: Successful response\n      tags:\n      - locations\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Invites the specified user to become an administrator for the specified\n        location. The invitee must accept the invitation in order to be granted access\n        to the location. See AcceptInvitation to programmatically accept an invitation.\n      operationId: mybusinessaccountmanagement.locations.admins.create\n      parameters:\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Admin'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Admin'\n          description: Successful response\n      tags:\n      - locations\n  /v1/locations/{locationsId}/admins/{adminsId}:\n    delete:\n      description: Removes the specified admin as a manager of the specified location.\n      operationId: mybusinessaccountmanagement.locations.admins.delete\n      parameters:\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: adminsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - locations\n    get:\n      description: Gets the specified account. Returns `NOT_FOUND` if the account\n        does not exist or if the caller does not have access rights to it.\n      operationId: mybusinessaccountmanagement.accounts.get\n      parameters:\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: adminsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Successful response\n      tags:\n      - accounts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Updates the Admin for the specified location. Only the AdminRole\n        of the Admin can be updated.\n      operationId: mybusinessaccountmanagement.locations.admins.patch\n      parameters:\n      - description: Required. The specific fields that should be updated. The only\n          editable field is role.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      - description: Optional. If true, the request is validated without actually\n          updating the account.\n        in: query\n        name: validateOnly\n        schema:\n          type: boolean\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: adminsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Admin'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Admin'\n          description: Successful response\n      tags:\n      - locations\n  /v1/locations/{locationsId}:transfer:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Moves a location from an account that the user owns to another\n        account that the same user administers. The user must be an owner of the account\n        the location is currently associated with and must also be at least a manager\n        of the destination account.\n      operationId: mybusinessaccountmanagement.locations.transfer\n      parameters:\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferLocationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - locations\n  /v1/{name}:\n    delete:\n      description: Removes the specified admin as a manager of the specified location.\n      operationId: mybusinessaccountmanagement.locations.admins.delete\n      parameters:\n      - description: Required. The resource name of the admin to remove from the location.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - locations\n    get:\n      description: Gets the specified account. Returns `NOT_FOUND` if the account\n        does not exist or if the caller does not have access rights to it.\n      operationId: mybusinessaccountmanagement.accounts.get\n      parameters:\n      - description: Required. The name of the account to fetch.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Successful response\n      tags:\n      - accounts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Updates the Admin for the specified location. Only the AdminRole\n        of the Admin can be updated.\n      operationId: mybusinessaccountmanagement.locations.admins.patch\n      parameters:\n      - description: 'Immutable. The resource name. For account admins, this is in\n          the form: `accounts/{account_id}/admins/{admin_id}` For location admins,\n          this is in the form: `locations/{location_id}/admins/{admin_id}` This field\n          will be ignored if set during admin creation.'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: Required. The specific fields that should be updated. The only\n          editable field is role.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      - description: Optional. If true, the request is validated without actually\n          updating the account.\n        in: query\n        name: validateOnly\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Admin'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Admin'\n          description: Successful response\n      tags:\n      - locations\n  /v1/{name}:accept:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Accepts the specified invitation.\n      operationId: mybusinessaccountmanagement.accounts.invitations.accept\n      parameters:\n      - description: Required. The name of the invitation that is being accepted.\n          `accounts/{account_id}/invitations/{invitation_id}`\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AcceptInvitationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - accounts\n  /v1/{name}:decline:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Declines the specified invitation.\n      operationId: mybusinessaccountmanagement.accounts.invitations.decline\n      parameters:\n      - description: Required. The name of the account invitation that is being declined.\n          `accounts/{account_id}/invitations/{invitation_id}`\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeclineInvitationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - accounts\n  /v1/{name}:transfer:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Moves a location from an account that the user owns to another\n        account that the same user administers. The user must be an owner of the account\n        the location is currently associated with and must also be at least a manager\n        of the destination account.\n      operationId: mybusinessaccountmanagement.locations.transfer\n      parameters:\n      - description: Required. The name of the location to transfer. `locations/{location_id}`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferLocationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - locations\n  /v1/{parent}/admins:\n    get:\n      description: Lists all of the admins for the specified location.\n      operationId: mybusinessaccountmanagement.locations.admins.list\n      parameters:\n      - description: Required. The name of the location to list admins of. `locations/{location_id}/admins`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLocationAdminsResponse'\n          description: Successful response\n      tags:\n      - locations\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Invites the specified user to become an administrator for the specified\n        location. The invitee must accept the invitation in order to be granted access\n        to the location. See AcceptInvitation to programmatically accept an invitation.\n      operationId: mybusinessaccountmanagement.locations.admins.create\n      parameters:\n      - description: Required. The resource name of the location this admin is created\n          for. `locations/{location_id}/admins`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Admin'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Admin'\n          description: Successful response\n      tags:\n      - locations\n  /v1/{parent}/invitations:\n    get:\n      description: Lists pending invitations for the specified account.\n      operationId: mybusinessaccountmanagement.accounts.invitations.list\n      parameters:\n      - description: Required. The name of the account from which the list of invitations\n          is being retrieved. `accounts/{account_id}/invitations`\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: Optional. Filtering the response is supported via the Invitation.target_type\n          field.\n        in: query\n        name: filter\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListInvitationsResponse'\n          description: Successful response\n      tags:\n      - accounts\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\nservers:\n- url: https://mybusinessaccountmanagement.googleapis.com/\ntags:\n- name: accounts\n- name: locations\n"
		}
	},
	"Error": "parse: parse spec: paths: /v1/accounts/{accountsId}/invitations/{invitationsId}:accept: post: duplicate operationId: \"mybusinessaccountmanagement.accounts.invitations.accept\""
}