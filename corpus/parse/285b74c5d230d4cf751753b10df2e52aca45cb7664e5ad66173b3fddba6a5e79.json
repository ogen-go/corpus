{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenBanking-Brasil/specs-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 224427,
			"content": "openapi: 3.0.0\ninfo:\n  description: Raidiam Trust Services API\n  license:\n    name: MIT\n    url: https://mit-license.org\n  title: Raidiam Connect Trust Framework.\n  version: \"1.3\"\nservers:\n  - url: https://matls-api.directory.openbankingbrasil.org.br\n    description: Directory Production\n  - url:  https://matls-api.sandbox.directory.openbankingbrasil.org.br\n    description: Directory Sandbox\n\npaths:\n  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates/{SoftwareStatementCertificateOrKeyType}/{CertificateOrKeyId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/SoftwareStatementId'\n      - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'\n      - $ref: '#/components/parameters/CertificateOrKeyId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get the certificate of the given type and ID for the given software statement\n      tags:\n        - Software Statement Certificates\n      responses:\n        '200':\n          $ref: '#/components/responses/CertificatesOrKey'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/contacts':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Get the contacts for the given organisation\n      tags:\n        - Contacts\n      responses:\n        '200':\n          $ref: '#/components/responses/ContactsPage'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationServerId'\n      - $ref: '#/components/parameters/ApiResourceId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authorisation server API resource by Id\n      tags:\n        - Authorisation Servers - API Resources\n      responses:\n        '200':\n          $ref: '#/components/responses/ApiResource'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/certifications/{AuthorisationServerCertificationId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationServerId'\n      - $ref: '#/components/parameters/AuthorisationServerCertificationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get a certification by Id\n      tags:\n        - Authorisation Server Certifications\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationServerCertification'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}/authorisations':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authority claims' authorisations\n      tags:\n        - Organisation Authority Claims Authorisations\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisations'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationServerId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Get all Api Resources for the given Authorisation Server\n      tags:\n        - Authorisation Servers - API Resources\n      responses:\n        '200':\n          $ref: '#/components/responses/ApiResources'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationDomainName'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: All users for the given authorisation domain\n      tags:\n        - Organisation Domain Users\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationDomainUsersPage'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorisationdomains/{AuthorisationDomainName}':\n    parameters:\n      - $ref: '#/components/parameters/AuthorisationDomainName'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authorisation domain by Name\n      tags:\n        - References - Authorisation Domain\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationDomain'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/ess/poll/{ExternalSigningServiceEnvelopeId}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/OrganisationId'\n        - $ref: '#/components/parameters/ExternalSigningServiceEnvelopeId'\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n      summary: Polls the ESS to get the latest status of the signing request\n      tags:\n        - Organisations\n      responses:\n        '200':\n          $ref: '#/components/responses/EssPollResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/tnchistory':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/OrganisationId'\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Get all TnC data of the given organisation\n      tags:\n        - Organisations\n      responses:\n        '200':\n          $ref: '#/components/responses/OrgTermsAndConditionsPage'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorities':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Reference Data of all authorities\n      tags:\n        - References - Authority\n      responses:\n        '200':\n          $ref: '#/components/responses/Authorities'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/termsandconditions':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: All terms and conditions\n      tags:\n        - References - Terms and Conditions\n      responses:\n        '200':\n          $ref: '#/components/responses/TermsAndConditionsPage'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get the given organisation's details\n      tags:\n        - Organisations\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationWithTnc'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}/apidiscoveryendpoints':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationServerId'\n      - $ref: '#/components/parameters/ApiResourceId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Get all Api Discovery Endpoints for the given Authorisation Server and Api Version\n      tags:\n        - Authorisation Servers - API Discovery Endpoints\n      responses:\n        '200':\n          $ref: '#/components/responses/ApiDiscoveryEndpoints'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authoritydomainclaims':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Get the authority domain claims for the given organisation\n      tags:\n        - Organisation Authority Domain Claims\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationAuthorityDomainClaimsPage'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/certifications':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationServerId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get all certifications for given authorisation server.\n      tags:\n        - Authorisation Server Certifications\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationServerCertifications'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/SoftwareStatementId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get a software statement\n      tags:\n        - Software Statements for an Organisation\n      responses:\n        '200':\n          $ref: '#/components/responses/SoftwareStatement'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users/{UserEmailId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationDomainName'\n      - $ref: '#/components/parameters/UserEmailId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Authorisation Domain user details\n      tags:\n        - Organisation Domain Users\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationDomainUsersPage'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/SoftwareStatementId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get certificates for the given software statement\n      tags:\n        - Software Statement Certificates\n      responses:\n        '200':\n          $ref: '#/components/responses/CertificatesOrKeys'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/certificates':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get the certificates for the given organisation\n      tags:\n        - Organisation Certificates\n      responses:\n        '200':\n          $ref: '#/components/responses/CertificatesOrKeys'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/contacts/{ContactId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/ContactId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get a contact by Id\n      tags:\n        - Contacts\n      responses:\n        '200':\n          $ref: '#/components/responses/Contact'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/familystatus':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationServerId'\n      - $ref: '#/components/parameters/ApiResourceId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authorisation server API resource by Id and returns the latest family status\n      tags:\n        - Authorisation Servers - API Resources\n      responses:\n        '200':\n          $ref: '#/components/responses/ApiResources'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}/apidiscoveryendpoints/{ApiDiscoveryEndpointId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationServerId'\n      - $ref: '#/components/parameters/ApiResourceId'\n      - $ref: '#/components/parameters/ApiDiscoveryEndpointId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authorisation server API discovery endpoint by Id\n      tags:\n        - Authorisation Servers - API Discovery Endpoints\n      responses:\n        '200':\n          $ref: '#/components/responses/ApiDiscoveryEndpoint'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/softwarestatements':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get all software statements for the given organisation\n      tags:\n        - Software Statements for an Organisation\n      responses:\n        '200':\n          $ref: '#/components/responses/SoftwareStatements'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorisationdomainroles':\n    parameters:\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Reference data of all authorisation domain roles\n      tags:\n        - References - Authorisation Domain Role\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationDomainRolesPage'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorities/{AuthorityId}/authorisationdomains/{AuthorityAuthorisationDomainId}':\n    parameters:\n      - $ref: '#/components/parameters/AuthorityId'\n      - $ref: '#/components/parameters/AuthorityAuthorisationDomainId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authority authorisation domain by Id\n      tags:\n        - References - Authority Authorisation Domain\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorityAuthorisationDomain'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/certificates/kid/{CertificateOrKeyId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/CertificateOrKeyId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Retrieve a certificate with the given CertificateOrKeyId\n      tags:\n        - Organisation Certificates\n      responses:\n        '200':\n          $ref: '#/components/responses/CertificatesOrKey'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}':\n    parameters:\n      - $ref: '#/components/parameters/AuthorisationDomainRoleName'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authorisation domain role by Name\n      tags:\n        - References - Authorisation Domain Role\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationDomainRole'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/authorityclaims':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/SoftwareStatementId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get the authority claims for the given software statement\n      tags:\n        - Software Statement Authority Claims\n      responses:\n        '200':\n          $ref: '#/components/responses/SoftwareAuthorityClaims'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorities/{AuthorityId}/authorisationdomains':\n    parameters:\n      - $ref: '#/components/parameters/AuthorityId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Reference data of all authorisation domains for an Authority ID\n      tags:\n        - References - Authority Authorisation Domain\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorityAuthorisationDomainsPage'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Get all Authorisation Servers for the given organisation\n      tags:\n        - Authorisation Servers\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationServers'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/authorityclaims/{SoftwareAuthorityClaimId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/SoftwareStatementId'\n      - $ref: '#/components/parameters/SoftwareAuthorityClaimId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authority claim by Id\n      tags:\n        - Software Statement Authority Claims\n      responses:\n        '200':\n          $ref: '#/components/responses/SoftwareAuthorityClaim'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/assertion':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/SoftwareStatementId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get a Software Statement Assertion for the given SoftwareStatementID.\n      tags:\n        - Software Statement Assertions\n      responses:\n        '200':\n          $ref: '#/components/responses/SoftwareStatementAssertion'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/certificates/{OrganisationCertificateType}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/OrganisationCertificateType'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n      summary: Get the certificates of the given OrganisationCertificateType for the given organisation\n      tags:\n        - Organisation Certificates\n      responses:\n        '200':\n          $ref: '#/components/responses/CertificatesOrKeys'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authoritydomainmapping':\n    parameters:\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Mappings of authorities with authorisation domains\n      tags:\n        - References - Authority Authorisation Domain\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorityAuthorisationDomainsPage'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authoritydomainclaims/{OrganisationAuthorityDomainClaimId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/OrganisationAuthorityDomainClaimId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authority domain claim by Id\n      tags:\n        - Organisation Authority Domain Claims\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationAuthorityDomainClaim'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/metadata':\n    get:\n      parameters:\n        - in: query\n          name: type\n          schema:\n            type: string\n          description: Get all metadata of a specific type\n        - $ref: '#/components/parameters/OrganisationId'\n        - $ref: '#/components/parameters/SoftwareStatementId'\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n      summary: Get all metadata associated with a software statement\n      tags:\n        - Software Statement - Metadata\n      responses:\n        '200':\n          $ref: '#/components/responses/MetadataList'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}/authorisations/{OrganisationAuthorisationId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'\n      - $ref: '#/components/parameters/OrganisationAuthorisationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get a claim authorisation\n      tags:\n        - Organisation Authority Claims Authorisations\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisation'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations':\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n        - in: query\n          name: displayMine\n          schema:\n            type: string\n          description: Set to an email value to instruct the backend to only return organisations related to the user\n        - in: query\n          name: filterBy\n          schema:\n            type: string\n          description: Will return organisations with data like the provided value\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n      summary: Get all organisations that the logged in user is authorised to retrieve from trusted  services.\n      tags:\n        - Organisations\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationsPage'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}/metadata/{MetadataId}':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/MetadataId'\n        - $ref: '#/components/parameters/AuthorisationDomainRoleName'\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n      summary: Get metadata associated with an authorisation domain role\n      tags:\n        - References - Authorisation Domain Role Metadata\n      responses:\n        '200':\n          $ref: '#/components/responses/Metadata'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorityclaims':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get the authority claims for the given organisation\n      tags:\n        - Organisation Authority Claims\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationAuthorityClaims'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorities/{AuthorityId}':\n    parameters:\n      - $ref: '#/components/parameters/AuthorityId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get a reference authority by Id\n      tags:\n        - References - Authority\n      responses:\n        '200':\n          $ref: '#/components/responses/Authority'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/AuthorisationServerId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authorisation server by Id\n      tags:\n        - Authorisation Servers\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationServer'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}/metadata':\n    get:\n      parameters:\n        - in: query\n          name: type\n          schema:\n            type: string\n          description: Get all of a specific type of metadata\n        - $ref: '#/components/parameters/AuthorisationDomainRoleName'\n        - $ref: '#/components/parameters/x-fapi-auth-date'\n        - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n        - $ref: '#/components/parameters/x-fapi-interaction-id'\n        - $ref: '#/components/parameters/x-customer-user-agent'\n      summary: Get metadata associated with an authorisation domain role\n      tags:\n        - References - Authorisation Domain Role Metadata\n      responses:\n        '200':\n          $ref: '#/components/responses/MetadataList'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}':\n    parameters:\n      - $ref: '#/components/parameters/OrganisationId'\n      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      summary: Get an authority claim by Id\n      tags:\n        - Organisation Authority Claims\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganisationAuthorityClaim'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\n  '/references/authorisationdomains':\n    parameters:\n      - $ref: '#/components/parameters/x-fapi-auth-date'\n      - $ref: '#/components/parameters/x-fapi-customer-ip-address'\n      - $ref: '#/components/parameters/x-fapi-interaction-id'\n      - $ref: '#/components/parameters/x-customer-user-agent'\n    get:\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page number to return of the result set\n        - in: query\n          name: size\n          schema:\n            type: integer\n          description: The size of the pages to return\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: The field name to sort\n      summary: Reference data of all authorisation domains\n      tags:\n        - References - Authorisation Domain\n      responses:\n        '200':\n          $ref: '#/components/responses/AuthorisationDomainsPage'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '502':\n          $ref: '#/components/responses/BadGateway'\n        '504':\n          $ref: '#/components/responses/UpstreamTimeout'\n      security:\n        - authorizer: []\n        - oAuth:\n          - directory:software\ncomponents:\n  parameters:\n    ApiDiscoveryEndpointId:\n      description: The api discovery endpoint Id\n      in: path\n      name: ApiDiscoveryEndpointId\n      required: true\n      schema:\n        $ref: '#/components/schemas/ApiDiscoveryEndpointId'\n    ApiResourceId:\n      description: The api version Id\n      in: path\n      name: ApiResourceId\n      required: true\n      schema:\n        $ref: '#/components/schemas/ApiResourceId'\n    AuthorisationDomainName:\n      description: Authorisation Domain Name. Eg:PSD2\n      in: path\n      name: AuthorisationDomainName\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationDomainName'\n    AuthorisationDomainRoleName:\n      description: Authorisation Domain Role Name. Eg:TPP\n      in: path\n      name: AuthorisationDomainRoleName\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationDomainRoleName'\n    AuthorisationDomainUserId:\n      description: Unique record Id to identify Domain User\n      in: path\n      name: AuthorisationDomainUserId\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationDomainUserId'\n    AuthorisationServerCertificationId:\n      description: Auth server certification Id\n      in: path\n      name: AuthorisationServerCertificationId\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationServerCertificationId'\n    AuthorisationServerId:\n      description: The authorisation server Id\n      in: path\n      name: AuthorisationServerId\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorisationServerId'\n    AuthorityAuthorisationDomainId:\n      description: ID of the Authority mapped with Authorisation Domain\n      in: path\n      name: AuthorityAuthorisationDomainId\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorityAuthorisationDomainId'\n    AuthorityId:\n      description: The reference authority Id\n      in: path\n      name: AuthorityId\n      required: true\n      schema:\n        $ref: '#/components/schemas/AuthorityId'\n    CertificateOrKeyId:\n      description: The certificate or key Id\n      in: path\n      name: CertificateOrKeyId\n      required: true\n      schema:\n        $ref: '#/components/schemas/CertificateOrKeyId'\n    ClientId:\n      description: Oauth clientId\n      in: path\n      name: ClientId\n      required: true\n      schema:\n        $ref: '#/components/schemas/ClientCreationResponse/properties/client_id'\n    ContactId:\n      description: The contact id\n      in: path\n      name: ContactId\n      required: true\n      schema:\n        $ref: '#/components/schemas/ContactId'\n    ExternalSigningServiceEnvelopeId:\n      description: The envelope id\n      in: path\n      name: ExternalSigningServiceEnvelopeId\n      required: true\n      schema:\n        $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'\n    MetadataId:\n      description: The metadata id object\n      in: path\n      name: MetadataId\n      required: true\n      schema:\n        $ref: '#/components/schemas/MetadataId'\n    OrganisationAuthorisationId:\n      description: The authorisation ID for an organisation's authority claims\n      in: path\n      name: OrganisationAuthorisationId\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationAuthorisationId'\n    OrganisationAuthorityClaimId:\n      description: The Authority claims ID for an organisation\n      in: path\n      name: OrganisationAuthorityClaimId\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationAuthorityClaimId'\n    OrganisationAuthorityDomainClaimId:\n      description: Organisation Authority Domain Claim Id\n      in: path\n      name: OrganisationAuthorityDomainClaimId\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationAuthorityDomainClaimId'\n    OrganisationCertificateType:\n      description: The certificate type\n      in: path\n      name: OrganisationCertificateType\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationCertificateType'\n    OrganisationId:\n      description: The organisation ID\n      in: path\n      name: OrganisationId\n      required: true\n      schema:\n        $ref: '#/components/schemas/OrganisationId'\n    PageableRequest:\n      description: The pageable object\n      in: query\n      name: PageableRequest\n      schema:\n        $ref: '#/components/schemas/PageableRequest'\n    SoftwareAuthorityClaimId:\n      description: The software statement's authority claim ID\n      in: path\n      name: SoftwareAuthorityClaimId\n      required: true\n      schema:\n        $ref: '#/components/schemas/SoftwareAuthorityClaimId'\n    SoftwareStatementCertificateOrKeyType:\n      description: The certificate or key type that can be associated with a software\n        statement\n      in: path\n      name: SoftwareStatementCertificateOrKeyType\n      required: true\n      schema:\n        $ref: '#/components/schemas/SoftwareStatementCertificateOrKeyType'\n    SoftwareStatementId:\n      description: The software statement ID\n      in: path\n      name: SoftwareStatementId\n      required: true\n      schema:\n        $ref: '#/components/schemas/SoftwareStatementId'\n    TnCId:\n      description: Terms and Conditions unique identifier\n      in: path\n      name: TnCId\n      required: true\n      schema:\n        $ref: '#/components/schemas/TnCId'\n    UserEmailId:\n      description: Email address of the super user\n      in: path\n      name: UserEmailId\n      required: true\n      schema:\n        $ref: '#/components/schemas/UserEmailId'\n    x-customer-user-agent:\n      description: Indicates the user-agent that the PSU is using.\n      in: header\n      name: x-customer-user-agent\n      required: false\n      schema:\n        type: string\n    x-fapi-auth-date:\n      description: \"The time when the PSU last logged in with the TPP. \\nAll dates\n        in the HTTP headers are represented as RFC 7231 Full Dates. An example is\n        below: \\nSun, 10 Sep 2017 19:43:31 UTC\"\n      in: header\n      name: x-fapi-auth-date\n      required: false\n      schema:\n        pattern: ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\n          \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$\n        type: string\n    x-fapi-customer-ip-address:\n      description: The PSU's IP address if the PSU is currently logged in with the\n        TPP.\n      in: header\n      name: x-fapi-customer-ip-address\n      required: false\n      schema:\n        type: string\n    x-fapi-interaction-id:\n      description: An RFC4122 UID used as a correlation id.\n      in: header\n      name: x-fapi-interaction-id\n      required: false\n      schema:\n        type: string\n    x-idempotency-key:\n      description: |\n        Every request will be processed only once per x-idempotency-key.  The\n        Idempotency Key will be valid for 24 hours.\n      in: header\n      name: x-idempotency-key\n      required: false\n      schema:\n        maxLength: 40\n        pattern: ^(?!\\s)(.*)(\\S)$\n        type: string\n    x-jws-signature:\n      description: A detached JWS signature of the body of the payload.\n      in: header\n      name: x-jws-signature\n      required: false\n      schema:\n        type: string\n  requestBodies:\n    AccessTokenRequest:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: '#/components/schemas/AccessTokenRequest'\n      description: Client Access Token Request\n      required: true\n    AccessTokenRevocationRequest:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: '#/components/schemas/AccessTokenRevocationRequest'\n      description: A valid RFC7009 request - https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n      required: true\n    AmendCertificateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AmendCertificateRequest'\n      description: Amend a certificate, current functionality supports Revoke Reason\n      required: true\n    ApiDiscoveryEndpointRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiDiscoveryEndpointRequest'\n      description: Api Resource request\n    ApiResourceRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResourceRequest'\n      description: Api Resource request\n    AuthorisationDomainRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainRequest'\n      description: Authorisation Domain creation request\n      required: true\n    AuthorisationDomainRoleRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainRoleRequest'\n      description: Authorisation Domain Role creation request\n      required: true\n    AuthorisationDomainUserCreateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainUserCreateRequest'\n      description: Admin user creation request\n      required: true\n    AuthorisationDomainUserUpdateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainUserUpdateRequest'\n      description: Request object to update a domain user\n    AuthorisationServerCertificationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServerCertificationRequest'\n      description: Properties to create/update a certification for an authorisation\n        server\n      required: true\n    AuthorisationServerRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServerRequest'\n      description: Properties to create/update authorisation server\n      required: true\n    AuthorityAuthorisationDomainRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorityAuthorisationDomainRequest'\n      description: Authority Authorisation Domain mapping request\n      required: true\n    AuthorityRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorityRequest'\n      description: Reference authority request\n      required: true\n    CSROrKey:\n      content:\n        application/x-pem-file:\n          schema:\n            $ref: '#/components/schemas/CertificateOrKeyOrJWT'\n      description: PEM file -- the contents of the PEM file will differ depending\n        upon *SoftwareStatementCertificateOrKeyType*. If *SoftwareStatementCertificateOrKeyType*\n        is set to *brcac*, *rtssigning* or *rtstransport* then the PEM file should\n        contain a Certificate Signing Request (CSR) for an RTS signing or RTS transport\n        certificate respectively; if *SoftwareStatementCertificateOrKeyType* is set\n        to *sigkey*, *enckey* then the PEM file should contain a public signing or\n        encryption key respectively.\n      required: true\n    CertificateOrCSROrJWS:\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/CertificateOrKeyOrJWT'\n        application/x-pem-file:\n          schema:\n            $ref: '#/components/schemas/CertificateOrKeyOrJWT'\n      description: |\n        * __PEM file__ -- when the request `Content-Type` header is set to  `application/x-pem-file` the contents of the PEM file will differ depending upon `OrganisationCertificateType`. If `OrganisationCertificateType` is set to `qwac`, `qseal` then the PEM file should contain a *QWAC* or a *QSEAL* certificate respectively; if `OrganisationCertificateType` is set to `rtswac`, `rtsseal`, `brcac` or `brseal` then the PEM file should contain a Certificate Signing Request (CSR) for an RTS-issued *RTSWAC*, *RTSSEAL*, *BRCAC* or *BRSEAL* certificate respectively.\n        * __Signed JWT__ -- when the request `Content-Type` header is set to `application/jwt` the body of the signed JWT will contain a CSR or a certificate.\n        ### Requesting a Certificate using a signed JWT\n        The header `kid` claim is the ID of the QSealC certificate assigned to it by the RTS JWKS store.\n        The body `csr` claim is the CSR in the DER format.\n        ```\n        {\n          \"typ\": \"JWT\",\n          \"alg\": \"ES256\",\n          \"kid\": \"ABCD1234\",\n        }\n        {\n          \"csr\": \"string\"\n        }\n        ```\n        ### Uploading a Certificate using a signed JWT\n        The header `kid` claim is the ID of the QSealC certificate assigned to it by the RTS JWKS store.\n        The body `x5c` claim is the array of certificate, issuer certificate, and root certificate in the DER format.\n        ```\n        {\n          \"typ\": \"JWT\",\n          \"alg\": \"ES256\",\n          \"kid\": \"ABCD1234\",\n        }\n        {\n          \"x5c\": [\"qsealc\", \"issuer certificate\", \"root certificate\"]\n        }\n        ```\n        EXAMPLE REQUEST PAYLOAD USING SIGNED JWT REQUESTS\n        ```\n        POST /organisations/123456789012345678/certificates/rtswac HTTP/1.1\n        Content-Type: application/jwt\n        Accept: application/json\n        Host: raidiam.tobedecided.org.uk\n        eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IkFCQ0QxMjM0IiwieDVjIjpbInFzZWFsYyIsImlzc3VlciBjZXJ0aWZpY2F0ZSIsInJvb3QgY2VydGlmaWNhdGUiXX0.eyJyZWRpcmVjdF91cmlzIjpbInN0cmluZyJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InN0cmluZyIsImdyYW50X3R5cGVzIjpbInN0cmluZyJdLCJyZXNwb25zZV90eXBlcyI6WyJzdHJpbmcibSwiY2xpZW50X25hbWUiOiJzdHJpbmciLCJjbGllbnRfdXJpIjoic3RyaW5nIiwibG9nb191cmkiOiJzdHJpbmciLCJzY29wZSI6InN0cmluZyIsImNvbnRhY3RzIjpbInVzZXJAZXhhbXBsZS5jb20iXSwidG9zX3VyaSI6InN0cmluZyIsInBvbGljeV91cmkiOiJzdHJpbmciLCJqd2tzX3VyaSI6InN0cmluZyIsImp3a3MiOnt9LCJzb2Z0d2FyZV9pZCI6InN0cmluZyIsInNvZnR3YXJlX3ZlcnNpb24iOiJzdHJpbmcifQ.lMsADSHkFGUw5PtgdEqXslYArzqf6tbg0lo0kCitOUA\n        ```\n      required: true\n    CertificationManagerCreationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CertificationManagerCreationRequest'\n      description: Super user creation request\n      required: true\n    ClientCreationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ClientCreationRequest'\n      description: Client Creation Request\n      required: true\n    ClientUpdateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ClientUpdateRequest'\n      description: Client Update Request\n      required: true\n    ContactRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ContactRequest'\n      description: Properties to update contacts\n      required: true\n    EssSignRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EssSignRequest'\n      description: Request object to capture ESS sign attributes\n    IntrospectionRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/IntrospectionRequest'\n      description: Reference introspection request\n      required: true\n    MetadataRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MetadataRequest'\n      description: Properties to create a metadata object to associate with a domain\n        role\n      required: true\n    OrgAdminUserCreateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrgAdminUserCreateRequest'\n      description: Org Admin user create request\n    Organisation:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationRequest'\n      description: Create a new organisation\n      required: true\n    OrganisationAuthorityClaimAuthorisationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisationRequest'\n      description: Properties to update/retrieve authorisation server\n      required: true\n    OrganisationAuthorityClaimRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaimRequest'\n      description: Properties to create/update authority claims\n      required: true\n    OrganisationAuthorityDomainClaimRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityDomainClaimRequest'\n      description: Authority Authorisation Domain mapping request\n      required: true\n    OrganisationAuthorityDomainClaimUpdateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityDomainClaimUpdateRequest'\n      description: Authority Authorisation Domain mapping request\n      required: true\n    OrganisationConformanceTest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationConformanceTest'\n      description: Create and run a Conformance Suite test\n      required: true\n    OrganisationEnrol:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationEnrol'\n      description: Enrol an organisation\n      required: true\n    OrganisationUpdate:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationUpdateRequest'\n      description: Update an organisation\n      required: true\n    SoftwareAuthorityClaimRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareAuthorityClaimRequest'\n      description: Software Statement authority claim's payload\n      required: true\n    SoftwareAuthorityClaimUpdateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareAuthorityClaimUpdateRequest'\n      description: Software Statement authority claim's update payload\n      required: true\n    SoftwareStatementRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatementRequest'\n      description: Software Statement payload\n      required: true\n    SoftwareStatementUpdateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatementUpdateRequest'\n      description: Software Statement payload\n      required: true\n    SuperUserCreationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SuperUserCreationRequest'\n      description: Super user creation request\n      required: true\n    TermsAndConditionsCreateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TermsAndConditionsItem'\n      description: TnC create request\n      required: true\n    TermsAndConditionsUpdateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TermsAndConditionsUpdateRequest'\n      description: TnC update request\n      required: true\n    UnlockSoftwareStatementRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UnlockSoftwareStatementRequest'\n      description: Software Statement payload\n      required: true\n    UserCreateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserCreateRequest'\n      description: User create request\n      required: true\n    UserUpdateRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserUpdateRequest'\n      description: Properties to toggle a user between activated and deactivated status\n      required: true\n  responses:\n    AllWebhooksResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/WebhookStatusResponses'\n      description: Update all webhooks response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    ApiDiscoveryEndpoint:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiDiscoveryEndpoint'\n      description: Authorisation server response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    ApiDiscoveryEndpointFamilyResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiDiscoveryEndpointFamilyResponse'\n      description: Api endpoint creation response with family complete flag\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    ApiDiscoveryEndpoints:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiDiscoveryEndpoints'\n      description: Authorisation server response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    ApiResource:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResource'\n      description: Authorisation server Api Resource response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    ApiResources:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ApiResources'\n      description: Authorisation server Api Resources response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationDomain:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomain'\n      description: Data of an authorisation domain mapped to an authority\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationDomainRole:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainRole'\n      description: Role data\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationDomainRolesPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainRolesPage'\n      description: All data of authorisation domains mapped to an authority\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationDomainUser:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainUser'\n      description: User data belonging to an authorisation domain\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationDomainUsersPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainUsersPage'\n      description: All users belonging to an authorisation domain\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationDomainsPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationDomainsPage'\n      description: All data of authorisation domains mapped to an authority\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationServer:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServer'\n      description: Authorisation server response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationServerCertification:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServerCertification'\n      description: Authorisation Server certification for the given certification\n        id\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationServerCertifications:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServerCertifications'\n      description: Authorisation Server certification for the given certification\n        id\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorisationServers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorisationServers'\n      description: All authorisation servers for the org\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Authorities:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Authorities'\n      description: |\n        Reference data table for all authorities with their countries\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Authority:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Authority'\n      description: |\n        Get a reference authority by Id\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorityAuthorisationDomain:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorityAuthorisationDomain'\n      description: Authority to domain mapping data\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    AuthorityAuthorisationDomainsPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AuthorityAuthorisationDomainsPage'\n      description: All data of authorisation domains mapped to an authority\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    BadGateway:\n      description: Bad Gateway\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    BadRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HttpResponseBody'\n      description: Bad Request\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    CertificatesOrKey:\n      content:\n        application/jwk+json:\n          schema:\n            $ref: '#/components/schemas/CertificateOrKey'\n      description: A certificate object\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    CertificatesOrKeys:\n      content:\n        application/jwk-set+json:\n          schema:\n            $ref: '#/components/schemas/CertificatesOrKeys'\n      description: All certificates for the org\n    CertificationManager:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CertificationManager'\n      description: Certification manager data\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    CertificationManagers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CertificationManagers'\n      description: All certification managers\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    ClientCreationResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ClientCreationResponse'\n      description: |\n        Creates an OAuth Client in the OpenID Server\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Conflict:\n      description: Conflict\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Contact:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Contact'\n      description: A contact object\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    ContactsPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ContactsPage'\n      description: Paged Contacts Snapshot\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    EssPollAllResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EssPollResponses'\n      description: External Signing Service Poll All response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    EssPollResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EssPollResponse'\n      description: External Signing Service Poll response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Forbidden:\n      description: Forbidden\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    InternalServerError:\n      description: Internal Server Error\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Introspection:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Introspection'\n      description: |\n        metadata for token\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Metadata:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MetadataResponse'\n      description: Single metadata object\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    MetadataList:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MetadataListResponse'\n      description: List of all metadata associated with an object\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    NoContent:\n      description: No Content\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    NotAcceptable:\n      description: Not Acceptable\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    NotFound:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HttpResponseBody'\n      description: Not found\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Ok:\n      description: No Content\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrgTermsAndConditionsDetail:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrgTermsAndConditionsDetail'\n      description: Details of the TnC and external signing service\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrgTermsAndConditionsPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrgTermsAndConditionsPage'\n      description: Org TnCs history\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Organisation:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Organisation'\n      description: |\n        Full details of the organisation\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationAdminUser:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAdminUser'\n      description: Admin user details\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationAdminUsers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAdminUsers'\n      description: All admin users for this org\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationAuthorityClaim:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaim'\n      description: Authority claim for the given Id\n    OrganisationAuthorityClaimAuthorisation:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'\n      description: Authorisations response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationAuthorityClaimAuthorisations:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisations'\n      description: Authorisations response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationAuthorityClaims:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityClaims'\n      description: All authority claims for the organisation\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationAuthorityDomainClaim:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'\n      description: All authority to domain mappings data\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationAuthorityDomainClaimsPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationAuthorityDomainClaimsPage'\n      description: All data of an organisation's authority domain claims\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationConformanceTestResult:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationConformanceTestResult'\n      description: |\n        Result of the conformance suite test run\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationEnrolments:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationEnrolments'\n      description: |\n        Full details of the organisation enrolment response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationSnapshot:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationSnapshot'\n      description: Snapshot data of the organisation\n    OrganisationWithTnc:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationWithTnc'\n      description: Full details of the organisation including TnC information\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationsExportOpenData:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationsExportOpenData'\n      description: Export the open-data for all the organisations\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationsPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationsPage'\n      description: All organisations\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    OrganisationsRoles:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationsRoles'\n      description: Export the roles for all the organisations\n      headers:\n        x-fapi-interaction-id:\n          description: An RFC4122 UID used as a correlation id.\n          schema:\n            example: 73cac523-d3ae-2289-b106-330a6218710d\n            type: string\n    OrganisationsSnapshot:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OrganisationsSnapshot'\n      description: Snapshot data of all the organisations\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    RetrieveTokenResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccessTokenResponse'\n      description: |\n        Access token response\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    SoftwareAuthorityClaim:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareAuthorityClaim'\n      description: Authority claim for the given Id\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    SoftwareAuthorityClaims:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareAuthorityClaims'\n      description: Authority claim for the given Id\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    SoftwareStatement:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatement'\n      description: Get the software statements with the given id\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    SoftwareStatementAssertion:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatementAssertion'\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatementAssertion'\n      description: OK\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    SoftwareStatements:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SoftwareStatements'\n      description: All software statements for the org\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    SuperUser:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SuperUser'\n      description: Super user data\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    SuperUsers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SuperUsers'\n      description: All organisations\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    TermsAndConditionsItem:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TermsAndConditionsItem'\n      description: Details of the TnC item\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    TermsAndConditionsPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TermsAndConditionsPage'\n      description: Paged data of TnC items\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    TooManyRequests:\n      description: Too many requests, maximum capacity reached. Requests are now throttled.\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    Unauthorized:\n      description: Unauthorized\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    UpstreamTimeout:\n      description: Upstream timeout, insufficient capacity to serve request. More\n        capacity being brought online. Please try again.\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    UserDetail:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserDetail'\n      description: Details of the user\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    UserOPInfo:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserOPInfo'\n      description: User information from the OpenId Provider\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    UserTermsAndConditionsPage:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserTermsAndConditionsPage'\n      description: User TnCs history\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n    WellKnown:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/WellKnown'\n      description: endpoint discovery for well known endpoint\n      headers:\n        x-fapi-interaction-id:\n          $ref: '#/components/schemas/xFapiInteractionId'\n  schemas:\n    AccessTokenRequest:\n      properties:\n        assertion:\n          description: The assertion that is used to get a token, required with grant_type\n            private_key_jwt\n          minLength: 1\n          type: string\n          x-required-message: Assertion is a required field\n        client_assertion_type:\n          description: Required with grant_type private_key_jwt\n          enum:\n          - urn:ietf:params:oauth:client-assertion-type:jwt-bearer\n          maxLength: 160\n          minLength: 1\n          type: string\n          x-required-message: Client assertion type must be set to urn:ietf:params:oauth:client-assertion-type:jwt-bearer\n        client_id:\n          description: Required with grant_type private_key_jwt\n          maxLength: 160\n          minLength: 1\n          type: string\n        grant_type:\n          default: client_credentials\n          description: The Grant Type\n          enum:\n          - client_credentials\n          - private_key_jwt\n          - tls_client_auth\n          - urn:ietf:params:oauth:grant-type:device_code\n          minLength: 1\n          type: string\n          x-required-message: Only client credentials supported\n      required:\n      - grant_type\n      type: object\n    AccessTokenResponse:\n      properties:\n        access_token:\n          description: Access token\n          type: string\n        expires_in:\n          description: lifetime in seconds\n          type: integer\n        scope:\n          type: string\n        token_type:\n          type: string\n      type: object\n    AccessTokenRevocationRequest:\n      description: A valid RFC7009 request - https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n      properties:\n        token:\n          description: The token that the client wants to get revoked.\n          type: string\n          x-required-message: A token is required to be revoked.\n        token_type_hint:\n          description: |\n            A hint about the type of the token\n            submitted for revocation.  Clients MAY pass this parameter in\n            order to help the authorization server to optimize the token\n            lookup.  If the server is unable to locate the token using\n            the given hint, it MUST extend its search across all of its\n            supported token types.  An authorization server MAY ignore\n            this parameter, particularly if it is able to detect the\n            token type automatically.  This specification defines two\n            such values:\n\n            * access_token: An access token as defined in [RFC6749],\n              Section 1.4\n\n            * refresh_token: A refresh token as defined in [RFC6749],\n              Section 1.5\n          enum:\n          - access_token\n          - refresh_token\n          type: string\n      required:\n      - token\n      type: object\n    AmendCertificateRequest:\n      properties:\n        RevokeReason:\n          default: unspecified\n          description: Specify a reason for revokation of the certificate.\n          enum:\n          - unspecified\n          - keycompromise\n          - superseded\n          - cessationofoperation\n          - privilegewithdrawn\n          type: string\n          x-required-message: RevokeReason must be provided\n      required:\n      - RevokeReason\n      type: object\n    ApiCertificationUri:\n      description: Link to the certifation package. Example https://github.com/Open[Domain]/conformance/blob/main/submissions/functional/business/1.0.3/api-business-customer.zip\n      format: uri\n      maxLength: 500\n      pattern: ^(https://).*\n      type: string\n      x-pattern-message: ApiCertificationUri must be in a URI format https://...\n    ApiDiscoveryEndpoint:\n      properties:\n        ApiDiscoveryId:\n          description: Unique Id of this discovery endpoint record\n          maxLength: 40\n          type: string\n        ApiEndpoint:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: ApiEndpoint must be in a URI format https://... or http://...\n      type: object\n    ApiDiscoveryEndpointFamilyResponse:\n      properties:\n        ApiDiscoveryEndpoint:\n          $ref: '#/components/schemas/ApiDiscoveryEndpoint'\n        FamilyComplete:\n          description: Denotes a completed api family set\n          type: boolean\n      type: object\n    ApiDiscoveryEndpointId:\n      description: The unique ID of an Api discovery endpoint resource\n      maxLength: 40\n      type: string\n    ApiDiscoveryEndpointRequest:\n      properties:\n        ApiEndpoint:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: ApiEndpoint must be in a URI format https://... or http://...\n      type: object\n    ApiDiscoveryEndpoints:\n      items:\n        $ref: '#/components/schemas/ApiDiscoveryEndpoint'\n      type: array\n    ApiFamilyType:\n      description: The type of API this record describes\n      maxLength: 40\n      minLength: 1\n      type: string\n      x-required-message: Family Type must be provided\n    ApiResource:\n      properties:\n        ApiCertificationUri:\n          $ref: '#/components/schemas/ApiCertificationUri'\n        ApiDiscoveryEndpoints:\n          items:\n            $ref: '#/components/schemas/ApiDiscoveryEndpoint'\n          type: array\n        ApiFamilyType:\n          $ref: '#/components/schemas/ApiFamilyType'\n        ApiResourceId:\n          $ref: '#/components/schemas/ApiResourceId'\n        ApiVersion:\n          description: The version number of the API\n          type: number\n        CertificationExpirationDate:\n          $ref: '#/components/schemas/CertificationExpirationDate'\n        CertificationStartDate:\n          $ref: '#/components/schemas/CertificationStartDate'\n        CertificationStatus:\n          default: Awaiting Certification\n          description: Is this certification current or expired\n          enum:\n          - Awaiting Certification\n          - Certified\n          - Deprecated\n          - Rejected\n          - Self-Certified\n          type: string\n        FamilyComplete:\n          description: Denotes whether or not the api resource has had all related\n            api endpoints published\n          type: boolean\n      type: object\n    ApiResourceId:\n      description: The unique ID of an Api version resource\n      maxLength: 40\n      type: string\n    ApiResourceRequest:\n      properties:\n        ApiCertificationUri:\n          $ref: '#/components/schemas/ApiCertificationUri'\n        ApiFamilyType:\n          $ref: '#/components/schemas/ApiFamilyType'\n        ApiVersion:\n          description: The version number of the API\n          type: number\n          x-required-message: Version must be provided\n        CertificationStartDate:\n          maxLength: 10\n          nullable: true\n          pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$\n          type: string\n          x-pattern-message: Date must match the format of dd/mm/yyyy, for example\n            31/12/2021\n        CertificationStatus:\n          default: Awaiting Certification\n          description: Is this certification current or expired\n          enum:\n          - Awaiting Certification\n          - Certified\n          - Deprecated\n          - Rejected\n          - Self-Certified\n          type: string\n      required:\n      - ApiFamilyType\n      - ApiVersion\n      type: object\n    ApiResources:\n      items:\n        $ref: '#/components/schemas/ApiResource'\n      type: array\n    AuthorisationDomain:\n      properties:\n        AuthorisationDomainDescription:\n          description: The authorisation domain description\n          type: string\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          type: string\n        AuthorisationDomainRegion:\n          description: The authorisation domain region\n          type: string\n        Status:\n          default: Active\n          description: Is this Domain Active or Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    AuthorisationDomainName:\n      description: Authorisation Domain Name\n      maxLength: 30\n      type: string\n    AuthorisationDomainRequest:\n      properties:\n        AuthorisationDomainDescription:\n          description: The authorisation domain description\n          type: string\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          maxLength: 30\n          minLength: 1\n          type: string\n          x-required-message: The authorisation domain name is mandatory\n        AuthorisationDomainRegion:\n          description: The authorisation domain region\n          minLength: 2\n          type: string\n          x-required-message: The authorisation domain region is mandatory\n      required:\n      - AuthorisationDomainName\n      - AuthorisationDomainRegion\n      type: object\n    AuthorisationDomainRole:\n      properties:\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          type: string\n        AuthorisationDomainRoleDescription:\n          description: The authorisation domain role description\n          type: string\n        AuthorisationDomainRoleName:\n          description: The authorisation domain role\n          type: string\n        Status:\n          default: Active\n          description: Is this mapping Active or Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    AuthorisationDomainRoleName:\n      description: Authorisation Domain Role Name\n      maxLength: 30\n      type: string\n    AuthorisationDomainRoleRequest:\n      properties:\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          minLength: 1\n          type: string\n          x-required-message: The authorisation domain name is mandatory\n        AuthorisationDomainRoleDescription:\n          default: \"\"\n          description: The authorisation domain role description\n          type: string\n        AuthorisationDomainRoleName:\n          description: The authorisation domain role name\n          maxLength: 30\n          minLength: 1\n          type: string\n          x-required-message: The authorisation domain role name is mandatory\n      required:\n      - AuthorisationDomainRoleName\n      - AuthorisationDomainName\n      type: object\n    AuthorisationDomainRolesPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/AuthorisationDomainRole'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    AuthorisationDomainUser:\n      properties:\n        AuthorisationDomain:\n          description: The authorisation domain for this user\n          type: string\n        AuthorisationDomainRole:\n          description: The authorisation domain role for this user\n          type: string\n        AuthorisationDomainUserId:\n          description: Unique record ID\n          type: string\n        ContactRole:\n          $ref: '#/components/schemas/ContactRoleEnum'\n        Email:\n          description: The user email address\n          type: string\n        Status:\n          default: Active\n          description: Is this user Active or Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n        System:\n          $ref: '#/components/schemas/SystemEnum'\n      type: object\n    AuthorisationDomainUserCreateRequest:\n      properties:\n        AuthorisationDomainRole:\n          description: The authorisation domain role for this user\n          minLength: 1\n          type: string\n        ContactRole:\n          $ref: '#/components/schemas/ContactRoleEnum'\n        Email:\n          description: The user email address\n          pattern: ^(([^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+(\\.[^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\n          type: string\n          x-pattern-message: EmailAddress must be a valid email\n        System:\n          $ref: '#/components/schemas/SystemEnum'\n      required:\n      - Email\n      - AuthorisationDomainRole\n      - ContactRole\n      - System\n      type: object\n    AuthorisationDomainUserId:\n      description: Unique record ID to identify Domain user\n      maxLength: 50\n      type: string\n    AuthorisationDomainUserUpdateRequest:\n      properties:\n        ContactRole:\n          $ref: '#/components/schemas/ContactRoleEnum'\n        Status:\n          $ref: '#/components/schemas/StatusEnum'\n        System:\n          $ref: '#/components/schemas/SystemEnum'\n      type: object\n    AuthorisationDomainUsersPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/AuthorisationDomainUser'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    AuthorisationDomainsPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/AuthorisationDomain'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    AuthorisationServer:\n      properties:\n        ApiResources:\n          items:\n            $ref: '#/components/schemas/ApiResource'\n          type: array\n        AuthorisationServerCertifications:\n          items:\n            $ref: '#/components/schemas/AuthorisationServerCertification'\n          type: array\n        AuthorisationServerId:\n          $ref: '#/components/schemas/AuthorisationServerId'\n        AutoRegistrationSupported:\n          default: false\n          type: boolean\n        CustomerFriendlyDescription:\n          maxLength: 255\n          type: string\n        CustomerFriendlyLogoUri:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\\.(svg)$\n          type: string\n          x-pattern-message: CustomerFriendlyLogoUri must be in a URI format https://...\n            .svg or http://... .svg\n        CustomerFriendlyName:\n          maxLength: 255\n          type: string\n        DeveloperPortalUri:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: DeveloperPortalUri must be in a URI format https://...\n            or http://...\n        NotificationWebhook:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: WebhookUri must be in a URI format https://... or http://...\n        NotificationWebhookAddedDate:\n          description: Creation date\n          example: \"2021-01-30T08:30:00Z\"\n          format: date\n          type: string\n        NotificationWebhookStatus:\n          $ref: '#/components/schemas/NotificationWebhookStatusEnum'\n        OpenIDDiscoveryDocument:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: OpenIDDiscoveryDocument must be in a URI format https://...\n            or http://...\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        ParentAuthorisationServerId:\n          $ref: '#/components/schemas/AuthorisationServerId'\n        PayloadSigningCertLocationUri:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: PayloadSigningCertLocationUri must be in a URI format\n            https://... or http://...\n        SupportsCiba:\n          default: false\n          type: boolean\n        SupportsDCR:\n          default: false\n          type: boolean\n        TermsOfServiceUri:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: TermsOfServiceUri must be in a URI format https://...\n            or http://...\n      type: object\n    AuthorisationServerCertification:\n      properties:\n        AuthorisationServerId:\n          $ref: '#/components/schemas/AuthorisationServerId'\n        CertificationExpirationDate:\n          $ref: '#/components/schemas/CertificationExpirationDate'\n        CertificationId:\n          $ref: '#/components/schemas/AuthorisationServerCertificationId'\n        CertificationStartDate:\n          $ref: '#/components/schemas/CertificationStartDate'\n        CertificationURI:\n          $ref: '#/components/schemas/ApiCertificationUri'\n        ProfileVariant:\n          description: Type of certification\n          oneOf:\n          - $ref: '#/components/schemas/CertificationCibaEnum'\n          - $ref: '#/components/schemas/CertificationRedirectEnum'\n          - $ref: '#/components/schemas/CertificationDCREnum'\n          type: string\n          x-required-message: Certification needs to have a type\n        ProfileVersion:\n          description: The version number of the certification\n          type: number\n          x-required-message: Version must be provided\n        Status:\n          default: Awaiting Certification\n          description: Is this certification current or expired\n          enum:\n          - Awaiting Certification\n          - Certified\n          - Deprecated\n          - Rejected\n          - Self-Certified\n          type: string\n      type: object\n    AuthorisationServerCertificationId:\n      description: Unique ID associated with the auth server certification\n      maxLength: 40\n      minLength: 1\n      type: string\n    AuthorisationServerCertificationRequest:\n      properties:\n        CertificationStartDate:\n          maxLength: 10\n          pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$\n          type: string\n          x-pattern-message: Date must match the format of dd/mm/yyyy, for example\n            31/12/2021\n        CertificationURI:\n          $ref: '#/components/schemas/ApiCertificationUri'\n        ProfileVariant:\n          description: Type of certification\n          oneOf:\n          - $ref: '#/components/schemas/CertificationCibaEnum'\n          - $ref: '#/components/schemas/CertificationRedirectEnum'\n          - $ref: '#/components/schemas/CertificationDCREnum'\n          type: string\n          x-required-message: Certification needs to have a type\n        ProfileVersion:\n          description: The version number of the certification\n          type: number\n          x-required-message: Version must be provided\n        Status:\n          default: Awaiting Certification\n          description: Is this certification current or expired\n          enum:\n          - Awaiting Certification\n          - Certified\n          - Deprecated\n          - Rejected\n          - Self-Certified\n          type: string\n      type: object\n    AuthorisationServerCertifications:\n      description: The list of certifications for a given authorisation server\n      items:\n        $ref: '#/components/schemas/AuthorisationServerCertification'\n      type: array\n    AuthorisationServerId:\n      maxLength: 40\n      type: string\n    AuthorisationServerRequest:\n      properties:\n        AutoRegistrationSupported:\n          description: Default is true\n          type: boolean\n          x-required-message: AutoRegistrationSupported must be provided\n        CustomerFriendlyDescription:\n          description: A customer friendly description\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: CustomerFriendlyDescription must be provided\n        CustomerFriendlyLogoUri:\n          description: A compliant URI\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\\.(svg)$\n          type: string\n          x-pattern-message: CustomerFriendlyLogoUri must be in a URI format https://*.svg\n            or http://*.svg\n          x-required-message: CustomerFriendlyLogoUri must be provided\n        CustomerFriendlyName:\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: CustomerFriendlyName must be provided\n        DeveloperPortalUri:\n          description: A compliant URI\n          maxLength: 255\n          nullable: true\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: DeveloperPortalUri must be in a URI format https://...\n            or http://...\n        NotificationWebhook:\n          description: A compliant URI\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: WebhookUri must be in a URI format https://... or http://...\n        OpenIDDiscoveryDocument:\n          description: A compliant URI\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: OpenIDDiscoveryDocument must be in a URI format https://...\n            or http://...\n          x-required-message: OpenIDDiscoveryDocument must be provided\n        ParentAuthorisationServerId:\n          $ref: '#/components/schemas/AuthorisationServerId'\n        PayloadSigningCertLocationUri:\n          description: A compliant URI\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: PayloadSigningCertLocationUri must be in a URI format\n            https://... or http://...\n          x-required-message: PayloadSigningCertLocationUri must be provided\n        TermsOfServiceUri:\n          description: A compliant URI\n          maxLength: 255\n          nullable: true\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: TermsOfServiceUri must be in a URI format https://...\n            or http://...\n      required:\n      - AutoRegistrationSupported\n      - CustomerFriendlyName\n      - CustomerFriendlyLogoUri\n      - OpenIDDiscoveryDocument\n      - PayloadSigningCertLocationUri\n      - CustomerFriendlyDescription\n      type: object\n    AuthorisationServers:\n      items:\n        $ref: '#/components/schemas/AuthorisationServer'\n      type: array\n    Authorities:\n      items:\n        $ref: '#/components/schemas/Authority'\n      type: array\n    Authority:\n      properties:\n        AuthorityCode:\n          description: Code of the Authority i.e. FCA, etc\n          maxLength: 40\n          type: string\n          x-required-message: AuthorityCode must be provided\n        AuthorityCountry:\n          description: country of the Authority\n          maxLength: 255\n          type: string\n        AuthorityId:\n          $ref: '#/components/schemas/AuthorityId'\n        AuthorityName:\n          description: Name of the Authority i.e. FCA, etc\n          maxLength: 255\n          type: string\n        AuthorityUri:\n          description: URI of the authority\n          type: string\n        Status:\n          description: Is this Authority Active/Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    AuthorityAuthorisationDomain:\n      properties:\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          type: string\n        AuthorityAuthorisationDomainId:\n          description: The GUID of the Authority-Domain mapping\n          type: string\n        AuthorityId:\n          description: The GUID of the Authority\n          type: string\n        Status:\n          default: Active\n          description: Is this user Active or Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    AuthorityAuthorisationDomainId:\n      description: Mapping ID between Authority and Authorisation Domain\n      maxLength: 50\n      type: string\n    AuthorityAuthorisationDomainRequest:\n      properties:\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          minLength: 1\n          type: string\n          x-required-message: The authorisation domain name is mandatory\n      required:\n      - AuthorisationDomainName\n      type: object\n    AuthorityAuthorisationDomainsPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/AuthorityAuthorisationDomain'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    AuthorityId:\n      description: Unique ID associated with the Authorisation reference schema\n      maxLength: 40\n      minLength: 1\n      type: string\n    AuthorityRequest:\n      properties:\n        AuthorityCode:\n          description: Code of the Authority i.e. GBFCA, etc\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: AuthorityID must be provided\n        AuthorityCountry:\n          description: Country of the authority\n          maxLength: 255\n          minLength: 2\n          type: string\n          x-required-message: AuthorityCountry must be provided\n        AuthorityName:\n          description: The ID of the Authority i.e GBFCA, etc\n          maxLength: 40\n          minLength: 1\n          type: string\n          x-required-message: AuthorityName must be provided\n        AuthorityUri:\n          description: URI of the authority\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: AuthorityUri must be in a URI format https://... or http://...\n          x-required-message: AuthorityUri must be provided\n      required:\n      - AuthorityName\n      - AuthorityCode\n      - AuthorityUri\n      - AuthorityCountry\n      type: object\n    CertificateOrKey:\n      properties:\n        false:\n          maxLength: 255\n          type: string\n        ClientName:\n          maxLength: 40\n          type: string\n        ExpiryDateTime:\n          maxLength: 30\n          type: string\n        JwkPath:\n          description: Used to display path to JWKS containing this certificate\n          maxLength: 255\n          type: string\n        OrgJwkPath:\n          description: Used to display path to Org JWKS containing org certificates\n          maxLength: 255\n          type: string\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        SignedCertPath:\n          description: Used to display location of the signed certificate in PEM format\n          maxLength: 255\n          type: string\n        SoftwareStatementIds:\n          items:\n            $ref: '#/components/schemas/SoftwareStatementId'\n          type: array\n        Status:\n          maxLength: 40\n          type: string\n        ValidFromDateTime:\n          maxLength: 30\n          type: string\n        e:\n          maxLength: 255\n          type: string\n        keyType:\n          maxLength: 255\n          type: string\n        kid:\n          maxLength: 255\n          type: string\n        kty:\n          maxLength: 255\n          type: string\n        use:\n          maxLength: 255\n          type: string\n        x5c:\n          items:\n            description: A PKIX certificate [RFC5280]\n            maxLength: 255\n            type: string\n          type: array\n        x5t:\n          maxLength: 255\n          type: string\n        x5thashS256:\n          maxLength: 255\n          type: string\n        x5u:\n          maxLength: 255\n          type: string\n      type: object\n    CertificateOrKeyId:\n      maxLength: 255\n      type: string\n    CertificateOrKeyOrJWT:\n      type: string\n    CertificatesOrKeys:\n      items:\n        $ref: '#/components/schemas/CertificateOrKey'\n      type: array\n    CertificationCibaEnum:\n      description: The type of ciba certification\n      enum:\n      - FAPI-CIBA OP poll w/ MTLS\n      - FAPI-CIBA OP poll w/ Private Key\n      - FAPI-CIBA OP Ping w/ MTLS\n      - FAPI-CIBA OP Ping w/ Private Key\n      type: string\n    CertificationDCREnum:\n      description: The type of DCR certification\n      enum:\n      - DCR Signed payload - JWT\n      - DCR Unsigned payload- JSON\n      type: string\n    CertificationExpirationDate:\n      description: JSONDatetime of certification expiration date\n      type: string\n    CertificationManager:\n      properties:\n        Email:\n          description: The certification managers email address\n          type: string\n        Status:\n          default: Active\n          description: Is this certification manager Active or Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    CertificationManagerCreationRequest:\n      properties:\n        Email:\n          description: The super user email address\n          minLength: 1\n          type: string\n          x-required-message: The super user email address is mandatory\n      required:\n      - Email\n      type: object\n    CertificationManagers:\n      items:\n        $ref: '#/components/schemas/CertificationManager'\n      type: array\n    CertificationRedirectEnum:\n      description: The type of redirect certifications\n      enum:\n      - FAPI Adv. OP w/ MTLS\n      - FAPI Adv. OP w/ MTLS, PAR\n      - FAPI Adv. OP w/ Private Key\n      - FAPI Adv. OP w/ Private Key, PAR\n      type: string\n    CertificationStartDate:\n      description: JSONDatetime of certification start date\n      pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$\n      type: string\n    ClientCreationRequest:\n      properties:\n        additional_software_metadata:\n          additionalProperties: {}\n          type: object\n        grant_types:\n          description: grant_types uri must be provided. For client_credentials this\n            should be array containing [\"client_credentials\"]\n          items:\n            type: string\n            uniqueItems: true\n          type: array\n          x-required-message: grant_types uri must be provided. For client_credentials\n            this should be array containing [\"client_credentials\"]\n        id_token_signed_response_alg:\n          default: PS256\n          description: Signing algorithim that a client expects the server to return\n            an id_token with. Must be PS256\n          enum:\n          - PS256\n          type: string\n          x-required-message: id_token_signed_response_alg must be provided\n        jwks_uri:\n          description: Link to the application active jwks\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-required-message: Link to the application active jwks\n        organisation_id:\n          $ref: '#/components/schemas/OrganisationId'\n        organisation_name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: organisation_name must be provided\n        organisation_number:\n          description: the cnpj number of the organisation\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: organisation_number must be provided\n        redirect_uris:\n          description: redirect_uris uri must be provided. For client_credentials\n            this should be an empty array.\n          items:\n            type: string\n            uniqueItems: true\n          type: array\n          x-required-message: redirect_uris uri must be provided. For client_credentials\n            this should be an empty array.\n        response_types:\n          description: response_types uri must be provided. For client_credentials\n            this should be an empty array\n          items:\n            type: string\n            uniqueItems: true\n          type: array\n          x-required-message: response_types uri must be provided. For client_credentials\n            this should be an empty array\n        scope:\n          description: scopes to be tagged\n          type: string\n          x-required-message: scope must be provided.\n        software_description:\n          maxLength: 255\n          type: string\n          x-required-message: software_description must be provided\n        software_id:\n          maxLength: 255\n          minLength: 1\n          type: string\n        software_roles:\n          description: array of software roles\n          items:\n            type: string\n          type: array\n        tls_client_auth_subject_dn:\n          description: The DN of the certificate that will be used to authenticate\n            to this client\n          maxLength: 250\n          type: string\n        token_endpoint_auth_method:\n          default: private_key_jwt\n          description: Token endpoint authentication method\n          enum:\n          - private_key_jwt\n          - tls_client_auth\n          - client_secret_basic\n          maxLength: 60\n          minLength: 1\n          type: string\n          x-required-message: Token endpoint auth method must be provided\n      required:\n      - id_token_signed_response_alg\n      - token_endpoint_auth_method\n      - jwks_uri\n      - redirect_uris\n      - response_types\n      - grant_types\n      - scope\n      - organisation_id\n      - organisation_name\n      - organisation_number\n      - software_roles\n      type: object\n    ClientCreationResponse:\n      properties:\n        application_type:\n          default: web\n          description: OIDC application type response\n          enum:\n          - web\n          type: string\n        authorization_signed_response_alg:\n          type: string\n        backchannel_user_code_parameter:\n          type: boolean\n        client_id:\n          type: string\n        client_id_issued_at:\n          type: number\n        client_secret:\n          type: string\n        client_secret_expires_at:\n          type: number\n        grant_types:\n          description: grant_types\n          items:\n            type: string\n          type: array\n        id_token_signed_response_alg:\n          type: string\n        introspection_endpoint_auth_method:\n          type: string\n        jwks_uri:\n          type: string\n        organisation_id:\n          $ref: '#/components/schemas/OrganisationId'\n        organisation_name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: organisation_name must be provided\n        organisation_number:\n          description: the cnpj number of the organisation\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: organisation_number must be provided\n        post_logout_redirect_uris:\n          description: post_logout_redirect_uris\n          items:\n            type: string\n          type: array\n        redirect_uris:\n          description: redirect_uris\n          items:\n            type: string\n          type: array\n        registration_access_token:\n          description: token used to manage client post creation\n          type: string\n        registration_client_uri:\n          description: management uri location to manage client post creation\n          type: string\n        request_object_signing_alg:\n          type: string\n        require_auth_time:\n          type: boolean\n        require_pushed_authorization_requests:\n          type: boolean\n        require_signed_request_object:\n          type: boolean\n        response_types:\n          description: response_types\n          items:\n            type: string\n          type: array\n        revocation_endpoint_auth_method:\n          type: string\n        scope:\n          type: string\n        software_description:\n          maxLength: 255\n          type: string\n          x-required-message: software_description must be provided\n        software_roles:\n          description: array of software roles\n          items:\n            type: string\n          type: array\n        subject_type:\n          type: string\n        tls_client_certificate_bound_access_token:\n          type: boolean\n        token_endpoint_auth_method:\n          type: string\n      type: object\n    ClientUpdateRequest:\n      properties:\n        additional_software_metadata:\n          additionalProperties: {}\n          type: object\n        client_id:\n          type: string\n        client_secret:\n          type: string\n        grant_types:\n          description: grant_types uri must be provided. For client_credentials this\n            should be array containing [\"client_credentials\"]\n          items:\n            type: string\n            uniqueItems: true\n          type: array\n          x-required-message: grant_types uri must be provided. For client_credentials\n            this should be array containing [\"client_credentials\"]\n        id_token_signed_response_alg:\n          default: PS256\n          description: Signing algorithim that a client expects the server to return\n            an id_token with. Must be PS256\n          enum:\n          - PS256\n          type: string\n          x-required-message: id_token_signed_response_alg must be provided\n        jwks_uri:\n          description: Link to the application active jwks\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-required-message: Link to the application active jwks\n        organisation_id:\n          $ref: '#/components/schemas/OrganisationId'\n        organisation_name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: organisation_name must be provided\n        organisation_number:\n          description: the cnpj number of the organisation\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: organisation_number must be provided\n        redirect_uris:\n          description: redirect_uris uri must be provided. For client_credentials\n            this should be an empty array.\n          items:\n            type: string\n            uniqueItems: true\n          type: array\n          x-required-message: redirect_uris uri must be provided. For client_credentials\n            this should be an empty array.\n        response_types:\n          description: response_types uri must be provided. For client_credentials\n            this should be an empty array\n          items:\n            type: string\n            uniqueItems: true\n          type: array\n          x-required-message: response_types uri must be provided. For client_credentials\n            this should be an empty array\n        scope:\n          description: scopes to be tagged\n          type: string\n          x-required-message: scope must be provided.\n        software_description:\n          maxLength: 255\n          type: string\n          x-required-message: software_description must be provided\n        software_roles:\n          description: array of software roles\n          items:\n            type: string\n          type: array\n        tls_client_auth_subject_dn:\n          description: The DN of the certificate that will be used to authenticate\n            to this client\n          maxLength: 250\n          type: string\n        token_endpoint_auth_method:\n          default: private_key_jwt\n          description: Token endpoint authentication method\n          enum:\n          - private_key_jwt\n          - tls_client_auth\n          - client_secret_basic\n          maxLength: 60\n          minLength: 1\n          type: string\n          x-required-message: Token endpoint auth method must be provided\n      required:\n      - id_token_signed_response_alg\n      - token_endpoint_auth_method\n      - jwks_uri\n      - redirect_uris\n      - response_types\n      - grant_types\n      - scope\n      - organisation_id\n      - organisation_name\n      - organisation_number\n      - software_roles\n      - client_id\n      - client_secret\n    Contact:\n      properties:\n        AdditionalInformation:\n          description: Any additional user information\n          maxLength: 65535\n          type: string\n        AddressLine1:\n          description: Address line 1\n          maxLength: 255\n          type: string\n        AddressLine2:\n          description: Address line 2\n          maxLength: 255\n          type: string\n        City:\n          description: City\n          maxLength: 255\n          type: string\n        ContactId:\n          description: Unique contact ID for the row.\n          type: string\n        ContactType:\n          default: Business\n          enum:\n          - Business\n          - Technical\n          - Billing\n          - Incident\n          - Security\n          type: string\n        Country:\n          description: Country\n          maxLength: 255\n          type: string\n        Department:\n          maxLength: 255\n          type: string\n        EmailAddress:\n          maxLength: 255\n          pattern: ^(([^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+(\\.[^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\n          type: string\n          x-pattern-message: EmailAddress must be a valid email\n        FirstName:\n          maxLength: 255\n          type: string\n        LastName:\n          maxLength: 255\n          type: string\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        PgpPublicKey:\n          description: A PGP Public Key in text form\n          maxLength: 65535\n          type: string\n        PhoneNumber:\n          maxLength: 18\n          type: string\n        Postcode:\n          description: Postcode\n          maxLength: 40\n          type: string\n      type: object\n    ContactId:\n      maxLength: 255\n      type: string\n    ContactRequest:\n      properties:\n        AdditionalInformation:\n          description: Any additional user information\n          maxLength: 65535\n          type: string\n        AddressLine1:\n          description: Address line 1\n          maxLength: 255\n          type: string\n        AddressLine2:\n          description: Address line 2\n          maxLength: 255\n          type: string\n        City:\n          description: City\n          maxLength: 255\n          type: string\n        ContactType:\n          default: Business\n          description: The type of Contact, default contact type is Business.\n          enum:\n          - Business\n          - Technical\n          - Billing\n          - Incident\n          - Security\n          type: string\n          x-required-message: ContactType must be provided\n        Country:\n          description: Country\n          maxLength: 255\n          type: string\n        Department:\n          maxLength: 255\n          type: string\n        EmailAddress:\n          maxLength: 255\n          pattern: ^(([^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+(\\.[^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\n          type: string\n          x-pattern-message: EmailAddress must be a valid email\n        FirstName:\n          maxLength: 255\n          type: string\n        LastName:\n          maxLength: 255\n          type: string\n        PgpPublicKey:\n          description: A PGP Public Key in text form\n          maxLength: 65535\n          type: string\n        PhoneNumber:\n          maxLength: 18\n          minLength: 0\n          type: string\n          x-required-message: PhoneNumber must be provided\n        Postcode:\n          description: Postcode\n          maxLength: 40\n          type: string\n      required:\n      - ContactType\n      - EmailAddress\n      type: object\n    ContactRoleEnum:\n      description: The role of the contact\n      enum:\n      - PTC\n      - STC\n      - PBC\n      - SBC\n      - PSDC\n      - SSDC\n      - PDRC\n      - SDRC\n      - PPC\n      - SPC\n      - PCPC\n      - SCPC\n      type: string\n    Contacts:\n      description: The list of contacts\n      items:\n        $ref: '#/components/schemas/Contact'\n      type: array\n    ContactsPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/Contact'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    DomainRoleDetail:\n      properties:\n        AuthorisationDomainName:\n          type: string\n        AuthorisationDomainRoleName:\n          type: string\n        ContactRole:\n          $ref: '#/components/schemas/ContactRoleEnum'\n        Status:\n          $ref: '#/components/schemas/StatusEnum'\n        System:\n          $ref: '#/components/schemas/SystemEnum'\n      type: object\n    EssPollResponse:\n      properties:\n        EssEnvelopeId:\n          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'\n        ExternalSigningServiceEnvelopeStatus:\n          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n      type: object\n    EssPollResponses:\n      items:\n        $ref: '#/components/schemas/EssPollResponse'\n      type: array\n    EssSignRequest:\n      properties:\n        NoOfSigners:\n          type: integer\n        TnCId:\n          $ref: '#/components/schemas/TnCId'\n      type: object\n    ExternalSigningService:\n      properties:\n        ExternalSigningServiceEmailSubject:\n          description: The Subject of the Email for External Signing Service\n          maxLength: 100\n          minLength: 1\n          type: string\n          x-required-message: Email Subject must be provided\n        ExternalSigningServiceName:\n          $ref: '#/components/schemas/ExternalSigningServiceName'\n        ExternalSigningServiceSignerTemplateConfig:\n          $ref: '#/components/schemas/ExternalSigningServiceSignerTemplateConfig'\n        ExternalSigningServiceSubject:\n          description: The Subject of the External Signing Service\n          minLength: 1\n          type: string\n          x-required-message: Subject must be provided\n      type: object\n    ExternalSigningServiceEnvelopeId:\n      description: The envelope id of the ess signing request\n      type: string\n    ExternalSigningServiceEnvelopeStatus:\n      enum:\n      - completed\n      - created\n      - declined\n      - deleted\n      - delivered\n      - processing\n      - sent\n      - signed\n      - template\n      - voided\n      - expired\n    ExternalSigningServiceName:\n      description: The Name of the External Signing Service\n      enum:\n      - DocuSign\n      type: string\n      x-required-message: External signing service name must be provided\n    ExternalSigningServiceSignerTemplateConfig:\n      properties:\n        Signer1TemplateId:\n          description: Template ID for 1 signer\n          minLength: 1\n          type: string\n        Signer1Version:\n          description: Version of the TnC document\n          readOnly: true\n          type: integer\n        Signer2TemplateId:\n          description: Template ID for 2 signers\n          minLength: 1\n          type: string\n        Signer2Version:\n          description: Version of the TnC document\n          readOnly: true\n          type: integer\n        Signer3TemplateId:\n          description: Template ID for 3 signers\n          minLength: 1\n          type: string\n        Signer3Version:\n          description: Version of the TnC document\n          readOnly: true\n          type: integer\n        Signer4TemplateId:\n          description: Template ID for 4 signers\n          minLength: 1\n          type: string\n        Signer4Version:\n          description: Version of the TnC document\n          readOnly: true\n          type: integer\n        Signer5TemplateId:\n          description: Template ID for 5 signers\n          minLength: 1\n          type: string\n        Signer5Version:\n          description: Version of the TnC document\n          readOnly: true\n          type: integer\n        Signer6TemplateId:\n          description: Template ID for 6 signers\n          minLength: 1\n          type: string\n        Signer6Version:\n          description: Version of the TnC document\n          readOnly: true\n          type: integer\n      type: object\n    HttpResponseBody:\n      properties:\n        errors:\n          description: Validation Error messages\n          items:\n            type: string\n          type: array\n      type: object\n    Introspection:\n      properties:\n        active:\n          description: if the token has expired\n          type: boolean\n        client_id:\n          description: id of client who owns the token\n          maxLength: 30\n          type: string\n        exp:\n          description: expiration time in ms\n          type: string\n        iat:\n          description: when the token was issued\n          type: string\n        iss:\n          description: the issuer\n          type: string\n        jti:\n          description: unique string\n          type: string\n        scope:\n          description: scope\n          type: string\n        sub:\n          description: subject of token (not always present, depending on the token)\n          type: string\n        token_type:\n          description: type of token\n          type: string\n      type: object\n    IntrospectionRequest:\n      properties:\n        token:\n          description: Oauth 2.0 token to be introspected\n          minLength: 1\n          type: string\n          x-required-message: a token must be provided\n      required:\n      - token\n      type: object\n    MetadataId:\n      description: Unique Metadata Id\n      maxLength: 40\n      type: string\n    MetadataListResponse:\n      items:\n        $ref: '#/components/schemas/MetadataResponse'\n      type: array\n    MetadataRequest:\n      properties:\n        Name:\n          description: The name of the metadata object\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: Metadata name must be provided\n        Type:\n          description: The type of metadata i.e. scope, grant_type...\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: Metadata type must be provided\n      type: object\n    MetadataResponse:\n      properties:\n        DomainRoleName:\n          $ref: '#/components/schemas/AuthorisationDomainRoleName'\n        MetadataId:\n          $ref: '#/components/schemas/MetadataId'\n        Name:\n          description: The name of the metadata object\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: Metadata name must be provided\n        Type:\n          description: The type of metadata i.e. scope, grant_type...\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: Metadata type must be provided\n      type: object\n    NotificationWebhookStatusEnum:\n      default: Pending\n      enum:\n      - Pending\n      - Confirmed\n      - Deactivated\n      type: string\n    OrgAccessDetail:\n      properties:\n        DomainRoleDetails:\n          description: Array of domain, role and status of domain role mapping\n          items:\n            $ref: '#/components/schemas/DomainRoleDetail'\n          type: array\n        OrgAdmin:\n          description: Is the user the org admin of the current org\n          type: boolean\n        OrgRegistrationNumber:\n          description: CNPJ/Registration number of the org\n          type: string\n      type: object\n    OrgAdminUserCreateRequest:\n      properties:\n        UserEmail:\n          description: Admin user email address\n          pattern: ^(([^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+(\\.[^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\n          type: string\n          x-pattern-message: EmailAddress must be a valid email\n      required:\n      - UserEmail\n      type: object\n    OrgTermsAndConditionsDetail:\n      description: Participant TnC details\n      properties:\n        InitiatedBy:\n          description: Email of the user who initiated the External signing for this\n            participant\n          type: string\n        Role:\n          description: Role of the user who initiated the External signing for this\n            participant\n          type: string\n        TermsAndConditionsDetail:\n          $ref: '#/components/schemas/TermsAndConditionsDetail'\n      type: object\n    OrgTermsAndConditionsPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/OrgTermsAndConditionsDetail'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    Organisation:\n      properties:\n        AddressLine1:\n          description: Address line 1\n          maxLength: 255\n          type: string\n        AddressLine2:\n          description: Address line 2\n          maxLength: 255\n          type: string\n        City:\n          description: City\n          maxLength: 255\n          type: string\n        CompanyRegister:\n          description: Legal company register for the country, i.e. Companies House\n          maxLength: 255\n          type: string\n        Country:\n          description: Country\n          maxLength: 255\n          type: string\n        CountryOfRegistration:\n          description: Country of registration for the org\n          maxLength: 255\n          type: string\n        CreatedOn:\n          description: JSONDatetime of organisation creation.\n          maxLength: 30\n          type: string\n        LegalEntityName:\n          description: Legal Entity name for the org. Usually the same as org name\n          maxLength: 255\n          type: string\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        OrganisationName:\n          description: Name of the organisation.\n          maxLength: 255\n          type: string\n        ParentOrganisationReference:\n          description: Parent Organisation Reference\n          maxLength: 65535\n          type: string\n        Postcode:\n          description: Postcode\n          maxLength: 40\n          type: string\n        RegisteredName:\n          maxLength: 255\n          type: string\n        RegistrationId:\n          description: Registered ID for the organisation i.e. Legal Entity identifier\n            number\n          maxLength: 40\n          type: string\n        RegistrationNumber:\n          description: Company registration number from company register i.e. Companies\n            House registration number\n          maxLength: 255\n          type: string\n        RequiresParticipantTermsAndConditionsSigning:\n          description: true - this organisation requires terms and conditions to be\n            signed. false - this organisation does not require terms and conditions\n            to be signed\n          type: boolean\n        Size:\n          description: Size of the organisation\n          maxLength: 255\n          type: string\n        Status:\n          default: Active\n          description: Status of the directory registration of an organisation\n          enum:\n          - Active\n          - Pending\n          - Withdrawn\n          type: string\n        Tags:\n          description: Tags to describe or classify an organisation\n          items:\n            type: string\n          type: array\n      type: object\n    OrganisationAdminUser:\n      properties:\n        DomainRoleDetails:\n          items:\n            $ref: '#/components/schemas/DomainRoleDetail'\n          type: array\n        Status:\n          description: Is the admin user active\n          enum:\n          - Active\n          - Inactive\n          type: string\n        UserEmail:\n          description: User's email address\n          type: string\n      type: object\n    OrganisationAdminUsers:\n      items:\n        $ref: '#/components/schemas/OrganisationAdminUser'\n      type: array\n    OrganisationAuthorisationId:\n      description: Unique ID associated with authorisations for organisation's authority\n        claims\n      maxLength: 40\n      minLength: 1\n      type: string\n    OrganisationAuthorityClaim:\n      properties:\n        AuthorisationDomain:\n          description: Authorisation Domain for the authority\n          maxLength: 30\n          type: string\n        Authorisations:\n          items:\n            properties:\n              MemberState:\n                description: Abbreviated states information i.e. GB, IE, NL etc\n                maxLength: 2\n                type: string\n              Status:\n                default: Active\n                description: Is this authorsation Active/Inactive\n                enum:\n                - Active\n                - Inactive\n                type: string\n            type: object\n          type: array\n        AuthorityId:\n          $ref: '#/components/schemas/AuthorityId'\n        OrganisationAuthorityClaimId:\n          $ref: '#/components/schemas/OrganisationAuthorityClaimId'\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        RegistrationId:\n          description: Registration ID for the organisation\n          maxLength: 40\n          type: string\n        Role:\n          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII\n          maxLength: 30\n          type: string\n        Status:\n          default: Active\n          description: Is this software statement Active/Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n        UniqueTechnicalIdenifier:\n          items:\n            maxLength: 255\n            type: string\n          type: array\n      type: object\n    OrganisationAuthorityClaimAuthorisation:\n      properties:\n        MemberState:\n          description: Abbreviated states information i.e. GB, IE, NL etc\n          maxLength: 10\n          type: string\n        OrganisationAuthorisationId:\n          $ref: '#/components/schemas/OrganisationAuthorisationId'\n        OrganisationAuthorityClaimId:\n          $ref: '#/components/schemas/OrganisationAuthorityClaimId'\n        Status:\n          default: Active\n          description: Is this authority claim Active/Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    OrganisationAuthorityClaimAuthorisationRequest:\n      properties:\n        MemberState:\n          description: Abbreviated states information i.e. GB, IE, NL etc\n          maxLength: 10\n          minLength: 2\n          type: string\n          x-required-message: MemberState must be provided\n        Status:\n          default: Active\n          description: Is this Active/Inactive - default is Active\n          enum:\n          - Active\n          - Inactive\n          type: string\n          x-required-message: Status must be provided\n      required:\n      - Status\n      - MemberState\n      type: object\n    OrganisationAuthorityClaimAuthorisations:\n      items:\n        $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'\n      type: array\n    OrganisationAuthorityClaimId:\n      description: Unique ID associated with the authority claims\n      maxLength: 40\n      minLength: 1\n      type: string\n    OrganisationAuthorityClaimRequest:\n      properties:\n        AuthorisationDomain:\n          description: Authorisation domain for the authority\n          maxLength: 30\n          minLength: 1\n          type: string\n          x-required-message: AuthorisationDomain must be provided\n        AuthorityId:\n          $ref: '#/components/schemas/AuthorityId'\n        RegistrationId:\n          description: Registration ID for the organisation\n          maxLength: 40\n          minLength: 1\n          type: string\n          x-required-message: RegistrationId must be provided\n        Role:\n          description: Role for the authority\n          maxLength: 30\n          minLength: 1\n          type: string\n          x-required-message: Role must be provided\n        Status:\n          default: Active\n          description: Is this authority claim Active/Inactive, default is Active\n          enum:\n          - Active\n          - Inactive\n          type: string\n          x-required-message: Status must be provided\n        UniqueTechnicalIdenifier:\n          items:\n            maxLength: 255\n            type: string\n          type: array\n      required:\n      - RegistrationId\n      - Status\n      - AuthorisationDomain\n      - AuthorityId\n      - Role\n      type: object\n    OrganisationAuthorityClaims:\n      items:\n        $ref: '#/components/schemas/OrganisationAuthorityClaim'\n      type: array\n    OrganisationAuthorityDomainClaim:\n      properties:\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          type: string\n        AuthorityId:\n          description: The GUID of the Authority\n          type: string\n        AuthorityName:\n          description: The name of the Authority\n          type: string\n        OrganisationAuthorityDomainClaimId:\n          description: The unique org authority domain claim ID\n          type: string\n        RegistrationId:\n          description: The registration ID\n          type: string\n        Status:\n          default: Active\n          description: Is this user Active or Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    OrganisationAuthorityDomainClaimId:\n      description: Organisation Authority Domain Claim ID\n      maxLength: 50\n      type: string\n    OrganisationAuthorityDomainClaimRequest:\n      properties:\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          minLength: 1\n          type: string\n          x-required-message: The authorisation domain name is mandatory\n        AuthorityId:\n          description: The Authority ID\n          minLength: 1\n          type: string\n          x-required-message: The Authority ID is mandatory\n        RegistrationId:\n          description: The registration ID\n          type: string\n      required:\n      - AuthorityId\n      - AuthorisationDomainName\n      type: object\n    OrganisationAuthorityDomainClaimUpdateRequest:\n      properties:\n        AuthorisationDomainName:\n          description: The authorisation domain name\n          minLength: 1\n          type: string\n          x-required-message: The authorisation domain name is mandatory\n        AuthorityId:\n          description: The GUID of the Authority\n          type: string\n        AuthorityName:\n          description: The name of the Authority\n          type: string\n        RegistrationId:\n          description: The registration ID\n          type: string\n        Status:\n          description: Is this claim Active or Inactive\n          type: string\n      required:\n      - AuthorityId\n      - Status\n      - AuthorityName\n      - AuthorisationDomainName\n      type: object\n    OrganisationAuthorityDomainClaims:\n      items:\n        $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'\n      type: array\n    OrganisationAuthorityDomainClaimsPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    OrganisationCertificateType:\n      default: rtsseal\n      enum:\n      - qwac\n      - qseal\n      - rtswac\n      - rtsseal\n      - brseal\n      - brseal_ext\n      type: string\n    OrganisationConformanceTest:\n      properties:\n        ApiFamilyType:\n          description: The family type of the resource url to be tested (for example\n            channels_branches)\n          type: string\n          x-required-message: The ApiFamilyType must be provided\n        ResourceUrl:\n          description: The url of the API to be tested (for example, https://matls-api.mockbank.poc.raidiam.io/open-banking/products-services/v1/personal-accounts)\n          type: string\n          x-required-message: The ResourceUrl must be provided\n      required:\n      - ResourceUrl\n      - ApiFamilyType\n      type: object\n    OrganisationConformanceTestResult:\n      description: a JSON response with the result of the test\n      properties:\n        result:\n          description: Boolean with the result of the execution of the Conformance\n            Suite Test\n          type: boolean\n        testPlanUrl:\n          description: URL of the published test plan result\n          type: string\n      type: object\n    OrganisationEnrol:\n      properties:\n        ClientName:\n          description: ORG name as per eIDAS certificate\n          maxLength: 255\n          minLength: 1\n          x-required-message: ClientName must be provided\n        ClientUri:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: ClientUri must be in a URI format https://... or http://...\n          x-required-message: ClientUri must be provided\n        GrantTypes:\n          items:\n            maxLength: 40\n            minLength: 1\n            type: string\n          type: array\n          x-required-message: GrantTypes must be provided\n        LogoUri:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: LogoUri must be in a URI format https://... or http://...\n          x-required-message: LogoUri must be provided\n        PolicyUri:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: PolicyUri must be in a URI format https://... or http://...\n          x-required-message: PolicyUri must be provided\n        RedirectUris:\n          items:\n            description: A compliant URI\n            format: uri\n            pattern: ^(https:\\/\\/).*\n            type: string\n            x-pattern-message: RedirectUris must be in a URI format https://...\n            x-required-message: RedirectUris must be provided\n          type: array\n        ResponseTypes:\n          items:\n            maxLength: 40\n            minLength: 1\n            type: string\n          type: array\n          x-required-message: ResponseTypes must be provided\n        Scope:\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: Scope must be provided\n        TokenEndpointAuthMethod:\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: TokenEndpointAuthMethod must be provided\n        TosUri:\n          description: A compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: TosUri must be in a URI format https://... or http://...\n          x-required-message: TosUri must be provided\n      required:\n      - RedirectUris\n      - TokenEndpointAuthMethod\n      - GrantTypes\n      - ResponseTypes\n      - ClientName\n      - ClientUri\n      - LogoUri\n      - Scope\n      - TosUri\n      - PolicyUri\n      type: object\n    OrganisationEnrolments:\n      description: A JSON object DCR response returned when client gets created.\n      items:\n        properties:\n          ClientName:\n            description: ORG name as per eIDAS certificate\n            maxLength: 255\n            type: string\n          ClientSecret:\n            description: Client secret generated by Directory\n            maxLength: 255\n            type: string\n          ClientUri:\n            description: A compliant URI string of a web page providing information\n              about the client\n            format: uri\n            maxLength: 255\n            pattern: ^(http:\\/\\/|https:\\/\\/).*\n            type: string\n            x-pattern-message: ClientUri must be in a URI format https://... or http://...\n          GrantTypes:\n            items:\n              maxLength: 40\n              type: string\n            type: array\n          Jwks:\n            description: Client's JSON Web Key Set [RFC7517] document value\n            maxLength: 255\n            type: object\n          JwksUri:\n            description: A compliant URI string referencing the client's JSON Web\n              Key (JWK) Set\n            format: uri\n            maxLength: 255\n            pattern: ^(http:\\/\\/|https:\\/\\/).*\n            type: string\n            x-pattern-message: JwksUri must be in a URI format https://... or http://...\n          LogoUri:\n            description: A compliant URI\n            format: uri\n            maxLength: 255\n            pattern: ^(http:\\/\\/|https:\\/\\/).*\n            type: string\n            x-pattern-message: LogoUri must be in a URI format https://... or http://...\n          OrganisationId:\n            $ref: '#/components/schemas/OrganisationId'\n          PolicyUri:\n            description: A compliant URI string that points to a human-readable privacy\n              policy document\n            format: uri\n            maxLength: 255\n            pattern: ^(http:\\/\\/|https:\\/\\/).*\n            type: string\n            x-pattern-message: PolicyUri must be in a URI format https://... or http://...\n          RedirectUris:\n            items:\n              description: A compliant URI\n              format: uri\n              maxLength: 255\n              pattern: ^(http:\\/\\/|https:\\/\\/).*\n              type: string\n              x-pattern-message: RedirectUris must be in a URI format https://...\n                or http://...\n            type: array\n          ResponseTypes:\n            items:\n              maxLength: 40\n              type: string\n            type: array\n          TokenEndpointAuthMethod:\n            maxLength: 255\n            type: string\n          TosUri:\n            description: A compliant URI string that points to a human-readable terms\n              of service document for the client\n            format: uri\n            maxLength: 255\n            pattern: ^(http:\\/\\/|https:\\/\\/).*\n            type: string\n            x-pattern-message: TosUri must be in a URI format https://... or http://...\n        type: object\n      type: array\n    OrganisationExportOpenData:\n      properties:\n        AddressLine1:\n          description: Address line 1\n          maxLength: 255\n          type: string\n        AddressLine2:\n          description: Address line 2\n          maxLength: 255\n          type: string\n        AuthorisationServers:\n          $ref: '#/components/schemas/AuthorisationServers'\n        City:\n          description: City\n          maxLength: 255\n          type: string\n        CompanyRegister:\n          description: Legal company register for the country, i.e. Companies House.\n          maxLength: 255\n          type: string\n        Contacts:\n          $ref: '#/components/schemas/Contacts'\n        Country:\n          description: Country\n          maxLength: 255\n          type: string\n        CountryOfRegistration:\n          description: Country of registration for the org\n          maxLength: 255\n          type: string\n        CreatedOn:\n          description: JSONDatetime of organisation creation.\n          maxLength: 30\n          type: string\n        LegalEntityName:\n          description: Legal Entity name for the org. Usually the same as org name\n          maxLength: 255\n          type: string\n        OrgDomainClaims:\n          $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'\n        OrgDomainRoleClaims:\n          $ref: '#/components/schemas/OrganisationAuthorityClaims'\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        OrganisationName:\n          description: Name of the organisation.\n          maxLength: 255\n          type: string\n        ParentOrganisationReference:\n          description: Parent Organisation Reference\n          maxLength: 65535\n          type: string\n        Postcode:\n          description: Postcode\n          maxLength: 40\n          type: string\n        RegisteredName:\n          maxLength: 255\n          type: string\n        RegistrationId:\n          description: Registered ID for the organisation i.e. Legal Entity identifier\n            number\n          maxLength: 40\n          type: string\n        RegistrationNumber:\n          description: Company registration number from company register i.e. Companies\n            House registration number\n          maxLength: 255\n          type: string\n        Size:\n          description: Size of an organisation\n          maxLength: 255\n          type: string\n        Status:\n          default: Active\n          description: Status of the directory registration of an organisation\n          enum:\n          - Active\n          - Pending\n          - Withdrawn\n          type: string\n        Tag:\n          description: Label to describe an organisation\n          maxLength: 255\n          type: string\n      type: object\n    OrganisationId:\n      description: Unique ID associated with the organisation\n      maxLength: 40\n      minLength: 1\n      type: string\n    OrganisationRequest:\n      properties:\n        AddressLine1:\n          description: Address line 1\n          maxLength: 255\n          minLength: 5\n          type: string\n          x-required-message: AddressLine1 must be provided\n        AddressLine2:\n          description: Address line 2\n          maxLength: 255\n          type: string\n        City:\n          description: City\n          maxLength: 255\n          minLength: 2\n          type: string\n          x-required-message: City must be provided\n        CompanyRegister:\n          description: Legal company register for the country, i.e. Companies House\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: CompanyRegister must be provided\n        Country:\n          description: Country\n          maxLength: 255\n          minLength: 2\n          type: string\n          x-required-message: Country must be provided\n        CountryOfRegistration:\n          description: Country of registration for the org\n          maxLength: 255\n          minLength: 2\n          type: string\n          x-required-message: CountryOfRegistration must be provided\n        LegalEntityName:\n          description: Legal Entity name for the org. Usually the same as org name\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: LegalEntityName must be provided\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        OrganisationName:\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: OrganisationName must be provided\n        ParentOrganisationReference:\n          description: Parent Organisation Reference\n          maxLength: 65535\n          type: string\n        Postcode:\n          description: Postcode\n          maxLength: 40\n          minLength: 3\n          type: string\n          x-required-message: Postcode must be provided\n        RegisteredName:\n          description: Registered legal name\n          maxLength: 255\n          type: string\n        RegistrationId:\n          description: Registered ID for the organisation i.e. Legal Entity identifier\n            number\n          maxLength: 40\n          type: string\n        RegistrationNumber:\n          description: Company registration number from company register i.e. Companies\n            House registration number\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: RegistrationNumber must be provided\n        RequiresParticipantTermsAndConditionsSigning:\n          default: true\n          description: Participant Terms and Conditions Signing Required\n          type: boolean\n        Size:\n          description: Size of the organisation\n          maxLength: 255\n          type: string\n        Status:\n          default: Active\n          description: Status of the directory registration of an organisation\n          enum:\n          - Active\n          - Pending\n          - Withdrawn\n          type: string\n        Tags:\n          description: Tags to describe or classify an organisation\n          items:\n            type: string\n          type: array\n      required:\n      - OrganisationId\n      - OrganisationName\n      - CountryOfRegistration\n      - CompanyRegister\n      - RegistrationNumber\n      - LegalEntityName\n      - AddressLine1\n      - City\n      - Postcode\n      - Country\n      type: object\n    OrganisationRoles:\n      properties:\n        OrgDomainClaims:\n          items:\n            properties:\n              AuthorisationDomainName:\n                description: The authorisation domain name\n                type: string\n              Status:\n                description: Is this user Active or Inactive\n                enum:\n                - Active\n                - Inactive\n                type: string\n            type: object\n          type: array\n        OrgDomainRoleClaims:\n          items:\n            properties:\n              AuthorisationDomainName:\n                description: The authorisation domain name\n                type: string\n              AuthorisationDomainRoleName:\n                description: The authorisation domain name\n                type: string\n              Status:\n                description: Is this user Active or Inactive\n                enum:\n                - Active\n                - Inactive\n                type: string\n            type: object\n          type: array\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        ParentOrganisationReference:\n          description: Parent Organisation Reference\n          type: string\n        RegisteredName:\n          type: string\n        RegistrationNumber:\n          description: Company registration number from company register i.e. Companies\n            House registration number\n          type: string\n        Status:\n          default: Active\n          description: Status of the directory registration of an organisation\n          enum:\n          - Active\n          - Pending\n          - Withdrawn\n          type: string\n      type: object\n    OrganisationSnapshot:\n      properties:\n        AuthorisationServers:\n          $ref: '#/components/schemas/AuthorisationServers'\n        Contacts:\n          $ref: '#/components/schemas/Contacts'\n        OrgDomainClaims:\n          $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'\n        OrgDomainRoleClaims:\n          $ref: '#/components/schemas/OrganisationAuthorityClaims'\n        OrganisationCertificates:\n          $ref: '#/components/schemas/CertificatesOrKeys'\n        OrganisationDetails:\n          $ref: '#/components/schemas/Organisation'\n        SoftwareStatements:\n          additionalProperties:\n            properties:\n              SoftwareAuthorityClaims:\n                $ref: '#/components/schemas/SoftwareAuthorityClaims'\n              SoftwareCertificates:\n                $ref: '#/components/schemas/CertificatesOrKeys'\n              SoftwareDetails:\n                $ref: '#/components/schemas/SoftwareStatement'\n            type: object\n      type: object\n    OrganisationSnapshotPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/OrganisationSnapshot'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    OrganisationUpdateRequest:\n      properties:\n        AddressLine1:\n          description: Address line 1\n          maxLength: 255\n          minLength: 5\n          type: string\n          x-required-message: AddressLine1 must be provided\n        AddressLine2:\n          description: Address line 2\n          maxLength: 255\n          type: string\n        City:\n          description: City\n          maxLength: 255\n          minLength: 2\n          type: string\n          x-required-message: City must be provided\n        CompanyRegister:\n          description: Legal company register for the country, i.e. Companies House\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: CompanyRegister must be provided\n        Country:\n          description: Country\n          maxLength: 255\n          minLength: 2\n          type: string\n          x-required-message: Country must be provided\n        CountryOfRegistration:\n          description: Country of registration for the org\n          maxLength: 255\n          minLength: 2\n          type: string\n          x-required-message: CountryOfRegistration must be provided\n        LegalEntityName:\n          description: Legal Entity name for the org. Usually the same as org name\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: LegalEntityName must be provided\n        OrganisationName:\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: OrganisationName must be provided\n        ParentOrganisationReference:\n          description: Parent Organisation Reference\n          maxLength: 65535\n          type: string\n        Postcode:\n          description: Postcode\n          maxLength: 40\n          minLength: 3\n          type: string\n          x-required-message: Postcode must be provided\n        RegisteredName:\n          description: Registered legal name\n          maxLength: 255\n          type: string\n        RegistrationId:\n          description: Registered ID for the organisation i.e. Legal Entity identifier\n            number\n          maxLength: 40\n          type: string\n        RegistrationNumber:\n          description: Company registration number from company register i.e. Companies\n            House registration number\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: RegistrationNumber must be provided\n        RequiresParticipantTermsAndConditionsSigning:\n          default: true\n          description: Participant Terms and Conditions Signing Required\n          type: boolean\n        Size:\n          description: Size of the organisation\n          maxLength: 255\n          type: string\n        Status:\n          default: Pending\n          description: Status of the directory registration of an organisation\n          enum:\n          - Active\n          - Pending\n          - Withdrawn\n          type: string\n        Tags:\n          description: Tags to describe or classify an organisation\n          items:\n            type: string\n          type: array\n      required:\n      - OrganisationName\n      - CountryOfRegistration\n      - CompanyRegister\n      - RegistrationNumber\n      - LegalEntityName\n      - AddressLine1\n      - City\n      - Postcode\n      - Country\n      type: object\n    OrganisationWithTnc:\n      properties:\n        OrgDetails:\n          $ref: '#/components/schemas/Organisation'\n        TncDetails:\n          properties:\n            TnCSigned:\n              description: true - the terms and conditions have been signed. false\n                - the terms and conditions have not been signed\n              type: boolean\n            TnCUpdated:\n              description: true - attached signer template has been updated. false\n                - no tnc present/not updated\n              type: boolean\n            TnCsToBeSigned:\n              $ref: '#/components/schemas/TnCsToBeSigned'\n          type: object\n      type: object\n    OrganisationsExportOpenData:\n      items:\n        $ref: '#/components/schemas/OrganisationExportOpenData'\n      type: array\n    OrganisationsPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/Organisation'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    OrganisationsRoles:\n      items:\n        $ref: '#/components/schemas/OrganisationRoles'\n      type: array\n    OrganisationsSnapshot:\n      additionalProperties:\n        $ref: '#/components/schemas/OrganisationSnapshot'\n      type: object\n    Pageable:\n      properties:\n        number:\n          description: Page number\n          type: integer\n        offset:\n          description: Offset\n          type: integer\n        size:\n          description: Size of the page\n          type: integer\n        sort:\n          $ref: '#/components/schemas/Sort'\n        sorted:\n          description: Is the page sorted\n          type: boolean\n      type: object\n    PageableRequest:\n      example:\n        page: 0\n        size: 2\n        sort: status,desc\n      properties:\n        page:\n          description: Page index starts from 0\n          minimum: 0\n          type: integer\n        size:\n          description: This sets the page size\n          maximum: 50000\n          minimum: 1\n          type: integer\n        sort:\n          description: Used to sort based on Model Parameters\n          type: string\n      type: object\n    SoftwareAuthorityClaim:\n      properties:\n        AuthorisationDomain:\n          description: Authorisation domain for the authority\n          maxLength: 30\n          type: string\n        Role:\n          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII\n          maxLength: 10\n          type: string\n        SoftwareAuthorityClaimId:\n          $ref: '#/components/schemas/SoftwareAuthorityClaimId'\n        SoftwareStatementId:\n          $ref: '#/components/schemas/SoftwareStatementId'\n        Status:\n          default: Active\n          description: Is this authority claim Active/Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    SoftwareAuthorityClaimId:\n      description: Unique ID associated with the authority claims for a software statement\n      maxLength: 40\n      minLength: 1\n      type: string\n    SoftwareAuthorityClaimRequest:\n      properties:\n        AuthorisationDomain:\n          description: Authorisation domain for the authority\n          maxLength: 30\n          minLength: 1\n          type: string\n          x-required-message: AuthorisationDomain must be provided\n        Role:\n          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII\n          maxLength: 30\n          minLength: 1\n          type: string\n          x-required-message: Role must be provided\n        Status:\n          default: Active\n          description: Is this authority claim Active/Inactive, default is active\n          enum:\n          - Active\n          - Inactive\n          type: string\n          x-required-message: Status must be provided\n      required:\n      - Status\n      - AuthorisationDomain\n      - Role\n      type: object\n    SoftwareAuthorityClaimUpdateRequest:\n      properties:\n        Status:\n          default: Active\n          description: This is used to set the status - Active/Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n          x-required-message: Status must be provided\n      required:\n      - Status\n      type: object\n    SoftwareAuthorityClaims:\n      items:\n        $ref: '#/components/schemas/SoftwareAuthorityClaim'\n      type: array\n    SoftwareStatement:\n      properties:\n        AdditionalSoftwareMetadata:\n          description: Extra metadata defined by the org admins to be loaded into\n            the software statement and made avaiable during introspection\n          maxLength: 255\n          type: string\n        ClientId:\n          description: Software Statement client Id\n          maxLength: 40\n          type: string\n        ClientName:\n          description: Software Statement client name\n          maxLength: 255\n          type: string\n        ClientUri:\n          description: The Software Statement client compliant URI\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: ClientUri must be in a URI format https://... or http://...\n        Description:\n          description: Software Statement description\n          maxLength: 255\n          type: string\n        Environment:\n          description: The additional check for software statement, this field can\n            avoid\n          maxLength: 40\n          type: string\n        Locked:\n          description: Flag shows if assertion has been generated on the software\n            statement - will be set to true when assertion is generated\n          type: boolean\n        LogoUri:\n          description: The Software Statement logo compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: LogoUri must be in a URI format https://... or http://...\n        Mode:\n          default: Live\n          description: Software Statement mode\n          enum:\n          - Live\n          - Test\n          maxLength: 8\n          type: string\n        OnBehalfOf:\n          description: A reference to fourth party organisation resource on the RTS\n            Directory if the registering Org is acting on behalf of another\n          maxLength: 255\n          type: string\n        OrganisationId:\n          $ref: '#/components/schemas/OrganisationId'\n        PolicyUri:\n          description: The Software Statement policy compliant URI\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: PolicyUri must be in a URI format https://... or http://...\n        RedirectUri:\n          description: The Software Statement redirect compliant URI\n          items:\n            format: uri\n            pattern: ^(http:\\/\\/|https:\\/\\/).*\n            type: string\n            x-pattern-message: RedirectUri must be in a URI format https://... or\n              http://...\n          maxLength: 255\n          type: array\n        RtsClientCreated:\n          description: Client created flag\n          type: boolean\n        SoftwareStatementId:\n          $ref: '#/components/schemas/SoftwareStatementId'\n        Status:\n          default: Active\n          description: Is this software statement Active/Suspended/Inactive\n          enum:\n          - Active\n          - Suspended\n          - Inactive\n          type: string\n        TermsOfServiceUri:\n          description: The Software Statement terms of service compliant URI\n          format: uri\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: TermsOfServiceUri must be in a URI format https://...\n            or http://...\n        Version:\n          description: Software Statement version as provided by the organisation's\n            PTC\n          maxLength: 40\n          type: number\n      type: object\n    SoftwareStatementAssertion:\n      description: A signed JWT (JWS)\n      maxLength: 4000\n      type: string\n    SoftwareStatementCertificateOrKeyType:\n      default: rtssigning\n      enum:\n      - rtstransport\n      - rtssigning\n      - sigkey\n      - enckey\n      - brcac\n      - brcac_ext\n      type: string\n    SoftwareStatementId:\n      description: Unique Software Statement Id\n      maxLength: 40\n      type: string\n    SoftwareStatementRequest:\n      properties:\n        AdditionalSoftwareMetadata:\n          description: Extra metadata defined by the org admins to be loaded into\n            the software statement and made avaiable during introspection\n          maxLength: 255\n          type: string\n        ClientName:\n          description: Software Statement client name\n          maxLength: 255\n          minLength: 1\n          type: string\n          x-required-message: ClientName must be provided\n        ClientUri:\n          description: The Software Statement compliant client URI\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: ClientUri must be in a URI format https://... or http://...\n          x-required-message: ClientUri must be provided\n        Description:\n          description: Software Statement description\n          maxLength: 255\n          type: string\n        Environment:\n          description: The additional check for software statement, this field can\n            avoid environment checks.\n          maxLength: 40\n          type: string\n        LogoUri:\n          description: The Software Statement compliant logo URI\n          maxLength: 255\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: LogoUri must be in a URI format https://... or http://...\n          x-required-message: LogoUri must be provided\n        Mode:\n          default: Live\n          description: The additional check to see if the environment reflected above\n            is live or test.\n          enum:\n          - Live\n          - Test\n          type: string\n        OnBehalfOf:\n          description: A reference to fourth party organisation resource on the RTS\n            Directory if the registering Org is acting on behalf of another\n          maxLength: 255\n          type: string\n        PolicyUri:\n          description: The Software Statement compliant policy URI\n          maxLength: 255\n          nullable: true\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: PolicyUri must be in a URI format https://... or http://...\n        RedirectUri:\n          description: The Software Statement redirect URIs\n          items:\n            description: A compliant URI\n            maxLength: 255\n            pattern: ^(https:\\/\\/).*\n            type: string\n            x-pattern-message: RedirectUri must be in a URI format https://...\n          type: array\n          x-required-message: RedirectUri must be provided\n        TermsOfServiceUri:\n          description: The Software Statement terms of service compliant URI\n          maxLength: 255\n          nullable: true\n          pattern: ^(http:\\/\\/|https:\\/\\/).*\n          type: string\n          x-pattern-message: TermsOfServiceUri must be in a URI format https://...\n            or http://...\n        Version:\n          description: Software Statement version as provided by the organisation's\n            PTC\n          maximum: 40\n          minimum: 1\n          type: number\n          x-required-message: Version must be provided\n      required:\n      - ClientName\n      - ClientUri\n      - LogoUri\n      - RedirectUri\n      - Version\n      type: object\n    SoftwareStatementUpdateRequest:\n      allOf:\n      - $ref: '#/components/schemas/SoftwareStatementRequest'\n      - properties:\n          Status:\n            default: Active\n            description: Should this software statement be active or suspended?\n            enum:\n            - Active\n            - Suspended\n            type: string\n        type: object\n    SoftwareStatements:\n      description: The list of Software Statements\n      items:\n        $ref: '#/components/schemas/SoftwareStatement'\n      type: array\n    Sort:\n      properties:\n        orderBy:\n          items:\n            properties:\n              ascending:\n                description: Whether ascending\n                type: boolean\n              direction:\n                description: Direction of sort, i.e. ascending or descending\n                enum:\n                - ASC\n                - DESC\n                type: string\n              ignoreCase:\n                description: Was the case ignored\n                type: boolean\n              property:\n                description: Name of the property used for sorting\n                example: createdAt\n                type: string\n            type: object\n          type: array\n        sorted:\n          type: boolean\n      type: object\n    StatusEnum:\n      enum:\n      - Active\n      - Inactive\n      type: string\n    SuperUser:\n      properties:\n        Email:\n          description: The super user email address\n          type: string\n        Status:\n          default: Active\n          description: Is this super user Active or Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n      type: object\n    SuperUserCreationRequest:\n      properties:\n        Email:\n          description: The super user email address\n          minLength: 1\n          type: string\n          x-required-message: The super user email address is mandatory\n      required:\n      - Email\n      type: object\n    SuperUsers:\n      items:\n        $ref: '#/components/schemas/SuperUser'\n      type: array\n    SystemEnum:\n      description: The system to which the domain user belongs to\n      enum:\n      - Directory\n      - Service Desk\n      - Dispute Resolution\n      - Portal\n      - Centralized Platform\n      type: string\n    TermsAndConditionsDetail:\n      description: TnC details Parent\n      properties:\n        ExternalSigningServiceEnvelopeId:\n          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'\n        ExternalSigningServiceEnvelopePasscode:\n          description: Access code for the specifier to fill in the signer details.\n            This will be populated only once, when signing is initiated\n          type: string\n        ExternalSigningServiceEnvelopeStatus:\n          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'\n        InititatedDate:\n          description: Terms and Conditions initiated date\n          maxLength: 255\n          type: string\n        TermsAndConditionsItem:\n          $ref: '#/components/schemas/TermsAndConditionsItem'\n      type: object\n    TermsAndConditionsDetails:\n      description: Details of TnC\n      properties:\n        RequiresSigning:\n          description: Does the Directory TnC require signing\n          type: boolean\n        TermsAndConditionsItem:\n          $ref: '#/components/schemas/TermsAndConditionsItem'\n        Updated:\n          description: Has the document updated since the user signed\n          type: boolean\n      type: object\n    TermsAndConditionsItem:\n      properties:\n        Content:\n          description: The MarkDown of the TnC\n          minLength: 1\n          type: string\n          x-required-message: MarkDown must be provided\n        ExternalSigningService:\n          $ref: '#/components/schemas/ExternalSigningService'\n        Name:\n          description: The Name of the TnC\n          minLength: 1\n          type: string\n          x-required-message: Name must be provided\n        Status:\n          description: Is the TnC Active or Inactive\n          enum:\n          - Active\n          - Inactive\n          type: string\n        TnCId:\n          description: Unique identifier for the Terms and Conditions Item\n          readOnly: true\n          type: integer\n        Type:\n          description: Role for which this TnC applies\n          enum:\n          - Participant\n          - Directory\n          type: string\n          x-required-message: Type must be provided\n      required:\n      - Type\n      - Content\n      - Name\n      type: object\n    TermsAndConditionsPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/TermsAndConditionsItem'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    TermsAndConditionsUpdateRequest:\n      properties:\n        Content:\n          description: The MarkDown of the TnC\n          minLength: 1\n          type: string\n          x-required-message: MarkDown must be provided\n        ExternalSigningService:\n          $ref: '#/components/schemas/ExternalSigningService'\n      required:\n      - Content\n      type: object\n    TnCId:\n      description: TnC unique identifier\n      type: integer\n    TnCsToBeSigned:\n      items:\n        $ref: '#/components/schemas/TermsAndConditionsItem'\n      type: array\n    UnlockSoftwareStatementRequest:\n      properties:\n        Unlock:\n          description: Unlock Software Statement\n          type: boolean\n          x-required-message: Unlock equal to true must be provided\n      type: object\n    UserCreateRequest:\n      properties:\n        TermsAndConditionsId:\n          description: Id of the TnC(type = Directory), user has agreed to\n          type: integer\n          x-required-message: User has to agree to Directory type TnC\n        UserEmail:\n          description: User's email\n          pattern: ^(([^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+(\\.[^\u003c\u003e()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\n          type: string\n          x-pattern-message: EmailAddress must be a valid email\n      required:\n      - UserEmail\n      - FirstName\n      - LastName\n      - TermsAndConditionsId\n      type: object\n    UserDetail:\n      properties:\n        BasicInformation:\n          properties:\n            Status:\n              enum:\n              - Active\n              - Inactive\n              type: string\n            UserEmail:\n              type: string\n          type: object\n        CertificationManager:\n          description: Is the user a certification manager\n          type: boolean\n        DirectoryTermsAndConditionsDetails:\n          $ref: '#/components/schemas/TermsAndConditionsDetails'\n        OrgAccessDetails:\n          additionalProperties:\n            $ref: '#/components/schemas/OrgAccessDetail'\n          description: Map Key - OrgId, Map Value - Org Access Detail(containing info\n            about org admin and domain role)\n          type: object\n        SuperUser:\n          description: Is the user a super user\n          type: boolean\n        SystemUser:\n          description: Is the user a system user\n          type: boolean\n      type: object\n    UserEmailId:\n      description: User email address\n      maxLength: 50\n      type: string\n    UserOPInfo:\n      description: The information contained within is subject to the scopes passed\n        during token generation\n      properties:\n        address:\n          description: Address\n          type: string\n        email:\n          description: Email address\n          type: string\n        email_verified:\n          description: Is the email verified\n          type: boolean\n        family_name:\n          description: Family name\n          type: string\n        given_name:\n          description: Given name\n          type: string\n        name:\n          description: Full name\n          type: string\n        phone_number:\n          description: Phone number\n          type: string\n        phone_number_verified:\n          description: Is the phone number verified\n          type: boolean\n        sub:\n          description: Contains the email address\n          type: string\n      type: object\n    UserTermsAndConditionsPage:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/TermsAndConditionsDetail'\n          type: array\n        empty:\n          type: boolean\n        numberOfElements:\n          type: integer\n        offset:\n          type: integer\n        pageNumber:\n          type: integer\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        size:\n          type: integer\n        totalPages:\n          type: integer\n        totalSize:\n          type: integer\n      type: object\n    UserUpdateRequest:\n      properties:\n        Status:\n          $ref: '#/components/schemas/StatusEnum'\n      type: object\n    WebhookStatusResponse:\n      properties:\n        AuthorisationServerId:\n          $ref: '#/components/schemas/AuthorisationServerId'\n        WebhookStatus:\n          $ref: '#/components/schemas/NotificationWebhookStatusEnum'\n      type: object\n    WebhookStatusResponses:\n      items:\n        $ref: '#/components/schemas/WebhookStatusResponse'\n      type: array\n    WellKnown:\n      properties:\n        acr_values_supported:\n          items: {}\n          type: array\n        authorization_endpoint:\n          description: REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint\n          type: string\n        authorization_signing_alg_values_supported:\n          items: {}\n          type: array\n        check_session_endpoint:\n          type: string\n        claim_types_supported:\n          description: OPTIONAL. JSON array containing a list of the Claim Types that\n            the OpenID Provider supports\n          items: {}\n          type: array\n        claims_parameter_supported:\n          description: OPTIONAL. Boolean value specifying whether the OP supports\n            use of the claims parameter, with true indicating support. If omitted,\n            the default value is false\n          type: boolean\n        claims_supported:\n          description: RECOMMENDED. JSON array containing a list of the Claim Names\n            of the Claims that the OpenID Provider MAY be able to supply values for\n          items: {}\n          type: array\n        code_challenge_methods_supported:\n          items: {}\n          type: array\n        end_session_endpoint:\n          type: string\n        frontchannel_logout_session_supported:\n          type: boolean\n        frontchannel_logout_supported:\n          type: boolean\n        grant_types_supported:\n          description: OPTIONAL. JSON array containing a list of the OAuth 2.0 Grant\n            Type values that this OP supports\n          items: {}\n          type: array\n        id_token_signing_alg_values_supported:\n          description: REQUIRED. JSON array containing a list of the JWS signing algorithms\n            (alg values) supported by the OP for the ID Token to encode the Claims\n            in a JWT\n          items: {}\n          type: array\n        introspection_endpoint:\n          type: string\n        introspection_endpoint_auth_methods_supported:\n          items: {}\n          type: array\n        introspection_endpoint_auth_signing_alg_values_supported:\n          items: {}\n          type: array\n        issuer:\n          description: REQUIRED. URL using the https scheme with no query or fragment\n            component that the OP asserts as its Issuer Identifier\n          type: string\n        jwks_uri:\n          description: REQUIRED. URL of the OP's JSON Web Key Set [JWK] document.\n          type: string\n        pushed_authorization_request_endpoint:\n          items: {}\n          type: array\n        registration_endpoint:\n          description: RECOMMENDED. URL of the OP's Dynamic Client Registration Endpoint\n          type: string\n        request_object_signing_alg_values_supported:\n          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms\n            (alg values) supported by the OP for Request Objects\n          type: string\n        request_parameter_supported:\n          description: OPTIONAL. Boolean value specifying whether the OP supports\n            use of the request parameter, with true indicating support. If omitted,\n            the default value is false\n          type: boolean\n        request_uri_parameter_supported:\n          description: OPTIONAL. Boolean value specifying whether the OP supports\n            use of the request_uri parameter, with true indicating support. If omitted,\n            the default value is true\n          type: boolean\n        require_request_uri_registration:\n          description: OPTIONAL. Boolean value specifying whether the OP requires\n            any request_uri values used to be pre-registered using the request_uris\n            registration parameter\n          type: boolean\n        response_modes_supported:\n          description: OPTIONAL. JSON array containing a list of the OAuth 2.0 response_mode\n            values that this OP supports\n          items: {}\n          type: array\n        response_types_supported:\n          description: REQUIRED. JSON array containing a list of the OAuth 2.0 response_type\n            values that this OP supports\n          items: {}\n          type: array\n        revocation_endpoint:\n          type: string\n        revocation_endpoint_auth_methods_supported:\n          items: {}\n          type: array\n        revocation_endpoint_auth_signing_alg_values_supported:\n          items: {}\n          type: array\n        scopes_supported:\n          description: RECOMMENDED. JSON array containing a list of the OAuth 2.0\n            [RFC6749] scope values that this server supports\n          items: {}\n          type: array\n        subject_types_supported:\n          description: REQUIRED. JSON array containing a list of the Subject Identifier\n            types that this OP supports\n          items: {}\n          type: array\n        tls_client_certificate_bound_access_tokens:\n          type: boolean\n        token_endpoint:\n          description: URL of the OP's OAuth 2.0 Token Endpoint\n          type: string\n        token_endpoint_auth_methods_supported:\n          description: OPTIONAL. JSON array containing a list of Client Authentication\n            methods supported by this Token Endpoint\n          items: {}\n          type: array\n        token_endpoint_auth_signing_alg_values_supported:\n          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms\n            (alg values) supported by the Token Endpoint for the signature on the\n            JWT\n          items: {}\n          type: array\n        userinfo_endpoint:\n          description: RECOMMENDED. URL of the OP's UserInfo Endpoint\n          type: string\n        userinfo_signing_alg_values_supported:\n          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms\n            (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims\n            in a JWT\n          items: {}\n          type: array\n      type: object\n    xFapiInteractionId:\n      description: An RFC4122 UID used as a correlation id.\n      example: 73cac523-d3ae-2289-b106-330a6218710d\n      maxLength: 100\n      minLength: 1\n      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$\n      type: string\n  securitySchemes:\n    authorizer:\n      in: header\n      name: Authorization\n      type: apiKey\n      x-amazon-apigateway-authorizer:\n        authorizerResultTtlInSeconds: 300\n        authorizerUri: ${authorizer_invoke_arn}\n        identitySource: method.request.header.Authorization\n        type: request\n      x-amazon-apigateway-authtype: custom\n    oAuth:\n      description: This API uses OAUTH 2.0 with client creds for the admin role and\n        auth code for web users\n      flows:\n        authorizationCode:\n          authorizationUrl: https://auth.openbanking.raidiam.io/auth\n          refreshUrl: https://auth.openbanking.raidiam.io/token\n          scopes:\n            directory:website: Web based operations\n          tokenUrl: https://auth.openbanking.raidiam.io/token\n        clientCredentials:\n          scopes:\n            directory:admin: All operations for super and domain users\n            directory:software: Software statement client operations\n          tokenUrl: https://auth.openbanking.raidiam.io/token\n      type: oauth2\n"
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"ApiResources\": headers: x-fapi-interaction-id: resolve \"#/components/schemas/xFapiInteractionId\" reference: invalid header reference"
}