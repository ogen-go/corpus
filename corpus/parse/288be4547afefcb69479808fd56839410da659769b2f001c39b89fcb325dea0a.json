{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/routing-controllers-openapi"
		},
		"file": {
			"name": "spec.json",
			"size": 0,
			"path": "__tests__/fixtures/spec.json",
			"byteSize": 14893,
			"content": "{\n  \"components\": {\n    \"schemas\": {\n      \"CreateNestedBody\": {\n        \"properties\": {\n          \"users\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CreateUserBody\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"users\"\n        ],\n        \"type\": \"object\"\n      },\n      \"CreatePostBody\": {\n        \"properties\": {\n          \"content\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"content\"\n        ],\n        \"type\": \"object\"\n      },\n      \"CreateUserBody\": {\n        \"properties\": {\n          \"email\": {\n            \"format\": \"email\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"email\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ListUsersQueryParams\": {\n        \"properties\": {\n          \"email\": {\n            \"format\": \"email\",\n            \"type\": \"string\"\n          },\n          \"types\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"types\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ListUsersHeaderParams\": {\n        \"properties\": {\n          \"Authorization\": {\n            \"type\": \"string\"\n          },\n          \"X-Correlation-ID\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"Authorization\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ModelDto\": {\n        \"properties\": {\n          \"age\": {\n            \"type\": \"integer\"\n          },\n          \"email\": {\n            \"format\": \"email\",\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"email\",\n          \"username\"\n        ],\n        \"type\": \"object\"\n      },\n      \"UserQuery\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"basicAuth\": {\n        \"scheme\": \"basic\",\n        \"type\": \"http\"\n      },\n      \"bearerAuth\": {\n        \"scheme\": \"bearer\",\n        \"type\": \"http\"\n      }\n    }\n  },\n  \"info\": {\n    \"title\": \"My app\",\n    \"version\": \"1.2.0\"\n  },\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/api\": {\n      \"get\": {\n        \"description\": \"Common description for all RootController operations\",\n        \"operationId\": \"RootController.getDefaultPath\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/html; charset=utf-8\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"security\": [\n          {\n            \"basicAuth\": []\n          }\n        ],\n        \"summary\": \"Get default path\",\n        \"tags\": [\n          \"Root\"\n        ]\n      }\n    },\n    \"/api/stringPath\": {\n      \"get\": {\n        \"description\": \"Common description for all RootController operations\",\n        \"operationId\": \"RootController.getStringPath\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/html; charset=utf-8\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"security\": [],\n        \"summary\": \"Get string path\",\n        \"tags\": [\n          \"Root\"\n        ]\n      }\n    },\n    \"/api/users\": {\n      \"put\": {\n        \"description\": \"Insert or update a user object - DEPRECATED in v1.0.1\",\n        \"deprecated\": true,\n        \"summary\": \"\",\n        \"operationId\": \"UsersController.putUserDefault\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"limit\": {\n                    \"type\": \"number\"\n                  },\n                  \"query\": {\n                    \"$ref\": \"#/components/schemas/UserQuery\"\n                  },\n                  \"token\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"token\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/api/users/\": {\n      \"get\": {\n        \"description\": \"List all users\",\n        \"operationId\": \"UsersController.listUsers\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"ListUsersHeaderParams\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ListUsersHeaderParams\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"email\",\n            \"required\": false,\n            \"schema\": {\n              \"format\": \"email\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"types\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/cvs\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ModelDto\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"\"\n          }\n        },\n        \"summary\": \"List users\",\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"UsersController.createUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateUserBody\"\n              }\n            }\n          },\n          \"description\": \"CreateUserBody\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ModelDto\"\n                }\n              }\n            },\n            \"description\": \"Created user object\"\n          }\n        },\n        \"summary\": \"Create user\",\n        \"tags\": [\n          \"Users\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"UsersController.createManyUsers\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/CreateUserBody\"\n                }\n              }\n            }\n          },\n          \"description\": \"CreateUserBody\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"summary\": \"Create many users\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/api/users/nested\": {\n      \"post\": {\n        \"operationId\": \"UsersController.createNestedUsers\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateNestedBody\"\n              }\n            }\n          },\n          \"description\": \"CreateNestedBody\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"summary\": \"Create nested users\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/api/users/withType\": {\n      \"post\": {\n        \"operationId\": \"UsersController.createUserWithType\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"user\",\n            \"required\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/CreateUserBody\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ModelDto\"\n                }\n              }\n            },\n            \"description\": \"Created user object\"\n          }\n        },\n        \"summary\": \"Create user with type\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/api/users/{from}-{to}\": {\n      \"get\": {\n        \"operationId\": \"UsersController.listUsersInRange\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"from\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"to\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Successful response\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        },\n        \"summary\": \"List users in range\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/api/users/{version}\": {\n      \"delete\": {\n        \"operationId\": \"UsersController.deleteUsersByVersion\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"version\",\n            \"required\": true,\n            \"schema\": {\n              \"pattern\": \"v?\\\\d{1}|all\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"summary\": \"Delete users by version\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/api/users/{userId}\": {\n      \"get\": {\n        \"operationId\": \"UsersController.getUser\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"header\",\n            \"name\": \"X-Requested-With\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"summary\": \"Get user\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/api/users/{userId}/posts\": {\n      \"post\": {\n        \"operationId\": \"UsersController.createUserPost\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/CreatePostBody\"\n                  },\n                  {\n                    \"properties\": {\n                      \"token\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [],\n                    \"type\": \"object\"\n                  }\n                ]\n              }\n            }\n          },\n          \"description\": \"CreatePostBody\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"summary\": \"Create user post\",\n        \"tags\": [\n          \"Users\"\n        ]\n      }\n    },\n    \"/api/users/{userId}/posts/{postId}\": {\n      \"get\": {\n        \"operationId\": \"UserPostsController.getUserPost\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"number\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/html; charset=utf-8\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"summary\": \"Get user post\",\n        \"tags\": [\n          \"User Posts\"\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"UserPostsController.patchUserPost\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"token\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/html; charset=utf-8\": {}\n            },\n            \"description\": \"Successful response\"\n          }\n        },\n        \"summary\": \"Patch user post\",\n        \"tags\": [\n          \"User Posts\"\n        ]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/npm/routing-controllers-openapi@2614b2daed6f8dcd4eaac0e0552511060ba6fe6a/-/blob/__tests__/fixtures/spec.json",
			"externalURLs": []
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/users/{userId}\": get: operation \"UsersController.getUser\": parameters: parse parameter \"\": at 469:21: invalid header name \"\""
}