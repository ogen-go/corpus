{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/backbase-openapi-tools"
		},
		"file": {
			"name": "petstore-example-refs.yaml",
			"size": 0,
			"path": "boat-scaffold/src/test/resources/oas-examples/petstore-example-refs.yaml",
			"byteSize": 8165,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n              example:\n                $ref: \"#/paths/~1pets/get/responses/invalid/content/application~1json/example\"\n\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/paths/~1pets/get/responses/default/content/application~2json/example\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      responses:\n        '201':\n          description: Null response\n        '401':\n          description: BadRequestError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/components/examples/BadRequestError\"\n        '500':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/components/examples/InternalServerError\"\n        '400':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/paths/~1pets~1%7BpetId%7D/get/responses/default/content/application~1json/example\"\n        '202':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              examples:\n                example:\n                  summary: This is an example referenced in a horrible path\n                  value: foo\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/paths/~1pets/get/responses/default/content/application~1json/example\"\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n              example:\n                $ref: \"#/paths/~1pets/get/responses/default/content/application~1json/example\"\n        '400':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              example:\n                $ref: \"#/paths/~1pets/post/responses/202/content/application~1json/examples/example\"\n            application/xml:\n              examples:\n                Inexistent:\n                  $ref: \"#/paths/~1pets/post/responses/202/content/application~1json/examples/theinexistentexample\"\n                AnotheOne:\n                  $ref: \"#/paths/~1pets/post/responses/202/content/application~1json/examples/example\"\n        '500':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              examples:\n                InternalServerError:\n                  $ref: \"#/components/examples/BadRequestError\"\n                OtherError:\n                  $ref: \"#/components/examples/BadRequestError\"\n        '404':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              examples:\n                InternalServerError:\n                  $ref: \"#/components/examples/BadRequestError\"\n                OtherError:\n                  $ref: \"#/components/examples/InvalidReference\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/paths/~1pets/post/responses/default/content/application~1json/example\"\n    put:\n      summary: Update pet\n      operationId: updatePet\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n            example:\n              id: 1\n              name: \"Joep\"\n              tag: \"Gun dog\"\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/paths/~1pets/put/responses/default/content/application~1json/example\"\n    patch:\n      summary: Update pet\n      operationId: patchPet\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to patch\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n            example:\n              id: 1\n              name: \"Joep\"\n              tag: \"Gun dog\"\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/paths/~1pets/patch/responses/default/content/application~1json/example\"\n    delete:\n      summary: Delete pet\n      operationId: deletePet\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to delete\n          schema:\n            type: string\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n              example:\n                $ref: \"#/paths/~1pets/delete/responses/default/content/application~1json/example\"\n\n\ncomponents:\n  schemas:\n    Pet:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n  examples:\n    BadRequestError:\n      summary: BadRequestError\n      value:\n        message: Bad Request\n        errors:\n          - message: \"Value Exceeded. Must be between {min} and {max}.\"\n            key: common.api.shoesize\n            context:\n              max: \"50\"\n              min: \"1\"",
			"canonicalURL": "/github.com/Backbase/backbase-openapi-tools@b6235105d3511f2e8a3dfb8c8b1ecc48ef783c52/-/blob/boat-scaffold/src/test/resources/oas-examples/petstore-example-refs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Backbase/backbase-openapi-tools/blob/b6235105d3511f2e8a3dfb8c8b1ecc48ef783c52/boat-scaffold/src/test/resources/oas-examples/petstore-example-refs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/pets/{petId}\": at 1:2686: get: operation \"showPetById\": at 1:3134: responses: 400: at 1:3546: content: application/xml: at 1:3695: examples: \"Inexistent\": resolve \"#/paths/~1pets/post/responses/202/content/application~1json/examples/theinexistentexample\": can't find value for \"paths/~1pets/post/responses/202/content/application~1json/examples/theinexistentexample\""
}