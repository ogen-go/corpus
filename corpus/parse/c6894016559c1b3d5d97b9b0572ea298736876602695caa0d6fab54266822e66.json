{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eikek/sharry"
		},
		"file": {
			"name": "sharry-openapi.yml",
			"size": 0,
			"path": "modules/restapi/src/main/resources/sharry-openapi.yml",
			"byteSize": 59322,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Sharry\n  version: 1.11.0-SNAPSHOT\n  license:\n    name: GPLv3\n    url: https://spdx.org/licenses/GPL-3.0-or-later.html\n  description: |\n    Sharry provides a way to share files with others in a convenient\n    way. The core functionality is provided by a server that can be\n    controlled via REST calls.\n\n    The calls are divided into 4 categories:\n\n    - `/open/*`: no authentication is required to access\n    - `/sec/*`: an authenticated user is required\n    - `/alias/*`: these routes are allowed with a valid *alias id*\n      given as header `Sharry-Alias`\n    - `/admin/*`: an authenticated user that is admin is required\n\n    Authentication works by logging in with username/password (or an\n    oauth2 flow) that generates a token that has to be sent with every\n    request to a secured and admin route. It is possible to sent it\n    via a `Cookie` header or the special `Sharry-Auth` header.\n\n    Files can be uploaded using different methods. There is an\n    endpoint that can take all files and meta data from one single\n    request. For more reliable uploads, the server implements the [tus\n    protocol](https://tus.io/protocols/resumable-upload.html) that\n    allows to resume failed or paused uploads.\n\ntags:\n  - name: Information\n    description: Get information about this API.\n  - name: Authentication\n    description: Various methods to authenticate.\n  - name: Registration\n    description: Register a new account.\n  - name: Account Management\n    description: Admins can create/update/delete accounts.\n  - name: Alias\n    description: Edit your alias pages.\n  - name: Shares\n    description: Edit shares.\n  - name: Shares Upload\n    description: Create or Add Files\nservers:\n  - url: /api/v2\n    description: Current host\n\npaths:\n  /open/info/version:\n    get:\n      operationId: \"open-info-version\"\n      tags: [ Information ]\n      summary: Version information.\n      description: |\n        Returns version information about server application.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VersionInfo\"\n  /open/info/appconfig:\n    get:\n      operationId: \"open-info-appconfig\"\n      tags: [ Information ]\n      summary: Basic configuration.\n      description: |\n        Return basic information for setting up a web client.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppConfig\"\n\n  /open/auth/login:\n    post:\n      operationId: \"open-auth-login-post\"\n      tags: [ Authentication ]\n      summary: Authenticate with account name and password.\n      description: |\n        Authenticate with account name and password.\n\n        If successful, an authentication token is returned that can be\n        used for subsequent calls to protected routes.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserPass\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthResult\"\n  /open/auth/oauth/{id}:\n    get:\n      operationId: \"open-auth-oauth-id\"\n      tags: [ Authentication ]\n      summary: Authenticate via OAuth2\n      description: |\n        The `id` must be a configured OAuth provider. This requests\n        will redirect the client to the configured provider. After\n        authentication there, the provider will redirect back to\n        sharry.\n\n        This only works, if sharry uses TLS (https), and the correct\n        callback-url is configured at the provider.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      responses:\n        422:\n          description: BadRequest\n        303:\n          description: See other\n  /open/auth/oauth/{id}/resume:\n    post:\n      operationId: \"open-auth-oauth-id-resume\"\n      tags: [ Authentication ]\n      summary: Callback url from OAuth2 providers.\n      description: |\n        This endpoint is for OAuth2 providers when delegating control\n        back to sharry. At this stage, sharry will do basic validation\n        and then finishes logging into the application.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n      responses:\n        '200':\n          description: OK\n        '403':\n          description: Forbidden\n  /sec/auth/session:\n    post:\n      operationId: \"sec-auth-session\"\n      tags: [ Authentication ]\n      summary: Authentication with a token\n      description: |\n        Authenticate with a token. This can be used to get a new\n        authentication token based on another valid one.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthResult\"\n  /sec/auth/logout:\n    post:\n      operationId: \"sec-auth-logout\"\n      tags: [ Authentication ]\n      summary: Logout.\n      description: |\n        This route informs the server about a logout. This is not\n        strictly necessary.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n  /open/signup/register:\n    post:\n      operationId: \"open-signup-register\"\n      tags: [ Registration ]\n      summary: Register a new account.\n      description: |\n        Create a new account.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Registration\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n  /admin/signup/newinvite:\n    post:\n      operationId: \"admin-signup-newinivite\"\n      tags: [ Registration ]\n      summary: Generate a new invite.\n      description: |\n        When signup mode is set to \"invite\", sharry requires an\n        invitation key when signing up. These keys can be created\n        here. Creating such keys requires an admin user. It also asks\n        for a password that must be set in the configuration file.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GenInvite\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InviteResult\"\n\n  /admin/account:\n    get:\n      operationId: \"admin-account-get\"\n      tags: [ Account Management ]\n      summary: List all accounts.\n      description: |\n        Lists all available (internal and external) accounts. An\n        optional query parameter can be used to narrow the list down\n        by username. It is a simple substring search in the username\n        property.\n      parameters:\n        - $ref: \"#/components/parameters/q\"\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountList\"\n    post:\n      operationId: \"admin-account-post\"\n      tags: [ Account Management ]\n      summary: Create a new account.\n      description: |\n        Creates a new account. The account is marked as internal and\n        the provided password is used when authenticating. Sharry\n        supports external authentication, these accounts however,\n        cannot be directly created. They are created on demand.\n\n        The username and password properties are mandatory. The others\n        are optional or have a sensible default.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountCreate\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /admin/account/{accountId}:\n    parameters:\n      - $ref: \"#/components/parameters/accountId\"\n    get:\n      operationId: \"admin-ccount-id-get\"\n      tags: [ Account Management ]\n      summary: Details about one account.\n      description: |\n        Returns details about the account with the given id. Note that\n        the id is *not* the username, but the account-id.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountDetail\"\n    post:\n      operationId: \"admin-account-id-post\"\n      tags: [ Account Management ]\n      summary: Modify an account.\n      description: |\n        Modifies an existing account. It is only possible to modify\n        `state`, `email` and the `admin` property.\n\n        If the `email` property is not supplied, an existing email is\n        removed from the account.\n\n        The password can be changed for an account. If it is `null` or\n        empty, it is left unchanged. Also, if the account is not\n        internal, a given password is ignored.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountModify\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n    delete:\n      operationId: \"admin-account-id-delete\"\n      tags: [ Account Management ]\n      summary: Deletes an account.\n      description: |\n        Deletes the account and all its related data.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/settings/email:\n    get:\n      operationId: \"sec-settings-email-get\"\n      tags: [ Account Management ]\n      summary: Get your E-Mail address.\n      description: |\n        Allows the current user to get their e-mail address.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmailInfo\"\n    post:\n      operationId: \"sec-settings-email-post\"\n      tags: [ Account Management ]\n      summary: Edit your E-Mail.\n      description: |\n        Allows the current user to change their e-mail address.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EmailChange\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n    delete:\n      operationId: \"sec-settings-email-delete\"\n      tags: [ Account Management ]\n      summary: Removed your E-Mail.\n      description: |\n        Allows the current user to remove their e-mail address.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/settings/password:\n    get:\n      operationId: \"sec-settings-password-get\"\n      tags: [ Account Management ]\n      summary: Check for password change.\n      description: |\n        Returns wether the current account is available for a password\n        change. If this returns `false`, the POST request to this url\n        will always fail.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n    post:\n      operationId: \"sec-settings-password-post\"\n      tags: [ Account Management ]\n      summary: Change your password.\n      description: |\n        Allows users to change their password. This is only valid for\n        internal accounts.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PasswordChange\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/alias:\n    get:\n      operationId: \"sec-alias-get\"\n      tags: [ Alias ]\n      summary: List all aliases.\n      description: |\n        Lists all aliases of the current user.\n      parameters:\n        - $ref: \"#/components/parameters/q\"\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasList\"\n    post:\n      operationId: \"sec-alias-post\"\n      tags: [ Alias ]\n      summary: Create new alias\n      description: |\n        Create a new alias. The id is generated to some random string\n        if not specified, such that the URLs resulting from this alias\n        are not guessable.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AliasChange\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdResult\"\n  /sec/alias/{id}:\n    parameters:\n      - $ref: \"#/components/parameters/id\"\n    get:\n      operationId: \"sec-alias-id-get\"\n      tags: [ Alias ]\n      summary: Details about one alias.\n      description: |\n        Returns details about an alias for the given id.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AliasDetail\"\n    post:\n      operationId: \"sec-alias-id-post\"\n      tags: [ Alias ]\n      summary: Change an alias\n      description: |\n        Change some properties of an existing alias.\n\n        The id is optional; if it is not specified a new random one\n        will be generated.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AliasChange\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdResult\"\n    delete:\n      operationId: \"sec-alias-id-delete\"\n      tags: [ Alias ]\n      summary: Delete an alias.\n      description: |\n        Deletes an alias.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/alias-member:\n    get:\n      operationId: \"sec-alias-member-get\"\n      tags: [ Alias ]\n      summary: Get a list of accounts\n      description: |\n        Gets a list of accounts suitable for adding them as members to\n        an alias.\n      parameters:\n        - $ref: \"#/components/parameters/q\"\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountLightList\"\n\n  /alias/upload:\n    $ref: \"#/paths/~1sec~1upload\"\n\n  /sec/upload:\n    post:\n      operationId: \"sec-upload-post\"\n      tags:\n        - Shares Upload\n      summary: Upload files to create a share.\n      description: |\n        Allows to create a new share by uploading data using\n        `multipart/form-data` requests. All requests must have content\n        type `multipart/form-data`.\n\n        All parts of a `multipart/form-data` request are treated as\n        files except if one with name *\"meta\"* is found. This is\n        expected to contain a JSON structure with the metadata\n        (validity, password etc). If this is missing, default values\n        will be used. All other parts are added as files to the new\n        share. It is allowed to send only a \"meta\" part or even an\n        empty body. In these cases the new share will be created\n        without files..\n\n        If this route is at `/alias/` a `Sharry-Alias` header is\n        required.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                meta:\n                  $ref: \"#/components/schemas/ShareProperties\"\n                file:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdResult\"\n\n  /sec/share/search:\n    get:\n      operationId: \"sec-share-search-get\"\n      tags:\n        - Shares\n      summary: Search your shares.\n      security:\n        - authTokenHeader: []\n      description: |\n        Returns a list of all shares of the current user.\n      parameters:\n        - $ref: \"#/components/parameters/q\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShareList\"\n\n  /alias/upload/new:\n    $ref: \"#/paths/~1sec~1upload~1new\"\n\n  /sec/upload/new:\n    post:\n      operationId: \"sec-upload-new-post\"\n      tags:\n        - Shares Upload\n      summary: Create a new empty share.\n      description: |\n        This endpoint allows to only upload json data to create a new\n        empty share.\n\n        The same thing can be achieved by using `multipart/form-data`\n        requests to the `/sec/upload` endpoint containing only one part\n        named \"meta\". But this endpoint may be more convenient to use.\n\n        If this route is at `/alias/` a `Sharry-Alias` header is\n        required.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ShareProperties\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdResult\"\n\n  /open/share/{pid}:\n    get:\n      operationId: \"open-share-pid-get\"\n      tags:\n        - Shares (Public)\n      summary: Get details about a share.\n      description: |\n        Returns all details about a share.\n\n        If the share is password protected, the password must be\n        supplied using the header `Sharry-Password`. If it is not\n        supplied, a 401 response is sent. If it is wrong, a 403\n        response will be returned.\n      parameters:\n        - $ref: \"#/components/parameters/pid\"\n        - $ref: \"#/components/parameters/SharryPassword\"\n      responses:\n        401:\n          description: Unauthorized\n        403:\n          description: Forbidden\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShareDetail\"\n\n  /sec/share/{id}:\n    parameters:\n      - $ref: \"#/components/parameters/id\"\n    get:\n      operationId: \"sec-share-id-get\"\n      tags:\n        - Shares\n      summary: Get details about a share.\n      security:\n        - authTokenHeader: []\n      description: |\n        Returns all details about a share.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShareDetail\"\n\n    delete:\n      operationId: \"sec-share-id-delete\"\n      tags:\n        - Shares\n      summary: Delete a share.\n      description: |\n        Allows to delete a share and all associated files.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /alias/upload/{id}/files/add:\n    $ref: \"#/paths/~1sec~1upload~1%7Bid%7D~1files~1add\"\n\n  /sec/upload/{id}/files/add:\n    post:\n      operationId: \"sec-upload-id-files-add\"\n      tags:\n        - Shares Upload\n      summary: Add more files to a share.\n      description: |\n        This endpoint can be used to add more files to an existing\n        share. It must be a `multipart/form-data` request, where each\n        part results in a new file added to the share.\n\n        If this route is at `/alias/` a `Sharry-Alias` header is\n        required.\n      security:\n        - authTokenHeader: []\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/share/{id}/name:\n    post:\n      operationId: \"sec-share-id-name-post\"\n      tags:\n        - Shares\n      summary: Set a new name.\n      description: |\n        Sets the name of the share.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SingleString\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n    delete:\n      operationId: \"sec-share-id-name-delete\"\n      tags:\n        - Shares\n      summary: Deletes the name of a share.\n      description: |\n        A name is optional and can be removed via this route.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n\n  /sec/share/{id}/validity:\n    post:\n      operationId: \"sec-share-id-validity-post\"\n      tags:\n        - Shares\n      summary: Set a new validity time.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      security:\n        - authTokenHeader: []\n      description: |\n        Sets the validity property of the share to a new value.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SingleNumber\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n\n  /sec/share/{id}/description:\n    post:\n      operationId: \"sec-share-id-description-post\"\n      tags:\n        - Shares\n      summary: Set a new description.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      security:\n        - authTokenHeader: []\n      description: |\n        Sets the description of share.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SingleString\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/share/{id}/maxviews:\n    post:\n      operationId: \"sec-share-id-maxviews-post\"\n      tags:\n        - Shares\n      summary: Set new maximum downloads.\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      security:\n        - authTokenHeader: []\n      description: |\n        Sets the maximum downloads property.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SingleNumber\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/share/{id}/password:\n    parameters:\n      - $ref: \"#/components/parameters/id\"\n    post:\n      operationId: \"sec-share-id-password-post\"\n      tags:\n        - Shares\n      summary: Sets a password to this share.\n      description: |\n        Sets or changes the password of the share. If the share\n        already has a password defined, it must be given with the\n        request. Otherwise it may be empty.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SingleString\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n    delete:\n      operationId: \"sec-share-id-password-delete\"\n      tags:\n        - Shares\n      summary: Removes the password from the share.\n      security:\n        - authTokenHeader: []\n      description: |\n        Removes the password that has been set for this share. If this\n        share has no password set, a successful response is sent.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/share/{id}/publish:\n    parameters:\n      - $ref: \"#/components/parameters/id\"\n    post:\n      operationId: \"sec-share-id-publish-post\"\n      tags:\n        - Shares\n      summary: Publishes a share.\n      security:\n        - authTokenHeader: []\n      description: |\n        A share can be published. That means it is accessible by\n        everyone (no access protection!) using a different url and id.\n        This link can then be shared. Once the validity time is\n        expired, the public link won't work anymore.\n\n        If the share is already published, this is a no-op (resulting\n        in a successful response).\n\n        If the share was previously published the request can control,\n        wether the old id should be reused (resulting in the same\n        links as before), or a new random one should be generated.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PublishData\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n    delete:\n      operationId: \"sec-share-id-publish-delete\"\n      tags:\n        - Shares\n      summary: Unpublish a share.\n      security:\n        - authTokenHeader: []\n      description: |\n        If a share is currently published it can be un-published using\n        this endpoint.\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /open/share/{pid}/file/{fid}:\n    get:\n      operationId: \"open-share-pid-file-fid-get\"\n      tags:\n        - Shares (Public)\n      summary: Retrieve a file from the share.\n      description: |\n        Returns a file from a share.\n\n        The response supports byte-serving and ETag.\n      parameters:\n        - $ref: \"#/components/parameters/pid\"\n        - $ref: \"#/components/parameters/fid\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            \"*/*\":\n              schema:\n                type: string\n                format: binary\n\n  /sec/share/{id}/file/{fid}:\n    parameters:\n      - $ref: \"#/components/parameters/id\"\n      - $ref: \"#/components/parameters/fid\"\n    get:\n      operationId: \"sec-share-id-file-fid-get\"\n      tags:\n        - Shares\n      summary: Retrieve a file from the share.\n      description: |\n        Returns a file from a share.\n\n        The response supports byte-serving and ETag.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            \"*/*\":\n              schema:\n                type: string\n                format: binary\n    delete:\n      operationId: \"sec-share-id-file-fid-delete\"\n      tags:\n        - Shares\n      summary: Remove a file from a share.\n      description: |\n        Deletes a file from a share.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /alias/upload/{id}/files/tus:\n    $ref: \"#/paths/~1sec~1upload~1%7Bid%7D~1files~1tus\"\n\n  /sec/upload/{id}/files/tus:\n    parameters:\n      - $ref: \"#/components/parameters/id\"\n    options:\n      operationId: \"sec-upload-id-files-tus-options\"\n      tags:\n        - Shares Upload\n      summary: \"[Tus] Protocol information.\"\n      description: |\n        Implements the TUS protocol OPTIONS request to return common\n        information about what parts of the tus protocol are supported\n        by this server.\n\n        Please see the\n        [protocol](https://tus.io/protocols/resumable-upload.html)\n        specification for more details.\n\n        If this is the `/alias` route, a `Sharry-Alias` header is\n        required.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        204:\n          description: NoContent\n          headers:\n            Tus-Resumable:\n              schema:\n                type: string\n            Tus-Extension:\n              schema:\n                type: string\n            Tus-Version:\n              schema:\n                type: string\n    post:\n      operationId: \"sec-upload-id-files-tus-post\"\n      tags:\n        - Shares Upload\n      summary: \"[Tus] Create new (empty) files using tus protocol\"\n      description: |\n        Create a new (empty) file via tus' *creation* extension.\n\n        This follows the tus protocol, but uses different headers for\n        transporting the filename and filetype. While the tus protocol\n        defines a `Upload-Metadata` header, what it can contain is not\n        specified. It requires custom negotiation between server and\n        client, so we can as well use different headers that are\n        easier to read and write:\n\n        - `Sharry-File-Name` specifies the filename (percent-encoded)\n        - `Sharry-File-Type` specifies the content type\n        - `Sharry-File-Length` can be used to specifiy the total\n          length in bytes. If not found `Upload-Length` is used.\n\n        The total length must be specified, name and content type are\n        optional.\n\n        Please see the\n        [protocol](https://tus.io/protocols/resumable-upload.html)\n        specification for more details.\n      security:\n        - authTokenHeader: []\n      parameters:\n        - $ref: \"#/components/parameters/SharryFileName\"\n        - $ref: \"#/components/parameters/SharryFileType\"\n        - $ref: \"#/components/parameters/SharryFileLength\"\n        - $ref: \"#/components/parameters/UploadLength\"\n      responses:\n        422:\n          description: BadRequest\n        201:\n          description: Created\n          headers:\n            Tus-Resumable:\n              schema:\n                type: string\n            Location:\n              schema:\n                type: string\n\n  /alias/upload/{id}/files/tus/{fid}:\n    $ref: \"#/paths/~1sec~1upload~1%7Bid%7D~1files~1tus~1%7Bfid%7D\"\n\n  /sec/upload/{id}/files/tus/{fid}:\n    parameters:\n      - $ref: \"#/components/parameters/id\"\n      - $ref: \"#/components/parameters/fid\"\n    patch:\n      operationId: \"sec-upload-id-files-tus-fid-patch\"\n      tags:\n        - Shares Upload\n      summary: \"[Tus] Upload binary data\"\n      description: |\n        Endpoint for receiving the binary data belonging to a file.\n        The file must have been created before using a POST request to\n        the parent path url.\n\n        The `Upload-Offset` header must be specified, it may be set to\n        `0`.\n\n        You may also use the `POST` method instead.\n\n        Please see the\n        [protocol](https://tus.io/protocols/resumable-upload.html)\n        specification for more details.\n      security:\n        - authTokenHeader: []\n      parameters:\n        - $ref: \"#/components/parameters/UploadOffset\"\n      requestBody:\n        content:\n          application/offset+octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        422:\n          description: BadRequest\n        204:\n          description: NoContent\n          headers:\n            Tus-Resumable:\n              schema:\n                type: string\n            Upload-Offset:\n              schema:\n                type: integer\n                format: int64\n        404:\n          description: Not Found\n    head:\n      operationId: \"sec-upload-id-files-tus-fid-head\"\n      tags:\n        - Shares Upload\n      summary: \"[Tus] Information about a file.\"\n      description: |\n        Returns the upload status of the file. Returns the total\n        expected length and the number of bytes that have really been\n        saved. This is used by clients to determine the next\n        `Upload-Offset` to use.\n\n        Please see the\n        [protocol](https://tus.io/protocols/resumable-upload.html)\n        specification for more details.\n      security:\n        - authTokenHeader: []\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          headers:\n            Tus-Resumable:\n              schema:\n                type: string\n            Upload-Offset:\n              schema:\n                type: integer\n                format: int64\n            Upload-Length:\n              schema:\n                type: integer\n                format: int64\n\n  /alias/mail/notify/{id}:\n    post:\n      operationId: \"alias-mail-notify-id-post\"\n      tags:\n        - Mail\n      summary: Notify the owner.\n      description: |\n        After uploading some files via an alias page, the client can\n        request to notify the owner via e-mail that an upload just\n        finished.\n\n        The corresponding user must have an e-mail address in their\n        account and the mail feautre must be enabled in the config\n        file.\n      security:\n        - aliasTokenHeader: []\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\n  /sec/mail/template/share/{id}:\n    get:\n      operationId: \"sec-mail-template-share-id-get\"\n      tags:\n        - Mail\n      summary: Get the mail template for a published share.\n      description: |\n        To send a link to a published share via e-mail, templates can\n        be specified in the configuration file. The server can then\n        insert the required data (like the cryptic url), so the user\n        is freed from copy-pasting things.\n      security:\n        - authTokenHeader: []\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MailTemplate\"\n  /sec/mail/template/alias/{aid}:\n    get:\n      operationId: \"sec-mail-template-alias-aid-get\"\n      tags:\n        - Mail\n      summary: Get the mail template for a published share.\n      description: |\n        To send a link to an alias page via e-mail, templates can be\n        specified in the configuration file. The server can then\n        insert the required data (like the cryptic url), so the user\n        is freed from copy-pasting things.\n      security:\n        - authTokenHeader: []\n      parameters:\n        - $ref: \"#/components/parameters/aliasId\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MailTemplate\"\n  /sec/mail/send:\n    post:\n      operationId: \"sec-mail-send-post\"\n      tags:\n        - Mail\n      summary: Send an e-mail.\n      description: |\n        This will send the given e-mail as is to the specified\n        recipients. This will only work, if the server enabled the\n        mail feature.\n      security:\n        - authTokenHeader: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SimpleMail\"\n      responses:\n        422:\n          description: BadRequest\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BasicResult\"\n\ncomponents:\n  schemas:\n    AccountLight:\n      description: |\n        Reduced information about an account.\n      required:\n        - id\n        - login\n      properties:\n        id:\n          type: string\n          format: ident\n        login:\n          type: string\n          format: ident\n\n    AccountLightList:\n      description: |\n        A list of logins.\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountLight\"\n\n    SimpleMail:\n      description: |\n        A simple e-mail.\n      required:\n        - recipients\n        - subject\n        - body\n      properties:\n        recipients:\n          type: array\n          items:\n            type: string\n        subject:\n          type: string\n        body:\n          type: string\n    MailTemplate:\n      description: |\n        Contents of a mail template.\n      required:\n        - subject\n        - body\n      properties:\n        subject:\n          type: string\n        body:\n          type: string\n    PublishData:\n      description: |\n        Input when publishing a share.\n      required:\n        - reuseId\n      properties:\n        reuseId:\n          type: boolean\n    SingleString:\n      description: |\n        Sending a single string value.\n      required:\n        - value\n      properties:\n        value:\n          type: string\n    SingleNumber:\n      description: |\n        For sending a single number.\n      required:\n        - value\n      properties:\n        value:\n          type: integer\n          format: int64\n    ShareDetail:\n      description: |\n        Details about a single share.\n      required:\n        - id\n        - validity\n        - maxViews\n        - password\n        - created\n        - files\n      properties:\n        id:\n          type: string\n          format: ident\n          description: |\n            The (private) id of the share.\n        name:\n          type: string\n          description: |\n            An optional name.\n        aliasId:\n          type: string\n          format: ident\n          description: |\n            If the share was created via an alias page and that alias\n            still exists, its id is given.\n        aliasName:\n          type: string\n          description: |\n            If the share was created via an alias page, this is the\n            name of that alias. Even if the alias doesn't exist\n            anymore, the name is kept.\n        validity:\n          type: integer\n          format: duration\n          description: |\n            The validity duration in milliseconds.\n        maxViews:\n          type: integer\n          description: |\n            How many times public shares can be viewed until they are\n            closed.\n        password:\n          type: boolean\n          description: |\n            An optional password for protecting the share with a\n            second secret (the publish-id being the first).\n        descriptionRaw:\n          type: string\n          description: |\n            The *raw* description as given by the user. Descriptions\n            are processed by the server as mustache templates. This\n            contains the template as is.\n        description:\n          type: string\n          description: |\n            The description rendered as mustache template. The\n            mustache template may refer to the attached files.\n        created:\n          type: integer\n          format: date-time\n          description: |\n            When the share has been created.\n        publishInfo:\n          $ref: \"#/components/schemas/SharePublish\"\n        files:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ShareFile\"\n    SharePublish:\n      description: |\n        Information about a published share.\n      required:\n        - id\n        - enabled\n        - views\n        - publishDate\n        - publishUntil\n        - expired\n      properties:\n        id:\n          type: string\n          format: ident\n          description: |\n            The public id of the share.\n        enabled:\n          type: boolean\n          description: |\n            Whether the public share is enabled. If a share is\n            unpublished, this data is still there, but the `enabled`\n            flag is set to false. This allows to re-publish it using\n            the same id thus keeping published links stable.\n        views:\n          type: integer\n          format: int32\n          description: |\n            How many times the public share was accessed.\n        publishDate:\n          type: integer\n          format: date-time\n          description: |\n            When the share was published.\n        publishUntil:\n          type: integer\n          format: date-time\n          description: |\n            End date of the public share. After this point in time the\n            public share will not be available anymore.\n        expired:\n          type: boolean\n          description: |\n            Whether this share is expired. That is, `publishUntil` is\n            before *now*. This is kind of redundant, but saves clients\n            from syncing clocks with the server.\n        lastAccess:\n          type: integer\n          format: date-time\n          description: |\n            The last time the public share has been accessed.\n    ShareFile:\n      description: |\n        Details about a file belonging to a share.\n      required:\n        - id\n        - filename\n        - size\n        - mimetype\n        - checksum\n        - storedSize\n      properties:\n        id:\n          type: string\n          format: ident\n          description: |\n            The identifier of that file.\n        filename:\n          type: string\n          description: |\n            An optional filename.\n        size:\n          type: integer\n          format: size\n          description: |\n            The size of the file as advertised when the upload is\n            initiated.\n        mimetype:\n          type: string\n          description: |\n            The mimetype as detected by Sharry.\n        checksum:\n          type: string\n          description: |\n            The (sha256) checksum of the file's contents.\n        storedSize:\n          type: integer\n          format: size\n          description: |\n            This indicates the size of bytes that have really been\n            written to the store. If this differs to the `size`\n            property, then the file is only partially uploaded.\n    ShareList:\n      description: |\n        A list of shares\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ShareListItem\"\n    ShareListItem:\n      description: |\n        Some details about a share used when searching for shares.\n      required:\n        - id\n        - validity\n        - maxViews\n        - password\n        - created\n        - files\n        - size\n      properties:\n        id:\n          type: string\n          format: ident\n        name:\n          type: string\n        aliasInfo:\n          $ref: \"#/components/schemas/AliasIdName\"\n        validity:\n          type: integer\n          format: duration\n        maxViews:\n          type: integer\n          format: int32\n        password:\n          type: boolean\n        created:\n          type: integer\n          format: date-time\n        files:\n          type: integer\n        size:\n          type: integer\n          format: size\n        published:\n          type: boolean\n    ShareProperties:\n      description: |\n        Describes a share.\n      required:\n        - validity\n        - maxViews\n      properties:\n        name:\n          type: string\n        validity:\n          type: integer\n          format: duration\n        description:\n          type: string\n        maxViews:\n          type: integer\n          format: int32\n        password:\n          type: string\n          format: password\n    IdResult:\n      description: |\n        Some basic result of an operation and an identifier. The\n        identifier is valid on success only.\n      required:\n        - success\n        - message\n        - id\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n        id:\n          type: string\n          format: ident\n    AliasList:\n      description: |\n        A list of aliases.\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AliasDetail\"\n    AliasDetail:\n      description: |\n        Details about one alias.\n      required:\n        - id\n        - name\n        - validity\n        - enabled\n        - owner\n        - members\n        - created\n      properties:\n        id:\n          type: string\n          format: ident\n        name:\n          type: string\n        validity:\n          type: integer\n          format: duration\n        owner:\n          type: string\n          format: ident\n        enabled:\n          type: boolean\n        members:\n          $ref: \"#/components/schemas/AccountLightList\"\n        created:\n          type: integer\n          format: date-time\n    AliasChange:\n      description: |\n        Data for changing alias properties.\n      required:\n        - name\n        - validity\n        - enabled\n        - members\n      properties:\n        id:\n          type: string\n          format: ident\n        name:\n          type: string\n        validity:\n          type: integer\n          format: duration\n        enabled:\n          type: boolean\n        members:\n          type: array\n          items:\n            type: string\n            format: ident\n    AliasIdName:\n      description: |\n        The id and name for an alias.\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: ident\n        name:\n          type: string\n    EmailInfo:\n      description: |\n        Accounts may optionally have an e-mail address registered.\n      properties:\n        email:\n          type: string\n    EmailChange:\n      description: |\n        Change your email.\n      required:\n        - email\n      properties:\n        email:\n          type: string\n    PasswordChange:\n      description: |\n        Change your password.\n      required:\n        - oldPassword\n        - newPassword\n      properties:\n        oldPassword:\n          type: string\n          format: password\n        newPassword:\n          type: string\n          format: password\n    AccountList:\n      description: |\n        A list of accounts.\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountDetail\"\n    AccountDetail:\n      description: |\n        Information about an account.\n      required:\n        - id\n        - login\n        - source\n        - state\n        - admin\n        - loginCount\n        - shares\n        - created\n      properties:\n        id:\n          type: string\n          format: ident\n        login:\n          type: string\n          format: ident\n        source:\n          type: string\n          format: accountsource\n        state:\n          type: string\n          format: accountstate\n        admin:\n          type: boolean\n        email:\n          type: string\n        loginCount:\n          type: integer\n          format: int32\n        shares:\n          type: integer\n          format: int32\n        lastLogin:\n          type: integer\n          format: date-time\n        created:\n          type: integer\n          format: date-time\n    AccountCreate:\n      description: |\n        Create an account.\n      required:\n        - login\n        - admin\n        - state\n        - password\n      properties:\n        login:\n          type: string\n          format: ident\n        state:\n          type: string\n          format: accountstate\n        admin:\n          type: boolean\n        password:\n          type: string\n          format: password\n        email:\n          type: string\n    AccountModify:\n      description: |\n        Modify an existing  account.\n      required:\n        - admin\n        - state\n      properties:\n        state:\n          type: string\n          format: accountstate\n        admin:\n          type: boolean\n        email:\n          type: string\n        password:\n          type: string\n          format: password\n    AppConfig:\n      description: |\n        Initial configuration.\n      required:\n        - appName\n        - baseUrl\n        - logoUrl\n        - logoUrlDark\n        - iconUrl\n        - iconUrlDark\n        - footerText\n        - footerVisible\n        - signupMode\n        - oauthConfig\n        - chunkSize\n        - retryDelays\n        - maxValidity\n        - maxSize\n        - mailEnabled\n        - welcomeMessage\n        - defaultLanguage\n        - authRefreshTime\n        - initialPage\n        - oauthOnly\n        - aliasMemberEnabled\n        - defaultValidity\n        - initialTheme\n      properties:\n        appName:\n          type: string\n        baseUrl:\n          type: string\n        logoUrl:\n          type: string\n        logoUrlDark:\n          type: string\n        iconUrl:\n          type: string\n        iconUrlDark:\n          type: string\n        footerText:\n          type: string\n        footerVisible:\n          type: boolean\n        signupMode:\n          type: string\n          format: signupmode\n        oauthConfig:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OAuthItem\"\n        chunkSize:\n          type: integer\n          format: int64\n        retryDelays:\n          type: array\n          items:\n            type: integer\n            format: int64\n        maxValidity:\n          type: integer\n          format: duration\n        maxSize:\n          type: integer\n          format: size\n        mailEnabled:\n          type: boolean\n        welcomeMessage:\n          type: string\n        defaultLanguage:\n          type: string\n        authRefreshTime:\n          type: integer\n          format: duration\n        initialPage:\n          description: |\n            The inital page to show after logging in.\n          type: string\n          enum:\n            - home\n            - uploads\n            - share\n        oauthOnly:\n          type: boolean\n        aliasMemberEnabled:\n          type: boolean\n        defaultValidity:\n          type: integer\n          format: duration\n        initialTheme:\n          type: string\n          format: theme\n    OAuthItem:\n      description: |\n        Information about a configured OAuth provider.\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: ident\n        name:\n          type: string\n        icon:\n          type: string\n    GenInvite:\n      description: |\n        A request to generate a new invitation key.\n      required:\n        - password\n      properties:\n        password:\n          type: string\n          format: password\n    InviteResult:\n      description: |\n        The result when requesting new invitation keys.\n      required:\n        - success\n        - message\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n        key:\n          type: string\n          format: ident\n    Registration:\n      description: |\n        Data for registering a new account.\n      required:\n        - login\n        - password\n      properties:\n        login:\n          type: string\n          format: ident\n        password:\n          type: string\n          format: password\n        invite:\n          type: string\n          format: ident\n    BasicResult:\n      description: |\n        Some basic result of an operation.\n      required:\n        - success\n        - message\n      properties:\n        success:\n          type: boolean\n        message:\n          type: string\n    UserPass:\n      description: |\n        Account name and password.\n      required:\n        - account\n        - password\n      properties:\n        account:\n          type: string\n        password:\n          type: string\n    AuthResult:\n      description: |\n        The response to a authentication request.\n      required:\n        - id\n        - user\n        - admin\n        - success\n        - message\n        - validMs\n      properties:\n        id:\n          type: string\n          format: ident\n        user:\n          type: string\n          format: ident\n        admin:\n          type: boolean\n        success:\n          type: boolean\n        message:\n          type: string\n        token:\n          description: |\n            The authentication token that should be used for\n            subsequent requests to secured endpoints.\n          type: string\n        validMs:\n          description: |\n            How long the token is valid in ms.\n          type: integer\n          format: int64\n    VersionInfo:\n      description: |\n        Information about the software.\n      required:\n        - version\n        - builtAtMillis\n        - builtAtString\n        - gitCommit\n        - gitVersion\n      properties:\n        version:\n          type: string\n        builtAtMillis:\n          type: integer\n          format: int64\n        builtAtString:\n          type: string\n        gitCommit:\n          type: string\n        gitVersion:\n          type: string\n  securitySchemes:\n    authTokenHeader:\n      type: apiKey\n      in: header\n      name: Sharry-Auth\n    aliasTokenHeader:\n      type: apiKey\n      in: header\n      name: Sharry-Alias\n  parameters:\n    aliasId:\n      name: aid\n      in: path\n      description: The alias identifier.\n      required: true\n      schema:\n        type: string\n    fid:\n      name: fid\n      in: path\n      description: A file identifier\n      required: true\n      schema:\n        type: string\n    id:\n      name: id\n      in: path\n      description: A share identifier\n      required: true\n      schema:\n        type: string\n    accountId:\n      name: accountId\n      in: path\n      description: A account identifier\n      required: true\n      schema:\n        type: string\n    pid:\n      name: pid\n      in: path\n      description: A public share identifier\n      required: true\n      schema:\n        type: string\n    q:\n      name: q\n      in: query\n      description: A query string\n      required: false\n      schema:\n        type: string\n    SharryFileName:\n      name: Sharry-File-Name\n      in: header\n      required: false\n      schema:\n        type: string\n    SharryFileLength:\n      name: Sharry-File-Length\n      in: header\n      required: false\n      schema:\n        type: integer\n        format: int64\n    SharryFileType:\n      name: Sharry-File-Type\n      in: header\n      required: false\n      schema:\n        type: string\n    UploadLength:\n      name: Upload-Length\n      in: header\n      required: true\n      schema:\n        type: integer\n        format: int64\n    UploadOffset:\n      name: Upload-Offset\n      in: header\n      required: true\n      schema:\n        type: integer\n        format: int64\n    SharryPassword:\n      name: Sharry-Password\n      in: header\n      required: false\n      schema:\n        type: string\n",
			"canonicalURL": "/github.com/eikek/sharry@ae60b93b46d2fe0b473511c44c78225e0fe37bd6/-/blob/modules/restapi/src/main/resources/sharry-openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/eikek/sharry/blob/ae60b93b46d2fe0b473511c44c78225e0fe37bd6/modules/restapi/src/main/resources/sharry-openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: /alias/upload/{id}/files/tus/{fid}: referenced pathItem not supported"
}