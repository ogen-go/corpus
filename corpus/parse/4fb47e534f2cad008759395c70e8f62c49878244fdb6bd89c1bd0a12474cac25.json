{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/pan.dev"
		},
		"file": {
			"name": "Permissions.yaml",
			"size": 0,
			"path": "static/sase/spec/iam/Permissions.yaml",
			"byteSize": 4728,
			"content": "components:\n  responses:\n    permissions_list:\n      content:\n        application/json:\n          schema:\n            allOf:\n            - $ref: '#/components/schemas/_pagination'\n            - example:\n                count: 1\n                items:\n                - allowed_apis:\n                  - method: get\n                    path: /config/v1/config-versions\n                  - method: get\n                    path: /config/v1/jobs\n                  description: The ability to read configurations snapshots.\n                  name: prisma_access.config_mgmt.read\n            - properties:\n                items:\n                  items:\n                    allOf:\n                    - $ref: '#/components/schemas/permission'\n                  type: array\n              type: object\n      description: Successful response.\n  schemas:\n    _pagination:\n      properties:\n        count:\n          description: Total count of the items\n          type: integer\n      required:\n      - count\n      - items\n      type: object\n    allowed_api:\n      description: ''\n      example:\n        method: get\n        path: /config/v1/config-versions\n      properties:\n        method:\n          description: REST Method\n          type: string\n        path:\n          description: url path\n          type: string\n      title: Root Type for allowed_api\n      type: object\n    permission:\n      example:\n        allowed_apis:\n        - method: get\n          path: /config/v1/config-versions\n        - method: get\n          path: /config/v1/jobs\n        description: The ability to read configurations snapshots.\n        name: prisma_access.config_mgmt.read\n      properties:\n        allowed_apis:\n          description: APIs permission controls\n          items:\n            $ref: '#/components/schemas/allowed_api'\n          type: array\n        description:\n          type: string\n        name:\n          description: service.resource.action\n          type: string\n      title: Root Type for permission\n      type: object\n    permission_create:\n      example:\n        allowed_apis:\n        - method: get\n          path: /config/v1/config-versions\n        - method: get\n          path: /config/v1/jobs\n        description: The ability to read configurations snapshots.\n        name: prisma_access.config_mgmt.read\n      properties:\n        allowed_apis:\n          description: APIs permission controls\n          items:\n            $ref: '#/components/schemas/allowed_api'\n          type: array\n        description:\n          type: string\n        name:\n          description: service.resource.action\n          type: string\n      required:\n      - name\n      title: Root Type for permission\n      type: object\n  securitySchemes:\n    Bearer:\n      scheme: bearer\n      type: http\ninfo:\n  contact: {}\n  description: \"A single permission identifies an action that can be taken when you\\\n    \\ \\n[grant a permission](/sase/api/iam/accesspolicies) \\nto a user or service\\\n    \\ account. Permissions identify the resource\\nto which the permission applies,\\\n    \\ as well as the approved action (such as `read` or `write`).\\nPermissions are\\\n    \\ combined into [roles](/sase/api/iam/roles) for assignment to a user or service\\\n    \\ account\\nthrough the use of an [access policy](/sase/api/iam/accesspolicies).\\n\"\n  title: Permissions\n  version: '1.0'\nopenapi: 3.0.2\npaths:\n  /iam/v1/permissions:\n    get:\n      description: 'Retrieve a list of all permission entities.\n\n        '\n      operationId: get-iam-v1-permissions\n      parameters:\n      - description: service\n        in: query\n        name: service\n        schema: {}\n      - description: resource\n        in: query\n        name: resource\n        schema: {}\n      - description: action\n        in: query\n        name: action\n        schema: {}\n      responses:\n        '200':\n          $ref: '#/components/responses/permissions_list'\n      security:\n      - Bearer: []\n      summary: List all access permissions\n      tags:\n      - Permissions\n  /iam/v1/permissions/{name}:\n    get:\n      description: 'Retrieve a specific permission.\n\n        '\n      operationId: get-iam-v1-permissions-name\n      parameters:\n      - description: service.resource.action\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/permission_create'\n          description: Successful response - returns a single `permission`.\n      security:\n      - Bearer: []\n      summary: List a specific permission\n      tags:\n      - Permissions\nservers:\n- url: https://api.sase.paloaltonetworks.com\ntags:\n- name: Permissions\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /iam/v1/permissions: get: operation \"get-iam-v1-permissions\": parameters: parse parameter \"service\": invalid schema:style:explode combination: (\"\":\"form\":true)"
}