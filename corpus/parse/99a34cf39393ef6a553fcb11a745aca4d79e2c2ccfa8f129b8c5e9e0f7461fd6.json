{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-codecommit-2015-04-13-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-codecommit-2015-04-13-swagger.yaml",
			"byteSize": 345806,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2015-04-13\n  x-release: v4\n  title: AWS CodeCommit\n  description: \u003cfullname\u003eAWS CodeCommit\u003c/fullname\u003e \u003cp\u003eThis is the \u003ci\u003eAWS CodeCommit API\n    Reference\u003c/i\u003e. This reference provides descriptions of the operations and\n    data types for AWS CodeCommit API along with usage examples.\u003c/p\u003e \u003cp\u003eYou can\n    use the AWS CodeCommit API to work with the following objects:\u003c/p\u003e\n    \u003cp\u003eRepositories, by calling the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eBatchGetRepositories\u003c/a\u003e, which returns information about one or more\n    repositories associated with your AWS account.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eCreateRepository\u003c/a\u003e, which creates an AWS CodeCommit repository.\u003c/p\u003e\n    \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eDeleteRepository\u003c/a\u003e, which deletes an AWS CodeCommit\n    repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetRepository\u003c/a\u003e, which returns\n    information about a specified repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eListRepositories\u003c/a\u003e, which lists all AWS CodeCommit repositories\n    associated with your AWS account.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eUpdateRepositoryDescription\u003c/a\u003e, which sets or updates the description of\n    the repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eUpdateRepositoryName\u003c/a\u003e, which\n    changes the name of the repository. If you change the name of a repository,\n    no other users of that repository will be able to access it until you send\n    them the new HTTPS or SSH URL to use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eBranches, by\n    calling the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eCreateBranch\u003c/a\u003e, which creates\n    a new branch in a specified repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eDeleteBranch\u003c/a\u003e, which deletes the specified branch in a repository\n    unless it is the default branch.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetBranch\u003c/a\u003e, which\n    returns information about a specified branch.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eListBranches\u003c/a\u003e, which lists all branches for a specified\n    repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eUpdateDefaultBranch\u003c/a\u003e, which changes the\n    default branch for a repository.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFiles, by calling the\n    following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eDeleteFile\u003c/a\u003e, which deletes the content of\n    a specified file from a specified branch.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetBlob\u003c/a\u003e,\n    which returns the base-64 encoded content of an individual Git blob object\n    within a repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetFile\u003c/a\u003e, which returns the\n    base-64 encoded content of a specified file.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eGetFolder\u003c/a\u003e, which returns the contents of a specified folder or\n    directory.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003ePutFile\u003c/a\u003e, which adds or modifies a\n    single file in a specified repository and branch.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n    \u003cp\u003eCommits, by calling the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eBatchGetCommits\u003c/a\u003e, which returns information about one or more commits\n    in a repository\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eCreateCommit\u003c/a\u003e, which creates a\n    commit for changes to a repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetCommit\u003c/a\u003e,\n    which returns information about a commit, including commit messages and\n    author and committer information.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetDifferences\u003c/a\u003e,\n    which returns information about the differences in a valid commit specifier\n    (such as a branch, tag, HEAD, commit ID or other fully qualified\n    reference).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eMerges, by calling the following:\u003c/p\u003e \u003cul\u003e\n    \u003cli\u003e \u003cp\u003e \u003ca\u003eBatchDescribeMergeConflicts\u003c/a\u003e, which returns information about\n    conflicts in a merge between commits in a repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eCreateUnreferencedMergeCommit\u003c/a\u003e, which creates an unreferenced commit\n    between two branches or commits for the purpose of comparing them and\n    identifying any potential conflicts.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eDescribeMergeConflicts\u003c/a\u003e, which returns information about merge\n    conflicts between the base, source, and destination versions of a file in a\n    potential merge.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetMergeCommit\u003c/a\u003e, which returns\n    information about the merge between a source and destination commit. \u003c/p\u003e\n    \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetMergeConflicts\u003c/a\u003e, which returns information about\n    merge conflicts between the source and destination branch in a pull\n    request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetMergeOptions\u003c/a\u003e, which returns\n    information about the available merge options between two branches or commit\n    specifiers.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eMergeBranchesByFastForward\u003c/a\u003e, which\n    merges two branches using the fast-forward merge option.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eMergeBranchesBySquash\u003c/a\u003e, which merges two branches using the squash\n    merge option.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eMergeBranchesByThreeWay\u003c/a\u003e, which\n    merges two branches using the three-way merge option.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n    \u003cp\u003ePull requests, by calling the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eCreatePullRequest\u003c/a\u003e, which creates a pull request in a specified\n    repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eDescribePullRequestEvents\u003c/a\u003e, which\n    returns information about one or more pull request events.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n    \u003cp\u003e \u003ca\u003eGetCommentsForPullRequest\u003c/a\u003e, which returns information about\n    comments on a specified pull request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eGetPullRequest\u003c/a\u003e, which returns information about a specified pull\n    request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eListPullRequests\u003c/a\u003e, which lists all pull\n    requests for a repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eMergePullRequestByFastForward\u003c/a\u003e, which merges the source destination\n    branch of a pull request into the specified destination branch for that pull\n    request using the fast-forward merge option.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eMergePullRequestBySquash\u003c/a\u003e, which merges the source destination branch\n    of a pull request into the specified destination branch for that pull\n    request using the squash merge option.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eMergePullRequestByThreeWay\u003c/a\u003e. which merges the source destination\n    branch of a pull request into the specified destination branch for that pull\n    request using the three-way merge option.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003ePostCommentForPullRequest\u003c/a\u003e, which posts a comment to a pull request at\n    the specified line, file, or request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eUpdatePullRequestDescription\u003c/a\u003e, which updates the description of a pull\n    request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eUpdatePullRequestStatus\u003c/a\u003e, which updates\n    the status of a pull request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eUpdatePullRequestTitle\u003c/a\u003e, which updates the title of a pull\n    request.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eComments in a repository, by calling the\n    following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eDeleteCommentContent\u003c/a\u003e, which deletes the\n    content of a comment on a commit in a repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eGetComment\u003c/a\u003e, which returns information about a comment on a\n    commit.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetCommentsForComparedCommit\u003c/a\u003e, which\n    returns information about comments on the comparison between two commit\n    specifiers in a repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003ePostCommentForComparedCommit\u003c/a\u003e, which creates a comment on the\n    comparison between two commit specifiers in a repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003ePostCommentReply\u003c/a\u003e, which creates a reply to a comment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n    \u003cp\u003e \u003ca\u003eUpdateComment\u003c/a\u003e, which updates the content of a comment on a commit\n    in a repository.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eTags used to tag resources in AWS\n    CodeCommit (not Git tags), by calling the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eListTagsForResource\u003c/a\u003e, which gets information about AWS tags for a\n    specified Amazon Resource Name (ARN) in AWS CodeCommit.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eTagResource\u003c/a\u003e, which adds or updates tags for a resource in AWS\n    CodeCommit.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eUntagResource\u003c/a\u003e, which removes tags for\n    a resource in AWS CodeCommit.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eTriggers, by calling the\n    following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca\u003eGetRepositoryTriggers\u003c/a\u003e, which returns\n    information about triggers configured for a repository.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003ePutRepositoryTriggers\u003c/a\u003e, which replaces all triggers for a repository\n    and can be used to create or delete triggers.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n    \u003ca\u003eTestRepositoryTriggers\u003c/a\u003e, which tests the functionality of a repository\n    trigger by sending data to the trigger target.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor\n    information about how to use AWS CodeCommit, see the \u003ca\n    href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html\"\u003eAWS\n    CodeCommit User Guide\u003c/a\u003e.\u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: codecommit\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codecommit-2015-04-13.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/codecommit/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=CodeCommit_20150413.BatchDescribeMergeConflicts:\n    post:\n      operationId: BatchDescribeMergeConflicts\n      description: Returns information about one or more merge conflicts in the attempted\n        merge of two commit specifiers using the squash or three-way merge\n        strategy.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchDescribeMergeConflictsOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: MergeOptionRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergeOptionRequiredException\"\n        \"484\":\n          description: InvalidMergeOptionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMergeOptionException\"\n        \"485\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n        \"486\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"487\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"488\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"489\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"490\":\n          description: InvalidMaxConflictFilesException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxConflictFilesException\"\n        \"491\":\n          description: InvalidMaxMergeHunksException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxMergeHunksException\"\n        \"492\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"493\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"494\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"495\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"496\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"497\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"498\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"499\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"500\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.BatchDescribeMergeConflicts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchDescribeMergeConflictsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.BatchGetCommits:\n    post:\n      operationId: BatchGetCommits\n      description: Returns information about the contents of one or more commits in a\n        repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchGetCommitsOutput\"\n        \"480\":\n          description: CommitIdsListRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdsListRequiredException\"\n        \"481\":\n          description: CommitIdsLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdsLimitExceededException\"\n        \"482\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"483\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"484\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"485\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"486\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"487\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"488\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"489\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.BatchGetCommits\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchGetCommitsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.BatchGetRepositories:\n    post:\n      operationId: BatchGetRepositories\n      description: \u003cp\u003eReturns information about one or more repositories.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe\n        description field for a repository accepts all HTML characters and all\n        valid Unicode characters. Applications that do not HTML-encode the\n        description and display it in a web page could expose users to\n        potentially malicious code. Make sure that you HTML-encode the\n        description field in any application that uses this API to display the\n        repository description on a web page.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchGetRepositoriesOutput\"\n        \"480\":\n          description: RepositoryNamesRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNamesRequiredException\"\n        \"481\":\n          description: MaximumRepositoryNamesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumRepositoryNamesExceededException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"484\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"485\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"486\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"487\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.BatchGetRepositories\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchGetRepositoriesInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.CreateBranch:\n    post:\n      operationId: CreateBranch\n      description: \u003cp\u003eCreates a new branch in a repository and points the branch to a\n        commit.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eCalling the create branch operation does not set a\n        repository's default branch. To do this, call the update default branch\n        operation.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"484\":\n          description: BranchNameExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameExistsException\"\n        \"485\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"486\":\n          description: CommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdRequiredException\"\n        \"487\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"488\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"489\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"490\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"491\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"492\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"493\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.CreateBranch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateBranchInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.CreateCommit:\n    post:\n      operationId: CreateCommit\n      description: Creates a commit for a repository on the tip of a specified branch.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateCommitOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: ParentCommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitIdRequiredException\"\n        \"484\":\n          description: InvalidParentCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParentCommitIdException\"\n        \"485\":\n          description: ParentCommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitDoesNotExistException\"\n        \"486\":\n          description: ParentCommitIdOutdatedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitIdOutdatedException\"\n        \"487\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"488\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"489\":\n          description: BranchDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchDoesNotExistException\"\n        \"490\":\n          description: BranchNameIsTagNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameIsTagNameException\"\n        \"491\":\n          description: FileEntryRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileEntryRequiredException\"\n        \"492\":\n          description: MaximumFileEntriesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileEntriesExceededException\"\n        \"493\":\n          description: PutFileEntryConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutFileEntryConflictException\"\n        \"494\":\n          description: SourceFileOrContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceFileOrContentRequiredException\"\n        \"495\":\n          description: FileContentAndSourceFileSpecifiedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentAndSourceFileSpecifiedExcept\\\n                  ion\"\n        \"496\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"497\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"498\":\n          description: SamePathRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SamePathRequestException\"\n        \"499\":\n          description: FileDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileDoesNotExistException\"\n        \"500\":\n          description: FileContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentSizeLimitExceededException\"\n        \"501\":\n          description: FolderContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderContentSizeLimitExceededException\"\n        \"502\":\n          description: InvalidDeletionParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidDeletionParameterException\"\n        \"503\":\n          description: RestrictedSourceFileException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestrictedSourceFileException\"\n        \"504\":\n          description: FileModeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileModeRequiredException\"\n        \"505\":\n          description: InvalidFileModeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileModeException\"\n        \"506\":\n          description: NameLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameLengthExceededException\"\n        \"507\":\n          description: InvalidEmailException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailException\"\n        \"508\":\n          description: CommitMessageLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitMessageLengthExceededException\"\n        \"509\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"510\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"511\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"512\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"513\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"514\":\n          description: NoChangeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NoChangeException\"\n        \"515\":\n          description: FileNameConflictsWithDirectoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileNameConflictsWithDirectoryNameExcep\\\n                  tion\"\n        \"516\":\n          description: DirectoryNameConflictsWithFileNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DirectoryNameConflictsWithFileNameExcep\\\n                  tion\"\n        \"517\":\n          description: FilePathConflictsWithSubmodulePathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FilePathConflictsWithSubmodulePathExcep\\\n                  tion\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.CreateCommit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateCommitInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.CreatePullRequest:\n    post:\n      operationId: CreatePullRequest\n      description: Creates a pull request in the specified repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreatePullRequestOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"484\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"485\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"486\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"487\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"488\":\n          description: ClientRequestTokenRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientRequestTokenRequiredException\"\n        \"489\":\n          description: InvalidClientRequestTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidClientRequestTokenException\"\n        \"490\":\n          description: IdempotencyParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotencyParameterMismatchException\"\n        \"491\":\n          description: ReferenceNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReferenceNameRequiredException\"\n        \"492\":\n          description: InvalidReferenceNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReferenceNameException\"\n        \"493\":\n          description: ReferenceDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReferenceDoesNotExistException\"\n        \"494\":\n          description: ReferenceTypeNotSupportedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReferenceTypeNotSupportedException\"\n        \"495\":\n          description: TitleRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TitleRequiredException\"\n        \"496\":\n          description: InvalidTitleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTitleException\"\n        \"497\":\n          description: InvalidDescriptionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidDescriptionException\"\n        \"498\":\n          description: TargetsRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TargetsRequiredException\"\n        \"499\":\n          description: InvalidTargetsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTargetsException\"\n        \"500\":\n          description: TargetRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TargetRequiredException\"\n        \"501\":\n          description: InvalidTargetException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTargetException\"\n        \"502\":\n          description: MultipleRepositoriesInPullRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultipleRepositoriesInPullRequestExcept\\\n                  ion\"\n        \"503\":\n          description: MaximumOpenPullRequestsExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumOpenPullRequestsExceededException\"\n        \"504\":\n          description: SourceAndDestinationAreSameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourceAndDestinationAreSameException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.CreatePullRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePullRequestInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.CreateRepository:\n    post:\n      operationId: CreateRepository\n      description: Creates a new, empty repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateRepositoryOutput\"\n        \"480\":\n          description: RepositoryNameExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameExistsException\"\n        \"481\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: InvalidRepositoryDescriptionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryDescriptionException\"\n        \"484\":\n          description: RepositoryLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryLimitExceededException\"\n        \"485\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"486\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"487\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"488\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"489\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"490\":\n          description: InvalidTagsMapException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTagsMapException\"\n        \"491\":\n          description: TooManyTagsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyTagsException\"\n        \"492\":\n          description: InvalidSystemTagUsageException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSystemTagUsageException\"\n        \"493\":\n          description: TagPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagPolicyException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.CreateRepository\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateRepositoryInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.CreateUnreferencedMergeCommit:\n    post:\n      operationId: CreateUnreferencedMergeCommit\n      description: \u003cp\u003eCreates an unreferenced commit that represents the result of merging\n        two branches using a specified merge strategy. This can help you\n        determine the outcome of a potential merge. This API cannot be used with\n        the fast-forward merge strategy, as that strategy does not create a\n        merge commit.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis unreferenced merge commit can only be\n        accessed using the GetCommit API or through git commands such as git\n        fetch. To retrieve this commit, you must specify its commit ID or\n        otherwise reference it.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateUnreferencedMergeCommitOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"484\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"485\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"486\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"487\":\n          description: MergeOptionRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergeOptionRequiredException\"\n        \"488\":\n          description: InvalidMergeOptionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMergeOptionException\"\n        \"489\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"490\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"491\":\n          description: InvalidConflictResolutionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionException\"\n        \"492\":\n          description: ManualMergeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManualMergeRequiredException\"\n        \"493\":\n          description: MaximumConflictResolutionEntriesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumConflictResolutionEntriesExceede\\\n                  dException\"\n        \"494\":\n          description: MultipleConflictResolutionEntriesException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultipleConflictResolutionEntriesExcept\\\n                  ion\"\n        \"495\":\n          description: ReplacementTypeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementTypeRequiredException\"\n        \"496\":\n          description: InvalidReplacementTypeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementTypeException\"\n        \"497\":\n          description: ReplacementContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementContentRequiredException\"\n        \"498\":\n          description: InvalidReplacementContentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementContentException\"\n        \"499\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"500\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"501\":\n          description: FileContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentSizeLimitExceededException\"\n        \"502\":\n          description: FolderContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderContentSizeLimitExceededException\"\n        \"503\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"504\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"505\":\n          description: ConcurrentReferenceUpdateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentReferenceUpdateException\"\n        \"506\":\n          description: FileModeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileModeRequiredException\"\n        \"507\":\n          description: InvalidFileModeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileModeException\"\n        \"508\":\n          description: NameLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameLengthExceededException\"\n        \"509\":\n          description: InvalidEmailException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailException\"\n        \"510\":\n          description: CommitMessageLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitMessageLengthExceededException\"\n        \"511\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"512\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"513\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"514\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"515\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.CreateUnreferencedMergeCommit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateUnreferencedMergeCommitInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.DeleteBranch:\n    post:\n      operationId: DeleteBranch\n      description: \"Deletes a branch from a repository, unless that branch is the default\n        branch for the repository. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteBranchOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"484\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"485\":\n          description: DefaultBranchCannotBeDeletedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DefaultBranchCannotBeDeletedException\"\n        \"486\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"487\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"488\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"489\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"490\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.DeleteBranch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteBranchInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.DeleteCommentContent:\n    post:\n      operationId: DeleteCommentContent\n      description: Deletes the content of a comment made on a change, file, or commit in a\n        repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteCommentContentOutput\"\n        \"480\":\n          description: CommentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentDoesNotExistException\"\n        \"481\":\n          description: CommentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentIdRequiredException\"\n        \"482\":\n          description: InvalidCommentIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommentIdException\"\n        \"483\":\n          description: CommentDeletedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentDeletedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.DeleteCommentContent\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteCommentContentInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.DeleteFile:\n    post:\n      operationId: DeleteFile\n      description: Deletes a specified file from a specified branch. A commit is created on\n        the branch that contains the revision. The file will still exist in the\n        commits prior to the commit that contains the deletion.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteFileOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: ParentCommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitIdRequiredException\"\n        \"484\":\n          description: InvalidParentCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParentCommitIdException\"\n        \"485\":\n          description: ParentCommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitDoesNotExistException\"\n        \"486\":\n          description: ParentCommitIdOutdatedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitIdOutdatedException\"\n        \"487\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"488\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"489\":\n          description: FileDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileDoesNotExistException\"\n        \"490\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"491\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"492\":\n          description: BranchDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchDoesNotExistException\"\n        \"493\":\n          description: BranchNameIsTagNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameIsTagNameException\"\n        \"494\":\n          description: NameLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameLengthExceededException\"\n        \"495\":\n          description: InvalidEmailException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailException\"\n        \"496\":\n          description: CommitMessageLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitMessageLengthExceededException\"\n        \"497\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"498\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"499\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"500\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"501\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.DeleteFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteFileInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.DeleteRepository:\n    post:\n      operationId: DeleteRepository\n      description: \u003cp\u003eDeletes a repository. If a specified repository was already deleted,\n        a null repository ID will be returned.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eDeleting a\n        repository also deletes all associated objects and metadata. After a\n        repository is deleted, all future push calls to the deleted repository\n        will fail.\u003c/p\u003e \u003c/important\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteRepositoryOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"483\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"484\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"485\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"486\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.DeleteRepository\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteRepositoryInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.DescribeMergeConflicts:\n    post:\n      operationId: DescribeMergeConflicts\n      description: Returns information about one or more merge conflicts in the attempted\n        merge of two commit specifiers using the squash or three-way merge\n        strategy. If the merge option for the attempted merge is specified as\n        FAST_FORWARD_MERGE, an exception will be thrown.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeMergeConflictsOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: MergeOptionRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergeOptionRequiredException\"\n        \"484\":\n          description: InvalidMergeOptionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMergeOptionException\"\n        \"485\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n        \"486\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"487\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"488\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"489\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"490\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"491\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"492\":\n          description: FileDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileDoesNotExistException\"\n        \"493\":\n          description: InvalidMaxMergeHunksException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxMergeHunksException\"\n        \"494\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"495\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"496\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"497\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"498\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"499\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"500\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"501\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"502\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: maxMergeHunks\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.DescribeMergeConflicts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeMergeConflictsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.DescribePullRequestEvents:\n    post:\n      operationId: DescribePullRequestEvents\n      description: Returns information about one or more pull request events.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribePullRequestEventsOutput\"\n        \"480\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"481\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"482\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"483\":\n          description: InvalidPullRequestEventTypeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestEventTypeException\"\n        \"484\":\n          description: InvalidActorArnException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidActorArnException\"\n        \"485\":\n          description: ActorDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActorDoesNotExistException\"\n        \"486\":\n          description: InvalidMaxResultsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxResultsException\"\n        \"487\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n        \"488\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"489\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"490\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"491\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"492\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: maxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.DescribePullRequestEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribePullRequestEventsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetBlob:\n    post:\n      operationId: GetBlob\n      description: Returns the base-64 encoded content of an individual blob within a\n        repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBlobOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: BlobIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlobIdRequiredException\"\n        \"484\":\n          description: InvalidBlobIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBlobIdException\"\n        \"485\":\n          description: BlobIdDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlobIdDoesNotExistException\"\n        \"486\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"487\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"488\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"489\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"490\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"491\":\n          description: FileTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileTooLargeException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetBlob\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetBlobInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetBranch:\n    post:\n      operationId: GetBranch\n      description: Returns information about a repository branch, including its name and\n        the last commit ID.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBranchOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"484\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"485\":\n          description: BranchDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchDoesNotExistException\"\n        \"486\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"487\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"488\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"489\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"490\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetBranch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetBranchInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetComment:\n    post:\n      operationId: GetComment\n      description: Returns the content of a comment made on a change, file, or commit in a\n        repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCommentOutput\"\n        \"480\":\n          description: CommentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentDoesNotExistException\"\n        \"481\":\n          description: CommentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentIdRequiredException\"\n        \"482\":\n          description: InvalidCommentIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommentIdException\"\n        \"483\":\n          description: CommentDeletedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentDeletedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetComment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetCommentInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetCommentsForComparedCommit:\n    post:\n      operationId: GetCommentsForComparedCommit\n      description: Returns information about comments made on the comparison between two\n        commits.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCommentsForComparedCommitOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: CommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdRequiredException\"\n        \"484\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"485\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"486\":\n          description: InvalidMaxResultsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxResultsException\"\n        \"487\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n        \"488\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"489\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"490\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"491\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"492\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: maxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetCommentsForComparedCommit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetCommentsForComparedCommitInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetCommentsForPullRequest:\n    post:\n      operationId: GetCommentsForPullRequest\n      description: Returns comments made on a pull request.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCommentsForPullRequestOutput\"\n        \"480\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"481\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"482\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"483\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"484\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"485\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"486\":\n          description: CommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdRequiredException\"\n        \"487\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"488\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"489\":\n          description: InvalidMaxResultsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxResultsException\"\n        \"490\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n        \"491\":\n          description: RepositoryNotAssociatedWithPullRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNotAssociatedWithPullRequestE\\\n                  xception\"\n        \"492\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"493\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"494\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"495\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"496\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: maxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetCommentsForPullRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetCommentsForPullRequestInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetCommit:\n    post:\n      operationId: GetCommit\n      description: Returns information about a commit, including commit message and\n        committer information.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCommitOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: CommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdRequiredException\"\n        \"484\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"485\":\n          description: CommitIdDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdDoesNotExistException\"\n        \"486\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"487\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"488\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"489\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"490\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetCommit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetCommitInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetDifferences:\n    post:\n      operationId: GetDifferences\n      description: Returns information about the differences in a valid commit specifier\n        (such as a branch, tag, HEAD, commit ID or other fully qualified\n        reference). Results can be limited to a specified path.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDifferencesOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n        \"484\":\n          description: InvalidMaxResultsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxResultsException\"\n        \"485\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"486\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"487\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"488\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"489\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"490\":\n          description: PathDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathDoesNotExistException\"\n        \"491\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"492\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"493\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"494\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"495\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetDifferences\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetDifferencesInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetFile:\n    post:\n      operationId: GetFile\n      description: Returns the base-64 encoded contents of a specified file and its\n        metadata.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFileOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"484\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"485\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"486\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"487\":\n          description: FileDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileDoesNotExistException\"\n        \"488\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"489\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"490\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"491\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"492\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"493\":\n          description: FileTooLargeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileTooLargeException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetFileInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetFolder:\n    post:\n      operationId: GetFolder\n      description: Returns the contents of a specified folder in a repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFolderOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"484\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"485\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"486\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"487\":\n          description: FolderDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderDoesNotExistException\"\n        \"488\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"489\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"490\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"491\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"492\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetFolder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetFolderInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetMergeCommit:\n    post:\n      operationId: GetMergeCommit\n      description: Returns information about a specified merge commit.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetMergeCommitOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"484\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"485\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"486\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"487\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"488\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"489\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"490\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"491\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"492\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetMergeCommit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetMergeCommitInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetMergeConflicts:\n    post:\n      operationId: GetMergeConflicts\n      description: Returns information about merge conflicts between the before and after\n        commit IDs for a pull request in a repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetMergeConflictsOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: MergeOptionRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergeOptionRequiredException\"\n        \"484\":\n          description: InvalidMergeOptionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMergeOptionException\"\n        \"485\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n        \"486\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"487\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"488\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"489\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"490\":\n          description: InvalidMaxConflictFilesException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxConflictFilesException\"\n        \"491\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"492\":\n          description: InvalidDestinationCommitSpecifierException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidDestinationCommitSpecifierExcept\\\n                  ion\"\n        \"493\":\n          description: InvalidSourceCommitSpecifierException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSourceCommitSpecifierException\"\n        \"494\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"495\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"496\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"497\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"498\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"499\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"500\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"501\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: maxConflictFiles\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetMergeConflicts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetMergeConflictsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetMergeOptions:\n    post:\n      operationId: GetMergeOptions\n      description: Returns information about the merge options available for merging two\n        specified branches. For details about why a particular merge option is\n        not available, use GetMergeConflicts or DescribeMergeConflicts.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetMergeOptionsOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"484\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"485\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"486\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"487\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"488\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"489\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"490\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"491\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"492\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"493\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"494\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"495\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetMergeOptions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetMergeOptionsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetPullRequest:\n    post:\n      operationId: GetPullRequest\n      description: Gets information about a pull request in a specified repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetPullRequestOutput\"\n        \"480\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"481\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"482\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"483\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"484\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"485\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"486\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"487\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetPullRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetPullRequestInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetRepository:\n    post:\n      operationId: GetRepository\n      description: \u003cp\u003eReturns information about a repository.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe description\n        field for a repository accepts all HTML characters and all valid Unicode\n        characters. Applications that do not HTML-encode the description and\n        display it in a web page could expose users to potentially malicious\n        code. Make sure that you HTML-encode the description field in any\n        application that uses this API to display the repository description on\n        a web page.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRepositoryOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"484\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"485\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"486\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"487\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetRepository\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetRepositoryInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.GetRepositoryTriggers:\n    post:\n      operationId: GetRepositoryTriggers\n      description: Gets information about triggers configured for a repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRepositoryTriggersOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"484\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"485\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"486\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"487\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.GetRepositoryTriggers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetRepositoryTriggersInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.ListBranches:\n    post:\n      operationId: ListBranches\n      description: Gets information about one or more branches in a repository.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListBranchesOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"484\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"485\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"486\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"487\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"488\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n      parameters:\n        - name: nextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.ListBranches\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListBranchesInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.ListPullRequests:\n    post:\n      operationId: ListPullRequests\n      description: Returns a list of pull requests for a specified repository. The return\n        list can be refined by pull request status or pull request author ARN.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListPullRequestsOutput\"\n        \"480\":\n          description: InvalidPullRequestStatusException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestStatusException\"\n        \"481\":\n          description: InvalidAuthorArnException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidAuthorArnException\"\n        \"482\":\n          description: AuthorDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthorDoesNotExistException\"\n        \"483\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"484\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"485\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"486\":\n          description: InvalidMaxResultsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidMaxResultsException\"\n        \"487\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n        \"488\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"489\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"490\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"491\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"492\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: maxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.ListPullRequests\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListPullRequestsInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.ListRepositories:\n    post:\n      operationId: ListRepositories\n      description: Gets information about one or more repositories.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListRepositoriesOutput\"\n        \"480\":\n          description: InvalidSortByException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSortByException\"\n        \"481\":\n          description: InvalidOrderException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidOrderException\"\n        \"482\":\n          description: InvalidContinuationTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidContinuationTokenException\"\n      parameters:\n        - name: nextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.ListRepositories\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListRepositoriesInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: Gets information about AWS tags for a specified Amazon Resource Name\n        (ARN) in AWS CodeCommit. For a list of valid resources in AWS\n        CodeCommit, see \u003ca\n        href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\"\u003eCodeCommit\n        Resources and Operations\u003c/a\u003e in the AWS CodeCommit User Guide.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceOutput\"\n        \"480\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: ResourceArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceArnRequiredException\"\n        \"483\":\n          description: InvalidResourceArnException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidResourceArnException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.ListTagsForResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTagsForResourceInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.MergeBranchesByFastForward:\n    post:\n      operationId: MergeBranchesByFastForward\n      description: Merges two branches using the fast-forward merge strategy.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergeBranchesByFastForwardOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"484\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"485\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"486\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"487\":\n          description: InvalidTargetBranchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTargetBranchException\"\n        \"488\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"489\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"490\":\n          description: BranchNameIsTagNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameIsTagNameException\"\n        \"491\":\n          description: BranchDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchDoesNotExistException\"\n        \"492\":\n          description: ManualMergeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManualMergeRequiredException\"\n        \"493\":\n          description: ConcurrentReferenceUpdateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentReferenceUpdateException\"\n        \"494\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"495\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"496\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"497\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"498\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.MergeBranchesByFastForward\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MergeBranchesByFastForwardInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.MergeBranchesBySquash:\n    post:\n      operationId: MergeBranchesBySquash\n      description: Merges two branches using the squash merge strategy.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergeBranchesBySquashOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"484\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"485\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"486\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"487\":\n          description: InvalidTargetBranchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTargetBranchException\"\n        \"488\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"489\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"490\":\n          description: BranchNameIsTagNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameIsTagNameException\"\n        \"491\":\n          description: BranchDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchDoesNotExistException\"\n        \"492\":\n          description: ManualMergeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManualMergeRequiredException\"\n        \"493\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"494\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"495\":\n          description: InvalidConflictResolutionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionException\"\n        \"496\":\n          description: MaximumConflictResolutionEntriesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumConflictResolutionEntriesExceede\\\n                  dException\"\n        \"497\":\n          description: MultipleConflictResolutionEntriesException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultipleConflictResolutionEntriesExcept\\\n                  ion\"\n        \"498\":\n          description: ReplacementTypeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementTypeRequiredException\"\n        \"499\":\n          description: InvalidReplacementTypeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementTypeException\"\n        \"500\":\n          description: ReplacementContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementContentRequiredException\"\n        \"501\":\n          description: InvalidReplacementContentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementContentException\"\n        \"502\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"503\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"504\":\n          description: FileContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentSizeLimitExceededException\"\n        \"505\":\n          description: FolderContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderContentSizeLimitExceededException\"\n        \"506\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"507\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"508\":\n          description: FileModeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileModeRequiredException\"\n        \"509\":\n          description: InvalidFileModeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileModeException\"\n        \"510\":\n          description: NameLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameLengthExceededException\"\n        \"511\":\n          description: InvalidEmailException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailException\"\n        \"512\":\n          description: CommitMessageLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitMessageLengthExceededException\"\n        \"513\":\n          description: ConcurrentReferenceUpdateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentReferenceUpdateException\"\n        \"514\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"515\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"516\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"517\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"518\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.MergeBranchesBySquash\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MergeBranchesBySquashInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.MergeBranchesByThreeWay:\n    post:\n      operationId: MergeBranchesByThreeWay\n      description: Merges two specified branches using the three-way merge strategy.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergeBranchesByThreeWayOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"484\":\n          description: CommitRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitRequiredException\"\n        \"485\":\n          description: InvalidCommitException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitException\"\n        \"486\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"487\":\n          description: InvalidTargetBranchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTargetBranchException\"\n        \"488\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"489\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"490\":\n          description: BranchNameIsTagNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameIsTagNameException\"\n        \"491\":\n          description: BranchDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchDoesNotExistException\"\n        \"492\":\n          description: ManualMergeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManualMergeRequiredException\"\n        \"493\":\n          description: ConcurrentReferenceUpdateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentReferenceUpdateException\"\n        \"494\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"495\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"496\":\n          description: InvalidConflictResolutionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionException\"\n        \"497\":\n          description: MaximumConflictResolutionEntriesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumConflictResolutionEntriesExceede\\\n                  dException\"\n        \"498\":\n          description: MultipleConflictResolutionEntriesException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultipleConflictResolutionEntriesExcept\\\n                  ion\"\n        \"499\":\n          description: ReplacementTypeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementTypeRequiredException\"\n        \"500\":\n          description: InvalidReplacementTypeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementTypeException\"\n        \"501\":\n          description: ReplacementContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementContentRequiredException\"\n        \"502\":\n          description: InvalidReplacementContentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementContentException\"\n        \"503\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"504\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"505\":\n          description: FileContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentSizeLimitExceededException\"\n        \"506\":\n          description: FolderContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderContentSizeLimitExceededException\"\n        \"507\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"508\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"509\":\n          description: FileModeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileModeRequiredException\"\n        \"510\":\n          description: InvalidFileModeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileModeException\"\n        \"511\":\n          description: NameLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameLengthExceededException\"\n        \"512\":\n          description: InvalidEmailException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailException\"\n        \"513\":\n          description: CommitMessageLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitMessageLengthExceededException\"\n        \"514\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"515\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"516\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"517\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"518\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.MergeBranchesByThreeWay\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MergeBranchesByThreeWayInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.MergePullRequestByFastForward:\n    post:\n      operationId: MergePullRequestByFastForward\n      description: Attempts to merge the source commit of a pull request into the specified\n        destination branch for that pull request at the specified commit using\n        the fast-forward merge strategy. If the merge is successful, it closes\n        the pull request.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergePullRequestByFastForwardOutput\"\n        \"480\":\n          description: ManualMergeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManualMergeRequiredException\"\n        \"481\":\n          description: PullRequestAlreadyClosedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestAlreadyClosedException\"\n        \"482\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"483\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"484\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"485\":\n          description: TipOfSourceReferenceIsDifferentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipOfSourceReferenceIsDifferentException\"\n        \"486\":\n          description: ReferenceDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReferenceDoesNotExistException\"\n        \"487\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"488\":\n          description: RepositoryNotAssociatedWithPullRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNotAssociatedWithPullRequestE\\\n                  xception\"\n        \"489\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"490\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"491\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"492\":\n          description: ConcurrentReferenceUpdateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentReferenceUpdateException\"\n        \"493\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"494\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"495\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"496\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"497\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.MergePullRequestByFastForward\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MergePullRequestByFastForwardInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.MergePullRequestBySquash:\n    post:\n      operationId: MergePullRequestBySquash\n      description: Attempts to merge the source commit of a pull request into the specified\n        destination branch for that pull request at the specified commit using\n        the squash merge strategy. If the merge is successful, it closes the\n        pull request.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergePullRequestBySquashOutput\"\n        \"480\":\n          description: PullRequestAlreadyClosedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestAlreadyClosedException\"\n        \"481\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"482\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"483\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"484\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"485\":\n          description: ManualMergeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManualMergeRequiredException\"\n        \"486\":\n          description: TipOfSourceReferenceIsDifferentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipOfSourceReferenceIsDifferentException\"\n        \"487\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"488\":\n          description: NameLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameLengthExceededException\"\n        \"489\":\n          description: InvalidEmailException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailException\"\n        \"490\":\n          description: CommitMessageLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitMessageLengthExceededException\"\n        \"491\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"492\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"493\":\n          description: InvalidConflictResolutionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionException\"\n        \"494\":\n          description: ReplacementTypeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementTypeRequiredException\"\n        \"495\":\n          description: InvalidReplacementTypeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementTypeException\"\n        \"496\":\n          description: MultipleConflictResolutionEntriesException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultipleConflictResolutionEntriesExcept\\\n                  ion\"\n        \"497\":\n          description: ReplacementContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementContentRequiredException\"\n        \"498\":\n          description: MaximumConflictResolutionEntriesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumConflictResolutionEntriesExceede\\\n                  dException\"\n        \"499\":\n          description: ConcurrentReferenceUpdateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentReferenceUpdateException\"\n        \"500\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"501\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"502\":\n          description: InvalidFileModeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileModeException\"\n        \"503\":\n          description: InvalidReplacementContentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementContentException\"\n        \"504\":\n          description: FileContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentSizeLimitExceededException\"\n        \"505\":\n          description: FolderContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderContentSizeLimitExceededException\"\n        \"506\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"507\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"508\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"509\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"510\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"511\":\n          description: RepositoryNotAssociatedWithPullRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNotAssociatedWithPullRequestE\\\n                  xception\"\n        \"512\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"513\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"514\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"515\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"516\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.MergePullRequestBySquash\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MergePullRequestBySquashInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.MergePullRequestByThreeWay:\n    post:\n      operationId: MergePullRequestByThreeWay\n      description: Attempts to merge the source commit of a pull request into the specified\n        destination branch for that pull request at the specified commit using\n        the three-way merge strategy. If the merge is successful, it closes the\n        pull request.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MergePullRequestByThreeWayOutput\"\n        \"480\":\n          description: PullRequestAlreadyClosedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestAlreadyClosedException\"\n        \"481\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"482\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"483\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"484\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"485\":\n          description: ManualMergeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManualMergeRequiredException\"\n        \"486\":\n          description: TipOfSourceReferenceIsDifferentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipOfSourceReferenceIsDifferentException\"\n        \"487\":\n          description: TipsDivergenceExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TipsDivergenceExceededException\"\n        \"488\":\n          description: NameLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameLengthExceededException\"\n        \"489\":\n          description: InvalidEmailException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailException\"\n        \"490\":\n          description: CommitMessageLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitMessageLengthExceededException\"\n        \"491\":\n          description: InvalidConflictDetailLevelException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictDetailLevelException\"\n        \"492\":\n          description: InvalidConflictResolutionStrategyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionStrategyExcept\\\n                  ion\"\n        \"493\":\n          description: InvalidConflictResolutionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidConflictResolutionException\"\n        \"494\":\n          description: ReplacementTypeRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementTypeRequiredException\"\n        \"495\":\n          description: InvalidReplacementTypeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementTypeException\"\n        \"496\":\n          description: MultipleConflictResolutionEntriesException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultipleConflictResolutionEntriesExcept\\\n                  ion\"\n        \"497\":\n          description: ReplacementContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReplacementContentRequiredException\"\n        \"498\":\n          description: MaximumConflictResolutionEntriesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumConflictResolutionEntriesExceede\\\n                  dException\"\n        \"499\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"500\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"501\":\n          description: InvalidFileModeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileModeException\"\n        \"502\":\n          description: InvalidReplacementContentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidReplacementContentException\"\n        \"503\":\n          description: FileContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentSizeLimitExceededException\"\n        \"504\":\n          description: FolderContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderContentSizeLimitExceededException\"\n        \"505\":\n          description: MaximumFileContentToLoadExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumFileContentToLoadExceededExcepti\\\n                  on\"\n        \"506\":\n          description: MaximumItemsToCompareExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumItemsToCompareExceededException\"\n        \"507\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"508\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"509\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"510\":\n          description: RepositoryNotAssociatedWithPullRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNotAssociatedWithPullRequestE\\\n                  xception\"\n        \"511\":\n          description: ConcurrentReferenceUpdateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentReferenceUpdateException\"\n        \"512\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"513\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"514\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"515\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"516\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.MergePullRequestByThreeWay\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MergePullRequestByThreeWayInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.PostCommentForComparedCommit:\n    post:\n      operationId: PostCommentForComparedCommit\n      description: Posts a comment on the comparison between two commits.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PostCommentForComparedCommitOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: ClientRequestTokenRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientRequestTokenRequiredException\"\n        \"484\":\n          description: InvalidClientRequestTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidClientRequestTokenException\"\n        \"485\":\n          description: IdempotencyParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotencyParameterMismatchException\"\n        \"486\":\n          description: CommentContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentContentRequiredException\"\n        \"487\":\n          description: CommentContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentContentSizeLimitExceededException\"\n        \"488\":\n          description: InvalidFileLocationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileLocationException\"\n        \"489\":\n          description: InvalidRelativeFileVersionEnumException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRelativeFileVersionEnumException\"\n        \"490\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"491\":\n          description: InvalidFilePositionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFilePositionException\"\n        \"492\":\n          description: CommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdRequiredException\"\n        \"493\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"494\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"495\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"496\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"497\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"498\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"499\":\n          description: BeforeCommitIdAndAfterCommitIdAreSameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BeforeCommitIdAndAfterCommitIdAreSameEx\\\n                  ception\"\n        \"500\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"501\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"502\":\n          description: PathDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathDoesNotExistException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.PostCommentForComparedCommit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostCommentForComparedCommitInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.PostCommentForPullRequest:\n    post:\n      operationId: PostCommentForPullRequest\n      description: Posts a comment on a pull request.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PostCommentForPullRequestOutput\"\n        \"480\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"481\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"482\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"483\":\n          description: RepositoryNotAssociatedWithPullRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNotAssociatedWithPullRequestE\\\n                  xception\"\n        \"484\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"485\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"486\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"487\":\n          description: ClientRequestTokenRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientRequestTokenRequiredException\"\n        \"488\":\n          description: InvalidClientRequestTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidClientRequestTokenException\"\n        \"489\":\n          description: IdempotencyParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotencyParameterMismatchException\"\n        \"490\":\n          description: CommentContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentContentRequiredException\"\n        \"491\":\n          description: CommentContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentContentSizeLimitExceededException\"\n        \"492\":\n          description: InvalidFileLocationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileLocationException\"\n        \"493\":\n          description: InvalidRelativeFileVersionEnumException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRelativeFileVersionEnumException\"\n        \"494\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"495\":\n          description: InvalidFilePositionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFilePositionException\"\n        \"496\":\n          description: CommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitIdRequiredException\"\n        \"497\":\n          description: InvalidCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommitIdException\"\n        \"498\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"499\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"500\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"501\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"502\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"503\":\n          description: CommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDoesNotExistException\"\n        \"504\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"505\":\n          description: PathDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathDoesNotExistException\"\n        \"506\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"507\":\n          description: BeforeCommitIdAndAfterCommitIdAreSameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BeforeCommitIdAndAfterCommitIdAreSameEx\\\n                  ception\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.PostCommentForPullRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostCommentForPullRequestInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.PostCommentReply:\n    post:\n      operationId: PostCommentReply\n      description: Posts a comment in reply to an existing comment on a comparison between\n        commits or a pull request.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PostCommentReplyOutput\"\n        \"480\":\n          description: ClientRequestTokenRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientRequestTokenRequiredException\"\n        \"481\":\n          description: InvalidClientRequestTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidClientRequestTokenException\"\n        \"482\":\n          description: IdempotencyParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IdempotencyParameterMismatchException\"\n        \"483\":\n          description: CommentContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentContentRequiredException\"\n        \"484\":\n          description: CommentContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentContentSizeLimitExceededException\"\n        \"485\":\n          description: CommentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentDoesNotExistException\"\n        \"486\":\n          description: CommentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentIdRequiredException\"\n        \"487\":\n          description: InvalidCommentIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommentIdException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.PostCommentReply\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostCommentReplyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.PutFile:\n    post:\n      operationId: PutFile\n      description: Adds or updates a file in a branch in an AWS CodeCommit repository, and\n        generates a commit for the addition in the specified branch.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutFileOutput\"\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"483\":\n          description: ParentCommitIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitIdRequiredException\"\n        \"484\":\n          description: InvalidParentCommitIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParentCommitIdException\"\n        \"485\":\n          description: ParentCommitDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitDoesNotExistException\"\n        \"486\":\n          description: ParentCommitIdOutdatedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ParentCommitIdOutdatedException\"\n        \"487\":\n          description: FileContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentRequiredException\"\n        \"488\":\n          description: FileContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContentSizeLimitExceededException\"\n        \"489\":\n          description: FolderContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FolderContentSizeLimitExceededException\"\n        \"490\":\n          description: PathRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PathRequiredException\"\n        \"491\":\n          description: InvalidPathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPathException\"\n        \"492\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"493\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"494\":\n          description: BranchDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchDoesNotExistException\"\n        \"495\":\n          description: BranchNameIsTagNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameIsTagNameException\"\n        \"496\":\n          description: InvalidFileModeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidFileModeException\"\n        \"497\":\n          description: NameLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NameLengthExceededException\"\n        \"498\":\n          description: InvalidEmailException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEmailException\"\n        \"499\":\n          description: CommitMessageLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitMessageLengthExceededException\"\n        \"500\":\n          description: InvalidDeletionParameterException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidDeletionParameterException\"\n        \"501\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"502\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"503\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"504\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"505\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n        \"506\":\n          description: SameFileContentException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SameFileContentException\"\n        \"507\":\n          description: FileNameConflictsWithDirectoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileNameConflictsWithDirectoryNameExcep\\\n                  tion\"\n        \"508\":\n          description: DirectoryNameConflictsWithFileNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DirectoryNameConflictsWithFileNameExcep\\\n                  tion\"\n        \"509\":\n          description: FilePathConflictsWithSubmodulePathException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FilePathConflictsWithSubmodulePathExcep\\\n                  tion\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.PutFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutFileInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.PutRepositoryTriggers:\n    post:\n      operationId: PutRepositoryTriggers\n      description: Replaces all triggers for a repository. This can be used to create or\n        delete triggers.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutRepositoryTriggersOutput\"\n        \"480\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"481\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: RepositoryTriggersListRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggersListRequiredException\"\n        \"484\":\n          description: MaximumRepositoryTriggersExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumRepositoryTriggersExceededExcept\\\n                  ion\"\n        \"485\":\n          description: InvalidRepositoryTriggerNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerNameException\"\n        \"486\":\n          description: InvalidRepositoryTriggerDestinationArnException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerDestinationArnE\\\n                  xception\"\n        \"487\":\n          description: InvalidRepositoryTriggerRegionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerRegionException\"\n        \"488\":\n          description: InvalidRepositoryTriggerCustomDataException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerCustomDataExcep\\\n                  tion\"\n        \"489\":\n          description: MaximumBranchesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumBranchesExceededException\"\n        \"490\":\n          description: InvalidRepositoryTriggerBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerBranchNameExcep\\\n                  tion\"\n        \"491\":\n          description: InvalidRepositoryTriggerEventsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerEventsException\"\n        \"492\":\n          description: RepositoryTriggerNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggerNameRequiredException\"\n        \"493\":\n          description: RepositoryTriggerDestinationArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggerDestinationArnRequired\\\n                  Exception\"\n        \"494\":\n          description: RepositoryTriggerBranchNameListRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggerBranchNameListRequired\\\n                  Exception\"\n        \"495\":\n          description: RepositoryTriggerEventsListRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggerEventsListRequiredExce\\\n                  ption\"\n        \"496\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"497\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"498\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"499\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"500\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.PutRepositoryTriggers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutRepositoryTriggersInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.TagResource:\n    post:\n      operationId: TagResource\n      description: Adds or updates tags for a resource in AWS CodeCommit. For a list of\n        valid resources in AWS CodeCommit, see \u003ca\n        href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\"\u003eCodeCommit\n        Resources and Operations\u003c/a\u003e in the AWS CodeCommit User Guide.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: ResourceArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceArnRequiredException\"\n        \"483\":\n          description: InvalidResourceArnException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidResourceArnException\"\n        \"484\":\n          description: TagsMapRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagsMapRequiredException\"\n        \"485\":\n          description: InvalidTagsMapException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTagsMapException\"\n        \"486\":\n          description: TooManyTagsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyTagsException\"\n        \"487\":\n          description: InvalidSystemTagUsageException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSystemTagUsageException\"\n        \"488\":\n          description: TagPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagPolicyException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.TagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TagResourceInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.TestRepositoryTriggers:\n    post:\n      operationId: TestRepositoryTriggers\n      description: Tests the functionality of repository triggers by sending information to\n        the trigger target. If real data is available in the repository, the\n        test will send data from the last commit. If no data is available,\n        sample data will be generated.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TestRepositoryTriggersOutput\"\n        \"480\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"481\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: RepositoryTriggersListRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggersListRequiredException\"\n        \"484\":\n          description: MaximumRepositoryTriggersExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumRepositoryTriggersExceededExcept\\\n                  ion\"\n        \"485\":\n          description: InvalidRepositoryTriggerNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerNameException\"\n        \"486\":\n          description: InvalidRepositoryTriggerDestinationArnException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerDestinationArnE\\\n                  xception\"\n        \"487\":\n          description: InvalidRepositoryTriggerRegionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerRegionException\"\n        \"488\":\n          description: InvalidRepositoryTriggerCustomDataException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerCustomDataExcep\\\n                  tion\"\n        \"489\":\n          description: MaximumBranchesExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MaximumBranchesExceededException\"\n        \"490\":\n          description: InvalidRepositoryTriggerBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerBranchNameExcep\\\n                  tion\"\n        \"491\":\n          description: InvalidRepositoryTriggerEventsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryTriggerEventsException\"\n        \"492\":\n          description: RepositoryTriggerNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggerNameRequiredException\"\n        \"493\":\n          description: RepositoryTriggerDestinationArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggerDestinationArnRequired\\\n                  Exception\"\n        \"494\":\n          description: RepositoryTriggerBranchNameListRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggerBranchNameListRequired\\\n                  Exception\"\n        \"495\":\n          description: RepositoryTriggerEventsListRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryTriggerEventsListRequiredExce\\\n                  ption\"\n        \"496\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"497\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"498\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"499\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"500\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.TestRepositoryTriggers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TestRepositoryTriggersInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.UntagResource:\n    post:\n      operationId: UntagResource\n      description: Removes tags for a resource in AWS CodeCommit. For a list of valid\n        resources in AWS CodeCommit, see \u003ca\n        href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-iam-access-control-identity-based.html#arn-formats\"\u003eCodeCommit\n        Resources and Operations\u003c/a\u003e in the AWS CodeCommit User Guide.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"481\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"482\":\n          description: ResourceArnRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceArnRequiredException\"\n        \"483\":\n          description: InvalidResourceArnException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidResourceArnException\"\n        \"484\":\n          description: TagKeysListRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagKeysListRequiredException\"\n        \"485\":\n          description: InvalidTagKeysListException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTagKeysListException\"\n        \"486\":\n          description: TooManyTagsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyTagsException\"\n        \"487\":\n          description: InvalidSystemTagUsageException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidSystemTagUsageException\"\n        \"488\":\n          description: TagPolicyException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagPolicyException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.UntagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UntagResourceInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.UpdateComment:\n    post:\n      operationId: UpdateComment\n      description: Replaces the contents of a comment.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateCommentOutput\"\n        \"480\":\n          description: CommentContentRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentContentRequiredException\"\n        \"481\":\n          description: CommentContentSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentContentSizeLimitExceededException\"\n        \"482\":\n          description: CommentDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentDoesNotExistException\"\n        \"483\":\n          description: CommentIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentIdRequiredException\"\n        \"484\":\n          description: InvalidCommentIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCommentIdException\"\n        \"485\":\n          description: CommentNotCreatedByCallerException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentNotCreatedByCallerException\"\n        \"486\":\n          description: CommentDeletedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommentDeletedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.UpdateComment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateCommentInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.UpdateDefaultBranch:\n    post:\n      operationId: UpdateDefaultBranch\n      description: \u003cp\u003eSets or changes the default branch name for the specified\n        repository.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you use this operation to change the\n        default branch name to the current default branch name, a success\n        message is returned even though the default branch did not change.\u003c/p\u003e\n        \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: BranchNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchNameRequiredException\"\n        \"484\":\n          description: InvalidBranchNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidBranchNameException\"\n        \"485\":\n          description: BranchDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchDoesNotExistException\"\n        \"486\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"487\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"488\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"489\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"490\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.UpdateDefaultBranch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateDefaultBranchInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestDescription:\n    post:\n      operationId: UpdatePullRequestDescription\n      description: Replaces the contents of the description of a pull request.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdatePullRequestDescriptionOutput\"\n        \"480\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"481\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"482\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"483\":\n          description: InvalidDescriptionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidDescriptionException\"\n        \"484\":\n          description: PullRequestAlreadyClosedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestAlreadyClosedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.UpdatePullRequestDescription\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePullRequestDescriptionInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestStatus:\n    post:\n      operationId: UpdatePullRequestStatus\n      description: \"Updates the status of a pull request. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdatePullRequestStatusOutput\"\n        \"480\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"481\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"482\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"483\":\n          description: InvalidPullRequestStatusUpdateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestStatusUpdateException\"\n        \"484\":\n          description: InvalidPullRequestStatusException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestStatusException\"\n        \"485\":\n          description: PullRequestStatusRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestStatusRequiredException\"\n        \"486\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"487\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"488\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"489\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"490\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.UpdatePullRequestStatus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePullRequestStatusInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.UpdatePullRequestTitle:\n    post:\n      operationId: UpdatePullRequestTitle\n      description: Replaces the title of a pull request.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdatePullRequestTitleOutput\"\n        \"480\":\n          description: PullRequestDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestDoesNotExistException\"\n        \"481\":\n          description: InvalidPullRequestIdException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPullRequestIdException\"\n        \"482\":\n          description: PullRequestIdRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestIdRequiredException\"\n        \"483\":\n          description: TitleRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TitleRequiredException\"\n        \"484\":\n          description: InvalidTitleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTitleException\"\n        \"485\":\n          description: PullRequestAlreadyClosedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PullRequestAlreadyClosedException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.UpdatePullRequestTitle\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePullRequestTitleInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.UpdateRepositoryDescription:\n    post:\n      operationId: UpdateRepositoryDescription\n      description: \u003cp\u003eSets or changes the comment or description for a repository.\u003c/p\u003e\n        \u003cnote\u003e \u003cp\u003eThe description field for a repository accepts all HTML\n        characters and all valid Unicode characters. Applications that do not\n        HTML-encode the description and display it in a web page could expose\n        users to potentially malicious code. Make sure that you HTML-encode the\n        description field in any application that uses this API to display the\n        repository description on a web page.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"481\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"482\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n        \"483\":\n          description: InvalidRepositoryDescriptionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryDescriptionException\"\n        \"484\":\n          description: EncryptionIntegrityChecksFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionIntegrityChecksFailedException\"\n        \"485\":\n          description: EncryptionKeyAccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyAccessDeniedException\"\n        \"486\":\n          description: EncryptionKeyDisabledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyDisabledException\"\n        \"487\":\n          description: EncryptionKeyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyNotFoundException\"\n        \"488\":\n          description: EncryptionKeyUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncryptionKeyUnavailableException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.UpdateRepositoryDescription\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateRepositoryDescriptionInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=CodeCommit_20150413.UpdateRepositoryName:\n    post:\n      operationId: UpdateRepositoryName\n      description: Renames a repository. The repository name must be unique across the\n        calling AWS account. In addition, repository names are limited to 100\n        alphanumeric, dash, and underscore characters, and cannot include\n        certain characters. The suffix \".git\" is prohibited. For a full\n        description of the limits on repository names, see \u003ca\n        href=\"https://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\"\u003eLimits\u003c/a\u003e\n        in the AWS CodeCommit User Guide.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: RepositoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryDoesNotExistException\"\n        \"481\":\n          description: RepositoryNameExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameExistsException\"\n        \"482\":\n          description: RepositoryNameRequiredException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryNameRequiredException\"\n        \"483\":\n          description: InvalidRepositoryNameException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRepositoryNameException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - CodeCommit_20150413.UpdateRepositoryName\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateRepositoryNameInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://codecommit.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The CodeCommit multi-region endpoint\n  - url: https://codecommit.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The CodeCommit multi-region endpoint\n  - url: http://codecommit.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The CodeCommit endpoint for China (Beijing) and China (Ningxia)\n  - url: https://codecommit.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The CodeCommit endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchDescribeMergeConflictsOutput:\n      type: object\n      required:\n        - conflicts\n        - destinationCommitId\n        - sourceCommitId\n      properties:\n        conflicts:\n          $ref: \"#/components/schemas/Conflicts\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        errors:\n          $ref: \"#/components/schemas/BatchDescribeMergeConflictsErrors\"\n        destinationCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        sourceCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        baseCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n    BatchDescribeMergeConflictsInput:\n      type: object\n      required:\n        - repositoryName\n        - destinationCommitSpecifier\n        - sourceCommitSpecifier\n        - mergeOption\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        mergeOption:\n          $ref: \"#/components/schemas/MergeOptionTypeEnum\"\n        maxMergeHunks:\n          $ref: \"#/components/schemas/MaxResults\"\n        maxConflictFiles:\n          $ref: \"#/components/schemas/MaxResults\"\n        filePaths:\n          $ref: \"#/components/schemas/FilePaths\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    RepositoryNameRequiredException: {}\n    InvalidRepositoryNameException: {}\n    RepositoryDoesNotExistException: {}\n    MergeOptionRequiredException: {}\n    InvalidMergeOptionException: {}\n    InvalidContinuationTokenException: {}\n    CommitRequiredException: {}\n    CommitDoesNotExistException: {}\n    InvalidCommitException: {}\n    TipsDivergenceExceededException: {}\n    InvalidMaxConflictFilesException: {}\n    InvalidMaxMergeHunksException: {}\n    InvalidConflictDetailLevelException: {}\n    InvalidConflictResolutionStrategyException: {}\n    MaximumFileContentToLoadExceededException: {}\n    MaximumItemsToCompareExceededException: {}\n    EncryptionIntegrityChecksFailedException: {}\n    EncryptionKeyAccessDeniedException: {}\n    EncryptionKeyDisabledException: {}\n    EncryptionKeyNotFoundException: {}\n    EncryptionKeyUnavailableException: {}\n    BatchGetCommitsOutput:\n      type: object\n      properties:\n        commits:\n          $ref: \"#/components/schemas/CommitObjectsList\"\n        errors:\n          $ref: \"#/components/schemas/BatchGetCommitsErrorsList\"\n    BatchGetCommitsInput:\n      type: object\n      required:\n        - commitIds\n        - repositoryName\n      properties:\n        commitIds:\n          $ref: \"#/components/schemas/CommitIdsInputList\"\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n    CommitIdsListRequiredException: {}\n    CommitIdsLimitExceededException: {}\n    BatchGetRepositoriesOutput:\n      type: object\n      properties:\n        repositories:\n          $ref: \"#/components/schemas/RepositoryMetadataList\"\n        repositoriesNotFound:\n          $ref: \"#/components/schemas/RepositoryNotFoundList\"\n      description: Represents the output of a batch get repositories operation.\n    BatchGetRepositoriesInput:\n      type: object\n      required:\n        - repositoryNames\n      properties:\n        repositoryNames:\n          $ref: \"#/components/schemas/RepositoryNameList\"\n      description: Represents the input of a batch get repositories operation.\n    RepositoryNamesRequiredException: {}\n    MaximumRepositoryNamesExceededException: {}\n    CreateBranchInput:\n      type: object\n      required:\n        - repositoryName\n        - branchName\n        - commitId\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        branchName:\n          $ref: \"#/components/schemas/BranchName\"\n        commitId:\n          $ref: \"#/components/schemas/CommitId\"\n      description: Represents the input of a create branch operation.\n    BranchNameRequiredException: {}\n    BranchNameExistsException: {}\n    InvalidBranchNameException: {}\n    CommitIdRequiredException: {}\n    InvalidCommitIdException: {}\n    CreateCommitOutput:\n      type: object\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n        filesAdded:\n          $ref: \"#/components/schemas/FilesMetadata\"\n        filesUpdated:\n          $ref: \"#/components/schemas/FilesMetadata\"\n        filesDeleted:\n          $ref: \"#/components/schemas/FilesMetadata\"\n    CreateCommitInput:\n      type: object\n      required:\n        - repositoryName\n        - branchName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        branchName:\n          $ref: \"#/components/schemas/BranchName\"\n        parentCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        authorName:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n        commitMessage:\n          $ref: \"#/components/schemas/Message\"\n        keepEmptyFolders:\n          $ref: \"#/components/schemas/KeepEmptyFolders\"\n        putFiles:\n          $ref: \"#/components/schemas/PutFileEntries\"\n        deleteFiles:\n          $ref: \"#/components/schemas/DeleteFileEntries\"\n        setFileModes:\n          $ref: \"#/components/schemas/SetFileModeEntries\"\n    ParentCommitIdRequiredException: {}\n    InvalidParentCommitIdException: {}\n    ParentCommitDoesNotExistException: {}\n    ParentCommitIdOutdatedException: {}\n    BranchDoesNotExistException: {}\n    BranchNameIsTagNameException: {}\n    FileEntryRequiredException: {}\n    MaximumFileEntriesExceededException: {}\n    PutFileEntryConflictException: {}\n    SourceFileOrContentRequiredException: {}\n    FileContentAndSourceFileSpecifiedException: {}\n    PathRequiredException: {}\n    InvalidPathException: {}\n    SamePathRequestException: {}\n    FileDoesNotExistException: {}\n    FileContentSizeLimitExceededException: {}\n    FolderContentSizeLimitExceededException: {}\n    InvalidDeletionParameterException: {}\n    RestrictedSourceFileException: {}\n    FileModeRequiredException: {}\n    InvalidFileModeException: {}\n    NameLengthExceededException: {}\n    InvalidEmailException: {}\n    CommitMessageLengthExceededException: {}\n    NoChangeException: {}\n    FileNameConflictsWithDirectoryNameException: {}\n    DirectoryNameConflictsWithFileNameException: {}\n    FilePathConflictsWithSubmodulePathException: {}\n    CreatePullRequestOutput:\n      type: object\n      required:\n        - pullRequest\n      properties:\n        pullRequest:\n          $ref: \"#/components/schemas/PullRequest\"\n    CreatePullRequestInput:\n      type: object\n      required:\n        - title\n        - targets\n      properties:\n        title:\n          $ref: \"#/components/schemas/Title\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        targets:\n          $ref: \"#/components/schemas/TargetList\"\n        clientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n    ClientRequestTokenRequiredException: {}\n    InvalidClientRequestTokenException: {}\n    IdempotencyParameterMismatchException: {}\n    ReferenceNameRequiredException: {}\n    InvalidReferenceNameException: {}\n    ReferenceDoesNotExistException: {}\n    ReferenceTypeNotSupportedException: {}\n    TitleRequiredException: {}\n    InvalidTitleException: {}\n    InvalidDescriptionException: {}\n    TargetsRequiredException: {}\n    InvalidTargetsException: {}\n    TargetRequiredException: {}\n    InvalidTargetException: {}\n    MultipleRepositoriesInPullRequestException: {}\n    MaximumOpenPullRequestsExceededException: {}\n    SourceAndDestinationAreSameException: {}\n    CreateRepositoryOutput:\n      type: object\n      properties:\n        repositoryMetadata:\n          $ref: \"#/components/schemas/RepositoryMetadata\"\n      description: Represents the output of a create repository operation.\n    CreateRepositoryInput:\n      type: object\n      required:\n        - repositoryName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        repositoryDescription:\n          $ref: \"#/components/schemas/RepositoryDescription\"\n        tags:\n          $ref: \"#/components/schemas/TagsMap\"\n      description: Represents the input of a create repository operation.\n    RepositoryNameExistsException: {}\n    InvalidRepositoryDescriptionException: {}\n    RepositoryLimitExceededException: {}\n    InvalidTagsMapException: {}\n    TooManyTagsException: {}\n    InvalidSystemTagUsageException: {}\n    TagPolicyException: {}\n    CreateUnreferencedMergeCommitOutput:\n      type: object\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n    CreateUnreferencedMergeCommitInput:\n      type: object\n      required:\n        - repositoryName\n        - sourceCommitSpecifier\n        - destinationCommitSpecifier\n        - mergeOption\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        mergeOption:\n          $ref: \"#/components/schemas/MergeOptionTypeEnum\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n        authorName:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n        commitMessage:\n          $ref: \"#/components/schemas/Message\"\n        keepEmptyFolders:\n          $ref: \"#/components/schemas/KeepEmptyFolders\"\n        conflictResolution:\n          $ref: \"#/components/schemas/ConflictResolution\"\n    InvalidConflictResolutionException: {}\n    ManualMergeRequiredException: {}\n    MaximumConflictResolutionEntriesExceededException: {}\n    MultipleConflictResolutionEntriesException: {}\n    ReplacementTypeRequiredException: {}\n    InvalidReplacementTypeException: {}\n    ReplacementContentRequiredException: {}\n    InvalidReplacementContentException: {}\n    ConcurrentReferenceUpdateException: {}\n    DeleteBranchOutput:\n      type: object\n      properties:\n        deletedBranch:\n          $ref: \"#/components/schemas/BranchInfo\"\n      description: Represents the output of a delete branch operation.\n    DeleteBranchInput:\n      type: object\n      required:\n        - repositoryName\n        - branchName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        branchName:\n          $ref: \"#/components/schemas/BranchName\"\n      description: Represents the input of a delete branch operation.\n    DefaultBranchCannotBeDeletedException: {}\n    DeleteCommentContentOutput:\n      type: object\n      properties:\n        comment:\n          $ref: \"#/components/schemas/Comment\"\n    DeleteCommentContentInput:\n      type: object\n      required:\n        - commentId\n      properties:\n        commentId:\n          $ref: \"#/components/schemas/CommentId\"\n    CommentDoesNotExistException: {}\n    CommentIdRequiredException: {}\n    InvalidCommentIdException: {}\n    CommentDeletedException: {}\n    DeleteFileOutput:\n      type: object\n      required:\n        - commitId\n        - blobId\n        - treeId\n        - filePath\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        blobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n    DeleteFileInput:\n      type: object\n      required:\n        - repositoryName\n        - branchName\n        - filePath\n        - parentCommitId\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        branchName:\n          $ref: \"#/components/schemas/BranchName\"\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        parentCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        keepEmptyFolders:\n          $ref: \"#/components/schemas/KeepEmptyFolders\"\n        commitMessage:\n          $ref: \"#/components/schemas/Message\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n    DeleteRepositoryOutput:\n      type: object\n      properties:\n        repositoryId:\n          $ref: \"#/components/schemas/RepositoryId\"\n      description: Represents the output of a delete repository operation.\n    DeleteRepositoryInput:\n      type: object\n      required:\n        - repositoryName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n      description: Represents the input of a delete repository operation.\n    DescribeMergeConflictsOutput:\n      type: object\n      required:\n        - conflictMetadata\n        - mergeHunks\n        - destinationCommitId\n        - sourceCommitId\n      properties:\n        conflictMetadata:\n          $ref: \"#/components/schemas/ConflictMetadata\"\n        mergeHunks:\n          $ref: \"#/components/schemas/MergeHunks\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        destinationCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        sourceCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        baseCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n    DescribeMergeConflictsInput:\n      type: object\n      required:\n        - repositoryName\n        - destinationCommitSpecifier\n        - sourceCommitSpecifier\n        - mergeOption\n        - filePath\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        mergeOption:\n          $ref: \"#/components/schemas/MergeOptionTypeEnum\"\n        maxMergeHunks:\n          $ref: \"#/components/schemas/MaxResults\"\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    DescribePullRequestEventsOutput:\n      type: object\n      required:\n        - pullRequestEvents\n      properties:\n        pullRequestEvents:\n          $ref: \"#/components/schemas/PullRequestEventList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    DescribePullRequestEventsInput:\n      type: object\n      required:\n        - pullRequestId\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        pullRequestEventType:\n          $ref: \"#/components/schemas/PullRequestEventType\"\n        actorArn:\n          $ref: \"#/components/schemas/Arn\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        maxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n    PullRequestDoesNotExistException: {}\n    InvalidPullRequestIdException: {}\n    PullRequestIdRequiredException: {}\n    InvalidPullRequestEventTypeException: {}\n    InvalidActorArnException: {}\n    ActorDoesNotExistException: {}\n    InvalidMaxResultsException: {}\n    GetBlobOutput:\n      type: object\n      required:\n        - content\n      properties:\n        content:\n          $ref: \"#/components/schemas/blob\"\n      description: Represents the output of a get blob operation.\n    GetBlobInput:\n      type: object\n      required:\n        - repositoryName\n        - blobId\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        blobId:\n          $ref: \"#/components/schemas/ObjectId\"\n      description: Represents the input of a get blob operation.\n    BlobIdRequiredException: {}\n    InvalidBlobIdException: {}\n    BlobIdDoesNotExistException: {}\n    FileTooLargeException: {}\n    GetBranchOutput:\n      type: object\n      properties:\n        branch:\n          $ref: \"#/components/schemas/BranchInfo\"\n      description: Represents the output of a get branch operation.\n    GetBranchInput:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        branchName:\n          $ref: \"#/components/schemas/BranchName\"\n      description: Represents the input of a get branch operation.\n    GetCommentOutput:\n      type: object\n      properties:\n        comment:\n          $ref: \"#/components/schemas/Comment\"\n    GetCommentInput:\n      type: object\n      required:\n        - commentId\n      properties:\n        commentId:\n          $ref: \"#/components/schemas/CommentId\"\n    GetCommentsForComparedCommitOutput:\n      type: object\n      properties:\n        commentsForComparedCommitData:\n          $ref: \"#/components/schemas/CommentsForComparedCommitData\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetCommentsForComparedCommitInput:\n      type: object\n      required:\n        - repositoryName\n        - afterCommitId\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        maxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n    GetCommentsForPullRequestOutput:\n      type: object\n      properties:\n        commentsForPullRequestData:\n          $ref: \"#/components/schemas/CommentsForPullRequestData\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetCommentsForPullRequestInput:\n      type: object\n      required:\n        - pullRequestId\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        maxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n    RepositoryNotAssociatedWithPullRequestException: {}\n    GetCommitOutput:\n      type: object\n      required:\n        - commit\n      properties:\n        commit:\n          $ref: \"#/components/schemas/Commit\"\n      description: Represents the output of a get commit operation.\n    GetCommitInput:\n      type: object\n      required:\n        - repositoryName\n        - commitId\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n      description: Represents the input of a get commit operation.\n    CommitIdDoesNotExistException: {}\n    GetDifferencesOutput:\n      type: object\n      properties:\n        differences:\n          $ref: \"#/components/schemas/DifferenceList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetDifferencesInput:\n      type: object\n      required:\n        - repositoryName\n        - afterCommitSpecifier\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        afterCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        beforePath:\n          $ref: \"#/components/schemas/Path\"\n        afterPath:\n          $ref: \"#/components/schemas/Path\"\n        MaxResults:\n          $ref: \"#/components/schemas/Limit\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    PathDoesNotExistException: {}\n    GetFileOutput:\n      type: object\n      required:\n        - commitId\n        - blobId\n        - filePath\n        - fileMode\n        - fileSize\n        - fileContent\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        blobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        fileMode:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n        fileSize:\n          $ref: \"#/components/schemas/ObjectSize\"\n        fileContent:\n          $ref: \"#/components/schemas/FileContent\"\n    GetFileInput:\n      type: object\n      required:\n        - repositoryName\n        - filePath\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        commitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n    GetFolderOutput:\n      type: object\n      required:\n        - commitId\n        - folderPath\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        folderPath:\n          $ref: \"#/components/schemas/Path\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n        subFolders:\n          $ref: \"#/components/schemas/FolderList\"\n        files:\n          $ref: \"#/components/schemas/FileList\"\n        symbolicLinks:\n          $ref: \"#/components/schemas/SymbolicLinkList\"\n        subModules:\n          $ref: \"#/components/schemas/SubModuleList\"\n    GetFolderInput:\n      type: object\n      required:\n        - repositoryName\n        - folderPath\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        commitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        folderPath:\n          $ref: \"#/components/schemas/Path\"\n    FolderDoesNotExistException: {}\n    GetMergeCommitOutput:\n      type: object\n      properties:\n        sourceCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        destinationCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        baseCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        mergedCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n    GetMergeCommitInput:\n      type: object\n      required:\n        - repositoryName\n        - sourceCommitSpecifier\n        - destinationCommitSpecifier\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n    GetMergeConflictsOutput:\n      type: object\n      required:\n        - mergeable\n        - destinationCommitId\n        - sourceCommitId\n        - conflictMetadataList\n      properties:\n        mergeable:\n          $ref: \"#/components/schemas/IsMergeable\"\n        destinationCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        sourceCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        baseCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        conflictMetadataList:\n          $ref: \"#/components/schemas/ConflictMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetMergeConflictsInput:\n      type: object\n      required:\n        - repositoryName\n        - destinationCommitSpecifier\n        - sourceCommitSpecifier\n        - mergeOption\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        mergeOption:\n          $ref: \"#/components/schemas/MergeOptionTypeEnum\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        maxConflictFiles:\n          $ref: \"#/components/schemas/MaxResults\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    InvalidDestinationCommitSpecifierException: {}\n    InvalidSourceCommitSpecifierException: {}\n    GetMergeOptionsOutput:\n      type: object\n      required:\n        - mergeOptions\n        - sourceCommitId\n        - destinationCommitId\n        - baseCommitId\n      properties:\n        mergeOptions:\n          $ref: \"#/components/schemas/MergeOptions\"\n        sourceCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        destinationCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        baseCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n    GetMergeOptionsInput:\n      type: object\n      required:\n        - repositoryName\n        - sourceCommitSpecifier\n        - destinationCommitSpecifier\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n    GetPullRequestOutput:\n      type: object\n      required:\n        - pullRequest\n      properties:\n        pullRequest:\n          $ref: \"#/components/schemas/PullRequest\"\n    GetPullRequestInput:\n      type: object\n      required:\n        - pullRequestId\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n    GetRepositoryOutput:\n      type: object\n      properties:\n        repositoryMetadata:\n          $ref: \"#/components/schemas/RepositoryMetadata\"\n      description: Represents the output of a get repository operation.\n    GetRepositoryInput:\n      type: object\n      required:\n        - repositoryName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n      description: Represents the input of a get repository operation.\n    GetRepositoryTriggersOutput:\n      type: object\n      properties:\n        configurationId:\n          $ref: \"#/components/schemas/RepositoryTriggersConfigurationId\"\n        triggers:\n          $ref: \"#/components/schemas/RepositoryTriggersList\"\n      description: Represents the output of a get repository triggers operation.\n    GetRepositoryTriggersInput:\n      type: object\n      required:\n        - repositoryName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n      description: Represents the input of a get repository triggers operation.\n    ListBranchesOutput:\n      type: object\n      properties:\n        branches:\n          $ref: \"#/components/schemas/BranchNameList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n      description: Represents the output of a list branches operation.\n    ListBranchesInput:\n      type: object\n      required:\n        - repositoryName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n      description: Represents the input of a list branches operation.\n    ListPullRequestsOutput:\n      type: object\n      required:\n        - pullRequestIds\n      properties:\n        pullRequestIds:\n          $ref: \"#/components/schemas/PullRequestIdList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListPullRequestsInput:\n      type: object\n      required:\n        - repositoryName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        authorArn:\n          $ref: \"#/components/schemas/Arn\"\n        pullRequestStatus:\n          $ref: \"#/components/schemas/PullRequestStatusEnum\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        maxResults:\n          $ref: \"#/components/schemas/MaxResults\"\n    InvalidPullRequestStatusException: {}\n    InvalidAuthorArnException: {}\n    AuthorDoesNotExistException: {}\n    ListRepositoriesOutput:\n      type: object\n      properties:\n        repositories:\n          $ref: \"#/components/schemas/RepositoryNameIdPairList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n      description: Represents the output of a list repositories operation.\n    ListRepositoriesInput:\n      type: object\n      properties:\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        sortBy:\n          $ref: \"#/components/schemas/SortByEnum\"\n        order:\n          $ref: \"#/components/schemas/OrderEnum\"\n      description: Represents the input of a list repositories operation.\n    InvalidSortByException: {}\n    InvalidOrderException: {}\n    ListTagsForResourceOutput:\n      type: object\n      properties:\n        tags:\n          $ref: \"#/components/schemas/TagsMap\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListTagsForResourceInput:\n      type: object\n      required:\n        - resourceArn\n      properties:\n        resourceArn:\n          $ref: \"#/components/schemas/ResourceArn\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ResourceArnRequiredException: {}\n    InvalidResourceArnException: {}\n    MergeBranchesByFastForwardOutput:\n      type: object\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n    MergeBranchesByFastForwardInput:\n      type: object\n      required:\n        - repositoryName\n        - sourceCommitSpecifier\n        - destinationCommitSpecifier\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        targetBranch:\n          $ref: \"#/components/schemas/BranchName\"\n    InvalidTargetBranchException: {}\n    MergeBranchesBySquashOutput:\n      type: object\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n    MergeBranchesBySquashInput:\n      type: object\n      required:\n        - repositoryName\n        - sourceCommitSpecifier\n        - destinationCommitSpecifier\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        targetBranch:\n          $ref: \"#/components/schemas/BranchName\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n        authorName:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n        commitMessage:\n          $ref: \"#/components/schemas/Message\"\n        keepEmptyFolders:\n          $ref: \"#/components/schemas/KeepEmptyFolders\"\n        conflictResolution:\n          $ref: \"#/components/schemas/ConflictResolution\"\n    MergeBranchesByThreeWayOutput:\n      type: object\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n    MergeBranchesByThreeWayInput:\n      type: object\n      required:\n        - repositoryName\n        - sourceCommitSpecifier\n        - destinationCommitSpecifier\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        destinationCommitSpecifier:\n          $ref: \"#/components/schemas/CommitName\"\n        targetBranch:\n          $ref: \"#/components/schemas/BranchName\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n        authorName:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n        commitMessage:\n          $ref: \"#/components/schemas/Message\"\n        keepEmptyFolders:\n          $ref: \"#/components/schemas/KeepEmptyFolders\"\n        conflictResolution:\n          $ref: \"#/components/schemas/ConflictResolution\"\n    MergePullRequestByFastForwardOutput:\n      type: object\n      properties:\n        pullRequest:\n          $ref: \"#/components/schemas/PullRequest\"\n    MergePullRequestByFastForwardInput:\n      type: object\n      required:\n        - pullRequestId\n        - repositoryName\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n    PullRequestAlreadyClosedException: {}\n    TipOfSourceReferenceIsDifferentException: {}\n    MergePullRequestBySquashOutput:\n      type: object\n      properties:\n        pullRequest:\n          $ref: \"#/components/schemas/PullRequest\"\n    MergePullRequestBySquashInput:\n      type: object\n      required:\n        - pullRequestId\n        - repositoryName\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n        commitMessage:\n          $ref: \"#/components/schemas/Message\"\n        authorName:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n        keepEmptyFolders:\n          $ref: \"#/components/schemas/KeepEmptyFolders\"\n        conflictResolution:\n          $ref: \"#/components/schemas/ConflictResolution\"\n    MergePullRequestByThreeWayOutput:\n      type: object\n      properties:\n        pullRequest:\n          $ref: \"#/components/schemas/PullRequest\"\n    MergePullRequestByThreeWayInput:\n      type: object\n      required:\n        - pullRequestId\n        - repositoryName\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        conflictDetailLevel:\n          $ref: \"#/components/schemas/ConflictDetailLevelTypeEnum\"\n        conflictResolutionStrategy:\n          $ref: \"#/components/schemas/ConflictResolutionStrategyTypeEnum\"\n        commitMessage:\n          $ref: \"#/components/schemas/Message\"\n        authorName:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n        keepEmptyFolders:\n          $ref: \"#/components/schemas/KeepEmptyFolders\"\n        conflictResolution:\n          $ref: \"#/components/schemas/ConflictResolution\"\n    PostCommentForComparedCommitOutput:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        beforeBlobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        afterBlobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n        comment:\n          $ref: \"#/components/schemas/Comment\"\n    PostCommentForComparedCommitInput:\n      type: object\n      required:\n        - repositoryName\n        - afterCommitId\n        - content\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        clientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n    CommentContentRequiredException: {}\n    CommentContentSizeLimitExceededException: {}\n    InvalidFileLocationException: {}\n    InvalidRelativeFileVersionEnumException: {}\n    InvalidFilePositionException: {}\n    BeforeCommitIdAndAfterCommitIdAreSameException: {}\n    PostCommentForPullRequestOutput:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        beforeBlobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        afterBlobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n        comment:\n          $ref: \"#/components/schemas/Comment\"\n    PostCommentForPullRequestInput:\n      type: object\n      required:\n        - pullRequestId\n        - repositoryName\n        - beforeCommitId\n        - afterCommitId\n        - content\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        clientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n    PostCommentReplyOutput:\n      type: object\n      properties:\n        comment:\n          $ref: \"#/components/schemas/Comment\"\n    PostCommentReplyInput:\n      type: object\n      required:\n        - inReplyTo\n        - content\n      properties:\n        inReplyTo:\n          $ref: \"#/components/schemas/CommentId\"\n        clientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n    PutFileOutput:\n      type: object\n      required:\n        - commitId\n        - blobId\n        - treeId\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        blobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n    PutFileInput:\n      type: object\n      required:\n        - repositoryName\n        - branchName\n        - fileContent\n        - filePath\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        branchName:\n          $ref: \"#/components/schemas/BranchName\"\n        fileContent:\n          $ref: \"#/components/schemas/FileContent\"\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        fileMode:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n        parentCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        commitMessage:\n          $ref: \"#/components/schemas/Message\"\n        name:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n    FileContentRequiredException: {}\n    SameFileContentException: {}\n    PutRepositoryTriggersOutput:\n      type: object\n      properties:\n        configurationId:\n          $ref: \"#/components/schemas/RepositoryTriggersConfigurationId\"\n      description: Represents the output of a put repository triggers operation.\n    PutRepositoryTriggersInput:\n      type: object\n      required:\n        - repositoryName\n        - triggers\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        triggers:\n          $ref: \"#/components/schemas/RepositoryTriggersList\"\n      description: Represents the input ofa put repository triggers operation.\n    RepositoryTriggersListRequiredException: {}\n    MaximumRepositoryTriggersExceededException: {}\n    InvalidRepositoryTriggerNameException: {}\n    InvalidRepositoryTriggerDestinationArnException: {}\n    InvalidRepositoryTriggerRegionException: {}\n    InvalidRepositoryTriggerCustomDataException: {}\n    MaximumBranchesExceededException: {}\n    InvalidRepositoryTriggerBranchNameException: {}\n    InvalidRepositoryTriggerEventsException: {}\n    RepositoryTriggerNameRequiredException: {}\n    RepositoryTriggerDestinationArnRequiredException: {}\n    RepositoryTriggerBranchNameListRequiredException: {}\n    RepositoryTriggerEventsListRequiredException: {}\n    TagResourceInput:\n      type: object\n      required:\n        - resourceArn\n        - tags\n      properties:\n        resourceArn:\n          $ref: \"#/components/schemas/ResourceArn\"\n        tags:\n          $ref: \"#/components/schemas/TagsMap\"\n    TagsMapRequiredException: {}\n    TestRepositoryTriggersOutput:\n      type: object\n      properties:\n        successfulExecutions:\n          $ref: \"#/components/schemas/RepositoryTriggerNameList\"\n        failedExecutions:\n          $ref: \"#/components/schemas/RepositoryTriggerExecutionFailureList\"\n      description: Represents the output of a test repository triggers operation.\n    TestRepositoryTriggersInput:\n      type: object\n      required:\n        - repositoryName\n        - triggers\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        triggers:\n          $ref: \"#/components/schemas/RepositoryTriggersList\"\n      description: Represents the input of a test repository triggers operation.\n    UntagResourceInput:\n      type: object\n      required:\n        - resourceArn\n        - tagKeys\n      properties:\n        resourceArn:\n          $ref: \"#/components/schemas/ResourceArn\"\n        tagKeys:\n          $ref: \"#/components/schemas/TagKeysList\"\n    TagKeysListRequiredException: {}\n    InvalidTagKeysListException: {}\n    UpdateCommentOutput:\n      type: object\n      properties:\n        comment:\n          $ref: \"#/components/schemas/Comment\"\n    UpdateCommentInput:\n      type: object\n      required:\n        - commentId\n        - content\n      properties:\n        commentId:\n          $ref: \"#/components/schemas/CommentId\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n    CommentNotCreatedByCallerException: {}\n    UpdateDefaultBranchInput:\n      type: object\n      required:\n        - repositoryName\n        - defaultBranchName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        defaultBranchName:\n          $ref: \"#/components/schemas/BranchName\"\n      description: Represents the input of an update default branch operation.\n    UpdatePullRequestDescriptionOutput:\n      type: object\n      required:\n        - pullRequest\n      properties:\n        pullRequest:\n          $ref: \"#/components/schemas/PullRequest\"\n    UpdatePullRequestDescriptionInput:\n      type: object\n      required:\n        - pullRequestId\n        - description\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n    UpdatePullRequestStatusOutput:\n      type: object\n      required:\n        - pullRequest\n      properties:\n        pullRequest:\n          $ref: \"#/components/schemas/PullRequest\"\n    UpdatePullRequestStatusInput:\n      type: object\n      required:\n        - pullRequestId\n        - pullRequestStatus\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        pullRequestStatus:\n          $ref: \"#/components/schemas/PullRequestStatusEnum\"\n    InvalidPullRequestStatusUpdateException: {}\n    PullRequestStatusRequiredException: {}\n    UpdatePullRequestTitleOutput:\n      type: object\n      required:\n        - pullRequest\n      properties:\n        pullRequest:\n          $ref: \"#/components/schemas/PullRequest\"\n    UpdatePullRequestTitleInput:\n      type: object\n      required:\n        - pullRequestId\n        - title\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        title:\n          $ref: \"#/components/schemas/Title\"\n    UpdateRepositoryDescriptionInput:\n      type: object\n      required:\n        - repositoryName\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        repositoryDescription:\n          $ref: \"#/components/schemas/RepositoryDescription\"\n      description: Represents the input of an update repository description operation.\n    UpdateRepositoryNameInput:\n      type: object\n      required:\n        - oldName\n        - newName\n      properties:\n        oldName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        newName:\n          $ref: \"#/components/schemas/RepositoryName\"\n      description: Represents the input of an update repository description operation.\n    AccountId:\n      type: string\n    AdditionalData:\n      type: string\n    Arn:\n      type: string\n    Path:\n      type: string\n    ExceptionName:\n      type: string\n    Message:\n      type: string\n    BatchDescribeMergeConflictsError:\n      type: object\n      required:\n        - filePath\n        - exceptionName\n        - message\n      properties:\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        exceptionName:\n          $ref: \"#/components/schemas/ExceptionName\"\n        message:\n          $ref: \"#/components/schemas/Message\"\n      description: Information about errors in a BatchDescribeMergeConflicts operation.\n    BatchDescribeMergeConflictsErrors:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BatchDescribeMergeConflictsError\"\n    RepositoryName:\n      type: string\n      pattern: \"[\\\\w\\\\.-]+\"\n      minLength: 1\n      maxLength: 100\n    CommitName:\n      type: string\n    MergeOptionTypeEnum:\n      type: string\n      enum:\n        - FAST_FORWARD_MERGE\n        - SQUASH_MERGE\n        - THREE_WAY_MERGE\n    MaxResults:\n      type: integer\n    FilePaths:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Path\"\n    ConflictDetailLevelTypeEnum:\n      type: string\n      enum:\n        - FILE_LEVEL\n        - LINE_LEVEL\n    ConflictResolutionStrategyTypeEnum:\n      type: string\n      enum:\n        - NONE\n        - ACCEPT_SOURCE\n        - ACCEPT_DESTINATION\n        - AUTOMERGE\n    NextToken:\n      type: string\n    Conflicts:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Conflict\"\n    ObjectId:\n      type: string\n    ErrorCode:\n      type: string\n    ErrorMessage:\n      type: string\n    BatchGetCommitsError:\n      type: object\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        errorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        errorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Returns information about errors in a BatchGetCommits operation.\n    BatchGetCommitsErrorsList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BatchGetCommitsError\"\n    CommitIdsInputList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ObjectId\"\n    CommitObjectsList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Commit\"\n    RepositoryNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RepositoryName\"\n    RepositoryMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RepositoryMetadata\"\n    RepositoryNotFoundList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RepositoryName\"\n    Mode:\n      type: string\n    BlobMetadata:\n      type: object\n      properties:\n        blobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        path:\n          $ref: \"#/components/schemas/Path\"\n        mode:\n          $ref: \"#/components/schemas/Mode\"\n      description: Returns information about a specific Git blob object.\n    BranchName:\n      type: string\n      minLength: 1\n      maxLength: 256\n    CommitId:\n      type: string\n    BranchInfo:\n      type: object\n      properties:\n        branchName:\n          $ref: \"#/components/schemas/BranchName\"\n        commitId:\n          $ref: \"#/components/schemas/CommitId\"\n      description: Returns information about a branch.\n    BranchNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BranchName\"\n    CapitalBoolean:\n      type: boolean\n    ChangeTypeEnum:\n      type: string\n      enum:\n        - A\n        - M\n        - D\n    ClientRequestToken:\n      type: string\n    CloneUrlHttp:\n      type: string\n    CloneUrlSsh:\n      type: string\n    CommentId:\n      type: string\n    Content:\n      type: string\n    CreationDate:\n      type: string\n      format: date-time\n    LastModifiedDate:\n      type: string\n      format: date-time\n    IsCommentDeleted:\n      type: boolean\n    Comment:\n      type: object\n      properties:\n        commentId:\n          $ref: \"#/components/schemas/CommentId\"\n        content:\n          $ref: \"#/components/schemas/Content\"\n        inReplyTo:\n          $ref: \"#/components/schemas/CommentId\"\n        creationDate:\n          $ref: \"#/components/schemas/CreationDate\"\n        lastModifiedDate:\n          $ref: \"#/components/schemas/LastModifiedDate\"\n        authorArn:\n          $ref: \"#/components/schemas/Arn\"\n        deleted:\n          $ref: \"#/components/schemas/IsCommentDeleted\"\n        clientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n      description: Returns information about a specific comment.\n    Comments:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Comment\"\n    Location:\n      type: object\n      properties:\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        filePosition:\n          $ref: \"#/components/schemas/Position\"\n        relativeFileVersion:\n          $ref: \"#/components/schemas/RelativeFileVersionEnum\"\n      description: Returns information about the location of a change or comment in the\n        comparison between two commits or a pull request.\n    CommentsForComparedCommit:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        beforeBlobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        afterBlobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n        comments:\n          $ref: \"#/components/schemas/Comments\"\n      description: Returns information about comments on the comparison between two commits.\n    CommentsForComparedCommitData:\n      type: array\n      items:\n        $ref: \"#/components/schemas/CommentsForComparedCommit\"\n    PullRequestId:\n      type: string\n    CommentsForPullRequest:\n      type: object\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        beforeBlobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        afterBlobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n        comments:\n          $ref: \"#/components/schemas/Comments\"\n      description: Returns information about comments on a pull request.\n    CommentsForPullRequestData:\n      type: array\n      items:\n        $ref: \"#/components/schemas/CommentsForPullRequest\"\n    ParentList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ObjectId\"\n    UserInfo:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        email:\n          $ref: \"#/components/schemas/Email\"\n        date:\n          $ref: \"#/components/schemas/Date\"\n      description: Information about the user who made a specified commit.\n    Commit:\n      type: object\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n        parents:\n          $ref: \"#/components/schemas/ParentList\"\n        message:\n          $ref: \"#/components/schemas/Message\"\n        author:\n          $ref: \"#/components/schemas/UserInfo\"\n        committer:\n          $ref: \"#/components/schemas/UserInfo\"\n        additionalData:\n          $ref: \"#/components/schemas/AdditionalData\"\n      description: Returns information about a specific commit.\n    ConflictMetadata:\n      type: object\n      properties:\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        fileSizes:\n          $ref: \"#/components/schemas/FileSizes\"\n        fileModes:\n          $ref: \"#/components/schemas/FileModes\"\n        objectTypes:\n          $ref: \"#/components/schemas/ObjectTypes\"\n        numberOfConflicts:\n          $ref: \"#/components/schemas/NumberOfConflicts\"\n        isBinaryFile:\n          $ref: \"#/components/schemas/IsBinaryFile\"\n        contentConflict:\n          $ref: \"#/components/schemas/IsContentConflict\"\n        fileModeConflict:\n          $ref: \"#/components/schemas/IsFileModeConflict\"\n        objectTypeConflict:\n          $ref: \"#/components/schemas/IsObjectTypeConflict\"\n        mergeOperations:\n          $ref: \"#/components/schemas/MergeOperations\"\n      description: Information about the metadata for a conflict in a merge operation.\n    MergeHunks:\n      type: array\n      items:\n        $ref: \"#/components/schemas/MergeHunk\"\n    Conflict:\n      type: object\n      properties:\n        conflictMetadata:\n          $ref: \"#/components/schemas/ConflictMetadata\"\n        mergeHunks:\n          $ref: \"#/components/schemas/MergeHunks\"\n      description: Information about conflicts in a merge operation.\n    FileSizes:\n      type: object\n      properties:\n        source:\n          $ref: \"#/components/schemas/FileSize\"\n        destination:\n          $ref: \"#/components/schemas/FileSize\"\n        base:\n          $ref: \"#/components/schemas/FileSize\"\n      description: Information about the size of files in a merge or pull request.\n    FileModes:\n      type: object\n      properties:\n        source:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n        destination:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n        base:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n      description: Information about file modes in a merge or pull request.\n    ObjectTypes:\n      type: object\n      properties:\n        source:\n          $ref: \"#/components/schemas/ObjectTypeEnum\"\n        destination:\n          $ref: \"#/components/schemas/ObjectTypeEnum\"\n        base:\n          $ref: \"#/components/schemas/ObjectTypeEnum\"\n      description: Information about the type of an object in a merge operation.\n    NumberOfConflicts:\n      type: integer\n    IsBinaryFile:\n      type: object\n      properties:\n        source:\n          $ref: \"#/components/schemas/CapitalBoolean\"\n        destination:\n          $ref: \"#/components/schemas/CapitalBoolean\"\n        base:\n          $ref: \"#/components/schemas/CapitalBoolean\"\n      description: Information about whether a file is binary or textual in a merge or pull\n        request operation.\n    IsContentConflict:\n      type: boolean\n    IsFileModeConflict:\n      type: boolean\n    IsObjectTypeConflict:\n      type: boolean\n    MergeOperations:\n      type: object\n      properties:\n        source:\n          $ref: \"#/components/schemas/ChangeTypeEnum\"\n        destination:\n          $ref: \"#/components/schemas/ChangeTypeEnum\"\n      description: Information about the file operation conflicts in a merge operation.\n    ConflictMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ConflictMetadata\"\n    ReplaceContentEntries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ReplaceContentEntry\"\n    DeleteFileEntries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DeleteFileEntry\"\n    SetFileModeEntries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SetFileModeEntry\"\n    ConflictResolution:\n      type: object\n      properties:\n        replaceContents:\n          $ref: \"#/components/schemas/ReplaceContentEntries\"\n        deleteFiles:\n          $ref: \"#/components/schemas/DeleteFileEntries\"\n        setFileModes:\n          $ref: \"#/components/schemas/SetFileModeEntries\"\n      description: A list of inputs to use when resolving conflicts during a merge if\n        AUTOMERGE is chosen as the conflict resolution strategy.\n    Name:\n      type: string\n    Email:\n      type: string\n    KeepEmptyFolders:\n      type: boolean\n    PutFileEntries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PutFileEntry\"\n    FilesMetadata:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FileMetadata\"\n    Title:\n      type: string\n      maxLength: 150\n    Description:\n      type: string\n      maxLength: 10240\n    TargetList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Target\"\n    PullRequest:\n      type: object\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        title:\n          $ref: \"#/components/schemas/Title\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        lastActivityDate:\n          $ref: \"#/components/schemas/LastModifiedDate\"\n        creationDate:\n          $ref: \"#/components/schemas/CreationDate\"\n        pullRequestStatus:\n          $ref: \"#/components/schemas/PullRequestStatusEnum\"\n        authorArn:\n          $ref: \"#/components/schemas/Arn\"\n        pullRequestTargets:\n          $ref: \"#/components/schemas/PullRequestTargetList\"\n        clientRequestToken:\n          $ref: \"#/components/schemas/ClientRequestToken\"\n      description: Returns information about a pull request.\n    RepositoryDescription:\n      type: string\n      maxLength: 1000\n    TagsMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/TagValue\"\n    RepositoryMetadata:\n      type: object\n      properties:\n        accountId:\n          $ref: \"#/components/schemas/AccountId\"\n        repositoryId:\n          $ref: \"#/components/schemas/RepositoryId\"\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        repositoryDescription:\n          $ref: \"#/components/schemas/RepositoryDescription\"\n        defaultBranch:\n          $ref: \"#/components/schemas/BranchName\"\n        lastModifiedDate:\n          $ref: \"#/components/schemas/LastModifiedDate\"\n        creationDate:\n          $ref: \"#/components/schemas/CreationDate\"\n        cloneUrlHttp:\n          $ref: \"#/components/schemas/CloneUrlHttp\"\n        cloneUrlSsh:\n          $ref: \"#/components/schemas/CloneUrlSsh\"\n        Arn:\n          $ref: \"#/components/schemas/Arn\"\n      description: Information about a repository.\n    Date:\n      type: string\n    DeleteFileEntry:\n      type: object\n      required:\n        - filePath\n      properties:\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n      description: A file that will be deleted as part of a commit.\n    RepositoryId:\n      type: string\n    PullRequestEventType:\n      type: string\n      enum:\n        - PULL_REQUEST_CREATED\n        - PULL_REQUEST_STATUS_CHANGED\n        - PULL_REQUEST_SOURCE_REFERENCE_UPDATED\n        - PULL_REQUEST_MERGE_STATE_CHANGED\n    PullRequestEventList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PullRequestEvent\"\n    Difference:\n      type: object\n      properties:\n        beforeBlob:\n          $ref: \"#/components/schemas/BlobMetadata\"\n        afterBlob:\n          $ref: \"#/components/schemas/BlobMetadata\"\n        changeType:\n          $ref: \"#/components/schemas/ChangeTypeEnum\"\n      description: Returns information about a set of differences for a commit specifier.\n    DifferenceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Difference\"\n    EventDate:\n      type: string\n      format: date-time\n    FileModeTypeEnum:\n      type: string\n      enum:\n        - EXECUTABLE\n        - NORMAL\n        - SYMLINK\n    File:\n      type: object\n      properties:\n        blobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        absolutePath:\n          $ref: \"#/components/schemas/Path\"\n        relativePath:\n          $ref: \"#/components/schemas/Path\"\n        fileMode:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n      description: Returns information about a file in a repository.\n    FileContent:\n      type: string\n      maxLength: 6291456\n    FileList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/File\"\n    FileMetadata:\n      type: object\n      properties:\n        absolutePath:\n          $ref: \"#/components/schemas/Path\"\n        blobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        fileMode:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n      description: A file that will be added, updated, or deleted as part of a commit.\n    FileSize:\n      type: integer\n    Folder:\n      type: object\n      properties:\n        treeId:\n          $ref: \"#/components/schemas/ObjectId\"\n        absolutePath:\n          $ref: \"#/components/schemas/Path\"\n        relativePath:\n          $ref: \"#/components/schemas/Path\"\n      description: Returns information about a folder in a repository.\n    FolderList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Folder\"\n    blob:\n      type: string\n    Limit:\n      type: integer\n    ObjectSize:\n      type: integer\n    SymbolicLinkList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SymbolicLink\"\n    SubModuleList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SubModule\"\n    IsMergeable:\n      type: boolean\n    MergeOptions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/MergeOptionTypeEnum\"\n    RepositoryTriggersConfigurationId:\n      type: string\n    RepositoryTriggersList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RepositoryTrigger\"\n    HunkContent:\n      type: string\n    IsHunkConflict:\n      type: boolean\n    IsMerged:\n      type: boolean\n    IsMove:\n      type: boolean\n    LineNumber:\n      type: integer\n    PullRequestStatusEnum:\n      type: string\n      enum:\n        - OPEN\n        - CLOSED\n    PullRequestIdList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PullRequestId\"\n    SortByEnum:\n      type: string\n      enum:\n        - repositoryName\n        - lastModifiedDate\n    OrderEnum:\n      type: string\n      enum:\n        - ascending\n        - descending\n    RepositoryNameIdPairList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RepositoryNameIdPair\"\n    ResourceArn:\n      type: string\n    Position:\n      type: integer\n    RelativeFileVersionEnum:\n      type: string\n      enum:\n        - BEFORE\n        - AFTER\n    MergeHunkDetail:\n      type: object\n      properties:\n        startLine:\n          $ref: \"#/components/schemas/LineNumber\"\n        endLine:\n          $ref: \"#/components/schemas/LineNumber\"\n        hunkContent:\n          $ref: \"#/components/schemas/HunkContent\"\n      description: Information about the details of a merge hunk that contains a conflict\n        in a merge or pull request operation.\n    MergeHunk:\n      type: object\n      properties:\n        isConflict:\n          $ref: \"#/components/schemas/IsHunkConflict\"\n        source:\n          $ref: \"#/components/schemas/MergeHunkDetail\"\n        destination:\n          $ref: \"#/components/schemas/MergeHunkDetail\"\n        base:\n          $ref: \"#/components/schemas/MergeHunkDetail\"\n      description: Information about merge hunks in a merge or pull request operation.\n    MergeMetadata:\n      type: object\n      properties:\n        isMerged:\n          $ref: \"#/components/schemas/IsMerged\"\n        mergedBy:\n          $ref: \"#/components/schemas/Arn\"\n        mergeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        mergeOption:\n          $ref: \"#/components/schemas/MergeOptionTypeEnum\"\n      description: Returns information about a merge or potential merge between a source\n        reference and a destination reference in a pull request.\n    ObjectTypeEnum:\n      type: string\n      enum:\n        - FILE\n        - DIRECTORY\n        - GIT_LINK\n        - SYMBOLIC_LINK\n    PullRequestTargetList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PullRequestTarget\"\n    PullRequestCreatedEventMetadata:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        destinationCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        mergeBase:\n          $ref: \"#/components/schemas/CommitId\"\n      description: Metadata about the pull request that is used when comparing the pull\n        request source with its destination.\n    PullRequestStatusChangedEventMetadata:\n      type: object\n      properties:\n        pullRequestStatus:\n          $ref: \"#/components/schemas/PullRequestStatusEnum\"\n      description: Information about a change to the status of a pull request.\n    PullRequestSourceReferenceUpdatedEventMetadata:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        beforeCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        afterCommitId:\n          $ref: \"#/components/schemas/CommitId\"\n        mergeBase:\n          $ref: \"#/components/schemas/CommitId\"\n      description: Information about an update to the source branch of a pull request.\n    PullRequestMergedStateChangedEventMetadata:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        destinationReference:\n          $ref: \"#/components/schemas/ReferenceName\"\n        mergeMetadata:\n          $ref: \"#/components/schemas/MergeMetadata\"\n      description: \"Returns information about the change in the merge state for a pull\n        request event. \"\n    PullRequestEvent:\n      type: object\n      properties:\n        pullRequestId:\n          $ref: \"#/components/schemas/PullRequestId\"\n        eventDate:\n          $ref: \"#/components/schemas/EventDate\"\n        pullRequestEventType:\n          $ref: \"#/components/schemas/PullRequestEventType\"\n        actorArn:\n          $ref: \"#/components/schemas/Arn\"\n        pullRequestCreatedEventMetadata:\n          $ref: \"#/components/schemas/PullRequestCreatedEventMetadata\"\n        pullRequestStatusChangedEventMetadata:\n          $ref: \"#/components/schemas/PullRequestStatusChangedEventMetadata\"\n        pullRequestSourceReferenceUpdatedEventMetadata:\n          $ref: \"#/components/schemas/PullRequestSourceReferenceUpdatedEventMetadata\"\n        pullRequestMergedStateChangedEventMetadata:\n          $ref: \"#/components/schemas/PullRequestMergedStateChangedEventMetadata\"\n      description: Returns information about a pull request event.\n    ReferenceName:\n      type: string\n    PullRequestTarget:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceReference:\n          $ref: \"#/components/schemas/ReferenceName\"\n        destinationReference:\n          $ref: \"#/components/schemas/ReferenceName\"\n        destinationCommit:\n          $ref: \"#/components/schemas/CommitId\"\n        sourceCommit:\n          $ref: \"#/components/schemas/CommitId\"\n        mergeBase:\n          $ref: \"#/components/schemas/CommitId\"\n        mergeMetadata:\n          $ref: \"#/components/schemas/MergeMetadata\"\n      description: Returns information about a pull request target.\n    PutFileEntry:\n      type: object\n      required:\n        - filePath\n      properties:\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        fileMode:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n        fileContent:\n          $ref: \"#/components/schemas/FileContent\"\n        sourceFile:\n          $ref: \"#/components/schemas/SourceFileSpecifier\"\n      description: Information about a file that will be added or updated as part of a\n        commit.\n    SourceFileSpecifier:\n      type: object\n      required:\n        - filePath\n      properties:\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        isMove:\n          $ref: \"#/components/schemas/IsMove\"\n      description: Information about a source file that is part of changes made in a commit.\n    ReplaceContentEntry:\n      type: object\n      required:\n        - filePath\n        - replacementType\n      properties:\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        replacementType:\n          $ref: \"#/components/schemas/ReplacementTypeEnum\"\n        content:\n          $ref: \"#/components/schemas/FileContent\"\n        fileMode:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n      description: Information about a replacement content entry in the conflict of a merge\n        or pull request operation.\n    ReplacementTypeEnum:\n      type: string\n      enum:\n        - KEEP_BASE\n        - KEEP_SOURCE\n        - KEEP_DESTINATION\n        - USE_NEW_CONTENT\n    RepositoryNameIdPair:\n      type: object\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        repositoryId:\n          $ref: \"#/components/schemas/RepositoryId\"\n      description: Information about a repository name and ID.\n    RepositoryTriggerName:\n      type: string\n    RepositoryTriggerCustomData:\n      type: string\n    RepositoryTriggerEventList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RepositoryTriggerEventEnum\"\n    RepositoryTrigger:\n      type: object\n      required:\n        - name\n        - destinationArn\n        - events\n      properties:\n        name:\n          $ref: \"#/components/schemas/RepositoryTriggerName\"\n        destinationArn:\n          $ref: \"#/components/schemas/Arn\"\n        customData:\n          $ref: \"#/components/schemas/RepositoryTriggerCustomData\"\n        branches:\n          $ref: \"#/components/schemas/BranchNameList\"\n        events:\n          $ref: \"#/components/schemas/RepositoryTriggerEventList\"\n      description: Information about a trigger for a repository.\n    RepositoryTriggerEventEnum:\n      type: string\n      enum:\n        - all\n        - updateReference\n        - createReference\n        - deleteReference\n    RepositoryTriggerExecutionFailureMessage:\n      type: string\n    RepositoryTriggerExecutionFailure:\n      type: object\n      properties:\n        trigger:\n          $ref: \"#/components/schemas/RepositoryTriggerName\"\n        failureMessage:\n          $ref: \"#/components/schemas/RepositoryTriggerExecutionFailureMessage\"\n      description: A trigger failed to run.\n    RepositoryTriggerExecutionFailureList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RepositoryTriggerExecutionFailure\"\n    RepositoryTriggerNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RepositoryTriggerName\"\n    SetFileModeEntry:\n      type: object\n      required:\n        - filePath\n        - fileMode\n      properties:\n        filePath:\n          $ref: \"#/components/schemas/Path\"\n        fileMode:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n      description: Information about the file mode changes.\n    SubModule:\n      type: object\n      properties:\n        commitId:\n          $ref: \"#/components/schemas/ObjectId\"\n        absolutePath:\n          $ref: \"#/components/schemas/Path\"\n        relativePath:\n          $ref: \"#/components/schemas/Path\"\n      description: Returns information about a submodule reference in a repository folder.\n    SymbolicLink:\n      type: object\n      properties:\n        blobId:\n          $ref: \"#/components/schemas/ObjectId\"\n        absolutePath:\n          $ref: \"#/components/schemas/Path\"\n        relativePath:\n          $ref: \"#/components/schemas/Path\"\n        fileMode:\n          $ref: \"#/components/schemas/FileModeTypeEnum\"\n      description: Returns information about a symbolic link in a repository folder.\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    TagKeysList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    Target:\n      type: object\n      required:\n        - repositoryName\n        - sourceReference\n      properties:\n        repositoryName:\n          $ref: \"#/components/schemas/RepositoryName\"\n        sourceReference:\n          $ref: \"#/components/schemas/ReferenceName\"\n        destinationReference:\n          $ref: \"#/components/schemas/ReferenceName\"\n      description: Returns information about a target for a pull request.\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-codecommit-2015-04-13-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-codecommit-2015-04-13-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:123079: duplicate path: \"/#X-Amz-Target=CodeCommit_20150413.DescribeMergeConflicts\""
}