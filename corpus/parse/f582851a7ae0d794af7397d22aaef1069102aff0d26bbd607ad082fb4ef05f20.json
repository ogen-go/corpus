{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nasa/harmony"
		},
		"file": {
			"name": "ogc-api-coverages-v1.0.0.yml",
			"size": 0,
			"path": "app/schemas/ogc-api-coverages/1.0.0/ogc-api-coverages-v1.0.0.yml",
			"byteSize": 29882,
			"content": "openapi: 3.0.1\ninfo:\n  title: Harmony API conforming to OGC API - Coverages\n  description: 'Harmony API for requesting coverages for a range of NASA EOSDIS data\n    using thc OGC API - Coverages'\n  version: 1.0.0\nservers:\n- url: /{cmrCollectionId}/ogc-api-coverages/1.0.0\n  description: Harmony server\n  variables:\n    cmrCollectionId:\n      default: no-default-cmr-collection\n      description: The CMR Collection ID for the dataset whose coverage is being accessed\ntags:\n- name: Capabilities\n  description: Essential characteristics of this API including information about the data.\n- name: Coverage\n  description: Access to data (coverage).\npaths:\n  /:\n    get:\n      tags:\n      - Capabilities\n      summary: landing page of this API\n      description: The landing page provides links to the API definition, the Conformance\n        statements and the metadata about the coverage data in this dataset.\n      operationId: getLandingPage\n      responses:\n        \"200\":\n          description: links to the API capabilities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/root'\n        default:\n          $ref: '#/components/responses/default'\n  /api:\n    get:\n      tags:\n      - OpenAPI\n      summary: this OpenAPI Schema\n      description: Returns the OpenAPI Schema for this coverage endpoint\n      operationId: getSpecification\n      responses:\n        \"200\":\n          description: this OpenAPI Schema\n          content:\n            \"text/openapi+yaml;version=3.0\":\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\n  /conformance:\n    get:\n      tags:\n      - Capabilities\n      summary: information about standards that this API conforms to\n      description: list all requirements classes specified in a standard\n        that the server conforms to\n      operationId: getRequirementsClasses\n      responses:\n        \"200\":\n          description: the URIs of all requirements classes supported by the server\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/req-classes'\n        default:\n          $ref: '#/components/responses/default'\n  /collections:\n    get:\n      tags:\n      - Capabilities\n      summary: Describe the collections in the dataset\n      operationId: describeCollections\n      parameters:\n      - name: limit\n        in: query\n        description: Not yet implemented\n        required: false\n        style: form\n        explode: false\n        schema:\n          maximum: 10000\n          minimum: 1\n          type: integer\n          default: 10\n      - name: bbox\n        in: query\n        description: Not yet implemented\n        required: false\n        style: form\n        explode: false\n        schema:\n          maxItems: 6\n          minItems: 4\n          type: array\n          items:\n            type: number\n      - name: time\n        in: query\n        description: Not yet implemented\n        required: false\n        style: form\n        explode: false\n        schema:\n          type: string\n      - name: f\n        in: query\n        description: |\n          The optional f parameter indicates the output format which the server shall provide as part of the response document. It has preference over the HTTP Accept header. The default format is JSON.\n        required: false\n        style: form\n        explode: false\n        schema:\n          type: string\n          default: json\n          enum:\n          - json\n          - html\n      responses:\n        \"200\":\n          description: Metadata about the collections shared by this API.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/content'\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\n  /collections/{collectionId}:\n    get:\n      tags:\n      - Capabilities\n      summary: Describe the {collectionId} collection\n      operationId: describeCollection\n      parameters:\n      - name: collectionId\n        in: path\n        description: Not yet implemented\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Metadata about the {collectionId} collection shared by this\n            API.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/collectionInfo'\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\n  /collections/{collectionId}/coverage:\n    get:\n      tags:\n      - Coverage\n      summary: (Not yet implemented) description of the coverage offering identified by {collectionId} including\n        envelope\n      description: Not yet implemented\n      operationId: getCoverageOffering\n      parameters:\n      - name: collectionId\n        in: path\n        description: Identifier (name) of a specific collection\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Information about the coverage collection.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coverageOffering'\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\n  /collections/{collectionId}/coverage/description:\n    get:\n      tags:\n      - Coverage\n      summary: (Not yet implemented) returns the whole coverage description consisting of domainset, rangetype,\n        and metadata (but not the rangeset)\n      description: Not yet implemented\n      operationId: getCoverageDescription\n      parameters:\n      - name: collectionId\n        in: path\n        description: Identifier (name) of a specific collection\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: subset\n        in: query\n        description: Not yet implemented\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A coverage description.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coverageDescription'\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\n  /collections/{collectionId}/coverage/domainset:\n    get:\n      tags:\n      - Coverage\n      summary: (Not yet implemented) retrieve a coverages domainset; use content negotiation to request\n        HTML or GeoJSON\n      description: Not yet implemented\n      operationId: getCoverageDomainSet\n      parameters:\n      - name: collectionId\n        in: path\n        description: Identifier (name) of a specific collection\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: subset\n        in: query\n        description: Not yet implemented\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A coverages domainset.\n          content:\n            application/json:\n              schema:\n                $ref: http://schemas.opengis.net/cis/1.1/json/coverage-schema.json#/definitions/domainSet\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\n  /collections/{collectionId}/coverage/rangetype:\n    get:\n      tags:\n      - Coverage\n      summary: (Not yet implemented) retrieve a coverage's rangetype; use content negotiation to request\n        HTML or GeoJSON\n      description: Not yet implemented\n      operationId: getCoverageRangeType\n      parameters:\n      - $ref: '#/components/parameters/collectionId'\n      responses:\n        \"200\":\n          description: A coverage's rangetype.\n          content:\n            application/geo+json:\n              schema:\n                $ref: http://schemas.opengis.net/cis/1.1/json/coverage-schema.json#/definitions/rangeType\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\n  /collections/{collectionId}/coverage/metadata:\n    get:\n      tags:\n      - Coverage\n      summary: (Not yet implemented) retrieve a coverage's metadata; use content negotiation to request\n        HTML or GeoJSON\n      description: Not yet implemented\n      operationId: getCoverageMetadata\n      parameters:\n      - $ref: '#/components/parameters/collectionId'\n      responses:\n        \"200\":\n          description: A coverage's metadata.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coverageMetadata'\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\n  /collections/{collectionId}/coverage/rangeset:\n    get:\n      tags:\n      - Coverage\n      summary: Retrieve a coverage's rangeset\n      description: Retrieve the coverage's rangeset, i.e. its data values in their native format\n      operationId: getCoverageRangeset\n      parameters:\n      - $ref: '#/components/parameters/collectionId'\n      - $ref: '#/components/parameters/outputCrs'\n      - $ref: '#/components/parameters/subset'\n      - $ref: '#/components/parameters/interpolation'\n      - $ref: '#/components/parameters/scaleExtent'\n      - $ref: '#/components/parameters/scaleSize'\n      # Parameters below this line are not part of the OGC specification\n      - $ref: '#/components/parameters/concatenate'\n      - $ref: '#/components/parameters/granuleId'\n      - $ref: '#/components/parameters/point'\n      - $ref: '#/components/parameters/width'\n      - $ref: '#/components/parameters/height'\n      - $ref: '#/components/parameters/format'\n      - $ref: '#/components/parameters/forceAsync'\n      - $ref: '#/components/parameters/maxResults'\n      - $ref: '#/components/parameters/skipPreview'\n      responses:\n        \"200\":\n          description: A coverage's range set.\n          content:\n            image/*:\n              schema:\n                $ref: '#/components/schemas/rangeSetImage'\n            application/*:\n              schema:\n                $ref: '#/components/schemas/rangeSetImage'\n        default:\n          $ref: '#/components/responses/default'\n    post:\n      tags:\n      - Coverage\n      summary: Retrieve a coverage's rangeset\n      description: Retrieve the coverage's rangeset, i.e. its data values in their native format\n      operationId: postCoverageRangeset\n      parameters:\n      - $ref: '#/components/parameters/collectionId'\n      - $ref: '#/components/parameters/outputCrs'\n      - $ref: '#/components/parameters/subset'\n      - $ref: '#/components/parameters/interpolation'\n      - $ref: '#/components/parameters/scaleExtent'\n      - $ref: '#/components/parameters/scaleSize'\n      # Parameters below this line are not part of the OGC specification\n      - $ref: '#/components/parameters/concatenate'\n      - $ref: '#/components/parameters/granuleId'\n      - $ref: '#/components/parameters/point'\n      - $ref: '#/components/parameters/width'\n      - $ref: '#/components/parameters/height'\n      - $ref: '#/components/parameters/format'\n      - $ref: '#/components/parameters/forceAsync'\n      - $ref: '#/components/parameters/maxResults'\n      - $ref: '#/components/parameters/skipPreview'\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                shapefile:\n                  type: string\n                  format: binary\n            encoding:\n              shapefile:\n                contentType: 'application/geo+json,application/shapefile+zip,application/vnd.google-earth.kml+xml'\n\n      responses:\n        \"200\":\n          description: A coverage's range set.\n          content:\n            image/*:\n              schema:\n                $ref: '#/components/schemas/rangeSetImage'\n            application/*:\n              schema:\n                $ref: '#/components/schemas/rangeSetImage'\n        default:\n          $ref: '#/components/responses/default'\n  /collections/{collectionId}/coverage/all:\n    get:\n      tags:\n      - Coverage\n      summary: (Not yet implemented) retrieve a coverages rangeset; use content negotiation to request HTML\n        or GeoJSON\n      description: Not yet implemented\n      operationId: getCoverageAll\n      parameters:\n      - $ref: '#/components/parameters/collectionId'\n      - $ref: '#/components/parameters/subset'\n      - $ref: '#/components/parameters/rangeSubset'\n      - $ref: '#/components/parameters/scaleFactor'\n      - $ref: '#/components/parameters/scaleAxis'\n      - $ref: '#/components/parameters/scaleSize'\n      - $ref: '#/components/parameters/scaleExtent'\n      - $ref: '#/components/parameters/subsettingCrs'\n      - $ref: '#/components/parameters/outputCrs'\n      - $ref: '#/components/parameters/interpolation'\n      responses:\n        \"200\":\n          description: A full coverage.\n          content:\n            application/multipart+related:\n              schema:\n                $ref: '#/components/schemas/coverageMultipart'\n            image/*:\n              schema:\n                $ref: '#/components/schemas/rangeSetImage'\n            application/*:\n              schema:\n                $ref: '#/components/schemas/rangeSetImage'\n            text/html:\n              schema:\n                type: string\n        default:\n          $ref: '#/components/responses/default'\ncomponents:\n  responses:\n    default:\n      description: An error occured.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/exception'\n        text/html:\n          schema:\n            type: string\n  schemas:\n    exception:\n      required:\n      - code\n      type: object\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n    root:\n      required:\n      - links\n      type: object\n      properties:\n        links:\n          type: array\n          example:\n          - href: http://data.example.org/\n            rel: self\n            type: application/json\n            title: this document\n          - href: http://data.example.org/api\n            rel: service\n            type: application/openapi+json;version=3.0\n            title: the API definition\n          - href: http://data.example.org/conformance\n            rel: conformance\n            type: application/json\n            title: OGC conformance classes implemented by this API\n          - href: http://data.example.org/collections\n            title: Metadata about the resource collections\n          items:\n            $ref: '#/components/schemas/link'\n    req-classes:\n      required:\n      - conformsTo\n      type: object\n      properties:\n        conformsTo:\n          type: array\n          example:\n          - http://www.opengis.net/spec/ogcapi-common/1.0/conf/core\n          - http://www.opengis.net/spec/ogcapi-common/1.0/conf/collections\n          - http://www.opengis.net/spec/ogcapi-common/1.0/conf/oas3\n          - http://www.opengis.net/spec/ogcapi-common/1.0/conf/html\n          - http://www.opengis.net/spec/ogcapi-common/1.0/conf/geojson\n          - http://www.opengis.net/spec/ogcapi-coverages/1.0/conf/core\n          items:\n            type: string\n    link:\n      required:\n      - href\n      type: object\n      properties:\n        href:\n          type: string\n        rel:\n          type: string\n          example: prev\n        type:\n          type: string\n          example: application/geo+json\n        hreflang:\n          type: string\n          example: en\n    content:\n      required:\n      - collections\n      - links\n      type: object\n      properties:\n        links:\n          type: array\n          example:\n          - href: http://data.example.org/collections.json\n            rel: self\n            type: application/json\n            title: this document\n          - href: http://data.example.org/collections.html\n            rel: alternate\n            type: text/html\n            title: this document as HTML\n          - href: http://schemas.example.org/1.0/foobar.xsd\n            rel: describedBy\n            type: application/xml\n            title: XML schema for Acme Corporation data\n          items:\n            $ref: '#/components/schemas/link'\n        collections:\n          type: array\n          items:\n            $ref: '#/components/schemas/collectionInfo'\n    collectionInfo:\n      required:\n      - links\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: identifier of the collection used, for example, in URIs\n          example: buildings\n        title:\n          type: string\n          description: human readable title of the collection\n          example: Buildings\n        description:\n          type: string\n          description: a description of the data in the collection\n          example: Buildings in the city of Bonn.\n        links:\n          type: array\n          example:\n          - href: http://data.example.org/collections/buildings/items\n            rel: item\n            type: application/geo+json\n            title: Buildings\n          - href: http://example.org/concepts/building.html\n            rel: describedBy\n            type: text/html\n            title: Coverage for buildings\n          items:\n            $ref: '#/components/schemas/link'\n        extent:\n          $ref: '#/components/schemas/extent'\n        crs:\n          type: array\n          description: The coordinate reference systems in which geometries may be\n            retrieved. Coordinate reference systems are identified by a URI. The first\n            coordinate reference system is the coordinate reference system that is\n            used by default. This is always \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\",\n            i.e. WGS84 longitude/latitude.\n          items:\n            type: string\n          default:\n          - http://www.opengis.net/def/crs/OGC/1.3/CRS84\n    extent:\n      type: object\n      properties:\n        crs:\n          type: string\n          description: Coordinate reference system of the coordinates in the spatial\n            extent (property `spatial`). In the Core, only WGS84 longitude/latitude\n            is supported. Extensions may support additional coordinate reference systems.\n          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84\n          enum:\n          - http://www.opengis.net/def/crs/OGC/1.3/CRS84\n        spatial:\n          maxItems: 6\n          minItems: 4\n          type: array\n          description: West, north, east, south edges of the spatial extent. The minimum\n            and maximum values apply to the coordinate reference system WGS84 longitude/latitude\n            that is supported in the Core. If, for example, a projected coordinate\n            reference system is used, the minimum and maximum values need to be adjusted.\n          example:\n          - -180\n          - -90\n          - 180\n          - 90\n          items:\n            type: number\n        trs:\n          type: string\n          description: Temporal reference system of the coordinates in the temporal\n            extent (property `temporal`). In the Core, only the Gregorian calendar\n            is supported. Extensions may support additional temporal reference systems.\n          default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\n          enum:\n          - http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\n        temporal:\n          maxItems: 2\n          minItems: 2\n          type: array\n          description: Begin and end times of the temporal extent.\n          example:\n          - 2011-11-11T12:22:11.000Z\n          - 2012-11-24T12:32:43.000Z\n          items:\n            type: string\n            format: dateTime\n    coverageOffering:\n      type: string\n    coverageDescription:\n      type: string\n    coverageMetadata:\n      type: string\n    coverageMultipart:\n      type: string\n    rangeSetImage:\n      type: string\n  parameters:\n    limit:\n      name: limit\n      in: query\n      description: |\n        The optional limit parameter limits the number of items that are\n        presented in the response document.\n\n        Only items are counted that are on the first level of the collection in\n        the response document. Nested objects contained within the explicitly\n        requested items shall not be counted.\n\n        * Minimum = 1\n        * Maximum = 10000\n        * Default = 10\n      required: false\n      style: form\n      explode: false\n      schema:\n        maximum: 10000\n        minimum: 1\n        type: integer\n        default: 10\n    bbox:\n      name: bbox\n      in: query\n      description: |\n        Only collections that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (elevation or depth):\n        * Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Lower left corner, coordinate axis 3 (optional) * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2 * Upper right corner, coordinate axis 3 (optional)\n        The coordinate reference system of the values is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.\n        For WGS84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).\n        If a collection has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.\n      required: false\n      style: form\n      explode: false\n      schema:\n        maxItems: 6\n        minItems: 4\n        type: array\n        items:\n          type: number\n    point:\n      name: point\n      in: query\n      description: |\n        Only collections that have a geometry that contains a spatial point are selected. The spatial point is provided as two numbers:\n        * Longitude, coordinate axis 1 * Latitude, coordinate axis 2\n        The coordinate reference system of the values is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n      required: false\n      style: form\n      explode: false\n      schema:\n        maxItems: 2\n        minItems: 2\n        type: array\n        items:\n          type: number\n    time:\n      name: time\n      in: query\n      description: |-\n        Either a date-time or a period string that adheres to RFC 3339. Examples:\n        * A date-time: \"2018-02-12T23:20:50Z\" * A period: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\" or \"2018-02-12T00:00:00Z/P1M6DT12H31M12S\"\n        Only collections that have a temporal property that intersects the value of `time` are selected.\n        If a collection has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n    collectionId:\n      name: collectionId\n      in: path\n      description: |-\n        Names of the UMM-Var variables to be retrieved, or \"all\" to retrieve all variables within the CMR collection(s).\n        Multiple variables may be retrieved by separating them with a comma.  This API interprets OGC \"collections\" to be\n        equivalent to CMR \"variables\" which produces some overloading in the name.  In this document, a \"collection\" is\n        a CMR / UMM-Var variable and a \"CMR collection\" is a CMR / UMM-C collection.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    granuleId:\n      name: granuleId\n      in: query\n      description: The CMR Granule ID for the granule which should be retrieved\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n          minLength: 1\n    subset:\n      name: subset\n      in: query\n      description: '\n        get a subset of the coverage by slicing or trimming among one axis.  Harmony supports\n        the axes \"lat\" and \"lon\" for spatial subsetting, and \"time\" for temporal, regardless of the names\n        of those axes in the data files. Harmony also supports arbitrary dimension names for subsetting\n        on numeric ranges for that dimension.\n\n        Examples:\n          - Subset to the lat/lon bounding box with southwest corner (-10, -10) and northeast corner (10, 10)\n            subset=lat(-10:10)\u0026subset=lon(-10:10)\n          - Subset to all latitudes north of -10 degrees and all longitudes west of 10 degrees\n            subset=lat(-10:*)\u0026subset=lon(*:10)\n          - Subset to only points with latitudes from -10 to 10 degrees, disregarding longitude\n            subset=lat(-10:10)\n          - Subset to the first month of 2020\n            subset=time(\"2020-01-01T00:00:00Z\":\"2020-02-01T00:00:00Z\")\n          - Subset on arbitrary dimension \"vertical\" with a value between 0 and 20\n            subset=vertical(0:20)\n\n        For full syntax and examples, see\n        https://github.com/opengeospatial/ogc_api_coverages/blob/master/standard/clause_9_subset.adoc'\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    rangeSubset:\n      name: rangeSubset\n      in: query\n      description: subset the resulting coverage by choosing and/or rearrange particular\n        fields\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    scaleFactor:\n      name: scaleFactor\n      in: query\n      description: scale the resulting coverage either among all axes by a given factor\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    scaleAxis:\n      name: scaleAxis\n      in: query\n      description: scale the resulting coverage either among one axis by a given factor\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    scaleSize:\n      name: scaleSize\n      in: query\n      description: scale the resulting coverage either among one axis to a given size\n      required: false\n      style: form\n      explode: false\n      schema:\n        minItems: 2\n        maxItems: 2\n        type: array\n        items:\n          type: number\n          minimum: 0\n    scaleExtent:\n      name: scaleExtent\n      in: query\n      description: scale the resulting coverage either among one axis to a given extent\n      required: false\n      style: form\n      explode: false\n      schema:\n        minItems: 4\n        maxItems: 4\n        type: array\n        items:\n          type: number\n    subsettingCrs:\n      name: subsettingcrs\n      in: query\n      description: specify the projection in which the subsets are expressed\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    outputCrs:\n      name: outputcrs\n      in: query\n      description: reproject the output coverage to the given CRS.  Recognizes CRS types that can be inferred\n        by gdal, including EPSG codes, Proj4 strings, and OGC URLs (http://www.opengis.net/def/crs/...)\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    interpolation:\n      name: interpolation\n      in: query\n      description: specify the interpolation method used during reprojection and scaling\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n    width:\n      name: width\n      in: query\n      description: number of columns to return in the output coverage\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n    height:\n      name: height\n      in: query\n      description: number of rows to return in the output coverage\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n    format:\n      name: format\n      in: query\n      description: the output mime type to return\n      required: false\n      schema:\n        type: string\n        example:\n          - 'application/x-zarr'\n          - 'image/tiff'\n          - 'image/png'\n    forceAsync:\n      name: forceAsync\n      in: query\n      description: if \"true\", override the default API behavior and always treat the request as asynchronous\n      required: false\n      schema:\n        type: boolean\n    maxResults:\n      name: maxResults\n      in: query\n      description: limits the number of input granules processed in the request\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n    concatenate:\n      name: concatenate\n      in: query\n      description: requests results to be concatenated into a single result\n      required: false\n      schema:\n        type: string\n    skipPreview:\n      name: skipPreview\n      in: query\n      description: if \"true\", override the default API behavior and never auto-pause jobs\n      required: false\n      schema:\n        type: boolean\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /collections/{collectionId}/coverage/domainset: get: operation \"getCoverageDomainSet\": responses: 200: content: application/json: schema: parse schema: resolve \"http://schemas.opengis.net/cis/1.1/json/coverage-schema.json#/definitions/domainSet\": find schema: external base \"http://schemas.opengis.net/cis/1.1/json/coverage-schema.json\" is not supported"
}