{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloudflare/api-schemas"
		},
		"file": {
			"name": "common.yaml",
			"size": 0,
			"path": "common.yaml",
			"byteSize": 11542,
			"content": "openapi: 3.0.3\ninfo:\n  title: Common\n  description: Cloudflare Common API Components\n  version: 4.0.0\npaths: {}\ncomponents:\n  schemas:\n    uuid:\n      description: UUID\n      readOnly: true\n      type: string\n      maxLength: 36\n      example: f174e90a-fafe-4643-bbbc-4a0ed4fc8415\n    identifier:\n      description: Identifier\n      type: string\n      maxLength: 32\n      readOnly: true\n      example: 023e105f4ecef8ad9ca31a8372d0c353\n    \n    # API response envelopes\n    result_info:\n      type: object\n      properties:\n        page:\n          description: Current page within paginated list of results\n          type: number\n          example: 1\n        per_page:\n          description: Number of results per page of results\n          type: number\n          example: 20\n        count:\n          description: Total number of results for the requested service\n          type: number\n          example: 1\n        total_count:\n          description: Total results available without any search parameters\n          type: number\n          example: 2000\n    api-response-collection:\n      type: object\n      anyOf:\n        - $ref: \"#/components/schemas/api-response-common\"\n        - properties:\n            result:\n              type: array\n              nullable: true\n              items: {}\n            result_info:\n              $ref: \"#/components/schemas/result_info\"\n    messages:\n      type: array\n      items:\n        type: object\n        required:\n          - code\n          - message\n        properties:\n          code:\n            type: integer\n            minimum: 1000\n          message:\n            type: string\n        uniqueItems: true\n      example: []\n    api-response-common:\n      type: object\n      required:\n        - success\n        - errors\n        - messages\n        - result\n      properties:\n        success:\n          description: Whether the API call was successful\n          type: boolean\n          enum:\n            - true\n          example: true\n        errors:\n          $ref: \"#/components/schemas/messages\"\n        messages:\n          $ref: \"#/components/schemas/messages\"\n        result:\n          anyOf:\n            - type: object\n            - type: array\n              items: {}\n            - type: string\n    api-response-common-failure:\n      type: object\n      required:\n        - success\n        - errors\n        - messages\n        - result\n      properties:\n        success:\n          description: Whether the API call was successful\n          type: boolean\n          enum:\n            - false\n          example: false\n        errors:\n          allOf:\n            - $ref: \"#/components/schemas/messages\"\n          minLength: 1\n          example:\n            - code: 7003\n              message: No route for the URI\n        messages:\n          allOf:\n            - $ref: \"#/components/schemas/messages\"\n          example: []\n        result:\n          enum:\n            - null\n          example: null\n          nullable: true\n    api-response-single-id:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/api-response-common\"\n        - properties:\n            result:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  $ref: \"#/components/schemas/identifier\"\n              nullable: true\n    api-response-single:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/api-response-common\"\n        - properties:\n            result:\n              nullable: true\n              anyOf:\n                - type: object\n                - type: string\n\n    # Account\n    account:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          $ref: \"#/components/schemas/identifier\"\n        name:\n          description: Account name\n          type: string\n          maxLength: 100\n          example: Demo Account\n        settings:\n          type: object\n          description: Account settings\n          properties:\n            enforce_twofactor:\n              type: boolean\n              description: |-\n                Indicates whether membership in this account requires that\n                Two-Factor Authentication is enabled\n              default: false\n            use_account_custom_ns_by_default:\n              type: boolean\n              description: |-\n                Indicates whether new zones should use the account-level custom\n                nameservers by default\n              default: false\n        created_on:\n          description: Timestamp for the creation of the account\n          type: string\n          format: date-time\n          readOnly: true\n          example: 2014-03-01T12:21:02.0000Z\n    scope:\n      description: All zones owned by the account will have the rule applied\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/identifier\"\n        name:\n          $ref: \"#/components/schemas/account/properties/name\"\n        type:\n          type: string\n          enum:\n            - account\n          description: The scope of the rule\n          readOnly: true\n          example: account\n\n    # Zone \n    zone:\n      type: object\n      required:\n        - id\n        - name\n        - development_mode\n        - owner\n        - account\n        - meta\n        - original_name_servers\n        - original_registrar\n        - original_dnshost\n        - created_on\n        - modified_on\n        - activated_on\n      properties:\n        id:\n          $ref: \"#/components/schemas/identifier\"\n        name:\n          description: The domain name\n          type: string\n          pattern: ^([a-zA-Z0-9][\\-a-zA-Z0-9]*\\.)+[\\-a-zA-Z0-9]{2,20}$\n          maxLength: 253\n          readOnly: true\n          example: example.com\n        development_mode:\n          description: |-\n            The interval (in seconds) from when development mode expires\n            (positive integer) or last expired (negative integer) for the\n            domain. If development mode has never been enabled, this value is 0.\n          type: number\n          readOnly: true\n          example: 7200\n        original_name_servers:\n          description: |-\n            Original name servers before moving to Cloudflare\n            Notes: Is this only available for full zones?\n          type: array\n          items:\n            type: string\n            format: hostname\n          readOnly: true\n          example:\n            - ns1.originaldnshost.com\n            - ns2.originaldnshost.com\n          nullable: true\n        original_registrar:\n          description: Registrar for the domain at the time of switching to Cloudflare\n          type: string\n          readOnly: true\n          example: GoDaddy\n          nullable: true\n        original_dnshost:\n          description: DNS host at the time of switching to Cloudflare\n          type: string\n          maxLength: 50\n          readOnly: true\n          example: NameCheap\n          nullable: true\n        created_on:\n          description: When the zone was created\n          type: string\n          format: date-time\n          readOnly: true\n          example: 2014-01-01T05:20:00.12345Z\n        modified_on:\n          description: When the zone was last modified\n          type: string\n          format: date-time\n          readOnly: true\n          example: 2014-01-01T05:20:00.12345Z\n        activated_on:\n          description: |-\n            The last time proof of ownership was detected and the zone was made\n            active\n          type: string\n          format: date-time\n          readOnly: true\n          example: 2014-01-02T00:01:00.12345Z\n          nullable: true\n    vanity_name_servers:\n      description: |-\n        An array of domains used for custom name servers. This is only\n        available for Business and Enterprise plans.\n      type: array\n      items:\n        type: string\n        format: hostname\n        maxLength: 253\n      example:\n        - ns1.example.com\n        - ns2.example.com\n      \n    # User\n    user:\n      type: object\n      required:\n        - id\n        - email\n        - last_name\n        - first_name\n        - telephone\n        - country\n        - zipcode\n        - two_factor_authentication_enabled\n        - created_on\n        - modified_on\n      properties:\n        id:\n          $ref: \"#/components/schemas/identifier\"\n        email:\n          description: The contact email address of the user.\n          type: string\n          maxLength: 90\n          example: user@example.com\n        first_name:\n          description: User's first name\n          type: string\n          maxLength: 60\n          example: John\n          nullable: true\n        last_name:\n          description: User's last name\n          type: string\n          maxLength: 60\n          example: Appleseed\n          nullable: true\n        username:\n          description: A username used to access other cloudflare services, like support\n          type: string\n          pattern: ^[a-z0-9]+([\\-\\._]?[a-z0-9]+)+$\n          minLength: 3\n          maxLength: 90\n          example: cfuser12345\n        telephone:\n          description: User's telephone number\n          type: string\n          maxLength: 20\n          example: +1 123-123-1234\n          nullable: true\n        country:\n          description: The country in which the user lives.\n          type: string\n          maxLength: 30\n          example: US\n          nullable: true\n        zipcode:\n          description: The zipcode or postal code where the user lives.\n          type: string\n          maxLength: 20\n          example: \"12345\"\n          nullable: true\n        created_on:\n          description: When the user signed up.\n          readOnly: true\n          type: string\n          format: date-time\n          example: 2014-01-01T05:20:00Z\n        modified_on:\n          description: Last time the user was modified\n          readOnly: true\n          type: string\n          format: date-time\n          example: 2014-01-01T05:20:00Z\n\n    # Plan\n    plan:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/identifier'\n        name:\n          description: The plan name\n          type: string\n          maxLength: 80\n          readOnly: true\n          example: Pro Plan\n        price:\n          description: The price of the subscription that will be billed, in US dollars\n          type: number\n          readOnly: true\n          example: 20\n        currency:\n          description: The monetary unit in which pricing information is displayed\n          type: string\n          readOnly: true\n          example: USD\n        frequency:\n          description: The frequency at which you will be billed for this plan\n          type: string\n          enum:\n          - weekly\n          - monthly\n          - quarterly\n          - yearly\n          - ''\n          readOnly: true\n          example: monthly\n        legacy_id:\n          description: A 'friendly' identifier to indicate to the UI what plan the\n            object is\n          enum:\n          - free\n          - pro\n          - business\n          - enterprise\n          example: pro\n        is_subscribed:\n          description: If the zone is subscribed to this plan\n          type: boolean\n          example: true\n        can_subscribe:\n          description: If the zone is allowed to subscribe to this plan\n          type: boolean\n          example: true\n    \n    timestamp:\n      type: string\n      format: date-time\n      readOnly: true\n      example: '2014-01-01T05:20:00.12345Z'\n",
			"canonicalURL": "/github.com/cloudflare/api-schemas@94669662f8beff1e9d2c6ce67fc1833a3f30ac97/-/blob/common.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cloudflare/api-schemas/blob/94669662f8beff1e9d2c6ce67fc1833a3f30ac97/common.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"api-response-common-failure\": parse schema: property \"result\": at 1:1725: parse schema: infer enum type: cannot infer type from \"null\""
}