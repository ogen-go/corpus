{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bancolombia/performance-benchmark-stacks"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 4608,
			"content": "openapi: 3.0.1\ninfo:\n  title: Performance Benchmark Stacks\n  description: Base capabilities for performance scenarios, each operation should be implemented in each stack\n  version: 1.0.0\ntags:\n  - name: basic\n    description: Basic operations without external resources, only cpu processing\n  - name: processing\n    description: Operations which only do heavy processing, every operation should implement this behaviour \u003e should be allowed for a percentage of requests, and should run a loop for a delay time, when delay time is 0 loop should enter a single time\npaths:\n  /status:\n    get:\n      tags:\n        - basic\n      summary: Simple rest api without interactions or processing\n      operationId: status\n      responses:\n        200:\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n        500:\n          description: Error response could be 4xx or 5xx status code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /hash:\n    get:\n      tags:\n        - processing\n      summary: Service that should internally generate an uuid and hash it using sha256 as hex. This task should be allowed for a percentage of requests, and should run a loop for a delay time\n      operationId: sha256\n      parameters:\n        - name: percentage\n          in: query\n          description: percentage of requests that should do processing, default 100\n        - name: delay\n          in: query\n          description: delay time to run the processing loop, default 0\n      responses:\n        200:\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoopStatus'\n        500:\n          description: Error response could be 4xx or 5xx status code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /crypt:\n    get:\n      tags:\n        - processing\n      summary: Service that should internally generate an uuid and encrypt it using bcrypt with 10 rounds, then should validate the clear uuid with the encrypted value.\n      operationId: sha256\n      parameters:\n        - name: percentage\n          in: query\n          description: percentage of requests that should do processing, default 100\n        - name: delay\n          in: query\n          description: delay time to run the processing loop, default 0\n      responses:\n        200:\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoopStatus'\n        500:\n          description: Error response could be 4xx or 5xx status code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /prime/{top}:\n    get:\n      tags:\n        - processing\n      summary: Service that calculates the prime numbers until a top number.\n      operationId: primes\n      parameters:\n        - name: percentage\n          in: query\n          description: percentage of requests that should do processing, default 100\n        - name: delay\n          in: query\n          description: delay time to run the processing loop, default 0\n        - name: top\n          in: path\n          description: top number for calculating prime numbers\n      responses:\n        200:\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoopStatus'\n        500:\n          description: Error response could be 4xx or 5xx status code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    Status:\n      required:\n        - status\n      type: object\n      properties:\n        status:\n          type: string\n          example: OK\n    LoopStatus:\n      required:\n        - status\n        - applied\n        - times\n      type: object\n      properties:\n        status:\n          type: string\n          example: OK\n        applied:\n          type: boolean\n          example: true\n          description: indicates if the current request has been in the percentage\n        times:\n          type: number\n          example: 1000\n          description: amount of loops executed in the delay time\n    Error:\n      description: No defined body response is required\n      type: object\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /hash: get: operation \"sha256\": parameters: parse parameter \"percentage\": parameter MUST contain either a schema property, or a content property"
}