{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "cloud-diff.yml",
			"size": 0,
			"path": "contracts/cloud-diff.yml",
			"byteSize": 222778,
			"content": "openapi: 3.0.0\ninfo:\n  title: InfluxDB Cloud API Service\n  version: 2.0.1\n  description: |\n    The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.\n  license:\n    name: MIT\n    url: 'https://opensource.org/licenses/MIT'\nservers:\n  - url: /api/v2\npaths:\n  /users:\n    get:\n      operationId: GetUsers\n      tags:\n        - Security and access endpoints\n        - Users\n      summary: List users\n      description: |\n        Lists [users]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n\n        To limit which users are returned, pass query parameters in your request.\n\n        #### InfluxDB Cloud\n\n        - InfluxDB Cloud doesn't allow listing all users through the API.\n          Use the InfluxDB Cloud user interface (UI) to manage account information.\n\n        #### Required permissions for InfluxDB Cloud\n\n        | Action | Permission required | Restriction |\n        |:-------|:--------------------|:------------|\n        | List all users | Operator token | InfluxData internal use only |\n        | List a specific user | `read-users` or `read-user USER_ID` |\n\n        *`USER_ID`* is the ID of the user that you want to retrieve.\n\n        #### Related guides\n\n        - [Manage users](https://docs.influxdata.com/influxdb/cloud/organizations/users/)\n      parameters:\n        - in: header\n          name: Zap-Trace-Span\n          description: OpenTracing span context\n          example:\n            trace_id: '1'\n            span_id: '1'\n            baggage:\n              key: value\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: name\n          schema:\n            type: string\n          description: |\n            A user name.\n            Only lists the specified [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n        - in: query\n          name: id\n          schema:\n            type: string\n          description: |\n            A user id.\n            Only lists the specified [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n      responses:\n        '200':\n          description: |\n            Success. The response contains a list of `users`.\n\n            #### InfluxDB Cloud\n\n            - Returns an empty `users` list if you don't pass _`id`_ or _`name`_ parameters and don't use an\n              _operator token_.\n              Only InfluxData can access InfluxDB Cloud operator tokens.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users'\n        '401':\n          description: |\n            Unauthorized.\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    description: code is the machine-readable error code.\n                    readOnly: true\n                    type: string\n                    enum:\n                      - internal error\n                      - not found\n                      - conflict\n                      - invalid\n                      - unprocessable entity\n                      - empty value\n                      - unavailable\n                      - forbidden\n                      - too many requests\n                      - unauthorized\n                      - method not allowed\n                      - request too large\n                      - unsupported media type\n                  message:\n                    readOnly: true\n                    description: Human-readable message.\n                    type: string\n                  op:\n                    readOnly: true\n                    description: Describes the logical code operation when the error occurred. Useful for debugging.\n                    type: string\n                  err:\n                    readOnly: true\n                    description: Stack of errors that occurred during processing of the request. Useful for debugging.\n                    type: string\n                required:\n                  - code\n        '422':\n          description: |\n            Unprocessable entity.\n\n            The error may indicate one of the following problems:\n\n            - The request body isn't valid--the request is well-formed,\n              but InfluxDB can't process it due to semantic errors.\n            - You passed a parameter combination that InfluxDB doesn't support.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n        '500':\n          description: |\n            Internal server error.\n            The server encountered an unexpected situation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1tasks/get/responses/default'\n    post:\n      operationId: PostUsers\n      tags:\n        - Users\n      summary: Create a user\n      description: |\n        (InfluxData internal use only)\n\n        Creates and returns a [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user)\n        that can access InfluxDB.\n\n        #### InfluxDB Cloud\n\n        - InfluxDB Cloud Doesn't let you manage users through the API.\n          Use the InfluxDB Cloud user interface (UI) to manage account information.\n\n        #### Required permissions for InfluxDB Cloud\n\n        | Action | Permission required | Restriction |\n        |:-------|:--------------------|:------------|\n        | Create user | Operator token | InfluxData internal use only |\n\n        #### Related guides\n\n        - [Manage users]({{% INFLUXDB_DOCS_URL %}}/organizations/users/)\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: 'In the request body, provide the user.'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '201':\n          description: |\n            Success.\n            The response body contains the user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        '401':\n          description: |\n            Unauthorized.\n\n            #### InfluxDB Cloud\n\n            - Returns this error if the request doesn't use an _operator token_.\n              Only InfluxData can access InfluxDB Cloud operator tokens.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n        '422':\n          description: |\n            Unprocessable entity.\n\n            The error may indicate one of the following problems:\n\n            - The request body isn't valid--the request is well-formed,\n              but InfluxDB can't process it due to semantic errors.\n            - You passed a parameter combination that InfluxDB doesn't support.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1tasks/get/responses/default'\n  '/users/{userID}':\n    get:\n      operationId: GetUsersID\n      tags:\n        - Users\n      summary: Retrieve a user\n      description: |\n        Retrieves a [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n\n        #### Related guides\n\n        - [Manage users]({{% INFLUXDB_DOCS_URL %}}/organizations/users/)\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: |\n            A user ID.\n            Retrieves the specified [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n      responses:\n        '200':\n          description: Success. The response body contains the user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1tasks/get/responses/default'\n    patch:\n      operationId: PatchUsersID\n      tags:\n        - Users\n      summary: Update a user\n      description: |\n        (InfluxData internal use only)\n\n        Updates a [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user) and returns the user.\n\n        #### InfluxDB Cloud\n\n        - Doesn't let you manage users through the API.\n          Use the InfluxDB Cloud user interface (UI) to manage account information.\n\n        #### Required permissions for InfluxDB Cloud\n\n        | Action | Permission required | Restriction |\n        |:-------|:--------------------|:------------|\n        | Update user | Operator token | InfluxData internal use only |\n\n        #### Related guides\n\n        - [Manage users]({{% INFLUXDB_DOCS_URL %}}/organizations/users/)\n      requestBody:\n        description: The user update to apply.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: |\n            A user ID.\n            Updates the specified [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n      responses:\n        '200':\n          description: Success. The response body contains the updated user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        '400':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/400'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/404'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n        default:\n          $ref: '#/paths/~1tasks/get/responses/default'\n    delete:\n      operationId: DeleteUsersID\n      tags:\n        - Users\n      summary: Delete a user\n      description: |\n        (InfluxData internal use only)\n\n        Deletes a [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n\n        For security purposes, once an InfluxDB user account is deleted from an\n        organization, the user (and their token) cannot be reactivated.\n\n        #### InfluxDB Cloud\n\n        - Doesn't let you manage users through the API.\n          Use the InfluxDB Cloud user interface (UI) to manage account information.\n\n        #### Required permissions\n\n        | Action | Permission required | Restriction |\n        |:-------|:--------------------|:------------|\n        | Delete user | Operator token | InfluxData internal use only |\n\n        #### Related guides\n\n        - [Manage users]({{% INFLUXDB_DOCS_URL %}}/organizations/users/)\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: |\n            A user ID.\n            Deletes the specified [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n      responses:\n        '204':\n          description: Success. The user is deleted.\n        '400':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/400'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/404'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n        default:\n          $ref: '#/paths/~1tasks/get/responses/default'\n  /setup:\n    get:\n      operationId: GetSetup\n      tags:\n        - Setup\n      summary: Retrieve setup status\n      description: 'Check if setup is allowed. Returns `true` if no default user, organization, or bucket have been created.'\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      responses:\n        '200':\n          description: 'Setup is allowed, true or false'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  allowed:\n                    description: |\n                      If `true`, the InfluxDB instance hasn't had initial setup;\n                      `false` otherwise.\n                    type: boolean\n    post:\n      operationId: PostSetup\n      tags:\n        - Setup\n      summary: 'Create an initial user, organization, and bucket'\n      description: 'Post an onboarding request to create an initial user, organization, and bucket.'\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: Source to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnboardingRequest'\n      responses:\n        '201':\n          description: 'The created default user, bucket, and organization'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1tasks/get/responses/default'\n  /setup/user:\n    post:\n      operationId: PostSetupUser\n      tags:\n        - Setup\n      summary: 'Create a new user, organization, and bucket'\n      description: 'Post an onboarding request to create a new user, organization, and bucket.'\n      requestBody:\n        description: Source to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnboardingRequest'\n      responses:\n        '201':\n          description: 'The created default user, bucket, and organization.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1tasks/get/responses/default'\n  /variables:\n    get:\n      operationId: GetVariables\n      tags:\n        - Variables\n      summary: List all variables\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: The organization ID.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A list of variables for an organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variables'\n        '400':\n          description: Invalid request\n          $ref: '#/paths/~1tasks/get/responses/default'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1tasks/get/responses/default'\n    post:\n      operationId: PostVariables\n      summary: Create a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: Variable to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '201':\n          description: Variable created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1tasks/get/responses/default'\n  '/variables/{variableID}':\n    get:\n      operationId: GetVariablesID\n      tags:\n        - Variables\n      summary: Retrieve a variable\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      responses:\n        '200':\n          description: Variable found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        '404':\n          description: Variable not found\n          $ref: '#/paths/~1tasks/get/responses/default'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1tasks/get/responses/default'\n    delete:\n      operationId: DeleteVariablesID\n      tags:\n        - Variables\n      summary: Delete a variable\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      responses:\n        '204':\n          description: Variable deleted\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1tasks/get/responses/default'\n    patch:\n      operationId: PatchVariablesID\n      summary: Update a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      requestBody:\n        description: Variable update to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '200':\n          description: Variable updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1tasks/get/responses/default'\n    put:\n      operationId: PutVariablesID\n      summary: Replace a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      requestBody:\n        description: Variable to replace\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '200':\n          description: Variable updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1tasks/get/responses/default'\n  '/buckets/{bucketID}/schema/measurements':\n    summary: Bucket schemas\n    get:\n      summary: List measurement schemas of a bucket\n      description: |\n        Lists _explicit_\n        [schemas]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#schema)\n        (`\"schemaType\": \"explicit\"`) for a bucket.\n\n        _Explicit_ schemas are used to enforce column names, tags, fields, and data\n        types for your data.\n\n        By default, buckets have an _implicit_ schema-type (`\"schemaType\": \"implicit\"`)\n        that conforms to your data.\n\n        #### Related guides\n\n        - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/)\n      operationId: getMeasurementSchemas\n      parameters:\n        - in: query\n          name: org\n          description: |\n            An organization name.\n            Specifies the organization that owns the schema.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: |\n            An organization ID.\n            Specifies the organization that owns the schema.\n          schema:\n            type: string\n        - in: query\n          name: name\n          description: |\n            A measurement name.\n            Only returns measurement schemas with the specified name.\n          schema:\n            type: string\n        - in: path\n          name: bucketID\n          description: |\n            A bucket ID.\n            Lists measurement schemas for the specified bucket.\n          schema:\n            type: string\n          required: true\n      tags:\n        - Bucket Schemas\n      responses:\n        '200':\n          description: A list of measurement schemas returning summary information.\n          headers:\n            ETag:\n              description: The current version of the bucket schema\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchemaList'\n        '400':\n          description: |\n            Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n              examples:\n                invalidSchemaType:\n                  summary: Invalid schema type.\n                  value:\n                    code: invalid\n                    message: bucket schemaType must be explicit\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/404'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n    post:\n      summary: Create a measurement schema for a bucket\n      description: |\n        Creates an _explict_ measurement [schema]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#schema)\n        for a bucket.\n\n        _Explicit_ schemas are used to enforce column names, tags, fields, and data\n        types for your data.\n\n        By default, buckets have an _implicit_ schema-type (`\"schemaType\": \"implicit\"`)\n        that conforms to your data.\n\n        Use this endpoint to create schemas that prevent non-conforming write requests.\n\n        #### Limitations\n\n        - Buckets must be created with the \"explict\" `schemaType` in order to use\n        schemas.\n\n        #### Related guides\n\n        - [Manage bucket schemas]({{% INFLUXDB_DOCS_URL %}}/organizations/buckets/bucket-schema/).\n        - [Create a bucket with an explicit schema]({{% INFLUXDB_DOCS_URL %}}/organizations/buckets/create-bucket/#create-a-bucket-with-an-explicit-schema)\n      operationId: createMeasurementSchema\n      parameters:\n        - in: query\n          name: org\n          description: |\n            An organization name.\n            Specifies the organization that owns the schema.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: |\n            An organization ID.\n            Specifies the organization that owns the schema.\n          schema:\n            type: string\n        - in: path\n          name: bucketID\n          description: |\n            A bucket ID.\n            Adds a schema for the specified bucket.\n          schema:\n            type: string\n          required: true\n      tags:\n        - Bucket Schemas\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MeasurementSchemaCreateRequest'\n      responses:\n        '201':\n          description: The current version of the measurement schema.\n          headers:\n            ETag:\n              description: The current version of the measurement schema\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n        '400':\n          description: |\n            Bad request.\n          content:\n            application/json:\n              examples:\n                badNameExample:\n                  summary: Invalid name\n                  description: 'The error returned when the name is invalid, such as too few or too many characters or the name contains non-printable ASCII or is not valid UTF-8.'\n                  value:\n                    code: invalid\n                    message: name is invalid\n                missingColumnsExample:\n                  summary: Missing columns\n                  description: The error returned when the request body is missing the columns property.\n                  value:\n                    code: invalid\n                    message: columns is required\n                missingTimestampExample:\n                  summary: Missing timestamp\n                  description: The error returned when the request body is missing a timestamp type column.\n                  value:\n                    code: invalid\n                    message: Timestamp column is required\n                duplicateColumnNamesExample:\n                  summary: Duplicate column names\n                  description: The error returned when the request body contains duplicate column names.\n                  value:\n                    code: invalid\n                    message: Duplicate column names\n                missingFieldExample:\n                  summary: Missing field\n                  description: The error returned when the request body is missing at least one field type column.\n                  value:\n                    code: invalid\n                    message: At least one field column is required\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/404'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n      x-codeSamples:\n        - lang: Shell\n          label: cURL\n          source: |\n            curl --request POST \"INFLUX_URL/api/v2/buckets/BUCKET_ID/schema/measurements \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"name\": \"temperature\",\n                  \"column\": [\n                    {\n                      \"type\": \"tag\",\n                      \"name\": \"location\"\n                    },\n                    {\n                      \"type\": \"field\",\n                      \"name\": \"value\",\n                      \"dataType\": \"float\"\n                    },\n                    {\n                      \"type\": \"timestamp\",\n                      \"name\": \"time\"\n                    }\n                  ]\n                }'\n  '/buckets/{bucketID}/schema/measurements/{measurementID}':\n    summary: Bucket Schema\n    get:\n      summary: Retrieve a measurement schema\n      description: |\n        Retrieves an explicit measurement [schema]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#schema).\n      operationId: getMeasurementSchema\n      parameters:\n        - in: query\n          name: org\n          description: |\n            Organization name.\n            Specifies the organization that owns the schema.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: |\n            Organization ID.\n            Specifies the organization that owns the schema.\n          schema:\n            type: string\n        - in: path\n          name: bucketID\n          description: |\n            A bucket ID.\n            Retrieves schemas for the specified bucket.\n          schema:\n            type: string\n          required: true\n        - in: path\n          name: measurementID\n          description: |\n            The measurement schema ID.\n            Specifies the measurement schema to retrieve.\n          schema:\n            type: string\n          required: true\n      tags:\n        - Bucket Schemas\n      responses:\n        '200':\n          description: Schema definition for a single measurement\n          headers:\n            ETag:\n              description: The current version of the measurement schema\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/404'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n    patch:\n      summary: Update a measurement schema\n      description: |\n        Updates a measurement [schema]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#schema).\n\n        Use this endpoint to update the fields (`name`, `type`, and `dataType`) of a\n        measurement schema.\n\n        #### Limitations\n\n        - You can't update the `name` of a measurement.\n\n        #### Related guides\n\n        - [Manage bucket schemas]({{% INFLUXDB_DOCS_URL %}}/organizations/buckets/bucket-schema/).\n        - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/).\n      operationId: updateMeasurementSchema\n      parameters:\n        - in: query\n          name: org\n          description: |\n            An organization name.\n            Specifies the organization that owns the schema.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: |\n            An organization ID.\n            Specifies the organization that owns the schema.\n          schema:\n            type: string\n        - in: path\n          name: bucketID\n          description: |\n            A bucket ID.\n            Specifies the bucket to retrieve schemas for.\n          schema:\n            type: string\n          required: true\n        - in: path\n          name: measurementID\n          description: |\n            A measurement schema ID.\n            Retrieves the specified measurement schema.\n          schema:\n            type: string\n          required: true\n      tags:\n        - Bucket Schemas\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MeasurementSchemaUpdateRequest'\n      responses:\n        '200':\n          description: |\n            Success.\n            The response body contains the measurement schema.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n        '400':\n          description: |\n            Bad request.\n          content:\n            application/json:\n              examples:\n                missingColumnsExample:\n                  summary: Deleted columns\n                  description: The error returned when the request body does not contain all the columns from the source.\n                  value:\n                    code: invalid\n                    message: Unable to delete columns from schema\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/404'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n      x-codeSamples:\n        - lang: Shell\n          label: cURL\n          source: |\n            curl --request PATCH \"INFLUX_URL/api/v2/buckets/BUCKET_ID/schema/measurements \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"column\": [\n                    {\n                      \"type\": \"tag\",\n                      \"name\": \"location\"\n                    },\n                    {\n                      \"type\": \"field\",\n                      \"name\": \"value\",\n                      \"dataType\": \"float\"\n                    },\n                    {\n                      \"type\": \"timestamp\",\n                      \"name\": \"time\"\n                    }\n                  ]\n                }'\n  '/orgs/{orgID}/limits':\n    get:\n      tags:\n        - Limits\n      summary: Retrieve limits for an organization\n      operationId: GetOrgLimitsID\n      parameters:\n        - in: path\n          name: orgID\n          description: The ID of the organization.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Limits defined for the organization.\n          content:\n            application/json:\n              schema:\n                type: object\n                description: These are org limits similar to those configured in/by quartz.\n                properties:\n                  links:\n                    $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n                  limits:\n                    $ref: '#/components/schemas/Limit'\n        default:\n          description: unexpected error\n          $ref: '#/paths/~1tasks/get/responses/default'\n  '/orgs/{orgID}/usage':\n    get:\n      tags:\n        - Usage\n      summary: Retrieve usage for an organization\n      operationId: GetOrgUsageID\n      parameters:\n        - in: path\n          name: orgID\n          description: The ID of the organization.\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: start\n          description: |\n            Earliest time to include in results.\n            For more information about timestamps, see [Manipulate timestamps with Flux]({{% INFLUXDB_DOCS_URL %}}/query-data/flux/manipulate-timestamps/).\n          required: true\n          schema:\n            type: integer\n            format: unix timestamp\n        - in: query\n          name: stop\n          description: |\n            Latest time to include in results.\n            For more information about timestamps, see [Manipulate timestamps with Flux]({{% INFLUXDB_DOCS_URL %}}/query-data/flux/manipulate-timestamps/).\n          required: false\n          schema:\n            type: integer\n            format: unix timestamp\n        - in: query\n          name: raw\n          description: return raw usage data\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Usage data\n          headers:\n            Content-Encoding:\n              description: Lists any encodings (usually compression algorithms) that have been applied to the response payload.\n              schema:\n                type: string\n                description: 'The content coding. `gzip` for compressed data or `identity` for unmodified, uncompressed data.'\n                default: identity\n                enum:\n                  - gzip\n                  - identity\n          content:\n            text/csv:\n              schema:\n                type: string\n                example: |\n                  #group,false,false,true,true,false,false,true,true,true,true #datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string #default,_result,,,,,,,,, ,result,table,_start,_stop,_time,_value,_field,_measurement,bucket_id,org_id ,,0,2021-05-10T14:25:10.865702397Z,2021-05-10T15:25:10.865702397Z,2021-05-10T15:00:00Z,5434066,gauge,storage_usage_bucket_bytes,2f6ba0cf9a2fdcbb,cec6fc1d2176dc11 ,,1,2021-05-10T14:25:10.865702397Z,2021-05-10T15:25:10.865702397Z,2021-05-10T15:00:00Z,9924053.966666665,gauge,storage_usage_bucket_bytes,8af67bcaf69d9daf,cec6fc1d2176dc11\n        default:\n          description: unexpected error\n          $ref: '#/paths/~1tasks/get/responses/default'\n  /dashboards:\n    post:\n      operationId: PostDashboards\n      tags:\n        - Dashboards\n      summary: Create a dashboard\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: Dashboard to create\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                orgID:\n                  type: string\n                  description: The ID of the organization that owns the dashboard.\n                name:\n                  type: string\n                  description: The user-facing name of the dashboard.\n                description:\n                  type: string\n                  description: The user-facing description of the dashboard.\n              required:\n                - orgID\n                - name\n      responses:\n        '201':\n          description: Success. The dashboard is created.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: object\n                    allOf:\n                      - $ref: '#/paths/~1dashboards/post/requestBody/content/application~1json/schema'\n                      - type: object\n                        properties:\n                          links:\n                            type: object\n                            example:\n                              self: /api/v2/dashboards/1\n                              cells: /api/v2/dashboards/1/cells\n                              owners: /api/v2/dashboards/1/owners\n                              members: /api/v2/dashboards/1/members\n                              labels: /api/v2/dashboards/1/labels\n                              org: /api/v2/labels/1\n                            properties:\n                              self:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              cells:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              members:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              owners:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              labels:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              org:\n                                type: string\n                                format: uri\n                                readOnly: true\n                                description: URI of resource.\n                          id:\n                            readOnly: true\n                            type: string\n                          meta:\n                            type: object\n                            properties:\n                              createdAt:\n                                type: string\n                                format: date-time\n                              updatedAt:\n                                type: string\n                                format: date-time\n                          cells:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                id:\n                                  type: string\n                                links:\n                                  type: object\n                                  properties:\n                                    self:\n                                      type: string\n                                    view:\n                                      type: string\n                                x:\n                                  type: integer\n                                  format: int32\n                                'y':\n                                  type: integer\n                                  format: int32\n                                w:\n                                  type: integer\n                                  format: int32\n                                h:\n                                  type: integer\n                                  format: int32\n                                viewID:\n                                  type: string\n                                  description: The reference to a view from the views API.\n                          labels:\n                            $ref: '#/components/schemas/Variable/properties/labels'\n                  - type: object\n                    allOf:\n                      - $ref: '#/paths/~1dashboards/post/requestBody/content/application~1json/schema'\n                      - type: object\n                        properties:\n                          links:\n                            type: object\n                            example:\n                              self: /api/v2/dashboards/1\n                              cells: /api/v2/dashboards/1/cells\n                              owners: /api/v2/dashboards/1/owners\n                              members: /api/v2/dashboards/1/members\n                              labels: /api/v2/dashboards/1/labels\n                              org: /api/v2/labels/1\n                            properties:\n                              self:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              cells:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              members:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              owners:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              labels:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                              org:\n                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                          id:\n                            readOnly: true\n                            type: string\n                          meta:\n                            type: object\n                            properties:\n                              createdAt:\n                                type: string\n                                format: date-time\n                              updatedAt:\n                                type: string\n                                format: date-time\n                          cells:\n                            type: array\n                            items:\n                              type: object\n                              allOf:\n                                - $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/dashboards/items/allOf/1/properties/cells/items'\n                                - type: object\n                                  properties:\n                                    name:\n                                      type: string\n                                    properties:\n                                      oneOf:\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - suffix\n                                            - decimalPlaces\n                                            - position\n                                          properties:\n                                            adaptiveZoomHide:\n                                              type: boolean\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - line-plus-single-stat\n                                            queries:\n                                              type: array\n                                              items:\n                                                type: object\n                                                properties:\n                                                  text:\n                                                    type: string\n                                                    description: The text of the Flux query.\n                                                  editMode:\n                                                    type: string\n                                                    enum:\n                                                      - builder\n                                                      - advanced\n                                                  name:\n                                                    type: string\n                                                  builderConfig:\n                                                    type: object\n                                                    properties:\n                                                      buckets:\n                                                        type: array\n                                                        items:\n                                                          type: string\n                                                      tags:\n                                                        type: array\n                                                        items:\n                                                          type: object\n                                                          properties:\n                                                            key:\n                                                              type: string\n                                                            values:\n                                                              type: array\n                                                              items:\n                                                                type: string\n                                                            aggregateFunctionType:\n                                                              type: string\n                                                              enum:\n                                                                - filter\n                                                                - group\n                                                      functions:\n                                                        type: array\n                                                        items:\n                                                          type: object\n                                                          properties:\n                                                            name:\n                                                              type: string\n                                                      aggregateWindow:\n                                                        type: object\n                                                        properties:\n                                                          period:\n                                                            type: string\n                                                          fillValues:\n                                                            type: boolean\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: object\n                                                description: Defines an encoding of data value into color space.\n                                                required:\n                                                  - id\n                                                  - type\n                                                  - hex\n                                                  - name\n                                                  - value\n                                                properties:\n                                                  id:\n                                                    description: The unique ID of the view color.\n                                                    type: string\n                                                  type:\n                                                    description: Type is how the color is used.\n                                                    type: string\n                                                    enum:\n                                                      - min\n                                                      - max\n                                                      - threshold\n                                                      - scale\n                                                      - text\n                                                      - background\n                                                  hex:\n                                                    description: The hex number of the color\n                                                    type: string\n                                                    maxLength: 7\n                                                    minLength: 7\n                                                  name:\n                                                    description: The user-facing name of the hex color.\n                                                    type: string\n                                                  value:\n                                                    description: The data value mapped to this color.\n                                                    type: number\n                                                    format: float\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              description: The viewport for a View's visualizations\n                                              type: object\n                                              required:\n                                                - x\n                                                - 'y'\n                                              properties:\n                                                x:\n                                                  type: object\n                                                  description: Axis used in a visualization.\n                                                  properties:\n                                                    bounds:\n                                                      type: array\n                                                      minItems: 0\n                                                      maxItems: 2\n                                                      description: 'The extents of the axis in the form [lower, upper]. Clients determine whether bounds are inclusive or exclusive of their limits.'\n                                                      items:\n                                                        type: string\n                                                    label:\n                                                      description: Description of the axis.\n                                                      type: string\n                                                    prefix:\n                                                      description: Label prefix for formatting axis values.\n                                                      type: string\n                                                    suffix:\n                                                      description: Label suffix for formatting axis values.\n                                                      type: string\n                                                    base:\n                                                      description: Radix for formatting axis values.\n                                                      type: string\n                                                      enum:\n                                                        - ''\n                                                        - '2'\n                                                        - '10'\n                                                    scale:\n                                                      description: 'Scale is the axis formatting scale. Supported: \"log\", \"linear\"'\n                                                      type: string\n                                                      enum:\n                                                        - log\n                                                        - linear\n                                                'y':\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                            staticLegend:\n                                              description: StaticLegend represents the options specific to the static legend\n                                              type: object\n                                              properties:\n                                                colorizeRows:\n                                                  type: boolean\n                                                heightRatio:\n                                                  type: number\n                                                  format: float\n                                                show:\n                                                  type: boolean\n                                                opacity:\n                                                  type: number\n                                                  format: float\n                                                orientationThreshold:\n                                                  type: integer\n                                                valueAxis:\n                                                  type: string\n                                                widthRatio:\n                                                  type: number\n                                                  format: float\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            shadeBelow:\n                                              type: boolean\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            prefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            decimalPlaces:\n                                              description: 'Indicates whether decimal places should be enforced, and how many digits it should show.'\n                                              type: object\n                                              properties:\n                                                isEnforced:\n                                                  description: Indicates whether decimal point setting should be enforced\n                                                  type: boolean\n                                                digits:\n                                                  description: The number of digits after decimal to display\n                                                  type: integer\n                                                  format: int32\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - geom\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - position\n                                          properties:\n                                            adaptiveZoomHide:\n                                              type: boolean\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - xy\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            colorMapping:\n                                              description: An object that contains information about the color mapping\n                                              type: object\n                                              additionalProperties:\n                                                type: string\n                                              example:\n                                                series_id_1: '#edf529'\n                                                series_id_2: '#edf529'\n                                                measurement_birdmigration_europe: '#663cd0'\n                                                configcat_deployments-autopromotionblocker: '#663cd0'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes'\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            shadeBelow:\n                                              type: boolean\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            geom:\n                                              type: string\n                                              enum:\n                                                - line\n                                                - step\n                                                - stacked\n                                                - bar\n                                                - monotoneX\n                                                - stepBefore\n                                                - stepAfter\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - tickPrefix\n                                            - suffix\n                                            - tickSuffix\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - single-stat\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            prefix:\n                                              type: string\n                                            tickPrefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            tickSuffix:\n                                              type: string\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - fillColumns\n                                            - xDomain\n                                            - xAxisLabel\n                                            - position\n                                            - binCount\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - histogram\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                                format: float\n                                            xAxisLabel:\n                                              type: string\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            binCount:\n                                              type: integer\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - tickPrefix\n                                            - suffix\n                                            - tickSuffix\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - gauge\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            prefix:\n                                              type: string\n                                            tickPrefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            tickSuffix:\n                                              type: string\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - tableOptions\n                                            - fieldOptions\n                                            - timeFormat\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - table\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            tableOptions:\n                                              type: object\n                                              properties:\n                                                verticalTimeAxis:\n                                                  description: verticalTimeAxis describes the orientation of the table by indicating whether the time axis will be displayed vertically\n                                                  type: boolean\n                                                sortBy:\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/5/properties/fieldOptions/items'\n                                                wrapping:\n                                                  description: Wrapping describes the text wrapping style to be used in table views\n                                                  type: string\n                                                  enum:\n                                                    - truncate\n                                                    - wrap\n                                                    - single-line\n                                                fixFirstColumn:\n                                                  description: fixFirstColumn indicates whether the first column of the table should be locked\n                                                  type: boolean\n                                            fieldOptions:\n                                              description: fieldOptions represent the fields retrieved by the query with customization options\n                                              type: array\n                                              items:\n                                                description: Describes a field that can be renamed and made visible or invisible.\n                                                type: object\n                                                properties:\n                                                  internalName:\n                                                    description: The calculated name of a field.\n                                                    readOnly: true\n                                                    type: string\n                                                  displayName:\n                                                    description: The name that a field is renamed to by the user.\n                                                    type: string\n                                                  visible:\n                                                    description: Indicates whether this field should be visible on the table.\n                                                    type: boolean\n                                            timeFormat:\n                                              description: timeFormat describes the display format for time values according to moment.js date formatting\n                                              type: string\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - showAll\n                                            - queries\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - simple-table\n                                            showAll:\n                                              type: boolean\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - note\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - markdown\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - checkID\n                                            - queries\n                                            - colors\n                                          properties:\n                                            adaptiveZoomHide:\n                                              type: boolean\n                                            type:\n                                              type: string\n                                              enum:\n                                                - check\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            checkID:\n                                              type: string\n                                            check:\n                                              allOf:\n                                                - oneOf:\n                                                    - allOf:\n                                                        - properties:\n                                                            id:\n                                                              readOnly: true\n                                                              type: string\n                                                            name:\n                                                              type: string\n                                                            orgID:\n                                                              description: The ID of the organization that owns this check.\n                                                              type: string\n                                                            taskID:\n                                                              description: The ID of the task associated with this check.\n                                                              type: string\n                                                            ownerID:\n                                                              description: The ID of creator used to create this check.\n                                                              type: string\n                                                              readOnly: true\n                                                            createdAt:\n                                                              type: string\n                                                              format: date-time\n                                                              readOnly: true\n                                                            updatedAt:\n                                                              type: string\n                                                              format: date-time\n                                                              readOnly: true\n                                                            query:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                                            status:\n                                                              $ref: '#/components/schemas/Task/properties/status'\n                                                            description:\n                                                              description: An optional description of the check.\n                                                              type: string\n                                                            latestCompleted:\n                                                              type: string\n                                                              description: 'A timestamp ([RFC3339 date/time format]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#rfc3339-timestamp)) of the latest scheduled and completed run.'\n                                                              format: date-time\n                                                              readOnly: true\n                                                            lastRunStatus:\n                                                              readOnly: true\n                                                              type: string\n                                                              enum:\n                                                                - failed\n                                                                - success\n                                                                - canceled\n                                                            lastRunError:\n                                                              readOnly: true\n                                                              type: string\n                                                            labels:\n                                                              $ref: '#/components/schemas/Variable/properties/labels'\n                                                            links:\n                                                              type: object\n                                                              readOnly: true\n                                                              example:\n                                                                self: /api/v2/checks/1\n                                                                labels: /api/v2/checks/1/labels\n                                                                members: /api/v2/checks/1/members\n                                                                owners: /api/v2/checks/1/owners\n                                                                query: /api/v2/checks/1/query\n                                                              properties:\n                                                                self:\n                                                                  description: The URL for this check.\n                                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                                                                labels:\n                                                                  description: The URL to retrieve labels for this check.\n                                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                                                                members:\n                                                                  description: The URL to retrieve members for this check.\n                                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                                                                owners:\n                                                                  description: The URL to retrieve owners for this check.\n                                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                                                                query:\n                                                                  description: The URL to retrieve the Flux script for this check.\n                                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                                                          required:\n                                                            - name\n                                                            - orgID\n                                                            - query\n                                                        - type: object\n                                                          required:\n                                                            - type\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - deadman\n                                                            timeSince:\n                                                              description: String duration before deadman triggers.\n                                                              type: string\n                                                            staleTime:\n                                                              description: String duration for time that a series is considered stale and should not trigger deadman.\n                                                              type: string\n                                                            reportZero:\n                                                              description: 'If only zero values reported since time, trigger an alert'\n                                                              type: boolean\n                                                            level:\n                                                              description: The state to record if check matches a criteria.\n                                                              type: string\n                                                              enum:\n                                                                - UNKNOWN\n                                                                - OK\n                                                                - INFO\n                                                                - CRIT\n                                                                - WARN\n                                                            every:\n                                                              description: Check repetition interval.\n                                                              type: string\n                                                            offset:\n                                                              description: 'Duration to delay after the schedule, before executing check.'\n                                                              type: string\n                                                            tags:\n                                                              description: List of tags to write to each status.\n                                                              type: array\n                                                              items:\n                                                                type: object\n                                                                properties:\n                                                                  key:\n                                                                    type: string\n                                                                  value:\n                                                                    type: string\n                                                            statusMessageTemplate:\n                                                              description: The template used to generate and write a status message.\n                                                              type: string\n                                                    - allOf:\n                                                        - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/0'\n                                                        - type: object\n                                                          required:\n                                                            - type\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - threshold\n                                                            thresholds:\n                                                              type: array\n                                                              items:\n                                                                oneOf:\n                                                                  - allOf:\n                                                                      - properties:\n                                                                          level:\n                                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/1/properties/level'\n                                                                          allValues:\n                                                                            description: 'If true, only alert if all values meet threshold.'\n                                                                            type: boolean\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - value\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - greater\n                                                                          value:\n                                                                            type: number\n                                                                            format: float\n                                                                  - allOf:\n                                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/1/allOf/1/properties/thresholds/items/oneOf/0/allOf/0'\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - value\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - lesser\n                                                                          value:\n                                                                            type: number\n                                                                            format: float\n                                                                  - allOf:\n                                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/1/allOf/1/properties/thresholds/items/oneOf/0/allOf/0'\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - min\n                                                                          - max\n                                                                          - within\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - range\n                                                                          min:\n                                                                            type: number\n                                                                            format: float\n                                                                          max:\n                                                                            type: number\n                                                                            format: float\n                                                                          within:\n                                                                            type: boolean\n                                                                discriminator:\n                                                                  propertyName: type\n                                                                  mapping:\n                                                                    greater: '#/components/schemas/GreaterThreshold'\n                                                                    lesser: '#/components/schemas/LesserThreshold'\n                                                                    range: '#/components/schemas/RangeThreshold'\n                                                            every:\n                                                              description: Check repetition interval.\n                                                              type: string\n                                                            offset:\n                                                              description: 'Duration to delay after the schedule, before executing check.'\n                                                              type: string\n                                                            tags:\n                                                              description: List of tags to write to each status.\n                                                              type: array\n                                                              items:\n                                                                type: object\n                                                                properties:\n                                                                  key:\n                                                                    type: string\n                                                                  value:\n                                                                    type: string\n                                                            statusMessageTemplate:\n                                                              description: The template used to generate and write a status message.\n                                                              type: string\n                                                    - allOf:\n                                                        - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/0'\n                                                        - type: object\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - custom\n                                                          required:\n                                                            - type\n                                                  discriminator:\n                                                    propertyName: type\n                                                    mapping:\n                                                      deadman: '#/components/schemas/DeadmanCheck'\n                                                      threshold: '#/components/schemas/ThresholdCheck'\n                                                      custom: '#/components/schemas/CustomCheck'\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - yColumn\n                                            - fillColumns\n                                            - symbolColumns\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                          properties:\n                                            adaptiveZoomHide:\n                                              type: boolean\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - scatter\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            symbolColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - yColumn\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                            - binSize\n                                          properties:\n                                            adaptiveZoomHide:\n                                              type: boolean\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - heatmap\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            binSize:\n                                              type: number\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - ySeriesColumns\n                                            - fillColumns\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - mosaic\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yLabelColumnSeparator:\n                                              type: string\n                                            yLabelColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            ySeriesColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - geom\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                          properties:\n                                            adaptiveZoomHide:\n                                              type: boolean\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - band\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes'\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            upperColumn:\n                                              type: string\n                                            mainColumn:\n                                              type: string\n                                            lowerColumn:\n                                              type: string\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            geom:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/1/properties/geom'\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - queries\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - center\n                                            - zoom\n                                            - allowPanAndZoom\n                                            - detectCoordinateFields\n                                            - layers\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - geo\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            center:\n                                              description: Coordinates of the center of the map\n                                              type: object\n                                              required:\n                                                - lat\n                                                - lon\n                                              properties:\n                                                lat:\n                                                  description: Latitude of the center of the map\n                                                  type: number\n                                                  format: double\n                                                lon:\n                                                  description: Longitude of the center of the map\n                                                  type: number\n                                                  format: double\n                                            zoom:\n                                              description: Zoom level used for initial display of the map\n                                              type: number\n                                              format: double\n                                              minimum: 1\n                                              maximum: 28\n                                            allowPanAndZoom:\n                                              description: 'If true, map zoom and pan controls are enabled on the dashboard view'\n                                              type: boolean\n                                              default: true\n                                            detectCoordinateFields:\n                                              description: 'If true, search results get automatically regroupped so that lon,lat and value are treated as columns'\n                                              type: boolean\n                                              default: true\n                                            useS2CellID:\n                                              description: 'If true, S2 column is used to calculate lat/lon'\n                                              type: boolean\n                                            s2Column:\n                                              description: String to define the column\n                                              type: string\n                                            latLonColumns:\n                                              description: Object type to define lat/lon columns\n                                              type: object\n                                              required:\n                                                - lat\n                                                - lon\n                                              properties:\n                                                lat:\n                                                  description: Object type for key and column definitions\n                                                  type: object\n                                                  required:\n                                                    - key\n                                                    - column\n                                                  properties:\n                                                    key:\n                                                      description: Key to determine whether the column is tag/field\n                                                      type: string\n                                                    column:\n                                                      description: Column to look up Lat/Lon\n                                                      type: string\n                                                lon:\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/latLonColumns/properties/lat'\n                                            mapStyle:\n                                              description: 'Define map type - regular, satellite etc.'\n                                              type: string\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            layers:\n                                              description: List of individual layers shown in the map\n                                              type: array\n                                              items:\n                                                type: object\n                                                oneOf:\n                                                  - allOf:\n                                                      - type: object\n                                                        required:\n                                                          - type\n                                                        properties:\n                                                          type:\n                                                            type: string\n                                                            enum:\n                                                              - heatmap\n                                                              - circleMap\n                                                              - pointMap\n                                                              - trackMap\n                                                      - type: object\n                                                        required:\n                                                          - radiusField\n                                                          - radiusDimension\n                                                          - colorField\n                                                          - colorDimension\n                                                          - colors\n                                                        properties:\n                                                          radiusField:\n                                                            type: string\n                                                            description: Radius field\n                                                          radiusDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colorField:\n                                                            type: string\n                                                            description: Circle color field\n                                                          colorDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                          radius:\n                                                            description: Maximum radius size in pixels\n                                                            type: integer\n                                                          interpolateColors:\n                                                            description: Interpolate circle color based on displayed value\n                                                            type: boolean\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - intensityField\n                                                          - intensityDimension\n                                                          - radius\n                                                          - blur\n                                                          - colors\n                                                        properties:\n                                                          intensityField:\n                                                            type: string\n                                                            description: Intensity field\n                                                          intensityDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          radius:\n                                                            description: Radius size in pixels\n                                                            type: integer\n                                                          blur:\n                                                            description: Blur for heatmap points\n                                                            type: integer\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - colorField\n                                                          - colorDimension\n                                                          - colors\n                                                        properties:\n                                                          colorField:\n                                                            type: string\n                                                            description: Marker color field\n                                                          colorDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                          isClustered:\n                                                            description: Cluster close markers together\n                                                            type: boolean\n                                                          tooltipColumns:\n                                                            description: An array for which columns to display in tooltip\n                                                            type: array\n                                                            items:\n                                                              type: string\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - trackWidth\n                                                          - speed\n                                                          - randomColors\n                                                          - trackPointVisualization\n                                                    properties:\n                                                      trackWidth:\n                                                        description: Width of the track\n                                                        type: integer\n                                                      speed:\n                                                        description: Speed of the track animation\n                                                        type: integer\n                                                      randomColors:\n                                                        description: Assign different colors to different tracks\n                                                        type: boolean\n                                                      colors:\n                                                        description: Colors define color encoding of data into a visualization\n                                                        type: array\n                                                        items:\n                                                          $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                          labels:\n                            $ref: '#/components/schemas/Variable/properties/labels'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n    get:\n      operationId: GetDashboards\n      tags:\n        - Dashboards\n      summary: List dashboards\n      description: |\n        Lists [dashboards]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#dashboard).\n\n        #### Related guides\n\n        - [Manage dashboards]({{% INFLUXDB_DOCS_URL %}}/visualize-data/dashboards/).\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: query\n          name: offset\n          required: false\n          description: |\n            The offset for pagination.\n            The number of records to skip.\n\n            For more information about pagination parameters, see [Pagination]({{% INFLUXDB_DOCS_URL %}}/api/#tag/Pagination).\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: descending\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            minimum: -1\n            maximum: 100\n            default: 20\n          description: |\n            The maximum number of [dashboards]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#dashboard) to return.\n            Default is `20`.\n            The minimum is `-1` and the maximum is `100`.\n        - in: query\n          name: owner\n          description: 'A user ID. Only returns [dashboards]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#dashboard) where the specified user has the `owner` role.'\n          schema:\n            type: string\n        - in: query\n          name: sortBy\n          description: The column to sort by.\n          schema:\n            type: string\n            enum:\n              - ID\n              - CreatedAt\n              - UpdatedAt\n        - in: query\n          name: id\n          description: |\n            A list of dashboard IDs.\n            Returns only the specified [dashboards]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#dashboard).\n            If you specify `id` and `owner`, only `id` is used.\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: orgID\n          description: |\n            An organization ID.\n            Only returns [dashboards]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#dashboard) that belong to the specified\n            [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization).\n          schema:\n            type: string\n        - in: query\n          name: org\n          description: |\n            An organization name.\n            Only returns [dashboards]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#dashboard) that belong to the specified\n            [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization).\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success. The response body contains dashboards.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  links:\n                    type: object\n                    description: |\n                      URI pointers for additional paged results.\n                    properties:\n                      next:\n                        $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                      self:\n                        $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                      prev:\n                        $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                    required:\n                      - self\n                  dashboards:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n  /tasks:\n    get:\n      operationId: GetTasks\n      tags:\n        - Data I/O endpoints\n        - Tasks\n      summary: List tasks\n      description: |\n        Lists [tasks]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task).\n\n        To limit which tasks are returned, pass query parameters in your request.\n        If no query parameters are passed, InfluxDB returns all tasks up to the default `limit`.\n\n        #### Related guide\n\n        - [Process data with InfluxDB tasks]({{% INFLUXDB_DOCS_URL %}}/process-data/)\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: query\n          name: name\n          description: |\n            A task name.\n            Only returns [tasks]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) with the specified name.\n            Different tasks may have the same name.\n          schema:\n            type: string\n        - in: query\n          name: after\n          schema:\n            type: string\n          description: |\n            A task ID.\n            Only returns [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) created after the specified task.\n        - in: query\n          name: user\n          schema:\n            type: string\n          description: |\n            A user ID.\n            Only returns [tasks]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) owned by the specified [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).\n        - in: query\n          name: org\n          schema:\n            type: string\n          description: |\n            An organization name.\n            Only returns [tasks]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) owned by the specified [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization).\n        - in: query\n          name: orgID\n          schema:\n            type: string\n          description: |\n            An organization ID.\n            Only returns tasks owned by the specified [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization).\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum:\n              - active\n              - inactive\n          description: |\n            A task status.\n            Only returns [tasks]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) that have the specified status.\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            minimum: -1\n            maximum: 500\n            default: 100\n          description: |\n            The maximum number of [tasks]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) to return.\n            Default is `100`.\n            The minimum is `1` and the maximum is `500`.\n\n            To reduce the payload size, combine _`type=basic`_ and _`limit`_ (see _Request samples_).\n            For more information about the `basic` response, see the _`type`_ parameter.\n          examples:\n            minPaginated:\n              summary: Return a maximum of 50 tasks.\n              value: '50'\n            all:\n              summary: 'Return all tasks, without pagination.'\n              value: '-1'\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n          description: The number of records to skip.\n        - in: query\n          name: sortBy\n          description: |\n            The sort field.\n            Specifies the task property used to sort records in the list.\n            Default is `name`.\n\n            The parameter has one supported value: `name`.\n          required: false\n          schema:\n            type: string\n            enum:\n              - name\n        - in: query\n          name: type\n          description: |\n            A task type.\n            Specifies the level of detail for [tasks]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) in the response.\n            Default is `system`.\n\n            The default (`system`) response contains all the metadata properties for tasks.\n            To reduce the response size, set the `type` parameter to `basic` (`type=basic`)\n            to omit some task properties (`flux`, `createdAt`, `updatedAt`).\n          required: false\n          schema:\n            default: ''\n            type: string\n            enum:\n              - basic\n              - system\n        - in: query\n          name: scriptID\n          description: |\n            A script ID.\n            Only returns tasks that use the specified [invokable script](#tag/Invokable-Scripts).\n          schema:\n            type: string\n      responses:\n        '200':\n          description: |\n            Success.\n            The response body contains the list of tasks.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tasks'\n              examples:\n                basicTypeTaskOutput:\n                  summary: Basic output\n                  description: |\n                    A sample response body for the `?type=basic` parameter.\n                    `type=basic` omits some task fields (`createdAt` and `updatedAt`)\n                    and field values (`org`, `flux`) in the response.\n                  value:\n                    links:\n                      self: /api/v2/tasks?limit=100\n                    tasks:\n                      - links:\n                          labels: /api/v2/tasks/09956cbb6d378000/labels\n                          logs: /api/v2/tasks/09956cbb6d378000/logs\n                          members: /api/v2/tasks/09956cbb6d378000/members\n                          owners: /api/v2/tasks/09956cbb6d378000/owners\n                          runs: /api/v2/tasks/09956cbb6d378000/runs\n                          self: /api/v2/tasks/09956cbb6d378000\n                        labels: []\n                        id: 09956cbb6d378000\n                        orgID: 48c88459ee424a04\n                        org: ''\n                        ownerID: 0772396d1f411000\n                        name: task1\n                        status: active\n                        flux: ''\n                        every: 30m\n                        latestCompleted: '2022-06-30T15:00:00Z'\n                        lastRunStatus: success\n                systemTypeTaskOutput:\n                  summary: System output\n                  description: |\n                    A sample response body for the `?type=system` parameter.\n                    `type=system` returns all task fields.\n                  value:\n                    links:\n                      self: /api/v2/tasks?limit=100\n                    tasks:\n                      - links:\n                          labels: /api/v2/tasks/09956cbb6d378000/labels\n                          logs: /api/v2/tasks/09956cbb6d378000/logs\n                          members: /api/v2/tasks/09956cbb6d378000/members\n                          owners: /api/v2/tasks/09956cbb6d378000/owners\n                          runs: /api/v2/tasks/09956cbb6d378000/runs\n                          self: /api/v2/tasks/09956cbb6d378000\n                        labels: []\n                        id: 09956cbb6d378000\n                        orgID: 48c88459ee424a04\n                        org: my-iot-center\n                        ownerID: 0772396d1f411000\n                        name: task1\n                        description: IoT Center 90-day environment average.\n                        status: active\n                        flux: |-\n                          option task = {name: \"task1\", every: 30m}\n\n                          from(bucket: \"iot_center\")\n                              |\u003e range(start: -90d)\n                              |\u003e filter(fn: (r) =\u003e r._measurement == \"environment\")\n                              |\u003e aggregateWindow(every: 1h, fn: mean)\n                        every: 30m\n                        latestCompleted: '2022-06-30T15:00:00Z'\n                        lastRunStatus: success\n                        createdAt: '2022-06-27T15:09:06Z'\n                        updatedAt: '2022-06-28T18:10:15Z'\n        '401':\n          description: |\n            Unauthorized. The error may indicate one of the following:\n\n              * The `Authorization: Token` header is missing or malformed.\n              * The API token value is missing from the header.\n              * The token doesn't have sufficient permissions to write to this organization and bucket.\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    description: |\n                      The HTTP status code description. Default is `unauthorized`.\n                    readOnly: true\n                    type: string\n                    enum:\n                      - unauthorized\n                  message:\n                    readOnly: true\n                    description: A human-readable message that may contain detail about the error.\n                    type: string\n              examples:\n                tokenNotAuthorized:\n                  summary: Token is not authorized to access a resource\n                  value:\n                    code: unauthorized\n                    message: unauthorized access\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n        default:\n          description: Non 2XX error response from server.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n      x-codeSamples:\n        - lang: Shell\n          label: 'cURL: all tasks, basic output'\n          source: |\n            curl INFLUX_URL/api/v2/tasks/?limit=-1\u0026type=basic \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Token INFLUX_API_TOKEN'\n    post:\n      operationId: PostTasks\n      tags:\n        - Data I/O endpoints\n        - Tasks\n      summary: Create a task\n      description: |\n        Creates a [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) and returns the task.\n\n        Use this endpoint to create a scheduled task that runs a script.\n\n        #### Related guides\n\n        - [Get started with tasks]({{% INFLUXDB_DOCS_URL %}}/process-data/get-started/)\n        - [Create a task]({{% INFLUXDB_DOCS_URL %}}/process-data/manage-tasks/create-task/)\n        - [Common tasks]({{% INFLUXDB_DOCS_URL %}}/process-data/common-tasks/)\n        - [Task configuration options]({{% INFLUXDB_DOCS_URL %}}/process-data/task-options/)\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: |\n          In the request body, provide the task.\n\n          Set one of the following properties to provide the script that the task runs:\n            - `flux`\n            - `scriptID`\n\n          If you set the `scriptID` property, you can set the following properties to configure the task:\n            - `cron`\n            - `every`\n            - `offset`\n            - `scriptParameters`\n\n          If you set the `flux` property, you must provide the `task` configuration option\n          in the Flux script.\n\n          See [task configuration options]({{% INFLUXDB_DOCS_URL %}}/process-data/task-options/)\n          for detail and examples.\n\n          #### Limitations:\n\n          - You can't use `flux` and `scriptID` in the same task.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskCreateRequest'\n            examples:\n              TaskWithFlux:\n                $ref: '#/components/examples/TaskWithFluxRequest'\n              TaskWithScriptID:\n                $ref: '#/components/examples/TaskWithScriptRequest'\n      responses:\n        '201':\n          description: Success. The response body contains a `tasks` list with the task.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        '400':\n          description: |\n            Bad request.\n            The response body contains detail about the error.\n\n            #### InfluxDB Cloud\n\n            - Returns this error if the task doesn't contain the `flux` property\n              or the `scriptID` property.\n            - Returns this error if the task contains `flux` _and_ `scriptID`\n              properties.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n              examples:\n                fluxAndScriptError:\n                  summary: The request body can't contain both flux and scriptID\n                  value:\n                    code: invalid\n                    message: 'failed to decode request: can not provide both scriptID and flux'\n                missingFluxError:\n                  summary: The request body requires either a flux parameter or scriptID parameter\n                  value:\n                    code: invalid\n                    message: 'failed to decode request: flux required'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n  '/tasks/{taskID}':\n    get:\n      operationId: GetTasksID\n      tags:\n        - Data I/O endpoints\n        - Tasks\n      summary: Retrieve a task\n      description: |\n        Retrieves the specified [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task).\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: taskID\n          schema:\n            type: string\n          required: true\n          description: |\n            A task ID.\n            Specifies the [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) to retrieve.\n      responses:\n        '200':\n          description: Success. The response body contains the task.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        '400':\n          description: |\n            Bad request.\n            The response body contains detail about the error.\n\n            #### InfluxDB OSS\n\n            - Returns this error if an incorrect value is passed in the `org` parameter or `orgID` parameter.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n              examples:\n                orgProvidedNotFound:\n                  summary: The org or orgID passed doesn't own the token passed in the header\n                  value:\n                    code: invalid\n                    message: 'failed to decode request body: organization not found'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          description: |\n            Not found.\n            A requested resource was not found.\n            The response body contains the requested resource type and the name value\n            (if you passed it)--for example:\n\n            - `\"organization name \\\"my-org\\\" not found\"`\n            - `\"organization not found\"`: indicates you passed an ID that did not match\n               an organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1users/get/responses/401/content/application~1json/schema'\n              examples:\n                org-not-found:\n                  summary: Organization name not found\n                  value:\n                    code: not found\n                    message: organization name \"my-org\" not found\n                bucket-not-found:\n                  summary: Bucket name not found\n                  value:\n                    code: not found\n                    message: bucket \"air_sensor\" not found\n                orgID-not-found:\n                  summary: Organization ID not found\n                  value:\n                    code: not found\n                    message: organization not found\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n        default:\n          $ref: '#/paths/~1tasks/get/responses/default'\n    patch:\n      operationId: PatchTasksID\n      tags:\n        - Tasks\n      summary: Update a task\n      description: |\n        Updates the specified [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task),\n        and then cancels all scheduled runs of the task.\n\n        Use this endpoint to set, modify, or clear task properties--for example: `cron`, `name`, `flux`, `status`.\n        Once InfluxDB applies the update, it cancels all previously scheduled runs of the task.\n\n        To activate or inactivate a task, set the `status` property.\n        The `status` property set to `inactive` cancels scheduled runs and prevents manual runs of the task.\n\n        #### Related guides\n\n        - [Update a task]({{% INFLUXDB_DOCS_URL %}}/process-data/manage-tasks/update-task/)\n        - [Task configuration options]({{% INFLUXDB_DOCS_URL %}}/process-data/task-options/)\n      requestBody:\n        description: |\n          In the request body, provide the task properties to update.\n          To provide the script that the task runs,\n          set either the `flux` property or the `scriptID` property.\n\n          If you set `scriptID`, you can set the following properties to configure the task:\n            - `cron`\n            - `every`\n            - `offset`\n            - `scriptParameters`\n\n          If you set the `flux` property, provide the `task` configuration option\n          in the Flux script.\n\n          See [task configuration options]({{% INFLUXDB_DOCS_URL %}}/process-data/task-options/)\n          for detail and examples.\n\n          #### Limitations:\n\n          - You can't set `flux` and `scriptID` properties for the same task--for\n            example, if you set the `scriptID` property, then InfluxDB sets the `flux` property\n            to an empty string (`\"\"`).\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskUpdateRequest'\n            examples:\n              TaskWithFlux:\n                $ref: '#/components/examples/TaskWithFluxRequest'\n              TaskWithScriptID:\n                $ref: '#/components/examples/TaskWithScriptRequest'\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: taskID\n          schema:\n            type: string\n          required: true\n          description: |\n            A task ID.\n            Specifies the [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) to update.\n      responses:\n        '200':\n          description: Success. The response body contains the updated task.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n        '400':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/400'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/404'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n        default:\n          $ref: '#/paths/~1tasks/get/responses/default'\n    delete:\n      operationId: DeleteTasksID\n      tags:\n        - Tasks\n      summary: Delete a task\n      description: |\n        Deletes the specified [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task)\n        and all associated records (task runs, logs, and labels).\n        Once the task is deleted, InfluxDB cancels all scheduled runs of the task.\n\n        To disable a task instead of delete it, use\n        [`PATCH /api/v2/tasks/TASK_ID`](#operation/PatchTasksID) to set the task's `status`\n        property to `inactive`.\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: taskID\n          schema:\n            type: string\n          required: true\n          description: |\n            A task ID.\n            Specifies the [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) to delete.\n      responses:\n        '204':\n          description: Success. The task and task runs are deleted. Scheduled runs are canceled.\n        '400':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/400'\n        '401':\n          $ref: '#/paths/~1tasks/get/responses/401'\n        '404':\n          $ref: '#/paths/~1tasks~1%7BtaskID%7D/get/responses/404'\n        '500':\n          $ref: '#/paths/~1users/get/responses/500'\n        default:\n          $ref: '#/paths/~1tasks/get/responses/default'\ncomponents:\n  parameters: null\n  schemas:\n    User:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        status:\n          description: If inactive the user is inactive.\n          default: active\n          type: string\n          enum:\n            - active\n            - inactive\n        role:\n          type: string\n          enum:\n            - owner\n            - member\n        org_id:\n          type: string\n      required:\n        - name\n    Users:\n      type: object\n      properties:\n        links:\n          type: object\n          properties:\n            self:\n              type: string\n              format: uri\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/OnboardingResponse/properties/user'\n    OnboardingRequest:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        org:\n          type: string\n        bucket:\n          type: string\n        retentionPeriodHrs:\n          type: integer\n          deprecated: true\n        retentionPeriodSeconds:\n          type: integer\n        limit:\n          $ref: '#/components/schemas/Limit'\n      required:\n        - username\n        - org\n        - bucket\n    OnboardingResponse:\n      type: object\n      properties:\n        user:\n          properties:\n            id:\n              readOnly: true\n              type: string\n              description: |\n                The user ID.\n            name:\n              type: string\n              description: |\n                The user name.\n            status:\n              description: |\n                The status of a user.\n                An inactive user can't read or write resources.\n              default: active\n              type: string\n              enum:\n                - active\n                - inactive\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/users/1\n              properties:\n                self:\n                  type: string\n                  format: uri\n          required:\n            - name\n        org:\n          properties:\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/orgs/1\n                members: /api/v2/orgs/1/members\n                owners: /api/v2/orgs/1/owners\n                labels: /api/v2/orgs/1/labels\n                secrets: /api/v2/orgs/1/secrets\n                buckets: /api/v2/buckets?org=myorg\n                tasks: /api/v2/tasks?org=myorg\n                dashboards: /api/v2/dashboards?org=myorg\n              properties:\n                self:\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                members:\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                owners:\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                labels:\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                secrets:\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                buckets:\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                tasks:\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                dashboards:\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n            id:\n              readOnly: true\n              type: string\n            name:\n              type: string\n            description:\n              type: string\n            createdAt:\n              type: string\n              format: date-time\n              readOnly: true\n            updatedAt:\n              type: string\n              format: date-time\n              readOnly: true\n            status:\n              description: If inactive the organization is inactive.\n              default: active\n              type: string\n              enum:\n                - active\n                - inactive\n          required:\n            - name\n        bucket:\n          properties:\n            links:\n              type: object\n              readOnly: true\n              example:\n                labels: /api/v2/buckets/1/labels\n                members: /api/v2/buckets/1/members\n                org: /api/v2/orgs/2\n                owners: /api/v2/buckets/1/owners\n                self: /api/v2/buckets/1\n                write: /api/v2/write?org=2\u0026bucket=1\n              properties:\n                labels:\n                  description: The URL to retrieve labels for this bucket.\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                members:\n                  description: The URL to retrieve members that can read this bucket.\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                org:\n                  description: The URL to retrieve parent organization for this bucket.\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                owners:\n                  description: The URL to retrieve owners that can read and write to this bucket.\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                self:\n                  description: The URL for this bucket.\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                write:\n                  description: The URL to write line protocol to this bucket.\n                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n            id:\n              readOnly: true\n              type: string\n            type:\n              readOnly: true\n              type: string\n              default: user\n              enum:\n                - user\n                - system\n            name:\n              type: string\n            description:\n              type: string\n            orgID:\n              type: string\n            rp:\n              type: string\n            schemaType:\n              default: implicit\n              type: string\n              enum:\n                - implicit\n                - explicit\n            createdAt:\n              type: string\n              format: date-time\n              readOnly: true\n            updatedAt:\n              type: string\n              format: date-time\n              readOnly: true\n            retentionRules:\n              type: array\n              description: |\n                Retention rules to expire or retain data.\n                The InfluxDB `/api/v2` API uses `RetentionRules` to configure the [retention period]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#retention-period).\n\n                #### InfluxDB Cloud\n\n                - `retentionRules` is required.\n\n                #### InfluxDB OSS\n\n                - `retentionRules` isn't required.\n              items:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    default: expire\n                    enum:\n                      - expire\n                  everySeconds:\n                    type: integer\n                    format: int64\n                    description: |\n                      The duration in seconds for how long data will be kept in the database.\n                      The default duration is 2592000 (30 days).\n                      0 represents infinite retention.\n                    example: 86400\n                    default: 2592000\n                    minimum: 0\n                  shardGroupDurationSeconds:\n                    type: integer\n                    format: int64\n                    description: |\n                      The shard group duration.\n                      The duration or interval (in seconds) that each shard group covers.\n\n                      #### InfluxDB Cloud\n\n                      - Does not use `shardGroupDurationsSeconds`.\n\n                      #### InfluxDB OSS\n\n                      - Default value depends on the\n                      [bucket retention period]({{% INFLUXDB_DOCS_URL %}}/reference/internals/shards/#shard-group-duration).\n                required:\n                  - everySeconds\n            labels:\n              $ref: '#/components/schemas/Variable/properties/labels'\n          required:\n            - name\n            - retentionRules\n        auth:\n          required:\n            - orgID\n            - permissions\n          allOf:\n            - properties:\n                status:\n                  description: 'Status of the token. If `inactive`, InfluxDB rejects requests that use the token.'\n                  default: active\n                  type: string\n                  enum:\n                    - active\n                    - inactive\n                description:\n                  type: string\n                  description: A description of the token.\n            - type: object\n              properties:\n                createdAt:\n                  type: string\n                  format: date-time\n                  readOnly: true\n                updatedAt:\n                  type: string\n                  format: date-time\n                  readOnly: true\n                orgID:\n                  type: string\n                  description: |\n                    The organization ID.\n                    Specifies the [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization) that the authorization is scoped to.\n                permissions:\n                  type: array\n                  minItems: 1\n                  description: |\n                    The list of permissions.\n                    An authorization must have at least one permission.\n                  items:\n                    required:\n                      - action\n                      - resource\n                    properties:\n                      action:\n                        type: string\n                        enum:\n                          - read\n                          - write\n                      resource:\n                        type: object\n                        required:\n                          - type\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - authorizations\n                              - buckets\n                              - dashboards\n                              - orgs\n                              - tasks\n                              - telegrafs\n                              - users\n                              - variables\n                              - secrets\n                              - labels\n                              - views\n                              - documents\n                              - notificationRules\n                              - notificationEndpoints\n                              - checks\n                              - dbrp\n                              - annotations\n                              - sources\n                              - scrapers\n                              - notebooks\n                              - remotes\n                              - replications\n                              - instance\n                              - flows\n                              - functions\n                              - subscriptions\n                            description: |\n                              A resource type.\n                              Identifies the API resource's type (or _kind_).\n                          id:\n                            type: string\n                            description: |\n                              A resource ID.\n                              Identifies a specific resource.\n                          name:\n                            type: string\n                            description: |\n                              The name of the resource.\n                              _Note: not all resource types have a `name` property_.\n                          orgID:\n                            type: string\n                            description: |\n                              An organization ID.\n                              Identifies the organization that owns the resource.\n                          org:\n                            type: string\n                            description: |\n                              An organization name.\n                              The organization that owns the resource.\n                id:\n                  readOnly: true\n                  type: string\n                  description: The authorization ID.\n                token:\n                  readOnly: true\n                  type: string\n                  description: |\n                    The API token.\n                    The token value is unique to the authorization.\n                    [API tokens]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#token) are\n                    used to authenticate and authorize InfluxDB API requests and `influx`\n                    CLI commands--after receiving the request, InfluxDB checks that the\n                    token is valid and that the `permissions` allow the requested action(s).\n                userID:\n                  readOnly: true\n                  type: string\n                  description: 'The user ID. Specifies the [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user) that owns the authorization. If _scoped_, the user that the authorization is scoped to; otherwise, the creator of the authorization.'\n                user:\n                  readOnly: true\n                  type: string\n                  description: |\n                    The user name.\n                    Specifies the [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user) that owns the authorization.\n                    If the authorization is _scoped_ to a user, the user;\n                    otherwise, the creator of the authorization.\n                org:\n                  readOnly: true\n                  type: string\n                  description: |\n                    The organization name.\n                    Specifies the [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization)\n                    that the token is scoped to.\n                links:\n                  type: object\n                  readOnly: true\n                  example:\n                    self: /api/v2/authorizations/1\n                    user: /api/v2/users/12\n                  properties:\n                    self:\n                      readOnly: true\n                      $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n                    user:\n                      readOnly: true\n                      $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n    Limit:\n      type: object\n      description: These are org limits similar to those configured in/by quartz.\n      properties:\n        orgID:\n          type: string\n        rate:\n          type: object\n          properties:\n            queryTime:\n              type: integer\n              description: Query Time in nanoseconds\n            readKBs:\n              type: integer\n              description: Query limit in kb/sec. 0 is unlimited.\n            concurrentReadRequests:\n              type: integer\n              description: Allowed concurrent queries. 0 is unlimited.\n            writeKBs:\n              type: integer\n              description: Write limit in kb/sec. 0 is unlimited.\n            concurrentWriteRequests:\n              type: integer\n              description: Allowed concurrent writes. 0 is unlimited.\n            cardinality:\n              type: integer\n              description: Allowed organization total cardinality. 0 is unlimited.\n            concurrentDeleteRequests:\n              type: integer\n              description: Allowed organization concurrent outstanding delete requests.\n            deleteRequestsPerSecond:\n              type: integer\n              description: Allowed organization delete request rate.\n          required:\n            - readKBs\n            - queryTime\n            - concurrentReadRequests\n            - writeKBs\n            - concurrentWriteRequests\n            - cardinality\n        bucket:\n          type: object\n          properties:\n            maxBuckets:\n              type: integer\n            maxRetentionDuration:\n              type: integer\n              description: Max bucket retention duration in nanoseconds. 0 is unlimited.\n          required:\n            - maxBuckets\n            - maxRetentionDuration\n        task:\n          type: object\n          properties:\n            maxTasks:\n              type: integer\n          required:\n            - maxTasks\n        dashboard:\n          type: object\n          properties:\n            maxDashboards:\n              type: integer\n          required:\n            - maxDashboards\n        check:\n          type: object\n          properties:\n            maxChecks:\n              type: integer\n          required:\n            - maxChecks\n        notificationRule:\n          type: object\n          properties:\n            maxNotifications:\n              type: integer\n            blockedNotificationRules:\n              type: string\n              description: comma separated list of notification rules\n              example: 'http,pagerduty'\n          required:\n            - maxNotifications\n            - blockNotificationRules\n        notificationEndpoint:\n          type: object\n          properties:\n            blockedNotificationEndpoints:\n              type: string\n              description: comma separated list of notification endpoints\n              example: 'http,pagerduty'\n          required:\n            - blockNotificationEndpoints\n        features:\n          type: object\n          properties:\n            allowDelete:\n              type: boolean\n              description: allow delete predicate endpoint\n      required:\n        - rate\n        - bucket\n        - task\n        - dashboard\n        - check\n        - notificationRule\n        - notificationEndpoint\n    Variable:\n      type: object\n      required:\n        - name\n        - orgID\n        - arguments\n      properties:\n        links:\n          type: object\n          readOnly: true\n          properties:\n            self:\n              type: string\n              format: uri\n            org:\n              type: string\n              format: uri\n            labels:\n              type: string\n              format: uri\n        id:\n          readOnly: true\n          type: string\n        orgID:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        selected:\n          type: array\n          items:\n            type: string\n        sort_order:\n          type: integer\n        labels:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                readOnly: true\n                type: string\n              orgID:\n                readOnly: true\n                type: string\n              name:\n                type: string\n              properties:\n                type: object\n                additionalProperties:\n                  type: string\n                description: |\n                  Key-value pairs associated with this label.\n                  To remove a property, send an update with an empty value (`\"\"`) for the key.\n                example:\n                  color: ffb3b3\n                  description: this is a description\n        arguments:\n          type: object\n          oneOf:\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - query\n                values:\n                  type: object\n                  properties:\n                    query:\n                      type: string\n                    language:\n                      type: string\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - constant\n                values:\n                  type: array\n                  items:\n                    type: string\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - map\n                values:\n                  type: object\n                  additionalProperties:\n                    type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n    Variables:\n      type: object\n      example:\n        variables:\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - hello\n            arguments:\n              type: constant\n              values:\n                - howdy\n                - hello\n                - hi\n                - yo\n                - oy\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - c\n            arguments:\n              type: map\n              values:\n                a: fdjaklfdjkldsfjlkjdsa\n                b: dfaksjfkljekfajekdljfas\n                c: fdjksajfdkfeawfeea\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - host\n            arguments:\n              type: query\n              query: 'from(bucket: \"foo\") |\u003e showMeasurements()'\n              language: flux\n      properties:\n        variables:\n          type: array\n          items:\n            $ref: '#/components/schemas/Variable'\n    ColumnDataType:\n      type: string\n      enum:\n        - integer\n        - float\n        - boolean\n        - string\n        - unsigned\n    ColumnSemanticType:\n      type: string\n      nullable: false\n      enum:\n        - timestamp\n        - tag\n        - field\n    MeasurementSchema:\n      description: Definition of a measurement schema.\n      type: object\n      example:\n        id: 1a3c5e7f9b0a8642\n        orgID: 0a3c5e7f9b0a0001\n        bucketID: ba3c5e7f9b0a0010\n        name: cpu\n        columns:\n          - name: time\n            type: integer\n            format: unix timestamp\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - name: usage_user\n            type: field\n            dataType: float\n          - name: usage_user\n            type: field\n            dataType: float\n        createdAt: '2021-01-21T00:48:40.993Z'\n        updatedAt: '2021-01-21T00:48:40.993Z'\n      required:\n        - id\n        - name\n        - columns\n        - createdAt\n        - updatedAt\n      properties:\n        id:\n          type: string\n          readOnly: true\n        orgID:\n          type: string\n          description: The ID of the organization.\n        bucketID:\n          type: string\n          description: The ID of the bucket that the measurement schema is associated with.\n        name:\n          type: string\n          nullable: false\n        columns:\n          description: Ordered collection of column definitions.\n          type: array\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n        createdAt:\n          type: string\n          format: date-time\n          readOnly: true\n        updatedAt:\n          type: string\n          format: date-time\n          readOnly: true\n    MeasurementSchemaColumn:\n      description: Definition of a measurement schema column.\n      example:\n        name: time\n        type: integer\n        format: unix timestamp\n      type: object\n      required:\n        - name\n        - type\n      properties:\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/ColumnSemanticType'\n        dataType:\n          $ref: '#/components/schemas/ColumnDataType'\n    MeasurementSchemaCreateRequest:\n      description: Create a new measurement schema.\n      type: object\n      example:\n        name: cpu\n        columns:\n          - name: time\n            type: integer\n            format: unix timestamp\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - name: usage_user\n            type: field\n            dataType: float\n          - name: usage_user\n            type: field\n            dataType: float\n      required:\n        - name\n        - columns\n      properties:\n        name:\n          description: |\n            The [measurement]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#measurement)\n            name.\n          type: string\n        columns:\n          description: Ordered collection of column definitions.\n          type: array\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n    MeasurementSchemaList:\n      description: A list of measurement schemas returning summary information\n      example:\n        measurementSchemas:\n          - id: 1a3c5e7f9b0a8642\n            orgID: 0a3c5e7f9b0a0001\n            bucketID: ba3c5e7f9b0a0010\n            name: cpu\n            createdAt: '2021-01-21T00:48:40.993Z'\n            updatedAt: '2021-01-21T00:48:40.993Z'\n          - id: 1a3c5e7f9b0a8643\n            orgID: 0a3c5e7f9b0a0001\n            bucketID: ba3c5e7f9b0a0010\n            name: memory\n            createdAt: '2021-01-21T00:48:40.993Z'\n            updatedAt: '2021-01-21T00:48:40.993Z'\n          - id: 1a3c5e7f9b0a8644\n            orgID: 0a3c5e7f9b0a0001\n            bucketID: ba3c5e7f9b0a0010\n            name: disk\n            createdAt: '2021-01-21T00:48:40.993Z'\n            updatedAt: '2021-01-21T00:48:40.993Z'\n      type: object\n      required:\n        - measurementSchemas\n      properties:\n        measurementSchemas:\n          type: array\n          items:\n            $ref: '#/components/schemas/MeasurementSchema'\n    MeasurementSchemaUpdateRequest:\n      description: Update an existing measurement schema\n      type: object\n      example:\n        columns:\n          - name: time\n            type: integer\n            format: unix timestamp\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - name: usage_user\n            type: field\n            dataType: float\n          - name: usage_user\n            type: field\n            dataType: float\n      required:\n        - columns\n      properties:\n        columns:\n          description: An ordered collection of column definitions\n          type: array\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n    Tasks:\n      type: object\n      properties:\n        links:\n          readOnly: true\n          $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n    Task:\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: |\n            The resource ID that InfluxDB uses to uniquely identify the task.\n        orgID:\n          description: |\n            An organization ID.\n            Identifies the [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization) that owns the task.\n          type: string\n        org:\n          description: |\n            An organization name.\n            Identifies the [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization) that owns the task.\n          type: string\n        name:\n          description: The name of the task.\n          type: string\n        description:\n          description: A description of the task.\n          type: string\n        ownerID:\n          description: |\n            A user ID.\n            Identifies the [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user) that owns the task.\n\n            To find a user ID, use the\n            [`GET /api/v2/users` endpoint](#operation/GetUsers) to\n            list users.\n          type: string\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n          description: |\n            `inactive` cancels scheduled runs and prevents manual runs of the task.\n        labels:\n          $ref: '#/components/schemas/Variable/properties/labels'\n        authorizationID:\n          description: |\n            An authorization ID.\n            Identifies the authorization used when the task communicates with the query engine.\n\n            To find an authorization ID, use the\n            [`GET /api/v2/authorizations` endpoint](#operation/GetAuthorizations) to\n            list authorizations.\n          type: string\n        flux:\n          description: |\n            Flux with [task configuration options]({{% INFLUXDB_DOCS_URL %}}/process-data/task-options/)\n            and the script for the task to run.\n\n            #### Related guides\n\n            - [Task configuration options]({{% INFLUXDB_DOCS_URL %}}/process-data/task-options/)\n          type: string\n          format: Flux\n        every:\n          description: 'The interval ([duration literal]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#rfc3339-timestamp)) at which the task runs. `every` also determines when the task first runs, depending on the specified time.'\n          type: string\n          format: duration\n        cron:\n          description: 'A [Cron expression](https://en.wikipedia.org/wiki/Cron#Overview) that defines the schedule on which the task runs. InfluxDB uses the system time when evaluating Cron expressions.'\n          type: string\n          format: cron\n        offset:\n          description: 'A [duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals) to delay execution of the task after the scheduled time has elapsed. `0` removes the offset.'\n          type: string\n          format: duration\n        latestCompleted:\n          description: 'A timestamp ([RFC3339 date/time format]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#rfc3339-timestamp)) of the latest scheduled and completed run.'\n          type: string\n          format: date-time\n          readOnly: true\n        lastRunStatus:\n          readOnly: true\n          type: string\n          enum:\n            - failed\n            - success\n            - canceled\n        lastRunError:\n          readOnly: true\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n          readOnly: true\n        updatedAt:\n          type: string\n          format: date-time\n          readOnly: true\n        links:\n          type: object\n          readOnly: true\n          example:\n            self: /api/v2/tasks/1\n            owners: /api/v2/tasks/1/owners\n            members: /api/v2/tasks/1/members\n            labels: /api/v2/tasks/1/labels\n            runs: /api/v2/tasks/1/runs\n            logs: /api/v2/tasks/1/logs\n          properties:\n            self:\n              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n            owners:\n              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n            members:\n              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n            runs:\n              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n            logs:\n              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n            labels:\n              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0/allOf/1/properties/links/properties/org'\n        scriptID:\n          $ref: '#/components/schemas/TaskScriptID'\n        scriptParameters:\n          $ref: '#/components/schemas/TaskScriptParameters'\n      required:\n        - id\n        - name\n        - orgID\n    TaskCreateRequest:\n      type: object\n      properties:\n        orgID:\n          $ref: '#/components/schemas/Task/properties/orgID'\n        org:\n          $ref: '#/components/schemas/Task/properties/org'\n        name:\n          $ref: '#/components/schemas/Task/properties/name'\n        description:\n          $ref: '#/components/schemas/Task/properties/description'\n        every:\n          $ref: '#/components/schemas/Task/properties/every'\n        cron:\n          $ref: '#/components/schemas/Task/properties/cron'\n        offset:\n          $ref: '#/components/schemas/Task/properties/offset'\n        status:\n          $ref: '#/components/schemas/Task/properties/status'\n        flux:\n          $ref: '#/components/schemas/Task/properties/flux'\n        scriptID:\n          $ref: '#/components/schemas/TaskScriptID'\n        scriptParameters:\n          $ref: '#/components/schemas/TaskScriptParameters'\n    TaskScriptID:\n      description: |\n        A script ID.\n        Identifies the [invokable script](#tag/Invokable-Scripts) that the task runs.\n\n        #### Related guides\n\n        - [Create a task that references a script]({{% INFLUXDB_DOCS_URL %}}/process-data/manage-tasks/create-task/#create-a-task-that-references-a-script).\n      type: string\n    TaskScriptParameters:\n      description: |\n        Key-value pairs for `params` in the script.\n        Defines the invocation parameter values passed to the [invokable script](#tag/Invokable-Scripts) specified\n        by the `scriptID` property.\n        When running the task, InfluxDB executes the script with the parameters\n        you provide.\n\n        #### Limitations\n\n        - To use the `scriptParameters` property, you must also set the `scriptID` property\n          for the task.\n\n        #### Related guides\n\n        - [Create a task that references a script]({{% INFLUXDB_DOCS_URL %}}/process-data/manage-tasks/create-task/#create-a-task-that-references-a-script).\n      type: object\n    TaskUpdateRequest:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/Task/properties/status'\n        name:\n          $ref: '#/components/schemas/Task/properties/name'\n        description:\n          $ref: '#/components/schemas/Task/properties/description'\n        every:\n          $ref: '#/components/schemas/Task/properties/every'\n        cron:\n          $ref: '#/components/schemas/Task/properties/cron'\n        offset:\n          $ref: '#/components/schemas/Task/properties/offset'\n        flux:\n          $ref: '#/components/schemas/Task/properties/flux'\n        scriptID:\n          $ref: '#/components/schemas/TaskScriptID'\n        scriptParameters:\n          $ref: '#/components/schemas/TaskScriptParameters'\n  responses: null\n  examples:\n    AuthorizationPostRequest:\n      summary: An authorization for a resource type\n      description: Creates an authorization.\n      value:\n        orgID: INFLUX_ORG_ID\n        description: iot_users read buckets\n        permissions:\n          - action: read\n            resource:\n              type: buckets\n    AuthorizationWithResourcePostRequest:\n      summary: An authorization for a resource\n      description: Creates an authorization for access to a specific resource.\n      value:\n        orgID: INFLUX_ORG_ID\n        description: iot_users read buckets\n        permissions:\n          - action: read\n            resource:\n              type: buckets\n              id: INFLUX_BUCKET_ID\n    AuthorizationWithUserPostRequest:\n      summary: An authorization scoped to a user\n      description: Creates an authorization scoped to a specific user.\n      value:\n        orgID: INFLUX_ORG_ID\n        userID: INFLUX_USER_ID\n        description: iot_user write to bucket\n        permissions:\n          - action: write\n            resource:\n              type: buckets\n              id: INFLUX_BUCKET_ID\n    TaskWithFluxRequest:\n      summary: A task with Flux\n      description: Sets the `flux` property with Flux task options and a query.\n      value:\n        flux: \"option task = {name: \\\"CPU Total 1 Hour New\\\", every: 1h}from(bucket: \\\"telegraf\\\")|\u003e range(start: -1h)|\u003e filter(fn: (r) =\u003e (r._measurement == \\\"cpu\\\"))|\u003e filter(fn: (r) =\u003e\\n\\t\\t(r._field == \\\"usage_system\\\"))|\u003e filter(fn: (r) =\u003e (r.cpu == \\\"cpu-total\\\"))|\u003e aggregateWindow(every: 1h, fn: max)|\u003e to(bucket: \\\"cpu_usage_user_total_1h\\\", org: \\\"INFLUX_ORG\\\")\"\n        status: active\n        description: This task contains Flux that configures the task schedule and downsamples CPU data every hour.\n    TaskWithScriptRequest:\n      summary: A task with an invokable script\n      description: |\n        Sets properties for a task that runs an _invokable script_.\n      value:\n        name: CPU Total 1 Hour New\n        every: 1h\n        scriptID: SCRIPT_ID\n        scriptParameters:\n          rangeStart: '-1h'\n          bucket: telegraf\n          filterField: cpu-total\n        status: active\n        description: This task runs an invokable script every hour with the defined parameters.\n  securitySchemes:\n    TokenAuthentication:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: |\n        Use the [Token authentication](#section/Authentication/TokenAuthentication)\n        scheme to authenticate to the InfluxDB API.\n\n        In your API requests, send an `Authorization` header.\n        For the header value, provide the word `Token` followed by a space and an InfluxDB API token.\n        The word `Token` is case-sensitive.\n\n        ### Syntax\n\n        `Authorization: Token INFLUX_API_TOKEN`\n\n        ### Example\n\n        #### Use Token authentication with cURL\n\n        The following example shows how to use cURL to send an API request that uses Token authentication:\n\n        ```sh\n        curl --request GET \"INFLUX_URL/api/v2/buckets\" \\\n             --header \"Authorization: Token INFLUX_API_TOKEN\"\n        ```\n\n        Replace the following:\n\n          - *`INFLUX_URL`*: your InfluxDB Cloud URL\n          - *`INFLUX_API_TOKEN`*: your [InfluxDB API token]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#token)\n\n        ### Related endpoints\n\n        - [`/authorizations` endpoints](#tag/Authorizations-(API-tokens))\n\n        ### Related guides\n\n        - [Authorize API requests]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/#authentication)\n        - [Manage API tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/)\n    BasicAuthentication:\n      type: http\n      scheme: basic\n      description: |\n        ### Basic authentication scheme\n\n        Use the HTTP Basic authentication scheme for InfluxDB `/api/v2` API operations that support it:\n\n        ### Syntax\n\n        `Authorization: Basic BASE64_ENCODED_CREDENTIALS`\n\n        To construct the `BASE64_ENCODED_CREDENTIALS`, combine the username and\n        the password with a colon (`USERNAME:PASSWORD`), and then encode the\n        resulting string in [base64](https://developer.mozilla.org/en-US/docs/Glossary/Base64).\n        Many HTTP clients encode the credentials for you before sending the\n        request.\n\n        _**Warning**: Base64-encoding can easily be reversed to obtain the original\n        username and password. It is used to keep the data intact and does not provide\n        security. You should always use HTTPS when authenticating or sending a request with\n        sensitive information._\n\n        ### Examples\n\n        In the examples, replace the following:\n\n        - **`EMAIL_ADDRESS`**: InfluxDB Cloud username (the email address the user signed up with)\n        - **`PASSWORD`**: InfluxDB Cloud [API token]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#token)\n        - **`INFLUX_URL`**: your InfluxDB Cloud URL\n\n        #### Encode credentials with cURL\n\n        The following example shows how to use cURL to send an API request that uses Basic authentication.\n        With the `--user` option, cURL encodes the credentials and passes them\n        in the `Authorization: Basic` header.\n\n        ```sh\n        curl --get \"INFLUX_URL/api/v2/signin\"\n            --user \"EMAIL_ADDRESS\":\"PASSWORD\"\n        ```\n\n        #### Encode credentials with Flux\n\n        The Flux [`http.basicAuth()` function](https://docs.influxdata.com/flux/v0.x/stdlib/http/basicauth/) returns a Base64-encoded\n        basic authentication header using a specified username and password combination.\n\n        #### Encode credentials with JavaScript\n\n        The following example shows how to use the JavaScript `btoa()` function\n        to create a Base64-encoded string:\n\n        ```js\n        btoa('EMAIL_ADDRESS:PASSWORD')\n        ```\n\n        The output is the following:\n\n        ```js\n        'VVNFUk5BTUU6UEFTU1dPUkQ='\n        ```\n\n        Once you have the Base64-encoded credentials, you can pass them in the\n        `Authorization` header--for example:\n\n        ```sh\n        curl --get \"INFLUX_URL/api/v2/signin\"\n            --header \"Authorization: Basic VVNFUk5BTUU6UEFTU1dPUkQ=\"\n        ```\n\n        To learn more about HTTP authentication, see\n        [Mozilla Developer Network (MDN) Web Docs, HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)._\nsecurity:\n  - TokenAuthentication: []\n",
			"canonicalURL": "/github.com/influxdata/openapi@00a445641ae596ea69e9cb74fd774bf92b9a2175/-/blob/contracts/cloud-diff.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/openapi/blob/00a445641ae596ea69e9cb74fd774bf92b9a2175/contracts/cloud-diff.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/dashboards\": post: operation \"PostDashboards\": responses: 201: content: application/json: schema: parse schema: oneOf: allOf: property \"cells\": items: allOf: at contracts/cloud-diff.yml:1217:41: $ref: resolve \"#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/dashboards/items/allOf/1/properties/cells/items\": resolve: can't find value for \"paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/dashboards/items/allOf/1/properties/cells/items\""
}