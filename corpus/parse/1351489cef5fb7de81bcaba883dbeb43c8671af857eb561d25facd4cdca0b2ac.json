{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MetaCell/cloud-harness"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "applications/workflows/api/openapi.yaml",
			"byteSize": 6534,
			"content": "openapi: 3.0.0\ninfo:\n    title: Workflows API\n    version: 0.1.0\n    description: Workflows API\n    contact:\n        email: cloudharness@metacell.us\n    license:\n        name: UNLICENSED\nservers:\n    - url: /api\n      description: Metacell host\npaths:\n    /operations:\n        get:\n            tags:\n                - Create and Access\n            parameters:\n                -\n                    example: Pending\n                    name: status\n                    description: filter by status\n                    schema:\n                        $ref: '#/components/schemas/OperationStatus'\n                    in: query\n                -\n                    examples:\n                        example1:\n                            value: \u003e-\n                                \"eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUzMDMzOCwic3RhcnQiOiJoZWxsby13b3JsZC05YnE2ZFx1MDAwMCJ8\"\n                    name: previous_search_token\n                    description: continue previous search (pagination chunks)\n                    schema:\n                        type: string\n                    in: query\n                -\n                    name: limit\n                    description: maximum number of records to return per page\n                    schema:\n                        default: 10\n                        maximum: 50\n                        minimum: 1\n                        type: integer\n                    in: query\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/OperationSearchResult'\n                    description: search results matching criteria\n                '400':\n                    description: bad input parameter\n            operationId: listOperations\n            summary: lists operations\n            description: |\n                see all operations for the user\n    '/operations/{name}':\n        get:\n            tags:\n                - Create and Access\n            responses:\n                '200':\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                items:\n                                    $ref: '#/components/schemas/Operation'\n                    description: search results matching criteria\n                '400':\n                    description: Bad request\n                '404':\n                    description: not found\n            operationId: getOperation\n            summary: get operation by name\n            description: |\n                retrieves an operation by its name\n        delete:\n            tags:\n                - Create and Access\n            parameters:\n                -\n                    example: my-workflow\n                    name: name\n                    schema:\n                        type: string\n                    in: path\n                    required: true\n            responses:\n                '200':\n                    description: delete OK\n                '404':\n                    description: not found\n            operationId: deleteOperation\n            summary: deletes operation by name\n            description: |\n                delete operation by its name\n        parameters:\n            -\n                examples:\n                    my-operation:\n                        value: my-operation\n                name: name\n                schema:\n                    pattern: '^[0-9A-Za-z\\s\\-]+$'\n                    type: string\n                in: path\n                required: true\n    '/operations/{name}/logs':\n        get:\n            tags:\n                - Create and Access\n            responses:\n                '200':\n                    content:\n                        text/plain:\n                            schema:\n                                type: string\n                                example: Hello world\n                    description: search results matching criteria\n                '400':\n                    description: Bad request\n                '404':\n                    description: not found\n            operationId: logOperation\n            summary: get operation by name\n            description: |\n                retrieves an operation log by its name\n        parameters:\n            -\n                examples:\n                    e1:\n                        value: '\"my-operation\"'\n                    e2:\n                        value: my-operation-122a\n                name: name\n                schema:\n                    pattern: '^[0-9A-Za-z\\s\\-]+$'\n                    type: string\n                in: path\n                required: true\ncomponents:\n    schemas:\n        OperationSearchResult:\n            description: a list of operations with meta data about the result\n            properties:\n                meta:\n                    $ref: '#/components/schemas/SearchResultData'\n                items:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Operation'\n        SearchResultData:\n            description: describes a search\n            properties:\n                continueToken:\n                    description: token to use for pagination\n                    type: string\n        Operation:\n            description: represents the status of a distributed API call\n            properties:\n                message:\n                    description: usually set when an error occurred\n                    type: string\n                    example: ''\n                name:\n                    description: operation name\n                    type: string\n                createTime:\n                    format: date-time\n                    type: string\n                    readOnly: true\n                    example: '2016-08-29T09:12:33.001Z'\n                status:\n                    $ref: '#/components/schemas/OperationStatus'\n                workflow:\n                    description: low level representation as an Argo json\n                    type: string\n        OperationStatus:\n            default: Pending\n            enum:\n                - Pending\n                - Running\n                - Error\n                - Succeeded\n                - Skipped\n                - Failed\n            type: string\ntags:\n    -\n        name: Create and Access\n        description: 'standard creation, listing and retrieve'\n",
			"canonicalURL": "/github.com/MetaCell/cloud-harness@2da748e4dd8ba9336e1551c55adec208dd41fd25/-/blob/applications/workflows/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MetaCell/cloud-harness/blob/2da748e4dd8ba9336e1551c55adec208dd41fd25/applications/workflows/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/operations/{name}\": get: operation \"getOperation\": responses: 200: content: application/json: schema: parse schema: at applications/workflows/api/openapi.yaml:69:37: items: object cannot contain 'items' field"
}