{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/xero.com/xero_accounting/2.9.4/openapi.yaml",
			"byteSize": 829802,
			"content": "openapi: 3.0.0\nservers:\n  - description: The Xero Accounting API exposes accounting and related functions of\n      the main Xero application and can be used for a variety of purposes such\n      as creating transactions like invoices and credit notes, right through to\n      extracting accounting data via our reports endpoint.\n    url: https://api.xero.com/api.xro/2.0\nx-hasEquivalentPaths: true\ninfo:\n  contact:\n    email: api@xero.com\n    name: Xero Platform Team\n    url: https://developer.xero.com\n    x-twitter: XeroAPI\n  termsOfService: https://developer.xero.com/xero-developer-platform-terms-conditions/\n  title: Xero Accounting API\n  version: 2.9.4\n  x-apisguru-categories:\n    - financial\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/XeroAPI/Xero-OpenAPI/master/xero_accounting.yaml\n      version: \"3.0\"\n  x-providerName: xero.com\n  x-serviceName: xero_accounting\npaths:\n  /Accounts:\n    get:\n      operationId: getAccounts\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\u0026quot;ACTIVE\u0026quot; AND Type==\u0026quot;BANK\u0026quot;\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + Account.StatusEnum.ACTIVE+ \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\Account::STATUS_ACTIVE .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::Account::ACTIVE}\n        - description: Order by an any element\n          example: Name ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Accounts\": [{ \"AccountID\": \"ebd06280-af70-4bed-97c6-7451a454ad85\",\n                \"Code\": \"091\", \"Name\": \"Business Savings Account\", \"Type\":\n                \"BANK\", \"TaxType\": \"NONE\", \"EnablePaymentsToAccount\": false,\n                \"BankAccountNumber\": \"0209087654321050\", \"BankAccountType\":\n                \"BANK\", \"CurrencyCode\": \"NZD\" },{ \"AccountID\":\n                \"7d05a53d-613d-4eb2-a2fc-dcb6adb80b80\", \"Code\": \"200\", \"Name\":\n                \"Sales\", \"Type\": \"REVENUE\", \"TaxType\": \"OUTPUT2\", \"Description\":\n                \"Income from any normal business activity\",\n                \"EnablePaymentsToAccount\": false }] }'\n              schema:\n                $ref: \"#/components/schemas/Accounts\"\n          description: Success - return response of type Accounts array with 0 to n Account\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Retrieves the full chart of accounts\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n        type: string\n    put:\n      operationId: createAccount\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Code\":\"123456\", \"Name\":\"Foobar\", \"Type\":\"EXPENSE\",\n              \"Description\":\"Hello World\" }'\n            schema:\n              $ref: \"#/components/schemas/Account\"\n        description: Account object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"11814c9d-3b5e-492e-93b0-fad16bf3244f\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550793549392)\\/\", \"Accounts\": [ { \"AccountID\":\n                \"66b262e2-561e-423e-8937-47d558f13442\", \"Code\": \"123456\",\n                \"Name\": \"Foobar\", \"Status\": \"ACTIVE\", \"Type\": \"EXPENSE\",\n                \"TaxType\": \"INPUT\", \"Description\": \"Hello World\", \"Class\":\n                \"EXPENSE\", \"EnablePaymentsToAccount\": false,\n                \"ShowInExpenseClaims\": false, \"ReportingCode\": \"EXP\",\n                \"ReportingCodeName\": \"Expense\", \"UpdatedDateUTC\":\n                \"\\/Date(1550793549320+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Accounts\"\n          description: Success - created new Account and return response of type Accounts\n            array with new Account\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"AccountID\":\n                \"00000000-0000-0000-0000-000000000000\", \"Code\": \"123456\",\n                \"Name\": \"Foobar\", \"Type\": \"EXPENSE\", \"Description\": \"Hello\n                World\", \"ValidationErrors\": [ { \"Message\": \"Please enter a\n                unique Name.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Creates a new chart of accounts\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: account\n          keyPascal: Account\n          object: null\n        - code: null\n          default: 123456\n          key: code\n          keyPascal: Code\n          object: account\n        - default: FooBar\n          key: name\n          keyPascal: Name\n          name: null\n          object: account\n        - csharp: Account.ClassEnum.EXPENSE\n          default: EXPENSE\n          java: com.xero.models.accounting.AccountType.EXPENSE\n          key: type\n          keyPascal: Type\n          node: AccountType.EXPENSE\n          nonString: true\n          object: account\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\AccountType::EXPENSE\n          python: AccountType.EXPENSE\n          ruby: XeroRuby::Accounting::AccountType::EXPENSE\n          type: null\n        - default: Hello World\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: account\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ code: \"123456\", name: \"Foobar\", type:\n        AccountType.EXPENSE, description: \"Hello World\" }'\n      x-ruby-requestBody: 'account = { code: \"123456\", name: \"Foobar\", type:\n        XeroRuby::Accounting::AccountType::EXPENSE, description: \"Hello World\"\n        }'\n  \"/Accounts/{AccountID}\":\n    delete:\n      operationId: deleteAccount\n      parameters:\n        - description: Unique identifier for retrieving single object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AccountID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"76bb0543-8efe-4acc-b7f6-67dfcdec37b4\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550798217216)\\/\", \"Accounts\": [ { \"AccountID\":\n                \"7f3c0bec-f3e7-4073-b4d6-cc56dd027ef1\", \"Code\": \"123456\",\n                \"Name\": \"FooBar\", \"Status\": \"DELETED\", \"Type\": \"EXPENSE\",\n                \"TaxType\": \"INPUT\", \"Description\": \"Hello World\", \"Class\":\n                \"EXPENSE\", \"EnablePaymentsToAccount\": false,\n                \"ShowInExpenseClaims\": false, \"ReportingCode\": \"EXP\",\n                \"ReportingCodeName\": \"Expense\", \"UpdatedDateUTC\":\n                \"\\/Date(1550798217210+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Accounts\"\n          description: Success - delete existing Account and return response of type\n            Accounts array with deleted Account\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"AccountID\":\n                \"00000000-0000-0000-0000-000000000000\", \"Code\": \"123456\",\n                \"Name\": \"Foobar\", \"Type\": \"EXPENSE\", \"Description\": \"Hello\n                World\", \"ValidationErrors\": [ { \"Message\": \"Please enter a\n                unique Name.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Deletes a chart of accounts\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    get:\n      operationId: getAccount\n      parameters:\n        - description: Unique identifier for retrieving single object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AccountID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"323455cc-9511-4451-a873-248d2983f38e\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550797359081)\\/\", \"Accounts\": [ { \"AccountID\":\n                \"99ce6032-0678-4aa0-8148-240c75fee33a\", \"Code\": \"123456\",\n                \"Name\": \"FooBar\", \"Status\": \"ACTIVE\", \"Type\": \"EXPENSE\",\n                \"TaxType\": \"INPUT\", \"Description\": \"Hello World\", \"Class\":\n                \"EXPENSE\", \"EnablePaymentsToAccount\": false,\n                \"ShowInExpenseClaims\": false, \"ReportingCode\": \"EXP\",\n                \"ReportingCodeName\": \"Expense\", \"UpdatedDateUTC\":\n                \"\\/Date(1550797359120+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Accounts\"\n          description: Success - return response of type Accounts array with one Account\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Retrieves a single chart of accounts by using a unique account Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateAccount\n      parameters:\n        - description: Unique identifier for retrieving single object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AccountID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{   \"Accounts\":[   {   \"Code\":\"123456\", \"Name\":\"BarFoo\",\n              \"AccountID\":\"99ce6032-0678-4aa0-8148-240c75fee33a\",\n              \"Type\":\"EXPENSE\", \"Description\":\"GoodBye World\",\n              \"TaxType\":\"INPUT\", \"EnablePaymentsToAccount\":false,\n              \"ShowInExpenseClaims\":false, \"Class\":\"EXPENSE\",\n              \"ReportingCode\":\"EXP\", \"ReportingCodeName\":\"Expense\",\n              \"UpdatedDateUTC\":\"2019-02-21T16:29:47.96-08:00\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Accounts\"\n        description: Request of type Accounts array with one Account\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"9012e75c-ec08-40a9-ae15-153fc1f35c4d\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550795389340)\\/\", \"Accounts\": [ { \"AccountID\":\n                \"99ce6032-0678-4aa0-8148-240c75fee33a\", \"Code\": \"654321\",\n                \"Name\": \"BarFoo\", \"Status\": \"ACTIVE\", \"Type\": \"EXPENSE\",\n                \"TaxType\": \"INPUT\", \"Description\": \"Good Bye World\", \"Class\":\n                \"EXPENSE\", \"EnablePaymentsToAccount\": false,\n                \"ShowInExpenseClaims\": false, \"ReportingCode\": \"EXP\",\n                \"ReportingCodeName\": \"Expense\", \"UpdatedDateUTC\":\n                \"\\/Date(1550795389333+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Accounts\"\n          description: Success - update existing Account and return response of type\n            Accounts array with updated Account\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"AccountID\":\n                \"00000000-0000-0000-0000-000000000000\", \"Code\": \"123456\",\n                \"Name\": \"Foobar\", \"Type\": \"EXPENSE\", \"Description\": \"Hello\n                World\", \"ValidationErrors\": [ { \"Message\": \"Please enter a\n                unique Name.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Updates a chart of accounts\n      tags:\n        - Accounting\n      x-example:\n        - account: null\n          is_object: true\n          key: account\n          keyPascal: Account\n        - code: null\n          default: 123456\n          key: code\n          keyPascal: Code\n          object: account\n        - default: BarFoo\n          key: name\n          keyPascal: Name\n          name: null\n          object: account\n        - csharp: Account.ClassEnum.EXPENSE\n          default: EXPENSE\n          java: com.xero.models.accounting.AccountType.EXPENSE\n          key: type\n          keyPascal: Type\n          node: AccountType.EXPENSE\n          nonString: true\n          object: account\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\AccountType::EXPENSE\n          python: AccountType.EXPENSE\n          ruby: XeroRuby::Accounting::AccountType::EXPENSE\n          type: null\n        - default: Hello World\n          description: null\n          key: description\n          keyPascal: Description\n          object: account\n        - default: NONE\n          is_last: true\n          key: taxType\n          keyPascal: TaxType\n          keySnake: tax_type\n          object: account\n          taxType: null\n        - accounts: null\n          is_object: true\n          key: accounts\n          keyPascal: Accounts\n        - accounts: null\n          is_array_add: true\n          is_last: true\n          java: Accounts\n          key: accounts\n          keyPascal: Accounts\n          object: account\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ accounts: [{ code: \"123456\", name: \"BarFoo\", accountID:\n        \"00000000-0000-0000-0000-000000000000\", type: AccountType.EXPENSE,\n        description: \"GoodBye World\", taxType: TaxType.INPUT }]}'\n      x-ruby-requestBody: '{ accounts: [{ code: \"123456\", name: \"BarFoo\", account_id:\n        \"00000000-0000-0000-0000-000000000000\", type:\n        XeroRuby::Accounting::Account::EXPENSE, description: \"GoodBye World\",\n        tax_type: XeroRuby::Accounting::TaxType::NONE }]}'\n  \"/Accounts/{AccountID}/Attachments\":\n    get:\n      operationId: getAccountAttachments\n      parameters:\n        - description: Unique identifier for Account object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AccountID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"439c1573-3cd8-4697-a9f6-81fa651ee8f3\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550852630329)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"52a643be-cd5c-489f-9778-53a9fd337756\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachment\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments for a specific accounts by using a unique account\n        Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Accounts/{AccountID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getAccountAttachmentById\n      parameters:\n        - description: Unique identifier for Account object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AccountID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for Attachment object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Account as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific account using a unique\n        attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Accounts/{AccountID}/Attachments/{FileName}\":\n    get:\n      operationId: getAccountAttachmentByFileName\n      parameters:\n        - description: Unique identifier for Account object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AccountID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Account as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves an attachment for a specific account by filename\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateAccountAttachmentByFileName\n      parameters:\n        - description: Unique identifier for Account object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AccountID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"c8d6413a-1da2-4faa-9848-21f60443e906\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550859714477)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachment\n          x-isAttachment: true\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates attachment on a specific account by filename\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createAccountAttachmentByFileName\n      parameters:\n        - description: Unique identifier for Account object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AccountID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"724cdff5-bcd1-4c5c-977e-e864c24258e0\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550856817769)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"ab95b276-9dce-4925-9077-439818ba270f\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates an attachment on a specific account\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  /BankTransactions:\n    get:\n      operationId: getBankTransactions\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"AUTHORISED\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + BankTransaction.StatusEnum.AUTHORISED +\n            \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            XeroAPI\\XeroPHP\\Models\\Accounting\\BankTransaction::STATUS_AUTHORISED\n            . \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::BankTransaction::AUTHORISED}\n        - description: Order by an any element\n          example: Type ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: Up to 100 bank transactions will be returned in a single API call\n            with line items details\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"18e7e80c-5dca-4a57-974e-8b572cc5efe8\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"/Date(1551212901659)/\", \"BankTransactions\": [ {\n                \"BankTransactionID\": \"db54aab0-ad40-4ced-bcff-0940ba20db2c\",\n                \"BankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"BatchPayment\": { \"Account\": {\n                \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\" },\n                \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\",\n                \"Date\": \"/Date(1476316800000+0000)/\", \"Type\": \"RECBATCH\",\n                \"Status\": \"AUTHORISED\", \"TotalAmount\": \"12.00\",\n                \"UpdatedDateUTC\": \"/Date(1476392487037+0000)/\", \"IsReconciled\":\n                \"false\" }, \"Type\": \"RECEIVE\", \"IsReconciled\": false,\n                \"PrepaymentID\": \"cb62750f-b49c-464b-a45b-e2e2c514c8a9\",\n                \"HasAttachments\": true, \"Contact\": { \"ContactID\":\n                \"9c2c64de-12c9-4167-b503-e2c0e1aa1f49\", \"Name\": \"sam\",\n                \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2016-10-13T00:00:00\", \"Date\":\n                \"/Date(1476316800000+0000)/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\": 10,\n                \"TotalTax\": 0, \"Total\": 10, \"UpdatedDateUTC\":\n                \"/Date(1476389616437+0000)/\", \"CurrencyCode\": \"USD\" }, {\n                \"BankTransactionID\": \"29a69c45-64ca-4805-a1cc-34990de837b3\",\n                \"BankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"Type\": \"SPEND-OVERPAYMENT\",\n                \"IsReconciled\": false, \"OverpaymentID\":\n                \"7d457db3-3b0a-47e9-8b79-81252a7bcdcb\", \"HasAttachments\": false,\n                \"Contact\": { \"ContactID\":\n                \"9c2c64de-12c9-4167-b503-e2c0e1aa1f49\", \"Name\": \"sam\",\n                \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2016-10-13T00:00:00\", \"Date\":\n                \"/Date(1476316800000+0000)/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\": 9,\n                \"TotalTax\": 0, \"Total\": 9, \"UpdatedDateUTC\":\n                \"/Date(1476389930500+0000)/\", \"CurrencyCode\": \"USD\" }, {\n                \"BankTransactionID\": \"0b89bf5c-d40b-4514-96be-36a739fb0188\",\n                \"BankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"Type\": \"SPEND-OVERPAYMENT\",\n                \"IsReconciled\": false, \"OverpaymentID\":\n                \"bf9b5f33-c0d6-4182-84a2-40848023e5a1\", \"HasAttachments\": false,\n                \"Contact\": { \"ContactID\":\n                \"9c2c64de-12c9-4167-b503-e2c0e1aa1f49\", \"Name\": \"sam\",\n                \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2016-10-13T00:00:00\", \"Date\":\n                \"/Date(1476316800000+0000)/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\": 8,\n                \"TotalTax\": 0, \"Total\": 8, \"UpdatedDateUTC\":\n                \"/Date(1476392487037+0000)/\", \"CurrencyCode\": \"USD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/BankTransactions\"\n          description: Success - return response of type BankTransactions array with 0 to\n            n BankTransaction\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves any spent or received money transactions\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreateBankTransactions\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"BankTransactions\": [ { \"Type\": \"SPEND\", \"Contact\": { \"ContactID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"Lineitems\": [ {\n              \"Description\": \"Foobar\", \"Quantity\": 1, \"UnitAmount\": 20,\n              \"AccountCode\": \"400\" } ], \"BankAccount\": { \"Code\": \"088\" } } ] }'\n            schema:\n              $ref: \"#/components/schemas/BankTransactions\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5bc1d776-3c7f-4fe8-9b2d-09e747077a88\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551213568047)\\/\", \"BankTransactions\": [ {\n                \"BankTransactionID\": \"1289c190-e46d-434b-9628-463ffdb52f00\",\n                \"BankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"Type\": \"SPEND\", \"Reference\": \"\",\n                \"IsReconciled\": false, \"CurrencyRate\": 1.000000, \"Contact\": {\n                \"ContactID\": \"5cc8cf28-567e-4d43-b287-687cfcaec47c\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Katherine Warren\",\n                \"FirstName\": \"Katherine\", \"LastName\": \"Warren\", \"EmailAddress\":\n                \"kat.warren@clampett.com\", \"BankAccountDetails\": \"\",\n                \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\":\n                \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\",\n                \"AddressLine1\": \"\", \"AddressLine2\": \"\", \"AddressLine3\": \"\",\n                \"AddressLine4\": \"\", \"City\": \"Palo Alto\", \"Region\": \"CA\",\n                \"PostalCode\": \"94020\", \"Country\": \"United States\" } ], \"Phones\":\n                [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"847-1294\",\n                \"PhoneAreaCode\": \"(626)\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1503348544227+0000)\\/\", \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-02-26T00:00:00\", \"Date\":\n                \"\\/Date(1551139200000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Inclusive\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"TAX001\", \"TaxAmount\":\n                1.74, \"LineAmount\": 20.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 1.0000, \"LineItemID\":\n                \"d2a06879-da49-4d6c-83b5-72a93a523ec6\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 18.26, \"TotalTax\": 1.74, \"Total\": 20.00,\n                \"UpdatedDateUTC\": \"\\/Date(1551213567813+0000)\\/\",\n                \"CurrencyCode\": \"USD\", \"StatusAttributeString\": \"ERROR\",\n                \"ValidationErrors\": [ { \"Message\": \"The Contact must contain at\n                least 1 of the following elements to identify the contact: Name,\n                ContactID, ContactNumber\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/BankTransactions\"\n          description: Success - return response of type BankTransactions array with new\n            BankTransaction\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates or creates one or more spent or received money transaction\n      tags:\n        - Accounting\n      x-example:\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - bankAccount: null\n          is_object: true\n          key: bankAccount\n          keyPascal: Account\n          keySnake: bank_account\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          object: bankAccount\n        - bankTransaction: null\n          is_object: true\n          key: bankTransaction\n          keyPascal: BankTransaction\n          keySnake: bank_transaction\n        - csharp: BankTransaction.TypeEnum.RECEIVE\n          default: RECEIVE\n          java: com.xero.models.accounting.BankTransaction.TypeEnum.RECEIVE\n          key: type\n          keyPascal: Type\n          node: BankTransaction.TypeEnum.RECEIVE\n          nonString: true\n          object: bankTransaction\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\BankTransaction::TYPE_RECEIVE\n          python_string: RECEIVE\n          ruby: XeroRuby::Accounting::BankTransaction::RECEIVE\n          type: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: bankTransaction\n          set_contact: null\n        - add_lineitems: null\n          is_array_add: true\n          java: LineItems\n          key: bankTransaction\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - default: bankAccount\n          is_last: true\n          is_variable: true\n          key: bankAccount\n          keyPascal: BankAccount\n          keySnake: bank_account\n          nonString: true\n          object: bankTransaction\n          python: bank_account\n          set_bankaccount: null\n        - bankTransactions: null\n          is_object: true\n          key: bankTransactions\n          keyPascal: BankTransactions\n        - add_bankTransaction: null\n          is_array_add: true\n          is_last: true\n          java: BankTransactions\n          key: bankTransactions\n          keyPascal: BankTransactions\n          keySnake: bank_transactions\n          object: bankTransaction\n          python: bank_transaction\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ bankTransactions: [{ type:\n        BankTransaction.TypeEnum.SPEND, contact: { contactId:\n        \"00000000-0000-0000-0000-000000000000\" }, lineItems: [{ description:\n        \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"000\" }],\n        bankAccount: { code: \"000\" }}]}'\n      x-ruby-requestBody: 'bank_transactions = { bank_transactions: [{ type:\n        XeroRuby::Accounting::BankTransaction::SPEND, contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, line_items: [{ description:\n        \"Foobar\", quantity: 1.0, unit_amount: 20.0, account_code: \"000\" }],\n        bank_account: { code: \"000\" }}]}'\n    put:\n      operationId: createBankTransactions\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ bankTransactions: [{ type: BankTransaction.TypeEnum.SPEND, contact:\n              { contactID: \"00000000-0000-0000-0000-000000000000\" }, lineItems:\n              [{ description: \"Foobar\", quantity: 1.0, unitAmount: 20.0,\n              accountCode: \"000\" } ], bankAccount: { code: \"000\" }}]}'\n            schema:\n              $ref: \"#/components/schemas/BankTransactions\"\n        description: BankTransactions with an array of BankTransaction objects in body\n          of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5bc1d776-3c7f-4fe8-9b2d-09e747077a88\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551213568047)\\/\", \"BankTransactions\": [ {\n                \"BankTransactionID\": \"1289c190-e46d-434b-9628-463ffdb52f00\",\n                \"BankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"Type\": \"SPEND\", \"Reference\": \"\",\n                \"IsReconciled\": false, \"CurrencyRate\": 1.000000, \"Contact\": {\n                \"ContactID\": \"5cc8cf28-567e-4d43-b287-687cfcaec47c\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Katherine Warren\",\n                \"FirstName\": \"Katherine\", \"LastName\": \"Warren\", \"EmailAddress\":\n                \"kat.warren@clampett.com\", \"BankAccountDetails\": \"\",\n                \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\":\n                \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\",\n                \"AddressLine1\": \"\", \"AddressLine2\": \"\", \"AddressLine3\": \"\",\n                \"AddressLine4\": \"\", \"City\": \"Palo Alto\", \"Region\": \"CA\",\n                \"PostalCode\": \"94020\", \"Country\": \"United States\" } ], \"Phones\":\n                [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"847-1294\",\n                \"PhoneAreaCode\": \"(626)\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1503348544227+0000)\\/\", \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-02-26T00:00:00\", \"Date\":\n                \"\\/Date(1551139200000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Inclusive\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"TAX001\", \"TaxAmount\":\n                1.74, \"LineAmount\": 20.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 1.0000, \"LineItemID\":\n                \"d2a06879-da49-4d6c-83b5-72a93a523ec6\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 18.26, \"TotalTax\": 1.74, \"Total\": 20.00,\n                \"UpdatedDateUTC\": \"\\/Date(1551213567813+0000)\\/\",\n                \"CurrencyCode\": \"USD\", \"StatusAttributeString\": \"ERROR\",\n                \"ValidationErrors\": [ { \"Message\": \"The Contact must contain at\n                least 1 of the following elements to identify the contact: Name,\n                ContactID, ContactNumber\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/BankTransactions\"\n          description: Success - return response of type BankTransactions array with new\n            BankTransaction\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates one or more spent or received money transaction\n      tags:\n        - Accounting\n      x-example:\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - bankAccount: null\n          is_object: true\n          key: bankAccount\n          keyPascal: Account\n          keySnake: bank_account\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          object: bankAccount\n        - bankTransaction: null\n          is_object: true\n          key: bankTransaction\n          keyPascal: BankTransaction\n          keySnake: bank_transaction\n        - csharp: BankTransaction.TypeEnum.RECEIVE\n          default: RECEIVE\n          java: com.xero.models.accounting.BankTransaction.TypeEnum.RECEIVE\n          key: type\n          keyPascal: Type\n          node: BankTransaction.TypeEnum.RECEIVE\n          nonString: true\n          object: bankTransaction\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\BankTransaction::TYPE_RECEIVE\n          python_string: RECEIVE\n          ruby: XeroRuby::Accounting::BankTransaction::RECEIVE\n          type: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: bankTransaction\n          set_contact: null\n        - add_lineitems: null\n          is_array_add: true\n          java: LineItems\n          key: bankTransaction\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - default: bankAccount\n          is_last: true\n          is_variable: true\n          key: bankAccount\n          keyPascal: BankAccount\n          keySnake: bank_account\n          nonString: true\n          object: bankTransaction\n          python: bank_account\n          set_bankaccount: null\n        - bankTransactions: null\n          is_object: true\n          key: bankTransactions\n          keyPascal: BankTransactions\n        - add_bankTransaction: null\n          is_array_add: true\n          is_last: true\n          java: BankTransactions\n          key: bankTransactions\n          keyPascal: BankTransactions\n          keySnake: bank_transactions\n          object: bankTransaction\n          python: bank_transaction\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ bankTransactions: [{ type:\n        BankTransaction.TypeEnum.SPEND, contact: { contactID:\n        \"00000000-0000-0000-0000-000000000000\" }, lineItems: [{ description:\n        \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"000\" } ],\n        bankAccount: { code: \"000\" }}]}'\n      x-ruby-requestBody: 'bank_transactions = { bank_transactions: [{ type:\n        XeroRuby::Accounting::BankTransaction::SPEND, contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, line_items: [{ description:\n        \"Foobar\", quantity: 1.0, unit_amount: 20.0, account_code: \"000\" } ],\n        bank_account: { code: \"000\" }}]}'\n  \"/BankTransactions/{BankTransactionID}\":\n    get:\n      operationId: getBankTransaction\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"612e204d-21ab-469b-ac84-afe0697b4461\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551212902962)\\/\", \"BankTransactions\": [ {\n                \"BankTransactionID\": \"db54aab0-ad40-4ced-bcff-0940ba20db2c\",\n                \"BankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"BatchPayment\": { \"Account\": {\n                \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\" },\n                \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\",\n                \"Date\": \"\\/Date(1476316800000+0000)\\/\", \"Type\": \"RECBATCH\",\n                \"Status\": \"AUTHORISED\", \"TotalAmount\": \"12.00\",\n                \"UpdatedDateUTC\": \"\\/Date(1476392487037+0000)\\/\",\n                \"IsReconciled\": \"false\" }, \"Type\": \"RECEIVE\", \"IsReconciled\":\n                false, \"CurrencyRate\": 1.000000, \"PrepaymentID\":\n                \"cb62750f-b49c-464b-a45b-e2e2c514c8a9\", \"HasAttachments\": true,\n                \"Attachments\": [ { \"AttachmentID\":\n                \"45dd3143-9856-42d2-9a6c-53814f67a33e\", \"FileName\":\n                \"sample2.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/banktransaction/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample2.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ],\n                \"Contact\": { \"ContactID\":\n                \"9c2c64de-12c9-4167-b503-e2c0e1aa1f49\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"sam\", \"EmailAddress\": \"\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\",\n                \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }\n                ], \"UpdatedDateUTC\": \"\\/Date(1518821703467+0000)\\/\",\n                \"ContactGroups\": [], \"DefaultCurrency\": \"USD\", \"ContactPersons\":\n                [], \"HasValidationErrors\": false }, \"DateString\":\n                \"2016-10-13T00:00:00\", \"Date\": \"\\/Date(1476316800000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\",\n                \"LineItems\": [ { \"Description\": \"hello\", \"UnitAmount\": 10.00,\n                \"TaxType\": \"OUTPUT\", \"TaxAmount\": 0.00, \"LineAmount\": 10.00,\n                \"AccountCode\": \"400\", \"Tracking\": [], \"Quantity\": 1.0000,\n                \"LineItemID\": \"40bec527-a744-4149-96c5-0ab643b51158\",\n                \"ValidationErrors\": [] } ], \"SubTotal\": 10.00, \"TotalTax\": 0.00,\n                \"Total\": 10.00, \"UpdatedDateUTC\":\n                \"\\/Date(1476389616437+0000)\\/\", \"CurrencyCode\": \"USD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/BankTransactions\"\n          description: Success - return response of type BankTransactions array with a\n            specific BankTransaction\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a single spent or received money transaction by using a\n        unique bank transaction Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateBankTransaction\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"BankTransactions\": [ { \"Type\": \"SPEND\", \"Contact\": { \"ContactID\":\n              \"00000000-0000-0000-0000-000000000000\", \"ContactStatus\": \"ACTIVE\",\n              \"Name\": \"Buzz Lightyear\", \"FirstName\": \"Buzz\", \"LastName\":\n              \"Lightyear\", \"EmailAddress\": \"buzz.Lightyear@email.com\",\n              \"ContactPersons\": [], \"BankAccountDetails\": \"\", \"Addresses\": [ {\n              \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n              \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"\",\n              \"AddressLine2\": \"\", \"AddressLine3\": \"\", \"AddressLine4\": \"\",\n              \"City\": \"Palo Alto\", \"Region\": \"CA\", \"PostalCode\": \"94020\",\n              \"Country\": \"United States\" } ], \"Phones\": [ { \"PhoneType\":\n              \"DEFAULT\", \"PhoneNumber\": \"847-1294\", \"PhoneAreaCode\": \"(626)\",\n              \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\",\n              \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n              \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\":\n              \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\":\n              \"\", \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n              \"2017-08-21T13:49:04.227-07:00\", \"ContactGroups\": [] },\n              \"Lineitems\": [], \"BankAccount\": { \"Code\": \"088\", \"Name\": \"Business\n              Wells Fargo\", \"AccountID\": \"00000000-0000-0000-0000-000000000000\"\n              }, \"IsReconciled\": false, \"Date\": \"2019-02-25\", \"Reference\": \"You\n              just updated\", \"CurrencyCode\": \"USD\", \"CurrencyRate\": 1, \"Status\":\n              \"AUTHORISED\", \"LineAmountTypes\": \"Inclusive\", \"TotalTax\": 1.74,\n              \"BankTransactionID\": \"00000000-0000-0000-0000-000000000000\",\n              \"UpdatedDateUTC\": \"2019-02-26T12:39:27.813-08:00\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/BankTransactions\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"f2c7f037-96fc-49bd-8f59-d3c7bfdd4746\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551213568875)\\/\", \"BankTransactions\": [ {\n                \"BankTransactionID\": \"1289c190-e46d-434b-9628-463ffdb52f00\",\n                \"BankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"Type\": \"SPEND\", \"Reference\": \"You\n                just updated\", \"IsReconciled\": false, \"CurrencyRate\": 1.000000,\n                \"HasAttachments\": false, \"Attachments\": [], \"Contact\": {\n                \"ContactID\": \"5cc8cf28-567e-4d43-b287-687cfcaec47c\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Katherine Warren\",\n                \"FirstName\": \"Katherine\", \"LastName\": \"Warren\", \"EmailAddress\":\n                \"kat.warren@clampett.com\", \"BankAccountDetails\": \"\",\n                \"Addresses\": [ { \"AddressType\": \"STREET\", \"City\": \"\", \"Region\":\n                \"\", \"PostalCode\": \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\",\n                \"AddressLine1\": \"\", \"AddressLine2\": \"\", \"AddressLine3\": \"\",\n                \"AddressLine4\": \"\", \"City\": \"Palo Alto\", \"Region\": \"CA\",\n                \"PostalCode\": \"94020\", \"Country\": \"United States\" } ], \"Phones\":\n                [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"847-1294\",\n                \"PhoneAreaCode\": \"(626)\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1503348544227+0000)\\/\", \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-02-25T00:00:00\", \"Date\":\n                \"\\/Date(1551052800000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Inclusive\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"TAX001\", \"TaxAmount\":\n                1.74, \"LineAmount\": 20.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 1.0000, \"LineItemID\":\n                \"d2a06879-da49-4d6c-83b5-72a93a523ec6\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 18.26, \"TotalTax\": 1.74, \"Total\": 20.00,\n                \"UpdatedDateUTC\": \"\\/Date(1551213568733+0000)\\/\",\n                \"CurrencyCode\": \"USD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/BankTransactions\"\n          description: Success - return response of type BankTransactions array with\n            updated BankTransaction\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a single spent or received money transaction\n      tags:\n        - Accounting\n      x-example:\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - bankAccount: null\n          is_object: true\n          key: bankAccount\n          keyPascal: Account\n          keySnake: bank_account\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          object: bankAccount\n        - bankTransaction: null\n          is_object: true\n          key: bankTransaction\n          keyPascal: BankTransaction\n          keySnake: bank_transaction\n        - default: You just updated\n          key: reference\n          keyPascal: Reference\n          object: bankTransaction\n          reference: null\n        - csharp: BankTransaction.TypeEnum.RECEIVE\n          default: RECEIVE\n          java: com.xero.models.accounting.BankTransaction.TypeEnum.RECEIVE\n          key: type\n          keyPascal: Type\n          node: BankTransaction.TypeEnum.RECEIVE\n          nonString: true\n          object: bankTransaction\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\BankTransaction::TYPE_RECEIVE\n          python_string: RECEIVE\n          ruby: XeroRuby::Accounting::BankTransaction::RECEIVE\n          type: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: bankTransaction\n          set_contact: null\n        - add_lineitems: null\n          is_array_add: true\n          java: LineItems\n          key: bankTransaction\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - default: bankAccount\n          is_last: true\n          is_variable: true\n          key: bankAccount\n          keyPascal: BankAccount\n          keySnake: bank_account\n          nonString: true\n          object: bankTransaction\n          python: bank_account\n          set_bankaccount: null\n        - bankTransactions: null\n          is_object: true\n          key: bankTransactions\n          keyPascal: BankTransactions\n        - add_bankTransaction: null\n          is_array_add: true\n          is_last: true\n          java: BankTransactions\n          key: bankTransactions\n          keyPascal: BankTransactions\n          keySnake: bank_transactions\n          object: bankTransaction\n          python: bank_transaction\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ bankTransactions: [{ type:\n        BankTransaction.TypeEnum.SPEND, date: \"2019-02-25\", reference: \"You just\n        updated\", status: BankTransaction.StatusEnum.AUTHORISED,\n        bankTransactionID: \"00000000-0000-0000-0000-000000000000\", lineItems:\n        [], contact: {}, bankAccount: { accountID:\n        \"00000000-0000-0000-0000-000000000000\" }}]}'\n      x-ruby-requestBody: '{ bank_transactions: [{ type:\n        XeroRuby::Accounting::BankTransaction::SPEND, date: \"2019-02-25\",\n        reference: \"You just updated\", status:\n        XeroRuby::Accounting::BankTransaction::AUTHORISED, bank_transaction_id:\n        \"00000000-0000-0000-0000-000000000000\", line_items: [], contact: {},\n        bank_account: { account_id: \"00000000-0000-0000-0000-000000000000\" }}]}'\n  \"/BankTransactions/{BankTransactionID}/Attachments\":\n    get:\n      operationId: getBankTransactionAttachments\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"c50798e1-29e9-4a30-a452-bb6e42e400c8\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551303999577)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"4508a692-e52c-4ad8-a138-2f13e22bf57b\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, {\n                \"AttachmentID\": \"45dd3143-9856-42d2-9a6c-53814f67a33e\",\n                \"FileName\": \"sample2.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample2.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with 0 to n\n            Attachment\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves any attachments from a specific bank transactions\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/BankTransactions/{BankTransactionID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getBankTransactionAttachmentById\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Xero generated unique identifier for an attachment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for BankTransaction as\n            binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves specific attachments from a specific BankTransaction using a\n        unique attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/BankTransactions/{BankTransactionID}/Attachments/{FileName}\":\n    get:\n      operationId: getBankTransactionAttachmentByFileName\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for BankTransaction as\n            binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific bank transaction by\n        filename\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateBankTransactionAttachmentByFileName\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"572ad2fe-8c23-45aa-82f9-864485327685\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551286166630)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"4508a692-e52c-4ad8-a138-2f13e22bf57b\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of Attachments array of Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates a specific attachment from a specific bank transaction by\n        filename\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createBankTransactionAttachmentByFileName\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"572ad2fe-8c23-45aa-82f9-864485327685\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551286166630)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"4508a692-e52c-4ad8-a138-2f13e22bf57b\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/BankTransactions/db54aab0-ad40-4ced-bcff-0940ba20db2c/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of Attachments array of Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates an attachment for a specific bank transaction by filename\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/BankTransactions/{BankTransactionID}/History\":\n    get:\n      operationId: getBankTransactionsHistory\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history from a specific bank transaction using a unique bank\n        transaction Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createBankTransactionHistoryRecord\n      parameters:\n        - description: Xero generated unique identifier for a bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific bank transactions\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /BankTransfers:\n    get:\n      operationId: getBankTransfers\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: HasAttachments==true\n          in: query\n          name: where\n          schema:\n            type: string\n        - description: Order by an any element\n          example: Amount ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"dfc0d130-9007-4a98-a5ef-6f01700f18e2\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551311318988)\\/\", \"BankTransfers\": [ {\n                \"BankTransferID\": \"6221458a-ef7a-4d5f-9b1c-1b96ce03833c\",\n                \"CreatedDateUTCString\": \"2016-10-17T20:46:01\", \"CreatedDateUTC\":\n                \"\\/Date(1476737161140+0000)\\/\", \"DateString\":\n                \"2016-11-12T21:10:00\", \"Date\": \"\\/Date(1478985000000+0000)\\/\",\n                \"FromBankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Name\": \"Business Wells\n                Fargo\" }, \"ToBankAccount\": { \"AccountID\":\n                \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Name\": \"My Savings\" },\n                \"Amount\": 20.00, \"FromBankTransactionID\":\n                \"a3eca480-bc04-4292-9bbd-5c57b8ba12b4\", \"ToBankTransactionID\":\n                \"4ca13f40-f3a0-4530-a442-a600f5696118\", \"HasAttachments\": true\n                }, { \"BankTransferID\": \"9f0153d5-617c-4903-887b-3875807aa27a\",\n                \"CreatedDateUTCString\": \"2016-10-21T23:28:42\", \"CreatedDateUTC\":\n                \"\\/Date(1477092522333+0000)\\/\", \"DateString\":\n                \"2016-10-19T20:10:00\", \"Date\": \"\\/Date(1476907800000+0000)\\/\",\n                \"FromBankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Name\": \"Business Wells\n                Fargo\" }, \"ToBankAccount\": { \"AccountID\":\n                \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Name\": \"My Savings\" },\n                \"Amount\": 20.00, \"FromBankTransactionID\":\n                \"cb74287e-5682-4973-b354-93e2c7a836d3\", \"ToBankTransactionID\":\n                \"4c48ba6c-f318-4405-aee6-b5efa2c70f55\", \"HasAttachments\": false\n                } ] }'\n              schema:\n                $ref: \"#/components/schemas/BankTransfers\"\n          description: Success - return response of BankTransfers array of 0 to N\n            BankTransfer\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves all bank transfers\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createBankTransfer\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"BankTransfers\": [ { \"FromBankAccount\": { \"Code\": \"090\", \"Name\": \"My\n              Savings\", \"AccountID\": \"00000000-0000-0000-0000-000000000000\",\n              \"Type\": \"BANK\", \"BankAccountNumber\": \"123455\", \"Status\": \"ACTIVE\",\n              \"BankAccountType\": \"BANK\", \"CurrencyCode\": \"USD\", \"TaxType\":\n              \"NONE\", \"EnablePaymentsToAccount\": false, \"ShowInExpenseClaims\":\n              false, \"Class\": \"ASSET\", \"ReportingCode\": \"ASS\",\n              \"ReportingCodeName\": \"Assets\", \"HasAttachments\": false,\n              \"UpdatedDateUTC\": \"2016-10-17T13:45:33.993-07:00\" },\n              \"ToBankAccount\": { \"Code\": \"088\", \"Name\": \"Business Wells Fargo\",\n              \"AccountID\": \"00000000-0000-0000-0000-000000000000\", \"Type\":\n              \"BANK\", \"BankAccountNumber\": \"123455\", \"Status\": \"ACTIVE\",\n              \"BankAccountType\": \"BANK\", \"CurrencyCode\": \"USD\", \"TaxType\":\n              \"NONE\", \"EnablePaymentsToAccount\": false, \"ShowInExpenseClaims\":\n              false, \"Class\": \"ASSET\", \"ReportingCode\": \"ASS\",\n              \"ReportingCodeName\": \"Assets\", \"HasAttachments\": false,\n              \"UpdatedDateUTC\": \"2016-06-03T08:31:14.517-07:00\" }, \"Amount\":\n              \"50.00\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/BankTransfers\"\n        description: BankTransfers with array of BankTransfer objects in request body\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"ae767b68-affd-4e17-bac0-83eaf1854dcd\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551311317475)\\/\", \"BankTransfers\": [ {\n                \"BankTransferID\": \"76eea4b6-f026-464c-b6f3-5fb39a196145\",\n                \"DateString\": \"2019-02-27T00:00:00\", \"Date\":\n                \"\\/Date(1551225600000+0000)\\/\", \"FromBankAccount\": {\n                \"AccountID\": \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Code\":\n                \"090\", \"Name\": \"My Savings\" }, \"ToBankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"Amount\": 50.00,\n                \"FromBankTransactionID\": \"e4059952-5acb-4a56-b076-53fad85f2930\",\n                \"ToBankTransactionID\": \"88e4ac17-293b-4e5a-8d8b-3ce3a0b1ee17\",\n                \"CurrencyRate\": 1.000000, \"ValidationErrors\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/BankTransfers\"\n          description: Success - return response of BankTransfers array of one BankTransfer\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a bank transfer\n      tags:\n        - Accounting\n      x-example:\n        - fromBankAccount: null\n          is_object: true\n          key: fromBankAccount\n          keyPascal: Account\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          object: fromBankAccount\n        - is_object: true\n          key: toBankAccount\n          keyPascal: Account\n          toBankAccount: null\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          object: toBankAccount\n        - bankTransfer: null\n          is_object: true\n          key: bankTransfer\n          keyPascal: BankTransfer\n          keySnake: bank_transfer\n        - default: fromBankAccount\n          is_variable: true\n          key: fromBankAccount\n          keyPascal: FromBankAccount\n          keySnake: from_bank_account\n          nonString: true\n          object: bankTransfer\n          set_fromBankAccount: null\n        - default: toBankAccount\n          is_variable: true\n          key: toBankAccount\n          keyPascal: ToBankAccount\n          keySnake: to_bank_account\n          nonString: true\n          object: bankTransfer\n          set_toBankAccount: null\n        - amount: null\n          default: 1\n          is_last: true\n          key: amount\n          keyPascal: Amount\n          nonString: true\n          object: bankTransfer\n        - bankTransfers: null\n          is_object: true\n          key: bankTransfers\n          keyPascal: BankTransfers\n        - add_bankTransfer: null\n          is_array_add: true\n          is_last: true\n          java: BankTransfers\n          key: bankTransfers\n          keyPascal: BankTransfers\n          keySnake: bank_transfers\n          object: bankTransfer\n          python: bank_transfer\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ bankTransfers: [{ fromBankAccount: { code: \"000\",\n        accountID: \"00000000-0000-0000-0000-000000000000\" }, toBankAccount: {\n        code: \"001\", accountID: \"00000000-0000-0000-0000-000000000000\" },\n        amount: \"50.00\" }]}'\n      x-ruby-requestBody: 'bank_transfers = { bank_transfers: [{ from_bank_account: {\n        code: \"000\", account_id: \"00000000-0000-0000-0000-000000000000\" },\n        to_bank_account: { code: \"001\", account_id:\n        \"00000000-0000-0000-0000-000000000000\" }, amount: \"50.00\" }]}'\n  \"/BankTransfers/{BankTransferID}\":\n    get:\n      operationId: getBankTransfer\n      parameters:\n        - description: Xero generated unique identifier for a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransferID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"1a5fa46d-5ece-4ef2-89b1-77c293b5d833\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551311320368)\\/\", \"BankTransfers\": [ {\n                \"BankTransferID\": \"6221458a-ef7a-4d5f-9b1c-1b96ce03833c\",\n                \"CreatedDateUTCString\": \"2016-10-17T20:46:01\", \"CreatedDateUTC\":\n                \"\\/Date(1476737161140+0000)\\/\", \"DateString\":\n                \"2016-11-12T21:10:00\", \"Date\": \"\\/Date(1478985000000+0000)\\/\",\n                \"FromBankAccount\": { \"AccountID\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Code\": \"088\", \"Name\":\n                \"Business Wells Fargo\" }, \"ToBankAccount\": { \"AccountID\":\n                \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Code\": \"090\", \"Name\":\n                \"My Savings\" }, \"Amount\": 20.00, \"FromBankTransactionID\":\n                \"a3eca480-bc04-4292-9bbd-5c57b8ba12b4\", \"ToBankTransactionID\":\n                \"4ca13f40-f3a0-4530-a442-a600f5696118\", \"CurrencyRate\":\n                1.000000, \"HasAttachments\": true, \"Attachments\": [ {\n                \"AttachmentID\": \"e05a6fd8-0e47-47a9-9799-b809c8267260\",\n                \"FileName\": \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/banktransfer/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/BankTransfers\"\n          description: Success - return response of BankTransfers array with one\n            BankTransfer\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves specific bank transfers by using a unique bank transfer Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/BankTransfers/{BankTransferID}/Attachments\":\n    get:\n      operationId: getBankTransferAttachments\n      parameters:\n        - description: Xero generated unique identifier for a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransferID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5cb6b587-7b02-46b6-97fe-d8ad8f20321b\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551397557272)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"e05a6fd8-0e47-47a9-9799-b809c8267260\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of Attachments array of 0 to N Attachment\n            for a Bank Transfer\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments from a specific bank transfer\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/BankTransfers/{BankTransferID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getBankTransferAttachmentById\n      parameters:\n        - description: Xero generated unique identifier for a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransferID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Xero generated unique identifier for an Attachment to a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of binary data from the Attachment to a\n            Bank Transfer\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific bank transfer using a\n        unique attachment ID\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/BankTransfers/{BankTransferID}/Attachments/{FileName}\":\n    get:\n      operationId: getBankTransferAttachmentByFileName\n      parameters:\n        - description: Xero generated unique identifier for a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransferID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a Bank Transfer\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of binary data from the Attachment to a\n            Bank Transfer\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment on a specific bank transfer by file name\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateBankTransferAttachmentByFileName\n      parameters:\n        - description: Xero generated unique identifier for a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransferID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a Bank Transfer\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"c7810140-19c2-4ff7-b3ec-b7e95ce7becf\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551398138226)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"0851935c-c4c5-4de8-9247-ce22efde6f82\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of Attachments array of 0 to N Attachment\n            for a Bank Transfer\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createBankTransferAttachmentByFileName\n      parameters:\n        - description: Xero generated unique identifier for a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransferID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a Bank Transfer\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b73ba149-76a9-4e7c-a5c6-b9230022f416\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551397998372)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"9478be4c-c707-48c1-b4a7-83d8eaf442b5\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/BankTransfers/6221458a-ef7a-4d5f-9b1c-1b96ce03833c/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of Attachments array of 0 to N Attachment\n            for a Bank Transfer\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/BankTransfers/{BankTransferID}/History\":\n    get:\n      operationId: getBankTransferHistory\n      parameters:\n        - description: Xero generated unique identifier for a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransferID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history from a specific bank transfer using a unique bank\n        transfer Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createBankTransferHistoryRecord\n      parameters:\n        - description: Xero generated unique identifier for a bank transfer\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BankTransferID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific bank transfer\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /BatchPayments:\n    description: Batch payments allow you to bundle multiple bills or invoices into\n      one payment transaction. This means a single payment in Xero can be\n      reconciled with a single transaction on the bank statement making for a\n      much simpler bank reconciliation experience.\n    get:\n      operationId: getBatchPayments\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"AUTHORISED\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + BatchPayment.StatusEnum.AUTHORISED +\n            \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            XeroAPI\\XeroPHP\\Models\\Accounting\\BatchPayment::STATUS_AUTHORISED .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::BatchPayment::AUTHORISED}\n        - description: Order by an any element\n          example: Date ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"6ab84949-4fe5-4788-a135-4d8f690d24d7\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550866184006)\\/\", \"BatchPayments\": [ { \"Account\": {\n                \"AccountID\": \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\" },\n                \"Reference\": \"Hello World\", \"BatchPaymentID\":\n                \"d0e9bbbf-5b8a-48b6-906a-035591fcb061\", \"DateString\":\n                \"2017-11-28T00:00:00\", \"Date\": \"\\/Date(1511827200000+0000)\\/\",\n                \"Payments\": [ { \"Invoice\": { \"InvoiceID\":\n                \"0975dec2-0cf6-498d-9c9f-c6775b45c61d\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] },\n                \"PaymentID\": \"97ec2ef8-f4d6-4de5-9f2a-385d41cdc2fc\", \"Amount\":\n                200.00 }, { \"Invoice\": { \"InvoiceID\":\n                \"600982d9-6605-4e11-afa1-d8dec2be7b52\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] },\n                \"PaymentID\": \"e232795f-b919-4865-a754-12f6ae8402c0\", \"Amount\":\n                200.00 }, { \"Invoice\": { \"InvoiceID\":\n                \"99a2bd54-4ab1-413c-90bb-57f6464fe5d6\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] },\n                \"PaymentID\": \"c2d571a5-38ff-4d37-9d43-dfadb4ad53ff\", \"Amount\":\n                200.00 }, { \"Invoice\": { \"InvoiceID\":\n                \"c81942c8-bfc5-4c88-a21a-b892a4a8c1c5\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] },\n                \"PaymentID\": \"0f3c18dc-49bd-47a4-a875-03c84a29978f\", \"Amount\":\n                200.00 }, { \"Invoice\": { \"InvoiceID\":\n                \"6c9a1d89-8319-42f6-87d6-7690e748af85\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] },\n                \"PaymentID\": \"43541eed-f3ac-44ac-88cb-9fe1cb7ed8b8\", \"Amount\":\n                200.00 } ], \"Type\": \"RECBATCH\", \"Status\": \"AUTHORISED\",\n                \"TotalAmount\": 1000.00, \"UpdatedDateUTC\":\n                \"\\/Date(1511893792820+0000)\\/\", \"IsReconciled\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/BatchPayments\"\n          description: Success - return response of type BatchPayments array of\n            BatchPayment objects\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves either one or many batch payments for invoices\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createBatchPayment\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"BatchPayments\": [ { \"Account\": { \"AccountID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"Reference\": \"ref\",\n              \"Date\": \"2018-08-01\", \"Payments\": [ { \"Account\": { \"Code\": \"001\"\n              }, \"Date\": \"2019-12-31\", \"Amount\": 500, \"Invoice\": { \"InvoiceID\":\n              \"00000000-0000-0000-0000-000000000000\", \"LineItems\": [],\n              \"Contact\": {}, \"Type\": \"ACCPAY\" } } ] } ] }'\n            schema:\n              $ref: \"#/components/schemas/BatchPayments\"\n        description: BatchPayments with an array of Payments in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"424745ed-6356-46ad-87d4-3585f9062fb4\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550865988111)\\/\", \"BatchPayments\": [ { \"Account\": {\n                \"AccountID\": \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\" },\n                \"Reference\": \"Foobar123\", \"BatchPaymentID\":\n                \"d318c343-208e-49fe-b04a-45642349bcf1\", \"DateString\":\n                \"2019-02-22T00:00:00\", \"Date\": \"\\/Date(1550793600000+0000)\\/\",\n                \"Payments\": [ { \"Invoice\": { \"InvoiceID\":\n                \"3323652c-155e-433b-8a73-4dde7cfbf410\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] },\n                \"PaymentID\": \"c05098fa-ae3c-4f00-80ec-0a9df07dedff\", \"Amount\":\n                1.00 }, { \"Invoice\": { \"InvoiceID\":\n                \"e4abafb4-1f5b-4d9f-80b3-9a7b815bc302\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] },\n                \"PaymentID\": \"96409489-2f7d-4804-9a6d-6b939b0e038a\", \"Amount\":\n                1.00 }, { \"Invoice\": { \"InvoiceID\":\n                \"e6039672-b161-40cd-b07b-a0178e7186ad\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [] },\n                \"PaymentID\": \"d2796067-bf71-4f06-b386-81f1454fa866\", \"Amount\":\n                1.00 } ], \"Type\": \"RECBATCH\", \"Status\": \"AUTHORISED\",\n                \"TotalAmount\": 3.00, \"UpdatedDateUTC\":\n                \"\\/Date(1550865987783+0000)\\/\", \"IsReconciled\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/BatchPayments\"\n          description: Success - return response of type BatchPayments array of\n            BatchPayment objects\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates one or many batch payments for invoices\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - is_object: true\n          key: paymentAccount\n          keyPascal: Account\n          keySnake: payment_account\n          paymentAccount: null\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: accountId\n          keyPascal: AccountID\n          keySnake: account_id\n          object: paymentAccount\n        - bankAccount: null\n          is_object: true\n          key: bankAccount\n          keyPascal: Account\n          keySnake: bank_account\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          object: bankAccount\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - default: 00000000-0000-0000-0000-000000000000\n          invoiceID: null\n          is_last: true\n          is_uuid: true\n          key: invoiceID\n          keyPascal: InvoiceID\n          keySnake: invoice_id\n          object: invoice\n        - is_object: true\n          key: payment\n          keyPascal: Payment\n          payment: null\n        - default: bankAccount\n          is_variable: true\n          key: account\n          keyPascal: Account\n          nonString: true\n          object: payment\n          python: bank_account\n          set_bankaccount: null\n        - date: null\n          default: currDate\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: payment\n          python: curr_date\n        - amount: null\n          default: 1\n          key: amount\n          keyPascal: Amount\n          nonString: true\n          object: payment\n        - default: invoice\n          is_last: true\n          is_variable: true\n          key: invoice\n          keyPascal: Invoice\n          nonString: true\n          object: payment\n          set_invoice: null\n        - is_list: true\n          key: payments\n          keyPascal: Payment\n          payments: null\n        - add_payments: null\n          is_last: true\n          is_list_add: true\n          key: payments\n          keyPascal: Payments\n          object: payment\n        - batchPayment: null\n          is_object: true\n          key: batchPayment\n          keyPascal: BatchPayment\n          keySnake: batch_payment\n        - default: paymentAccount\n          is_variable: true\n          key: account\n          keyPascal: Account\n          nonString: true\n          object: batchPayment\n          python: payment_account\n          set_paymentaccount: null\n        - date: null\n          default: currDate\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: batchPayment\n          python: curr_date\n        - default: payments\n          is_last: true\n          is_variable: true\n          key: payments\n          keyPascal: Payments\n          nonString: true\n          object: batchPayment\n          set_payments: null\n        - batchPayments: null\n          is_object: true\n          key: batchPayments\n          keyPascal: BatchPayments\n        - add_batchPayments: null\n          is_array_add: true\n          is_last: true\n          java: BatchPayments\n          key: batchPayments\n          keyPascal: BatchPayments\n          keySnake: batch_payments\n          object: batchPayment\n          python: batch_payment\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ batchPayments: [{ account: { accountId:\n        \"00000000-0000-0000-0000-000000000000\" }, reference: \"ref\", date:\n        \"2018-08-01\", payments: [{  account: { code: \"001\" }, date:\n        \"2019-12-31\", amount: 500, invoice: { invoiceId:\n        \"00000000-0000-0000-0000-000000000000\", lineItems: [], contact: {},\n        type: Invoice.TypeEnum.ACCPAY }}]}]}'\n      x-ruby-requestBody: 'batch_payments = { batch_payments: [{ account: {\n        account_id: \"00000000-0000-0000-0000-000000000000\" }, reference: \"ref\",\n        date: \"2018-08-01\", payments: [{  account: { code: \"001\" }, date:\n        \"2019-12-31\", amount: 500, invoice: { invoice_id:\n        \"00000000-0000-0000-0000-000000000000\", line_items: [], contact: {},\n        type: XeroRuby::Accounting::Invoice::ACCPAY }}]}]}'\n  \"/BatchPayments/{BatchPaymentID}/History\":\n    get:\n      operationId: getBatchPaymentHistory\n      parameters:\n        - description: Unique identifier for BatchPayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BatchPaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"c58e2f9c-baad-42a4-8bb7-f32b6f88fa04\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550898452503)\\/\", \"HistoryRecords\": [ { \"Changes\":\n                \"Approved\", \"DateUTCString\": \"2017-11-28T18:29:52\", \"DateUTC\":\n                \"\\/Date(1511893792813+0000)\\/\", \"User\": \"Buzz Lightyear\",\n                \"Details\": \"\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/HistoryRecords\"\n          description: Success - return response of HistoryRecords array of 0 to N\n            HistoryRecord\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history from a specific batch payment\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createBatchPaymentHistoryRecord\n      parameters:\n        - description: Unique identifier for BatchPayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BatchPaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ {\n                \"DateUTCString\": \"2019-02-23T05:23:20\", \"DateUTC\":\n                \"\\/Date(1550899400362)\\/\", \"Details\": \"Hello World\",\n                \"ValidationErrors\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/HistoryRecords\"\n          description: Success - return response of type HistoryRecords array of\n            HistoryRecord objects\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific batch payment\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /BrandingThemes:\n    get:\n      operationId: getBrandingThemes\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"d1a1beea-bdfe-4ee4-9dbc-27226a26cd68\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550881711906)\\/\", \"BrandingThemes\": [ {\n                \"BrandingThemeID\": \"dabc7637-62c1-4941-8a6e-ee44fa5090e7\",\n                \"Name\": \"Standard\", \"SortOrder\": 0, \"CreatedDateUTC\":\n                \"\\/Date(1464967643813+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/BrandingThemes\"\n          description: Success - return response of type BrandingThemes\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves all the branding themes\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/BrandingThemes/{BrandingThemeID}\":\n    get:\n      operationId: getBrandingTheme\n      parameters:\n        - description: Unique identifier for a Branding Theme\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BrandingThemeID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"df671650-cf14-4a7f-b609-4166933719bc\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550881713071)\\/\", \"BrandingThemes\": [ {\n                \"BrandingThemeID\": \"dabc7637-62c1-4941-8a6e-ee44fa5090e7\",\n                \"Name\": \"Standard\", \"SortOrder\": 0, \"CreatedDateUTC\":\n                \"\\/Date(1464967643813+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/BrandingThemes\"\n          description: Success - return response of type BrandingThemes with one\n            BrandingTheme\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves a specific branding theme using a unique branding theme Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/BrandingThemes/{BrandingThemeID}/PaymentServices\":\n    get:\n      operationId: getBrandingThemePaymentServices\n      parameters:\n        - description: Unique identifier for a Branding Theme\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BrandingThemeID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"bfd5adbe-0e92-48f0-8c5a-39072f6c4ed3\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551139339419)\\/\", \"PaymentServices\": [ {\n                \"PaymentServiceID\": \"8cc53aa4-ae01-45b9-b06c-69c42eeae61f\",\n                \"PaymentServiceName\": \"Buzz Lightyear\", \"PaymentServiceType\":\n                \"PayPal\" }, { \"PaymentServiceID\":\n                \"dede7858-14e3-4a46-bf95-4d4cc491e645\", \"PaymentServiceName\":\n                \"ACME Payment\", \"PaymentServiceUrl\":\n                \"https://www.payupnow.com/\", \"PaymentServiceType\": \"Custom\",\n                \"PayNowText\": \"Pay Now\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/PaymentServices\"\n          description: Success - return response of type PaymentServices array with 0 to N\n            PaymentService\n      security:\n        - OAuth2:\n            - paymentservices\n      summary: Retrieves the payment services for a specific branding theme\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: createBrandingThemePaymentServices\n      parameters:\n        - description: Unique identifier for a Branding Theme\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: BrandingThemeID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{   \"PaymentServiceID\": \"00000000-0000-0000-0000-000000000000\",\n              \"PaymentServiceName\": \"ACME Payments\", \"PaymentServiceUrl\":\n              \"https://www.payupnow.com/\", \"PayNowText\": \"Pay Now\" }'\n            schema:\n              $ref: \"#/components/schemas/PaymentService\"\n        description: PaymentService object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{   \"Id\": \"918feecb-067a-4ed9-841b-571c04eaada3\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551139338915)\\/\", \"PaymentServices\":\n                [   {   \"PaymentServiceID\":\n                \"00000000-0000-0000-0000-000000000000\", \"PaymentServiceName\":\n                \"ACME Payments\", \"PaymentServiceUrl\":\n                \"https://www.payupnow.com/\", \"PaymentServiceType\": \"Custom\",\n                \"PayNowText\": \"Pay Now\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/PaymentServices\"\n          description: Success - return response of type PaymentServices array with newly\n            created PaymentService\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - paymentservices\n      summary: Creates a new custom payment service for a specific branding theme\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: paymentService\n          keyPascal: PaymentService\n          object: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_uuid: true\n          key: paymentServiceID\n          keyPascal: PaymentServiceID\n          object: paymentService\n          paymentServiceID: null\n        - default: ACME Payments\n          key: paymentServiceName\n          keyPascal: PaymentServiceName\n          object: paymentService\n          paymentServiceName: null\n        - default: https://www.payupnow.com/\n          key: paymentServiceUrl\n          keyPascal: PaymentServiceUrl\n          object: paymentService\n          paymentServiceUrl: null\n        - default: Pay Now\n          key: payNowText\n          keyPascal: PayNowText\n          object: paymentService\n          payNowText: null\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ paymentServiceID: \"00000000-0000-0000-0000-000000000000\",\n        paymentServiceName: \"ACME Payments\", paymentServiceUrl:\n        \"https://www.payupnow.com/\", payNowText: \"Pay Now\" }'\n      x-ruby-requestBody: 'payment_service = { payment_service_id:\n        \"00000000-0000-0000-0000-000000000000\", payment_service_name: \"ACME\n        Payments\", payment_service_url: \"https://www.payupnow.com/\",\n        pay_now_text: \"Pay Now\" }'\n  /ContactGroups:\n    get:\n      operationId: getContactGroups\n      parameters:\n        - description: Filter by an any element\n          example: Status==\"ACTIVE\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + ContactGroup.StatusEnum.ACTIVE + \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\ContactGroup::STATUS_ACTIVE .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::ContactGroup::ACTIVE}\n        - description: Order by an any element\n          example: Name ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b825df86-1a72-49c9-97dd-36afc7d04bd5\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551746015603)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"d7a86b80-8dac-4d89-a334-9dcf5753676c\",\n                \"Name\": \"Suppliers\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false }, { \"ContactGroupID\":\n                \"ab089fd4-012f-4043-a6e4-e7be01e87e50\", \"Name\": \"Old\n                Group84262\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/ContactGroups\"\n          description: Success - return response of type Contact Groups array of Contact\n            Group\n      security:\n        - OAuth2:\n            - accounting.contacts.read\n      summary: Retrieves the contact Id and name of all the contacts in a contact group\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createContactGroup\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"ContactGroups\": [{ \"Name\": \"VIPs\" }]}'\n            schema:\n              $ref: \"#/components/schemas/ContactGroups\"\n        description: ContactGroups with an array of names in request body\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5afe53f9-2271-45b8-9767-88d023b71d34\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551745740920)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"d7a86b80-8dac-4d89-a334-9dcf5753676c\",\n                \"Name\": \"Suppliers\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/ContactGroups\"\n          description: Success - return response of type Contact Groups array of newly\n            created Contact Group\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ {\n                \"ContactGroupID\": \"00000000-0000-0000-0000-000000000000\",\n                \"Name\": \"Suppliers\", \"Contacts\": [], \"HasValidationErrors\":\n                true, \"ValidationErrors\": [ { \"Message\": \"You’ve reached the\n                limit of 100 contact groups.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Creates a contact group\n      tags:\n        - Accounting\n      x-example:\n        - contact: null\n          is_object: true\n          key: contactGroup\n          keyPascal: ContactGroup\n          keySnake: contact_group\n        - default: VIPs\n          is_last: true\n          key: name\n          keyPascal: Name\n          name: null\n          object: contactGroup\n        - contactGroups: null\n          is_object: true\n          key: contactGroups\n          keyPascal: ContactGroups\n        - add_ContactGroup: null\n          is_array_add: true\n          is_last: true\n          java: ContactGroups\n          key: contactGroups\n          keyPascal: ContactGroups\n          keySnake: contact_groups\n          object: contactGroup\n          python: contact_group\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ contactGroups: [{ name: \"VIPs\" }]}'\n      x-ruby-requestBody: 'contact_groups = { contact_groups: [{ name: \"VIPs\" }]}'\n  \"/ContactGroups/{ContactGroupID}\":\n    get:\n      operationId: getContactGroup\n      parameters:\n        - description: Unique identifier for a Contact Group\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactGroupID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"079c14f6-2c2d-464e-a2c7-0edf7e465723\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551746772976)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\",\n                \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [ {\n                \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\", \"Name\":\n                \"Noel Gallagher\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam\n                Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false } ],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/ContactGroups\"\n          description: Success - return response of type Contact Groups array with a\n            specific Contact Group\n      security:\n        - OAuth2:\n            - accounting.contacts.read\n      summary: Retrieves a specific contact group by using a unique contact group Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateContactGroup\n      parameters:\n        - description: Unique identifier for a Contact Group\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactGroupID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{   \"ContactGroups\":[   {   \"Name\":\"Suppliers\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/ContactGroups\"\n        description: an array of Contact groups with Name of specific group to update\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b1ba6cdb-1637-4209-bb92-bd0c593f3243\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551746288544)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"13f47537-7c1d-4e62-966e-617d76558fc5\",\n                \"Name\": \"Supplier Vendor\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/ContactGroups\"\n          description: Success - return response of type Contact Groups array of updated\n            Contact Group\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Updates a specific contact group\n      tags:\n        - Accounting\n      x-example:\n        - contact: null\n          is_object: true\n          key: contactGroup\n          keyPascal: ContactGroup\n          keySnake: contact_group\n        - default: Vendor\n          is_last: true\n          key: name\n          keyPascal: Name\n          name: null\n          object: contactGroup\n        - contactGroups: null\n          is_object: true\n          key: contactGroups\n          keyPascal: ContactGroups\n        - add_ContactGroup: null\n          is_array_add: true\n          is_last: true\n          java: ContactGroups\n          key: contactGroups\n          keyPascal: ContactGroups\n          keySnake: contact_groups\n          object: contactGroup\n          python: contact_group\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ contactGroups: [{ name: \"Vendor\" }]}'\n      x-ruby-requestBody: 'contact_groups = { contact_groups: [{ name: \"Vendor\" }]}'\n  \"/ContactGroups/{ContactGroupID}/Contacts\":\n    delete:\n      operationId: deleteContactGroupContacts\n      parameters:\n        - description: Unique identifier for a Contact Group\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactGroupID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Success - return response 204 no content\n          x-isEmpty: true\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Deletes all contacts from a specific contact group\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createContactGroupContacts\n      parameters:\n        - description: Unique identifier for a Contact Group\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactGroupID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Contacts\": [ { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\"\n              }, { \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Contacts\"\n        description: Contacts with array of contacts specifying the ContactID to be\n          added to ContactGroup in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"99db8024-6895-45c8-a1b5-54805aa8689c\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551747495785)\\/\", \"Contacts\": [ { \"ContactID\":\n                \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Addresses\": [],\n                \"Phones\": [], \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false, \"ValidationErrors\": [] }, {\n                \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\",\n                \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false,\n                \"ValidationErrors\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n          description: Success - return response of type Contacts array of added Contacts\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Creates contacts to a specific contact group\n      tags:\n        - Accounting\n      x-example:\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactID\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - contacts: null\n          is_object: true\n          key: contacts\n          keyPascal: Contacts\n        - add_contact: null\n          is_array_add: true\n          is_last: true\n          java: Contacts\n          key: contacts\n          keyPascal: Contacts\n          object: contact\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ contacts: [{ contactID:\n        \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\" }, { contactID:\n        \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\" }]}'\n      x-ruby-requestBody: 'contacts = { contacts: [{ contact_id:\n        \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\" }, { contact_id:\n        \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\" }]}'\n  \"/ContactGroups/{ContactGroupID}/Contacts/{ContactID}\":\n    delete:\n      operationId: deleteContactGroupContact\n      parameters:\n        - description: Unique identifier for a Contact Group\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactGroupID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Success - return response 204 no content\n          x-isEmpty: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Deletes a specific contact from a contact group using a unique contact Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Contacts:\n    get:\n      operationId: getContacts\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: ContactStatus==\u0026quot;ACTIVE\u0026quot;\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: ContactStatus==\u0026quot;\u0026apos; + Contact.ContactStatusEnum.ACTIVE +\n            \u0026apos;\u0026quot;\n          x-example-php: ContactStatus==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\Contact::CONTACT_STATUS_ACTIVE .\n            \u0026apos;\u0026quot;\n          x-ruby-param: ContactStatus==#{XeroRuby::Accounting::Contact::ACTIVE}\n        - description: Order by an any element\n          example: Name ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: Filter by a comma separated list of ContactIDs. Allows you to\n            retrieve a specific set of contacts in a single call.\n          example: \"\u0026quot;00000000-0000-0000-0000-000000000000\u0026quot;\"\n          explode: false\n          in: query\n          name: IDs\n          schema:\n            items:\n              format: uuid\n              type: string\n            type: array\n          style: form\n          x-example-java: Arrays.asList(UUID.fromString(\"00000000-0000-0000-0000-000000000000\"))\n          x-example-php: \"\u0026quot;00000000-0000-0000-0000-000000000000\u0026quot;\"\n        - description: e.g. page=1 - Up to 100 contacts will be returned in a single API\n            call.\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - description: e.g. includeArchived=true - Contacts with a status of ARCHIVED will\n            be included in the response\n          in: query\n          name: includeArchived\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"04e93d48-e72f-4775-b7dd-15a041fab972\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551399323399)\\/\", \"Contacts\": [ { \"ContactID\":\n                \"5cc8cf28-567e-4d43-b287-687cfcaec47c\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Katherine Warren\", \"FirstName\": \"Katherine\",\n                \"LastName\": \"Warren\", \"EmailAddress\": \"kat.warren@clampett.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"\",\n                \"AddressLine2\": \"\", \"AddressLine3\": \"\", \"AddressLine4\": \"\",\n                \"City\": \"Palo Alto\", \"Region\": \"CA\", \"PostalCode\": \"94020\",\n                \"Country\": \"United States\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DEFAULT\",\n                \"PhoneNumber\": \"847-1294\", \"PhoneAreaCode\": \"(626)\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1503348544227+0000)\\/\", \"ContactGroups\": [],\n                \"IsSupplier\": true, \"IsCustomer\": true, \"Balances\": {\n                \"AccountsReceivable\": { \"Outstanding\": 760.00, \"Overdue\": 920.00\n                }, \"AccountsPayable\": { \"Outstanding\": 231.60, \"Overdue\": 360.00\n                } }, \"ContactPersons\": [], \"HasAttachments\": false,\n                \"HasValidationErrors\": false }, { \"ContactID\":\n                \"3ec601ad-eddc-4ccb-a8ac-736e88293b1b\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Lisa Parker\", \"FirstName\": \"Lisa\",\n                \"LastName\": \"Parker\", \"EmailAddress\": \"lparker@parkerandco.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\" }, { \"AddressType\": \"POBOX\", \"AddressLine1\": \"\",\n                \"AddressLine2\": \"\", \"AddressLine3\": \"\", \"AddressLine4\": \"\",\n                \"City\": \"Anchorage\", \"Region\": \"AK\", \"PostalCode\": \"99501\",\n                \"Country\": \"United States\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DEFAULT\",\n                \"PhoneNumber\": \"266-3583\", \"PhoneAreaCode\": \"(510)\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1503348546760+0000)\\/\", \"ContactGroups\": [],\n                \"IsSupplier\": false, \"IsCustomer\": false, \"ContactPersons\": [],\n                \"HasAttachments\": false, \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n          description: Success - return response of type Contacts array with 0 to N Contact\n      security:\n        - OAuth2:\n            - accounting.contacts.read\n      summary: Retrieves all contacts in a Xero organisation\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreateContacts\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Contacts\": [ { \"Name\": \"Bruce Banner\", \"EmailAddress\":\n              \"hulk@avengers.com\", \"Phones\": [ { \"PhoneType\": \"MOBILE\",\n              \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\" } ],\n              \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\": \"OFCURRENTMONTH\"\n              }, \"Sales\": { \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\" } } } ] }'\n            schema:\n              $ref: \"#/components/schemas/Contacts\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"e997d6d7-6dad-4458-beb8-d9c1bf7f2edf\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551399321121)\\/\", \"Contacts\": [ { \"ContactID\":\n                \"00000000-0000-0000-0000-000000000000\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Bruce Banner\", \"EmailAddress\":\n                \"bruce@banner.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\",\n                \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551399321043+0000)\\/\", \"ContactGroups\": [],\n                \"IsSupplier\": false, \"IsCustomer\": false,\n                \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\":\n                [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\":\n                \"OFCURRENTMONTH\" }, \"Sales\": { \"Day\": 10, \"Type\":\n                \"DAYSAFTERBILLMONTH\" } }, \"ContactPersons\": [],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n          description: Success - return response of type Contacts array with newly created\n            Contact\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"ContactID\":\n                \"00000000-0000-0000-0000-000000000000\", \"AccountNumber\":\n                \"12345-ABCD\", \"Name\": \"Buzz Lightyear\", \"EmailAddress\":\n                \"buzzlightyear@email.com\", \"AccountsReceivableTaxType\": \"NONE\",\n                \"AccountsPayableTaxType\": \"INPUT\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"AddressLine1\": \"101 Green St\",\n                \"AddressLine2\": \"5th floor\", \"City\": \"San Francisco\", \"Region\":\n                \"CA\", \"PostalCode\": \"94041\", \"Country\": \"US\", \"AttentionTo\":\n                \"Rod Drury\", \"ValidationErrors\": [] } ], \"Phones\": [ {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"555-1212\",\n                \"PhoneAreaCode\": \"415\", \"ValidationErrors\": [] } ],\n                \"ContactGroups\": [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15,\n                \"Type\": \"OFCURRENTMONTH\", \"ValidationErrors\": [] }, \"Sales\": {\n                \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\", \"ValidationErrors\": []\n                } }, \"ContactPersons\": [], \"HasValidationErrors\": true,\n                \"ValidationErrors\": [ { \"Message\": \"The contact name Buzz\n                Lightyear is already assigned to another contact. The contact\n                name must be unique across all active contacts.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Updates or creates one or more contacts in a Xero organisation\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: phone\n          keyPascal: Phone\n          phone: null\n        - default: 555-1212\n          key: phoneNumber\n          keyPascal: PhoneNumber\n          keySnake: phone_number\n          object: phone\n          phoneNumber: null\n        - csharp: Phone.TypeEnum.MOBILE\n          default: MOBILE\n          is_last: true\n          java: com.xero.models.accounting.Phone.PhoneTypeEnum.MOBILE\n          key: phoneType\n          keyPascal: PhoneType\n          keySnake: phone_type\n          node: PhoneType.MOBILE\n          nonString: true\n          object: phone\n          phoneType: null\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\Phone::PHONE_TYPE_MOBILE\n          python_string: MOBILE\n          ruby: XeroRuby::Accounting::PhoneType::MOBILE\n        - is_list: true\n          key: phones\n          keyPascal: Phone\n          phones: null\n        - add_phone: null\n          is_last: true\n          is_list_add: true\n          key: phones\n          keyPascal: Phones\n          object: phone\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - default: Bruce Banner\n          key: name\n          keyPascal: Name\n          name: null\n          object: contact\n        - default: hulk@avengers.com\n          emailAddress: null\n          key: emailAddress\n          keyPascal: EmailAddress\n          keySnake: email_address\n          object: contact\n        - default: phones\n          is_last: true\n          is_variable: true\n          key: phones\n          keyPascal: Phones\n          nonString: true\n          object: contact\n          set_phones: null\n        - contacts: null\n          is_object: true\n          key: contacts\n          keyPascal: Contacts\n        - add_contact: null\n          is_array_add: true\n          is_last: true\n          java: Contacts\n          key: contacts\n          keyPascal: Contacts\n          object: contact\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ contacts: [{ name: \"Bruce Banner\", emailAddress:\n        \"hulk@avengers.com\", phones: [{ phoneType: Phone.PhoneTypeEnum.MOBILE,\n        phoneNumber: \"555-1212\", phoneAreaCode: \"415\" }], paymentTerms: { bills:\n        { day: 15, type: PaymentTermType.OFCURRENTMONTH }, sales: { day: 10,\n        type: PaymentTermType.DAYSAFTERBILLMONTH }}}]}'\n      x-ruby-requestBody: '{ contacts: [{ name: \"Bruce Banner\", email_address:\n        \"hulk@avengers.com\", phones: [{ phone_type:\n        XeroRuby::Accounting::Phone::MOBILE, phone_number: \"555-1212\",\n        phone_area_code: \"415\" }], payment_terms: { bills: { day: 15, type:\n        XeroRuby::Accounting::PaymentTermType::OFCURRENTMONTH }, sales: { day:\n        10, type:\n        XeroRuby::Accounting::PaymentTermType::OFCURRENTMONTHDAYSAFTERBILLMONTH\n        }}}]}'\n    put:\n      operationId: createContacts\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Id\": \"e997d6d7-6dad-4458-beb8-d9c1bf7f2edf\", \"Status\": \"OK\",\n              \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n              \"/Date(1551399321121)/\", \"Contacts\": [ { \"ContactID\":\n              \"3ff6d40c-af9a-40a3-89ce-3c1556a25591\", \"ContactStatus\": \"ACTIVE\",\n              \"Name\": \"Foo9987\", \"EmailAddress\": \"sid32476@blah.com\",\n              \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n              \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n              \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\",\n              \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n              \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n              \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\": \"\",\n              \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n              \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\":\n              \"\" }, { \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"555-1212\",\n              \"PhoneAreaCode\": \"415\", \"PhoneCountryCode\": \"\" } ],\n              \"UpdatedDateUTC\": \"/Date(1551399321043+0000)/\", \"ContactGroups\":\n              [], \"IsSupplier\": false, \"IsCustomer\": false,\n              \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\": [],\n              \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\": \"OFCURRENTMONTH\"\n              }, \"Sales\": { \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\" } },\n              \"ContactPersons\": [], \"HasValidationErrors\": false } ] }'\n            schema:\n              $ref: \"#/components/schemas/Contacts\"\n        description: Contacts with an array of Contact objects to create in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"e997d6d7-6dad-4458-beb8-d9c1bf7f2edf\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551399321121)\\/\", \"Contacts\": [ { \"ContactID\":\n                \"3ff6d40c-af9a-40a3-89ce-3c1556a25591\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Foo9987\", \"EmailAddress\":\n                \"sid32476@blah.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\",\n                \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551399321043+0000)\\/\", \"ContactGroups\": [],\n                \"IsSupplier\": false, \"IsCustomer\": false,\n                \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\":\n                [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\":\n                \"OFCURRENTMONTH\" }, \"Sales\": { \"Day\": 10, \"Type\":\n                \"DAYSAFTERBILLMONTH\" } }, \"ContactPersons\": [],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n          description: Success - return response of type Contacts array with newly created\n            Contact\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"ContactID\":\n                \"00000000-0000-0000-0000-000000000000\", \"AccountNumber\":\n                \"12345-ABCD\", \"Name\": \"Buzz Lightyear\", \"EmailAddress\":\n                \"buzzlightyear@email.com\", \"AccountsReceivableTaxType\": \"NONE\",\n                \"AccountsPayableTaxType\": \"INPUT\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"AddressLine1\": \"101 Green St\",\n                \"AddressLine2\": \"5th floor\", \"City\": \"San Francisco\", \"Region\":\n                \"CA\", \"PostalCode\": \"94041\", \"Country\": \"US\", \"AttentionTo\":\n                \"Rod Drury\", \"ValidationErrors\": [] } ], \"Phones\": [ {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"555-1212\",\n                \"PhoneAreaCode\": \"415\", \"ValidationErrors\": [] } ],\n                \"ContactGroups\": [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15,\n                \"Type\": \"OFCURRENTMONTH\", \"ValidationErrors\": [] }, \"Sales\": {\n                \"Day\": 10, \"Type\": \"DAYSAFTERBILLMONTH\", \"ValidationErrors\": []\n                } }, \"ContactPersons\": [], \"HasValidationErrors\": true,\n                \"ValidationErrors\": [ { \"Message\": \"The contact name Buzz\n                Lightyear is already assigned to another contact. The contact\n                name must be unique across all active contacts.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Creates multiple contacts (bulk) in a Xero organisation\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: phone\n          keyPascal: Phone\n          phone: null\n        - default: 555-1212\n          key: phoneNumber\n          keyPascal: PhoneNumber\n          keySnake: phone_number\n          object: phone\n          phoneNumber: null\n        - csharp: Phone.TypeEnum.MOBILE\n          default: MOBILE\n          is_last: true\n          java: com.xero.models.accounting.Phone.PhoneTypeEnum.MOBILE\n          key: phoneType\n          keyPascal: PhoneType\n          keySnake: phone_type\n          node: PhoneType.MOBILE\n          nonString: true\n          object: phone\n          phoneType: null\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\Phone::PHONE_TYPE_MOBILE\n          python_string: MOBILE\n          ruby: XeroRuby::Accounting::PhoneType::MOBILE\n        - is_list: true\n          key: phones\n          keyPascal: Phone\n          phones: null\n        - add_phone: null\n          is_last: true\n          is_list_add: true\n          key: phones\n          keyPascal: Phones\n          object: phone\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - default: Bruce Banner\n          key: name\n          keyPascal: Name\n          name: null\n          object: contact\n        - default: hulk@avengers.com\n          emailAddress: null\n          key: emailAddress\n          keyPascal: EmailAddress\n          keySnake: email_address\n          object: contact\n        - default: phones\n          is_last: true\n          is_variable: true\n          key: phones\n          keyPascal: Phones\n          nonString: true\n          object: contact\n          set_phones: null\n        - contacts: null\n          is_object: true\n          key: contacts\n          keyPascal: Contacts\n        - add_contact: null\n          is_array_add: true\n          is_last: true\n          java: Contacts\n          key: contacts\n          keyPascal: Contacts\n          object: contact\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ contacts: [{ name: \"Bruce Banner\", emailAddress:\n        \"hulk@avengers.com\", phones: [{ phoneType: Phone.PhoneTypeEnum.MOBILE,\n        phoneNumber: \"555-1212\", phoneAreaCode: \"415\" }], paymentTerms: { bills:\n        { day: 15, type: PaymentTermType.OFCURRENTMONTH }, sales: { day: 10,\n        type: PaymentTermType.DAYSAFTERBILLMONTH }}}]}'\n      x-ruby-requestBody: 'contacts = { contacts: [{ name: \"Bruce Banner\",\n        email_address: \"hulk@avengers.com\", phones: [{ phone_type:\n        XeroRuby::Accounting::Phone::MOBILE, phone_number: \"555-1212\",\n        phone_area_code: \"415\" }], payment_terms: { bills: { day: 15, type:\n        XeroRuby::Accounting::PaymentTermType::OFCURRENTMONTH }, sales: { day:\n        10, type: XeroRuby::Accounting::PaymentTermType::DAYSAFTERBILLMONTH\n        }}}]}'\n  \"/Contacts/{ContactID}\":\n    get:\n      operationId: getContact\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5c83b115-a6e8-4f2a-877f-ba63d009235b\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551462703288)\\/\", \"Contacts\": [ { \"ContactID\":\n                \"8138a266-fb42-49b2-a104-014b7045753d\", \"ContactNumber\": \"SB2\",\n                \"AccountNumber\": \"1234567\", \"ContactStatus\": \"ACTIVE\", \"Name\":\n                \"Acme Parts Co.\", \"FirstName\": \"Blake\", \"LastName\": \"Kohler\",\n                \"EmailAddress\": \"bk@krave.co\", \"SkypeUserName\": \"blake\",\n                \"BankAccountDetails\": \"12334567\", \"TaxNumber\": \"123-22-3456\",\n                \"AccountsReceivableTaxType\": \"TAX003\", \"AccountsPayableTaxType\":\n                \"TAX022\", \"Addresses\": [ { \"AddressType\": \"STREET\",\n                \"AddressLine1\": \"123 Fake Street\", \"City\": \"Vancouver\",\n                \"Region\": \"British Columbia\", \"PostalCode\": \"V6B 2T4\",\n                \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\",\n                \"AddressLine1\": \"1234 Fake Street\", \"City\": \"Vancouver\",\n                \"Region\": \"British Columbia\", \"PostalCode\": \"V6B 2T4\",\n                \"Country\": \"\", \"AttentionTo\": \"Blake\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DDI\", \"PhoneNumber\": \"489-44493\", \"PhoneAreaCode\":\n                \"345\", \"PhoneCountryCode\": \"4\" }, { \"PhoneType\": \"DEFAULT\",\n                \"PhoneNumber\": \"408-0914\", \"PhoneAreaCode\": \"604\",\n                \"PhoneCountryCode\": \"1\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"123-9933\", \"PhoneAreaCode\": \"123\", \"PhoneCountryCode\": \"2\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"999-44\", \"PhoneAreaCode\":\n                \"234\", \"PhoneCountryCode\": \"3\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551459777193+0000)\\/\", \"ContactGroups\": [],\n                \"IsSupplier\": true, \"IsCustomer\": true, \"DefaultCurrency\":\n                \"USD\", \"Discount\": 13.00, \"Website\": \"http://www.google.com\",\n                \"BrandingTheme\": { \"BrandingThemeID\":\n                \"dabc7637-62c1-4941-8a6e-ee44fa5090e7\", \"Name\": \"Standard\" },\n                \"PurchasesDefaultAccountCode\": \"660\", \"SalesDefaultAccountCode\":\n                \"002\", \"BatchPayments\": { \"BankAccountNumber\": \"12334567\",\n                \"BankAccountName\": \"Citi Bank\", \"Details\": \"biz checking\",\n                \"Code\": \"\", \"Reference\": \"\" }, \"Balances\": {\n                \"AccountsReceivable\": { \"Outstanding\": 118.90, \"Overdue\": 136.90\n                }, \"AccountsPayable\": { \"Outstanding\": -43.60, \"Overdue\": 40.00\n                } }, \"PaymentTerms\": { \"Bills\": { \"Day\": 12, \"Type\":\n                \"OFFOLLOWINGMONTH\" }, \"Sales\": { \"Day\": 14, \"Type\":\n                \"OFCURRENTMONTH\" } }, \"ContactPersons\": [ { \"FirstName\": \"Sue\",\n                \"LastName\": \"Johnson\", \"EmailAddress\": \"sue.johnson@krave.com\",\n                \"IncludeInEmails\": true } ], \"HasAttachments\": true,\n                \"Attachments\": [ { \"AttachmentID\":\n                \"04e0a3e3-b116-456a-9f32-9706f0d33afa\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n          description: Success - return response of type Contacts array with a unique\n            Contact\n      security:\n        - OAuth2:\n            - accounting.contacts.read\n      summary: Retrieves a specific contacts in a Xero organisation using a unique\n        contact Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateContact\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Contacts\": [{ \"ContactID\": \"00000000-0000-0000-0000-000000000000\",\n              \"Name\": \"Thanos\" }]}'\n            schema:\n              $ref: \"#/components/schemas/Contacts\"\n        description: an array of Contacts containing single Contact object with\n          properties to update\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"4166b727-c3f0-4881-acd0-d4f7c0e8fcda\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551400031795)\\/\", \"Contacts\": [ { \"ContactID\":\n                \"d5be01fb-b09f-4c3a-9c67-e10c2a03412c\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"FooBar\", \"EmailAddress\": \"sid30680@blah.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\",\n                \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"555-1212\", \"PhoneAreaCode\": \"415\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551400031763+0000)\\/\", \"ContactGroups\": [],\n                \"IsSupplier\": false, \"IsCustomer\": false,\n                \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\":\n                [], \"PaymentTerms\": { \"Bills\": { \"Day\": 15, \"Type\":\n                \"OFCURRENTMONTH\" }, \"Sales\": { \"Day\": 10, \"Type\":\n                \"DAYSAFTERBILLMONTH\" } }, \"ContactPersons\": [],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n          description: Success - return response of type Contacts array with an updated\n            Contact\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Updates a specific contact in a Xero organisation\n      tags:\n        - Accounting\n      x-example:\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - default: Thanos\n          key: name\n          keyPascal: Name\n          name: null\n          object: contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactID\n          keyPascal: ContactID\n          object: contact\n        - contacts: null\n          is_object: true\n          key: contacts\n          keyPascal: Contacts\n        - add_contact: null\n          is_array_add: true\n          is_last: true\n          java: Contacts\n          key: contacts\n          keyPascal: Contacts\n          object: contact\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ contacts: [{ contactID:\n        \"00000000-0000-0000-0000-000000000000\", name: \"Thanos\" }]}'\n      x-ruby-requestBody: 'contacts = { contacts: [{ contact_id:\n        \"00000000-0000-0000-0000-000000000000\", name: \"Thanos\" }]}'\n  \"/Contacts/{ContactID}/Attachments\":\n    get:\n      operationId: getContactAttachments\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"0f63b631-a205-496d-b1d2-e6b13a9b497b\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551483890413)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"04e0a3e3-b116-456a-9f32-9706f0d33afa\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with 0 to N\n            Attachment\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments for a specific contact in a Xero organisation\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Contacts/{ContactID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getContactAttachmentById\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for a Attachment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Contact as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific contact using a unique\n        attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Contacts/{ContactID}/Attachments/{FileName}\":\n    get:\n      operationId: getContactAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name for the file you are attaching\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Contact as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific contact by file name\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateContactAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name for the file you are attaching\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"8543ae1a-297c-49b8-bf91-47decac452d5\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551485146555)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"8b537c1b-bbb5-47fd-857e-370c369dda7c\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with an updated\n            Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createContactAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name for the file you are attaching\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"a5eddf71-86aa-42f5-99e2-0aaf9caf96b6\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551484292734)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"27e37b01-6996-4ebe-836c-95fd472ad674\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with an newly\n            created Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/Contacts/{ContactID}/CISSettings\":\n    get:\n      operationId: getContactCISSettings\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CISSettings\"\n          description: Success - return response of type CISSettings for a specific Contact\n      security:\n        - OAuth2:\n            - accounting.contacts.read\n      summary: Retrieves CIS settings for a specific contact in a Xero organisation\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Contacts/{ContactID}/History\":\n    get:\n      operationId: getContactHistory\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.contacts.read\n      summary: Retrieves history records for a specific contact\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createContactHistory\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ContactID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.contacts\n      summary: Creates a new history record for a specific contact\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  \"/Contacts/{ContactNumber}\":\n    get:\n      operationId: getContactByContactNumber\n      parameters:\n        - description: This field is read only on the Xero contact screen, used to\n            identify contacts in external systems (max length = 50).\n          example: SB2\n          in: path\n          name: ContactNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5c83b115-a6e8-4f2a-877f-ba63d009235b\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1551462703288)\\/\", \"Contacts\": [ { \"ContactID\":\n                \"8138a266-fb42-49b2-a104-014b7045753d\", \"ContactNumber\": \"SB2\",\n                \"AccountNumber\": \"1234567\", \"ContactStatus\": \"ACTIVE\", \"Name\":\n                \"Acme Parts Co.\", \"FirstName\": \"Blake\", \"LastName\": \"Kohler\",\n                \"EmailAddress\": \"bk@krave.co\", \"SkypeUserName\": \"blake\",\n                \"BankAccountDetails\": \"12334567\", \"TaxNumber\": \"123-22-3456\",\n                \"AccountsReceivableTaxType\": \"TAX003\", \"AccountsPayableTaxType\":\n                \"TAX022\", \"Addresses\": [ { \"AddressType\": \"STREET\",\n                \"AddressLine1\": \"123 Fake Street\", \"City\": \"Vancouver\",\n                \"Region\": \"British Columbia\", \"PostalCode\": \"V6B 2T4\",\n                \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\",\n                \"AddressLine1\": \"1234 Fake Street\", \"City\": \"Vancouver\",\n                \"Region\": \"British Columbia\", \"PostalCode\": \"V6B 2T4\",\n                \"Country\": \"\", \"AttentionTo\": \"Blake\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DDI\", \"PhoneNumber\": \"489-44493\", \"PhoneAreaCode\":\n                \"345\", \"PhoneCountryCode\": \"4\" }, { \"PhoneType\": \"DEFAULT\",\n                \"PhoneNumber\": \"408-0914\", \"PhoneAreaCode\": \"604\",\n                \"PhoneCountryCode\": \"1\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"123-9933\", \"PhoneAreaCode\": \"123\", \"PhoneCountryCode\": \"2\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"999-44\", \"PhoneAreaCode\":\n                \"234\", \"PhoneCountryCode\": \"3\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551459777193+0000)\\/\", \"ContactGroups\": [],\n                \"IsSupplier\": true, \"IsCustomer\": true, \"DefaultCurrency\":\n                \"USD\", \"Discount\": 13.00, \"Website\": \"http://www.google.com\",\n                \"BrandingTheme\": { \"BrandingThemeID\":\n                \"dabc7637-62c1-4941-8a6e-ee44fa5090e7\", \"Name\": \"Standard\" },\n                \"PurchasesDefaultAccountCode\": \"660\", \"SalesDefaultAccountCode\":\n                \"002\", \"BatchPayments\": { \"BankAccountNumber\": \"12334567\",\n                \"BankAccountName\": \"Citi Bank\", \"Details\": \"biz checking\",\n                \"Code\": \"\", \"Reference\": \"\" }, \"Balances\": {\n                \"AccountsReceivable\": { \"Outstanding\": 118.90, \"Overdue\": 136.90\n                }, \"AccountsPayable\": { \"Outstanding\": -43.60, \"Overdue\": 40.00\n                } }, \"PaymentTerms\": { \"Bills\": { \"Day\": 12, \"Type\":\n                \"OFFOLLOWINGMONTH\" }, \"Sales\": { \"Day\": 14, \"Type\":\n                \"OFCURRENTMONTH\" } }, \"ContactPersons\": [ { \"FirstName\": \"Sue\",\n                \"LastName\": \"Johnson\", \"EmailAddress\": \"sue.johnson@krave.com\",\n                \"IncludeInEmails\": true } ], \"HasAttachments\": true,\n                \"Attachments\": [ { \"AttachmentID\":\n                \"04e0a3e3-b116-456a-9f32-9706f0d33afa\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ],\n                \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n          description: Success - return response of type Contacts array with a unique\n            Contact\n      security:\n        - OAuth2:\n            - accounting.contacts.read\n      summary: Retrieves a specific contact by contact number in a Xero organisation\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /CreditNotes:\n    get:\n      operationId: getCreditNotes\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"DRAFT\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + CreditNote.StatusEnum.DRAFT + \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\CreditNote::STATUS_DRAFT .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::CreditNote::DRAFT}\n        - description: Order by an any element\n          example: CreditNoteNumber ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: e.g. page=1 – Up to 100 credit notes will be returned in a single\n            API call with line items shown for each credit note\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"306379b0-3d75-4c77-953a-be08fa0efae8\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551812506620)\\/\", \"CreditNotes\": [ { \"CreditNoteID\":\n                \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"CreditNoteNumber\":\n                \"CN-0005\", \"Payments\": [ { \"PaymentID\":\n                \"6b037c9b-2e5d-4905-84d3-eabfb3438242\", \"Date\":\n                \"\\/Date(1552521600000+0000)\\/\", \"Amount\": 2.00, \"Reference\":\n                \"Too much\", \"CurrencyRate\": 1.000000, \"HasAccount\": false,\n                \"HasValidationErrors\": false } ], \"ID\":\n                \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"CurrencyRate\":\n                1.000000, \"Type\": \"ACCRECCREDIT\", \"Reference\": \"US Tour\",\n                \"RemainingCredit\": 32.50, \"Allocations\": [], \"HasAttachments\":\n                true, \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam\n                Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-03-05T00:00:00\", \"Date\":\n                \"\\/Date(1551744000000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\":\n                30.00, \"TotalTax\": 4.50, \"Total\": 34.50, \"UpdatedDateUTC\":\n                \"\\/Date(1551812346157+0000)\\/\", \"CurrencyCode\": \"NZD\" }, {\n                \"CreditNoteID\": \"f8021bd2-9a6a-4c19-8477-163da0b9290f\",\n                \"CreditNoteNumber\": \"\", \"Payments\": [], \"ID\":\n                \"f8021bd2-9a6a-4c19-8477-163da0b9290f\", \"CurrencyRate\":\n                1.000000, \"Type\": \"ACCPAYCREDIT\", \"Reference\": \"\",\n                \"RemainingCredit\": 46.00, \"Allocations\": [], \"HasAttachments\":\n                false, \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam\n                Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-01-05T00:00:00\", \"Date\":\n                \"\\/Date(1546646400000+0000)\\/\", \"Status\": \"DRAFT\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\":\n                40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\":\n                \"\\/Date(1551812506153+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/CreditNotes\"\n          description: Success - return response of type Credit Notes array of CreditNote\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves any credit notes\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreateCreditNotes\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{   \"CreditNotes\":[   {   \"Type\":\"ACCPAYCREDIT\",\n              \"Contact\":{   \"ContactID\":\"430fa14a-f945-44d3-9f97-5df5e28441b8\"\n              }, \"Date\":\"2019-01-05\", \"Status\":\"AUTHORISED\", \"Reference\":\n              \"HelloWorld\", \"LineItems\":[   {   \"Description\":\"Foobar\",\n              \"Quantity\":2.0, \"UnitAmount\":20.0, \"AccountCode\":\"400\" } ] } ] }'\n            schema:\n              $ref: \"#/components/schemas/CreditNotes\"\n        description: an array of Credit Notes with a single CreditNote object.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5e57a661-42da-4a19-96a0-00405a0e946d\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551812702713)\\/\", \"CreditNotes\": [ { \"CreditNoteID\":\n                \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CreditNoteNumber\": \"\",\n                \"Payments\": [], \"ID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\",\n                \"CurrencyRate\": 1.000000, \"Type\": \"ACCPAYCREDIT\", \"Reference\":\n                \"\", \"RemainingCredit\": 46.00, \"Allocations\": [], \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\",\n                \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\":\n                \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ],\n                \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\",\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-01-05T00:00:00\", \"Date\": \"\\/Date(1546646400000+0000)\\/\",\n                \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\":\n                [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\":\n                \"INPUT2\", \"TaxAmount\": 6.00, \"LineAmount\": 40.00, \"AccountCode\":\n                \"400\", \"Tracking\": [], \"Quantity\": 2.0000, \"ValidationErrors\":\n                [] } ], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00,\n                \"UpdatedDateUTC\": \"\\/Date(1551812702650+0000)\\/\",\n                \"CurrencyCode\": \"NZD\", \"StatusAttributeString\": \"OK\",\n                \"ValidationErrors\": [ { \"Message\": \"An existing Credit Note with\n                the specified CreditNoteID could not be found\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/CreditNotes\"\n          description: Success - return response of type Credit Notes array of newly\n            created CreditNote\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates or creates one or more credit notes\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - creditNote: null\n          is_object: true\n          key: creditNote\n          keyPascal: CreditNote\n          keySnake: credit_note\n        - csharp: CreditNote.xxx\n          default: ACCPAYCREDIT\n          java: com.xero.models.accounting.CreditNote.TypeEnum.ACCPAYCREDIT\n          key: type\n          keyPascal: Type\n          node: CreditNote.TypeEnum.ACCPAYCREDIT\n          nonString: true\n          object: creditNote\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\CreditNote::TYPE_ACCPAYCREDIT\n          python_string: ACCPAYCREDIT\n          ruby: XeroRuby::Accounting::CreditNote::ACCPAYCREDIT\n          type: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: creditNote\n          set_contact: null\n        - date: null\n          default: currDate\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: creditNote\n          python: curr_date\n        - default: lineItems\n          is_last: true\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: creditNote\n          python: line_items\n          set_lineitem: null\n        - creditNotes: null\n          is_object: true\n          key: creditNotes\n          keyPascal: CreditNotes\n        - add_creditNote: null\n          is_array_add: true\n          is_last: true\n          java: CreditNotes\n          key: creditNotes\n          keyPascal: CreditNotes\n          keySnake: credit_notes\n          object: creditNote\n          python: credit_note\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ creditNotes: [{ type: CreditNote.TypeEnum.ACCPAYCREDIT,\n        contact: { contactID: \"00000000-0000-0000-0000-000000000000\" }, date:\n        \"2019-01-05\", lineItems: [{ description: \"Foobar\", quantity: 2.0,\n        unitAmount: 20.0, accountCode: \"400\" }]}]}'\n      x-ruby-requestBody: 'credit_notes = { credit_notes: [{ type:\n        XeroRuby::Accounting::CreditNote::ACCPAYCREDIT, contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, date: \"2019-01-05\",\n        line_items: [{ description: \"Foobar\", quantity: 2.0, unit_amount: 20.0,\n        account_code: \"400\" }]}]}'\n    put:\n      operationId: createCreditNotes\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{   \"CreditNotes\":[   {   \"Type\":\"ACCPAYCREDIT\",\n              \"Contact\":{   \"ContactID\":\"430fa14a-f945-44d3-9f97-5df5e28441b8\"\n              }, \"Date\":\"2019-01-05\",\n              \"LineItems\":[   {   \"Description\":\"Foobar\", \"Quantity\":2.0,\n              \"UnitAmount\":20.0, \"AccountCode\":\"400\" } ] } ] }'\n            schema:\n              $ref: \"#/components/schemas/CreditNotes\"\n        description: Credit Notes with array of CreditNote object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5e57a661-42da-4a19-96a0-00405a0e946d\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551812702713)\\/\", \"CreditNotes\": [ { \"CreditNoteID\":\n                \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CreditNoteNumber\": \"\",\n                \"Payments\": [], \"ID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\",\n                \"CurrencyRate\": 1.000000, \"Type\": \"ACCPAYCREDIT\", \"Reference\":\n                \"\", \"RemainingCredit\": 46.00, \"Allocations\": [], \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\",\n                \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\":\n                \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ],\n                \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\",\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-01-05T00:00:00\", \"Date\": \"\\/Date(1546646400000+0000)\\/\",\n                \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\":\n                [ { \"Description\": \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\":\n                \"INPUT2\", \"TaxAmount\": 6.00, \"LineAmount\": 40.00, \"AccountCode\":\n                \"400\", \"Tracking\": [], \"Quantity\": 2.0000, \"ValidationErrors\":\n                [] } ], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00,\n                \"UpdatedDateUTC\": \"\\/Date(1551812702650+0000)\\/\",\n                \"CurrencyCode\": \"NZD\", \"StatusAttributeString\": \"OK\",\n                \"ValidationErrors\": [ { \"Message\": \"An existing Credit Note with\n                the specified CreditNoteID could not be found\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/CreditNotes\"\n          description: Success - return response of type Credit Notes array of newly\n            created CreditNote\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a new credit note\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - creditNote: null\n          is_object: true\n          key: creditNote\n          keyPascal: CreditNote\n          keySnake: credit_note\n        - csharp: CreditNote.xxx\n          default: ACCPAYCREDIT\n          java: com.xero.models.accounting.CreditNote.TypeEnum.ACCPAYCREDIT\n          key: type\n          keyPascal: Type\n          node: CreditNote.TypeEnum.ACCPAYCREDIT\n          nonString: true\n          object: creditNote\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\CreditNote::TYPE_ACCPAYCREDIT\n          python_string: ACCPAYCREDIT\n          ruby: XeroRuby::Accounting::CreditNote::ACCPAYCREDIT\n          type: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: creditNote\n          set_contact: null\n        - date: null\n          default: currDate\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: creditNote\n          python: curr_date\n        - default: lineItems\n          is_last: true\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: creditNote\n          python: line_items\n          set_lineitem: null\n        - creditNotes: null\n          is_object: true\n          key: creditNotes\n          keyPascal: CreditNotes\n        - add_creditNote: null\n          is_array_add: true\n          is_last: true\n          java: CreditNotes\n          key: creditNotes\n          keyPascal: CreditNotes\n          keySnake: credit_notes\n          object: creditNote\n          python: credit_note\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ creditNotes: [{ type: CreditNote.TypeEnum.ACCPAYCREDIT,\n        contact: { contactID: \"430fa14a-f945-44d3-9f97-5df5e28441b8\" }, date:\n        \"2019-01-05\", lineItems: [{ description: \"Foobar\", quantity: 2.0,\n        unitAmount: 20.0, accountCode: \"400\" }]}]}'\n      x-ruby-requestBody: 'credit_notes = { credit_notes: [{ type:\n        XeroRuby::Accounting::CreditNote::ACCPAYCREDIT, contact: { contact_id:\n        \"430fa14a-f945-44d3-9f97-5df5e28441b8\" }, date: \"2019-01-05\",\n        line_items: [{ description: \"Foobar\", quantity: 2.0, unit_amount: 20.0,\n        account_code: \"400\" }]}]}'\n  \"/CreditNotes/{CreditNoteID}\":\n    get:\n      operationId: getCreditNote\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"dd5c5da7-08ab-486a-ac34-aea295f1614b\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551812703811)\\/\", \"CreditNotes\": [ { \"CreditNoteID\":\n                \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"CreditNoteNumber\":\n                \"CN-0005\", \"Payments\": [ { \"PaymentID\":\n                \"6b037c9b-2e5d-4905-84d3-eabfb3438242\", \"Date\":\n                \"\\/Date(1552521600000+0000)\\/\", \"Amount\": 2.00, \"Reference\":\n                \"Too much\", \"CurrencyRate\": 1.000000, \"HasAccount\": false,\n                \"HasValidationErrors\": false } ], \"ID\":\n                \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"CurrencyRate\":\n                1.000000, \"Type\": \"ACCRECCREDIT\", \"Reference\": \"US Tour\",\n                \"RemainingCredit\": 32.50, \"Allocations\": [], \"HasAttachments\":\n                true, \"Attachments\": [ { \"AttachmentID\":\n                \"9b9c9b62-069e-4f5a-a172-183195f084bb\", \"FileName\": \"Screen Shot\n                2019-03-04 at 9.00.06 AM.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/creditnotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/Screen%20Shot%202019-03-04%20at%209.00.06%20AM.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 82334 } ], \"Contact\":\n                { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\",\n                \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\":\n                \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ],\n                \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\",\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-05T00:00:00\", \"Date\": \"\\/Date(1551744000000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\",\n                \"LineItems\": [ { \"Description\": \"Mic Stand\", \"UnitAmount\":\n                30.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 4.50, \"LineAmount\":\n                30.00, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000,\n                \"ValidationErrors\": [] } ], \"SubTotal\": 30.00, \"TotalTax\": 4.50,\n                \"Total\": 34.50, \"UpdatedDateUTC\":\n                \"\\/Date(1551812346157+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/CreditNotes\"\n          description: Success - return response of type Credit Notes array with a unique\n            CreditNote\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific credit note using a unique credit note Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateCreditNote\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"CreditNotes\": [ { \"Type\": \"ACCPAYCREDIT\", \"Contact\": { \"ContactID\":\n              \"430fa14a-f945-44d3-9f97-5df5e28441b8\" }, \"Date\": \"2019-01-05\",\n              \"Status\": \"AUTHORISED\", \"Reference\": \"HelloWorld\", \"LineItems\": [\n              { \"Description\": \"Foobar\", \"Quantity\": 2, \"UnitAmount\": 20,\n              \"AccountCode\": \"400\" } ] } ] }'\n            schema:\n              $ref: \"#/components/schemas/CreditNotes\"\n        description: an array of Credit Notes containing credit note details to update\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"db2f7659-6044-418d-a4c6-d4b93eba4e1e\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551812704253)\\/\", \"CreditNotes\": [ { \"CreditNoteID\":\n                \"f9256f04-5a99-4680-acb9-6b4639cc439a\", \"CreditNoteNumber\": \"\",\n                \"Payments\": [], \"ID\": \"f9256f04-5a99-4680-acb9-6b4639cc439a\",\n                \"CurrencyRate\": 1.000000, \"Type\": \"ACCPAYCREDIT\", \"Reference\":\n                \"HelloWorld\", \"RemainingCredit\": 46.00, \"Allocations\": [],\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\":\n                \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\":\n                \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\":\n                \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-01-05T00:00:00\", \"Date\":\n                \"\\/Date(1546646400000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"INPUT2\", \"TaxAmount\":\n                6.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 2.0000, \"ValidationErrors\": [] } ], \"SubTotal\":\n                40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\":\n                \"\\/Date(1551812704223+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/CreditNotes\"\n          description: Success - return response of type Credit Notes array with updated\n            CreditNote\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific credit note\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - creditNote: null\n          is_object: true\n          key: creditNote\n          keyPascal: CreditNote\n          keySnake: credit_note\n        - csharp: CreditNote.xxx\n          default: ACCPAYCREDIT\n          java: com.xero.models.accounting.CreditNote.TypeEnum.ACCPAYCREDIT\n          key: type\n          keyPascal: Type\n          node: CreditNote.TypeEnum.ACCPAYCREDIT\n          nonString: true\n          object: creditNote\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\CreditNote::TYPE_ACCPAYCREDIT\n          python_string: ACCPAYCREDIT\n          ruby: XeroRuby::Accounting::CreditNote::ACCPAYCREDIT\n          type: null\n        - csharp: CreditNote.xxx\n          default: AUTHORISED\n          java: com.xero.models.accounting.CreditNote.StatusEnum.AUTHORISED\n          key: status\n          keyPascal: Status\n          node: CreditNote.StatusEnum.AUTHORISED\n          nonString: true\n          object: creditNote\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\CreditNote::STATUS_AUTHORISED\n          python_string: AUTHORISED\n          ruby: XeroRuby::Accounting::CreditNote::AUTHORISED\n          status: null\n        - default: My ref.\n          key: reference\n          keyPascal: Reference\n          object: creditNote\n          reference: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: creditNote\n          set_contact: null\n        - date: null\n          default: currDate\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: creditNote\n          python: curr_date\n        - default: lineItems\n          is_last: true\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: creditNote\n          python: line_items\n          set_lineitem: null\n        - creditNotes: null\n          is_object: true\n          key: creditNotes\n          keyPascal: CreditNotes\n        - add_creditNote: null\n          is_array_add: true\n          is_last: true\n          java: CreditNotes\n          key: creditNotes\n          keyPascal: CreditNotes\n          keySnake: credit_notes\n          object: creditNote\n          python: credit_note\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ creditNotes: [{ type: CreditNote.TypeEnum.ACCPAYCREDIT,\n        contact: { contactID: \"00000000-0000-0000-0000-000000000000\" }, date:\n        \"2019-01-05\", status: CreditNote.StatusEnum.AUTHORISED, reference: \"Mind\n        stone\", lineItems: [{ description: \"Infinity Stones\", quantity: 1.0,\n        unitAmount: 100.0, accountCode: \"400\" } ]}]}'\n      x-ruby-requestBody: 'credit_notes = { credit_notes: [{ type:\n        XeroRuby::Accounting::CreditNote::ACCPAYCREDIT, contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, date: \"2019-01-05\", status:\n        XeroRuby::Accounting::CreditNote::AUTHORISED, reference: \"Mind stone\",\n        line_items: [{ description: \"Infinity Stones\", quantity: 1.0,\n        unit_amount: 100.0, account_code: \"400\" } ]}]}'\n  \"/CreditNotes/{CreditNoteID}/Allocations\":\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createCreditNoteAllocation\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Allocations\": [ { \"Invoice\": { \"LineItems\": [], \"InvoiceID\":\n              \"c45720a1-ade3-4a38-a064-d15489be6841\" }, \"Amount\": 1, \"Date\":\n              \"2019-03-05\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Allocations\"\n        description: Allocations with array of Allocation object in body of request.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"73452751-6eaa-4bcb-86f5-4c013316f4cf\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551828543255)\\/\", \"Allocations\": [ { \"Amount\": 1.00,\n                \"Date\": \"\\/Date(1551744000000+0000)\\/\", \"Invoice\": {\n                \"InvoiceID\": \"c45720a1-ade3-4a38-a064-d15489be6841\", \"Payments\":\n                [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [],\n                \"ValidationErrors\": [] }, \"CreditNote\": { \"CreditNoteID\":\n                \"7be578f5-63af-45c8-9b00-dcc4732baf0b\", \"ID\":\n                \"7be578f5-63af-45c8-9b00-dcc4732baf0b\", \"LineItems\": [] },\n                \"ValidationErrors\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Allocations\"\n          description: Success - return response of type Allocations array with newly\n            created Allocation for specific Credit Note\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates allocation for a specific credit note\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - default: 00000000-0000-0000-0000-000000000000\n          invoiceID: null\n          is_last: true\n          is_uuid: true\n          key: invoiceID\n          keyPascal: InvoiceID\n          object: invoice\n        - allocation: null\n          is_object: true\n          key: allocation\n          keyPascal: Allocation\n        - amount: null\n          default: 1\n          key: amount\n          keyPascal: Amount\n          nonString: true\n          object: allocation\n        - date: null\n          default: currDate\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: allocation\n          python: curr_date\n        - default: invoice\n          is_last: true\n          is_variable: true\n          key: invoice\n          keyPascal: Invoice\n          nonString: true\n          object: allocation\n          set_invoice: null\n        - allocations: null\n          is_object: true\n          key: allocations\n          keyPascal: Allocations\n        - add_allocation: null\n          is_array_add: true\n          is_last: true\n          java: Allocations\n          key: allocations\n          keyPascal: Allocations\n          object: allocation\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ allocations: [{ amount: 1.0, date: \"2019-03-05\", invoice:\n        { invoiceID: \"c45720a1-ade3-4a38-a064-d15489be6841\", lineItems: [],\n        type: Invoice.TypeEnum.ACCPAY, contact: {} }}]}'\n      x-ruby-requestBody: 'allocations = { allocations: [{ amount: 1.0, date:\n        \"2019-03-05\", invoice: { invoice_id:\n        \"c45720a1-ade3-4a38-a064-d15489be6841\", line_items: [], type:\n        XeroRuby::Accounting::Invoice::ACCPAY, contact: {} }}]}'\n  \"/CreditNotes/{CreditNoteID}/Attachments\":\n    get:\n      operationId: getCreditNoteAttachments\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"2bb15054-3868-4f85-a9c6-0402ec8c1201\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551822670731)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"b7eb1fc9-a0f9-4e8e-9373-6689f5350832\", \"FileName\":\n                \"HelloWorld.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/HelloWorld.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 76091 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with all\n            Attachment for specific Credit Note\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments for a specific credit notes\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/CreditNotes/{CreditNoteID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getCreditNoteAttachmentById\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for a Attachment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Credit Note as binary\n            data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific credit note using a\n        unique attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/CreditNotes/{CreditNoteID}/Attachments/{FileName}\":\n    get:\n      operationId: getCreditNoteAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the file you are attaching to Credit Note\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Credit Note as binary\n            data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment on a specific credit note by file name\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateCreditNoteAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the file you are attaching to Credit Note\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"27253066-8c4d-4e34-a251-7a749b72de40\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551828247939)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"103e49f1-e47c-4b4d-b5e8-77d9d00fa70a\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with updated\n            Attachment for specific Credit Note\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates attachments on a specific credit note by file name\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createCreditNoteAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the file you are attaching to Credit Note\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/includeOnline\"\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"22a8d402-5dea-40ed-9d01-26896429f649\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551822953320)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"91bbae3f-5de5-4e3d-875f-8662f25897bd\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/CreditNotes/249f15fa-f2a7-4acc-8769-0984103f2225/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with newly\n            created Attachment for specific Credit Note\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates an attachment for a specific credit note\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/CreditNotes/{CreditNoteID}/History\":\n    get:\n      operationId: getCreditNoteHistory\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history records of a specific credit note\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createCreditNoteHistory\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Retrieves history records of a specific credit note\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  \"/CreditNotes/{CreditNoteID}/pdf\":\n    get:\n      operationId: getCreditNoteAsPdf\n      parameters:\n        - description: Unique identifier for a Credit Note\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: CreditNoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/pdf:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of binary data from the Attachment to a\n            Credit Note\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Retrieves credit notes as PDF files\n      tags:\n        - Accounting\n      x-path: /CreditNotes/{CreditNoteID}\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Currencies:\n    get:\n      operationId: getCurrencies\n      parameters:\n        - description: Filter by an any element\n          example: Code==\"USD\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-php: Code==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\CurrencyCode::USD . \u0026apos;\u0026quot;\n          x-ruby-param: Code==#{XeroRuby::Accounting::CurrencyCode::USD}\n        - description: Order by an any element\n          example: Code ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"e6803fc8-8035-4251-b3e4-39d6b2de0f4a\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552322853043)\\/\", \"Currencies\": [ { \"Code\": \"NZD\",\n                \"Description\": \"New Zealand Dollar\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Currencies\"\n          description: Success - return response of type Currencies array with all\n            Currencies\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves currencies for your Xero organisation\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createCurrency\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Code\": \"USD\", \"Description\": \"United States Dollar\" }'\n            schema:\n              $ref: \"#/components/schemas/Currency\"\n        description: Currency object in the body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Currencies\"\n          description: Unsupported - return response incorrect exception, API is not able\n            to create new Currency\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Create a new currency for a Xero organisation\n      tags:\n        - Accounting\n      x-example:\n        - currency: null\n          is_object: true\n          key: currency\n          keyPascal: Currency\n        - code: null\n          csharp: CurrencyCode.xxx\n          default: USD\n          java: com.xero.models.accounting.CurrencyCode.USD\n          key: code\n          keyPascal: Code\n          node: CurrencyCode.USD\n          nonString: true\n          object: currency\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\CurrencyCode::USD\n          python: CurrencyCode.USD\n          ruby: XeroRuby::Accounting::CurrencyCode::USD\n        - default: United States Dollar\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: currency\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ code: CurrencyCode.USD, description: \"United States Dollar\" }'\n      x-ruby-requestBody: 'currency = { code: XeroRuby::Accounting::CurrencyCode::USD,\n        description: \"United States Dollar\" }'\n  /Employees:\n    get:\n      operationId: getEmployees\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"ACTIVE\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + Employee.StatusEnum.ACTIVE + \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\Employee::STATUS_ACTIVE .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::Employee::ACTIVE}\n        - description: Order by an any element\n          example: LastName ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: ' { \"Id\": \"593cbccc-5cd2-4cd2-be5e-150f0843709e\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552325082775)\\/\", \"Employees\": [ { \"EmployeeID\":\n                \"972615c5-ad3d-47a0-b579-20370d374578\", \"Status\": \"ACTIVE\",\n                \"FirstName\": \"Tony\", \"LastName\": \"Stark\", \"ExternalLink\": {\n                \"Url\": \"http://twitter.com/#!/search/Stark+Industries\",\n                \"Description\": \"Go to external link\" }, \"UpdatedDateUTC\":\n                \"\\/Date(1552324681593+0000)\\/\" }, { \"EmployeeID\":\n                \"ad3db144-6362-459c-8c36-5d31d196e629\", \"Status\": \"ACTIVE\",\n                \"FirstName\": \"Bruce\", \"LastName\": \"Banner\", \"ExternalLink\": {\n                \"Url\": \"http://twitter.com/#!/search/Nick+Fury\", \"Description\":\n                \"Go to external link\" }, \"UpdatedDateUTC\":\n                \"\\/Date(1552325081303+0000)\\/\" }, { \"EmployeeID\":\n                \"e1ada26b-a10e-4065-a941-af34b53740e3\", \"Status\": \"ACTIVE\",\n                \"FirstName\": \"Nick\", \"LastName\": \"Fury\", \"ExternalLink\": {\n                \"Url\": \"http://twitter.com/#!/search/Nick+Fury\", \"Description\":\n                \"Go to external link\" }, \"UpdatedDateUTC\":\n                \"\\/Date(1552324737990+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Employees\"\n          description: Success - return response of type Employees array with all Employee\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves employees used in Xero payrun\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreateEmployees\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Employees\": [ { \"FirstName\": \"Nick\", \"LastName\": \"Fury\",\n              \"ExternalLink\": { \"Url\": \"http://twitter.com/#!/search/Nick+Fury\"\n              } } ] }'\n            schema:\n              $ref: \"#/components/schemas/Employees\"\n        description: Employees with array of Employee object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"0d6a08e7-6936-4828-a1bc-e4595e0ef778\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552324736508)\\/\", \"Employees\": [ { \"EmployeeID\":\n                \"e1ada26b-a10e-4065-a941-af34b53740e3\", \"Status\": \"ACTIVE\",\n                \"FirstName\": \"Nick\", \"LastName\": \"Fury\", \"ExternalLink\": {\n                \"Url\": \"http://twitter.com/#!/search/Nick+Fury\", \"Description\":\n                \"Go to external link\" }, \"UpdatedDateUTC\":\n                \"\\/Date(1552324736463+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Employees\"\n          description: Success - return response of type Employees array with new Employee\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Creates a single new employees used in Xero payrun\n      tags:\n        - Accounting\n      x-example:\n        - employee: null\n          is_object: true\n          key: employee\n          keyPascal: Employee\n        - default: Nick\n          firstName: null\n          key: firstName\n          keyPascal: FirstName\n          keySnake: first_name\n          object: employee\n        - default: Fury\n          is_last: true\n          key: lastName\n          keyPascal: LastName\n          keySnake: last_name\n          lastName: null\n          object: employee\n        - employees: null\n          is_object: true\n          key: employees\n          keyPascal: Employees\n        - add_employee: null\n          is_array_add: true\n          is_last: true\n          java: Employees\n          key: employees\n          keyPascal: Employees\n          object: employee\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ employees: [{ firstName: \"Nick\", lastName: \"Fury\",\n        externalLink: { url: \"http://twitter.com/#!/search/Nick+Fury\" }}]}'\n      x-ruby-requestBody: 'employees = { employees: [{ first_name: \"Nick\", last_name:\n        \"Fury\", external_link: { url: \"http://twitter.com/#!/search/Nick+Fury\"\n        }}]}'\n    put:\n      operationId: createEmployees\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Employees\": [ { \"FirstName\": \"Nick\", \"LastName\": \"Fury\",\n              \"ExternalLink\": { \"Url\": \"http://twitter.com/#!/search/Nick+Fury\"\n              } } ] }'\n            schema:\n              $ref: \"#/components/schemas/Employees\"\n        description: Employees with array of Employee object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"0d6a08e7-6936-4828-a1bc-e4595e0ef778\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552324736508)\\/\", \"Employees\": [ { \"EmployeeID\":\n                \"e1ada26b-a10e-4065-a941-af34b53740e3\", \"Status\": \"ACTIVE\",\n                \"FirstName\": \"Nick\", \"LastName\": \"Fury\", \"ExternalLink\": {\n                \"Url\": \"http://twitter.com/#!/search/Nick+Fury\", \"Description\":\n                \"Go to external link\" }, \"UpdatedDateUTC\":\n                \"\\/Date(1552324736463+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Employees\"\n          description: Success - return response of type Employees array with new Employee\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Creates new employees used in Xero payrun\n      tags:\n        - Accounting\n      x-example:\n        - employee: null\n          is_object: true\n          key: employee\n          keyPascal: Employee\n        - default: Nick\n          firstName: null\n          key: firstName\n          keyPascal: FirstName\n          keySnake: first_name\n          object: employee\n        - default: Fury\n          is_last: true\n          key: lastName\n          keyPascal: LastName\n          keySnake: last_name\n          lastName: null\n          object: employee\n        - employees: null\n          is_object: true\n          key: employees\n          keyPascal: Employees\n        - add_employee: null\n          is_array_add: true\n          is_last: true\n          java: Employees\n          key: employees\n          keyPascal: Employees\n          object: employee\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ employees: [{ firstName: \"Nick\", lastName: \"Fury\",\n        externalLink: { url: \"http://twitter.com/#!/search/Nick+Fury\" }}]}'\n      x-ruby-requestBody: 'employees = { employees: [{ first_name: \"Nick\", last_name:\n        \"Fury\", externallink: { url: \"http://twitter.com/#!/search/Nick+Fury\"\n        }}]}'\n  \"/Employees/{EmployeeID}\":\n    get:\n      operationId: getEmployee\n      parameters:\n        - description: Unique identifier for a Employee\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: EmployeeID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"417a529e-4f8d-4b1a-8816-7100245cf8b2\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552325084085)\\/\", \"Employees\": [ { \"EmployeeID\":\n                \"972615c5-ad3d-47a0-b579-20370d374578\", \"Status\": \"ACTIVE\",\n                \"FirstName\": \"Tony\", \"LastName\": \"Stark\", \"ExternalLink\": {\n                \"Url\": \"http://twitter.com/#!/search/Stark+Industries\",\n                \"Description\": \"Go to external link\" }, \"UpdatedDateUTC\":\n                \"\\/Date(1552324681593+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Employees\"\n          description: Success - return response of type Employees array with specified\n            Employee\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves a specific employee used in Xero payrun using a unique\n        employee Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /ExpenseClaims:\n    get:\n      operationId: getExpenseClaims\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"SUBMITTED\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + ExpenseClaim.StatusEnum.SUBMITTED +\n            \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\ExpenseClaim::STATUS_SUBMITTED .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::ExpenseClaim::SUBMITTED}\n        - description: Order by an any element\n          example: Status ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"f6a8867e-af29-41ee-8f77-855f5ff214fe\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552325853538)\\/\", \"ExpenseClaims\": [ {\n                \"ExpenseClaimID\": \"646b15ab-b874-4e13-82ae-f4385b2ac4b6\",\n                \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\":\n                \"\\/Date(1552325851767+0000)\\/\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Receipts\": [], \"Payments\": [], \"Total\": 40.00, \"AmountDue\":\n                40.00, \"AmountPaid\": 0.00, \"ReportingDate\":\n                \"\\/Date(1552262400000+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/ExpenseClaims\"\n          description: Success - return response of type ExpenseClaims array with all\n            ExpenseClaims\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves expense claims\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createExpenseClaims\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"ExpenseClaims\": [ { \"Status\": \"SUBMITTED\", \"User\": { \"UserID\":\n              \"d1164823-0ac1-41ad-987b-b4e30fe0b273\" }, \"Receipts\": [ {\n              \"Lineitems\": [], \"ReceiptID\":\n              \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\" } ] } ] }'\n            schema:\n              $ref: \"#/components/schemas/ExpenseClaims\"\n        description: ExpenseClaims with array of ExpenseClaim object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"4a0879a6-3860-4b73-adc6-f6a0e0f68fc8\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552325850201)\\/\", \"ExpenseClaims\": [ {\n                \"ExpenseClaimID\": \"646b15ab-b874-4e13-82ae-f4385b2ac4b6\",\n                \"Status\": \"SUBMITTED\", \"UpdatedDateUTC\":\n                \"\\/Date(1552325850107+0000)\\/\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Receipts\": [ { \"ReceiptID\":\n                \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"ReceiptNumber\": 1,\n                \"Status\": \"SUBMITTED\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam\n                Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\":\n                \"\\/Date(1552348800000+0000)\\/\", \"UpdatedDateUTC\":\n                \"\\/Date(1552325848457+0000)\\/\", \"Reference\": \"\",\n                \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\":\n                0.00, \"LineAmount\": 40.00, \"Tracking\": [], \"Quantity\": 2.0000 }\n                ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\":\n                \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"HasAttachments\": false\n                } ], \"Payments\": [], \"Total\": 40.00, \"AmountDue\": 40.00,\n                \"AmountPaid\": 0.00, \"StatusAttributeString\": \"OK\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/ExpenseClaims\"\n          description: Success - return response of type ExpenseClaims array with newly\n            created ExpenseClaim\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates expense claims\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - is_object: true\n          key: user\n          keyPascal: User\n          user: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: userID\n          keyPascal: UserID\n          keySnake: user_id\n          object: user\n          userID: null\n        - is_object: true\n          key: receipt\n          keyPascal: Receipt\n          receipt: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_uuid: true\n          key: receiptID\n          keyPascal: ReceiptID\n          keySnake: receipt_id\n          object: receipt\n          receiptID: null\n        - date: null\n          default: currDate\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: receipt\n          python: curr_date\n        - is_list: true\n          key: receipts\n          keyPascal: Receipt\n          receipts: null\n        - add_receipts: null\n          is_last: true\n          is_list_add: true\n          key: receipts\n          keyPascal: Receipts\n          object: receipt\n        - expenseClaim: null\n          is_object: true\n          key: expenseClaim\n          keyPascal: ExpenseClaim\n          keySnake: expense_claim\n        - csharp: ExpenseClaim.xxx\n          default: SUBMITTED\n          java: com.xero.models.accounting.ExpenseClaim.StatusEnum.SUBMITTED\n          key: status\n          keyPascal: Status\n          node: ExpenseClaim.StatusEnum.SUBMITTED\n          nonString: true\n          object: expenseClaim\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\ExpenseClaim::STATUS_SUBMITTED\n          python_string: SUBMITTED\n          ruby: XeroRuby::Accounting::ExpenseClaim::SUBMITTED\n          status: null\n        - default: user\n          is_variable: true\n          key: user\n          keyPascal: User\n          nonString: true\n          object: expenseClaim\n          set_user: null\n        - default: receipts\n          is_last: true\n          is_variable: true\n          key: receipts\n          keyPascal: Receipts\n          nonString: true\n          object: expenseClaim\n          set_receipt: null\n        - expenseClaims: null\n          is_object: true\n          key: expenseClaims\n          keyPascal: ExpenseClaims\n        - add_expenseClaim: null\n          is_array_add: true\n          is_last: true\n          java: ExpenseClaims\n          key: expenseClaims\n          keyPascal: ExpenseClaims\n          keySnake: expense_claims\n          object: expenseClaim\n          python: expense_claim\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ expenseClaims: [{ status:\n        ExpenseClaim.StatusEnum.SUBMITTED, user: { userID:\n        \"d1164823-0ac1-41ad-987b-b4e30fe0b273\" }, receipts: [{ receiptID:\n        \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", lineItems: [], contact: {},\n        user: {}, date: \"2018-01-01\" }]}]}'\n      x-ruby-requestBody: 'expense_claims = { expense_claims: [{ status:\n        XeroRuby::Accounting::ExpenseClaim::SUBMITTED, user: { user_id:\n        \"d1164823-0ac1-41ad-987b-b4e30fe0b273\" }, receipts: [{ receipt_id:\n        \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", line_items: [], contact: {},\n        user: {}, date: \"2018-01-01\" }]}]}'\n  \"/ExpenseClaims/{ExpenseClaimID}\":\n    get:\n      operationId: getExpenseClaim\n      parameters:\n        - description: Unique identifier for a ExpenseClaim\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ExpenseClaimID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b54bb45d-37da-4f53-9f1d-536302d6bad7\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552325854864)\\/\", \"ExpenseClaims\": [ {\n                \"ExpenseClaimID\": \"646b15ab-b874-4e13-82ae-f4385b2ac4b6\",\n                \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\":\n                \"\\/Date(1552325851767+0000)\\/\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Receipts\": [ { \"ReceiptID\":\n                \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"ReceiptNumber\": 1,\n                \"Status\": \"AUTHORISED\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam\n                Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\":\n                \"\\/Date(1552348800000+0000)\\/\", \"UpdatedDateUTC\":\n                \"\\/Date(1552325848457+0000)\\/\", \"Reference\": \"\",\n                \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\":\n                0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00,\n                \"Total\": 40.00, \"ID\": \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\",\n                \"HasAttachments\": false } ], \"Payments\": [], \"Total\": 40.00,\n                \"AmountDue\": 40.00, \"AmountPaid\": 0.00, \"ReportingDate\":\n                \"\\/Date(1552262400000+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/ExpenseClaims\"\n          description: Success - return response of type ExpenseClaims array with\n            specified ExpenseClaim\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific expense claim using a unique expense claim Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateExpenseClaim\n      parameters:\n        - description: Unique identifier for a ExpenseClaim\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ExpenseClaimID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"ExpenseClaims\": [ { \"Status\": \"SUBMITTED\", \"User\": { \"UserID\":\n              \"d1164823-0ac1-41ad-987b-b4e30fe0b273\" }, \"Receipts\": [ {\n              \"Lineitems\": [], \"ReceiptID\":\n              \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\" } ] } ] }'\n            schema:\n              $ref: \"#/components/schemas/ExpenseClaims\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"8ee87f9c-058b-4f1b-b5b2-29569bf055d7\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552325851907)\\/\", \"ExpenseClaims\": [ {\n                \"ExpenseClaimID\": \"646b15ab-b874-4e13-82ae-f4385b2ac4b6\",\n                \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\":\n                \"\\/Date(1552325851767+0000)\\/\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Receipts\": [ { \"ReceiptID\":\n                \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\", \"ReceiptNumber\": 1,\n                \"Status\": \"AUTHORISED\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam\n                Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\":\n                \"\\/Date(1552348800000+0000)\\/\", \"UpdatedDateUTC\":\n                \"\\/Date(1552325848457+0000)\\/\", \"Reference\": \"\",\n                \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\":\n                0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00,\n                \"Total\": 40.00, \"ID\": \"dc1c7f6d-0a4c-402f-acac-551d62ce5816\",\n                \"HasAttachments\": false } ], \"Payments\": [], \"Total\": 40.00,\n                \"AmountDue\": 40.00, \"AmountPaid\": 0.00, \"ReportingDate\":\n                \"\\/Date(1552262400000+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/ExpenseClaims\"\n          description: Success - return response of type ExpenseClaims array with updated\n            ExpenseClaim\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific expense claims\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - is_object: true\n          key: user\n          keyPascal: User\n          user: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: userID\n          keyPascal: UserID\n          keySnake: user_id\n          object: user\n          userID: null\n        - is_object: true\n          key: receipt\n          keyPascal: Receipt\n          receipt: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_uuid: true\n          key: receiptID\n          keyPascal: ReceiptID\n          keySnake: receipt_id\n          object: receipt\n          receiptID: null\n        - date: null\n          default: currDate\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: receipt\n          python: curr_date\n        - is_list: true\n          key: receipts\n          keyPascal: Receipt\n          receipts: null\n        - add_receipts: null\n          is_last: true\n          is_list_add: true\n          key: receipts\n          keyPascal: Receipts\n          object: receipt\n        - expenseClaim: null\n          is_object: true\n          key: expenseClaim\n          keyPascal: ExpenseClaim\n          keySnake: expense_claim\n        - csharp: ExpenseClaim.xxx\n          default: SUBMITTED\n          java: com.xero.models.accounting.ExpenseClaim.StatusEnum.SUBMITTED\n          key: status\n          keyPascal: Status\n          node: ExpenseClaim.StatusEnum.SUBMITTED\n          nonString: true\n          object: expenseClaim\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\ExpenseClaim::STATUS_SUBMITTED\n          python_string: SUBMITTED\n          ruby: XeroRuby::Accounting::ExpenseClaim::SUBMITTED\n          status: null\n        - default: user\n          is_variable: true\n          key: user\n          keyPascal: User\n          nonString: true\n          object: expenseClaim\n          set_user: null\n        - default: receipts\n          is_last: true\n          is_variable: true\n          key: receipts\n          keyPascal: Receipts\n          nonString: true\n          object: expenseClaim\n          set_receipt: null\n        - expenseClaims: null\n          is_object: true\n          key: expenseClaims\n          keyPascal: ExpenseClaims\n        - add_expenseClaim: null\n          is_array_add: true\n          is_last: true\n          java: ExpenseClaims\n          key: expenseClaims\n          keyPascal: ExpenseClaims\n          keySnake: expense_claims\n          object: expenseClaim\n          python: expense_claim\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ expenseClaims: [{ status:\n        ExpenseClaim.StatusEnum.AUTHORISED, user: { userID:\n        \"00000000-0000-0000-0000-000000000000\" }, receipts: [{ receiptID:\n        \"00000000-0000-0000-0000-000000000000\", lineItems: [], contact: {},\n        date: \"2020-01-01\", user: {} }]}]}'\n      x-ruby-requestBody: 'expense_claims = { expense_claims: [{ status:\n        XeroRuby::Accounting::ExpenseClaim::AUTHORISED, user: { user_id:\n        \"00000000-0000-0000-0000-000000000000\" }, receipts: [{ receipt_id:\n        \"00000000-0000-0000-0000-000000000000\", line_items: [], contact: {},\n        date: \"2020-01-01\", user: {} }]}]}'\n  \"/ExpenseClaims/{ExpenseClaimID}/History\":\n    get:\n      operationId: getExpenseClaimHistory\n      parameters:\n        - description: Unique identifier for a ExpenseClaim\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ExpenseClaimID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history records of a specific expense claim\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createExpenseClaimHistory\n      parameters:\n        - description: Unique identifier for a ExpenseClaim\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ExpenseClaimID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific expense claim\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /InvoiceReminders/Settings:\n    get:\n      operationId: getInvoiceReminders\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"c7cd0953-c012-4be8-b618-63ce4c2c3494\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552331430618)\\/\", \"InvoiceReminders\": [ { \"Enabled\":\n                false } ] }'\n              schema:\n                $ref: \"#/components/schemas/InvoiceReminders\"\n          description: Success - return response of Invoice Reminders\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves invoice reminder settings\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Invoices:\n    get:\n      operationId: getInvoices\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"DRAFT\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + Invoice.StatusEnum.DRAFT + \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\Invoice::STATUS_DRAFT .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::Invoice::DRAFT}\n        - description: Order by an any element\n          example: InvoiceNumber ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: Filter by a comma-separated list of InvoicesIDs.\n          example: \"\u0026quot;00000000-0000-0000-0000-000000000000\u0026quot;\"\n          explode: false\n          in: query\n          name: IDs\n          schema:\n            items:\n              format: uuid\n              type: string\n            type: array\n          style: form\n          x-example-java: Arrays.asList(UUID.fromString(\"00000000-0000-0000-0000-000000000000\"))\n          x-example-php: \"\u0026quot;00000000-0000-0000-0000-000000000000\u0026quot;\"\n        - description: Filter by a comma-separated list of InvoiceNumbers.\n          example: \"\u0026quot;INV-001\u0026quot;, \u0026quot;INV-002\u0026quot;\"\n          explode: false\n          in: query\n          name: InvoiceNumbers\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n          x-example-java: Arrays.asList(\"INV-001\",\"INV-002\")\n          x-example-php: \"\u0026quot;INV-001\u0026quot;, \u0026quot;INV-002\u0026quot;\"\n        - description: Filter by a comma-separated list of ContactIDs.\n          example: \"\u0026quot;00000000-0000-0000-0000-000000000000\u0026quot;\"\n          explode: false\n          in: query\n          name: ContactIDs\n          schema:\n            items:\n              format: uuid\n              type: string\n            type: array\n          style: form\n          x-example-java: Arrays.asList(UUID.fromString(\"00000000-0000-0000-0000-000000000000\"))\n          x-example-php: \"\u0026quot;00000000-0000-0000-0000-000000000000\u0026quot;\"\n        - description: Filter by a comma-separated list Statuses. For faster response\n            times we recommend using these explicit parameters instead of\n            passing OR conditions into the Where filter.\n          example: \"\u0026quot;DRAFT\u0026quot;, \u0026quot;SUBMITTED\u0026quot;\"\n          explode: false\n          in: query\n          name: Statuses\n          schema:\n            items:\n              type: string\n            type: array\n          x-example-java: Arrays.asList(\"DRAFT\",\"SUBMITTED\")\n          x-example-php: \"\u0026quot;DRAFT\u0026quot;, \u0026quot;SUBMITTED\u0026quot;\"\n        - description: e.g. page=1 – Up to 100 invoices will be returned in a single API\n            call with line items shown for each invoice\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - description: e.g. includeArchived=true - Contacts with a status of ARCHIVED will\n            be included in the response\n          in: query\n          name: includeArchived\n          schema:\n            type: boolean\n        - description: When set to true you'll only retrieve Invoices created by your app\n          example: false\n          in: query\n          name: createdByMyApp\n          schema:\n            type: boolean\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"900c500b-e83c-4ce2-902a-b8ba04751748\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552326816230)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\",\n                \"InvoiceID\": \"d4956132-ed94-4dd7-9eaa-aa22dfdf06f2\",\n                \"InvoiceNumber\": \"INV-0001\", \"Reference\": \"Red Fish, Blue Fish\",\n                \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [],\n                \"Overpayments\": [], \"AmountDue\": 0.00, \"AmountPaid\": 0.00,\n                \"AmountCredited\": 0.00, \"SentToContact\": true, \"CurrencyRate\":\n                1.000000, \"HasErrors\": false, \"IsDiscounted\": false,\n                \"HasAttachments\": false, \"RepeatingInvoiceID\":\n                \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Contact\": {\n                \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\":\n                \"Barney Rubble-83203\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2018-10-20T00:00:00\", \"Date\": \"\\/Date(1539993600000+0000)\\/\",\n                \"DueDateString\": \"2018-12-30T00:00:00\", \"DueDate\":\n                \"\\/Date(1546128000000+0000)\\/\", \"Status\": \"VOIDED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\":\n                40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"UpdatedDateUTC\":\n                \"\\/Date(1541176290160+0000)\\/\", \"CurrencyCode\": \"NZD\" }, {\n                \"Type\": \"ACCREC\", \"InvoiceID\":\n                \"046d8a6d-1ae1-4b4d-9340-5601bdf41b87\", \"InvoiceNumber\":\n                \"INV-0002\", \"Reference\": \"Red Fish, Blue Fish\", \"Payments\": [ {\n                \"PaymentID\": \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"Date\":\n                \"\\/Date(1543449600000+0000)\\/\", \"Amount\": 46.00, \"CurrencyRate\":\n                1.000000, \"HasAccount\": false, \"HasValidationErrors\": false } ],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"AmountDue\": 0.00, \"AmountPaid\": 46.00, \"AmountCredited\": 0.00,\n                \"SentToContact\": true, \"CurrencyRate\": 1.000000, \"HasErrors\":\n                false, \"IsDiscounted\": false, \"HasAttachments\": false,\n                \"Contact\": { \"ContactID\":\n                \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney\n                Rubble-83203\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\":\n                [], \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2018-10-20T00:00:00\", \"Date\":\n                \"\\/Date(1539993600000+0000)\\/\", \"DueDateString\":\n                \"2018-12-30T00:00:00\", \"DueDate\":\n                \"\\/Date(1546128000000+0000)\\/\", \"Status\": \"PAID\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\":\n                40.00, \"TotalTax\": 6.00, \"Total\": 46.00, \"UpdatedDateUTC\":\n                \"\\/Date(1541176592690+0000)\\/\", \"CurrencyCode\": \"NZD\",\n                \"FullyPaidOnDate\": \"\\/Date(1543449600000+0000)\\/\" }, { \"Type\":\n                \"ACCREC\", \"InvoiceID\": \"7ef31b20-de17-4312-8382-412f869b1510\",\n                \"InvoiceNumber\": \"INV-0003\", \"Reference\": \"\", \"Payments\": [],\n                \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"AmountDue\": 115.00, \"AmountPaid\": 0.00, \"AmountCredited\": 0.00,\n                \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\":\n                false, \"HasAttachments\": false, \"Contact\": { \"ContactID\":\n                \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney\n                Rubble-83203\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\":\n                [], \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2018-11-02T00:00:00\", \"Date\":\n                \"\\/Date(1541116800000+0000)\\/\", \"DueDateString\":\n                \"2018-11-07T00:00:00\", \"DueDate\":\n                \"\\/Date(1541548800000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\":\n                100.00, \"TotalTax\": 15.00, \"Total\": 115.00, \"UpdatedDateUTC\":\n                \"\\/Date(1541176648927+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Invoices\"\n          description: Success - return response of type Invoices array with all Invoices\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves sales invoices or purchase bills\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreateInvoices\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Invoices\": [ { \"Type\": \"ACCREC\", \"Contact\": { \"ContactID\":\n              \"430fa14a-f945-44d3-9f97-5df5e28441b8\" }, \"LineItems\": [ {\n              \"Description\": \"Acme Tires\", \"Quantity\": 2, \"UnitAmount\": 20,\n              \"AccountCode\": \"200\", \"TaxType\": \"NONE\", \"LineAmount\": 40 } ],\n              \"Date\": \"2019-03-11\", \"DueDate\": \"2018-12-10\", \"Reference\":\n              \"Website Design\", \"Status\": \"AUTHORISED\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Invoices\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"ccece84a-075c-4fcd-9073-149d4f7a91cf\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552327126164)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\",\n                \"InvoiceID\": \"ed255415-e141-4150-aab7-89c3bbbb851c\",\n                \"InvoiceNumber\": \"INV-0007\", \"Reference\": \"Website Design\",\n                \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 40.00,\n                \"AmountPaid\": 0.00, \"SentToContact\": false, \"CurrencyRate\":\n                1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\":\n                { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\",\n                \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\":\n                \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ],\n                \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\",\n                \"ContactGroups\": [ { \"ContactGroupID\":\n                \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\",\n                \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false\n                } ], \"IsSupplier\": true, \"IsCustomer\": true,\n                \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\":\n                [], \"ContactPersons\": [ { \"FirstName\": \"Debbie\", \"LastName\":\n                \"Gwyther\", \"EmailAddress\": \"debbie@rockstar.com\",\n                \"IncludeInEmails\": false } ], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-03-11T00:00:00\", \"Date\":\n                \"\\/Date(1552262400000+0000)\\/\", \"DueDateString\":\n                \"2018-12-10T00:00:00\", \"DueDate\":\n                \"\\/Date(1544400000000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Acme Tires\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\",\n                \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"200\",\n                \"Tracking\": [], \"Quantity\": 2.0000, \"LineItemID\":\n                \"5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552327126117+0000)\\/\",\n                \"CurrencyCode\": \"NZD\", \"StatusAttributeString\": \"OK\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Invoices\"\n          description: Success - return response of type Invoices array with newly created\n            Invoice\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates or creates one or more sales invoices or purchase bills\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.of(2020, Month.OCTOBER, 10)\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2020-10-10')\n          python: dateutil.parser.parse('2020-10-10T00:00:00Z')\n        - default: LocalDate.of(2020, Month.OCTOBER, 28)\n          dueDateValue: null\n          is_date: true\n          java: LocalDate.of(2020, Month.OCTOBER, 28)\n          java_datatype: LocalDate\n          key: dueDateValue\n          keyPascal: Date\n          keySnake: due_date_value\n          php: new DateTime('2020-10-28')\n          python: dateutil.parser.parse('2020-10-28T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItem\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - csharp: Invoice.xxx\n          default: ACCREC\n          java: com.xero.models.accounting.Invoice.TypeEnum.ACCREC\n          key: type\n          keyPascal: Type\n          node: Invoice.TypeEnum.ACCREC\n          nonString: true\n          object: invoice\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\Invoice::TYPE_ACCREC\n          python_string: ACCREC\n          ruby: XeroRuby::Accounting::Invoice::ACCREC\n          type: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: invoice\n          set_contact: null\n        - date: null\n          default: dateValue\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: invoice\n          python: date_value\n        - default: dueDateValue\n          dueDate: null\n          is_variable: true\n          key: dueDate\n          keyPascal: Date\n          keySnake: due_date\n          nonString: true\n          object: invoice\n          python: due_date_value\n        - default: lineItems\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: invoice\n          python: line_items\n          set_lineitem: null\n        - default: Website Design\n          key: reference\n          keyPascal: Reference\n          object: invoice\n          reference: null\n        - csharp: Invoice.xxx\n          default: DRAFT\n          is_last: true\n          java: com.xero.models.accounting.Invoice.StatusEnum.DRAFT\n          key: status\n          keyPascal: Status\n          node: Invoice.StatusEnum.DRAFT\n          nonString: true\n          object: invoice\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\Invoice::STATUS_DRAFT\n          python_string: DRAFT\n          ruby: XeroRuby::Accounting::Invoice::DRAFT\n          status: null\n        - invoices: null\n          is_object: true\n          key: invoices\n          keyPascal: Invoices\n        - add_invoice: null\n          is_array_add: true\n          is_last: true\n          java: Invoices\n          key: invoices\n          keyPascal: Invoices\n          object: invoice\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ invoices: [{ type: Invoice.TypeEnum.ACCREC, contact: {\n        contactID:\"00000000-0000-0000-0000-000000000000\" }, lineItems:[ {\n        description:\"Acme Tires\", quantity:2.0, unitAmount:20.0,\n        accountCode:\"200\", taxType:\"NONE\", lineAmount:40.0 } ], date:\n        \"2019-03-11\", dueDate:\"2018-12-10\", reference:\"Website Design\", status:\n        Invoice.StatusEnum.AUTHORISED } ] }'\n      x-ruby-requestBody: 'invoices = { invoices: [{ type:\n        XeroRuby::Accounting::Invoice::ACCREC, contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, line_items: [{ description:\n        \"Acme Tires\", quantity: 2.0, unit_amount: 20.0, account_code: \"000\",\n        tax_type: XeroRuby::Accounting::TaxType::NONE, line_amount: 40.0 }],\n        date: \"2019-03-11\", due_date: \"2018-12-10\", reference: \"Website Design\",\n        status: XeroRuby::Accounting::Invoice::DRAFT }]}'\n    put:\n      operationId: createInvoices\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Invoices\": [ { \"Type\": \"ACCREC\", \"Contact\": { \"ContactID\":\n              \"430fa14a-f945-44d3-9f97-5df5e28441b8\" }, \"LineItems\": [ {\n              \"Description\": \"Acme Tires\", \"Quantity\": 2, \"UnitAmount\": 20,\n              \"AccountCode\": \"200\", \"TaxType\": \"NONE\", \"LineAmount\": 40 } ],\n              \"Date\": \"2019-03-11\", \"DueDate\": \"2018-12-10\", \"Reference\":\n              \"Website Design\", \"Status\": \"AUTHORISED\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Invoices\"\n        description: Invoices with an array of invoice objects in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"ccece84a-075c-4fcd-9073-149d4f7a91cf\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552327126164)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\",\n                \"InvoiceID\": \"ed255415-e141-4150-aab7-89c3bbbb851c\",\n                \"InvoiceNumber\": \"INV-0007\", \"Reference\": \"Website Design\",\n                \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 40.00,\n                \"AmountPaid\": 0.00, \"SentToContact\": false, \"CurrencyRate\":\n                1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\":\n                { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\",\n                \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\":\n                \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ],\n                \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\",\n                \"ContactGroups\": [ { \"ContactGroupID\":\n                \"17b44ed7-4389-4162-91cb-3dd5766e4e22\", \"Name\": \"Oasis\",\n                \"Status\": \"ACTIVE\", \"Contacts\": [], \"HasValidationErrors\": false\n                } ], \"IsSupplier\": true, \"IsCustomer\": true,\n                \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\":\n                [], \"ContactPersons\": [ { \"FirstName\": \"Debbie\", \"LastName\":\n                \"Gwyther\", \"EmailAddress\": \"debbie@rockstar.com\",\n                \"IncludeInEmails\": false } ], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-03-11T00:00:00\", \"Date\":\n                \"\\/Date(1552262400000+0000)\\/\", \"DueDateString\":\n                \"2018-12-10T00:00:00\", \"DueDate\":\n                \"\\/Date(1544400000000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Acme Tires\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\",\n                \"TaxAmount\": 0.00, \"LineAmount\": 40.00, \"AccountCode\": \"200\",\n                \"Tracking\": [], \"Quantity\": 2.0000, \"LineItemID\":\n                \"5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552327126117+0000)\\/\",\n                \"CurrencyCode\": \"NZD\", \"StatusAttributeString\": \"OK\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Invoices\"\n          description: Success - return response of type Invoices array with newly created\n            Invoice\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates one or more sales invoices or purchase bills\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.of(2020, Month.OCTOBER, 10)\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2020-10-10')\n          python: dateutil.parser.parse('2020-10-10T00:00:00Z')\n        - default: LocalDate.of(2020, Month.OCTOBER, 28)\n          dueDateValue: null\n          is_date: true\n          java: LocalDate.of(2020, Month.OCTOBER, 28)\n          java_datatype: LocalDate\n          key: dueDateValue\n          keyPascal: Date\n          keySnake: due_date_value\n          php: new DateTime('2020-10-28')\n          python: dateutil.parser.parse('2020-10-28T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItem\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - csharp: Invoice.xxx\n          default: ACCREC\n          java: com.xero.models.accounting.Invoice.TypeEnum.ACCREC\n          key: type\n          keyPascal: Type\n          node: Invoice.TypeEnum.ACCREC\n          nonString: true\n          object: invoice\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\Invoice::TYPE_ACCREC\n          python_string: ACCREC\n          ruby: XeroRuby::Accounting::Invoice::ACCREC\n          type: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: invoice\n          set_contact: null\n        - date: null\n          default: dateValue\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: invoice\n          python: date_value\n        - default: dueDateValue\n          dueDate: null\n          is_variable: true\n          key: dueDate\n          keyPascal: Date\n          keySnake: due_date\n          nonString: true\n          object: invoice\n          python: due_date_value\n        - default: lineItems\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: invoice\n          python: line_items\n          set_lineitem: null\n        - default: Website Design\n          key: reference\n          keyPascal: Reference\n          object: invoice\n          reference: null\n        - csharp: Invoice.xxx\n          default: DRAFT\n          is_last: true\n          java: com.xero.models.accounting.Invoice.StatusEnum.DRAFT\n          key: status\n          keyPascal: Status\n          node: Invoice.StatusEnum.DRAFT\n          nonString: true\n          object: invoice\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\Invoice::STATUS_DRAFT\n          python_string: DRAFT\n          ruby: XeroRuby::Accounting::Invoice::DRAFT\n          status: null\n        - invoices: null\n          is_object: true\n          key: invoices\n          keyPascal: Invoices\n        - add_invoice: null\n          is_array_add: true\n          is_last: true\n          java: Invoices\n          key: invoices\n          keyPascal: Invoices\n          object: invoice\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ invoices: [{ type: Invoice.TypeEnum.ACCREC, contact: {\n        contactID: \"00000000-0000-0000-0000-000000000000\" }, lineItems: [{\n        description: \"Acme Tires\", quantity: 2.0, unitAmount: 20.0, accountCode:\n        \"000\", taxType: TaxType.NONE, lineAmount: 40.0 }], date: \"2019-03-11\",\n        dueDate: \"2018-12-10\", reference: \"Website Design\", status:\n        Invoice.StatusEnum.DRAFT }]}'\n      x-ruby-requestBody: 'invoices = { invoices: [{ type:\n        XeroRuby::Accounting::Invoice::ACCREC, contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, line_items: [{ description:\n        \"Acme Tires\", quantity: 2.0, unit_amount: 20.0, account_code: \"000\",\n        tax_type: XeroRuby::Accounting::TaxType::NONE, line_amount: 40.0 }],\n        date: \"2019-03-11\", due_date: \"2018-12-10\", reference: \"Website Design\",\n        status: XeroRuby::Accounting::Invoice::DRAFT }]}'\n  \"/Invoices/{InvoiceID}\":\n    get:\n      operationId: getInvoice\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"516f400a-b764-4c88-831b-12d2b210fa24\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1551981658323)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\",\n                \"InvoiceID\": \"a03ffcd2-5d91-4c7e-b483-318584e9e439\",\n                \"InvoiceNumber\": \"INV-0006\", \"Reference\": \"Tour\", \"Payments\": [\n                { \"PaymentID\": \"38928000-e9a0-420c-8884-f624bab2a351\", \"Date\":\n                \"\\/Date(1552953600000+0000)\\/\", \"Amount\": 148062.76,\n                \"Reference\": \"Yahoo\", \"CurrencyRate\": 1.000000, \"HasAccount\":\n                false, \"HasValidationErrors\": false } ], \"Prepayments\": [],\n                \"Overpayments\": [], \"AmountDue\": 0.00, \"AmountPaid\": 148062.76,\n                \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\":\n                false, \"IsDiscounted\": false, \"HasAttachments\": true,\n                \"Attachments\": [ { \"AttachmentID\":\n                \"3a2fe7e0-fac7-4ea2-afb2-31cedaabd294\", \"FileName\":\n                \"helo-heros.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Invoices/a03ffcd2-5d91-4c7e-b483-318584e9e439/Attachments/helo-heros.jpg\",\n                \"MimeType\": \"image/jpeg\", \"ContentLength\": 2878711 } ],\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\":\n                \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\":\n                \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\":\n                \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\",\n                \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ], \"IsSupplier\": true,\n                \"IsCustomer\": true, \"SalesTrackingCategories\": [],\n                \"PurchasesTrackingCategories\": [], \"ContactPersons\": [ {\n                \"FirstName\": \"Debbie\", \"LastName\": \"Gwyther\", \"EmailAddress\":\n                \"debbie@rockstar.com\", \"IncludeInEmails\": false } ],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-07T00:00:00\", \"Date\": \"\\/Date(1551916800000+0000)\\/\",\n                \"DueDateString\": \"2019-03-13T00:00:00\", \"DueDate\":\n                \"\\/Date(1552435200000+0000)\\/\", \"Status\": \"PAID\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"ItemCode\":\n                \"123\", \"Description\": \"Guitars Fender Strat\", \"UnitAmount\":\n                148062.76, \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\":\n                148062.76, \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\":\n                1.0000, \"LineItemID\": \"b18f39d9-7739-4246-9288-72afe939d2d5\",\n                \"ValidationErrors\": [] } ], \"SubTotal\": 148062.76, \"TotalTax\":\n                0.00, \"Total\": 148062.76, \"UpdatedDateUTC\":\n                \"\\/Date(1551981568133+0000)\\/\", \"CurrencyCode\": \"NZD\",\n                \"FullyPaidOnDate\": \"\\/Date(1552953600000+0000)\\/\",\n                \"StatusAttributeString\": \"ERROR\", \"ValidationErrors\": [ {\n                \"Message\": \"Invoice # must be unique.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Invoices\"\n          description: Success - return response of type Invoices array with specified\n            Invoices\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific sales invoice or purchase bill using a unique\n        invoice Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateInvoice\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Invoices\": [{ Reference: \"May the force be with you\", \"InvoiceID\":\n              \"00000000-0000-0000-0000-000000000000\", \"LineItems\": [],\n              \"Contact\": {}, \"Type\": \"ACCPAY\" }]}'\n            schema:\n              $ref: \"#/components/schemas/Invoices\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"bd83b60e-9d16-4a3b-9f59-0a2d0ccd35f2\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552329729002)\\/\", \"Invoices\": [ { \"Type\": \"ACCREC\",\n                \"InvoiceID\": \"4074292c-09b3-456d-84e7-add864c6c39b\",\n                \"InvoiceNumber\": \"INV-0008\", \"Reference\": \"My the Force be With\n                You\", \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\":\n                575.00, \"AmountPaid\": 0.00, \"SentToContact\": false,\n                \"CurrencyRate\": 1.000000, \"HasErrors\": false, \"IsDiscounted\":\n                false, \"Contact\": { \"ContactID\":\n                \"be392c72-c121-4f83-9512-03ac71e54c20\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Luke Skywalker\", \"EmailAddress\": \"\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\", \"Region\": \"\",\n                \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }\n                ], \"UpdatedDateUTC\": \"\\/Date(1552329691573+0000)\\/\",\n                \"ContactGroups\": [], \"IsSupplier\": false, \"IsCustomer\": true,\n                \"DefaultCurrency\": \"NZD\", \"SalesTrackingCategories\": [],\n                \"PurchasesTrackingCategories\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-11T00:00:00\", \"Date\": \"\\/Date(1552262400000+0000)\\/\",\n                \"DueDateString\": \"2019-03-12T00:00:00\", \"DueDate\":\n                \"\\/Date(1552348800000+0000)\\/\", \"Status\": \"SUBMITTED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Light Saber\", \"UnitAmount\": 500.00, \"TaxType\": \"OUTPUT2\",\n                \"TaxAmount\": 75.00, \"LineAmount\": 500.00, \"AccountCode\": \"200\",\n                \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\":\n                \"6de1bf9f-de95-4c47-9287-37305db758c9\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 500.00, \"TotalTax\": 75.00, \"Total\": 575.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552329728987+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Invoices\"\n          description: Success - return response of type Invoices array with updated Invoice\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific sales invoices or purchase bills\n      tags:\n        - Accounting\n      x-example:\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - default: I am Iron man\n          is_last: true\n          key: reference\n          keyPascal: Reference\n          object: invoice\n          reference: null\n        - invoices: null\n          is_object: true\n          key: invoices\n          keyPascal: Invoices\n        - add_invoice: null\n          is_array_add: true\n          is_last: true\n          java: Invoices\n          key: invoices\n          keyPascal: Invoices\n          object: invoice\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ invoices: [{ reference: \"I am Iron Man\", invoiceID:\n        \"00000000-0000-0000-0000-000000000000\", lineItems: [], contact: {},\n        type: Invoice.TypeEnum.ACCPAY }]}'\n      x-ruby-requestBody: 'invoices = { invoices: [{ reference: \"I am Iron Man\",\n        invoice_id: \"00000000-0000-0000-0000-000000000000\", line_items: [],\n        contact: {}, type: XeroRuby::Accounting::Invoice::ACCPAY }]}'\n  \"/Invoices/{InvoiceID}/Attachments\":\n    get:\n      operationId: getInvoiceAttachments\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: ' { \"Id\": \"7e357a45-69f5-4e8f-8d7b-15da8ef50aab\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552330258523)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"9808ad7f-c8d4-41cf-995e-bc29cb76fd2c\", \"FileName\":\n                \"foobar.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/foobar.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, {\n                \"AttachmentID\": \"5a500c1a-5a02-48de-939e-1d234fd170d4\",\n                \"FileName\": \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachments\n            for specified Invoices\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments for a specific invoice or purchase bill\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Invoices/{InvoiceID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getInvoiceAttachmentById\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for an Attachment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Invoice as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific invoices or purchase\n        bills by using a unique attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Invoices/{InvoiceID}/Attachments/{FileName}\":\n    get:\n      operationId: getInvoiceAttachmentByFileName\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the file you are attaching\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Invoice as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves an attachment from a specific invoice or purchase bill by\n        filename\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateInvoiceAttachmentByFileName\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the file you are attaching\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"acd7d618-5fef-4d45-849c-a339ea31a973\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552330524005)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"08085449-fda3-45f4-a685-ff44c8a29ee3\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with updated\n            Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates an attachment from a specific invoices or purchase bill by\n        filename\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createInvoiceAttachmentByFileName\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the file you are attaching\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/includeOnline\"\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"971fbd18-c850-453a-825f-63f2fee096ee\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552330001318)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"5a500c1a-5a02-48de-939e-1d234fd170d4\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with newly\n            created Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates an attachment for a specific invoice or purchase bill by filename\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/Invoices/{InvoiceID}/Email\":\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: emailInvoice\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: \"{}\"\n            schema:\n              $ref: \"#/components/schemas/RequestEmpty\"\n        required: true\n      responses:\n        \"204\":\n          description: Success - return response 204 no content\n          x-isEmpty: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Sends a copy of a specific invoice to related contact via email\n      tags:\n        - Accounting\n      x-example:\n        - is_last: true\n          is_object: true\n          key: requestEmpty\n          keyPascal: RequestEmpty\n          requestEmpty: null\n      x-hasAccountingValidationError: true\n  \"/Invoices/{InvoiceID}/History\":\n    get:\n      operationId: getInvoiceHistory\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history records for a specific invoice\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createInvoiceHistory\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific invoice\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  \"/Invoices/{InvoiceID}/OnlineInvoice\":\n    get:\n      operationId: getOnlineInvoice\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"d20705fb-fe1c-4366-835b-98de7474da3c\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552331100745)\\/\", \"OnlineInvoices\": [ {\n                \"OnlineInvoiceUrl\":\n                \"https://in.xero.com/bCWCCfytGdTXoJam9HENWlQt07G6zcDaj4gQojHu\" }\n                ] }'\n              schema:\n                $ref: \"#/components/schemas/OnlineInvoices\"\n          description: Success - return response of type OnlineInvoice array with one\n            OnlineInvoice\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a URL to an online invoice\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Invoices/{InvoiceID}/pdf\":\n    get:\n      operationId: getInvoiceAsPdf\n      parameters:\n        - description: Unique identifier for an Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: InvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/pdf:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of byte array pdf version of specified\n            Invoices\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves invoices or purchase bills as PDF files\n      tags:\n        - Accounting\n      x-path: /Invoices/{InvoiceID}\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Items:\n    get:\n      operationId: getItems\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: IsSold==true\n          in: query\n          name: where\n          schema:\n            type: string\n        - description: Order by an any element\n          example: Code ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"8487e8d7-5fb3-4f02-b949-dec8f1e38182\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552331874897)\\/\", \"Items\": [ { \"ItemID\":\n                \"c8c54d65-f3f2-452d-926e-bf450b12fb07\", \"Code\": \"123\",\n                \"Description\": \"Guitars Fender Strat\", \"UpdatedDateUTC\":\n                \"\\/Date(1551981476267+0000)\\/\", \"PurchaseDetails\": {},\n                \"SalesDetails\": { \"UnitPrice\": 5000.0000, \"AccountCode\": \"200\",\n                \"TaxType\": \"OUTPUT2\" }, \"Name\": \"Guitars\",\n                \"IsTrackedAsInventory\": false, \"IsSold\": true, \"IsPurchased\":\n                false }, { \"ItemID\": \"a4544d51-48f6-441f-a623-99ecbced6ab7\",\n                \"Code\": \"abc65591\", \"Description\": \"Barfoo\", \"UpdatedDateUTC\":\n                \"\\/Date(1552331873580+0000)\\/\", \"PurchaseDetails\": {},\n                \"SalesDetails\": {}, \"Name\": \"Hello11350\",\n                \"IsTrackedAsInventory\": false, \"IsSold\": true, \"IsPurchased\":\n                true } ] }'\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: Success - return response of type Items array with all Item\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves items\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreateItems\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Items\": [ { \"Code\": \"ItemCode123\", \"Name\": \"ItemName XYZ\",\n              \"Description\": \"Item Description ABC\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Items\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: \"{ \\\"Id\\\": \\\"ae7ef7c8-9024-4d42-8d59-5f26ed3f508b\\\", \\\"Status\\\":\n                \\\"OK\\\", \\\"ProviderName\\\": \\\"Provider Name Example\\\",\n                \\\"DateTimeUTC\\\": \\\"\\\\/Date(1552331871904)\\\\/\\\", \\\"Items\\\": [ {\n                \\\"ItemID\\\": \\\"a4544d51-48f6-441f-a623-99ecbced6ab7\\\", \\\"Code\\\":\n                \\\"abc65591\\\", \\\"Description\\\": \\\"foobar\\\", \\\"UpdatedDateUTC\\\":\n                \\\"\\\\/Date(1552331871707)\\\\/\\\", \\\"PurchaseDetails\\\": {},\n                \\\"SalesDetails\\\": {}, \\\"Name\\\": \\\"Hello11350\\\",\n                \\\"IsTrackedAsInventory\\\": false, \\\"IsSold\\\": true,\n                \\\"IsPurchased\\\": true, \\\"ValidationErrors\\\": [ { \\\"Message\\\":\n                \\\"Price List Item with Code 'abc' already exists\\\" } ] } ] }\"\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: Success - return response of type Items array with newly created Item\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Updates or creates one or more items\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          item: null\n          key: item\n          keyPascal: Item\n        - code: null\n          default: abcXYZ123\n          key: code\n          keyPascal: Code\n          object: item\n        - default: HelloWorld\n          key: name\n          keyPascal: Name\n          name: null\n          object: item\n        - default: Foobar\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: item\n        - is_object: true\n          items: null\n          key: items\n          keyPascal: Items\n        - add_item: null\n          is_array_add: true\n          is_last: true\n          java: Items\n          key: items\n          keyPascal: Items\n          object: item\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ items: [{ code: \"ItemCode123\", name: \"ItemName XYZ\",\n        description: \"Item Description ABC\" }]}'\n      x-ruby-requestBody: 'items = { items: [{ code: \"ItemCode123\", name: \"ItemName\n        XYZ\", description: \"Item Description ABC\" }]}'\n    put:\n      operationId: createItems\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Items\": [ { \"Code\": \"code123\", \"Name\": \"Item Name XYZ\",\n              \"Description\": \"Foobar\", \"InventoryAssetAccountCode\": \"140\",\n              \"PurchaseDetails\": { \"COGSAccountCode\": \"500\" } } ] }'\n            schema:\n              $ref: \"#/components/schemas/Items\"\n        description: Items with an array of Item objects in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: \"{ \\\"Id\\\": \\\"ae7ef7c8-9024-4d42-8d59-5f26ed3f508b\\\", \\\"Status\\\":\n                \\\"OK\\\", \\\"ProviderName\\\": \\\"Provider Name Example\\\",\n                \\\"DateTimeUTC\\\": \\\"\\\\/Date(1552331871904)\\\\/\\\", \\\"Items\\\": [ {\n                \\\"ItemID\\\": \\\"a4544d51-48f6-441f-a623-99ecbced6ab7\\\", \\\"Code\\\":\n                \\\"abc65591\\\", \\\"Description\\\": \\\"foobar\\\", \\\"UpdatedDateUTC\\\":\n                \\\"\\\\/Date(1552331871707)\\\\/\\\", \\\"PurchaseDetails\\\": {},\n                \\\"SalesDetails\\\": {}, \\\"Name\\\": \\\"Hello11350\\\",\n                \\\"IsTrackedAsInventory\\\": false, \\\"IsSold\\\": true,\n                \\\"IsPurchased\\\": true, \\\"ValidationErrors\\\": [ { \\\"Message\\\":\n                \\\"Price List Item with Code 'abc' already exists\\\" } ] } ] }\"\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: Success - return response of type Items array with newly created Item\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Creates one or more items\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: purchaseDetails\n          keyPascal: Purchase\n          keySnake: purchase_details\n          purchaseDetails: null\n        - cOGSAccountCode: null\n          default: 500\n          is_last: true\n          key: cOGSAccountCode\n          keyPascal: CoGSAccountCode\n          keySnake: cogs_account_code\n          object: purchaseDetails\n        - is_object: true\n          item: null\n          key: item\n          keyPascal: Item\n        - code: null\n          default: abcXYZ123\n          key: code\n          keyPascal: Code\n          object: item\n        - default: HelloWorld\n          key: name\n          keyPascal: Name\n          name: null\n          object: item\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: item\n        - default: 140\n          inventoryAssetAccountCode: null\n          key: inventoryAssetAccountCode\n          keyPascal: InventoryAssetAccountCode\n          keySnake: inventory_asset_account_code\n          object: item\n        - default: purchaseDetails\n          is_last: true\n          is_variable: true\n          key: purchaseDetails\n          keyPascal: PurchaseDetails\n          keySnake: purchase_details\n          nonString: true\n          object: item\n          python: purchase_details\n          set_purchaseDetails: null\n        - is_object: true\n          items: null\n          key: items\n          keyPascal: Items\n        - add_item: null\n          is_array_add: true\n          is_last: true\n          java: Items\n          key: items\n          keyPascal: Items\n          object: item\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ items: [{ code: \"abcXYZ123\", name: \"HelloWorld11\",\n        description: \"Foobar\", inventoryAssetAccountCode: \"140\",\n        purchaseDetails: { cOGSAccountCode: \"500\" }}]}'\n      x-ruby-requestBody: 'items = { items: [{ code: \"abcXYZ123\", name:\n        \"HelloWorld11\", description: \"Foobar\", inventory_asset_account_code:\n        \"140\", purchase_details: { cogs_account_code: \"500\" }}]}'\n  \"/Items/{ItemID}\":\n    delete:\n      operationId: deleteItem\n      parameters:\n        - description: Unique identifier for an Item\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ItemID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Success - return response 204 no content\n          x-isEmpty: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Deletes a specific item\n      tags:\n        - Accounting\n    get:\n      operationId: getItem\n      parameters:\n        - description: Unique identifier for an Item\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ItemID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"0bbd8a92-9ba7-4711-8040-8d6a609ca7e8\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552333420160)\\/\", \"Items\": [ { \"ItemID\":\n                \"c8c54d65-f3f2-452d-926e-bf450b12fb07\", \"Code\": \"123\",\n                \"Description\": \"Guitars Fender Strat\", \"PurchaseDescription\":\n                \"Brand new Fender Strats\", \"UpdatedDateUTC\":\n                \"\\/Date(1552333309387+0000)\\/\", \"PurchaseDetails\": {\n                \"UnitPrice\": 2500.0000, \"COGSAccountCode\": \"310\", \"TaxType\":\n                \"INPUT2\" }, \"SalesDetails\": { \"UnitPrice\": 5000.0000,\n                \"AccountCode\": \"200\", \"TaxType\": \"OUTPUT2\" }, \"Name\": \"Guitars\",\n                \"IsTrackedAsInventory\": true, \"InventoryAssetAccountCode\":\n                \"630\", \"TotalCostPool\": 25000.00, \"QuantityOnHand\": 10.0000,\n                \"IsSold\": true, \"IsPurchased\": true, \"ValidationErrors\": [] } ]\n                }'\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: Success - return response of type Items array with specified Item\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves a specific item using a unique item Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateItem\n      parameters:\n        - description: Unique identifier for an Item\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ItemID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Items\": [ { \"Code\": \"ItemCode123\", \"Description\": \"Description 123\"\n              } ] }'\n            schema:\n              $ref: \"#/components/schemas/Items\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"24feb629-6b14-499e-9aa1-fc2c596c0280\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552332558975)\\/\", \"Items\": [ { \"ItemID\":\n                \"a7e87086-e0ae-4df2-83d7-e26e9a6b7786\", \"Code\": \"abc38306\",\n                \"Description\": \"Hello Xero\", \"UpdatedDateUTC\":\n                \"\\/Date(1552332558924)\\/\", \"PurchaseDetails\": {},\n                \"SalesDetails\": {}, \"Name\": \"Hello8746\", \"IsTrackedAsInventory\":\n                false, \"IsSold\": true, \"IsPurchased\": true, \"ValidationErrors\":\n                [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: Success - return response of type Items array with updated Item\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Updates a specific item\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          item: null\n          key: item\n          keyPascal: Item\n        - code: null\n          default: ItemCode123\n          key: code\n          keyPascal: Code\n          object: item\n        - default: Goodbye\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: item\n        - is_object: true\n          items: null\n          key: items\n          keyPascal: Items\n        - add_item: null\n          is_array_add: true\n          is_last: true\n          java: Items\n          key: items\n          keyPascal: Items\n          object: item\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ items: [{ code: \"ItemCode123\", description: \"Description 123\" }]}'\n      x-ruby-requestBody: 'items = { items: [{ code: \"ItemCode123\", description:\n        \"Description 123\" }]}'\n  \"/Items/{ItemID}/History\":\n    get:\n      operationId: getItemHistory\n      parameters:\n        - description: Unique identifier for an Item\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ItemID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves history for a specific item\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createItemHistory\n      parameters:\n        - description: Unique identifier for an Item\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ItemID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Creates a history record for a specific item\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /Journals:\n    get:\n      operationId: getJournals\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Offset by a specified journal number. e.g. journals with a\n            JournalNumber greater than the offset will be returned\n          example: 10\n          in: query\n          name: offset\n          schema:\n            type: integer\n        - description: Filter to retrieve journals on a cash basis. Journals are returned\n            on an accrual basis by default.\n          in: query\n          name: paymentsOnly\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"49a09a97-df50-4679-8043-02c86e0dcf5f\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552335214210)\\/\", \"Journals\": [ { \"JournalID\":\n                \"1b31feeb-aa23-404c-8c19-24c827c53661\", \"JournalDate\":\n                \"\\/Date(1539993600000+0000)\\/\", \"JournalNumber\": 1,\n                \"CreatedDateUTC\": \"\\/Date(1541176243467+0000)\\/\", \"Reference\":\n                \"Red Fish, Blue Fish\", \"SourceID\":\n                \"d4956132-ed94-4dd7-9eaa-aa22dfdf06f2\", \"SourceType\": \"ACCREC\",\n                \"JournalLines\": [ { \"JournalLineID\":\n                \"81e6b1bf-d812-4f87-8dc4-698558ae043e\", \"AccountID\":\n                \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"AccountCode\": \"610\",\n                \"AccountType\": \"CURRENT\", \"AccountName\": \"Accounts Receivable\",\n                \"Description\": \"\", \"NetAmount\": 40.00, \"GrossAmount\": 40.00,\n                \"TaxAmount\": 0.00, \"TrackingCategories\": [] }, {\n                \"JournalLineID\": \"ad221a8c-ebee-4c1b-88ed-d574e27e8803\",\n                \"AccountID\": \"e0a5d892-9f9f-44f0-a153-5cb7db125170\",\n                \"AccountCode\": \"200\", \"AccountType\": \"REVENUE\", \"AccountName\":\n                \"Sales\", \"Description\": \"Acme Tires\", \"NetAmount\": -40.00,\n                \"GrossAmount\": -40.00, \"TaxAmount\": 0.00, \"TaxType\": \"NONE\",\n                \"TaxName\": \"No GST\", \"TrackingCategories\": [] } ] }, {\n                \"JournalID\": \"2be66e45-805b-46de-921d-c67e1d3dad2a\",\n                \"JournalDate\": \"\\/Date(1539993600000+0000)\\/\", \"JournalNumber\":\n                9, \"CreatedDateUTC\": \"\\/Date(1541176504083+0000)\\/\",\n                \"Reference\": \"Red Fish, Blue Fish\", \"SourceID\":\n                \"046d8a6d-1ae1-4b4d-9340-5601bdf41b87\", \"SourceType\": \"ACCREC\",\n                \"JournalLines\": [ { \"JournalLineID\":\n                \"ba8a5680-a753-4a35-b3dd-0bc72e5c26a1\", \"AccountID\":\n                \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"AccountCode\": \"610\",\n                \"AccountType\": \"CURRENT\", \"AccountName\": \"Accounts Receivable\",\n                \"Description\": \"\", \"NetAmount\": 40.00, \"GrossAmount\": 40.00,\n                \"TaxAmount\": 0.00, \"TrackingCategories\": [] }, {\n                \"JournalLineID\": \"09a0b9b9-0222-4e24-8c31-efef472e22f1\",\n                \"AccountID\": \"e0a5d892-9f9f-44f0-a153-5cb7db125170\",\n                \"AccountCode\": \"200\", \"AccountType\": \"REVENUE\", \"AccountName\":\n                \"Sales\", \"Description\": \"Acme Tires\", \"NetAmount\": -40.00,\n                \"GrossAmount\": -40.00, \"TaxAmount\": 0.00, \"TaxType\": \"NONE\",\n                \"TaxName\": \"No GST\", \"TrackingCategories\": [] } ] }, {\n                \"JournalID\": \"d0ed2957-ebba-4d3a-8367-ae9ccd574885\",\n                \"JournalDate\": \"\\/Date(1543449600000+0000)\\/\", \"JournalNumber\":\n                14, \"CreatedDateUTC\": \"\\/Date(1541176592673+0000)\\/\",\n                \"SourceID\": \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\",\n                \"SourceType\": \"ACCRECPAYMENT\", \"JournalLines\": [ {\n                \"JournalLineID\": \"1bdae2b7-3035-40ec-b344-b12b1c23adc4\",\n                \"AccountID\": \"b94495d0-44ab-4199-a1d0-427a4877e100\",\n                \"AccountCode\": \"610\", \"AccountType\": \"CURRENT\", \"AccountName\":\n                \"Accounts Receivable\", \"Description\": \"\", \"NetAmount\": -46.00,\n                \"GrossAmount\": -46.00, \"TaxAmount\": 0.00, \"TrackingCategories\":\n                [] }, { \"JournalLineID\": \"353be85e-ae79-4bb3-9483-5ea7682fc0a3\",\n                \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\",\n                \"AccountCode\": \"970\", \"AccountType\": \"EQUITY\", \"AccountName\":\n                \"Owner A Funds Introduced\", \"Description\": \"\", \"NetAmount\":\n                46.00, \"GrossAmount\": 46.00, \"TaxAmount\": 0.00,\n                \"TrackingCategories\": [] } ] }, { \"JournalID\":\n                \"772e8133-7f12-4edc-ab98-aa6dceb16c9d\", \"JournalDate\":\n                \"\\/Date(1552262400000+0000)\\/\", \"JournalNumber\": 30,\n                \"CreatedDateUTC\": \"\\/Date(1552333389227+0000)\\/\", \"Reference\":\n                \"\", \"SourceID\": \"5376633d-0456-43a3-8234-e457a3f50a12\",\n                \"SourceType\": \"ACCPAY\", \"JournalLines\": [ { \"JournalLineID\":\n                \"33469836-642f-4973-a708-0e99339dff4a\", \"AccountID\":\n                \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"AccountCode\": \"800\",\n                \"AccountType\": \"CURRLIAB\", \"AccountName\": \"Accounts Payable\",\n                \"Description\": \"\", \"NetAmount\": -28750.00, \"GrossAmount\":\n                -28750.00, \"TaxAmount\": 0.00, \"TrackingCategories\": [] }, {\n                \"JournalLineID\": \"4f3b6462-5cf6-4b55-a2ae-de4039878215\",\n                \"AccountID\": \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\",\n                \"AccountCode\": \"630\", \"AccountType\": \"CURRENT\", \"AccountName\":\n                \"Inventory\", \"Description\": \"Brand new Fender Strats\",\n                \"NetAmount\": 25000.00, \"GrossAmount\": 28750.00, \"TaxAmount\":\n                3750.00, \"TaxType\": \"INPUT2\", \"TaxName\": \"15% GST on Expenses\",\n                \"TrackingCategories\": [] }, { \"JournalLineID\":\n                \"534e822e-d441-48a7-8e57-5ad54729e83e\", \"AccountID\":\n                \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"AccountCode\": \"820\",\n                \"AccountType\": \"CURRLIAB\", \"AccountName\": \"GST\", \"Description\":\n                \"\", \"NetAmount\": 3750.00, \"GrossAmount\": 3750.00, \"TaxAmount\":\n                0.00, \"TrackingCategories\": [] } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Journals\"\n          description: Success - return response of type Journals array with all Journals\n      security:\n        - OAuth2:\n            - accounting.journals.read\n      summary: Retrieves journals\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Journals/{JournalID}\":\n    get:\n      operationId: getJournal\n      parameters:\n        - description: Unique identifier for a Journal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: JournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"39ab8367-eb14-420d-83a9-e01ddddd21f8\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552335613002)\\/\", \"Journals\": [ { \"JournalID\":\n                \"1b31feeb-aa23-404c-8c19-24c827c53661\", \"JournalDate\":\n                \"\\/Date(1539993600000+0000)\\/\", \"JournalNumber\": 1,\n                \"CreatedDateUTC\": \"\\/Date(1541176243467+0000)\\/\", \"Reference\":\n                \"Red Fish, Blue Fish\", \"JournalLines\": [ { \"JournalLineID\":\n                \"81e6b1bf-d812-4f87-8dc4-698558ae043e\", \"AccountID\":\n                \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"AccountCode\": \"610\",\n                \"AccountType\": \"CURRENT\", \"AccountName\": \"Accounts Receivable\",\n                \"Description\": \"\", \"NetAmount\": 40.00, \"GrossAmount\": 40.00,\n                \"TaxAmount\": 0.00, \"TaxType\": \"\", \"TaxName\": \"\",\n                \"TrackingCategories\": [] }, { \"JournalLineID\":\n                \"ad221a8c-ebee-4c1b-88ed-d574e27e8803\", \"AccountID\":\n                \"e0a5d892-9f9f-44f0-a153-5cb7db125170\", \"AccountCode\": \"200\",\n                \"AccountType\": \"REVENUE\", \"AccountName\": \"Sales\", \"Description\":\n                \"Acme Tires\", \"NetAmount\": -40.00, \"GrossAmount\": -40.00,\n                \"TaxAmount\": 0.00, \"TaxType\": \"NONE\", \"TaxName\": \"No GST\",\n                \"TrackingCategories\": [] } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Journals\"\n          description: Success - return response of type Journals array with specified\n            Journal\n      security:\n        - OAuth2:\n            - accounting.journals.read\n      summary: Retrieves a specific journal using a unique journal Id.\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /LinkedTransactions:\n    get:\n      operationId: getLinkedTransactions\n      parameters:\n        - description: Up to 100 linked transactions will be returned in a single API\n            call. Use the page parameter to specify the page to be returned e.g.\n            page=1.\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - description: The Xero identifier for an Linked Transaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: LinkedTransactionID\n          schema:\n            format: uuid\n            type: string\n        - description: Filter by the SourceTransactionID. Get the linked transactions\n            created from a particular ACCPAY invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: SourceTransactionID\n          schema:\n            format: uuid\n            type: string\n        - description: Filter by the ContactID. Get all the linked transactions that have\n            been assigned to a particular customer.\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: ContactID\n          schema:\n            format: uuid\n            type: string\n        - description: Filter by the combination of ContactID and Status. Get  the linked\n            transactions associated to a  customer and with a status\n          example: APPROVED\n          in: query\n          name: Status\n          schema:\n            type: string\n        - description: Filter by the TargetTransactionID. Get all the linked transactions\n            allocated to a particular ACCREC invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: TargetTransactionID\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"516aabd0-e670-48d5-b0eb-10dce4494dd8\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552348338096)\\/\", \"LinkedTransactions\": [ {\n                \"LinkedTransactionID\": \"5cf7d9c0-b9a7-4433-a2dc-ae3c11bba39b\",\n                \"SourceTransactionID\": \"aec416dd-38ea-40dc-9f0b-813c8c71f87f\",\n                \"SourceLineItemID\": \"77e0b23b-5b79-4f4b-ae20-c9031d41442f\",\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"TargetTransactionID\": \"83693fc1-5b05-4807-b190-109d4a85dd5f\",\n                \"TargetLineItemID\": \"d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c\",\n                \"Status\": \"ONDRAFT\", \"Type\": \"BILLABLEEXPENSE\",\n                \"UpdatedDateUTC\": \"\\/Date(1552347991000+0000)\\/\",\n                \"SourceTransactionTypeCode\": \"ACCPAY\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/LinkedTransactions\"\n          description: Success - return response of type LinkedTransactions array with all\n            LinkedTransaction\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves linked transactions (billable expenses)\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createLinkedTransaction\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"LinkedTransactions\": [ { \"SourceTransactionID\":\n              \"a848644a-f20f-4630-98c3-386bd7505631\", \"SourceLineItemID\":\n              \"b0df260d-3cc8-4ced-9bd6-41924f624ed3\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/LinkedTransaction\"\n        description: LinkedTransaction object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"f32b30e5-32d1-42a8-bcc9-5b22828f725c\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552351054646)\\/\", \"LinkedTransactions\": [ {\n                \"LinkedTransactionID\": \"e9684b6c-4df9-45a0-917b-85cc29857008\",\n                \"SourceTransactionID\": \"a848644a-f20f-4630-98c3-386bd7505631\",\n                \"SourceLineItemID\": \"b0df260d-3cc8-4ced-9bd6-41924f624ed3\",\n                \"Status\": \"DRAFT\", \"Type\": \"BILLABLEEXPENSE\", \"UpdatedDateUTC\":\n                \"\\/Date(1552351055000+0000)\\/\", \"SourceTransactionTypeCode\":\n                \"ACCPAY\", \"ValidationErrors\": [ { \"Message\": \"The\n                SourceLineItemID and SourceTransactionID do not match\" } ] } ]\n                }'\n              schema:\n                $ref: \"#/components/schemas/LinkedTransactions\"\n          description: Success - return response of type LinkedTransactions array with\n            newly created LinkedTransaction\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates linked transactions (billable expenses)\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: linkedTransaction\n          keyPascal: LinkedTransaction\n          keySnake: linked_transaction\n          linkedTransaction: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_uuid: true\n          key: sourceTransactionID\n          keyPascal: SourceTransactionID\n          keySnake: source_transaction_id\n          object: linkedTransaction\n          sourceTransactionID: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: sourceLineItemID\n          keyPascal: SourceLineItemID\n          keySnake: source_line_item_id\n          object: linkedTransaction\n          sourceLineItemID: null\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ sourceTransactionID:\n        \"00000000-0000-0000-0000-000000000000\", sourceLineItemID:\n        \"00000000-0000-0000-0000-000000000000\" }'\n      x-ruby-requestBody: 'linked_transaction = { source_transaction_id:\n        \"00000000-0000-0000-0000-000000000000\", source_line_item_id:\n        \"00000000-0000-0000-0000-000000000000\" }'\n  \"/LinkedTransactions/{LinkedTransactionID}\":\n    delete:\n      operationId: deleteLinkedTransaction\n      parameters:\n        - description: Unique identifier for a LinkedTransaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: LinkedTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"204\":\n          description: Success - return response 204 no content\n          x-isEmpty: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Deletes a specific linked transactions (billable expenses)\n      tags:\n        - Accounting\n    get:\n      operationId: getLinkedTransaction\n      parameters:\n        - description: Unique identifier for a LinkedTransaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: LinkedTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"171ca542-874d-44e2-8930-db9bccd7d88b\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552348339875)\\/\", \"LinkedTransactions\": [ {\n                \"LinkedTransactionID\": \"5cf7d9c0-b9a7-4433-a2dc-ae3c11bba39b\",\n                \"SourceTransactionID\": \"aec416dd-38ea-40dc-9f0b-813c8c71f87f\",\n                \"SourceLineItemID\": \"77e0b23b-5b79-4f4b-ae20-c9031d41442f\",\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"TargetTransactionID\": \"83693fc1-5b05-4807-b190-109d4a85dd5f\",\n                \"TargetLineItemID\": \"d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c\",\n                \"Status\": \"ONDRAFT\", \"Type\": \"BILLABLEEXPENSE\",\n                \"UpdatedDateUTC\": \"\\/Date(1552347991000+0000)\\/\",\n                \"SourceTransactionTypeCode\": \"ACCPAY\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/LinkedTransactions\"\n          description: Success - return response of type LinkedTransactions array with a\n            specified LinkedTransaction\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific linked transaction (billable expenses) using a\n        unique linked transaction Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateLinkedTransaction\n      parameters:\n        - description: Unique identifier for a LinkedTransaction\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: LinkedTransactionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"LinkedTransactions\": [ { \"SourceTransactionID\":\n              \"00000000-0000-0000-0000-000000000000\", \"SourceLineItemID\":\n              \"00000000-0000-0000-0000-000000000000\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/LinkedTransactions\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"bd364af7-08f0-432b-81db-c1e5ba05f3dd\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552351488159)\\/\", \"LinkedTransactions\": [ {\n                \"LinkedTransactionID\": \"e9684b6c-4df9-45a0-917b-85cc29857008\",\n                \"SourceTransactionID\": \"a848644a-f20f-4630-98c3-386bd7505631\",\n                \"SourceLineItemID\": \"b0df260d-3cc8-4ced-9bd6-41924f624ed3\",\n                \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\", \"Status\":\n                \"DRAFT\", \"Type\": \"BILLABLEEXPENSE\", \"UpdatedDateUTC\":\n                \"\\/Date(1552351055000+0000)\\/\", \"SourceTransactionTypeCode\":\n                \"ACCPAY\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/LinkedTransactions\"\n          description: Success - return response of type LinkedTransactions array with\n            updated LinkedTransaction\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ {\n                \"LinkedTransactionID\": \"5a68b5b4-8cf0-4af5-8c3c-513cc19e1c73\",\n                \"SourceTransactionID\": \"aec416dd-38ea-40dc-9f0b-813c8c71f87f\",\n                \"SourceLineItemID\": \"77e0b23b-5b79-4f4b-ae20-c9031d41442f\",\n                \"ContactID\": \"4e1753b9-018a-4775-b6aa-1bc7871cfee3\",\n                \"TargetTransactionID\": \"83693fc1-5b05-4807-b190-109d4a85dd5f\",\n                \"TargetLineItemID\": \"d5128ff1-0f39-4d2a-a6d5-46dfaf5f075c\",\n                \"Status\": \"ONDRAFT\", \"Type\": \"BILLABLEEXPENSE\",\n                \"UpdatedDateUTC\": \"\\/Date(1552349706000+0000)\\/\",\n                \"SourceTransactionTypeCode\": \"ACCPAY\", \"ValidationErrors\": [ {\n                \"Message\": \"The ContactID and the TargetTransaction ContactID do\n                not match\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Success - return response of type LinkedTransactions array with\n            updated LinkedTransaction\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific linked transactions (billable expenses)\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: linkedTransaction\n          keyPascal: LinkedTransaction\n          keySnake: linked_transaction\n          linkedTransaction: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_uuid: true\n          key: sourceLineItemID\n          keyPascal: SourceLineItemID\n          keySnake: source_line_item_id\n          object: linkedTransaction\n          sourceLineItemID: null\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactID\n          keyPascal: ContactID\n          object: linkedTransaction\n        - is_object: true\n          key: linkedTransactions\n          keyPascal: LinkedTransactions\n          linkedTransactions: null\n        - add_linkedTransaction: null\n          is_array_add: true\n          is_last: true\n          java: LinkedTransactions\n          key: linkedTransactions\n          keyPascal: LinkedTransactions\n          keySnake: linked_transactions\n          object: linkedTransaction\n          python: linked_transaction\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ linkedTransactions: [{ sourceLineItemID:\n        \"00000000-0000-0000-0000-000000000000\", contactID:\n        \"00000000-0000-0000-0000-000000000000\" }]}'\n      x-ruby-requestBody: 'linked_transactions = { linked_transactions: [{\n        source_line_item_id: \"00000000-0000-0000-0000-000000000000\", contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }]}'\n  /ManualJournals:\n    get:\n      operationId: getManualJournals\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"DRAFT\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + ManualJournal.StatusEnum.DRAFT + \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\ManualJournal::STATUS_DRAFT .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::ManualJournal::DRAFT}\n        - description: Order by an any element\n          example: Date ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: e.g. page=1 – Up to 100 manual journals will be returned in a\n            single API call with line items shown for each overpayment\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: \"{ \\\"Id\\\": \\\"8a508ec1-b578-48bf-97df-020c918fbf7d\\\", \\\"Status\\\":\n                \\\"OK\\\", \\\"ProviderName\\\": \\\"Provider Name Example\\\",\n                \\\"DateTimeUTC\\\": \\\"\\\\/Date(1552357217359)\\\\/\\\",\n                \\\"ManualJournals\\\": [ { \\\"Date\\\":\n                \\\"\\\\/Date(1553126400000+0000)\\\\/\\\", \\\"Status\\\": \\\"POSTED\\\",\n                \\\"LineAmountTypes\\\": \\\"NoTax\\\", \\\"UpdatedDateUTC\\\":\n                \\\"\\\\/Date(1552357188083+0000)\\\\/\\\", \\\"ManualJournalID\\\":\n                \\\"0b159335-606b-485f-b51b-97b3b32bad32\\\", \\\"Narration\\\":\n                \\\"Reversal: These aren't the droids you are looking for\\\",\n                \\\"JournalLines\\\": [], \\\"ShowOnCashBasisReports\\\": true,\n                \\\"HasAttachments\\\": false }, { \\\"Date\\\":\n                \\\"\\\\/Date(1552348800000+0000)\\\\/\\\", \\\"Status\\\": \\\"POSTED\\\",\n                \\\"LineAmountTypes\\\": \\\"NoTax\\\", \\\"UpdatedDateUTC\\\":\n                \\\"\\\\/Date(1552357188147+0000)\\\\/\\\", \\\"ManualJournalID\\\":\n                \\\"99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4\\\", \\\"Narration\\\": \\\"These\n                aren't the droids you are looking for\\\", \\\"JournalLines\\\": [],\n                \\\"ShowOnCashBasisReports\\\": true, \\\"HasAttachments\\\": true }, {\n                \\\"Date\\\": \\\"\\\\/Date(1552262400000+0000)\\\\/\\\", \\\"Status\\\":\n                \\\"DRAFT\\\", \\\"LineAmountTypes\\\": \\\"NoTax\\\", \\\"UpdatedDateUTC\\\":\n                \\\"\\\\/Date(1552357216843+0000)\\\\/\\\", \\\"ManualJournalID\\\":\n                \\\"ecb6b362-c78f-462a-a229-a66abf115e92\\\", \\\"Narration\\\": \\\"Foo\n                bar\\\", \\\"JournalLines\\\": [], \\\"ShowOnCashBasisReports\\\": true,\n                \\\"HasAttachments\\\": false } ] }\"\n              schema:\n                $ref: \"#/components/schemas/ManualJournals\"\n          description: Success - return response of type ManualJournals array with a all\n            ManualJournals\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves manual journals\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreateManualJournals\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"ManualJournals\": [ { \"Narration\": \"Journal Desc\", \"JournalLines\": [\n              { \"LineAmount\": 100, \"AccountCode\": \"400\", \"Description\": \"Money\n              Movement\" }, { \"LineAmount\": -100, \"AccountCode\": \"400\",\n              \"Description\": \"Prepayment of things\", \"Tracking\": [ { \"Name\":\n              \"North\", \"Option\": \"Region\" } ] } ], \"Date\": \"2019-03-14\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/ManualJournals\"\n        description: ManualJournals array with ManualJournal object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: \"{ \\\"Id\\\": \\\"45dfa608-0fcb-4f30-a377-c82cd348569c\\\", \\\"Status\\\":\n                \\\"OK\\\", \\\"ProviderName\\\": \\\"Provider Name Example\\\",\n                \\\"DateTimeUTC\\\": \\\"\\\\/Date(1552595972952)\\\\/\\\",\n                \\\"ManualJournals\\\": [ { \\\"Date\\\":\n                \\\"\\\\/Date(1552521600000+0000)\\\\/\\\", \\\"Status\\\": \\\"DRAFT\\\",\n                \\\"LineAmountTypes\\\": \\\"NoTax\\\", \\\"UpdatedDateUTC\\\":\n                \\\"\\\\/Date(1552595972920+0000)\\\\/\\\", \\\"ManualJournalID\\\":\n                \\\"d312dd5e-a53e-46d1-9d51-c569ef4570b7\\\", \\\"Narration\\\": \\\"Foo\n                bar\\\", \\\"JournalLines\\\": [ { \\\"Description\\\": \\\"Hello there\\\",\n                \\\"TaxType\\\": \\\"NONE\\\", \\\"LineAmount\\\": 100.00, \\\"AccountCode\\\":\n                \\\"400\\\", \\\"Tracking\\\": [], \\\"AccountID\\\":\n                \\\"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\\\", \\\"IsBlank\\\": false },\n                { \\\"Description\\\": \\\"Goodbye\\\", \\\"TaxType\\\": \\\"NONE\\\",\n                \\\"LineAmount\\\": -100.00, \\\"AccountCode\\\": \\\"400\\\", \\\"Tracking\\\":\n                [ { \\\"Name\\\": \\\"Simpsons\\\", \\\"Option\\\": \\\"Bart\\\",\n                \\\"TrackingCategoryID\\\":\n                \\\"6a68adde-f210-4465-b0a9-0d8cc6f50762\\\", \\\"TrackingOptionID\\\":\n                \\\"dc54c220-0140-495a-b925-3246adc0075f\\\" } ], \\\"AccountID\\\":\n                \\\"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\\\", \\\"IsBlank\\\": false }\n                ], \\\"ShowOnCashBasisReports\\\": true, \\\"Warnings\\\": [ {\n                \\\"Message\\\": \\\"Account code '476' has been removed as it does\n                not match a recognised account.\\\" } ], \\\"ValidationErrors\\\": [ {\n                \\\"Message\\\": \\\"The total debits (100.00) must equal total\n                credits (-10.00)\\\" } ] } ] }\"\n              schema:\n                $ref: \"#/components/schemas/ManualJournals\"\n          description: Success - return response of type ManualJournals array with newly\n            created ManualJournal\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates or creates a single manual journal\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.of(2020, Month.OCTOBER, 10)\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2019-10-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - is_list: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          manualJournalLines: null\n        - credit: null\n          is_object: true\n          key: credit\n          keyPascal: ManualJournalLine\n        - default: 100\n          key: lineAmount\n          keyPascal: LineAmount\n          keySnake: line_amount\n          lineAmount: null\n          nonString: true\n          object: credit\n        - accountCode: null\n          default: 400\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: credit\n        - default: Hello there\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: credit\n        - add_credit: null\n          is_last: true\n          is_list_add: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          object: credit\n        - debit: null\n          is_object: true\n          key: debit\n          keyPascal: ManualJournalLine\n        - default: -100\n          key: lineAmount\n          keyPascal: LineAmount\n          keySnake: line_amount\n          lineAmount: null\n          nonString: true\n          object: debit\n        - accountCode: null\n          default: 120\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: debit\n        - default: Hello there\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: debit\n        - add_debit: null\n          is_last: true\n          is_list_add: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          object: debit\n        - is_object: true\n          key: manualJournal\n          keyPascal: ManualJournal\n          keySnake: manual_journal\n          manualJournal: null\n        - default: Foobar\n          key: narration\n          keyPascal: Narration\n          narration: null\n          object: manualJournal\n        - date: null\n          default: dateValue\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: manualJournal\n          python: date_value\n        - default: manualJournalLines\n          is_last: true\n          is_variable: true\n          key: manualJournalLines\n          keyPascal: JournalLines\n          keySnake: journal_lines\n          nonString: true\n          object: manualJournal\n          python: manual_journal_lines\n          set_manualJournalLines: null\n        - is_object: true\n          key: manualJournals\n          keyPascal: ManualJournals\n          manualJournals: null\n        - add_manualJournal: null\n          is_array_add: true\n          is_last: true\n          java: ManualJournals\n          key: manualJournals\n          keyPascal: ManualJournals\n          keySnake: manual_journals\n          object: manualJournal\n          php: manualJournals\n          python: manual_journal\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ manualJournals: [{ narration: \"Foo bar\", journalLines: [{\n        lineAmount: 100.0, accountCode: \"400\", description: \"Hello there\" },{\n        lineAmount: -100.0, accountCode: \"400\", description: \"Goodbye\",\n        tracking: [{ name: \"Simpsons\", option: \"Bart\" }]}], date: \"2019-03-14\"\n        }]}'\n      x-ruby-requestBody: 'manual_journals = { manual_journals: [{ narration: \"Foo\n        bar\", date: \"2019-03-14\", journal_lines: [{ line_amount: 100.0,\n        account_code: \"400\", description: \"Hello there\" },{ line_amount: -100.0,\n        account_code: \"400\", description: \"Goodbye\", tracking: [{ name:\n        \"Simpsons\", option: \"Bart\" }]}] }]}'\n    put:\n      operationId: createManualJournals\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"ManualJournals\": [ { \"Narration\": \"Journal Desc\", \"JournalLines\": [\n              { \"LineAmount\": 100, \"AccountCode\": \"400\", \"Description\": \"Money\n              Movement\" }, { \"LineAmount\": -100, \"AccountCode\": \"400\",\n              \"Description\": \"Prepayment of things\", \"Tracking\": [ { \"Name\":\n              \"North\", \"Option\": \"Region\" } ] } ], \"Date\": \"2019-03-14\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/ManualJournals\"\n        description: ManualJournals array with ManualJournal object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: \"{ \\\"Id\\\": \\\"45dfa608-0fcb-4f30-a377-c82cd348569c\\\", \\\"Status\\\":\n                \\\"OK\\\", \\\"ProviderName\\\": \\\"Provider Name Example\\\",\n                \\\"DateTimeUTC\\\": \\\"\\\\/Date(1552595972952)\\\\/\\\",\n                \\\"ManualJournals\\\": [ { \\\"Date\\\":\n                \\\"\\\\/Date(1552521600000+0000)\\\\/\\\", \\\"Status\\\": \\\"DRAFT\\\",\n                \\\"LineAmountTypes\\\": \\\"NoTax\\\", \\\"UpdatedDateUTC\\\":\n                \\\"\\\\/Date(1552595972920+0000)\\\\/\\\", \\\"ManualJournalID\\\":\n                \\\"d312dd5e-a53e-46d1-9d51-c569ef4570b7\\\", \\\"Narration\\\": \\\"Foo\n                bar\\\", \\\"JournalLines\\\": [ { \\\"Description\\\": \\\"Hello there\\\",\n                \\\"TaxType\\\": \\\"NONE\\\", \\\"LineAmount\\\": 100.00, \\\"AccountCode\\\":\n                \\\"400\\\", \\\"Tracking\\\": [], \\\"AccountID\\\":\n                \\\"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\\\", \\\"IsBlank\\\": false },\n                { \\\"Description\\\": \\\"Goodbye\\\", \\\"TaxType\\\": \\\"NONE\\\",\n                \\\"LineAmount\\\": -100.00, \\\"AccountCode\\\": \\\"400\\\", \\\"Tracking\\\":\n                [ { \\\"Name\\\": \\\"Simpsons\\\", \\\"Option\\\": \\\"Bart\\\",\n                \\\"TrackingCategoryID\\\":\n                \\\"6a68adde-f210-4465-b0a9-0d8cc6f50762\\\", \\\"TrackingOptionID\\\":\n                \\\"dc54c220-0140-495a-b925-3246adc0075f\\\" } ], \\\"AccountID\\\":\n                \\\"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\\\", \\\"IsBlank\\\": false }\n                ], \\\"ShowOnCashBasisReports\\\": true, \\\"Warnings\\\": [ {\n                \\\"Message\\\": \\\"Account code '476' has been removed as it does\n                not match a recognised account.\\\" } ], \\\"ValidationErrors\\\": [ {\n                \\\"Message\\\": \\\"The total debits (100.00) must equal total\n                credits (-10.00)\\\" } ] } ] }\"\n              schema:\n                $ref: \"#/components/schemas/ManualJournals\"\n          description: Success - return response of type ManualJournals array with newly\n            created ManualJournal\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates one or more manual journals\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.of(2020, Month.OCTOBER, 10)\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2019-10-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - is_list: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          manualJournalLines: null\n        - credit: null\n          is_object: true\n          key: credit\n          keyPascal: ManualJournalLine\n        - default: 100\n          key: lineAmount\n          keyPascal: LineAmount\n          keySnake: line_amount\n          lineAmount: null\n          nonString: true\n          object: credit\n        - accountCode: null\n          default: 400\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: credit\n        - default: Hello there\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: credit\n        - add_credit: null\n          is_last: true\n          is_list_add: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          object: credit\n        - debit: null\n          is_object: true\n          key: debit\n          keyPascal: ManualJournalLine\n        - default: -100\n          key: lineAmount\n          keyPascal: LineAmount\n          keySnake: line_amount\n          lineAmount: null\n          nonString: true\n          object: debit\n        - accountCode: null\n          default: 120\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: debit\n        - default: Hello there\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: debit\n        - add_debit: null\n          is_last: true\n          is_list_add: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          object: debit\n        - is_object: true\n          key: manualJournal\n          keyPascal: ManualJournal\n          keySnake: manual_journal\n          manualJournal: null\n        - default: Foobar\n          key: narration\n          keyPascal: Narration\n          narration: null\n          object: manualJournal\n        - date: null\n          default: dateValue\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: manualJournal\n          python: date_value\n        - default: manualJournalLines\n          is_last: true\n          is_variable: true\n          key: manualJournalLines\n          keyPascal: JournalLines\n          keySnake: journal_lines\n          nonString: true\n          object: manualJournal\n          python: manual_journal_lines\n          set_manualJournalLines: null\n        - is_object: true\n          key: manualJournals\n          keyPascal: ManualJournals\n          manualJournals: null\n        - add_manualJournal: null\n          is_array_add: true\n          is_last: true\n          java: ManualJournals\n          key: manualJournals\n          keyPascal: ManualJournals\n          keySnake: manual_journals\n          object: manualJournal\n          php: manualJournals\n          python: manual_journal\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ manualJournals: [{ narration: \"Foo bar\", date:\n        \"2019-03-14\", journalLines: [{ lineAmount: 100.0, accountCode: \"400\",\n        description: \"Hello there\" }, { lineAmount: -100.0, accountCode: \"400\",\n        description: \"Goodbye\", tracking: [{ name: \"Simpson\", option: \"Bart\" }]\n        }]}]}'\n      x-ruby-requestBody: 'manual_journals = { manual_journals: [{ narration: \"Foo\n        bar\", date: \"2019-03-14\", journal_lines: [{ line_amount: 100.0,\n        account_code: \"400\", description: \"Hello there\" }, { line_amount:\n        -100.0, account_code: \"400\", description: \"Goodbye\", tracking: [{ name:\n        \"Simpson\", option: \"Bart\" }] }]}]}'\n  \"/ManualJournals/{ManualJournalID}\":\n    get:\n      operationId: getManualJournal\n      parameters:\n        - description: Unique identifier for a ManualJournal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: \"{ \\\"Id\\\": \\\"7321fc21-1a13-4f40-ae47-df59cff5676d\\\", \\\"Status\\\":\n                \\\"OK\\\", \\\"ProviderName\\\": \\\"Provider Name Example\\\",\n                \\\"DateTimeUTC\\\": \\\"\\\\/Date(1552399859139)\\\\/\\\",\n                \\\"ManualJournals\\\": [ { \\\"Date\\\":\n                \\\"\\\\/Date(1552348800000+0000)\\\\/\\\", \\\"Status\\\": \\\"POSTED\\\",\n                \\\"LineAmountTypes\\\": \\\"NoTax\\\", \\\"UpdatedDateUTC\\\":\n                \\\"\\\\/Date(1552357188147+0000)\\\\/\\\", \\\"ManualJournalID\\\":\n                \\\"99cb8353-ce73-4a5d-8e0d-8b0edf86cfc4\\\", \\\"Narration\\\": \\\"These\n                aren't the droids you are looking for\\\", \\\"JournalLines\\\": [ {\n                \\\"Description\\\": \\\"These aren't the droids you are looking\n                for\\\", \\\"TaxType\\\": \\\"NONE\\\", \\\"TaxAmount\\\": 0.00,\n                \\\"LineAmount\\\": 100.00, \\\"AccountCode\\\": \\\"429\\\", \\\"Tracking\\\":\n                [], \\\"AccountID\\\": \\\"160bad11-c1b7-4c7e-8903-dca925d78721\\\",\n                \\\"IsBlank\\\": false }, { \\\"Description\\\": \\\"Yes the are\\\",\n                \\\"TaxType\\\": \\\"NONE\\\", \\\"TaxAmount\\\": 0.00, \\\"LineAmount\\\":\n                -100.00, \\\"AccountCode\\\": \\\"200\\\", \\\"Tracking\\\": [],\n                \\\"AccountID\\\": \\\"e0a5d892-9f9f-44f0-a153-5cb7db125170\\\",\n                \\\"IsBlank\\\": false } ], \\\"ShowOnCashBasisReports\\\": true,\n                \\\"HasAttachments\\\": true, \\\"Attachments\\\": [ { \\\"AttachmentID\\\":\n                \\\"166ca8f8-8bc6-4780-8466-a0e474d586ea\\\", \\\"FileName\\\":\n                \\\"giphy.gif\\\", \\\"Url\\\":\n                \\\"https://api.xero.com/api.xro/2.0/manualjournal/99cb8353-ce73-\\\n                4a5d-8e0d-8b0edf86cfc4/Attachments/giphy.gif\\\", \\\"MimeType\\\":\n                \\\"image/gif\\\", \\\"ContentLength\\\": 495727 }, { \\\"AttachmentID\\\":\n                \\\"5e5036f9-b1e0-4c5d-a93f-61900137e40b\\\", \\\"FileName\\\":\n                \\\"ridehistory.pdf\\\", \\\"Url\\\":\n                \\\"https://api.xero.com/api.xro/2.0/manualjournal/99cb8353-ce73-\\\n                4a5d-8e0d-8b0edf86cfc4/Attachments/ridehistory.pdf\\\",\n                \\\"MimeType\\\": \\\"application/pdf\\\", \\\"ContentLength\\\": 4423 } ] }\n                ] }\"\n              schema:\n                $ref: \"#/components/schemas/ManualJournals\"\n          description: Success - return response of type ManualJournals array with a\n            specified ManualJournals\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific manual journal\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateManualJournal\n      parameters:\n        - description: Unique identifier for a ManualJournal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"ManualJournals\": [ { \"Narration\": \"Hello Xero\", \"ManualJournalID\":\n              \"00000000-0000-0000-0000-000000000000\", \"JournalLines\": [] } ] }'\n            schema:\n              $ref: \"#/components/schemas/ManualJournals\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b694559c-686c-4047-b657-661ba6c0dd1f\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552357736850)\\/\", \"ManualJournals\": [ { \"Date\":\n                \"\\/Date(1552262400000+0000)\\/\", \"Status\": \"DRAFT\",\n                \"LineAmountTypes\": \"NoTax\", \"UpdatedDateUTC\":\n                \"\\/Date(1552357736820+0000)\\/\", \"ManualJournalID\":\n                \"07eac261-78ef-47a0-a0eb-a57b74137877\", \"Narration\": \"Hello\n                Xero\", \"JournalLines\": [ { \"Description\": \"Hello there\",\n                \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 100.00,\n                \"AccountCode\": \"400\", \"Tracking\": [], \"AccountID\":\n                \"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\", \"IsBlank\": false }, {\n                \"Description\": \"Goodbye\", \"TaxType\": \"NONE\", \"TaxAmount\": 0.00,\n                \"LineAmount\": -100.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"AccountID\": \"c4f29c22-28c2-4a13-9eab-ecbbd641ffdf\", \"IsBlank\":\n                false } ], \"ShowOnCashBasisReports\": true, \"HasAttachments\":\n                false, \"Attachments\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/ManualJournals\"\n          description: Success - return response of type ManualJournals array with an\n            updated ManualJournal\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific manual journal\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.of(2020, Month.OCTOBER, 10)\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2019-10-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - is_list: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          manualJournalLines: null\n        - credit: null\n          is_object: true\n          key: credit\n          keyPascal: ManualJournalLine\n        - default: 100\n          key: lineAmount\n          keyPascal: LineAmount\n          keySnake: line_amount\n          lineAmount: null\n          nonString: true\n          object: credit\n        - accountCode: null\n          default: 400\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: credit\n        - default: Hello there\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: credit\n        - add_credit: null\n          is_last: true\n          is_list_add: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          object: credit\n        - debit: null\n          is_object: true\n          key: debit\n          keyPascal: ManualJournalLine\n        - default: -100\n          key: lineAmount\n          keyPascal: LineAmount\n          keySnake: line_amount\n          lineAmount: null\n          nonString: true\n          object: debit\n        - accountCode: null\n          default: 120\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: debit\n        - default: Hello there\n          description: null\n          is_last: true\n          key: description\n          keyPascal: Description\n          object: debit\n        - add_debit: null\n          is_last: true\n          is_list_add: true\n          key: manualJournalLines\n          keyPascal: ManualJournalLine\n          keySnake: manual_journal_lines\n          object: debit\n        - is_object: true\n          key: manualJournal\n          keyPascal: ManualJournal\n          keySnake: manual_journal\n          manualJournal: null\n        - default: Foobar\n          key: narration\n          keyPascal: Narration\n          narration: null\n          object: manualJournal\n        - date: null\n          default: dateValue\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: manualJournal\n          python: date_value\n        - default: manualJournalLines\n          is_last: true\n          is_variable: true\n          key: manualJournalLines\n          keyPascal: JournalLines\n          keySnake: journal_lines\n          nonString: true\n          object: manualJournal\n          python: manual_journal_lines\n          set_manualJournalLines: null\n        - is_object: true\n          key: manualJournals\n          keyPascal: ManualJournals\n          manualJournals: null\n        - add_manualJournal: null\n          is_array_add: true\n          is_last: true\n          java: ManualJournals\n          key: manualJournals\n          keyPascal: ManualJournals\n          keySnake: manual_journals\n          object: manualJournal\n          php: manualJournals\n          python: manual_journal\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ manualJournals: [{ narration: \"Hello Xero\",\n        manualJournalId: \"00000000-0000-0000-0000-000000000000\", journalLines:\n        [] }]}'\n      x-ruby-requestBody: 'manual_journals = { manual_journals: [{ narration: \"Hello\n        Xero\", manual_journal_id: \"00000000-0000-0000-0000-000000000000\",\n        journal_lines: [] }]}'\n  \"/ManualJournals/{ManualJournalID}/Attachments\":\n    get:\n      operationId: getManualJournalAttachments\n      parameters:\n        - description: Unique identifier for a ManualJournal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5fa4b3ef-7945-45a7-9bab-10e830673dfb\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552404121471)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"16e86f32-3e25-4209-8662-c0dfd91b654c\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, {\n                \"AttachmentID\": \"ff7c439e-a057-4807-ac2c-b558d7df7511\",\n                \"FileName\": \"foobar.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/foobar.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with all\n            Attachments for a ManualJournals\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachment for a specific manual journal\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/ManualJournals/{ManualJournalID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getManualJournalAttachmentById\n      parameters:\n        - description: Unique identifier for a ManualJournal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for a Attachment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Manual Journal as\n            binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Allows you to retrieve a specific attachment from a specific manual\n        journal using a unique attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/ManualJournals/{ManualJournalID}/Attachments/{FileName}\":\n    get:\n      operationId: getManualJournalAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a ManualJournal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a ManualJournal\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Manual Journal as\n            binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific manual journal by file\n        name\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateManualJournalAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a ManualJournal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a ManualJournal\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"e1cb9deb-a8f0-477f-b4d1-cf0c6c39e080\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552401039306)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"16e86f32-3e25-4209-8662-c0dfd91b654c\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with an update\n            Attachment for a ManualJournals\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates a specific attachment from a specific manual journal by file name\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createManualJournalAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a ManualJournal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a ManualJournal\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"a864994c-e7d7-4dee-b5ca-0a729fde2f39\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552400898428)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"47ac97ff-d4f9-48a0-8a8e-49fae29129e7\", \"FileName\":\n                \"foobar.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/ManualJournals/0b159335-606b-485f-b51b-97b3b32bad32/Attachments/foobar.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with a newly\n            created Attachment for a ManualJournals\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates a specific attachment for a specific manual journal by file name\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/ManualJournals/{ManualJournalID}/History\":\n    get:\n      operationId: getManualJournalsHistory\n      parameters:\n        - description: Xero generated unique identifier for a manual journal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history for a specific manual journal\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createManualJournalHistoryRecord\n      parameters:\n        - description: Xero generated unique identifier for a manual journal\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ManualJournalID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific manual journal\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /Organisation:\n    get:\n      operationId: getOrganisations\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"27b7a645-a3ee-43c8-b2c6-a2fa7b84c8c5\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552404447003)\\/\", \"Organisations\": [ { \"APIKey\":\n                \"CTJ60UH519MXQIXEJSDPDALS3EOZ5Y\", \"Name\": \"Dev Evangelist - Sid\n                Test 3 (NZ-2016-02)\", \"LegalName\": \"Dev Evangelist - Sid Test 3\n                (NZ-2016-02)\", \"PaysTax\": true, \"Version\": \"NZ\",\n                \"OrganisationType\": \"COMPANY\", \"BaseCurrency\": \"NZD\",\n                \"CountryCode\": \"NZ\", \"IsDemoCompany\": false,\n                \"OrganisationStatus\": \"ACTIVE\", \"TaxNumber\": \"071-138-054\",\n                \"FinancialYearEndDay\": 31, \"FinancialYearEndMonth\": 3,\n                \"SalesTaxBasis\": \"PAYMENTS\", \"SalesTaxPeriod\": \"TWOMONTHS\",\n                \"DefaultSalesTax\": \"Tax Exclusive\", \"DefaultPurchasesTax\": \"Tax\n                Exclusive\", \"PeriodLockDate\": \"\\/Date(1546214400000+0000)\\/\",\n                \"EndOfYearLockDate\": \"\\/Date(1546214400000+0000)\\/\",\n                \"CreatedDateUTC\": \"\\/Date(1455827393000)\\/\",\n                \"OrganisationEntityType\": \"COMPANY\", \"Timezone\":\n                \"NEWZEALANDSTANDARDTIME\", \"ShortCode\": \"!mBdtL\",\n                \"OrganisationID\": \"b2c885a9-4bb9-4a00-9b6e-6c2bf60b1a2b\",\n                \"Edition\": \"BUSINESS\", \"Class\": \"PREMIUM\", \"Addresses\": [],\n                \"Phones\": [], \"ExternalLinks\": [], \"PaymentTerms\": {} } ] }'\n              schema:\n                $ref: \"#/components/schemas/Organisations\"\n          description: Success - return response of type Organisation array with all\n            Organisation\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves Xero organisation details\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Organisation/Actions:\n    get:\n      operationId: getOrganisationActions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"f02c0dd1-1917-4d57-9853-997f6bcaf2bc\", \"Status\": \"OK\",\n                \"ProviderName\": \"Java OA2 dev 01\", \"DateTimeUTC\":\n                \"/Date(1602883301013)/\", \"Actions\": [ { \"Name\":\n                \"CreateApprovedInvoice\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateDraftPurchaseOrder\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateApprovedBill\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"AttachFilesIntoInvoice\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"UseMulticurrency\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateDraftInvoice\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateRepeatingInvoice\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateRepeatingBill\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateSentQuote\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateInvoicePayment\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateApprovedPurchaseOrder\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateDraftQuote\", \"Status\": \"ALLOWED\" }, { \"Name\":\n                \"CreateDraftBill\", \"Status\": \"ALLOWED\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Actions\"\n          description: Success - return response of type Actions array with all key actions\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves a list of the key actions your app has permission to perform\n        in the connected Xero organisation.\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Organisation/{OrganisationID}/CISSettings\":\n    get:\n      operationId: getOrganisationCISSettings\n      parameters:\n        - description: The unique Xero identifier for an organisation\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: OrganisationID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CISOrgSettings\"\n          description: Success - return response of type Organisation array with specified\n            Organisation\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves the CIS settings for the Xero organistaion.\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Overpayments:\n    get:\n      operationId: getOverpayments\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"AUTHORISED\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + Overpayment.StatusEnum.AUTHORISED +\n            \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\Overpayment::STATUS_AUTHORISED .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::Overpayment::AUTHORISED}\n        - description: Order by an any element\n          example: Status ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: e.g. page=1 – Up to 100 overpayments will be returned in a single\n            API call with line items shown for each overpayment\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"c0ce675e-e5bc-4b2a-a20e-76a9eaedf89d\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552428951416)\\/\", \"Overpayments\": [ { \"OverpaymentID\":\n                \"098b4dcb-5622-4699-87f8-9d40c4ccceb3\", \"ID\":\n                \"098b4dcb-5622-4699-87f8-9d40c4ccceb3\", \"Type\":\n                \"SPEND-OVERPAYMENT\", \"RemainingCredit\": 500.00, \"Allocations\":\n                [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": {\n                \"ContactID\": \"af3ffcc1-c578-4658-82f3-5d8d458cc7af\", \"Name\":\n                \"Daddy Warbucks\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\":\n                [], \"SubTotal\": 500.00, \"TotalTax\": 0.00, \"Total\": 500.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552428535123+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" }, { \"OverpaymentID\":\n                \"2a8bda49-8908-473b-8bcf-1f90990460eb\", \"ID\":\n                \"2a8bda49-8908-473b-8bcf-1f90990460eb\", \"Type\":\n                \"RECEIVE-OVERPAYMENT\", \"RemainingCredit\": 20.00, \"Allocations\":\n                [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\":\n                \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\":\n                [], \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552428568250+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" }, { \"OverpaymentID\":\n                \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"ID\":\n                \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"Type\":\n                \"SPEND-OVERPAYMENT\", \"RemainingCredit\": 3000.00, \"Allocations\":\n                [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\":\n                \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\":\n                [], \"SubTotal\": 3000.00, \"TotalTax\": 0.00, \"Total\": 3000.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552428781527+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" }, { \"OverpaymentID\":\n                \"0859adbc-ea00-40cd-a877-258cf8644975\", \"ID\":\n                \"0859adbc-ea00-40cd-a877-258cf8644975\", \"Type\":\n                \"RECEIVE-OVERPAYMENT\", \"RemainingCredit\": 20.00, \"Allocations\":\n                [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\":\n                \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\":\n                [], \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552428842190+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" }, { \"OverpaymentID\":\n                \"687b877f-634a-415d-92b2-74e62977de30\", \"ID\":\n                \"687b877f-634a-415d-92b2-74e62977de30\", \"Type\":\n                \"RECEIVE-OVERPAYMENT\", \"RemainingCredit\": 20.00, \"Allocations\":\n                [], \"Payments\": [], \"HasAttachments\": false, \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\":\n                \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\":\n                [], \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552428950730+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Overpayments\"\n          description: Success - return response of type Overpayments array with all\n            Overpayments\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves overpayments\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Overpayments/{OverpaymentID}\":\n    get:\n      operationId: getOverpayment\n      parameters:\n        - description: Unique identifier for a Overpayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: OverpaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: ' { \"Id\": \"46c9e8e2-9410-4e75-9297-f0ca8fa76c32\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553278835158)\\/\", \"Overpayments\": [ { \"OverpaymentID\":\n                \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"ID\":\n                \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"CurrencyRate\":\n                1.000000, \"Type\": \"SPEND-OVERPAYMENT\", \"RemainingCredit\":\n                2999.00, \"Allocations\": [ { \"Amount\": 1.00, \"Date\":\n                \"\\/Date(1552348800000+0000)\\/\", \"Invoice\": { \"InvoiceID\":\n                \"c45720a1-ade3-4a38-a064-d15489be6841\", \"InvoiceNumber\": \"\",\n                \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [],\n                \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false,\n                \"LineItems\": [] } } ], \"Payments\": [], \"HasAttachments\": true,\n                \"Attachments\": [ { \"AttachmentID\":\n                \"247dd942-5245-47a7-adb1-4d9ea075b431\", \"FileName\": \"giphy.gif\",\n                \"Url\":\n                \"https://api.xero.com/api.xro/2.0/banktransaction/ed7f6041-c915-4667-bd1d-54c48e92161e/Attachments/giphy.gif\",\n                \"MimeType\": \"image/gif\", \"ContentLength\": 495727 } ], \"Contact\":\n                { \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\",\n                \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\":\n                \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\", \"AttentionTo\": \"\" }, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"DDI\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"FAX\", \"PhoneNumber\":\n                \"333-2233\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"MOBILE\", \"PhoneNumber\": \"444-3433\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" } ],\n                \"UpdatedDateUTC\": \"\\/Date(1551747281053+0000)\\/\",\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"NoTax\", \"LineItems\":\n                [ { \"Description\": \"Broken TV deposit\", \"UnitAmount\": 3000.00,\n                \"TaxType\": \"NONE\", \"TaxAmount\": 0.00, \"LineAmount\": 3000.00,\n                \"AccountCode\": \"800\", \"Tracking\": [], \"Quantity\": 1.0000,\n                \"DiscountEnteredAsPercent\": true, \"ValidationErrors\": [] } ],\n                \"SubTotal\": 3000.00, \"TotalTax\": 0.00, \"Total\": 3000.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552428952890+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Overpayments\"\n          description: Success - return response of type Overpayments array with specified\n            Overpayments\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific overpayment using a unique overpayment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Overpayments/{OverpaymentID}/Allocations\":\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createOverpaymentAllocations\n      parameters:\n        - description: Unique identifier for a Overpayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: OverpaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Allocations\": [ { \"Invoice\": { \"InvoiceID\":\n              \"00000000-0000-0000-0000-000000000000\", \"LineItems\": [],\n              \"Contact\": {}, \"Type\": \"ACCPAY\" }, \"Amount\": 10.00, \"Date\":\n              \"2019-03-12\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Allocations\"\n        description: Allocations array with Allocation object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"3b7f7be2-384a-4703-bcfb-c56e9116c914\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552428952968)\\/\", \"Allocations\": [ { \"Amount\": 1.00,\n                \"Date\": \"\\/Date(1552348800000+0000)\\/\", \"Invoice\": {\n                \"InvoiceID\": \"c45720a1-ade3-4a38-a064-d15489be6841\", \"Payments\":\n                [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [],\n                \"ValidationErrors\": [] }, \"Overpayment\": { \"OverpaymentID\":\n                \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"ID\":\n                \"ed7f6041-c915-4667-bd1d-54c48e92161e\", \"LineItems\": [] },\n                \"ValidationErrors\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Allocations\"\n          description: Success - return response of type Allocations array with all\n            Allocation for Overpayments\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a single allocation for a specific overpayment\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - default: 00000000-0000-0000-0000-000000000000\n          invoiceID: null\n          is_last: true\n          is_uuid: true\n          key: invoiceID\n          keyPascal: InvoiceID\n          keySnake: invoice_id\n          object: invoice\n        - allocation: null\n          is_object: true\n          key: allocation\n          keyPascal: Allocation\n        - amount: null\n          default: 1\n          key: amount\n          keyPascal: Amount\n          nonString: true\n          object: allocation\n        - date: null\n          default: currDate\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: allocation\n          python: curr_date\n        - default: invoice\n          is_last: true\n          is_variable: true\n          key: invoice\n          keyPascal: Invoice\n          nonString: true\n          object: allocation\n          set_invoice: null\n        - allocations: null\n          is_object: true\n          key: allocations\n          keyPascal: Allocations\n        - add_allocation: null\n          is_array_add: true\n          is_last: true\n          java: Allocations\n          key: allocations\n          keyPascal: Allocations\n          object: allocation\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ allocations: [{ invoice: { invoiceID:\n        \"00000000-0000-0000-0000-000000000000\", lineItems: [], contact: {},\n        type: Invoice.TypeEnum.ACCPAY }, amount: 10.0, date: \"2019-03-12\" }]}'\n      x-ruby-requestBody: 'allocations = { allocations: [{ invoice: { invoice_id:\n        \"00000000-0000-0000-0000-000000000000\", line_items: [], contact: {},\n        type: XeroRuby::Accounting::Invoice::ACCPAY }, amount: 10.0, date:\n        \"2019-03-12\" }]}'\n  \"/Overpayments/{OverpaymentID}/History\":\n    get:\n      operationId: getOverpaymentHistory\n      parameters:\n        - description: Unique identifier for a Overpayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: OverpaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history records of a specific overpayment\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createOverpaymentHistory\n      parameters:\n        - description: Unique identifier for a Overpayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: OverpaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"DateUTCString\":\n                \"2019-03-12T22:30:13\", \"DateUTC\": \"\\/Date(1552429813667)\\/\",\n                \"Details\": \"Hello World\", \"ValidationErrors\": [ { \"Message\":\n                \"The document with the supplied id was not found for this\n                endpoint.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: A failed request due to validation error - API is not able to\n            create HistoryRecord for Overpayments\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific overpayment\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /PaymentServices:\n    get:\n      operationId: getPaymentServices\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"ab82a7dd-5070-4e82-b841-0af52909fe04\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552488713171)\\/\", \"PaymentServices\": [ {\n                \"PaymentServiceID\": \"54b3b4f6-0443-4fba-bcd1-61ec0c35ca55\",\n                \"PaymentServiceName\": \"PayUpNow\", \"PaymentServiceUrl\":\n                \"https://www.payupnow.com/\", \"PaymentServiceType\": \"Custom\",\n                \"PayNowText\": \"Time To Pay\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/PaymentServices\"\n          description: Success - return response of type PaymentServices array for all\n            PaymentService\n      security:\n        - OAuth2:\n            - paymentservices\n      summary: Retrieves payment services\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createPaymentService\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"PaymentServices\": [ { \"PaymentServiceName\": \"PayUpNow\",\n              \"PaymentServiceUrl\": \"https://www.payupnow.com/\", \"PayNowText\":\n              \"Time To Pay\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/PaymentServices\"\n        description: PaymentServices array with PaymentService object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"7ed8b3c0-2155-49ee-a583-f2dce6607dfb\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552488712813)\\/\", \"PaymentServices\": [ {\n                \"PaymentServiceID\": \"54b3b4f6-0443-4fba-bcd1-61ec0c35ca55\",\n                \"PaymentServiceName\": \"PayUpNow\", \"PaymentServiceUrl\":\n                \"https://www.payupnow.com/\", \"PaymentServiceType\": \"Custom\",\n                \"PayNowText\": \"Time To Pay\", \"ValidationErrors\": [ { \"Message\":\n                \"Payment service could not be found\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/PaymentServices\"\n          description: Success - return response of type PaymentServices array for newly\n            created PaymentService\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - paymentservices\n      summary: Creates a payment service\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: paymentService\n          keyPascal: PaymentService\n          keySnake: payment_service\n          object: null\n        - default: ACME Payments\n          key: paymentServiceName\n          keyPascal: PaymentServiceName\n          keySnake: payment_service_name\n          object: paymentService\n          paymentServiceName: null\n        - default: https://www.payupnow.com/\n          key: paymentServiceUrl\n          keyPascal: PaymentServiceUrl\n          keySnake: payment_service_url\n          object: paymentService\n          paymentServiceUrl: null\n        - default: Pay Now\n          is_last: true\n          key: payNowText\n          keyPascal: PayNowText\n          keySnake: pay_now_text\n          object: paymentService\n          payNowText: null\n        - is_object: true\n          key: paymentServices\n          keyPascal: PaymentServices\n          paymentServices: null\n        - add_paymentService: null\n          is_array_add: true\n          is_last: true\n          java: PaymentServices\n          key: paymentServices\n          keyPascal: PaymentServices\n          object: paymentService\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ paymentServices: [{ paymentServiceName: \"PayUpNow\",\n        paymentServiceUrl: \"https://www.payupnow.com/\", payNowText: \"Time To\n        Pay\" }]}'\n      x-ruby-requestBody: 'payment_services = { payment_services: [{\n        payment_service_name: \"PayUpNow\", payment_service_url:\n        \"https://www.payupnow.com/\", pay_now_text: \"Time To Pay\" }]}'\n  /Payments:\n    get:\n      operationId: getPayments\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"AUTHORISED\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + Payment.StatusEnum.AUTHORISED + \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\Payment::STATUS_AUTHORISED .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::Payment::AUTHORISED}\n        - description: Order by an any element\n          example: Amount ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: Up to 100 payments will be returned in a single API call\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"9f310473-e1b5-4704-a25c-eec653deb596\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552431874205)\\/\", \"Payments\": [ { \"PaymentID\":\n                \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"BatchPaymentID\":\n                \"b54aa50c-794c-461b-89d1-846e1b84d9c0\", \"BatchPayment\": {\n                \"Account\": { \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\"\n                }, \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\",\n                \"Date\": \"\\/Date(1552521600000+0000)\\/\", \"Type\": \"RECBATCH\",\n                \"Status\": \"AUTHORISED\", \"TotalAmount\": \"50.00\",\n                \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\",\n                \"IsReconciled\": \"false\" }, \"Date\":\n                \"\\/Date(1543449600000+0000)\\/\", \"BankAmount\": 46.00, \"Amount\":\n                46.00, \"Reference\": \"\", \"CurrencyRate\": 1.000000, \"PaymentType\":\n                \"ACCRECPAYMENT\", \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\":\n                \"\\/Date(1541176592690+0000)\\/\", \"HasAccount\": true,\n                \"IsReconciled\": false, \"Account\": { \"AccountID\":\n                \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Code\": \"970\" },\n                \"Invoice\": { \"Type\": \"ACCREC\", \"InvoiceID\":\n                \"046d8a6d-1ae1-4b4d-9340-5601bdf41b87\", \"InvoiceNumber\":\n                \"INV-0002\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\":\n                [], \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\":\n                false, \"Contact\": { \"ContactID\":\n                \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"ContactNumber\": \"\",\n                \"Name\": \"Barney Rubble-83203\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"LineItems\": [], \"CurrencyCode\":\n                \"NZD\" }, \"HasValidationErrors\": false }, { \"PaymentID\":\n                \"6b037c9b-2e5d-4905-84d3-eabfb3438242\", \"Date\":\n                \"\\/Date(1552521600000+0000)\\/\", \"BankAmount\": 2.00, \"Amount\":\n                2.00, \"Reference\": \"Too much\", \"CurrencyRate\": 1.000000,\n                \"PaymentType\": \"ARCREDITPAYMENT\", \"Status\": \"AUTHORISED\",\n                \"UpdatedDateUTC\": \"\\/Date(1551812346173+0000)\\/\", \"HasAccount\":\n                true, \"IsReconciled\": false, \"Account\": { \"AccountID\":\n                \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Code\": \"980\" },\n                \"Invoice\": { \"Type\": \"ACCRECCREDIT\", \"InvoiceID\":\n                \"249f15fa-f2a7-4acc-8769-0984103f2225\", \"InvoiceNumber\":\n                \"CN-0005\", \"Payments\": [], \"CreditNotes\": [], \"Prepayments\": [],\n                \"Overpayments\": [], \"HasErrors\": false, \"IsDiscounted\": false,\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactNumber\": \"\",\n                \"Name\": \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"LineItems\": [], \"CurrencyCode\":\n                \"NZD\" }, \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/Payments\"\n          description: Success - return response of type Payments array for all Payments\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves payments for invoices and credit notes\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: createPayment\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Payments\": [ { \"Invoice\": { \"LineItems\": [], \"InvoiceID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"Account\": { \"Code\":\n              \"970\" }, \"Date\": \"2019-03-12\", \"Amount\": 1 } ] }'\n            schema:\n              $ref: \"#/components/schemas/Payment\"\n        description: Request body with a single Payment object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"83b5715a-6a77-4c16-b5b8-2da08b5fde44\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552432238716)\\/\", \"Payments\": [ { \"PaymentID\":\n                \"61ed71fc-01bf-4eb8-8419-8a18789ff45f\", \"Date\":\n                \"\\/Date(1552348800000+0000)\\/\", \"BankAmount\": 1.00, \"Amount\":\n                1.00, \"CurrencyRate\": 1.000000, \"PaymentType\": \"ACCRECPAYMENT\",\n                \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\":\n                \"\\/Date(1552432238623+0000)\\/\", \"HasAccount\": true,\n                \"IsReconciled\": false, \"Account\": { \"AccountID\":\n                \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Code\": \"970\", \"Name\":\n                \"Owner A Funds Introduced\" }, \"Invoice\": { \"Type\": \"ACCREC\",\n                \"InvoiceID\": \"c7c37b83-ac95-45ea-88ba-8ad83a5f22fe\",\n                \"InvoiceNumber\": \"INV-0004\", \"Reference\": \"\", \"Prepayments\": [],\n                \"Overpayments\": [], \"AmountDue\": 229.00, \"AmountPaid\": 1.00,\n                \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\":\n                false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\":\n                \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney\n                Rubble-83203\", \"ContactPersons\": [], \"HasValidationErrors\":\n                false }, \"DateString\": \"2018-10-10T00:00:00\", \"Date\":\n                \"\\/Date(1539129600000+0000)\\/\", \"DueDateString\":\n                \"2018-10-18T00:00:00\", \"DueDate\":\n                \"\\/Date(1539820800000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"boo\", \"UnitAmount\": 200.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\":\n                30.00, \"LineAmount\": 200.00, \"AccountCode\": \"200\", \"Tracking\":\n                [], \"Quantity\": 1.0000, \"LineItemID\":\n                \"173dfdb9-43b5-4bd2-ae25-9419e662a3a7\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 200.00, \"TotalTax\": 30.00, \"Total\": 230.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552432238623+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" }, \"HasValidationErrors\": true,\n                \"ValidationErrors\": [ { \"Message\": \"Payment amount exceeds the\n                amount outstanding on this document\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Payments\"\n          description: Success - return response of type Payments array for newly created\n            Payment\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a single payment for invoice or credit notes\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2020-10-10')\n          python: dateutil.parser.parse('2020-10-10T00:00:00Z')\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - default: 00000000-0000-0000-0000-000000000000\n          invoiceID: null\n          is_last: true\n          is_uuid: true\n          key: invoiceID\n          keyPascal: InvoiceID\n          keySnake: invoice_id\n          object: invoice\n        - account: null\n          is_object: true\n          key: account\n          keyPascal: Account\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          object: account\n        - is_object: true\n          key: payment\n          keyPascal: Payment\n          payment: null\n        - default: invoice\n          is_variable: true\n          key: invoice\n          keyPascal: Invoice\n          nonString: true\n          object: payment\n          set_invoice: null\n        - default: account\n          is_variable: true\n          key: account\n          keyPascal: Account\n          nonString: true\n          object: payment\n          set_account: null\n        - amount: null\n          default: 1\n          key: amount\n          keyPascal: Amount\n          nonString: true\n          object: payment\n        - date: null\n          default: dateValue\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: payment\n          python: date_value\n        - is_object: true\n          key: payments\n          keyPascal: Payments\n          payments: null\n        - add_payment: null\n          is_array_add: true\n          is_last: true\n          java: Payments\n          key: payments\n          keyPascal: Payments\n          object: payment\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ invoice: { invoiceID:\n        \"00000000-0000-0000-0000-000000000000\", lineItems: [], contact: {},\n        type: Invoice.TypeEnum.ACCPAY }, account: { code: \"970\" }, date:\n        \"2019-03-12\", amount: 1.0 }'\n      x-ruby-requestBody: 'invoice = { invoice: { invoice_id:\n        \"00000000-0000-0000-0000-000000000000\", line_items: [], contact: {},\n        type: XeroRuby::Accounting::Invoice::ACCPAY }, account: { code: \"970\" },\n        date: \"2019-03-12\", amount: 1.0 }'\n    put:\n      operationId: createPayments\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Payments\": [ { \"Invoice\": { \"LineItems\": [], \"InvoiceID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"Account\": { \"Code\":\n              \"970\" }, \"Date\": \"2019-03-12\", \"Amount\": 1 } ] }'\n            schema:\n              $ref: \"#/components/schemas/Payments\"\n        description: Payments array with Payment object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"83b5715a-6a77-4c16-b5b8-2da08b5fde44\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552432238716)\\/\", \"Payments\": [ { \"PaymentID\":\n                \"61ed71fc-01bf-4eb8-8419-8a18789ff45f\", \"Date\":\n                \"\\/Date(1552348800000+0000)\\/\", \"BankAmount\": 1.00, \"Amount\":\n                1.00, \"CurrencyRate\": 1.000000, \"PaymentType\": \"ACCRECPAYMENT\",\n                \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\":\n                \"\\/Date(1552432238623+0000)\\/\", \"HasAccount\": true,\n                \"IsReconciled\": false, \"Account\": { \"AccountID\":\n                \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Code\": \"970\", \"Name\":\n                \"Owner A Funds Introduced\" }, \"Invoice\": { \"Type\": \"ACCREC\",\n                \"InvoiceID\": \"c7c37b83-ac95-45ea-88ba-8ad83a5f22fe\",\n                \"InvoiceNumber\": \"INV-0004\", \"Reference\": \"\", \"Prepayments\": [],\n                \"Overpayments\": [], \"AmountDue\": 229.00, \"AmountPaid\": 1.00,\n                \"SentToContact\": false, \"CurrencyRate\": 1.000000, \"HasErrors\":\n                false, \"IsDiscounted\": false, \"Contact\": { \"ContactID\":\n                \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\": \"Barney\n                Rubble-83203\", \"ContactPersons\": [], \"HasValidationErrors\":\n                false }, \"DateString\": \"2018-10-10T00:00:00\", \"Date\":\n                \"\\/Date(1539129600000+0000)\\/\", \"DueDateString\":\n                \"2018-10-18T00:00:00\", \"DueDate\":\n                \"\\/Date(1539820800000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"boo\", \"UnitAmount\": 200.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\":\n                30.00, \"LineAmount\": 200.00, \"AccountCode\": \"200\", \"Tracking\":\n                [], \"Quantity\": 1.0000, \"LineItemID\":\n                \"173dfdb9-43b5-4bd2-ae25-9419e662a3a7\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 200.00, \"TotalTax\": 30.00, \"Total\": 230.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552432238623+0000)\\/\",\n                \"CurrencyCode\": \"NZD\" }, \"HasValidationErrors\": true,\n                \"ValidationErrors\": [ { \"Message\": \"Payment amount exceeds the\n                amount outstanding on this document\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Payments\"\n          description: Success - return response of type Payments array for newly created\n            Payment\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates multiple payments for invoices or credit notes\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2020-10-10')\n          python: dateutil.parser.parse('2020-10-10T00:00:00Z')\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - default: 00000000-0000-0000-0000-000000000000\n          invoiceID: null\n          is_last: true\n          is_uuid: true\n          key: invoiceID\n          keyPascal: InvoiceID\n          keySnake: invoice_id\n          object: invoice\n        - account: null\n          is_object: true\n          key: account\n          keyPascal: Account\n        - accountID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          key: accountID\n          keyPascal: AccountID\n          keySnake: account_id\n          object: account\n        - is_object: true\n          key: payment\n          keyPascal: Payment\n          payment: null\n        - default: invoice\n          is_variable: true\n          key: invoice\n          keyPascal: Invoice\n          nonString: true\n          object: payment\n          set_invoice: null\n        - default: account\n          is_variable: true\n          key: account\n          keyPascal: Account\n          nonString: true\n          object: payment\n          set_account: null\n        - amount: null\n          default: 1\n          key: amount\n          keyPascal: Amount\n          nonString: true\n          object: payment\n        - date: null\n          default: dateValue\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: payment\n          python: date_value\n        - is_object: true\n          key: payments\n          keyPascal: Payments\n          payments: null\n        - add_payment: null\n          is_array_add: true\n          is_last: true\n          java: Payments\n          key: payments\n          keyPascal: Payments\n          object: payment\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ payments: [{ invoice: { invoiceID:\n        \"00000000-0000-0000-0000-000000000000\", lineItems: [], contact: {},\n        type: Invoice.TypeEnum.ACCPAY }, account: { code: \"970\" }, date:\n        \"2019-03-12\", amount: 1.0 }]}'\n      x-ruby-requestBody: 'payments = { payments: [{ invoice: { invoice_id:\n        \"00000000-0000-0000-0000-000000000000\", line_items: [], contact: {},\n        type: XeroRuby::Accounting::Invoice::ACCPAY }, account: { code: \"970\" },\n        date: \"2019-03-12\", amount: 1.0 }]}'\n  \"/Payments/{PaymentID}\":\n    get:\n      operationId: getPayment\n      parameters:\n        - description: Unique identifier for a Payment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"4876f9ee-3a17-47d8-8c1b-84377c8f2998\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552431874852)\\/\", \"Payments\": [ { \"PaymentID\":\n                \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"BatchPaymentID\":\n                \"b54aa50c-794c-461b-89d1-846e1b84d9c0\", \"BatchPayment\": {\n                \"Account\": { \"AccountID\": \"5690f1e8-1d02-4893-90c2-ee1a69eff942\"\n                }, \"BatchPaymentID\": \"b54aa50c-794c-461b-89d1-846e1b84d9c0\",\n                \"Date\": \"\\/Date(1543449600000+0000)\\/\", \"Type\": \"RECBATCH\",\n                \"Status\": \"AUTHORISED\", \"TotalAmount\": \"50.00\",\n                \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\",\n                \"IsReconciled\": \"false\" }, \"Date\":\n                \"\\/Date(1543449600000+0000)\\/\", \"BankAmount\": 46.00, \"Amount\":\n                46.00, \"CurrencyRate\": 1.000000, \"PaymentType\": \"ACCRECPAYMENT\",\n                \"Status\": \"AUTHORISED\", \"UpdatedDateUTC\":\n                \"\\/Date(1541176592690+0000)\\/\", \"HasAccount\": true,\n                \"IsReconciled\": false, \"Account\": { \"AccountID\":\n                \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Code\": \"970\", \"Name\":\n                \"Owner A Funds Introduced\" }, \"Invoice\": { \"Type\": \"ACCREC\",\n                \"InvoiceID\": \"046d8a6d-1ae1-4b4d-9340-5601bdf41b87\",\n                \"InvoiceNumber\": \"INV-0002\", \"Reference\": \"Red Fish, Blue Fish\",\n                \"Payments\": [ { \"PaymentID\":\n                \"99ea7f6b-c513-4066-bc27-b7c65dcd76c2\", \"Date\":\n                \"\\/Date(1543449600000+0000)\\/\", \"Amount\": 46.00, \"CurrencyRate\":\n                1.000000, \"HasAccount\": false, \"HasValidationErrors\": false } ],\n                \"Prepayments\": [], \"Overpayments\": [], \"AmountDue\": 0.00,\n                \"AmountPaid\": 46.00, \"SentToContact\": true, \"CurrencyRate\":\n                1.000000, \"HasErrors\": false, \"IsDiscounted\": false, \"Contact\":\n                { \"ContactID\": \"a3675fc4-f8dd-4f03-ba5b-f1870566bcd7\", \"Name\":\n                \"Barney Rubble-83203\", \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"DateString\":\n                \"2018-10-20T00:00:00\", \"Date\": \"\\/Date(1539993600000+0000)\\/\",\n                \"DueDateString\": \"2018-12-30T00:00:00\", \"DueDate\":\n                \"\\/Date(1546128000000+0000)\\/\", \"Status\": \"PAID\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Acme Tires\", \"UnitAmount\": 20.00, \"TaxType\": \"OUTPUT2\",\n                \"TaxAmount\": 6.00, \"LineAmount\": 40.00, \"AccountCode\": \"200\",\n                \"Tracking\": [], \"Quantity\": 2.0000, \"LineItemID\":\n                \"878d1688-a905-4866-ae91-5a772c2540c7\", \"ValidationErrors\": [] }\n                ], \"SubTotal\": 40.00, \"TotalTax\": 6.00, \"Total\": 46.00,\n                \"UpdatedDateUTC\": \"\\/Date(1541176592690+0000)\\/\",\n                \"CurrencyCode\": \"NZD\", \"FullyPaidOnDate\":\n                \"\\/Date(1543449600000+0000)\\/\" }, \"HasValidationErrors\": false }\n                ] }'\n              schema:\n                $ref: \"#/components/schemas/Payments\"\n          description: Success - return response of type Payments array for specified\n            Payment\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific payment for invoices and credit notes using a\n        unique payment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: deletePayment\n      parameters:\n        - description: Unique identifier for a Payment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{   \"Payments\":[   {   \"Status\":\"DELETED\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/PaymentDelete\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"ee23328c-4a8b-4ee7-8fb6-9796ffab9cb0\", \"Status\": \"OK\",\n                \"ProviderName\": \"provider-name\", \"DateTimeUTC\":\n                \"\\/Date(1583945852489)\\/\", \"Payments\": [ { \"PaymentID\":\n                \"c94c996b-1ab3-4ff3-ad19-1cdc77f30817\", \"Date\":\n                \"\\/Date(1567382400000+0000)\\/\", \"BankAmount\": 2.00, \"Amount\":\n                2.00, \"Reference\": \"foobar\", \"CurrencyRate\": 1.000000,\n                \"PaymentType\": \"APCREDITPAYMENT\", \"Status\": \"DELETED\",\n                \"UpdatedDateUTC\": \"\\/Date(1583945852373+0000)\\/\", \"HasAccount\":\n                true, \"IsReconciled\": false, \"Account\": { \"AccountID\":\n                \"57f261f0-e32d-4a7f-be82-22cd992c6367\", \"Code\": \"033\", \"Name\":\n                \"Checking account\" }, \"Invoice\": { \"Type\": \"ACCPAYCREDIT\",\n                \"InvoiceID\": \"dba68ebc-c05a-4e2d-b97d-964349e5b8d6\",\n                \"InvoiceNumber\": \"\", \"Reference\": \"\", \"Prepayments\": [],\n                \"Overpayments\": [], \"AmountDue\": 22.00, \"AmountPaid\": 0.00,\n                \"SentToContact\": false, \"CurrencyRate\": 1.000000,\n                \"IsDiscounted\": false, \"HasErrors\": false, \"Contact\": {\n                \"ContactID\": \"216830cb-9a68-487e-928b-c1a7ccc4fc81\", \"Name\":\n                \"FooBar73005\", \"ContactPersons\": [], \"HasValidationErrors\":\n                false }, \"DateString\": \"2017-01-02T00:00:00\", \"Date\":\n                \"\\/Date(1483315200000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Sample Item72716\", \"UnitAmount\": 20.00, \"TaxType\": \"INPUT\",\n                \"TaxAmount\": 2.00, \"LineAmount\": 20.00, \"AccountCode\": \"400\",\n                \"Tracking\": [], \"Quantity\": 1.0000, \"ValidationErrors\": [] } ],\n                \"SubTotal\": 20.00, \"TotalTax\": 2.00, \"Total\": 22.00,\n                \"UpdatedDateUTC\": \"\\/Date(1583945852363+0000)\\/\",\n                \"CurrencyCode\": \"AUD\" }, \"HasValidationErrors\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/Payments\"\n          description: Success - return response of type Payments array for updated Payment\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific payment for invoices and credit notes\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: paymentDelete\n          keyPascal: PaymentDelete\n          paymentDelete: null\n        - default: DELETED\n          is_last: true\n          key: status\n          keyPascal: Status\n          object: paymentDelete\n          status: null\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ status: \"DELETED\" }'\n      x-ruby-requestBody: 'payments = { status: \"DELETED\" }'\n  \"/Payments/{PaymentID}/History\":\n    get:\n      operationId: getPaymentHistory\n      parameters:\n        - description: Unique identifier for a Payment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history records of a specific payment\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createPaymentHistory\n      parameters:\n        - description: Unique identifier for a Payment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"DateUTCString\":\n                \"2019-03-12T22:30:13\", \"DateUTC\": \"\\/Date(1552429813667)\\/\",\n                \"Details\": \"Hello World\", \"ValidationErrors\": [ { \"Message\":\n                \"The document with the supplied id was not found for this\n                endpoint.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: A failed request due to validation error - API is not able to\n            create HistoryRecord for Payments\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific payment\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /Prepayments:\n    get:\n      operationId: getPrepayments\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"AUTHORISED\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + Prepayment.StatusEnum.AUTHORISED +\n            \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\Prepayment::STATUS_AUTHORISED .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::Prepayment::AUTHORISED}\n        - description: Order by an any element\n          example: Reference ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: e.g. page=1 – Up to 100 prepayments will be returned in a single\n            API call with line items shown for each overpayment\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"d7a9ca0c-6159-4c26-ad2e-715440c50b7d\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552489227595)\\/\", \"Prepayments\": [ { \"PrepaymentID\":\n                \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"ID\":\n                \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"Type\":\n                \"RECEIVE-PREPAYMENT\", \"Reference\": \"INV-0011\",\n                \"RemainingCredit\": 3450.00, \"Allocations\": [], \"Payments\": [],\n                \"HasAttachments\": true, \"Contact\": { \"ContactID\":\n                \"be392c72-c121-4f83-9512-03ac71e54c20\", \"Name\": \"Luke\n                Skywalker\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"DateString\": \"2019-03-13T00:00:00\", \"Date\":\n                \"\\/Date(1552435200000+0000)\\/\", \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [], \"SubTotal\":\n                3000.00, \"TotalTax\": 450.00, \"Total\": 3450.00, \"UpdatedDateUTC\":\n                \"\\/Date(1552489187730+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Prepayments\"\n          description: Success - return response of type Prepayments array for all\n            Prepayment\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves prepayments\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Prepayments/{PrepaymentID}\":\n    get:\n      operationId: getPrepayment\n      parameters:\n        - description: Unique identifier for a PrePayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PrepaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"18e5f578-ef28-4096-a7aa-d06d65574b99\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553540376847)\\/\", \"Prepayments\": [ { \"PrepaymentID\":\n                \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"ID\":\n                \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"CurrencyRate\":\n                1.000000, \"Type\": \"RECEIVE-PREPAYMENT\", \"Reference\": \"INV-0011\",\n                \"RemainingCredit\": 3449.00, \"Allocations\": [ { \"Amount\": 1.00,\n                \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Invoice\": {\n                \"InvoiceID\": \"c7c37b83-ac95-45ea-88ba-8ad83a5f22fe\",\n                \"InvoiceNumber\": \"INV-0004\", \"Payments\": [], \"CreditNotes\": [],\n                \"Prepayments\": [], \"Overpayments\": [], \"HasErrors\": false,\n                \"IsDiscounted\": false, \"LineItems\": [] } } ], \"Payments\": [],\n                \"HasAttachments\": true, \"Attachments\": [ { \"AttachmentID\":\n                \"2ca06aa0-3629-474a-9401-553d4b7fa9b0\", \"FileName\": \"giphy.gif\",\n                \"Url\":\n                \"https://api.xero.com/api.xro/2.0/banktransaction/ce0cddef-cf5a-4e59-b638-f225679115a7/Attachments/giphy.gif\",\n                \"MimeType\": \"image/gif\", \"ContentLength\": 495727 } ], \"Contact\":\n                { \"ContactID\": \"be392c72-c121-4f83-9512-03ac71e54c20\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Luke Skywalker\",\n                \"EmailAddress\": \"\", \"BankAccountDetails\": \"\", \"Addresses\": [ {\n                \"AddressType\": \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\":\n                \"\", \"Country\": \"\" }, { \"AddressType\": \"POBOX\", \"City\": \"\",\n                \"Region\": \"\", \"PostalCode\": \"\", \"Country\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }\n                ], \"UpdatedDateUTC\": \"\\/Date(1552329691573+0000)\\/\",\n                \"ContactGroups\": [], \"DefaultCurrency\": \"NZD\", \"ContactPersons\":\n                [], \"HasValidationErrors\": false }, \"DateString\":\n                \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\",\n                \"Status\": \"AUTHORISED\", \"LineAmountTypes\": \"Exclusive\",\n                \"LineItems\": [ { \"Description\": \"Light Speeder\", \"UnitAmount\":\n                3000.00, \"TaxType\": \"OUTPUT2\", \"TaxAmount\": 450.00,\n                \"LineAmount\": 3000.00, \"AccountCode\": \"200\", \"Tracking\": [],\n                \"Quantity\": 1.0000, \"DiscountEnteredAsPercent\": true,\n                \"ValidationErrors\": [] } ], \"SubTotal\": 3000.00, \"TotalTax\":\n                450.00, \"Total\": 3450.00, \"UpdatedDateUTC\":\n                \"\\/Date(1552522424850+0000)\\/\", \"CurrencyCode\": \"NZD\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Prepayments\"\n          description: Success - return response of type Prepayments array for a specified\n            Prepayment\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Allows you to retrieve a specified prepayments\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Prepayments/{PrepaymentID}/Allocations\":\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createPrepaymentAllocations\n      parameters:\n        - description: Unique identifier for Prepayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PrepaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Allocations\": [ { \"Invoice\": { \"LineItems\": [], \"InvoiceID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"Amount\": 1, \"Date\":\n              \"2019-01-10\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Allocations\"\n        description: Allocations with an array of Allocation object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"d4758808-d14d-45d5-851a-52787ae5739a\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552522424927)\\/\", \"Allocations\": [ { \"Amount\": 1.00,\n                \"Date\": \"\\/Date(1552435200000+0000)\\/\", \"Invoice\": {\n                \"InvoiceID\": \"c7c37b83-ac95-45ea-88ba-8ad83a5f22fe\", \"Payments\":\n                [], \"CreditNotes\": [], \"Prepayments\": [], \"Overpayments\": [],\n                \"HasErrors\": false, \"IsDiscounted\": false, \"LineItems\": [],\n                \"ValidationErrors\": [] }, \"Prepayment\": { \"PrepaymentID\":\n                \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"ID\":\n                \"ce0cddef-cf5a-4e59-b638-f225679115a7\", \"LineItems\": [] },\n                \"ValidationErrors\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Allocations\"\n          description: Success - return response of type Allocations array of Allocation\n            for all Prepayment\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Allows you to create an Allocation for prepayments\n      tags:\n        - Accounting\n      x-example:\n        - currDate: null\n          default: LocalDate.now()\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: currDate\n          keyPascal: Date\n          keySnake: curr_date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - invoice: null\n          is_object: true\n          key: invoice\n          keyPascal: Invoice\n        - default: 00000000-0000-0000-0000-000000000000\n          invoiceID: null\n          is_last: true\n          is_uuid: true\n          key: invoiceID\n          keyPascal: InvoiceID\n          keySnake: invoice_id\n          object: invoice\n        - allocation: null\n          is_object: true\n          key: allocation\n          keyPascal: Allocation\n        - default: invoice\n          is_variable: true\n          key: invoice\n          keyPascal: Invoice\n          nonString: true\n          object: allocation\n          set_invoice: null\n        - amount: null\n          default: 1\n          key: amount\n          keyPascal: Amount\n          nonString: true\n          object: allocation\n        - date: null\n          default: currDate\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: allocation\n          python: curr_date\n        - allocations: null\n          is_object: true\n          key: allocations\n          keyPascal: Allocations\n        - add_allocation: null\n          is_array_add: true\n          is_last: true\n          java: Allocations\n          key: allocations\n          keyPascal: Allocations\n          object: allocation\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ allocations: [{ invoice: { invoiceID:\n        \"00000000-0000-0000-0000-000000000000\", lineItems: [], contact: {},\n        type: null }, amount: 1.0, date: \"2019-03-13\" }]}'\n      x-ruby-requestBody: 'allocations = { allocations: [{ invoice: { invoice_id:\n        \"00000000-0000-0000-0000-000000000000\", line_items: [], contact: {},\n        type: null }, amount: 1.0, date: \"2019-03-13\" }]}'\n  \"/Prepayments/{PrepaymentID}/History\":\n    get:\n      operationId: getPrepaymentHistory\n      parameters:\n        - description: Unique identifier for a PrePayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PrepaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history record for a specific prepayment\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createPrepaymentHistory\n      parameters:\n        - description: Unique identifier for a PrePayment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PrepaymentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          content:\n            application/json:\n              example: ' { \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"DateUTCString\":\n                \"2019-03-14T00:15:35\", \"DateUTC\": \"\\/Date(1552522535440)\\/\",\n                \"Details\": \"Hello World\", \"ValidationErrors\": [ { \"Message\":\n                \"The document with the supplied id was not found for this\n                endpoint.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Unsupported - return response incorrect exception, API is not able\n            to create HistoryRecord for Expense Claims\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific prepayment\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /PurchaseOrders:\n    get:\n      operationId: getPurchaseOrders\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by purchase order status\n          example: SUBMITTED\n          in: query\n          name: Status\n          schema:\n            enum:\n              - DRAFT\n              - SUBMITTED\n              - AUTHORISED\n              - BILLED\n              - DELETED\n            type: string\n        - description: Filter by purchase order date (e.g. GET\n            https://.../PurchaseOrders?DateFrom=2015-12-01\u0026DateTo=2015-12-31\n          example: 2019-12-01\n          in: query\n          name: DateFrom\n          schema:\n            type: string\n        - description: Filter by purchase order date (e.g. GET\n            https://.../PurchaseOrders?DateFrom=2015-12-01\u0026DateTo=2015-12-31\n          example: 2019-12-31\n          in: query\n          name: DateTo\n          schema:\n            type: string\n        - description: Order by an any element\n          example: PurchaseOrderNumber ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: To specify a page, append the page parameter to the URL e.g.\n            ?page=1. If there are 100 records in the response you will need to\n            check if there is any more data by fetching the next page e.g\n            ?page=2 and continuing this process until no more results are\n            returned.\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"66910bfc-15cc-4692-bd4c-cc8f671e653c\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552523977238)\\/\", \"PurchaseOrders\": [ {\n                \"PurchaseOrderID\": \"f9627f0d-b715-4039-bb6a-96dc3eae5ec5\",\n                \"PurchaseOrderNumber\": \"PO-0001\", \"DateString\":\n                \"2019-03-12T00:00:00\", \"Date\": \"\\/Date(1552348800000+0000)\\/\",\n                \"AttentionTo\": \"Jimmy\", \"HasErrors\": false, \"IsDiscounted\":\n                false, \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000,\n                \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"Addresses\": [ { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\":\n                \"DELETED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ {\n                \"Description\": \"Foobar\", \"UnitAmount\": 20.0000, \"TaxAmount\":\n                0.00, \"LineAmount\": 20.00, \"Tracking\": [], \"Quantity\": 1.0000,\n                \"LineItemID\": \"0f7b54b8-bfa4-4c5d-9c22-73dbd5796e54\" } ],\n                \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552522703443+0000)\\/\",\n                \"HasAttachments\": false }, { \"PurchaseOrderID\":\n                \"6afa2e02-c514-4964-ab89-b5c0179b8c50\", \"PurchaseOrderNumber\":\n                \"PO-0002\", \"DateString\": \"2019-03-12T00:00:00\", \"Date\":\n                \"\\/Date(1552348800000+0000)\\/\", \"AttentionTo\": \"Jimmy\",\n                \"HasErrors\": false, \"IsDiscounted\": false, \"Type\":\n                \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\":\n                \"NZD\", \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"Addresses\": [ { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Status\":\n                \"DELETED\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ {\n                \"Description\": \"Foobar\", \"UnitAmount\": 20.0000, \"TaxAmount\":\n                0.00, \"LineAmount\": 20.00, \"Tracking\": [], \"Quantity\": 1.0000,\n                \"LineItemID\": \"3e4ec232-32b9-491b-84dd-48fb9aa8916f\" } ],\n                \"SubTotal\": 20.00, \"TotalTax\": 0.00, \"Total\": 20.00,\n                \"UpdatedDateUTC\": \"\\/Date(1552522834733+0000)\\/\",\n                \"HasAttachments\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/PurchaseOrders\"\n          description: Success - return response of type PurchaseOrder array of all\n            PurchaseOrder\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves purchase orders\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreatePurchaseOrders\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"PurchaseOrders\": [ { \"Contact\": { \"ContactID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"LineItems\": [ {\n              \"Description\": \"Foobar\", \"Quantity\": 1, \"UnitAmount\": 20,\n              \"AccountCode\": \"710\" } ], \"Date\": \"2019-03-13\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/PurchaseOrders\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: ' { \"Id\": \"aa2f9d23-fd76-4bee-9600-30c0f0f34036\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552522946173)\\/\", \"PurchaseOrders\": [ {\n                \"PurchaseOrderID\": \"56204648-8fbe-46f8-b09c-2125f7939533\",\n                \"PurchaseOrderNumber\": \"PO-0004\", \"DateString\":\n                \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\",\n                \"HasErrors\": false, \"IsDiscounted\": false, \"TotalDiscount\":\n                0.00, \"SentToContact\": false, \"Type\": \"PURCHASEORDER\",\n                \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\",\n                \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\":\n                \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [\n                null, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\":\n                \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\"\n                } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\":\n                \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" },\n                null, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\",\n                \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ], \"IsSupplier\": true,\n                \"IsCustomer\": true, \"SalesTrackingCategories\": [],\n                \"PurchasesTrackingCategories\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"Status\": \"DRAFT\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.0000, \"TaxType\": \"INPUT2\",\n                \"TaxAmount\": 3.00, \"LineAmount\": 20.00, \"AccountCode\": \"710\",\n                \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\":\n                \"792b7e40-b9f2-47f0-8624-b09f4b0166dd\" } ], \"SubTotal\": 20.00,\n                \"TotalTax\": 3.00, \"Total\": 23.00, \"UpdatedDateUTC\":\n                \"\\/Date(1552522946077+0000)\\/\", \"StatusAttributeString\":\n                \"ERROR\", \"Warnings\": [ { \"Message\": \"Only AUTHORISED and BILLED\n                purchase orders may have SentToContact updated.\" } ],\n                \"ValidationErrors\": [ { \"Message\": \"Order number must be unique\"\n                } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/PurchaseOrders\"\n          description: Success - return response of type PurchaseOrder array for specified\n            PurchaseOrder\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates or creates one or more purchase orders\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItem\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - is_object: true\n          key: purchaseOrder\n          keyPascal: PurchaseOrder\n          keySnake: purchase_order\n          purchaseOrder: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: purchaseOrder\n          set_contact: null\n        - default: lineItems\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: purchaseOrder\n          python: line_items\n          set_lineitem: null\n        - date: null\n          default: dateValue\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: purchaseOrder\n          python: date_value\n        - is_object: true\n          key: purchaseOrders\n          keyPascal: PurchaseOrders\n          purchaseOrders: null\n        - add_purchaseOrder: null\n          is_array_add: true\n          is_last: true\n          java: PurchaseOrders\n          key: purchaseOrders\n          keyPascal: PurchaseOrders\n          keySnake: purchase_orders\n          object: purchaseOrder\n          python: purchase_order\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ purchaseOrders: [ { contact: { contactID:\n        \"00000000-0000-0000-0000-000000000000\" }, lineItems: [{ description:\n        \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"710\" }], date:\n        \"2019-03-13\" }]}'\n      x-ruby-requestBody: 'purchase_orders = { purchase_orders: [{ contact: {\n        contact_id: \"00000000-0000-0000-0000-000000000000\" }, line_items: [{\n        description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode:\n        \"710\" }], date: \"2019-03-13\" }]}'\n    put:\n      operationId: createPurchaseOrders\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"PurchaseOrders\": [ { \"Contact\": { \"ContactID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"LineItems\": [ {\n              \"Description\": \"Foobar\", \"Quantity\": 1, \"UnitAmount\": 20,\n              \"AccountCode\": \"710\" } ], \"Date\": \"2019-03-13\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/PurchaseOrders\"\n        description: PurchaseOrders with an array of PurchaseOrder object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: ' { \"Id\": \"aa2f9d23-fd76-4bee-9600-30c0f0f34036\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552522946173)\\/\", \"PurchaseOrders\": [ {\n                \"PurchaseOrderID\": \"56204648-8fbe-46f8-b09c-2125f7939533\",\n                \"PurchaseOrderNumber\": \"PO-0004\", \"DateString\":\n                \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\",\n                \"HasErrors\": false, \"IsDiscounted\": false, \"TotalDiscount\":\n                0.00, \"SentToContact\": false, \"Type\": \"PURCHASEORDER\",\n                \"CurrencyRate\": 1.000000, \"CurrencyCode\": \"NZD\", \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\",\n                \"ContactStatus\": \"ACTIVE\", \"Name\": \"Liam Gallagher\",\n                \"FirstName\": \"Liam\", \"LastName\": \"Gallagher\", \"EmailAddress\":\n                \"liam@rockstar.com\", \"BankAccountDetails\": \"\", \"Addresses\": [\n                null, { \"AddressType\": \"POBOX\", \"City\": \"Anytown\", \"Region\":\n                \"NY\", \"PostalCode\": \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\"\n                } ], \"Phones\": [ { \"PhoneType\": \"DEFAULT\", \"PhoneNumber\":\n                \"222-2222\", \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" },\n                null, { \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\":\n                \"MOBILE\", \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\",\n                \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ], \"IsSupplier\": true,\n                \"IsCustomer\": true, \"SalesTrackingCategories\": [],\n                \"PurchasesTrackingCategories\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"Status\": \"DRAFT\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.0000, \"TaxType\": \"INPUT2\",\n                \"TaxAmount\": 3.00, \"LineAmount\": 20.00, \"AccountCode\": \"710\",\n                \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\":\n                \"792b7e40-b9f2-47f0-8624-b09f4b0166dd\" } ], \"SubTotal\": 20.00,\n                \"TotalTax\": 3.00, \"Total\": 23.00, \"UpdatedDateUTC\":\n                \"\\/Date(1552522946077+0000)\\/\", \"StatusAttributeString\":\n                \"ERROR\", \"Warnings\": [ { \"Message\": \"Only AUTHORISED and BILLED\n                purchase orders may have SentToContact updated.\" } ],\n                \"ValidationErrors\": [ { \"Message\": \"Order number must be unique\"\n                } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/PurchaseOrders\"\n          description: Success - return response of type PurchaseOrder array for specified\n            PurchaseOrder\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates one or more purchase orders\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItem\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - is_object: true\n          key: purchaseOrder\n          keyPascal: PurchaseOrder\n          keySnake: purchase_order\n          purchaseOrder: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: purchaseOrder\n          set_contact: null\n        - default: lineItems\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: purchaseOrder\n          python: line_items\n          set_lineitem: null\n        - date: null\n          default: dateValue\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: purchaseOrder\n          python: date_value\n        - is_object: true\n          key: purchaseOrders\n          keyPascal: PurchaseOrders\n          purchaseOrders: null\n        - add_purchaseOrder: null\n          is_array_add: true\n          is_last: true\n          java: PurchaseOrders\n          key: purchaseOrders\n          keyPascal: PurchaseOrders\n          keySnake: purchase_orders\n          object: purchaseOrder\n          python: purchase_order\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ purchaseOrders: [{ contact: { contactID:\n        \"00000000-0000-0000-0000-000000000000\" }, lineItems: [{ description:\n        \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"710\" }], date:\n        \"2019-03-13\" }]}'\n      x-ruby-requestBody: 'purchase_orders = { purchase_orders: [{ contact: {\n        contact_id: \"00000000-0000-0000-0000-000000000000\" }, line_items: [{\n        description: \"Foobar\", quantity: 1.0, unitAmount: 20.0, account_code:\n        \"710\" }], date: \"2019-03-13\" }]}'\n  \"/PurchaseOrders/{PurchaseOrderID}\":\n    get:\n      operationId: getPurchaseOrder\n      parameters:\n        - description: Unique identifier for a PurchaseOrder\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"53a8c7a5-92e8-475b-a037-acf7c55c3afd\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553626110950)\\/\", \"PurchaseOrders\": [ {\n                \"PurchaseOrderID\": \"15369a9f-17b6-4235-83c4-0029256d1c37\",\n                \"PurchaseOrderNumber\": \"PO-0006\", \"DateString\":\n                \"2019-03-26T00:00:00\", \"Date\": \"\\/Date(1553558400000+0000)\\/\",\n                \"DeliveryDateString\": \"2019-03-28T00:00:00\", \"DeliveryDate\":\n                \"\\/Date(1553731200000+0000)\\/\", \"DeliveryAddress\": \"101 Grafton\n                Road\\nRoseneath\\nWellington\\n6011\\nNew Zealand\", \"AttentionTo\":\n                \"CEO\", \"Telephone\": \"64 123-2222\", \"DeliveryInstructions\": \"Drop\n                off at front  door\", \"HasErrors\": false, \"IsDiscounted\": true,\n                \"TotalDiscount\": 250.00, \"SentToContact\": false, \"Reference\":\n                \"foobar\", \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000,\n                \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ null, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, null, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\":\n                \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1553672800957+0000)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\",\n                \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ], \"IsSupplier\": true,\n                \"IsCustomer\": true, \"DefaultCurrency\": \"NZD\",\n                \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\":\n                [], \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"BrandingThemeID\": \"414d4a87-46d6-4cfc-ab42-4e29d22e5076\",\n                \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\":\n                [ { \"ItemCode\": \"123\", \"Description\": \"Brand new Fender Strats\",\n                \"UnitAmount\": 2500.0000, \"TaxType\": \"INPUT2\", \"TaxAmount\":\n                337.50, \"LineAmount\": 2250.00, \"AccountCode\": \"630\", \"Tracking\":\n                [ { \"Name\": \"Simpsons\", \"Option\": \"Homer\", \"TrackingCategoryID\":\n                \"6a68adde-f210-4465-b0a9-0d8cc6f50762\", \"TrackingOptionID\":\n                \"94faf12f-f65c-4331-8004-b0b7c5a2da23\" } ], \"Quantity\": 1.0000,\n                \"DiscountRate\": 10.00, \"LineItemID\":\n                \"8a9d3eca-e052-43bc-9b87-221d0648c045\" } ], \"SubTotal\": 2250.00,\n                \"TotalTax\": 337.50, \"Total\": 2587.50, \"UpdatedDateUTC\":\n                \"\\/Date(1553626029823+0000)\\/\", \"HasAttachments\": true,\n                \"Attachments\": [ { \"AttachmentID\":\n                \"7d94ccdc-ef7b-4806-87ac-8442f25e593b\", \"FileName\":\n                \"HelloWorld.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/PurchaseOrders/15369a9f-17b6-4235-83c4-0029256d1c37/Attachments/HelloWorld.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 76091 } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/PurchaseOrders\"\n          description: Success - return response of type PurchaseOrder array for specified\n            PurchaseOrder\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific purchase order using a unique purchase order Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updatePurchaseOrder\n      parameters:\n        - description: Unique identifier for a PurchaseOrder\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"PurchaseOrders\": [ { \"AttentionTo\": \"Peter Parker\", \"LineItems\":\n              [], \"Contact\": {} } ] }'\n            schema:\n              $ref: \"#/components/schemas/PurchaseOrders\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"0e9bb3f8-d68b-4bb2-a54d-7da240a4f51a\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552523976885)\\/\", \"PurchaseOrders\": [ {\n                \"PurchaseOrderID\": \"f9fc1120-c937-489e-84bc-e822190cfe9c\",\n                \"PurchaseOrderNumber\": \"PO-0005\", \"DateString\":\n                \"2019-03-13T00:00:00\", \"Date\": \"\\/Date(1552435200000+0000)\\/\",\n                \"AttentionTo\": \"Jimmy\", \"HasErrors\": false, \"IsDiscounted\":\n                false, \"TotalDiscount\": 0.00, \"SentToContact\": false, \"Type\":\n                \"PURCHASEORDER\", \"CurrencyRate\": 1.000000, \"CurrencyCode\":\n                \"NZD\", \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ null, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, null, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\":\n                \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\",\n                \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ], \"IsSupplier\": true,\n                \"IsCustomer\": true, \"SalesTrackingCategories\": [],\n                \"PurchasesTrackingCategories\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"Status\": \"DRAFT\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.0000, \"TaxType\": \"INPUT2\",\n                \"TaxAmount\": 3.00, \"LineAmount\": 20.00, \"AccountCode\": \"710\",\n                \"Tracking\": [], \"Quantity\": 1.0000, \"LineItemID\":\n                \"d1d9b2cd-c9f2-4445-8d98-0b8096cf4dae\" } ], \"SubTotal\": 20.00,\n                \"TotalTax\": 3.00, \"Total\": 23.00, \"UpdatedDateUTC\":\n                \"\\/Date(1552523976853+0000)\\/\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/PurchaseOrders\"\n          description: Success - return response of type PurchaseOrder array for updated\n            PurchaseOrder\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific purchase order\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: purchaseOrder\n          keyPascal: PurchaseOrder\n          keySnake: purchase_order\n          purchaseOrder: null\n        - attentionTo: null\n          default: Peter Parker\n          is_last: true\n          key: attentionTo\n          keyPascal: AttentionTo\n          object: purchaseOrder\n        - is_object: true\n          key: purchaseOrders\n          keyPascal: PurchaseOrders\n          purchaseOrders: null\n        - add_purchaseOrder: null\n          is_array_add: true\n          is_last: true\n          java: PurchaseOrders\n          key: purchaseOrders\n          keyPascal: PurchaseOrders\n          keySnake: purchase_orders\n          object: purchaseOrder\n          python: purchase_order\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ purchaseOrders:[ { attentionTo: \"Peter Parker\",\n        lineItems: [], contact: {} }]}'\n      x-ruby-requestBody: 'purchase_orders = { purchase_orders: [ { attention_to:\n        \"Peter Parker\", line_items: [], contact: {} }]}'\n  \"/PurchaseOrders/{PurchaseOrderID}/Attachments\":\n    get:\n      operationId: getPurchaseOrderAttachments\n      parameters:\n        - description: Unique identifier for Purchase Orders object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"dfc29f55-8ddd-4921-a82c-bcc0798d207f\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"/Date(1602100184437)/\", \"Attachments\": [ { \"AttachmentID\":\n                \"dce4eaa7-c8a9-4867-9434-95832b427d3b\", \"FileName\":\n                \"xero-dev1.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/2D_2.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 98715 }, {\n                \"AttachmentID\": \"e58bd37b-e47f-451a-a42c-f946ef229c3e\",\n                \"FileName\": \"xero-dev2.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/2D.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 82529 }, {\n                \"AttachmentID\": \"c8faa564-223f-45e4-a5a1-94430a5b52c1\",\n                \"FileName\": \"xero-dev3.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/Screen%20Shot%202020-09-12%20at%204.31.14%20pm.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 146384 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Purchase\n            Orders\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments for a specific purchase order\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/PurchaseOrders/{PurchaseOrderID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getPurchaseOrderAttachmentById\n      parameters:\n        - description: Unique identifier for Purchase Order object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for Attachment object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Account as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves specific attachment for a specific purchase order using a\n        unique attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/PurchaseOrders/{PurchaseOrderID}/Attachments/{FileName}\":\n    get:\n      operationId: getPurchaseOrder≠AttachmentByFileName\n      parameters:\n        - description: Unique identifier for Purchase Order object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Purchase Order as\n            binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment for a specific purchase order by filename\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updatePurchaseOrderAttachmentByFileName\n      parameters:\n        - description: Unique identifier for Purchase Order object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.png\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"aeff9be0-54c2-45dd-8e3d-aa4f8af0fbd7\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"/Date(1602100086197)/\", \"Attachments\": [ { \"AttachmentID\":\n                \"dce4eaa7-c8a9-4867-9434-95832b427d3b\", \"FileName\":\n                \"xero-dev.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/2D_2.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 98715 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachment\n          x-isAttachment: true\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates a specific attachment for a specific purchase order by filename\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createPurchaseOrderAttachmentByFileName\n      parameters:\n        - description: Unique identifier for Purchase Order object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.png\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"c728a4a4-179e-4bbd-a2d5-63e7f9ceba92\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"/Date(1602099934723)/\", \"Attachments\": [ { \"AttachmentID\":\n                \"e58bd37b-e47f-451a-a42c-f946ef229c3e\", \"FileName\":\n                \"xero-dev.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/PurchaseOrders/93369c9b-c481-4e21-aaab-bb19e9a26efe/Attachments/2D.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 82529 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates attachment for a specific purchase order\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/PurchaseOrders/{PurchaseOrderID}/History\":\n    get:\n      operationId: getPurchaseOrderHistory\n      parameters:\n        - description: Unique identifier for a PurchaseOrder\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history for a specific purchase order\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createPurchaseOrderHistory\n      parameters:\n        - description: Unique identifier for a PurchaseOrder\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific purchase orders\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  \"/PurchaseOrders/{PurchaseOrderID}/pdf\":\n    get:\n      operationId: getPurchaseOrderAsPdf\n      parameters:\n        - description: Unique identifier for an Purchase Order\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: PurchaseOrderID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/pdf:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of byte array pdf version of specified\n            Purchase Orders\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves specific purchase order as PDF files using a unique purchase\n        order Id\n      tags:\n        - Accounting\n      x-path: /PurchaseOrders/{PurchaseOrderID}\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/PurchaseOrders/{PurchaseOrderNumber}\":\n    get:\n      operationId: getPurchaseOrderByNumber\n      parameters:\n        - description: Unique identifier for a PurchaseOrder\n          example: PO1234\n          in: path\n          name: PurchaseOrderNumber\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"53a8c7a5-92e8-475b-a037-acf7c55c3afd\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553626110950)\\/\", \"PurchaseOrders\": [ {\n                \"PurchaseOrderID\": \"15369a9f-17b6-4235-83c4-0029256d1c37\",\n                \"PurchaseOrderNumber\": \"PO-0006\", \"DateString\":\n                \"2019-03-26T00:00:00\", \"Date\": \"\\/Date(1553558400000+0000)\\/\",\n                \"DeliveryDateString\": \"2019-03-28T00:00:00\", \"DeliveryDate\":\n                \"\\/Date(1553731200000+0000)\\/\", \"DeliveryAddress\": \"101 Grafton\n                Road\\nRoseneath\\nWellington\\n6011\\nNew Zealand\", \"AttentionTo\":\n                \"CEO\", \"Telephone\": \"64 123-2222\", \"DeliveryInstructions\": \"Drop\n                off at front  door\", \"HasErrors\": false, \"IsDiscounted\": true,\n                \"TotalDiscount\": 250.00, \"SentToContact\": false, \"Reference\":\n                \"foobar\", \"Type\": \"PURCHASEORDER\", \"CurrencyRate\": 1.000000,\n                \"CurrencyCode\": \"NZD\", \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ null, { \"AddressType\":\n                \"POBOX\", \"City\": \"Anytown\", \"Region\": \"NY\", \"PostalCode\":\n                \"10101\", \"Country\": \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ {\n                \"PhoneType\": \"DEFAULT\", \"PhoneNumber\": \"222-2222\",\n                \"PhoneAreaCode\": \"212\", \"PhoneCountryCode\": \"\" }, null, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\":\n                \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1553672800957+0000)\\/\", \"ContactGroups\": [ {\n                \"ContactGroupID\": \"17b44ed7-4389-4162-91cb-3dd5766e4e22\",\n                \"Name\": \"Oasis\", \"Status\": \"ACTIVE\", \"Contacts\": [],\n                \"HasValidationErrors\": false } ], \"IsSupplier\": true,\n                \"IsCustomer\": true, \"DefaultCurrency\": \"NZD\",\n                \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\":\n                [], \"ContactPersons\": [], \"HasValidationErrors\": false },\n                \"BrandingThemeID\": \"414d4a87-46d6-4cfc-ab42-4e29d22e5076\",\n                \"Status\": \"DRAFT\", \"LineAmountTypes\": \"Exclusive\", \"LineItems\":\n                [ { \"ItemCode\": \"123\", \"Description\": \"Brand new Fender Strats\",\n                \"UnitAmount\": 2500.0000, \"TaxType\": \"INPUT2\", \"TaxAmount\":\n                337.50, \"LineAmount\": 2250.00, \"AccountCode\": \"630\", \"Tracking\":\n                [ { \"Name\": \"Simpsons\", \"Option\": \"Homer\", \"TrackingCategoryID\":\n                \"6a68adde-f210-4465-b0a9-0d8cc6f50762\", \"TrackingOptionID\":\n                \"94faf12f-f65c-4331-8004-b0b7c5a2da23\" } ], \"Quantity\": 1.0000,\n                \"DiscountRate\": 10.00, \"LineItemID\":\n                \"8a9d3eca-e052-43bc-9b87-221d0648c045\" } ], \"SubTotal\": 2250.00,\n                \"TotalTax\": 337.50, \"Total\": 2587.50, \"UpdatedDateUTC\":\n                \"\\/Date(1553626029823+0000)\\/\", \"HasAttachments\": true,\n                \"Attachments\": [ { \"AttachmentID\":\n                \"7d94ccdc-ef7b-4806-87ac-8442f25e593b\", \"FileName\":\n                \"HelloWorld.png\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/PurchaseOrders/15369a9f-17b6-4235-83c4-0029256d1c37/Attachments/HelloWorld.png\",\n                \"MimeType\": \"image/png\", \"ContentLength\": 76091 } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/PurchaseOrders\"\n          description: Success - return response of type PurchaseOrder array for specified\n            PurchaseOrder\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific purchase order using purchase order number\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Quotes:\n    get:\n      operationId: getQuotes\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter for quotes after a particular date\n          in: query\n          name: DateFrom\n          schema:\n            format: date\n            type: string\n        - description: Filter for quotes before a particular date\n          in: query\n          name: DateTo\n          schema:\n            format: date\n            type: string\n        - description: Filter for quotes expiring after a particular date\n          in: query\n          name: ExpiryDateFrom\n          schema:\n            format: date\n            type: string\n        - description: Filter for quotes before a particular date\n          in: query\n          name: ExpiryDateTo\n          schema:\n            format: date\n            type: string\n        - description: Filter for quotes belonging to a particular contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: ContactID\n          schema:\n            format: uuid\n            type: string\n        - description: Filter for quotes of a particular Status\n          example: DRAFT\n          in: query\n          name: Status\n          schema:\n            type: string\n        - description: e.g. page=1 – Up to 100 Quotes will be returned in a single API\n            call with line items shown for each quote\n          example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n        - description: Order by an any element\n          example: Status ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: Filter by quote number (e.g. GET\n            https://.../Quotes?QuoteNumber=QU-0001)\n          example: QU-0001\n          in: query\n          name: QuoteNumber\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"bb583e7e-9b6b-471e-88da-4cbfcfad7a57\", \"Status\": \"OK\",\n                \"ProviderName\": \"Adams OAuth2 App\", \"DateTimeUTC\":\n                \"/Date(1571876635477)/\", \"Quotes\": [ { \"QuoteID\":\n                \"be59294f-2a9c-4cee-8c64-0f0ddbc1883a\", \"QuoteNumber\":\n                \"QU-0001\", \"Reference\": \"REF-123\", \"Terms\": \"Not valid after the\n                expiry date\", \"Contact\": { \"ContactID\":\n                \"060816db-0ed7-44de-ab58-8fee9316fcd5\", \"Name\": \"Adam\" },\n                \"LineItems\": [ { \"LineItemID\":\n                \"ccf5e45c-73b6-4659-83e8-520f4c6126fd\", \"AccountCode\": \"200\",\n                \"Description\": \"Fish out of Water\", \"UnitAmount\": 19.9500,\n                \"DiscountRate\": 10.00, \"LineAmount\": 17.96, \"ItemCode\": \"BOOK\",\n                \"Quantity\": 1.0000, \"TaxAmount\": 2.69, \"TaxType\": \"OUTPUT2\",\n                \"Tracking\": [ { \"TrackingCategoryID\":\n                \"351953c4-8127-4009-88c3-f9cd8c9cbe9f\", \"TrackingOptionID\":\n                \"ce205173-7387-4651-9726-2cf4c5405ba2\", \"Name\": \"Region\",\n                \"Option\": \"Eastside\" } ] } ], \"Date\": \"/Date(1571875200000)/\",\n                \"DateString\": \"2019-10-24T00:00:00\", \"ExpiryDate\":\n                \"/Date(1571961600000)/\", \"ExpiryDateString\":\n                \"2019-10-25T00:00:00\", \"Status\": \"ACCEPTED\", \"CurrencyRate\":\n                0.937053, \"CurrencyCode\": \"AUD\", \"SubTotal\": 17.96, \"TotalTax\":\n                2.69, \"Total\": 20.65, \"TotalDiscount\": 1.99, \"Title\": \"Your\n                Quote\", \"Summary\": \"Please buy this\", \"BrandingThemeID\":\n                \"4c82c365-35cb-467f-bb11-dce1f2f2f67c\", \"UpdatedDateUTC\":\n                \"/Date(1571869373890)/\", \"LineAmountTypes\": \"EXCLUSIVE\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Quotes\"\n          description: Success - return response of type quotes array with all quotes\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves sales quotes\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateOrCreateQuotes\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Quotes\": [ { \"Contact\": { \"ContactID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"LineItems\": [ {\n              \"Description\": \"Foobar\", \"Quantity\": 1, \"UnitAmount\": 20,\n              \"AccountCode\": \"12775\" } ], \"Date\": \"2020-02-01\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Quotes\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: \u003e-\n                {  \"SummarizeErrors\":false,\n                \"Id\":\"b425754f-0512-481d-827b-c8958db7667e\", \"Status\":\"OK\",\n                \"ProviderName\":\"provider-name\",\n                \"DateTimeUTC\":\"\\/Date(1580607783833)\\/\",\n                \"Quotes\":[  {  \"QuoteID\":\"fd53e0b7-4d24-4c20-be85-043a62ea5847\",\n                \"QuoteNumber\":\"QU-0009\", \"Terms\":\"\",\n                \"Contact\":{  \"ContactID\":\"6a65f055-b0e0-471a-a933-d1ffdd89393f\",\n                \"Name\":\"John Smith-82160\", \"EmailAddress\":\"\" },\n                \"LineItems\":[  {  \"LineItemID\":\"898c7fd6-0d94-4ac0-ace8-87e350a042de\",\n                \"AccountCode\":\"12775\", \"Description\":\"Foobar\",\n                \"UnitAmount\":20.0000, \"LineAmount\":20.00, \"ItemCode\":\"\",\n                \"Quantity\":1.0000, \"TaxAmount\":0.00, \"Tracking\":[ \n\n                ] } ], \"Date\":\"\\/Date(1580515200000)\\/\", \"DateString\":\"2020-02-01T00:00:00\", \"Status\":\"DRAFT\", \"CurrencyRate\":1.000000, \"CurrencyCode\":\"USD\", \"SubTotal\":20.00, \"TotalTax\":0.00, \"Total\":20.00, \"UpdatedDateUTC\":\"\\/Date(1580607783467)\\/\", \"LineAmountTypes\":\"EXCLUSIVE\", \"StatusAttributeString\":\"OK\" } ] }\n              schema:\n                $ref: \"#/components/schemas/Quotes\"\n          description: Success - return response of type Quotes array with updated or\n            created Quote\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates or creates one or more quotes\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItem\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - is_object: true\n          key: quote\n          keyPascal: Quote\n          quote: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: quote\n          set_contact: null\n        - default: lineItems\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: quote\n          python: line_items\n          set_lineitem: null\n        - date: null\n          default: dateValue\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: quote\n          python: date_value\n        - is_object: true\n          key: quotes\n          keyPascal: Quotes\n          quotes: null\n        - add_quote: null\n          is_array_add: true\n          is_last: true\n          java: Quotes\n          key: quotes\n          keyPascal: Quotes\n          object: quote\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ quotes: [{ contact: { contactID:\n        \"00000000-0000-0000-0000-000000000000\" }, lineItems: [{ description:\n        \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"12775\" }],\n        date: \"2020-02-01\" }]}'\n      x-ruby-requestBody: 'quotes = { quotes: [{ contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, line_items: [{ description:\n        \"Foobar\", quantity: 1.0, unit_amount: 20.0, account_code: \"12775\" }],\n        date: \"2020-02-01\" }]}'\n    put:\n      operationId: createQuotes\n      parameters:\n        - $ref: \"#/components/parameters/summarizeErrors\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Quotes\": [ { \"Contact\": { \"ContactID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"LineItems\": [ {\n              \"Description\": \"Foobar\", \"Quantity\": 1, \"UnitAmount\": 20,\n              \"AccountCode\": \"12775\" } ], \"Date\": \"2020-02-01\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Quotes\"\n        description: Quotes with an array of Quote object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: \u003e-\n                {  \"SummarizeErrors\":false,\n                \"Id\":\"29571f5a-bf73-4bb6-9de5-86be44e6bf2e\", \"Status\":\"OK\",\n                \"ProviderName\":\"provider-name\",\n                \"DateTimeUTC\":\"\\/Date(1580607782916)\\/\",\n                \"Quotes\":[  {  \"QuoteID\":\"60031d53-6488-4321-9cbd-c1db6dbf9ba4\",\n                \"QuoteNumber\":\"QU-0008\", \"Terms\":\"\",\n                \"Contact\":{  \"ContactID\":\"6a65f055-b0e0-471a-a933-d1ffdd89393f\",\n                \"Name\":\"John Smith-82160\", \"EmailAddress\":\"\" },\n                \"LineItems\":[  {  \"LineItemID\":\"26995857-0eea-45fb-b46c-f8ea896ec46e\",\n                \"AccountCode\":\"12775\", \"Description\":\"Foobar\",\n                \"UnitAmount\":20.0000, \"LineAmount\":20.00, \"ItemCode\":\"\",\n                \"Quantity\":1.0000, \"TaxAmount\":0.00, \"Tracking\":[ \n\n                ] } ], \"Date\":\"\\/Date(1580515200000)\\/\", \"DateString\":\"2020-02-01T00:00:00\", \"Status\":\"DRAFT\", \"CurrencyRate\":1.000000, \"CurrencyCode\":\"USD\", \"SubTotal\":20.00, \"TotalTax\":0.00, \"Total\":20.00, \"UpdatedDateUTC\":\"\\/Date(1580607782913)\\/\", \"LineAmountTypes\":\"EXCLUSIVE\", \"StatusAttributeString\":\"OK\" } ] }\n              schema:\n                $ref: \"#/components/schemas/Quotes\"\n          description: Success - return response of type Quotes with array with newly\n            created Quote\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Create one or more quotes\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItem\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - is_object: true\n          key: quote\n          keyPascal: Quote\n          quote: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: quote\n          set_contact: null\n        - default: lineItems\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: quote\n          python: line_items\n          set_lineitem: null\n        - date: null\n          default: dateValue\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: quote\n          python: date_value\n        - is_object: true\n          key: quotes\n          keyPascal: Quotes\n          quotes: null\n        - add_quote: null\n          is_array_add: true\n          is_last: true\n          java: Quotes\n          key: quotes\n          keyPascal: Quotes\n          object: quote\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ quotes: [{ contact: { contactID:\n        \"00000000-0000-0000-0000-000000000000\" }, lineItems: [{ description:\n        \"Foobar\", quantity: 1.0, unitAmount: 20.0, accountCode: \"12775\" }],\n        date: \"2020-02-01\" }]}'\n      x-ruby-requestBody: 'quotes = { quotes: [{ contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, line_items: [{ description:\n        \"Foobar\", quantity: 1.0, unit_amount: 20.0, account_code: \"12775\" }],\n        date: \"2020-02-01\" }]}'\n  \"/Quotes/{QuoteID}\":\n    get:\n      operationId: getQuote\n      parameters:\n        - description: Unique identifier for an Quote\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{  \"SummarizeErrors\":true,\n                \"Id\":\"e3626c45-77f1-4ab0-ba9b-3593c7bcd25c\", \"Status\":\"OK\",\n                \"ProviderName\":\"provider-name\",\n                \"DateTimeUTC\":\"\\/Date(1580607864786)\\/\",\n                \"Quotes\":[  {  \"QuoteID\":\"1f90e77a-7b88-4462-874f-1aa675be8fef\",\n                \"QuoteNumber\":\"QU-0007\", \"Reference\":\"MyQuote\", \"Terms\":\"These\n                are my terms\",\n                \"Contact\":{  \"ContactID\":\"4bc3ecb2-8e2a-4267-a171-0e0ce7e5ac2a\",\n                \"Name\":\"ABC Limited\", \"EmailAddress\":\"john.smith@gmail.com\",\n                \"FirstName\":\"John\", \"LastName\":\"Smith\" },\n                \"LineItems\":[  {  \"LineItemID\":\"09b47d9f-f78d-4bab-b226-957f55bfb1b5\",\n                \"AccountCode\":\"400\", \"Description\":\"Half day training -\n                Microsoft Office\", \"UnitAmount\":500.0000, \"LineAmount\":500.00,\n                \"ItemCode\":\"Train-MS\", \"Quantity\":1.0000, \"TaxAmount\":0.00,\n                \"TaxType\":\"NONE\",\n                \"Tracking\":[  {  \"TrackingCategoryID\":\"9bd3f506-6d91-4625-81f0-0f9147f099f4\",\n                \"TrackingOptionID\":\"d30e2a0d-ae6f-4806-88ca-d8ebdba2af73\",\n                \"Name\":\"Avengers\", \"Option\":\"IronMan\" } ] } ],\n                \"Date\":\"\\/Date(1580515200000)\\/\",\n                \"DateString\":\"2020-02-01T00:00:00\",\n                \"ExpiryDate\":\"\\/Date(1581724800000)\\/\",\n                \"ExpiryDateString\":\"2020-02-15T00:00:00\", \"Status\":\"DRAFT\",\n                \"CurrencyRate\":1.547150, \"CurrencyCode\":\"NZD\",\n                \"SubTotal\":500.00, \"TotalTax\":0.00, \"Total\":500.00,\n                \"TotalDiscount\":0.00, \"Title\":\"\", \"Summary\":\"\",\n                \"BrandingThemeID\":\"324587a9-7eed-46c0-ad64-fa941a1b5b3e\",\n                \"UpdatedDateUTC\":\"\\/Date(1580607757040)\\/\",\n                \"LineAmountTypes\":\"EXCLUSIVE\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Quotes\"\n          description: Success - return response of type Quotes array with specified Quote\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific quote using a unique quote Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateQuote\n      parameters:\n        - description: Unique identifier for an Quote\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Quotes\": [ { \"Reference\": \"I am an update\", \"Contact\": {\n              \"ContactID\": \"00000000-0000-0000-0000-000000000000\" }, \"Date\":\n              \"2020-02-01\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Quotes\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{  \"SummarizeErrors\":true,\n                \"Id\":\"be4f43a7-ef02-497a-96c2-fc0bc047a82a\", \"Status\":\"OK\",\n                \"ProviderName\":\"provider-name\",\n                \"DateTimeUTC\":\"\\/Date(1580605644385)\\/\",\n                \"Quotes\":[  {  \"QuoteID\":\"8ce6b14c-ef87-4f45-93f0-853137c6d0e1\",\n                \"QuoteNumber\":\"QU-0008\", \"Reference\":\"I am an update\",\n                \"Terms\":\"\",\n                \"Contact\":{  \"ContactID\":\"8ed7dd03-4e6a-4078-a807-c5309abfec52\",\n                \"Name\":\"Orlena Greenville 35\", \"EmailAddress\":\"\" },\n                \"LineItems\":[  {  \"LineItemID\":\"be69f44e-9c72-4fcd-9152-0174867cce49\",\n                \"AccountCode\":\"12775\", \"Description\":\"Foobar\",\n                \"UnitAmount\":20.0000, \"LineAmount\":20.00, \"ItemCode\":\"\",\n                \"Quantity\":1.0000, \"TaxAmount\":0.00, \"Tracking\":[] } ],\n                \"Date\":\"\\/Date(1580515200000)\\/\",\n                \"DateString\":\"2020-02-01T00:00:00\", \"Status\":\"DRAFT\",\n                \"CurrencyRate\":1.000000, \"CurrencyCode\":\"USD\", \"SubTotal\":20.00,\n                \"TotalTax\":0.00, \"Total\":20.00,\n                \"UpdatedDateUTC\":\"\\/Date(1580605644360)\\/\",\n                \"LineAmountTypes\":\"EXCLUSIVE\" } ] }'\n              schema:\n                $ref: \"#/components/schemas/Quotes\"\n          description: Success - return response of type Quotes array with updated Quote\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific quote\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          keySnake: date_value\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-12-03T00:00:00Z')\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: quote\n          keyPascal: Quote\n          quote: null\n        - default: I am an update\n          key: reference\n          keyPascal: Reference\n          object: quote\n          reference: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: quote\n          set_contact: null\n        - date: null\n          default: dateValue\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: quote\n          python: date_value\n        - is_object: true\n          key: quotes\n          keyPascal: Quotes\n          quotes: null\n        - add_quote: null\n          is_array_add: true\n          is_last: true\n          java: Quotes\n          key: quotes\n          keyPascal: Quotes\n          object: quote\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ quotes: [{ reference: \"I am an update\", contact: {\n        contactID: \"00000000-0000-0000-0000-000000000000\" }, date: \"2020-02-01\"\n        }]}'\n      x-ruby-requestBody: 'quotes = { quotes: [{ reference: \"I am an update\", contact:\n        { contact_id: \"00000000-0000-0000-0000-000000000000\" }, date:\n        \"2020-02-01\" }]}'\n  \"/Quotes/{QuoteID}/Attachments\":\n    get:\n      operationId: getQuoteAttachments\n      parameters:\n        - description: Unique identifier for Quote object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"439c1573-3cd8-4697-a9f6-81fa651ee8f3\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550852630329)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"52a643be-cd5c-489f-9778-53a9fd337756\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachment\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments for a specific quote\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Quotes/{QuoteID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getQuoteAttachmentById\n      parameters:\n        - description: Unique identifier for Quote object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for Attachment object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Quote as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific quote using a unique\n        attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Quotes/{QuoteID}/Attachments/{FileName}\":\n    get:\n      operationId: getQuoteAttachmentByFileName\n      parameters:\n        - description: Unique identifier for Quote object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Quote as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific quote by filename\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateQuoteAttachmentByFileName\n      parameters:\n        - description: Unique identifier for Quote object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"c8d6413a-1da2-4faa-9848-21f60443e906\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550859714477)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"3fa85f64-5717-4562-b3fc-2c963f66afa6\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachment\n          x-isAttachment: true\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Validation Error - some data was incorrect returns response of type\n            Error\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates a specific attachment from a specific quote by filename\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createQuoteAttachmentByFileName\n      parameters:\n        - description: Unique identifier for Quote object\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Name of the attachment\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"724cdff5-bcd1-4c5c-977e-e864c24258e0\", \"Status\": \"OK\",\n                \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n                \"\\/Date(1550856817769)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"ab95b276-9dce-4925-9077-439818ba270f\", \"FileName\":\n                \"sample5.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Quotes/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachment\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates attachment for a specific quote\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/Quotes/{QuoteID}/History\":\n    get:\n      operationId: getQuoteHistory\n      parameters:\n        - description: Unique identifier for an Quote\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history records of a specific quote\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createQuoteHistory\n      parameters:\n        - description: Unique identifier for an Quote\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific quote\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  \"/Quotes/{QuoteID}/pdf\":\n    get:\n      operationId: getQuoteAsPdf\n      parameters:\n        - description: Unique identifier for an Quote\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: QuoteID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/pdf:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of byte array pdf version of specified\n            Quotes\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific quote as a PDF file using a unique quote Id\n      tags:\n        - Accounting\n      x-path: /Quotes/{QuoteID}\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Receipts:\n    get:\n      operationId: getReceipts\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: Status==\"DRAFT\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + Receipt.StatusEnum.DRAFT + \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\Receipt::STATUS_DRAFT .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::Receipt::DRAFT}\n        - description: Order by an any element\n          example: ReceiptNumber ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"078b2a2c-902f-4154-8739-357ece5982e5\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552524584695)\\/\", \"Receipts\": [ { \"ReceiptID\":\n                \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"ReceiptNumber\": 1,\n                \"Status\": \"DRAFT\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"FirstName\": \"API \",\n                \"LastName\": \"Team\", \"ValidationErrors\": [], \"Warnings\": [] },\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\": \"Liam\n                Gallagher\", \"Addresses\": [], \"Phones\": [], \"ContactGroups\": [],\n                \"SalesTrackingCategories\": [], \"PurchasesTrackingCategories\":\n                [], \"ContactPersons\": [], \"Attachments\": [],\n                \"HasValidationErrors\": false, \"ValidationErrors\": [],\n                \"Warnings\": [] }, \"Date\": \"\\/Date(1552435200000+0000)\\/\",\n                \"UpdatedDateUTC\": \"\\/Date(1552524583983+0000)\\/\", \"Reference\":\n                \"\", \"LineAmountTypes\": \"NoTax\", \"LineItems\": [], \"SubTotal\":\n                40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\":\n                \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"HasAttachments\": false,\n                \"Attachments\": [], \"ValidationErrors\": [], \"Warnings\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Receipts\"\n          description: Success - return response of type Receipts array for all Receipt\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves draft expense claim receipts for any user\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createReceipt\n      parameters:\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Receipts\": [ { \"Contact\": { \"ContactID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"Lineitems\": [ {\n              \"Description\": \"Foobar\", \"Quantity\": 2, \"UnitAmount\": 20,\n              \"AccountCode\": \"400\", \"TaxType\": \"NONE\", \"LineAmount\": 40 } ],\n              \"User\": { \"UserID\": \"00000000-0000-0000-0000-000000000000\" },\n              \"LineAmountTypes\": \"NoTax\", \"Status\": \"DRAFT\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Receipts\"\n        description: Receipts with an array of Receipt object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"35898898-5361-4b42-b6ca-9d2c584fc53d\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552524583429)\\/\", \"Receipts\": [ { \"ReceiptID\":\n                \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"ReceiptNumber\": 1,\n                \"Status\": \"DRAFT\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\":\n                \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\":\n                \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\":\n                \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\":\n                \"\\/Date(1552521600000+0000)\\/\", \"UpdatedDateUTC\":\n                \"\\/Date(1552524583367+0000)\\/\", \"Reference\": \"\",\n                \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\":\n                0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00,\n                \"Total\": 40.00, \"ID\": \"a44fd147-af4e-4fe8-a09a-55332df74162\",\n                \"HasAttachments\": false, \"ValidationErrors\": [ { \"Message\": \"A\n                valid user should be identified using the UserID.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Receipts\"\n          description: Success - return response of type Receipts array for newly created\n            Receipt\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates draft expense claim receipts for any user\n      tags:\n        - Accounting\n      x-example:\n        - contact: null\n          is_object: true\n          key: contact\n          keyPascal: Contact\n        - contactID: null\n          default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: contactId\n          keyPascal: ContactID\n          keySnake: contact_id\n          object: contact\n        - is_object: true\n          key: user\n          keyPascal: User\n          user: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: userID\n          keyPascal: UserID\n          keySnake: user_id\n          object: user\n          userID: null\n        - is_object: true\n          key: lineItem\n          keyPascal: LineItem\n          keySnake: line_item\n          lineItem: null\n        - default: Foobar\n          description: null\n          key: description\n          keyPascal: Description\n          object: lineItem\n        - default: 1\n          key: quantity\n          keyPascal: Quantity\n          nonString: true\n          object: lineItem\n          quantity: null\n        - default: 20\n          key: unitAmount\n          keyPascal: UnitAmount\n          keySnake: unit_amount\n          nonString: true\n          object: lineItem\n          unitAmount: null\n        - accountCode: null\n          default: \"000\"\n          is_last: true\n          key: accountCode\n          keyPascal: AccountCode\n          keySnake: account_code\n          object: lineItem\n        - is_list: true\n          key: lineItems\n          keyPascal: LineItem\n          keySnake: line_items\n          lineItems: null\n        - add_lineitems: null\n          is_last: true\n          is_list_add: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          object: lineItem\n          python: line_item\n        - is_object: true\n          key: receipt\n          keyPascal: Receipt\n          receipt: null\n        - default: contact\n          is_variable: true\n          key: contact\n          keyPascal: Contact\n          nonString: true\n          object: receipt\n          set_contact: null\n        - default: user\n          is_variable: true\n          key: user\n          keyPascal: User\n          nonString: true\n          object: receipt\n          set_user: null\n        - default: lineItems\n          is_variable: true\n          key: lineItems\n          keyPascal: LineItems\n          keySnake: line_items\n          nonString: true\n          object: receipt\n          python: line_items\n          set_lineitem: null\n        - csharp: LineAmountTypes.xxx\n          default: INCLUSIVE\n          java: com.xero.models.accounting.LineAmountTypes.INCLUSIVE\n          key: lineAmountTypes\n          keyPascal: LineAmountTypes\n          keySnake: line_amount_types\n          lineAmountTypes: null\n          node: LineAmountTypes.Inclusive\n          nonString: true\n          object: receipt\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\LineAmountTypes::INCLUSIVE\n          python: LineAmountTypes.INCLUSIVE\n          ruby: XeroRuby::Accounting::INCLUSIVE\n        - csharp: Receipt.xxx\n          default: DRAFT\n          is_last: true\n          java: com.xero.models.accounting.Receipt.StatusEnum.DRAFT\n          key: status\n          keyPascal: Status\n          node: Receipt.StatusEnum.DRAFT\n          nonString: true\n          object: receipt\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\Receipt::STATUS_DRAFT\n          python_string: DRAFT\n          ruby: XeroRuby::Accounting::Receipt::DRAFT\n          status: null\n        - is_object: true\n          key: receipts\n          keyPascal: Receipts\n          receipts: null\n        - add_receipt: null\n          is_array_add: true\n          is_last: true\n          java: Receipts\n          key: receipts\n          keyPascal: Receipts\n          object: receipt\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ receipts: [{ contact: { contactID:\n        \"00000000-0000-0000-0000-000000000000\" }, lineItems: [{ description:\n        \"Foobar\", quantity: 2.0, unitAmount: 20.0, accountCode: \"400\", taxType:\n        TaxType.NONE, lineAmount: 40.0 }], user: { userID:\n        \"00000000-0000-0000-0000-000000000000\" }, lineAmountTypes:\n        LineAmountTypes.Inclusive, status: Receipt.StatusEnum.DRAFT, date: null}\n        ] }'\n      x-ruby-requestBody: 'receipts = { receipts: [ { contact: { contact_id:\n        \"00000000-0000-0000-0000-000000000000\" }, line_items: [{ description:\n        \"Foobar\", quantity: 2.0, unit_amount: 20.0, account_code: \"400\",\n        tax_type: XeroRuby::Accounting::TaxType::NONE, line_amount: 40.0 }],\n        user: { user_id: \"00000000-0000-0000-0000-000000000000\" },\n        line_amount_types: XeroRuby::Accounting::INCLUSIVE, status:\n        XeroRuby::Accounting::Receipt::DRAFT, date: nil }]}'\n  \"/Receipts/{ReceiptID}\":\n    get:\n      operationId: getReceipt\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"2c99af06-d278-4580-8c8c-463c806af5b6\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553800357225)\\/\", \"Receipts\": [ { \"ReceiptID\":\n                \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"ReceiptNumber\": 1,\n                \"Status\": \"DRAFT\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\":\n                \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\":\n                \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\":\n                \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1553672800957+0000)\\/\", \"ContactGroups\": [],\n                \"DefaultCurrency\": \"NZD\", \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"Date\":\n                \"\\/Date(1552435200000+0000)\\/\", \"UpdatedDateUTC\":\n                \"\\/Date(1552524583983+0000)\\/\", \"Reference\": \"Foobar\",\n                \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\":\n                0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 2.0000, \"DiscountEnteredAsPercent\": true } ],\n                \"SubTotal\": 40.00, \"TotalTax\": 0.00, \"Total\": 40.00, \"ID\":\n                \"a44fd147-af4e-4fe8-a09a-55332df74162\", \"HasAttachments\": true,\n                \"Attachments\": [ { \"AttachmentID\":\n                \"e02a84f6-b83a-4983-b3b9-35cd8880c7bc\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, {\n                \"AttachmentID\": \"3451e34c-66a6-42b0-91e2-88618bdc169b\",\n                \"FileName\": \"foobar.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/foobar.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Receipts\"\n          description: Success - return response of type Receipts array for a specified\n            Receipt\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific draft expense claim receipt by using a unique\n        receipt Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateReceipt\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - $ref: \"#/components/parameters/unitdp\"\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Receipts\": [ { \"Lineitems\": [], \"User\": { \"UserID\":\n              \"00000000-0000-0000-0000-000000000000\" }, \"Reference\": \"Foobar\" }\n              ] }'\n            schema:\n              $ref: \"#/components/schemas/Receipts\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"05b76bf7-4734-4633-a399-7d569a6a25c6\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552675557052)\\/\", \"Receipts\": [ { \"ReceiptID\":\n                \"e3686fdc-c661-4581-b9df-cbb20782ea66\", \"ReceiptNumber\": 2,\n                \"Status\": \"DRAFT\", \"User\": { \"UserID\":\n                \"d1164823-0ac1-41ad-987b-b4e30fe0b273\", \"EmailAddress\":\n                \"api@xero.com\", \"FirstName\": \"API \", \"LastName\": \"Team\",\n                \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                \"Contact\": { \"ContactID\":\n                \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"ContactStatus\":\n                \"ACTIVE\", \"Name\": \"Liam Gallagher\", \"FirstName\": \"Liam\",\n                \"LastName\": \"Gallagher\", \"EmailAddress\": \"liam@rockstar.com\",\n                \"BankAccountDetails\": \"\", \"Addresses\": [ { \"AddressType\":\n                \"STREET\", \"City\": \"\", \"Region\": \"\", \"PostalCode\": \"\", \"Country\":\n                \"\", \"AttentionTo\": \"\" }, { \"AddressType\": \"POBOX\", \"City\":\n                \"Anytown\", \"Region\": \"NY\", \"PostalCode\": \"10101\", \"Country\":\n                \"USA\", \"AttentionTo\": \"\" } ], \"Phones\": [ { \"PhoneType\":\n                \"DEFAULT\", \"PhoneNumber\": \"222-2222\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"DDI\", \"PhoneNumber\":\n                \"\", \"PhoneAreaCode\": \"\", \"PhoneCountryCode\": \"\" }, {\n                \"PhoneType\": \"FAX\", \"PhoneNumber\": \"333-2233\", \"PhoneAreaCode\":\n                \"212\", \"PhoneCountryCode\": \"\" }, { \"PhoneType\": \"MOBILE\",\n                \"PhoneNumber\": \"444-3433\", \"PhoneAreaCode\": \"212\",\n                \"PhoneCountryCode\": \"\" } ], \"UpdatedDateUTC\":\n                \"\\/Date(1551747281053+0000)\\/\", \"ContactGroups\": [],\n                \"ContactPersons\": [], \"HasValidationErrors\": false }, \"Date\":\n                \"\\/Date(1552694400000+0000)\\/\", \"UpdatedDateUTC\":\n                \"\\/Date(1552675556927+0000)\\/\", \"Reference\": \"Foobar\",\n                \"LineAmountTypes\": \"NoTax\", \"LineItems\": [ { \"Description\":\n                \"Foobar\", \"UnitAmount\": 20.00, \"TaxType\": \"NONE\", \"TaxAmount\":\n                0.00, \"LineAmount\": 40.00, \"AccountCode\": \"400\", \"Tracking\": [],\n                \"Quantity\": 2.0000 } ], \"SubTotal\": 40.00, \"TotalTax\": 0.00,\n                \"Total\": 40.00, \"ID\": \"e3686fdc-c661-4581-b9df-cbb20782ea66\",\n                \"HasAttachments\": false, \"ValidationErrors\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Receipts\"\n          description: Success - return response of type Receipts array for updated Receipt\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Updates a specific draft expense claim receipts\n      tags:\n        - Accounting\n      x-example:\n        - dateValue: null\n          default: LocalDate.of(2020, Month.OCTOBER, 10)\n          is_date: true\n          java: LocalDate.now()\n          java_datatype: LocalDate\n          key: dateValue\n          keyPascal: Date\n          php: new DateTime('2019-12-10')\n          python: dateutil.parser.parse('2020-10-10T00:00:00Z')\n        - is_object: true\n          key: user\n          keyPascal: User\n          user: null\n        - default: 00000000-0000-0000-0000-000000000000\n          is_last: true\n          is_uuid: true\n          key: userID\n          keyPascal: UserID\n          keySnake: user_id\n          object: user\n          userID: null\n        - is_object: true\n          key: receipt\n          keyPascal: Receipt\n          receipt: null\n        - default: user\n          is_variable: true\n          key: user\n          keyPascal: User\n          nonString: true\n          object: receipt\n          set_user: null\n        - default: Foobar\n          key: reference\n          keyPascal: Reference\n          object: receipt\n          reference: null\n        - date: null\n          default: dateValue\n          is_last: true\n          is_variable: true\n          key: date\n          keyPascal: Date\n          nonString: true\n          object: receipt\n        - is_object: true\n          key: receipts\n          keyPascal: Receipts\n          receipts: null\n        - add_receipt: null\n          is_array_add: true\n          is_last: true\n          java: Receipts\n          key: receipts\n          keyPascal: Receipts\n          object: receipt\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ receipts: [{ user: { userID:\n        \"00000000-0000-0000-0000-000000000000\" }, reference: \"Foobar\", date:\n        \"2020-01-01\", contact: {}, lineItems: [] }]}'\n      x-ruby-requestBody: 'receipts = { receipts: [{ user: { user_id:\n        \"00000000-0000-0000-0000-000000000000\" }, reference: \"Foobar\", date:\n        \"2020-01-01\", contact: {}, line_items: [] }]}'\n  \"/Receipts/{ReceiptID}/Attachments\":\n    get:\n      operationId: getReceiptAttachments\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"d379c04d-d3aa-4034-95b8-af69a449bd78\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552686430436)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"11e5ca6b-d38c-42ab-a29f-c1710d171aa1\", \"FileName\": \"giphy.gif\",\n                \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Receipts/7923c00d-163d-404c-a608-af3de333db29/Attachments/giphy.gif\",\n                \"MimeType\": \"image/gif\", \"ContentLength\": 495727 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array of Attachments\n            for a specified Receipt\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments for a specific expense claim receipt\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Receipts/{ReceiptID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getReceiptAttachmentById\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for a Attachment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Receipt as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachments from a specific expense claim receipts\n        by using a unique attachment Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Receipts/{ReceiptID}/Attachments/{FileName}\":\n    get:\n      operationId: getReceiptAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to the Receipt\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Receipt as binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific expense claim receipts\n        by file name\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateReceiptAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to the Receipt\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"aeca1ea8-8fd9-4757-96a6-397dc4957a69\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552686602761)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"e02a84f6-b83a-4983-b3b9-35cd8880c7bc\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with updated\n            Attachment for a specified Receipt\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates a specific attachment on a specific expense claim receipts by\n        file name\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createReceiptAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to the Receipt\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"01c9a720-b1f1-4477-8de8-ff46d945fd1d\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1552686599884)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"3451e34c-66a6-42b0-91e2-88618bdc169b\", \"FileName\":\n                \"foobar.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Receipts/a44fd147-af4e-4fe8-a09a-55332df74162/Attachments/foobar.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with newly\n            created Attachment for a specified Receipt\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates an attachment on a specific expense claim receipts by file name\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/Receipts/{ReceiptID}/History\":\n    get:\n      operationId: getReceiptHistory\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a history record for a specific receipt\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createReceiptHistory\n      parameters:\n        - description: Unique identifier for a Receipt\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReceiptID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          content:\n            application/json:\n              example: '{ \"ErrorNumber\": 10, \"Type\": \"ValidationException\", \"Message\": \"A\n                validation exception occurred\", \"Elements\": [ { \"DateUTCString\":\n                \"2019-03-15T21:51:50\", \"DateUTC\": \"\\/Date(1552686710791)\\/\",\n                \"Details\": \"Hello World\", \"ValidationErrors\": [ { \"Message\":\n                \"The document with the supplied id was not found for this\n                endpoint.\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Unsupported - return response incorrect exception, API is not able\n            to create HistoryRecord for Receipts\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a history record for a specific receipt\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /RepeatingInvoices:\n    get:\n      operationId: getRepeatingInvoices\n      parameters:\n        - description: Filter by an any element\n          example: Status==\"DRAFT\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + RepeatingInvoice.StatusEnum.DRAFT +\n            \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\RepeatingInvoice::STATUS_DRAFT .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::RepeatingInvoice::DRAFT}\n        - description: Order by an any element\n          example: Total ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b336833d-a3a8-4a67-ab4c-6280b3ad87b0\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553805183228)\\/\", \"RepeatingInvoices\": [ { \"Schedule\":\n                { \"Period\": 1, \"Unit\": \"MONTHLY\", \"DueDate\": 10, \"DueDateType\":\n                \"OFFOLLOWINGMONTH\", \"StartDate\": \"\\/Date(1555286400000+0000)\\/\",\n                \"EndDate\": \"\\/Date(1569801600000+0000)\\/\", \"NextScheduledDate\":\n                \"\\/Date(1555286400000+0000)\\/\" }, \"RepeatingInvoiceID\":\n                \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Type\": \"ACCREC\",\n                \"Reference\": \"[Week]\", \"HasAttachments\": true, \"ID\":\n                \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\":\n                \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Guitars Fender Strat\", \"UnitAmount\": 5000.00, \"TaxType\":\n                \"OUTPUT2\", \"TaxAmount\": 750.00, \"LineAmount\": 5000.00,\n                \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000,\n                \"LineItemID\": \"13a8353c-d2af-4d5b-920c-438449f08900\",\n                \"DiscountEnteredAsPercent\": true } ], \"SubTotal\": 5000.00,\n                \"TotalTax\": 750.00, \"Total\": 5750.00, \"CurrencyCode\": \"NZD\" } ]\n                }'\n              schema:\n                $ref: \"#/components/schemas/RepeatingInvoices\"\n          description: Success - return response of type Repeating Invoices array for all\n            Repeating Invoice\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves repeating invoices\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/RepeatingInvoices/{RepeatingInvoiceID}\":\n    get:\n      operationId: getRepeatingInvoice\n      parameters:\n        - description: Unique identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: RepeatingInvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"d9ac3755-7b81-4e3a-bef0-fa8a4f171442\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553805184820)\\/\", \"RepeatingInvoices\": [ { \"Schedule\":\n                { \"Period\": 1, \"Unit\": \"MONTHLY\", \"DueDate\": 10, \"DueDateType\":\n                \"OFFOLLOWINGMONTH\", \"StartDate\": \"\\/Date(1555286400000+0000)\\/\",\n                \"EndDate\": \"\\/Date(1569801600000+0000)\\/\", \"NextScheduledDate\":\n                \"\\/Date(1555286400000+0000)\\/\" }, \"RepeatingInvoiceID\":\n                \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Type\": \"ACCREC\",\n                \"Reference\": \"[Week]\", \"HasAttachments\": true, \"Attachments\": [\n                { \"AttachmentID\": \"2a488b0f-3966-4b6e-a7e1-b6d3286351f2\",\n                \"FileName\": \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, {\n                \"AttachmentID\": \"48294e40-bfd2-4027-a365-f034383cb7aa\",\n                \"FileName\": \"foobar.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, {\n                \"AttachmentID\": \"528e978a-87b8-44c4-9465-9456ec2f7ee6\",\n                \"FileName\": \"helo-heros.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/Invoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/helo-heros.jpg\",\n                \"MimeType\": \"image/jpeg\", \"ContentLength\": 2878711 } ], \"ID\":\n                \"428c0d75-909f-4b04-8403-a48dc27283b0\", \"Contact\": {\n                \"ContactID\": \"430fa14a-f945-44d3-9f97-5df5e28441b8\", \"Name\":\n                \"Liam Gallagher\", \"Addresses\": [], \"Phones\": [],\n                \"ContactGroups\": [], \"ContactPersons\": [],\n                \"HasValidationErrors\": false }, \"Status\": \"AUTHORISED\",\n                \"LineAmountTypes\": \"Exclusive\", \"LineItems\": [ { \"Description\":\n                \"Guitars Fender Strat\", \"UnitAmount\": 5000.00, \"TaxType\":\n                \"OUTPUT2\", \"TaxAmount\": 750.00, \"LineAmount\": 5000.00,\n                \"AccountCode\": \"200\", \"Tracking\": [], \"Quantity\": 1.0000,\n                \"LineItemID\": \"13a8353c-d2af-4d5b-920c-438449f08900\",\n                \"DiscountEnteredAsPercent\": true } ], \"SubTotal\": 5000.00,\n                \"TotalTax\": 750.00, \"Total\": 5750.00, \"CurrencyCode\": \"NZD\" } ]\n                }'\n              schema:\n                $ref: \"#/components/schemas/RepeatingInvoices\"\n          description: Success - return response of type Repeating Invoices array with a\n            specified Repeating Invoice\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves a specific repeating invoice by using a unique repeating\n        invoice Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/RepeatingInvoices/{RepeatingInvoiceID}/Attachments\":\n    get:\n      operationId: getRepeatingInvoiceAttachments\n      parameters:\n        - description: Unique identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: RepeatingInvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b88b807b-3087-474b-a4f9-d8f1b4f5a899\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553805762049)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"2a488b0f-3966-4b6e-a7e1-b6d3286351f2\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, {\n                \"AttachmentID\": \"48294e40-bfd2-4027-a365-f034383cb7aa\",\n                \"FileName\": \"foobar.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 }, {\n                \"AttachmentID\": \"528e978a-87b8-44c4-9465-9456ec2f7ee6\",\n                \"FileName\": \"helo-heros.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/helo-heros.jpg\",\n                \"MimeType\": \"image/jpeg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with all\n            Attachments for a specified Repeating Invoice\n          x-isAttachment: true\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves attachments from a specific repeating invoice\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{AttachmentID}\":\n    get:\n      operationId: getRepeatingInvoiceAttachmentById\n      parameters:\n        - description: Unique identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: RepeatingInvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for a Attachment\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: AttachmentID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Repeating Invoice as\n            binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific repeating invoice\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/RepeatingInvoices/{RepeatingInvoiceID}/Attachments/{FileName}\":\n    get:\n      operationId: getRepeatingInvoiceAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: RepeatingInvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a Repeating Invoice\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n        - description: The mime type of the attachment file you are retrieving i.e\n            image/jpg, application/pdf\n          example: image/jpg\n          in: header\n          name: contentType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Success - return response of attachment for Repeating Invoice as\n            binary data\n      security:\n        - OAuth2:\n            - accounting.attachments.read\n      summary: Retrieves a specific attachment from a specific repeating invoices by\n        file name\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateRepeatingInvoiceAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: RepeatingInvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a Repeating Invoice\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"61b24d5c-4d6e-468f-9de1-abbc234b239a\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553805873362)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"d086d5f4-9c3d-4edc-a87e-906248eeb652\", \"FileName\":\n                \"HelloWorld.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/HelloWorld.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with specified\n            Attachment for a specified Repeating Invoice\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Updates a specific attachment from a specific repeating invoices by\n        file name\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n    put:\n      operationId: createRepeatingInvoiceAttachmentByFileName\n      parameters:\n        - description: Unique identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: RepeatingInvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The name of the file being attached to a Repeating Invoice\n          example: xero-dev.jpg\n          in: path\n          name: FileName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        description: Byte array of file in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"219de8c0-ee70-48af-a000-594eba14b417\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553805866696)\\/\", \"Attachments\": [ { \"AttachmentID\":\n                \"e078e56c-9a2b-4f6c-a1fa-5d19b0dab611\", \"FileName\":\n                \"foobar.jpg\", \"Url\":\n                \"https://api.xero.com/api.xro/2.0/RepeatingInvoices/428c0d75-909f-4b04-8403-a48dc27283b0/Attachments/foobar.jpg\",\n                \"MimeType\": \"image/jpg\", \"ContentLength\": 2878711 } ] }'\n              schema:\n                $ref: \"#/components/schemas/Attachments\"\n          description: Success - return response of type Attachments array with updated\n            Attachment for a specified Repeating Invoice\n          x-isAttachment: true\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.attachments\n      summary: Creates an attachment from a specific repeating invoices by file name\n      tags:\n        - Accounting\n      x-hasAccountingValidationError: true\n  \"/RepeatingInvoices/{RepeatingInvoiceID}/History\":\n    get:\n      operationId: getRepeatingInvoiceHistory\n      parameters:\n        - description: Unique identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: RepeatingInvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRetrieved\"\n      security:\n        - OAuth2:\n            - accounting.transactions.read\n      summary: Retrieves history record for a specific repeating invoice\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createRepeatingInvoiceHistory\n      parameters:\n        - description: Unique identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: RepeatingInvoiceID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/historyRecords\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/HistoryRecordCreated\"\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.transactions\n      summary: Creates a  history record for a specific repeating invoice\n      tags:\n        - Accounting\n      x-example:\n        - historyRecord: null\n          is_object: true\n          key: historyRecord\n          keyPascal: HistoryRecord\n          keySnake: history_record\n        - Details: null\n          default: Hello World\n          is_last: true\n          key: details\n          keyPascal: Details\n          object: historyRecord\n        - historyRecords: null\n          is_object: true\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n        - add_historyRecord: null\n          is_array_add: true\n          is_last: true\n          java: HistoryRecords\n          key: historyRecords\n          keyPascal: HistoryRecords\n          keySnake: history_records\n          object: historyRecord\n          python: history_record\n      x-hasAccountingValidationError: true\n  /Reports:\n    get:\n      operationId: getReportBASorGSTList\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for BAS (only valid for AU orgs)\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/AgedPayablesByContact:\n    get:\n      operationId: getReportAgedPayablesByContact\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: contactId\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The date of the Aged Payables By Contact report\n          in: query\n          name: date\n          schema:\n            format: date\n            type: string\n        - description: The from date of the Aged Payables By Contact report\n          in: query\n          name: fromDate\n          schema:\n            format: date\n            type: string\n        - description: The to date of the Aged Payables By Contact report\n          in: query\n          name: toDate\n          schema:\n            format: date\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"5a33f9d4-44a6-4467-a812-4f025506ee35\", \"Status\": \"OK\",\n                \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\":\n                \"\\/Date(1555971088085)\\/\", \"Reports\": [ { \"ReportID\":\n                \"AgedPayablesByContact\", \"ReportName\": \"Aged Payables By\n                Contact\", \"ReportType\": \"AgedPayablesByContact\", \"ReportTitles\":\n                [ \"Invoices\", \"ABC\", \"From 10 October 2017 to 22 April 2019\",\n                \"Showing payments to 22 April 2019\" ], \"ReportDate\": \"22 April\n                2019\", \"UpdatedDateUTC\": \"\\/Date(1555971088085)\\/\", \"Fields\":\n                [], \"Rows\": [ { \"RowType\": \"Header\", \"Cells\": [ { \"Value\":\n                \"Date\" }, { \"Value\": \"Reference\" }, { \"Value\": \"Due Date\" }, {\n                \"Value\": \"\" }, { \"Value\": \"Total\" }, { \"Value\": \"Paid\" }, {\n                \"Value\": \"Credited\" }, { \"Value\": \"Due\" } ] }, { \"RowType\":\n                \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [\n                { \"Value\": \"2017-10-10T00:00:00\" }, { \"Value\": \"Opening Balance\"\n                }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\":\n                \"\" }, { \"Value\": \"\" }, { \"Value\": \"0.00\" } ] } ] }, { \"RowType\":\n                \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [\n                { \"Value\": \"2018-10-09T00:00:00\", \"Attributes\": [ { \"Value\":\n                \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"2018-10-23T00:00:00\", \"Attributes\": [ { \"Value\":\n                \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"181 days overdue\", \"Attributes\": [ { \"Value\":\n                \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"250.00\", \"Attributes\": [ { \"Value\":\n                \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"250.00\", \"Attributes\": [ { \"Value\":\n                \"1f3960ae-0537-4438-a4dd-76d785e6d7d8\", \"Id\": \"invoiceID\" } ] }\n                ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total\" },\n                { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\":\n                \"250.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\":\n                \"250.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\":\n                [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Closing\n                Balance\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, {\n                \"Value\": \"250.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"250.00\" } ] } ] } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for aged payables by contact\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/AgedReceivablesByContact:\n    get:\n      operationId: getReportAgedReceivablesByContact\n      parameters:\n        - description: Unique identifier for a Contact\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: contactId\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The date of the Aged Receivables By Contact report\n          in: query\n          name: date\n          schema:\n            format: date\n            type: string\n        - description: The from date of the Aged Receivables By Contact report\n          in: query\n          name: fromDate\n          schema:\n            format: date\n            type: string\n        - description: The to date of the Aged Receivables By Contact report\n          in: query\n          name: toDate\n          schema:\n            format: date\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b977b607-955d-47cb-92fd-7c29b3dd755c\", \"Status\": \"OK\",\n                \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\":\n                \"\\/Date(1556032862815)\\/\", \"Reports\": [ { \"ReportID\":\n                \"AgedReceivablesByContact\", \"ReportName\": \"Aged Receivables By\n                Contact\", \"ReportType\": \"AgedReceivablesByContact\",\n                \"ReportTitles\": [ \"Invoices\", \"ABC\", \"From 10 October 2017 to 23\n                April 2019\", \"Showing payments to 23 April 2019\" ],\n                \"ReportDate\": \"23 April 2019\", \"UpdatedDateUTC\":\n                \"\\/Date(1556032862815)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\":\n                \"Header\", \"Cells\": [ { \"Value\": \"Date\" }, { \"Value\": \"Number\" },\n                { \"Value\": \"Due Date\" }, { \"Value\": \"\" }, { \"Value\": \"Total\" },\n                { \"Value\": \"Paid\" }, { \"Value\": \"Credited\" }, { \"Value\": \"Due\" }\n                ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\":\n                \"Row\", \"Cells\": [ { \"Value\": \"2017-10-10T00:00:00\" }, { \"Value\":\n                \"Opening Balance\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, {\n                \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\":\n                \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [\n                { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"2018-05-13T00:00:00\",\n                \"Attributes\": [ { \"Value\":\n                \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"IV1242016\", \"Attributes\": [ { \"Value\":\n                \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"2018-06-22T00:00:00\", \"Attributes\": [ { \"Value\":\n                \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"305 days overdue\", \"Attributes\": [ { \"Value\":\n                \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"100.00\", \"Attributes\": [ { \"Value\":\n                \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"100.00\", \"Attributes\": [ { \"Value\":\n                \"40ebad47-24e2-4dc9-a5f5-579df427671b\", \"Id\": \"invoiceID\" } ] }\n                ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\":\n                \"2019-04-23T00:00:00\", \"Attributes\": [ { \"Value\":\n                \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"INV-0086\", \"Attributes\": [ { \"Value\":\n                \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"2019-05-07T00:00:00\", \"Attributes\": [ { \"Value\":\n                \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"50.00\", \"Attributes\": [ { \"Value\":\n                \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] },\n                { \"Value\": \"50.00\", \"Attributes\": [ { \"Value\":\n                \"ca0483ce-fa43-4335-8512-751e655337b8\", \"Id\": \"invoiceID\" } ] }\n                ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total\" },\n                { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\":\n                \"150.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\":\n                \"150.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\":\n                [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Closing\n                Balance\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, {\n                \"Value\": \"150.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"150.00\" } ] } ] } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for aged receivables by contact\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/BalanceSheet:\n    get:\n      operationId: getReportBalanceSheet\n      parameters:\n        - description: The date of the Balance Sheet report\n          example: 2019-11-01\n          in: query\n          name: date\n          schema:\n            format: date\n            type: string\n        - description: The number of periods for the Balance Sheet report\n          example: 3\n          in: query\n          name: periods\n          schema:\n            type: integer\n        - description: The period size to compare to (MONTH, QUARTER, YEAR)\n          example: MONTH\n          in: query\n          name: timeframe\n          schema:\n            enum:\n              - MONTH\n              - QUARTER\n              - YEAR\n            type: string\n        - description: The tracking option 1 for the Balance Sheet report\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: trackingOptionID1\n          schema:\n            type: string\n        - description: The tracking option 2 for the Balance Sheet report\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: trackingOptionID2\n          schema:\n            type: string\n        - description: The standard layout boolean for the Balance Sheet report\n          example: true\n          in: query\n          name: standardLayout\n          schema:\n            type: boolean\n        - description: return a cash basis for the Balance Sheet report\n          example: false\n          in: query\n          name: paymentsOnly\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"2ddba304-6ed3-4da4-b185-3b6289699653\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555099412778)\\/\", \"Reports\": [ { \"ReportID\":\n                \"BalanceSheet\", \"ReportName\": \"Balance Sheet\", \"ReportType\":\n                \"BalanceSheet\", \"ReportTitles\": [ \"Balance Sheet\", \"Dev\n                Evangelist - Sid Test 3 (NZ-2016-02)\", \"As at 30 April 2019\" ],\n                \"ReportDate\": \"12 April 2019\", \"UpdatedDateUTC\":\n                \"\\/Date(1555099412778)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\":\n                \"Header\", \"Cells\": [ { \"Value\": \"\" }, { \"Value\": \"30 Apr 2019\"\n                }, { \"Value\": \"31 Mar 2019\" }, { \"Value\": \"28 Feb 2019\" } ] }, {\n                \"RowType\": \"Section\", \"Title\": \"Assets\", \"Rows\": [] }, {\n                \"RowType\": \"Section\", \"Title\": \"Bank\", \"Rows\": [ { \"RowType\":\n                \"Row\", \"Cells\": [ { \"Value\": \"Country Savings\", \"Attributes\": [\n                { \"Value\": \"041207d2-3d61-4e5d-8c1a-b9236955a71c\", \"Id\":\n                \"account\" } ] }, { \"Value\": \"-1850.00\", \"Attributes\": [ {\n                \"Value\": \"041207d2-3d61-4e5d-8c1a-b9236955a71c\", \"Id\": \"account\"\n                } ] }, { \"Value\": \"-1850.00\", \"Attributes\": [ { \"Value\":\n                \"041207d2-3d61-4e5d-8c1a-b9236955a71c\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"041207d2-3d61-4e5d-8c1a-b9236955a71c\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"My Big Bank\",\n                \"Attributes\": [ { \"Value\":\n                \"300f3bde-3a5c-4035-9ec5-45b09777679a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"2146.37\", \"Attributes\": [ { \"Value\":\n                \"300f3bde-3a5c-4035-9ec5-45b09777679a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"2020.00\", \"Attributes\": [ { \"Value\":\n                \"300f3bde-3a5c-4035-9ec5-45b09777679a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"300f3bde-3a5c-4035-9ec5-45b09777679a\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Bank\"\n                }, { \"Value\": \"296.37\" }, { \"Value\": \"170.00\" }, { \"Value\":\n                \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Current\n                Assets\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\":\n                \"Accounts Receivable\", \"Attributes\": [ { \"Value\":\n                \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"154355.72\", \"Attributes\": [ { \"Value\":\n                \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"154351.78\", \"Attributes\": [ { \"Value\":\n                \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"356.50\", \"Attributes\": [ { \"Value\":\n                \"b94495d0-44ab-4199-a1d0-427a4877e100\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Inventory\",\n                \"Attributes\": [ { \"Value\":\n                \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"25000.00\", \"Attributes\": [ { \"Value\":\n                \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"25000.00\", \"Attributes\": [ { \"Value\":\n                \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"53a12a15-7e9b-4a31-85f4-a7cee6d04215\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total\n                Current Assets\" }, { \"Value\": \"179355.72\" }, { \"Value\":\n                \"179351.78\" }, { \"Value\": \"356.50\" } ] } ] }, { \"RowType\":\n                \"Section\", \"Title\": \"Fixed Assets\", \"Rows\": [ { \"RowType\":\n                \"Row\", \"Cells\": [ { \"Value\": \"Office Equipment\", \"Attributes\": [\n                { \"Value\": \"7132cab3-ce56-4389-8e47-8f60d4c137f8\", \"Id\":\n                \"account\" } ] }, { \"Value\": \"-119.00\", \"Attributes\": [ {\n                \"Value\": \"7132cab3-ce56-4389-8e47-8f60d4c137f8\", \"Id\": \"account\"\n                } ] }, { \"Value\": \"-119.00\", \"Attributes\": [ { \"Value\":\n                \"7132cab3-ce56-4389-8e47-8f60d4c137f8\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"7132cab3-ce56-4389-8e47-8f60d4c137f8\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Fixed\n                Assets\" }, { \"Value\": \"-119.00\" }, { \"Value\": \"-119.00\" }, {\n                \"Value\": \"0.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"\",\n                \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\":\n                \"Total Assets\" }, { \"Value\": \"179533.09\" }, { \"Value\":\n                \"179402.78\" }, { \"Value\": \"356.50\" } ] } ] }, { \"RowType\":\n                \"Section\", \"Title\": \"Liabilities\", \"Rows\": [] }, { \"RowType\":\n                \"Section\", \"Title\": \"Current Liabilities\", \"Rows\": [ {\n                \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Accounts Payable\",\n                \"Attributes\": [ { \"Value\":\n                \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"-3469.00\", \"Attributes\": [ { \"Value\":\n                \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"-3469.00\", \"Attributes\": [ { \"Value\":\n                \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"-184.00\", \"Attributes\": [ { \"Value\":\n                \"a2a4795b-a01f-40eb-afa6-a34b4514875d\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"GST\",\n                \"Attributes\": [ { \"Value\":\n                \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"-2446.21\", \"Attributes\": [ { \"Value\":\n                \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"-2461.89\", \"Attributes\": [ { \"Value\":\n                \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"76.50\", \"Attributes\": [ { \"Value\":\n                \"17d9a4a0-3181-4803-a96b-f0dbe589091b\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total\n                Current Liabilities\" }, { \"Value\": \"-5915.21\" }, { \"Value\":\n                \"-5930.89\" }, { \"Value\": \"-107.50\" } ] } ] }, { \"RowType\":\n                \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\",\n                \"Cells\": [ { \"Value\": \"Total Liabilities\" }, { \"Value\":\n                \"-5915.21\" }, { \"Value\": \"-5930.89\" }, { \"Value\": \"-107.50\" } ]\n                } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ {\n                \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Net Assets\" }, {\n                \"Value\": \"185448.30\" }, { \"Value\": \"185333.67\" }, { \"Value\":\n                \"464.00\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Equity\",\n                \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Current\n                Year Earnings\", \"Attributes\": [ { \"Value\":\n                \"00000000-0000-0000-0000-000000000000\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"114.62\", \"Attributes\": [ { \"Value\":\n                \"00000000-0000-0000-0000-000000000000\", \"Id\": \"account\" }, {\n                \"Value\": \"4/1/2019\", \"Id\": \"fromDate\" }, { \"Value\": \"4/30/2019\",\n                \"Id\": \"toDate\" } ] }, { \"Value\": \"156621.67\", \"Attributes\": [ {\n                \"Value\": \"00000000-0000-0000-0000-000000000000\", \"Id\": \"account\"\n                }, { \"Value\": \"4/1/2018\", \"Id\": \"fromDate\" }, { \"Value\":\n                \"3/31/2019\", \"Id\": \"toDate\" } ] }, { \"Value\": \"500.00\",\n                \"Attributes\": [ { \"Value\":\n                \"00000000-0000-0000-0000-000000000000\", \"Id\": \"account\" }, {\n                \"Value\": \"4/1/2018\", \"Id\": \"fromDate\" }, { \"Value\": \"2/28/2019\",\n                \"Id\": \"toDate\" } ] } ] }, { \"RowType\": \"Row\", \"Cells\": [ {\n                \"Value\": \"Owner A Drawings\", \"Attributes\": [ { \"Value\":\n                \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"28752.00\", \"Attributes\": [ { \"Value\":\n                \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"28752.00\", \"Attributes\": [ { \"Value\":\n                \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"136ebd08-60ea-4592-8982-be92c153b53a\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Owner A Funds\n                Introduced\", \"Attributes\": [ { \"Value\":\n                \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"-50.00\", \"Attributes\": [ { \"Value\":\n                \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"-50.00\", \"Attributes\": [ { \"Value\":\n                \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"-46.00\", \"Attributes\": [ { \"Value\":\n                \"5690f1e8-1d02-4893-90c2-ee1a69eff942\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Retained\n                Earnings\", \"Attributes\": [ { \"Value\":\n                \"7fc16c06-c342-4f32-995f-889b5f9996fd\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"156631.67\", \"Attributes\": [ { \"Value\":\n                \"7fc16c06-c342-4f32-995f-889b5f9996fd\", \"Id\": \"account\" }, {\n                \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"4/30/2019\", \"Id\":\n                \"toDate\" } ] }, { \"Value\": \"10.00\", \"Attributes\": [ { \"Value\":\n                \"7fc16c06-c342-4f32-995f-889b5f9996fd\", \"Id\": \"account\" }, {\n                \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"3/31/2019\", \"Id\":\n                \"toDate\" } ] }, { \"Value\": \"10.00\", \"Attributes\": [ { \"Value\":\n                \"7fc16c06-c342-4f32-995f-889b5f9996fd\", \"Id\": \"account\" }, {\n                \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"2/28/2019\", \"Id\":\n                \"toDate\" } ] } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ {\n                \"Value\": \"Total Equity\" }, { \"Value\": \"185448.29\" }, { \"Value\":\n                \"185333.67\" }, { \"Value\": \"464.00\" } ] } ] } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for balancesheet\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/BankSummary:\n    get:\n      operationId: getReportBankSummary\n      parameters:\n        - description: The from date for the Bank Summary report e.g. 2018-03-31\n          example: 2019-11-01\n          in: query\n          name: fromDate\n          schema:\n            format: date\n            type: string\n        - description: The to date for the Bank Summary report e.g. 2018-03-31\n          example: 2019-11-30\n          in: query\n          name: toDate\n          schema:\n            format: date\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"ae58d0ec-9c5c-455f-b96e-690107579257\", \"Status\": \"OK\",\n                \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\":\n                \"\\/Date(1556035526223)\\/\", \"Reports\": [ { \"ReportID\":\n                \"BankSummary\", \"ReportName\": \"Bank Summary\", \"ReportType\":\n                \"BankSummary\", \"ReportTitles\": [ \"Bank Summary\", \"MindBody Test\n                10 (AU-2016-02)\", \"From 1 April 2019 to 30 April 2019\" ],\n                \"ReportDate\": \"23 April 2019\", \"UpdatedDateUTC\":\n                \"\\/Date(1556035526223)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\":\n                \"Header\", \"Cells\": [ { \"Value\": \"Bank Accounts\" }, { \"Value\":\n                \"Opening Balance\" }, { \"Value\": \"Cash Received\" }, { \"Value\":\n                \"Cash Spent\" }, { \"Value\": \"Closing Balance\" } ] }, { \"RowType\":\n                \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [\n                { \"Value\": \"Big City Bank\", \"Attributes\": [ { \"Value\":\n                \"03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8\", \"Id\": \"accountID\" } ] },\n                { \"Value\": \"0.00\" }, { \"Value\": \"110.00\", \"Attributes\": [ {\n                \"Value\": \"03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8\", \"Id\": \"account\"\n                } ] }, { \"Value\": \"100.00\", \"Attributes\": [ { \"Value\":\n                \"03f9cf1e-2deb-4bf1-b0a8-b57f08672eb8\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"10.00\" } ] }, { \"RowType\": \"SummaryRow\", \"Cells\": [ {\n                \"Value\": \"Total\" }, { \"Value\": \"0.00\" }, { \"Value\": \"110.00\" },\n                { \"Value\": \"100.00\" }, { \"Value\": \"10.00\" } ] } ] } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for bank summary\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/BudgetSummary:\n    get:\n      operationId: getReportBudgetSummary\n      parameters:\n        - description: The date for the Bank Summary report e.g. 2018-03-31\n          example: 2019-03-31\n          in: query\n          name: date\n          schema:\n            format: date\n            type: string\n        - description: The number of periods to compare (integer between 1 and 12)\n          example: 2\n          in: query\n          name: period\n          schema:\n            type: integer\n        - description: The period size to compare to (1=month, 3=quarter, 12=year)\n          example: 3\n          in: query\n          name: timeframe\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"9f1e2722-0d98-4669-890f-f8f4217c968b\", \"Status\": \"OK\",\n                \"ProviderName\": \"provider-name\", \"DateTimeUTC\":\n                \"\\/Date(1573755037865)\\/\", \"Reports\": [ { \"ReportID\":\n                \"BudgetSummary\", \"ReportName\": \"Budget Summary\", \"ReportType\":\n                \"BudgetSummary\", \"ReportTitles\": [ \"Overall Budget\", \"Budget\n                Summary\", \"Online Test 11\", \"November 2019 to October 2022\" ],\n                \"ReportDate\": \"14 November 2019\", \"UpdatedDateUTC\":\n                \"\\/Date(1573755037865)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\":\n                \"Header\", \"Cells\": [ { \"Value\": \"Account\" }, { \"Value\": \"Jan-20\"\n                }, { \"Value\": \"Apr-20\" }, { \"Value\": \"Jul-20\" }, { \"Value\":\n                \"Oct-20\" }, { \"Value\": \"Jan-21\" }, { \"Value\": \"Apr-21\" }, {\n                \"Value\": \"Jul-21\" }, { \"Value\": \"Oct-21\" }, { \"Value\": \"Jan-22\"\n                }, { \"Value\": \"Apr-22\" }, { \"Value\": \"Jul-22\" }, { \"Value\":\n                \"Oct-22\" } ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ {\n                \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\": \"Gross Profit\" },\n                { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" } ] }\n                ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\":\n                \"SummaryRow\", \"Cells\": [ { \"Value\": \"Total Expenses\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" } ] }\n                ] }, { \"RowType\": \"Section\", \"Title\": \"\", \"Rows\": [ { \"RowType\":\n                \"SummaryRow\", \"Cells\": [ { \"Value\": \"Net Profit\" }, { \"Value\":\n                \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\":\n                \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\":\n                \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\":\n                \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" } ] } ] } ] } ]\n                }'\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: success- return a Report with Rows object\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for budget summary\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/ExecutiveSummary:\n    get:\n      operationId: getReportExecutiveSummary\n      parameters:\n        - description: The date for the Bank Summary report e.g. 2018-03-31\n          example: 2019-03-31\n          in: query\n          name: date\n          schema:\n            format: date\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"068d3505-ac37-43f3-8135-f912a5963d8a\", \"Status\": \"OK\",\n                \"ProviderName\": \"provider-name\", \"DateTimeUTC\":\n                \"/Date(1573755038314)/\", \"Reports\": [ { \"ReportID\":\n                \"ExecutiveSummary\", \"ReportName\": \"Executive Summary\",\n                \"ReportType\": \"ExecutiveSummary\", \"ReportTitles\": [ \"Executive\n                Summary\", \"Online Test 11\", \"For the month of November 2019\" ],\n                \"ReportDate\": \"14 November 2019\", \"UpdatedDateUTC\":\n                \"/Date(1573755038314)/\", \"Fields\": [], \"Rows\": [ { \"RowType\":\n                \"Header\", \"Cells\": [ { \"Value\": \"\" }, { \"Value\": \"Nov 2019\" }, {\n                \"Value\": \"Oct 2019\" }, { \"Value\": \"Variance\" } ] }, { \"RowType\":\n                \"Section\", \"Title\": \"Cash\", \"Rows\": [ { \"RowType\": \"Row\",\n                \"Cells\": [ { \"Value\": \"Cash received\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\",\n                \"Cells\": [ { \"Value\": \"Cash spent\" }, { \"Value\": \"0.00\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\",\n                \"Cells\": [ { \"Value\": \"Cash surplus (deficit)\" }, { \"Value\":\n                \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] }, {\n                \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Closing bank balance\"\n                }, { \"Value\": \"79.01\" }, { \"Value\": \"79.01\" }, { \"Value\": \"0.0%\"\n                } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Profitability\",\n                \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Income\" },\n                { \"Value\": \"40.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Direct costs\" }, {\n                \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ] },\n                { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Gross profit (loss)\"\n                }, { \"Value\": \"40.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\"\n                } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Other Income\"\n                }, { \"Value\": \"0.00\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" }\n                ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Expenses\" }, {\n                \"Value\": \"205.40\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Profit (loss)\" },\n                { \"Value\": \"-165.40\" }, { \"Value\": \"0.00\" }, { \"Value\": \"0.0%\" }\n                ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Balance Sheet\",\n                \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Debtors\" },\n                { \"Value\": \"590.00\" }, { \"Value\": \"550.00\" }, { \"Value\": \"7.3%\"\n                } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Creditors\" },\n                { \"Value\": \"-44.00\" }, { \"Value\": \"-44.00\" }, { \"Value\": \"0.0%\"\n                } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Net assets\" },\n                { \"Value\": \"594.16\" }, { \"Value\": \"759.56\" }, { \"Value\":\n                \"-21.8%\" } ] } ] }, { \"RowType\": \"Section\", \"Title\": \"Income\",\n                \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Number of\n                invoices issued\" }, { \"Value\": \"1\" }, { \"Value\": \"0\" }, {\n                \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\":\n                \"Average value of invoices\" }, { \"Value\": \"40.00\" }, { \"Value\":\n                \"0.00\" }, { \"Value\": \"0.0%\" } ] } ] }, { \"RowType\": \"Section\",\n                \"Title\": \"Performance\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [\n                { \"Value\": \"Gross profit margin\" }, { \"Value\": \"100.0%\" }, {\n                \"Value\": \"\" }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\",\n                \"Cells\": [ { \"Value\": \"Net profit margin\" }, { \"Value\":\n                \"-413.5%\" }, { \"Value\": \"\" }, { \"Value\": \"0.0%\" } ] }, {\n                \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Return on investment\n                (p.a.)\" }, { \"Value\": \"-334.1%\" }, { \"Value\": \"0.0%\" }, {\n                \"Value\": \"0.0%\" } ] } ] }, { \"RowType\": \"Section\", \"Title\":\n                \"Position\", \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\":\n                \"Average debtors days\" }, { \"Value\": \"442.50\" }, { \"Value\": \"0\"\n                }, { \"Value\": \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ {\n                \"Value\": \"Average creditors days\" }, { \"Value\":\n                \"-6.426484907497565725413826680\" }, { \"Value\": \"0\" }, { \"Value\":\n                \"0.0%\" } ] }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Short\n                term cash forecast\" }, { \"Value\": \"634.00\" }, { \"Value\":\n                \"594.00\" }, { \"Value\": \"6.7%\" } ] }, { \"RowType\": \"Row\",\n                \"Cells\": [ { \"Value\": \"Current assets to liabilities\" }, {\n                \"Value\": \"4.0729764675459012154124644427\" }, { \"Value\":\n                \"-62.034024896265560165975103734\" }, { \"Value\": \"106.6%\" } ] },\n                { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Term assets to\n                liabilities\" }, { \"Value\": \"\" }, { \"Value\": \"\" }, { \"Value\":\n                \"0.0%\" } ] } ] } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for executive summary\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/ProfitAndLoss:\n    get:\n      operationId: getReportProfitAndLoss\n      parameters:\n        - description: The from date for the ProfitAndLoss report e.g. 2018-03-31\n          example: 2019-03-01\n          in: query\n          name: fromDate\n          schema:\n            format: date\n            type: string\n        - description: The to date for the ProfitAndLoss report e.g. 2018-03-31\n          example: 2019-03-31\n          in: query\n          name: toDate\n          schema:\n            format: date\n            type: string\n        - description: The number of periods to compare (integer between 1 and 12)\n          example: 3\n          in: query\n          name: periods\n          schema:\n            type: integer\n        - description: The period size to compare to (MONTH, QUARTER, YEAR)\n          example: MONTH\n          in: query\n          name: timeframe\n          schema:\n            enum:\n              - MONTH\n              - QUARTER\n              - YEAR\n            type: string\n        - description: The trackingCategory 1 for the ProfitAndLoss report\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: trackingCategoryID\n          schema:\n            type: string\n        - description: The trackingCategory 2 for the ProfitAndLoss report\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: trackingCategoryID2\n          schema:\n            type: string\n        - description: The tracking option 1 for the ProfitAndLoss report\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: trackingOptionID\n          schema:\n            type: string\n        - description: The tracking option 2 for the ProfitAndLoss report\n          example: 00000000-0000-0000-0000-000000000000\n          in: query\n          name: trackingOptionID2\n          schema:\n            type: string\n        - description: Return the standard layout for the ProfitAndLoss report\n          example: \"true\"\n          in: query\n          name: standardLayout\n          schema:\n            type: boolean\n        - description: Return cash only basis for the ProfitAndLoss report\n          example: \"false\"\n          in: query\n          name: paymentsOnly\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for profit and loss\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/TenNinetyNine:\n    get:\n      operationId: getReportTenNinetyNine\n      parameters:\n        - description: The year of the 1099 report\n          example: \"2019\"\n          in: query\n          name: reportYear\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"8b474ddb-9ef4-457c-8640-1c0e3670ea0e\", \"Status\": \"OK\",\n                \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\":\n                \"\\/Date(1555968100978)\\/\", \"Reports\": [ { \"ReportName\": \"1099\n                report\", \"ReportDate\": \"1 Jan 2016 to 31 Dec 2016\", \"Fields\":\n                [], \"Contacts\": [ { \"Box1\": 0.00, \"Box2\": 0.00, \"Box3\": 1000.00,\n                \"Box4\": 0.00, \"Box5\": 0.00, \"Box6\": 0.00, \"Box7\": 0.00, \"Box8\":\n                0.00, \"Box9\": 0.00, \"Box10\": 0.00, \"Box11\": 0.00, \"Box13\": 0.00,\n                \"Box14\": 0.00, \"Name\": \"Bank West\", \"FederalTaxIDType\": \"SSN\",\n                \"City\": \"Pinehaven\", \"Zip\": \"12345\", \"State\": \"CA\", \"Email\":\n                \"jack@bowest.com\", \"StreetAddress\": \"Procurement Services\\r\\nGPO\n                1234\\r\\n\\r\\n\\r\\n\", \"TaxID\": \"234-22-2223\", \"ContactId\":\n                \"81d5706a-8057-4338-8511-747cd85f4c68\" }, { \"Box1\": 0.00,\n                \"Box2\": 0.00, \"Box3\": 1000.00, \"Box4\": 0.00, \"Box5\": 0.00,\n                \"Box6\": 0.00, \"Box7\": 0.00, \"Box8\": 0.00, \"Box9\": 0.00, \"Box10\":\n                0.00, \"Box11\": 0.00, \"Box13\": 0.00, \"Box14\": 0.00, \"Name\": \"Hoyt\n                Productions\", \"FederalTaxIDType\": \"SSN\", \"City\": \"Oaktown\",\n                \"Zip\": \"45123\", \"State\": \"NY\", \"Email\":\n                \"accounts@hoytmadeupdemo.com\", \"StreetAddress\": \"100 Rusty Ridge\n                Road\\r\\nSuite 100\\r\\n\\r\\n\\r\\n\", \"TaxID\": \"123-45-6780\",\n                \"ContactId\": \"19732b6a-9a5c-4651-b33c-3f8f682e2a2b\" }, { \"Box1\":\n                5543.75, \"Box2\": 0.00, \"Box3\": 0.00, \"Box4\": 0.00, \"Box5\": 0.00,\n                \"Box6\": 0.00, \"Box7\": 0.00, \"Box8\": 0.00, \"Box9\": 0.00, \"Box10\":\n                0.00, \"Box11\": 0.00, \"Box13\": 0.00, \"Box14\": 0.00, \"Name\":\n                \"Truxton Property Management\", \"FederalTaxIDType\": \"EIN\",\n                \"City\": \"Coppertown\", \"Zip\": \"21321\", \"State\": \"FL\", \"Email\":\n                \"accounts@truxtonmadeupdemo.com\", \"StreetAddress\": \"1000 Copper\n                Avenue\\r\\nSuite 1000\\r\\n\\r\\n\\r\\n\", \"TaxID\": \"33-3332233\",\n                \"ContactId\": \"018355fc-c67e-4352-b443-ef3873031983\" } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/Reports\"\n          description: Success - return response of type Reports\n      security:\n        - OAuth2:\n            - accounting.reports.tenninetynine.read\n      summary: Retrieve reports for 1099\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Reports/TrialBalance:\n    get:\n      operationId: getReportTrialBalance\n      parameters:\n        - description: The date for the Trial Balance report e.g. 2018-03-31\n          example: 2019-10-31\n          in: query\n          name: date\n          schema:\n            format: date\n            type: string\n        - description: Return cash only basis for the Trial Balance report\n          example: \"true\"\n          in: query\n          name: paymentsOnly\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"0b3ee35e-b97c-4b3c-b7e2-9a465233e329\", \"Status\": \"OK\",\n                \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\":\n                \"\\/Date(1556129558740)\\/\", \"Reports\": [ { \"ReportID\":\n                \"TrialBalance\", \"ReportName\": \"Trial Balance\", \"ReportType\":\n                \"TrialBalance\", \"ReportTitles\": [ \"Trial Balance\", \"Dev\n                Evangelist - Sid Test 1 (US-2016-06)\", \"As at 24 April 2019\" ],\n                \"ReportDate\": \"24 April 2019\", \"UpdatedDateUTC\":\n                \"\\/Date(1556129558724)\\/\", \"Fields\": [], \"Rows\": [ { \"RowType\":\n                \"Header\", \"Cells\": [ { \"Value\": \"Account\" }, { \"Value\": \"Debit\"\n                }, { \"Value\": \"Credit\" }, { \"Value\": \"YTD Debit\" }, { \"Value\":\n                \"YTD Credit\" } ] }, { \"RowType\": \"Section\", \"Title\": \"Revenue\",\n                \"Rows\": [ { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Big Expense\n                (002)\", \"Attributes\": [ { \"Value\":\n                \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"80.00\", \"Attributes\": [ { \"Value\":\n                \"da962997-a8bd-4dff-9616-01cdc199283f\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Sales (400)\",\n                \"Attributes\": [ { \"Value\":\n                \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"200.00\", \"Attributes\": [ { \"Value\":\n                \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"1020.22\", \"Attributes\": [ { \"Value\":\n                \"02439bca-5fdc-4b62-b281-0bdf9f16fd5b\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Sales-35325\n                (1302)\", \"Attributes\": [ { \"Value\":\n                \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"1000.00\", \"Attributes\": [ { \"Value\":\n                \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"1000.00\", \"Attributes\": [ { \"Value\":\n                \"3f50db14-1fe6-450b-bfe8-b2d894f18c62\", \"Id\": \"account\" } ] } ]\n                } ] }, { \"RowType\": \"Section\", \"Title\": \"Expenses\", \"Rows\": [ {\n                \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Foobar14043 (123)\",\n                \"Attributes\": [ { \"Value\":\n                \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"40.00\", \"Attributes\": [ { \"Value\":\n                \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"d1602f69-f900-4616-8d34-90af393fa368\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"MyExp51937\n                (1231239)\", \"Attributes\": [ { \"Value\":\n                \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"80.00\", \"Attributes\": [ { \"Value\":\n                \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"90f10e0a-a043-46fe-b87e-630e9a951dae\", \"Id\": \"account\" } ] } ]\n                } ] }, { \"RowType\": \"Section\", \"Title\": \"Assets\", \"Rows\": [ {\n                \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Accounts Receivable\n                (120)\", \"Attributes\": [ { \"Value\":\n                \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"1190.00\", \"Attributes\": [ { \"Value\":\n                \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"36555.04\", \"Attributes\": [ { \"Value\":\n                \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"31ae5bb4-611c-4f89-a369-86e4d56e90b6\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Business Wells\n                Fargo (088)\", \"Attributes\": [ { \"Value\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"7639.04\", \"Attributes\": [ { \"Value\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"6f7594f2-f059-4d56-9e67-47ac9733bfe9\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Generic Cash\n                Clearing (8003)\", \"Attributes\": [ { \"Value\":\n                \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"1443.00\", \"Attributes\": [ { \"Value\":\n                \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"f4be973a-25fc-48d0-a7df-7f719f239729\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Generic Credit\n                Card Clearing (8002)\", \"Attributes\": [ { \"Value\":\n                \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"96.49\", \"Attributes\": [ { \"Value\":\n                \"a10867ac-0bc4-4aa5-af00-b9e5b207c6c3\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Generic Inventory\n                (1400)\", \"Attributes\": [ { \"Value\":\n                \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"160.00\", \"Attributes\": [ { \"Value\":\n                \"7422f1b6-619f-488c-89e1-91bdde20216c\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"My Savings (090)\",\n                \"Attributes\": [ { \"Value\":\n                \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"219.92\", \"Attributes\": [ { \"Value\":\n                \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"7e5e243b-9fcd-4aef-8e3a-c70be1e39bfa\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Payment Wall\n                Clearing Account (8001)\", \"Attributes\": [ { \"Value\":\n                \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"1.00\", \"Attributes\": [ { \"Value\":\n                \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"bc06840c-12c5-4e22-bb57-fef4d64bac10\", \"Id\": \"account\" } ] } ]\n                } ] }, { \"RowType\": \"Section\", \"Title\": \"Liabilities\", \"Rows\": [\n                { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Accounts Payable\n                (200)\", \"Attributes\": [ { \"Value\":\n                \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"9223.00\", \"Attributes\": [ { \"Value\":\n                \"e9132ee7-4dcf-4fad-b76c-86e212af645a\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Deferred Revenue\n                (2300)\", \"Attributes\": [ { \"Value\":\n                \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"1854.24\", \"Attributes\": [ { \"Value\":\n                \"f22cd74e-f59d-4f38-a08d-07e14df28c24\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Rounding (260)\",\n                \"Attributes\": [ { \"Value\":\n                \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.01\", \"Attributes\": [ { \"Value\":\n                \"f0072999-8f7c-4b01-bce9-bd9352f98e02\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Sales Tax (220)\",\n                \"Attributes\": [ { \"Value\":\n                \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"1578.35\", \"Attributes\": [ { \"Value\":\n                \"af0be362-45fe-4730-a8af-634c2fb93f4d\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Suspense (250)\",\n                \"Attributes\": [ { \"Value\":\n                \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"10.00\", \"Attributes\": [ { \"Value\":\n                \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"41.00\", \"Attributes\": [ { \"Value\":\n                \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"5ec2f302-cd60-4f8b-a915-9229dd45e6fa\", \"Id\": \"account\" } ] } ]\n                }, { \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Unpaid Expense\n                Claims (210)\", \"Attributes\": [ { \"Value\":\n                \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"135.00\", \"Attributes\": [ { \"Value\":\n                \"38e6967d-4da1-4a93-85f1-ea3c93b61041\", \"Id\": \"account\" } ] } ]\n                } ] }, { \"RowType\": \"Section\", \"Title\": \"Equity\", \"Rows\": [ {\n                \"RowType\": \"Row\", \"Cells\": [ { \"Value\": \"Retained Earnings\n                (320)\", \"Attributes\": [ { \"Value\":\n                \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" } ] }, {\n                \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" }, {\n                \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"12/31/2018\", \"Id\":\n                \"toDate\" } ] }, { \"Value\": \"0.00\", \"Attributes\": [ { \"Value\":\n                \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" }, {\n                \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"12/31/2018\", \"Id\":\n                \"toDate\" } ] }, { \"Value\": \"\", \"Attributes\": [ { \"Value\":\n                \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\" }, {\n                \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"12/31/2018\", \"Id\":\n                \"toDate\" } ] }, { \"Value\": \"30871.69\", \"Attributes\": [ {\n                \"Value\": \"6ef53919-b47d-4341-b11a-735a3f8a6515\", \"Id\": \"account\"\n                }, { \"Value\": \"\", \"Id\": \"fromDate\" }, { \"Value\": \"12/31/2018\",\n                \"Id\": \"toDate\" } ] } ] } ] }, { \"RowType\": \"Section\", \"Title\":\n                \"\", \"Rows\": [ { \"RowType\": \"SummaryRow\", \"Cells\": [ { \"Value\":\n                \"Total\" }, { \"Value\": \"1200.00\" }, { \"Value\": \"1200.00\" }, {\n                \"Value\": \"46019.00\" }, { \"Value\": \"46019.00\" } ] } ] } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves report for trial balance\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Reports/{ReportID}\":\n    get:\n      operationId: getReportBASorGST\n      parameters:\n        - description: Unique identifier for a Report\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: ReportID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReportWithRows\"\n          description: Success - return response of type ReportWithRows\n      security:\n        - OAuth2:\n            - accounting.reports.read\n      summary: Retrieves a specific report for BAS using a unique report Id (only\n        valid for AU orgs)\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  /Setup:\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: postSetup\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"ConversionDate\": {}, \"ConversionBalances\": [], \"Accounts\": [ {\n              \"Code\": \"200\", \"Name\": \"Sales\", \"Type\": \"SALES\", \"ReportingCode\":\n              \"REV.TRA.GOO\" }, { \"Code\": \"400\", \"Name\": \"Advertising\", \"Type\":\n              \"OVERHEADS\", \"ReportingCode\": \"EXP\" }, { \"Code\": \"610\", \"Name\":\n              \"Accounts Receivable\", \"Type\": \"CURRENT\", \"SystemAccount\":\n              \"DEBTORS\", \"ReportingCode\": \"ASS.CUR.REC.TRA\" }, { \"Code\": \"800\",\n              \"Name\": \"Accounts Payable\", \"Type\": \"CURRLIAB\", \"SystemAccount\":\n              \"CREDITORS\", \"ReportingCode\": \"LIA.CUR.PAY\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/Setup\"\n        description: Object including an accounts array, a conversion balances array and\n          a conversion date object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"80dcb65b-4d14-4350-84e6-1438a809244a\", \"Status\": \"OK\",\n                \"ProviderName\": \"Java Public Example\", \"DateTimeUTC\":\n                \"/Date(1604457589645)/\", \"ImportSummary\": { \"Accounts\": {\n                \"Total\": 17, \"New\": 0, \"Updated\": 8, \"Deleted\": 0, \"Locked\": 0,\n                \"System\": 9, \"Errored\": 0, \"Present\": true, \"NewOrUpdated\": 8 },\n                \"Organisation\": { \"Present\": false } } }'\n              schema:\n                $ref: \"#/components/schemas/ImportSummaryObject\"\n          description: Success - returns a summary of the chart of accounts updates\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Sets the chart of accounts, the conversion date and conversion balances\n      tags:\n        - Accounting\n      x-example:\n        - account: null\n          is_object: true\n          key: account\n          keyPascal: Account\n        - code: null\n          default: 123\n          key: code\n          keyPascal: Code\n          object: account\n        - default: Business supplies\n          key: name\n          keyPascal: Name\n          name: null\n          object: account\n        - csharp: Account.ClassEnum.EXPENSE\n          default: EXPENSE\n          is_last: true\n          java: com.xero.models.accounting.AccountType.EXPENSE\n          key: type\n          keyPascal: Type\n          node: AccountType.EXPENSE\n          nonString: true\n          object: account\n          php: XeroAPI\\XeroPHP\\Models\\Accounting\\AccountType::EXPENSE\n          python: AccountType.EXPENSE\n          ruby: XeroRuby::Accounting::AccountType::EXPENSE\n          type: null\n        - accounts: null\n          is_list: true\n          key: accounts\n          keyPascal: Account\n        - add_accounts: null\n          is_last: true\n          is_list_add: true\n          key: accounts\n          keyPascal: Accounts\n          object: account\n        - conversionDate: null\n          is_object: true\n          key: conversionDate\n          keyPascal: ConversionDate\n          keySnake: conversion_date\n        - default: 10\n          key: month\n          keyPascal: Month\n          month: null\n          nonString: true\n          object: conversionDate\n        - default: 2020\n          is_last: true\n          key: year\n          keyPascal: Year\n          nonString: true\n          object: conversionDate\n          year: null\n        - conversionBalances: null\n          is_list: true\n          key: conversionBalances\n          keyPascal: ConversionBalances\n          keySnake: conversion_balances\n        - Setup: null\n          is_object: true\n          key: setup\n          keyPascal: Setup\n        - default: accounts\n          is_variable: true\n          key: accounts\n          keyPascal: Accounts\n          nonString: true\n          object: setup\n          set_accounts: null\n        - default: conversionDate\n          is_variable: true\n          key: conversionDate\n          keyPascal: ConversionDate\n          keySnake: conversion_date\n          nonString: true\n          object: setup\n          python: conversion_date\n          set_conversionDate: null\n        - default: conversionBalances\n          is_last: true\n          is_variable: true\n          key: conversionBalances\n          keyPascal: ConversionBalances\n          keySnake: conversion_balances\n          nonString: true\n          object: setup\n          python: conversion_balances\n          set_conversionBalances: null\n  /TaxRates:\n    get:\n      operationId: getTaxRates\n      parameters:\n        - description: Filter by an any element\n          example: Status==\"ACTIVE\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + TaxRate.StatusEnum.ACTIVE + \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\TaxRate::STATUS_ACTIVE .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::TaxRate::ACTIVE}\n        - description: Order by an any element\n          example: Name ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: Filter by tax type\n          example: INPUT\n          in: query\n          name: TaxType\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"455d494d-9706-465b-b584-7086ca406b27\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555086839841)\\/\", \"TaxRates\": [ { \"Name\": \"15% GST on\n                Expenses\", \"TaxType\": \"INPUT2\", \"ReportTaxType\": \"INPUT\",\n                \"CanApplyToAssets\": true, \"CanApplyToEquity\": true,\n                \"CanApplyToExpenses\": true, \"CanApplyToLiabilities\": true,\n                \"CanApplyToRevenue\": false, \"DisplayTaxRate\": 15.0000,\n                \"EffectiveRate\": 15.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [\n                { \"Name\": \"GST\", \"Rate\": 15.0000, \"IsCompound\": false,\n                \"IsNonRecoverable\": false } ] }, { \"Name\": \"15% GST on Income\",\n                \"TaxType\": \"OUTPUT2\", \"ReportTaxType\": \"OUTPUT\",\n                \"CanApplyToAssets\": true, \"CanApplyToEquity\": true,\n                \"CanApplyToExpenses\": false, \"CanApplyToLiabilities\": true,\n                \"CanApplyToRevenue\": true, \"DisplayTaxRate\": 15.0000,\n                \"EffectiveRate\": 15.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [\n                { \"Name\": \"GST\", \"Rate\": 15.0000, \"IsCompound\": false,\n                \"IsNonRecoverable\": false } ] }, { \"Name\": \"GST on Imports\",\n                \"TaxType\": \"GSTONIMPORTS\", \"ReportTaxType\": \"GSTONIMPORTS\",\n                \"CanApplyToAssets\": false, \"CanApplyToEquity\": false,\n                \"CanApplyToExpenses\": false, \"CanApplyToLiabilities\": true,\n                \"CanApplyToRevenue\": false, \"DisplayTaxRate\": 0.0000,\n                \"EffectiveRate\": 0.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [\n                { \"Name\": \"GST\", \"Rate\": 0.0000, \"IsCompound\": false,\n                \"IsNonRecoverable\": false } ] }, { \"Name\": \"No GST\", \"TaxType\":\n                \"NONE\", \"ReportTaxType\": \"NONE\", \"CanApplyToAssets\": true,\n                \"CanApplyToEquity\": true, \"CanApplyToExpenses\": true,\n                \"CanApplyToLiabilities\": true, \"CanApplyToRevenue\": true,\n                \"DisplayTaxRate\": 0.0000, \"EffectiveRate\": 0.0000, \"Status\":\n                \"ACTIVE\", \"TaxComponents\": [ { \"Name\": \"GST\", \"Rate\": 0.0000,\n                \"IsCompound\": false, \"IsNonRecoverable\": false } ] }, { \"Name\":\n                \"Zero Rated\", \"TaxType\": \"ZERORATED\", \"ReportTaxType\": \"OUTPUT\",\n                \"CanApplyToAssets\": false, \"CanApplyToEquity\": false,\n                \"CanApplyToExpenses\": false, \"CanApplyToLiabilities\": true,\n                \"CanApplyToRevenue\": true, \"DisplayTaxRate\": 0.0000,\n                \"EffectiveRate\": 0.0000, \"Status\": \"ACTIVE\", \"TaxComponents\": [\n                { \"Name\": \"GST\", \"Rate\": 0.0000, \"IsCompound\": false,\n                \"IsNonRecoverable\": false } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/TaxRates\"\n          description: Success - return response of type TaxRates array with TaxRates\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves tax rates\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateTaxRate\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"TaxRates\": [ { \"Name\": \"State Tax NY\", \"TaxComponents\": [ { \"Name\":\n              \"State Tax\", \"Rate\": 2.25 } ], \"Status\": \"DELETED\",\n              \"ReportTaxType\": \"INPUT\" } ] }'\n            schema:\n              $ref: \"#/components/schemas/TaxRates\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"12f4c453-2e25-41aa-a52f-6faaf6c05832\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555086839658)\\/\", \"TaxRates\": [ { \"Name\":\n                \"SDKTax29067\", \"TaxType\": \"TAX002\", \"ReportTaxType\": \"INPUT\",\n                \"CanApplyToAssets\": true, \"CanApplyToEquity\": true,\n                \"CanApplyToExpenses\": true, \"CanApplyToLiabilities\": true,\n                \"CanApplyToRevenue\": false, \"DisplayTaxRate\": 2.2500,\n                \"EffectiveRate\": 2.2500, \"Status\": \"DELETED\", \"TaxComponents\": [\n                { \"Name\": \"State Tax\", \"Rate\": 2.2500, \"IsCompound\": false,\n                \"IsNonRecoverable\": false } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/TaxRates\"\n          description: Success - return response of type TaxRates array updated TaxRate\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Updates tax rates\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: taxComponent\n          keyPascal: TaxComponent\n          keySnake: tax_component\n          taxComponent: null\n        - default: State Tax\n          key: name\n          keyPascal: Name\n          name: null\n          object: taxComponent\n        - default: 2.25\n          is_last: true\n          key: rate\n          keyPascal: Rate\n          nonString: true\n          object: taxComponent\n          rate: null\n        - is_object: true\n          key: taxRate\n          keyPascal: TaxRate\n          keySnake: tax_rate\n          taxRate: null\n        - default: CA State Tax\n          key: name\n          keyPascal: Name\n          name: null\n          object: taxRate\n        - add_taxComponent: null\n          is_array_add: true\n          is_last: true\n          java: TaxComponents\n          key: taxRate\n          keyPascal: TaxComponents\n          keySnake: tax_components\n          object: taxComponent\n          python: tax_component\n        - is_object: true\n          key: taxRates\n          keyPascal: TaxRates\n          taxRates: null\n        - add_taxRate: null\n          is_array_add: true\n          is_last: true\n          java: TaxRates\n          key: taxRates\n          keyPascal: TaxRates\n          keySnake: tax_rates\n          object: taxRate\n          python: tax_rate\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ taxRates: [{ name: \"State Tax NY\", taxComponents: [{\n        name: \"State Tax\", rate: 2.25 }], status: TaxRate.StatusEnum.DELETED,\n        reportTaxType: TaxRate.ReportTaxTypeEnum.INPUT }]}'\n      x-ruby-requestBody: 'tax_rates = { tax_rates: [{ name: \"State Tax NY\",\n        tax_components: [{ name: \"State Tax\", rate: 2.25 }], status:\n        XeroRuby::Accounting::TaxRate::Deleted, report_tax_type:\n        XeroRuby::Accounting::TaxRate::INPUT }]}'\n    put:\n      operationId: createTaxRates\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"TaxRates\": [ { \"Name\": \"CA State Tax\", \"TaxComponents\": [ { \"Name\":\n              \"State Tax\", \"Rate\": 2.25 } ] } ] }'\n            schema:\n              $ref: \"#/components/schemas/TaxRates\"\n        description: TaxRates array with TaxRate object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"9d2c5e56-fab4-450b-a5ff-d47409508eab\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555086839080)\\/\", \"TaxRates\": [ { \"Name\":\n                \"SDKTax29067\", \"TaxType\": \"TAX002\", \"ReportTaxType\": \"INPUT\",\n                \"CanApplyToAssets\": true, \"CanApplyToEquity\": true,\n                \"CanApplyToExpenses\": true, \"CanApplyToLiabilities\": true,\n                \"CanApplyToRevenue\": false, \"DisplayTaxRate\": 2.2500,\n                \"EffectiveRate\": 2.2500, \"Status\": \"ACTIVE\", \"TaxComponents\": [\n                { \"Name\": \"State Tax\", \"Rate\": 2.2500, \"IsCompound\": false,\n                \"IsNonRecoverable\": false } ] } ] }'\n              schema:\n                $ref: \"#/components/schemas/TaxRates\"\n          description: Success - return response of type TaxRates array newly created\n            TaxRate\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Creates one or more tax rates\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: taxComponent\n          keyPascal: TaxComponent\n          keySnake: tax_component\n          taxComponent: null\n        - default: State Tax\n          key: name\n          keyPascal: Name\n          name: null\n          object: taxComponent\n        - default: 2.25\n          is_last: true\n          key: rate\n          keyPascal: Rate\n          nonString: true\n          object: taxComponent\n          rate: null\n        - is_object: true\n          key: taxRate\n          keyPascal: TaxRate\n          keySnake: tax_rate\n          taxRate: null\n        - default: CA State Tax\n          key: name\n          keyPascal: Name\n          name: null\n          object: taxRate\n        - add_taxComponent: null\n          is_array_add: true\n          is_last: true\n          java: TaxComponents\n          key: taxRate\n          keyPascal: TaxComponents\n          keySnake: tax_components\n          object: taxComponent\n          python: tax_component\n        - is_object: true\n          key: taxRates\n          keyPascal: TaxRates\n          taxRates: null\n        - add_taxRate: null\n          is_array_add: true\n          is_last: true\n          java: TaxRates\n          key: taxRates\n          keyPascal: TaxRates\n          keySnake: tax_rates\n          object: taxRate\n          python: tax_rate\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ taxRates: [{ name: \"CA State Tax\", taxComponents: [{\n        name: \"State Tax\", rate: 2.25 }]}]}'\n      x-ruby-requestBody: 'tax_rates = { tax_rates: [{ name: \"CA State Tax\",\n        tax_components: [{ name: \"State Tax\", rate: 2.25 }]}]}'\n  /TrackingCategories:\n    get:\n      operationId: getTrackingCategories\n      parameters:\n        - description: Filter by an any element\n          example: Status==\"ACTIVE\"\n          in: query\n          name: where\n          schema:\n            type: string\n          x-example-java: Status==\u0026quot;\u0026apos; + TrackingCategory.StatusEnum.ACTIVE +\n            \u0026apos;\u0026quot;\n          x-example-php: Status==\u0026quot;\u0026apos; .\n            \\XeroAPI\\XeroPHP\\Models\\Accounting\\TrackingCategory::STATUS_ACTIVE .\n            \u0026apos;\u0026quot;\n          x-ruby-param: Status==#{XeroRuby::Accounting::TrackingCategory::ACTIVE}\n        - description: Order by an any element\n          example: Name ASC\n          in: query\n          name: order\n          schema:\n            type: string\n        - description: e.g. includeArchived=true - Categories and options with a status of\n            ARCHIVED will be included in the response\n          in: query\n          name: includeArchived\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"cec55068-8061-48e5-ac83-c77e7c54cf3d\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555085855047)\\/\", \"TrackingCategories\": [ { \"Name\":\n                \"BarFoo\", \"Status\": \"ACTIVE\", \"TrackingCategoryID\":\n                \"22f10184-0deb-44ae-a312-b1f6ea70e51f\", \"Options\": [] }, {\n                \"Name\": \"HelloWorld\", \"Status\": \"ACTIVE\", \"TrackingCategoryID\":\n                \"0c9fce3e-a111-4d99-803a-62cf3f40e633\", \"Options\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/TrackingCategories\"\n          description: Success - return response of type TrackingCategories array of\n            TrackingCategory\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves tracking categories and options\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createTrackingCategory\n      requestBody:\n        content:\n          application/json:\n            example: '{ name: \"FooBar\" }'\n            schema:\n              $ref: \"#/components/schemas/TrackingCategory\"\n        description: TrackingCategory object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"1a9f8e03-9916-4a42-93a9-e8fa4902d49c\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555085855988)\\/\", \"TrackingCategories\": [ { \"Name\":\n                \"FooBar\", \"Status\": \"ACTIVE\", \"TrackingCategoryID\":\n                \"b1df776b-b093-4730-b6ea-590cca40e723\", \"Options\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/TrackingCategories\"\n          description: Success - return response of type TrackingCategories array of newly\n            created TrackingCategory\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Create tracking categories\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: trackingCategory\n          keyPascal: TrackingCategory\n          trackingCategory: null\n        - default: Foobar\n          is_last: true\n          key: name\n          keyPascal: Name\n          name: null\n          object: trackingCategory\n      x-hasAccountingValidationError: true\n  \"/TrackingCategories/{TrackingCategoryID}\":\n    delete:\n      operationId: deleteTrackingCategory\n      parameters:\n        - description: Unique identifier for a TrackingCategory\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: TrackingCategoryID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"ca7f8145-c8a5-4366-a2fb-784edc0cfbb7\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555086457922)\\/\", \"TrackingCategories\": [ { \"Name\":\n                \"Foo46189\", \"Status\": \"DELETED\", \"TrackingCategoryID\":\n                \"0390bdfd-94f2-49d6-b7a0-4a38c46ebf03\", \"Options\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/TrackingCategories\"\n          description: Success - return response of type TrackingCategories array of\n            deleted TrackingCategory\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Deletes a specific tracking category\n      tags:\n        - Accounting\n    get:\n      operationId: getTrackingCategory\n      parameters:\n        - description: Unique identifier for a TrackingCategory\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: TrackingCategoryID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"b75b8862-39c0-45a8-82b8-30ab4831996b\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555085855442)\\/\", \"TrackingCategories\": [ { \"Name\":\n                \"Foo41157\", \"Status\": \"DELETED\", \"TrackingCategoryID\":\n                \"22f10184-0deb-44ae-a312-b1f6ea70e51f\", \"Options\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/TrackingCategories\"\n          description: Success - return response of type TrackingCategories array of\n            specified TrackingCategory\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves specific tracking categories and options using a unique\n        tracking category Id\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateTrackingCategory\n      parameters:\n        - description: Unique identifier for a TrackingCategory\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: TrackingCategoryID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ \"Name\": \"Avengers\" }'\n            schema:\n              $ref: \"#/components/schemas/TrackingCategory\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"55438774-f87d-4731-b586-799cf0f914ed\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555085856275)\\/\", \"TrackingCategories\": [ { \"Name\":\n                \"BarFoo\", \"Status\": \"ACTIVE\", \"TrackingCategoryID\":\n                \"b1df776b-b093-4730-b6ea-590cca40e723\", \"Options\": [] } ] }'\n              schema:\n                $ref: \"#/components/schemas/TrackingCategories\"\n          description: Success - return response of type TrackingCategories array of\n            updated TrackingCategory\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Updates a specific tracking category\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: trackingCategory\n          keyPascal: TrackingCategory\n          trackingCategory: null\n        - default: Foobar\n          is_last: true\n          key: name\n          keyPascal: Name\n          name: null\n          object: trackingCategory\n      x-hasAccountingValidationError: true\n      x-node-requestBody: '{ name: \"Avengers\" }'\n      x-ruby-requestBody: 'tracking_categories = { name: \"Avengers\" }'\n  \"/TrackingCategories/{TrackingCategoryID}/Options\":\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    put:\n      operationId: createTrackingOptions\n      parameters:\n        - description: Unique identifier for a TrackingCategory\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: TrackingCategoryID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ name: \" Bar\" }'\n            schema:\n              $ref: \"#/components/schemas/TrackingOption\"\n        description: TrackingOption object in body of request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"923be702-d124-4f5c-a568-760906538d8e\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555085857061)\\/\", \"Options\": [ { \"TrackingOptionID\":\n                \"34669548-b989-487a-979f-0787d04568a2\", \"Name\": \"Bar40423\",\n                \"Status\": \"ACTIVE\", \"HasValidationErrors\": false, \"IsDeleted\":\n                false, \"IsArchived\": false, \"IsActive\": true } ] }'\n              schema:\n                $ref: \"#/components/schemas/TrackingOptions\"\n          description: Success - return response of type TrackingOptions array of options\n            for a specified category\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Creates options for a specific tracking category\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: trackingOption\n          keyPascal: TrackingOption\n          trackingOption: null\n        - default: Foobar\n          is_last: true\n          key: name\n          keyPascal: Name\n          name: null\n          object: trackingOption\n      x-hasAccountingValidationError: true\n  \"/TrackingCategories/{TrackingCategoryID}/Options/{TrackingOptionID}\":\n    delete:\n      operationId: deleteTrackingOptions\n      parameters:\n        - description: Unique identifier for a TrackingCategory\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: TrackingCategoryID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for a Tracking Option\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: TrackingOptionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"d985866e-0831-418f-a07c-4d843ff66d25\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555085857338)\\/\", \"Options\": [ { \"TrackingOptionID\":\n                \"34669548-b989-487a-979f-0787d04568a2\", \"Name\": \"Bar40423\",\n                \"Status\": \"DELETED\", \"HasValidationErrors\": false, \"IsDeleted\":\n                true, \"IsArchived\": false, \"IsActive\": false } ] }'\n              schema:\n                $ref: \"#/components/schemas/TrackingOptions\"\n          description: Success - return response of type TrackingOptions array of\n            remaining options for a specified category\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Deletes a specific option for a specific tracking category\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n    post:\n      operationId: updateTrackingOptions\n      parameters:\n        - description: Unique identifier for a TrackingCategory\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: TrackingCategoryID\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Unique identifier for a Tracking Option\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: TrackingOptionID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example: '{ name: \"Vision\" }'\n            schema:\n              $ref: \"#/components/schemas/TrackingOption\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"923be702-d124-4f5c-a568-760906538d8e\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1555085857061)\\/\", \"Options\": [ { \"TrackingOptionID\":\n                \"34669548-b989-487a-979f-0787d04568a2\", \"Name\": \"Bar40423\",\n                \"Status\": \"ACTIVE\", \"HasValidationErrors\": false, \"IsDeleted\":\n                false, \"IsArchived\": false, \"IsActive\": true } ] }'\n              schema:\n                $ref: \"#/components/schemas/TrackingOptions\"\n          description: Success - return response of type TrackingOptions array of options\n            for a specified category\n        \"400\":\n          $ref: \"#/components/responses/400Error\"\n      security:\n        - OAuth2:\n            - accounting.settings\n      summary: Updates a specific option for a specific tracking category\n      tags:\n        - Accounting\n      x-example:\n        - is_object: true\n          key: trackingOption\n          keyPascal: TrackingOption\n          trackingOption: null\n        - default: Foobar\n          is_last: true\n          key: name\n          keyPascal: Name\n          name: null\n          object: trackingOption\n      x-hasAccountingValidationError: true\n  /Users:\n    get:\n      operationId: getUsers\n      parameters:\n        - $ref: \"#/components/parameters/ifModifiedSince\"\n        - description: Filter by an any element\n          example: IsSubscriber==true\n          in: query\n          name: where\n          schema:\n            type: string\n        - description: Order by an any element\n          example: LastName ASC\n          in: query\n          name: order\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"17932a4e-4948-4d50-8672-4ef0e1dd90c5\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553880796393)\\/\", \"Users\": [ { \"UserID\":\n                \"3c37ef1d-cd49-4589-9787-3c418ed8b6ac\", \"EmailAddress\":\n                \"test@email.com\", \"FirstName\": \"Test\", \"LastName\": \"Xero\",\n                \"UpdatedDateUTC\": \"\\/Date(1508523261613+0000)\\/\",\n                \"IsSubscriber\": false, \"OrganisationRole\": \"FINANCIALADVISER\" },\n                { \"UserID\": \"d1164823-0ac1-41ad-987b-b4e30fe0b273\",\n                \"EmailAddress\": \"api@xero.com\", \"FirstName\": \"API \", \"LastName\":\n                \"Team\", \"UpdatedDateUTC\": \"\\/Date(1511957179217+0000)\\/\",\n                \"IsSubscriber\": true, \"OrganisationRole\": \"FINANCIALADVISER\" } ]\n                }'\n              schema:\n                $ref: \"#/components/schemas/Users\"\n          description: Success - return response of type Users array of all User\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves users\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\n  \"/Users/{UserID}\":\n    get:\n      operationId: getUser\n      parameters:\n        - description: Unique identifier for a User\n          example: 00000000-0000-0000-0000-000000000000\n          in: path\n          name: UserID\n          required: true\n          schema:\n            format: uuid\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example: '{ \"Id\": \"51250ce8-1b35-4ba4-b404-dc94ff75bd87\", \"Status\": \"OK\",\n                \"ProviderName\": \"Provider Name Example\", \"DateTimeUTC\":\n                \"\\/Date(1553880796732)\\/\", \"Users\": [ { \"UserID\":\n                \"3c37ef1d-cd49-4589-9787-3c418ed8b6ac\", \"EmailAddress\":\n                \"test@email.com\", \"FirstName\": \"Test\", \"LastName\": \"Xero\",\n                \"UpdatedDateUTC\": \"\\/Date(1508523261613+0000)\\/\",\n                \"IsSubscriber\": false, \"OrganisationRole\": \"FINANCIALADVISER\" }\n                ] }'\n              schema:\n                $ref: \"#/components/schemas/Users\"\n          description: Success - return response of type Users array of specified User\n      security:\n        - OAuth2:\n            - accounting.settings.read\n      summary: Retrieves a specific user\n      tags:\n        - Accounting\n    parameters:\n      - $ref: \"#/components/parameters/requiredHeader\"\ncomponents:\n  parameters:\n    ifModifiedSince:\n      description: Only records created or modified since this timestamp will be returned\n      example: 2020-02-06T12:17:43.202-08:00\n      in: header\n      name: If-Modified-Since\n      schema:\n        format: date-time\n        type: string\n    includeOnline:\n      description: Allows an attachment to be seen by the end customer within their\n        online invoice\n      example: true\n      in: query\n      name: IncludeOnline\n      schema:\n        default: false\n        type: boolean\n    requiredHeader:\n      description: Xero identifier for Tenant\n      example: YOUR_XERO_TENANT_ID\n      in: header\n      name: xero-tenant-id\n      required: true\n      schema:\n        type: string\n    summarizeErrors:\n      description: If false return 200 OK and mix of successfully created objects and\n        any with validation errors\n      example: true\n      in: query\n      name: summarizeErrors\n      schema:\n        default: false\n        type: boolean\n      x-example-python: \"True\"\n    unitdp:\n      description: e.g. unitdp=4 – (Unit Decimal Places) You can opt in to use four\n        decimal places for unit amounts\n      example: 4\n      in: query\n      name: unitdp\n      schema:\n        type: integer\n  requestBodies:\n    historyRecords:\n      content:\n        application/json:\n          example: '{   \"HistoryRecords\": [   {   \"Details\": \"Hello World\" } ] }'\n          schema:\n            $ref: \"#/components/schemas/HistoryRecords\"\n      description: HistoryRecords containing an array of HistoryRecord objects in body\n        of request\n      required: true\n  responses:\n    400Error:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: A failed request due to validation error\n    HistoryRecordCreated:\n      content:\n        application/json:\n          example: '{ \"Id\": \"d7525479-3392-44c0-bb37-ff4a0b5df5bd\", \"Status\": \"OK\",\n            \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n            \"\\/Date(1550899400362)\\/\", \"HistoryRecords\": [ { \"DateUTCString\":\n            \"2019-02-23T05:23:20\", \"DateUTC\": \"\\/Date(1550899400362)\\/\",\n            \"Details\": \"Hello World\", \"ValidationErrors\": [] } ] }'\n          schema:\n            $ref: \"#/components/schemas/HistoryRecords\"\n      description: Success - return response of type HistoryRecords array of\n        HistoryRecord objects\n    HistoryRetrieved:\n      content:\n        application/json:\n          example: '{ \"Id\": \"cd54cc7b-b721-4207-b11d-7d13c7902f91\", \"Status\": \"OK\",\n            \"ProviderName\": \"Xero API Partner\", \"DateTimeUTC\":\n            \"\\/Date(1551311321819)\\/\", \"HistoryRecords\": [ { \"Changes\":\n            \"Attached a file\", \"DateUTCString\": \"2018-11-08T15:01:21\",\n            \"DateUTC\": \"\\/Date(1541689281470+0000)\\/\", \"User\": \"System\n            Generated\", \"Details\": \"Attached the file sample2.jpg through the\n            Xero API using Xero API Partner\" }, { \"Changes\": \"Credit Applied\",\n            \"DateUTCString\": \"2016-10-17T20:46:01\", \"DateUTC\":\n            \"\\/Date(1476737161173+0000)\\/\", \"User\": \"System Generated\",\n            \"Details\": \"Bank transfer from Business Wells Fargo to My Savings on\n            November 12, 2016 for 20.00.\" } ] }'\n          schema:\n            $ref: \"#/components/schemas/HistoryRecords\"\n      description: Success - return response of HistoryRecords array of 0 to N HistoryRecord\n  schemas:\n    Account:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/accounts/\n      properties:\n        AccountID:\n          description: The Xero identifier for an account – specified as a string\n            following  the endpoint name   e.g.\n            /297c2dc5-cc47-4afd-8ec8-74990b8761e9\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n        AddToWatchlist:\n          description: Boolean – describes whether the account is shown in the watchlist\n            widget on the dashboard\n          type: boolean\n        BankAccountNumber:\n          description: For bank accounts only (Account Type BANK)\n          type: string\n        BankAccountType:\n          description: For bank accounts only. See Bank Account types\n          enum:\n            - BANK\n            - CREDITCARD\n            - PAYPAL\n            - NONE\n            - \"\"\n          type: string\n        Class:\n          description: See Account Class Types\n          enum:\n            - ASSET\n            - EQUITY\n            - EXPENSE\n            - LIABILITY\n            - REVENUE\n          readOnly: true\n          type: string\n        Code:\n          description: Customer defined alpha numeric account code e.g 200 or SALES (max\n            length = 10)\n          example: 4400\n          type: string\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        Description:\n          description: Description of the Account. Valid for all types of accounts except\n            bank accounts (max length = 4000)\n          type: string\n        EnablePaymentsToAccount:\n          description: Boolean – describes whether account can have payments applied to it\n          type: boolean\n        HasAttachments:\n          default: \"false\"\n          description: boolean to indicate if an account has an attachment (read only)\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        Name:\n          description: Name of account (max length = 150)\n          example: Food Sales\n          maxLength: 150\n          type: string\n        ReportingCode:\n          description: Shown if set\n          type: string\n        ReportingCodeName:\n          description: Shown if set\n          readOnly: true\n          type: string\n        ShowInExpenseClaims:\n          description: Boolean – describes whether account code is available for use with\n            expense claims\n          type: boolean\n        Status:\n          description: Accounts with a status of ACTIVE can be updated to ARCHIVED. See\n            Account Status Codes\n          enum:\n            - ACTIVE\n            - ARCHIVED\n            - DELETED\n          type: string\n        SystemAccount:\n          description: If this is a system account then this element is returned. See\n            System Account types. Note that non-system accounts may have this\n            element set as either “” or null.\n          enum:\n            - DEBTORS\n            - CREDITORS\n            - BANKCURRENCYGAIN\n            - GST\n            - GSTONIMPORTS\n            - HISTORICAL\n            - REALISEDCURRENCYGAIN\n            - RETAINEDEARNINGS\n            - ROUNDING\n            - TRACKINGTRANSFERS\n            - UNPAIDEXPCLM\n            - UNREALISEDCURRENCYGAIN\n            - WAGEPAYABLES\n            - CISASSETS\n            - CISASSET\n            - CISLABOUR\n            - CISLABOUREXPENSE\n            - CISLABOURINCOME\n            - CISLIABILITY\n            - CISMATERIALS\n            - \"\"\n          readOnly: true\n          type: string\n        TaxType:\n          description: The tax type from TaxRates\n          type: string\n        Type:\n          $ref: \"#/components/schemas/AccountType\"\n          type: string\n        UpdatedDateUTC:\n          description: Last modified date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    AccountType:\n      description: See Account Types\n      enum:\n        - BANK\n        - CURRENT\n        - CURRLIAB\n        - DEPRECIATN\n        - DIRECTCOSTS\n        - EQUITY\n        - EXPENSE\n        - FIXED\n        - INVENTORY\n        - LIABILITY\n        - NONCURRENT\n        - OTHERINCOME\n        - OVERHEADS\n        - PREPAYMENT\n        - REVENUE\n        - SALES\n        - TERMLIAB\n        - PAYGLIABILITY\n        - PAYG\n        - SUPERANNUATIONEXPENSE\n        - SUPERANNUATIONLIABILITY\n        - WAGESEXPENSE\n      type: string\n    Accounts:\n      properties:\n        Accounts:\n          items:\n            $ref: \"#/components/schemas/Account\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    AccountsPayable:\n      properties:\n        Outstanding:\n          format: double\n          type: number\n          x-is-money: true\n        Overdue:\n          format: double\n          type: number\n          x-is-money: true\n      type: object\n    AccountsReceivable:\n      properties:\n        Outstanding:\n          format: double\n          type: number\n          x-is-money: true\n        Overdue:\n          format: double\n          type: number\n          x-is-money: true\n      type: object\n    Action:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/organisation/\n      properties:\n        Name:\n          description: Name of the actions for this organisation\n          example: UseMulticurrency\n          type: string\n        Status:\n          description: Status of the action for this organisation\n          enum:\n            - ALLOWED\n            - NOT-ALLOWED\n          type: string\n    Actions:\n      properties:\n        Actions:\n          items:\n            $ref: \"#/components/schemas/Action\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Address:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/types\n      properties:\n        AddressLine1:\n          description: max length = 500\n          maxLength: 500\n          type: string\n        AddressLine2:\n          description: max length = 500\n          maxLength: 500\n          type: string\n        AddressLine3:\n          description: max length = 500\n          maxLength: 500\n          type: string\n        AddressLine4:\n          description: max length = 500\n          maxLength: 500\n          type: string\n        AddressType:\n          description: define the type of address\n          enum:\n            - POBOX\n            - STREET\n          type: string\n        AttentionTo:\n          description: max length = 255\n          maxLength: 255\n          type: string\n        City:\n          description: max length = 255\n          maxLength: 255\n          type: string\n        Country:\n          description: max length = 50, [A-Z], [a-z] only\n          maxLength: 50\n          type: string\n        PostalCode:\n          description: max length = 50\n          maxLength: 50\n          type: string\n        Region:\n          description: max length = 255\n          maxLength: 255\n          type: string\n      type: object\n    AddressForOrganisation:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/types\n      properties:\n        AddressLine1:\n          description: max length = 500\n          maxLength: 500\n          type: string\n        AddressLine2:\n          description: max length = 500\n          maxLength: 500\n          type: string\n        AddressLine3:\n          description: max length = 500\n          maxLength: 500\n          type: string\n        AddressLine4:\n          description: max length = 500\n          maxLength: 500\n          type: string\n        AddressType:\n          description: define the type of address\n          enum:\n            - POBOX\n            - STREET\n            - DELIVERY\n          type: string\n        AttentionTo:\n          description: max length = 255\n          maxLength: 255\n          type: string\n        City:\n          description: max length = 255\n          maxLength: 255\n          type: string\n        Country:\n          description: max length = 50, [A-Z], [a-z] only\n          maxLength: 50\n          type: string\n        PostalCode:\n          description: max length = 50\n          maxLength: 50\n          type: string\n        Region:\n          description: max length = 255\n          maxLength: 255\n          type: string\n      type: object\n    Allocation:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/prepayments/\n      properties:\n        Amount:\n          description: the amount being applied to the invoice\n          format: double\n          type: number\n          x-is-money: true\n        CreditNote:\n          $ref: \"#/components/schemas/CreditNote\"\n        Date:\n          description: the date the allocation is applied YYYY-MM-DD.\n          type: string\n          x-is-msdate: true\n        Invoice:\n          $ref: \"#/components/schemas/Invoice\"\n        Overpayment:\n          $ref: \"#/components/schemas/Overpayment\"\n        Prepayment:\n          $ref: \"#/components/schemas/Prepayment\"\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          type: string\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      required:\n        - Amount\n        - Invoice\n        - Date\n      type: object\n    Allocations:\n      properties:\n        Allocations:\n          items:\n            $ref: \"#/components/schemas/Allocation\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Attachment:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/attachments/\n      properties:\n        AttachmentID:\n          description: Unique ID for the file\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n        ContentLength:\n          description: Length of the file content\n          type: integer\n        FileName:\n          description: Name of the file\n          example: xero-dev.jpg\n          type: string\n        IncludeOnline:\n          description: Include the file with the online invoice\n          type: boolean\n        MimeType:\n          description: Type of file\n          example: image/jpg\n          type: string\n        Url:\n          description: URL to the file on xero.com\n          example: https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg\n          type: string\n      type: object\n    Attachments:\n      properties:\n        Attachments:\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    BalanceDetails:\n      description: An array to specify multiple currency balances of an account\n      properties:\n        Balance:\n          description: The opening balances of the account. Debits are positive, credits\n            are negative values\n          format: double\n          type: number\n        CurrencyCode:\n          description: The currency of the balance (Not required for base currency)\n          type: string\n        CurrencyRate:\n          description: (Optional) Exchange rate to base currency when money is spent or\n            received. If not specified, XE rate for the day is applied\n          format: double\n          type: number\n          x-is-money: true\n      type: object\n    Balances:\n      description: The raw AccountsReceivable(sales invoices) and\n        AccountsPayable(bills) outstanding and overdue amounts, not converted to\n        base currency (read only)\n      properties:\n        AccountsPayable:\n          $ref: \"#/components/schemas/AccountsPayable\"\n        AccountsReceivable:\n          $ref: \"#/components/schemas/AccountsReceivable\"\n      type: object\n    BankTransaction:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/banktransactions/\n      properties:\n        BankAccount:\n          $ref: \"#/components/schemas/Account\"\n        BankTransactionID:\n          description: Xero generated unique identifier for bank transaction\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        CurrencyRate:\n          description: Exchange rate to base currency when money is spent or received.\n            e.g.0.7500 Only used for bank transactions in non base currency. If\n            this isn’t specified for non base currency accounts then either the\n            user-defined rate (preference) or the XE.com day rate will be used.\n            Setting currency is only supported on overpayments.\n          format: double\n          type: number\n          x-is-money: true\n        Date:\n          description: Date of transaction – YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        HasAttachments:\n          default: \"false\"\n          description: Boolean to indicate if a bank transaction has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        IsReconciled:\n          description: Boolean to show if transaction is reconciled\n          type: boolean\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        LineItems:\n          description: See LineItems\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        OverpaymentID:\n          description: Xero generated unique identifier for an Overpayment. This will be\n            returned on BankTransactions with a Type of SPEND-OVERPAYMENT or\n            RECEIVE-OVERPAYMENT\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          readOnly: true\n          type: string\n        PrepaymentID:\n          description: Xero generated unique identifier for a Prepayment. This will be\n            returned on BankTransactions with a Type of SPEND-PREPAYMENT or\n            RECEIVE-PREPAYMENT\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          readOnly: true\n          type: string\n        Reference:\n          description: Reference for the transaction. Only supported for SPEND and RECEIVE\n            transactions.\n          type: string\n        Status:\n          description: See Bank Transaction Status Codes\n          enum:\n            - AUTHORISED\n            - DELETED\n            - VOIDED\n          type: string\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          type: string\n        SubTotal:\n          description: Total of bank transaction excluding taxes\n          format: double\n          type: number\n          x-is-money: true\n        Total:\n          description: Total of bank transaction tax inclusive\n          format: double\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: Total tax on bank transaction\n          format: double\n          type: number\n          x-is-money: true\n        Type:\n          description: See Bank Transaction Types\n          enum:\n            - RECEIVE\n            - RECEIVE-OVERPAYMENT\n            - RECEIVE-PREPAYMENT\n            - SPEND\n            - SPEND-OVERPAYMENT\n            - SPEND-PREPAYMENT\n            - RECEIVE-TRANSFER\n            - SPEND-TRANSFER\n          type: string\n        UpdatedDateUTC:\n          description: Last modified date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        Url:\n          description: URL link to a source document – shown as “Go to App Name”\n          type: string\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      required:\n        - Type\n        - LineItems\n        - BankAccount\n      type: object\n    BankTransactions:\n      properties:\n        BankTransactions:\n          items:\n            $ref: \"#/components/schemas/BankTransaction\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    BankTransfer:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/bank-transfers/\n      properties:\n        Amount:\n          description: amount of the transaction\n          format: double\n          type: number\n          x-is-money: true\n        BankTransferID:\n          description: The identifier of the Bank Transfer\n          format: uuid\n          readOnly: true\n          type: string\n        CreatedDateUTC:\n          description: UTC timestamp of creation date of bank transfer\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        CurrencyRate:\n          description: The currency rate\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Date:\n          description: The date of the Transfer YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        FromBankAccount:\n          $ref: \"#/components/schemas/Account\"\n        FromBankTransactionID:\n          description: The Bank Transaction ID for the source account\n          format: uuid\n          readOnly: true\n          type: string\n        HasAttachments:\n          default: \"false\"\n          description: Boolean to indicate if a Bank Transfer has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        ToBankAccount:\n          $ref: \"#/components/schemas/Account\"\n        ToBankTransactionID:\n          description: The Bank Transaction ID for the destination account\n          format: uuid\n          readOnly: true\n          type: string\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      required:\n        - FromBankAccount\n        - ToBankAccount\n        - Amount\n      type: object\n    BankTransfers:\n      properties:\n        BankTransfers:\n          items:\n            $ref: \"#/components/schemas/BankTransfer\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    BatchPayment:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/BatchPayments/\n      properties:\n        Account:\n          $ref: \"#/components/schemas/Account\"\n        Amount:\n          description: The amount of the payment. Must be less than or equal to the\n            outstanding amount owing on the invoice e.g. 200.00\n          format: double\n          type: number\n          x-is-money: true\n        BatchPaymentID:\n          description: The Xero generated unique identifier for the bank transaction\n            (read-only)\n          format: uuid\n          readOnly: true\n          type: string\n        Code:\n          description: (NZ Only) Optional references for the batch payment transaction. It\n            will also show with the batch payment transaction in the bank\n            reconciliation Find \u0026 Match screen. Depending on your individual\n            bank, the detail may also show on the bank statement you import into\n            Xero.\n          maxLength: 12\n          type: string\n        Date:\n          description: Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06\n          type: string\n          x-is-msdate: true\n        DateString:\n          description: Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06\n          type: string\n        Details:\n          description: (Non-NZ Only) These details are sent to the org’s bank as a\n            reference for the batch payment transaction. They will also show\n            with the batch payment transaction in the bank reconciliation Find \u0026\n            Match screen. Depending on your individual bank, the detail may also\n            show on the bank statement imported into Xero. Maximum field length\n            = 18\n          type: string\n        IsReconciled:\n          description: Booelan that tells you if the batch payment has been reconciled\n            (read-only)\n          readOnly: true\n          type: string\n        Narrative:\n          description: (UK Only) Only shows on the statement line in Xero. Max length =18\n          maxLength: 18\n          type: string\n        Particulars:\n          description: (NZ Only) Optional references for the batch payment transaction. It\n            will also show with the batch payment transaction in the bank\n            reconciliation Find \u0026 Match screen. Depending on your individual\n            bank, the detail may also show on the bank statement you import into\n            Xero.\n          maxLength: 12\n          type: string\n        Payments:\n          description: An array of payments\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n        Reference:\n          description: (NZ Only) Optional references for the batch payment transaction. It\n            will also show with the batch payment transaction in the bank\n            reconciliation Find \u0026 Match screen. Depending on your individual\n            bank, the detail may also show on the bank statement you import into\n            Xero.\n          maxLength: 255\n          type: string\n        Status:\n          description: AUTHORISED or DELETED (read-only). New batch payments will have a\n            status of AUTHORISED. It is not possible to delete batch payments\n            via the API.\n          enum:\n            - AUTHORISED\n            - DELETED\n          readOnly: true\n          type: string\n        TotalAmount:\n          description: The total of the payments that make up the batch (read-only)\n          readOnly: true\n          type: string\n        Type:\n          description: PAYBATCH for bill payments or RECBATCH for sales invoice payments\n            (read-only)\n          enum:\n            - PAYBATCH\n            - RECBATCH\n          readOnly: true\n          type: string\n        UpdatedDateUTC:\n          description: UTC timestamp of last update to the payment\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n      type: object\n    BatchPaymentDetails:\n      description: Bank details for use on a batch payment stored with each contact\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/Contact/\n      properties:\n        BankAccountName:\n          description: Name of bank for use with Batch Payments\n          example: ACME Bank\n          type: string\n        BankAccountNumber:\n          description: Bank account number for use with Batch Payments\n          example: 123-456-1111111\n          type: string\n        Code:\n          description: (NZ Only) Optional references for the batch payment transaction. It\n            will also show with the batch payment transaction in the bank\n            reconciliation Find \u0026 Match screen. Depending on your individual\n            bank, the detail may also show on the bank statement you import into\n            Xero.\n          example: ABC\n          maxLength: 12\n          type: string\n        Details:\n          description: (Non-NZ Only) These details are sent to the org’s bank as a\n            reference for the batch payment transaction. They will also show\n            with the batch payment transaction in the bank reconciliation Find \u0026\n            Match screen. Depending on your individual bank, the detail may also\n            show on the bank statement imported into Xero. Maximum field length\n            = 18\n          example: Hello World\n          type: string\n        Reference:\n          description: (NZ Only) Optional references for the batch payment transaction. It\n            will also show with the batch payment transaction in the bank\n            reconciliation Find \u0026 Match screen. Depending on your individual\n            bank, the detail may also show on the bank statement you import into\n            Xero.\n          example: Foobar\n          maxLength: 12\n          type: string\n    BatchPayments:\n      properties:\n        BatchPayments:\n          items:\n            $ref: \"#/components/schemas/BatchPayment\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Bill:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/organisation/\n      properties:\n        Day:\n          description: Day of Month (0-31)\n          type: integer\n        Type:\n          $ref: \"#/components/schemas/PaymentTermType\"\n      type: object\n    BrandingTheme:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/branding-themes/\n      properties:\n        BrandingThemeID:\n          description: Xero identifier\n          format: uuid\n          type: string\n        CreatedDateUTC:\n          description: UTC timestamp of creation date of branding theme\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        LogoUrl:\n          description: The location of the image file used as the logo on this branding\n            theme\n          type: string\n        Name:\n          description: Name of branding theme\n          type: string\n        SortOrder:\n          description: Integer – ranked order of branding theme. The default branding\n            theme has a value of 0\n          type: integer\n        Type:\n          description: Always INVOICE\n          enum:\n            - INVOICE\n          type: string\n      type: object\n    BrandingThemes:\n      properties:\n        BrandingThemes:\n          items:\n            $ref: \"#/components/schemas/BrandingTheme\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    CISOrgSetting:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api/organisation\n      properties:\n        CISContractorEnabled:\n          description: true or false - Boolean that describes if the organisation is a CIS\n            Contractor\n          type: boolean\n        CISSubContractorEnabled:\n          description: true or false - Boolean that describes if the organisation is a CIS\n            SubContractor\n          type: boolean\n        Rate:\n          description: CIS Deduction rate for the organisation\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n    CISOrgSettings:\n      properties:\n        CISSettings:\n          items:\n            $ref: \"#/components/schemas/CISOrgSetting\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    CISSetting:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/contacts/\n      properties:\n        CISEnabled:\n          description: Boolean that describes if the contact is a CIS Subcontractor\n          type: boolean\n        Rate:\n          description: CIS Deduction rate for the contact if he is a subcontractor. If the\n            contact is not CISEnabled, then the rate is not returned\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n    CISSettings:\n      properties:\n        CISSettings:\n          items:\n            $ref: \"#/components/schemas/CISSetting\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Contact:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/contacts/\n      properties:\n        AccountNumber:\n          description: A user defined account number. This can be updated via the API and\n            the Xero UI (max length = 50)\n          maxLength: 50\n          type: string\n        AccountsPayableTaxType:\n          description: The tax type from TaxRates\n          type: string\n        AccountsReceivableTaxType:\n          description: The tax type from TaxRates\n          type: string\n        Addresses:\n          description: Store certain address types for a contact – see address types\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        Attachments:\n          description: Displays array of attachments from the API\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        Balances:\n          $ref: \"#/components/schemas/Balances\"\n        BankAccountDetails:\n          description: Bank account number of contact\n          type: string\n        BatchPayments:\n          $ref: \"#/components/schemas/BatchPaymentDetails\"\n        BrandingTheme:\n          $ref: \"#/components/schemas/BrandingTheme\"\n        ContactGroups:\n          description: Displays which contact groups a contact is included in\n          items:\n            $ref: \"#/components/schemas/ContactGroup\"\n          type: array\n        ContactID:\n          description: Xero identifier\n          format: uuid\n          type: string\n        ContactNumber:\n          description: This can be updated via the API only i.e. This field is read only\n            on the Xero contact screen, used to identify contacts in external\n            systems (max length = 50). If the Contact Number is used, this is\n            displayed as Contact Code in the Contacts UI in Xero.\n          maxLength: 50\n          type: string\n        ContactPersons:\n          description: See contact persons\n          items:\n            $ref: \"#/components/schemas/ContactPerson\"\n          type: array\n        ContactStatus:\n          description: Current status of a contact – see contact status types\n          enum:\n            - ACTIVE\n            - ARCHIVED\n            - GDPRREQUEST\n          type: string\n        DefaultCurrency:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        Discount:\n          description: The default discount rate for the contact (read only)\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        EmailAddress:\n          description: Email address of contact person (umlauts not supported) (max\n            length  = 255)\n          maxLength: 255\n          type: string\n        FirstName:\n          description: First name of contact person (max length = 255)\n          maxLength: 255\n          type: string\n        HasAttachments:\n          default: \"false\"\n          description: A boolean to indicate if a contact has an attachment\n          example: \"false\"\n          type: boolean\n        HasValidationErrors:\n          default: \"false\"\n          description: A boolean to indicate if a contact has an validation errors\n          example: \"false\"\n          type: boolean\n        IsCustomer:\n          description: true or false – Boolean that describes if a contact has any AR\n            invoices entered against them. Cannot be set via PUT or POST – it is\n            automatically set when an accounts receivable invoice is generated\n            against this contact.\n          type: boolean\n        IsSupplier:\n          description: true or false – Boolean that describes if a contact that has any\n            AP  invoices entered against them. Cannot be set via PUT or POST –\n            it is automatically set when an accounts payable invoice is\n            generated against this contact.\n          type: boolean\n        LastName:\n          description: Last name of contact person (max length = 255)\n          maxLength: 255\n          type: string\n        Name:\n          description: Full name of contact/organisation (max length = 255)\n          maxLength: 255\n          type: string\n        PaymentTerms:\n          $ref: \"#/components/schemas/PaymentTerm\"\n        Phones:\n          description: Store certain phone types for a contact – see phone types\n          items:\n            $ref: \"#/components/schemas/Phone\"\n          type: array\n        PurchasesDefaultAccountCode:\n          description: The default purchases account code for contacts\n          type: string\n        PurchasesTrackingCategories:\n          description: The default purchases tracking categories for contacts\n          items:\n            $ref: \"#/components/schemas/SalesTrackingCategory\"\n          type: array\n        SalesDefaultAccountCode:\n          description: The default sales account code for contacts\n          type: string\n        SalesTrackingCategories:\n          description: The default sales tracking categories for contacts\n          items:\n            $ref: \"#/components/schemas/SalesTrackingCategory\"\n          type: array\n        SkypeUserName:\n          description: Skype user name of contact\n          type: string\n        StatusAttributeString:\n          description: Status of object\n          type: string\n        TaxNumber:\n          description: Tax number of contact – this is also known as the ABN (Australia),\n            GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and\n            global) in the Xero UI depending on which regionalized version of\n            Xero you are using (max length = 50)\n          maxLength: 50\n          type: string\n        TrackingCategoryName:\n          description: The name of the Tracking Category assigned to the contact under\n            SalesTrackingCategories and PurchasesTrackingCategories\n          type: string\n        TrackingCategoryOption:\n          description: The name of the Tracking Option assigned to the contact under\n            SalesTrackingCategories and PurchasesTrackingCategories\n          type: string\n        UpdatedDateUTC:\n          description: UTC timestamp of last update to contact\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays validation errors returned from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n        Website:\n          description: Website address for contact (read only)\n          readOnly: true\n          type: string\n        XeroNetworkKey:\n          description: Store XeroNetworkKey for contacts.\n          type: string\n      type: object\n    ContactGroup:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/contactgroups/\n      properties:\n        ContactGroupID:\n          description: The Xero identifier for an contact group – specified as a string\n            following the endpoint name. e.g.\n            /297c2dc5-cc47-4afd-8ec8-74990b8761e9\n          format: uuid\n          type: string\n        Contacts:\n          description: The ContactID and Name of Contacts in a contact group. Returned on\n            GETs when the ContactGroupID is supplied in the URL.\n          items:\n            $ref: \"#/components/schemas/Contact\"\n          type: array\n        Name:\n          description: The Name of the contact group. Required when creating a new\n            contact  group\n          type: string\n        Status:\n          description: The Status of a contact group. To delete a contact group update the\n            status to DELETED. Only contact groups with a status of ACTIVE are\n            returned on GETs.\n          enum:\n            - ACTIVE\n            - DELETED\n          type: string\n      type: object\n    ContactGroups:\n      properties:\n        ContactGroups:\n          items:\n            $ref: \"#/components/schemas/ContactGroup\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    ContactPerson:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/contacts/\n      properties:\n        EmailAddress:\n          description: Email address of person\n          type: string\n        FirstName:\n          description: First name of person\n          type: string\n        IncludeInEmails:\n          description: boolean to indicate whether contact should be included on emails\n            with invoices etc.\n          type: boolean\n        LastName:\n          description: Last name of person\n          type: string\n      type: object\n    Contacts:\n      properties:\n        Contacts:\n          items:\n            $ref: \"#/components/schemas/Contact\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    ConversionBalances:\n      description: Balance supplied for each account that has a value as at the\n        conversion date.\n      properties:\n        AccountCode:\n          description: The account code for a account\n          type: string\n        Balance:\n          description: The opening balances of the account. Debits are positive, credits\n            are negative values\n          format: double\n          type: number\n        BalanceDetails:\n          items:\n            $ref: \"#/components/schemas/BalanceDetails\"\n          type: array\n      type: object\n    ConversionDate:\n      description: The date when the organisation starts using Xero\n      properties:\n        Month:\n          description: The month the organisation starts using Xero. Value is an integer\n            between 1 and 12\n          example: 1\n          type: integer\n        Year:\n          description: The year the organisation starts using Xero. Value is an integer\n            greater than 2006\n          example: 2020\n          type: integer\n      type: object\n    CountryCode:\n      enum:\n        - AD\n        - AE\n        - AF\n        - AG\n        - AI\n        - AL\n        - AM\n        - AN\n        - AO\n        - AQ\n        - AR\n        - AS\n        - AT\n        - AU\n        - AW\n        - AZ\n        - BA\n        - BB\n        - BD\n        - BE\n        - BF\n        - BG\n        - BH\n        - BI\n        - BJ\n        - BL\n        - BM\n        - BN\n        - BO\n        - BR\n        - BS\n        - BT\n        - BW\n        - BY\n        - BZ\n        - CA\n        - CC\n        - CD\n        - CF\n        - CG\n        - CH\n        - CI\n        - CK\n        - CL\n        - CM\n        - CN\n        - CO\n        - CR\n        - CU\n        - CV\n        - CW\n        - CX\n        - CY\n        - CZ\n        - DE\n        - DJ\n        - DK\n        - DM\n        - DO\n        - DZ\n        - EC\n        - EE\n        - EG\n        - EH\n        - ER\n        - ES\n        - ET\n        - FI\n        - FJ\n        - FK\n        - FM\n        - FO\n        - FR\n        - GA\n        - GB\n        - GD\n        - GE\n        - GG\n        - GH\n        - GI\n        - GL\n        - GM\n        - GN\n        - GQ\n        - GR\n        - GT\n        - GU\n        - GW\n        - GY\n        - HK\n        - HN\n        - HR\n        - HT\n        - HU\n        - ID\n        - IE\n        - IL\n        - IM\n        - IN\n        - IO\n        - IQ\n        - IR\n        - IS\n        - IT\n        - JE\n        - JM\n        - JO\n        - JP\n        - KE\n        - KG\n        - KH\n        - KI\n        - KM\n        - KN\n        - KP\n        - KR\n        - KW\n        - KY\n        - KZ\n        - LA\n        - LB\n        - LC\n        - LI\n        - LK\n        - LR\n        - LS\n        - LT\n        - LU\n        - LV\n        - LY\n        - MA\n        - MC\n        - MD\n        - ME\n        - MF\n        - MG\n        - MH\n        - MK\n        - ML\n        - MM\n        - MN\n        - MO\n        - MP\n        - MR\n        - MS\n        - MT\n        - MU\n        - MV\n        - MW\n        - MX\n        - MY\n        - MZ\n        - NA\n        - NC\n        - NE\n        - NG\n        - NI\n        - NL\n        - NO\n        - NP\n        - NR\n        - NU\n        - NZ\n        - OM\n        - PA\n        - PE\n        - PF\n        - PG\n        - PH\n        - PK\n        - PL\n        - PM\n        - PN\n        - PR\n        - PS\n        - PT\n        - PW\n        - PY\n        - QA\n        - RE\n        - RO\n        - RS\n        - RU\n        - RW\n        - SA\n        - SB\n        - SC\n        - SD\n        - SE\n        - SG\n        - SH\n        - SI\n        - SJ\n        - SK\n        - SL\n        - SM\n        - SN\n        - SO\n        - SR\n        - SS\n        - ST\n        - SV\n        - SX\n        - SY\n        - SZ\n        - TC\n        - TD\n        - TG\n        - TH\n        - TJ\n        - TK\n        - TL\n        - TM\n        - TN\n        - TO\n        - TR\n        - TT\n        - TV\n        - TW\n        - TZ\n        - UA\n        - UG\n        - US\n        - UY\n        - UZ\n        - VA\n        - VC\n        - VE\n        - VG\n        - VI\n        - VN\n        - VU\n        - WF\n        - WS\n        - XK\n        - YE\n        - YT\n        - ZA\n        - ZM\n        - ZW\n      type: string\n    CreditNote:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/credit-notes/\n      properties:\n        Allocations:\n          description: See Allocations\n          items:\n            $ref: \"#/components/schemas/Allocation\"\n          type: array\n        AppliedAmount:\n          description: The amount of applied to an invoice\n          example: 2\n          format: double\n          type: number\n          x-is-money: true\n        BrandingThemeID:\n          description: See BrandingThemes\n          format: uuid\n          type: string\n        CISDeduction:\n          description: CIS deduction for UK contractors\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        CISRate:\n          description: CIS Deduction rate for the organisation\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n        CreditNoteID:\n          description: Xero generated unique identifier\n          format: uuid\n          type: string\n        CreditNoteNumber:\n          description: ACCRECCREDIT – Unique alpha numeric code identifying credit note\n            (when missing will auto-generate from your Organisation Invoice\n            Settings)\n          type: string\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          description: The specified currency code\n          type: string\n        CurrencyRate:\n          description: The currency rate for a multicurrency invoice. If no rate is\n            specified, the XE.com day rate is used\n          format: double\n          type: number\n          x-is-money: true\n        Date:\n          description: The date the credit note is issued YYYY-MM-DD. If the Date element\n            is not specified then it will default to the current date based on\n            the timezone setting of the organisation\n          type: string\n          x-is-msdate: true\n        DueDate:\n          description: Date invoice is due – YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        FullyPaidOnDate:\n          description: Date when credit note was fully paid(UTC format)\n          type: string\n          x-is-msdate: true\n        HasAttachments:\n          default: \"false\"\n          description: boolean to indicate if a credit note has an attachment\n          example: \"false\"\n          type: boolean\n        HasErrors:\n          default: \"false\"\n          description: A boolean to indicate if a credit note has an validation errors\n          example: \"false\"\n          type: boolean\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        LineItems:\n          description: See Invoice Line Items\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        Payments:\n          description: See Payments\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n        Reference:\n          description: ACCRECCREDIT only – additional reference number\n          type: string\n        RemainingCredit:\n          description: The remaining credit balance on the Credit Note\n          format: double\n          type: number\n          x-is-money: true\n        SentToContact:\n          description: boolean to indicate if a credit note has been sent to a contact\n            via  the Xero app (currently read only)\n          readOnly: true\n          type: boolean\n        Status:\n          description: See Credit Note Status Codes\n          enum:\n            - DRAFT\n            - SUBMITTED\n            - DELETED\n            - AUTHORISED\n            - PAID\n            - VOIDED\n          type: string\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          type: string\n        SubTotal:\n          description: The subtotal of the credit note excluding taxes\n          format: double\n          type: number\n          x-is-money: true\n        Total:\n          description: The total of the Credit Note(subtotal + total tax)\n          format: double\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: The total tax on the credit note\n          format: double\n          type: number\n          x-is-money: true\n        Type:\n          description: See Credit Note Types\n          enum:\n            - ACCPAYCREDIT\n            - ACCRECCREDIT\n          type: string\n        UpdatedDateUTC:\n          description: UTC timestamp of last update to the credit note\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n        Warnings:\n          description: Displays array of warning messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    CreditNotes:\n      properties:\n        CreditNotes:\n          items:\n            $ref: \"#/components/schemas/CreditNote\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Currencies:\n      properties:\n        Currencies:\n          items:\n            $ref: \"#/components/schemas/Currency\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Currency:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/currencies/\n      properties:\n        Code:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        Description:\n          description: Name of Currency\n          type: string\n      type: object\n    CurrencyCode:\n      description: 3 letter alpha code for the currency – see list of currency codes\n      enum:\n        - AED\n        - AFN\n        - ALL\n        - AMD\n        - ANG\n        - AOA\n        - ARS\n        - AUD\n        - AWG\n        - AZN\n        - BAM\n        - BBD\n        - BDT\n        - BGN\n        - BHD\n        - BIF\n        - BMD\n        - BND\n        - BOB\n        - BRL\n        - BSD\n        - BTN\n        - BWP\n        - BYN\n        - BYR\n        - BZD\n        - CAD\n        - CDF\n        - CHF\n        - CLP\n        - CNY\n        - COP\n        - CRC\n        - CUC\n        - CUP\n        - CVE\n        - CZK\n        - DJF\n        - DKK\n        - DOP\n        - DZD\n        - EGP\n        - ERN\n        - ETB\n        - EUR\n        - FJD\n        - FKP\n        - GBP\n        - GEL\n        - GGP\n        - GHS\n        - GIP\n        - GMD\n        - GNF\n        - GTQ\n        - GYD\n        - HKD\n        - HNL\n        - HRK\n        - HTG\n        - HUF\n        - IDR\n        - ILS\n        - IMP\n        - INR\n        - IQD\n        - IRR\n        - ISK\n        - JEP\n        - JMD\n        - JOD\n        - JPY\n        - KES\n        - KGS\n        - KHR\n        - KMF\n        - KPW\n        - KRW\n        - KWD\n        - KYD\n        - KZT\n        - LAK\n        - LBP\n        - LKR\n        - LRD\n        - LSL\n        - LTL\n        - LYD\n        - MAD\n        - MDL\n        - MGA\n        - MKD\n        - MMK\n        - MNT\n        - MOP\n        - MRU\n        - MUR\n        - MVR\n        - MWK\n        - MXN\n        - MYR\n        - MZN\n        - NAD\n        - NGN\n        - NIO\n        - NOK\n        - NPR\n        - NZD\n        - OMR\n        - PAB\n        - PEN\n        - PGK\n        - PHP\n        - PKR\n        - PLN\n        - PYG\n        - QAR\n        - RON\n        - RSD\n        - RUB\n        - RWF\n        - SAR\n        - SBD\n        - SCR\n        - SDG\n        - SEK\n        - SGD\n        - SHP\n        - SLL\n        - SOS\n        - SPL\n        - SRD\n        - STN\n        - SVC\n        - SYP\n        - SZL\n        - THB\n        - TJS\n        - TMT\n        - TND\n        - TOP\n        - TRY\n        - TTD\n        - TVD\n        - TWD\n        - TZS\n        - UAH\n        - UGX\n        - USD\n        - UYU\n        - UZS\n        - VEF\n        - VND\n        - VUV\n        - WST\n        - XAF\n        - XCD\n        - XDR\n        - XOF\n        - XPF\n        - YER\n        - ZAR\n        - ZMW\n        - ZMK\n        - ZWD\n        - \"\"\n      type: string\n      x-enum-varnames:\n        - AED\n        - AFN\n        - ALL\n        - AMD\n        - ANG\n        - AOA\n        - ARS\n        - AUD\n        - AWG\n        - AZN\n        - BAM\n        - BBD\n        - BDT\n        - BGN\n        - BHD\n        - BIF\n        - BMD\n        - BND\n        - BOB\n        - BRL\n        - BSD\n        - BTN\n        - BWP\n        - BYN\n        - BYR\n        - BZD\n        - CAD\n        - CDF\n        - CHF\n        - CLP\n        - CNY\n        - COP\n        - CRC\n        - CUC\n        - CUP\n        - CVE\n        - CZK\n        - DJF\n        - DKK\n        - DOP\n        - DZD\n        - EGP\n        - ERN\n        - ETB\n        - EUR\n        - FJD\n        - FKP\n        - GBP\n        - GEL\n        - GGP\n        - GHS\n        - GIP\n        - GMD\n        - GNF\n        - GTQ\n        - GYD\n        - HKD\n        - HNL\n        - HRK\n        - HTG\n        - HUF\n        - IDR\n        - ILS\n        - IMP\n        - INR\n        - IQD\n        - IRR\n        - ISK\n        - JEP\n        - JMD\n        - JOD\n        - JPY\n        - KES\n        - KGS\n        - KHR\n        - KMF\n        - KPW\n        - KRW\n        - KWD\n        - KYD\n        - KZT\n        - LAK\n        - LBP\n        - LKR\n        - LRD\n        - LSL\n        - LTL\n        - LYD\n        - MAD\n        - MDL\n        - MGA\n        - MKD\n        - MMK\n        - MNT\n        - MOP\n        - MRU\n        - MUR\n        - MVR\n        - MWK\n        - MXN\n        - MYR\n        - MZN\n        - NAD\n        - NGN\n        - NIO\n        - NOK\n        - NPR\n        - NZD\n        - OMR\n        - PAB\n        - PEN\n        - PGK\n        - PHP\n        - PKR\n        - PLN\n        - PYG\n        - QAR\n        - RON\n        - RSD\n        - RUB\n        - RWF\n        - SAR\n        - SBD\n        - SCR\n        - SDG\n        - SEK\n        - SGD\n        - SHP\n        - SLL\n        - SOS\n        - SPL\n        - SRD\n        - STN\n        - SVC\n        - SYP\n        - SZL\n        - THB\n        - TJS\n        - TMT\n        - TND\n        - TOP\n        - TRY_LIRA\n        - TTD\n        - TVD\n        - TWD\n        - TZS\n        - UAH\n        - UGX\n        - USD\n        - UYU\n        - UZS\n        - VEF\n        - VND\n        - VUV\n        - WST\n        - XAF\n        - XCD\n        - XDR\n        - XOF\n        - XPF\n        - YER\n        - ZAR\n        - ZMW\n        - ZMK\n        - ZWD\n        - EMPTY_CURRENCY\n    Element:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api/http-response-codes\n      properties:\n        BankTransactionID:\n          format: uuid\n          type: string\n        BatchPaymentID:\n          description: Unique ID for batch payment object with validation error\n          format: uuid\n          type: string\n        ContactID:\n          format: uuid\n          type: string\n        CreditNoteID:\n          format: uuid\n          type: string\n        InvoiceID:\n          format: uuid\n          type: string\n        ItemID:\n          format: uuid\n          type: string\n        PurchaseOrderID:\n          format: uuid\n          type: string\n        ValidationErrors:\n          description: Array of Validation Error message\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    Employee:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/employees/\n      properties:\n        EmployeeID:\n          description: The Xero identifier for an employee e.g.\n            297c2dc5-cc47-4afd-8ec8-74990b8761e9\n          format: uuid\n          type: string\n        ExternalLink:\n          $ref: \"#/components/schemas/ExternalLink\"\n        FirstName:\n          description: First name of an employee (max length = 255)\n          maxLength: 255\n          type: string\n        LastName:\n          description: Last name of an employee (max length = 255)\n          maxLength: 255\n          type: string\n        Status:\n          description: Current status of an employee – see contact status types\n          enum:\n            - ACTIVE\n            - ARCHIVED\n            - GDPRREQUEST\n            - DELETED\n          type: string\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          example: ERROR\n          type: string\n        UpdatedDateUTC:\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    Employees:\n      properties:\n        Employees:\n          items:\n            $ref: \"#/components/schemas/Employee\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Error:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api/http-response-codes\n      properties:\n        Elements:\n          description: Array of Elements of validation Errors\n          items:\n            $ref: \"#/components/schemas/Element\"\n          type: array\n        ErrorNumber:\n          description: Exception number\n          type: integer\n        Message:\n          description: Exception message\n          type: string\n        Type:\n          description: Exception type\n          type: string\n      type: object\n    ExpenseClaim:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/expense-claims/\n      properties:\n        AmountDue:\n          description: The amount due to be paid for an expense claim\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        AmountPaid:\n          description: The amount still to pay for an expense claim\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        ExpenseClaimID:\n          description: Xero generated unique identifier for an expense claim\n          format: uuid\n          type: string\n        PaymentDueDate:\n          description: The date when the expense claim is due to be paid YYYY-MM-DD\n          readOnly: true\n          type: string\n          x-is-msdate: true\n        Payments:\n          description: See Payments\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n        ReceiptID:\n          description: The Xero identifier for the Receipt e.g.\n            e59a2c7f-1306-4078-a0f3-73537afcbba9\n          format: uuid\n          type: string\n        Receipts:\n          items:\n            $ref: \"#/components/schemas/Receipt\"\n          type: array\n        ReportingDate:\n          description: The date the expense claim will be reported in Xero YYYY-MM-DD\n          readOnly: true\n          type: string\n          x-is-msdate: true\n        Status:\n          description: Current status of an expense claim – see status types\n          enum:\n            - SUBMITTED\n            - AUTHORISED\n            - PAID\n            - VOIDED\n            - DELETED\n          type: string\n        Total:\n          description: The total of an expense claim being paid\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        UpdatedDateUTC:\n          description: Last modified date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        User:\n          $ref: \"#/components/schemas/User\"\n      type: object\n    ExpenseClaims:\n      properties:\n        ExpenseClaims:\n          items:\n            $ref: \"#/components/schemas/ExpenseClaim\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    ExternalLink:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/organisation/\n      properties:\n        Description:\n          type: string\n        LinkType:\n          description: See External link types\n          enum:\n            - Facebook\n            - GooglePlus\n            - LinkedIn\n            - Twitter\n            - Website\n          type: string\n        Url:\n          description: URL for service e.g. http://twitter.com/xeroapi\n          type: string\n      type: object\n    HistoryRecord:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api/history-and-notes\n      properties:\n        Changes:\n          description: Name of branding theme\n          type: string\n        DateUTC:\n          description: UTC timestamp of creation date of branding theme\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        Details:\n          description: details\n          type: string\n        User:\n          description: has a value of 0\n          type: string\n      type: object\n    HistoryRecords:\n      properties:\n        HistoryRecords:\n          items:\n            $ref: \"#/components/schemas/HistoryRecord\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    ImportSummary:\n      description: A summary of the import from setup endpoint\n      externalDocs:\n        url: https://developer.xero.com/documentation/api-guides/conversions\n      properties:\n        Accounts:\n          $ref: \"#/components/schemas/ImportSummaryAccounts\"\n        Organisation:\n          $ref: \"#/components/schemas/ImportSummaryOrganisation\"\n      type: object\n    ImportSummaryAccounts:\n      description: A summary of the accounts changes\n      properties:\n        Deleted:\n          description: The number of accounts deleted\n          format: integer\n          type: number\n        Errored:\n          description: The number of accounts that had an error\n          format: integer\n          type: number\n        Locked:\n          description: The number of locked accounts\n          format: integer\n          type: number\n        New:\n          description: The number of new accounts created\n          format: integer\n          type: number\n        NewOrUpdated:\n          description: The number of new or updated accounts\n          format: integer\n          type: number\n        Present:\n          type: boolean\n        System:\n          description: The number of system accounts\n          format: integer\n          type: number\n        Total:\n          description: The total number of accounts in the org\n          format: integer\n          type: number\n        Updated:\n          description: The number of accounts updated\n          format: integer\n          type: number\n      type: object\n    ImportSummaryObject:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api-guides/conversions\n      properties:\n        ImportSummary:\n          $ref: \"#/components/schemas/ImportSummary\"\n    ImportSummaryOrganisation:\n      properties:\n        Present:\n          type: boolean\n      type: object\n    Invoice:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/invoices/\n      properties:\n        AmountCredited:\n          description: Sum of all credit notes, over-payments and pre-payments applied to\n            invoice\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        AmountDue:\n          description: Amount remaining to be paid on invoice\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        AmountPaid:\n          description: Sum of payments received for invoice\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Attachments:\n          description: Displays array of attachments from the API\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        BrandingThemeID:\n          description: See BrandingThemes\n          format: uuid\n          type: string\n        CISDeduction:\n          description: CIS deduction for UK contractors\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        CISRate:\n          description: CIS Deduction rate for the organisation\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n        CreditNotes:\n          description: Details of credit notes that have been applied to an invoice\n          items:\n            $ref: \"#/components/schemas/CreditNote\"\n          readOnly: true\n          type: array\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        CurrencyRate:\n          description: The currency rate for a multicurrency invoice. If no rate is\n            specified, the XE.com day rate is used. (max length = [18].[6])\n          format: double\n          type: number\n          x-is-money: true\n        Date:\n          description: Date invoice was issued – YYYY-MM-DD. If the Date element is not\n            specified it will default to the current date based on the timezone\n            setting of the organisation\n          type: string\n          x-is-msdate: true\n        DueDate:\n          description: Date invoice is due – YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        ExpectedPaymentDate:\n          description: Shown on sales invoices (Accounts Receivable) when this has been set\n          type: string\n          x-is-msdate: true\n        FullyPaidOnDate:\n          description: The date the invoice was fully paid. Only returned on fully paid\n            invoices\n          readOnly: true\n          type: string\n          x-is-msdate: true\n        HasAttachments:\n          default: \"false\"\n          description: boolean to indicate if an invoice has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        HasErrors:\n          default: \"false\"\n          description: A boolean to indicate if a invoice has an validation errors\n          example: \"false\"\n          type: boolean\n        InvoiceID:\n          description: Xero generated unique identifier for invoice\n          format: uuid\n          type: string\n        InvoiceNumber:\n          description: ACCREC – Unique alpha numeric code identifying invoice (when\n            missing will auto-generate from your Organisation Invoice Settings)\n            (max length = 255)\n          maxLength: 255\n          type: string\n        IsDiscounted:\n          description: boolean to indicate if an invoice has a discount\n          readOnly: true\n          type: boolean\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        LineItems:\n          description: See LineItems\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        Overpayments:\n          description: See Overpayments\n          items:\n            $ref: \"#/components/schemas/Overpayment\"\n          readOnly: true\n          type: array\n        Payments:\n          description: See Payments\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          readOnly: true\n          type: array\n        PlannedPaymentDate:\n          description: Shown on bills (Accounts Payable) when this has been set\n          type: string\n          x-is-msdate: true\n        Prepayments:\n          description: See Prepayments\n          items:\n            $ref: \"#/components/schemas/Prepayment\"\n          readOnly: true\n          type: array\n        Reference:\n          description: ACCREC only – additional reference number\n          type: string\n        RepeatingInvoiceID:\n          description: Xero generated unique identifier for repeating invoices\n          format: uuid\n          type: string\n        SentToContact:\n          description: Boolean to set whether the invoice in the Xero app should be marked\n            as “sent”. This can be set only on invoices that have been approved\n          type: boolean\n        Status:\n          description: See Invoice Status Codes\n          enum:\n            - DRAFT\n            - SUBMITTED\n            - DELETED\n            - AUTHORISED\n            - PAID\n            - VOIDED\n          type: string\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          type: string\n        SubTotal:\n          description: Total of invoice excluding taxes\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Total:\n          description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax). This\n            will be ignored if it doesn’t equal the sum of the LineAmounts\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        TotalDiscount:\n          description: Total of discounts applied on the invoice line items\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: Total tax on invoice\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Type:\n          description: See Invoice Types\n          enum:\n            - ACCPAY\n            - ACCPAYCREDIT\n            - APOVERPAYMENT\n            - APPREPAYMENT\n            - ACCREC\n            - ACCRECCREDIT\n            - AROVERPAYMENT\n            - ARPREPAYMENT\n          type: string\n        UpdatedDateUTC:\n          description: Last modified date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        Url:\n          description: URL link to a source document – shown as “Go to [appName]” in the\n            Xero app\n          type: string\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n        Warnings:\n          description: Displays array of warning messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    InvoiceReminder:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/invoice-reminders/\n      properties:\n        Enabled:\n          description: setting for on or off\n          type: boolean\n      type: object\n    InvoiceReminders:\n      properties:\n        InvoiceReminders:\n          items:\n            $ref: \"#/components/schemas/InvoiceReminder\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Invoices:\n      properties:\n        Invoices:\n          items:\n            $ref: \"#/components/schemas/Invoice\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Item:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/items/\n      properties:\n        Code:\n          description: User defined item code (max length = 30)\n          maxLength: 30\n          type: string\n        Description:\n          description: The sales description of the item (max length = 4000)\n          maxLength: 4000\n          type: string\n        InventoryAssetAccountCode:\n          description: The inventory asset account for the item. The account must be of\n            type INVENTORY. The  COGSAccountCode in PurchaseDetails is also\n            required to create a tracked item\n          type: string\n        IsPurchased:\n          description: Boolean value, defaults to true. When IsPurchased is true the item\n            is available for purchase transactions in the Xero UI. If\n            IsPurchased is updated to false then PurchaseDescription and\n            PurchaseDetails values will be nulled.\n          type: boolean\n        IsSold:\n          description: Boolean value, defaults to true. When IsSold is true the item will\n            be available on sales transactions in the Xero UI. If IsSold is\n            updated to false then Description and SalesDetails values will be\n            nulled.\n          type: boolean\n        IsTrackedAsInventory:\n          description: True for items that are tracked as inventory. An item will be\n            tracked as inventory if the InventoryAssetAccountCode and\n            COGSAccountCode are set.\n          type: boolean\n        ItemID:\n          description: The Xero identifier for an Item\n          format: uuid\n          type: string\n        Name:\n          description: The name of the item (max length = 50)\n          maxLength: 50\n          type: string\n        PurchaseDescription:\n          description: The purchase description of the item (max length = 4000)\n          maxLength: 4000\n          type: string\n        PurchaseDetails:\n          $ref: \"#/components/schemas/Purchase\"\n        QuantityOnHand:\n          description: The quantity of the item on hand\n          format: double\n          type: number\n          x-is-money: true\n        SalesDetails:\n          $ref: \"#/components/schemas/Purchase\"\n        StatusAttributeString:\n          description: Status of object\n          type: string\n        TotalCostPool:\n          description: The value of the item on hand. Calculated using average cost\n            accounting.\n          format: double\n          type: number\n          x-is-money: true\n        UpdatedDateUTC:\n          description: Last modified date in UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      required:\n        - Code\n      type: object\n    Items:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Item\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Journal:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/journals/\n      properties:\n        CreatedDateUTC:\n          description: Created date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        JournalDate:\n          description: Date the journal was posted\n          type: string\n          x-is-msdate: true\n        JournalID:\n          description: Xero identifier\n          format: uuid\n          type: string\n        JournalLines:\n          description: See JournalLines\n          items:\n            $ref: \"#/components/schemas/JournalLine\"\n          type: array\n        JournalNumber:\n          description: Xero generated journal number\n          type: integer\n        Reference:\n          description: reference field for additional indetifying information\n          type: string\n        SourceID:\n          description: The identifier for the source transaction (e.g. InvoiceID)\n          format: uuid\n          type: string\n        SourceType:\n          description: The journal source type. The type of transaction that created the\n            journal\n          enum:\n            - ACCREC\n            - ACCPAY\n            - ACCRECCREDIT\n            - ACCPAYCREDIT\n            - ACCRECPAYMENT\n            - ACCPAYPAYMENT\n            - ARCREDITPAYMENT\n            - APCREDITPAYMENT\n            - CASHREC\n            - CASHPAID\n            - TRANSFER\n            - ARPREPAYMENT\n            - APPREPAYMENT\n            - AROVERPAYMENT\n            - APOVERPAYMENT\n            - EXPCLAIM\n            - EXPPAYMENT\n            - MANJOURNAL\n            - PAYSLIP\n            - WAGEPAYABLE\n            - INTEGRATEDPAYROLLPE\n            - INTEGRATEDPAYROLLPT\n            - EXTERNALSPENDMONEY\n            - INTEGRATEDPAYROLLPTPAYMENT\n            - INTEGRATEDPAYROLLCN\n          type: string\n      type: object\n    JournalLine:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api/journals#JournalLines\n      properties:\n        AccountCode:\n          description: See Accounts\n          example: 90\n          type: string\n        AccountID:\n          description: See Accounts\n          example: ceef66a5-a545-413b-9312-78a53caadbc4\n          format: uuid\n          type: string\n        AccountName:\n          description: See AccountCodes\n          example: Checking Account\n          type: string\n        AccountType:\n          $ref: \"#/components/schemas/AccountType\"\n          type: string\n        Description:\n          description: The description from the source transaction line item. Only\n            returned if populated.\n          example: My business checking account\n          type: string\n        GrossAmount:\n          description: Gross amount of journal line (NetAmount + TaxAmount).\n          example: 4130.98\n          format: double\n          type: number\n          x-is-money: true\n        JournalLineID:\n          description: Xero identifier for Journal\n          example: 7be9db36-3598-4755-ba5c-c2dbc8c4a7a2\n          format: uuid\n          type: string\n        NetAmount:\n          description: Net amount of journal line. This will be a positive value for a\n            debit and negative for a credit\n          example: 4130.98\n          format: double\n          type: number\n          x-is-money: true\n        TaxAmount:\n          description: Total tax on a journal line\n          example: 0\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        TaxName:\n          description: see TaxRates\n          example: Tax Exempt\n          type: string\n        TaxType:\n          description: The tax type from TaxRates\n          type: string\n        TrackingCategories:\n          description: Optional Tracking Category – see Tracking. Any JournalLine can have\n            a maximum of 2 \u003cTrackingCategory\u003e elements.\n          items:\n            $ref: \"#/components/schemas/TrackingCategory\"\n          type: array\n      type: object\n    Journals:\n      properties:\n        Journals:\n          items:\n            $ref: \"#/components/schemas/Journal\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    LineAmountTypes:\n      description: Line amounts are exclusive of tax by default if you don’t specify\n        this element. See Line Amount Types\n      enum:\n        - Exclusive\n        - Inclusive\n        - NoTax\n      type: string\n    LineItem:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api/invoices#post\n      properties:\n        AccountCode:\n          description: See Accounts\n          type: string\n        Description:\n          description: Description needs to be at least 1 char long. A line item with just\n            a description (i.e no unit amount or quantity) can be created by\n            specifying just a \u003cDescription\u003e element that contains at least 1\n            character\n          type: string\n        DiscountAmount:\n          description: Discount amount being applied to a line item. Only supported on\n            ACCREC invoices - ACCPAY invoices and credit notes in Xero do not\n            support discounts.\n          format: double\n          type: number\n          x-is-money: true\n        DiscountRate:\n          description: Percentage discount being applied to a line item (only supported\n            on  ACCREC invoices – ACC PAY invoices and credit notes in Xero do\n            not support discounts\n          format: double\n          type: number\n          x-is-money: true\n        ItemCode:\n          description: See Items\n          type: string\n        LineAmount:\n          description: If you wish to omit either of the \u003cQuantity\u003e or \u003cUnitAmount\u003e you\n            can provide a LineAmount and Xero will calculate the missing amount\n            for you. The line amount reflects the discounted price if a\n            DiscountRate has been used . i.e LineAmount = Quantity * Unit Amount\n            * ((100 – DiscountRate)/100)\n          format: double\n          type: number\n          x-is-money: true\n        LineItemID:\n          description: LineItem unique ID\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n        Quantity:\n          description: LineItem Quantity\n          format: double\n          type: number\n          x-is-money: true\n        RepeatingInvoiceID:\n          description: The Xero identifier for a Repeating Invoice\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n        TaxAmount:\n          description: The tax amount is auto calculated as a percentage of the line\n            amount (see below) based on the tax rate. This value can be\n            overriden if the calculated \u003cTaxAmount\u003e is not correct.\n          format: double\n          type: number\n          x-is-money: true\n        TaxType:\n          description: The tax type from TaxRates\n          type: string\n        Tracking:\n          description: Optional Tracking Category – see Tracking.  Any LineItem can have\n            a  maximum of 2 \u003cTrackingCategory\u003e elements.\n          items:\n            $ref: \"#/components/schemas/LineItemTracking\"\n          type: array\n        UnitAmount:\n          description: LineItem Unit Amount\n          format: double\n          type: number\n          x-is-money: true\n      type: object\n    LineItemTracking:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api/invoices#post\n      properties:\n        Name:\n          description: The name of the tracking category\n          example: Region\n          maxLength: 100\n          type: string\n        Option:\n          description: See Tracking Options\n          example: North\n          type: string\n        TrackingCategoryID:\n          description: The Xero identifier for a tracking category\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n        TrackingOptionID:\n          description: The Xero identifier for a tracking category option\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n      type: object\n    LinkedTransaction:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/linked-transactions/\n      properties:\n        ContactID:\n          description: Filter by the combination of ContactID and Status. Get all the\n            linked transactions that have been assigned to a particular customer\n            and have a particular status e.g. GET\n            /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e\u0026Status=APPROVED.\n          format: uuid\n          type: string\n        LinkedTransactionID:\n          description: The Xero identifier for an Linked Transaction\n            e.g./LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9\n          format: uuid\n          type: string\n        SourceLineItemID:\n          description: The line item identifier from the source transaction.\n          format: uuid\n          type: string\n        SourceTransactionID:\n          description: Filter by the SourceTransactionID. Get all the linked transactions\n            created from a particular ACCPAY invoice\n          format: uuid\n          type: string\n        SourceTransactionTypeCode:\n          description: The Type of the source tranasction. This will be ACCPAY if the\n            linked transaction was created from an invoice and SPEND if it was\n            created from a bank transaction.\n          enum:\n            - ACCPAY\n            - SPEND\n          type: string\n        Status:\n          description: Filter by the combination of ContactID and Status. Get all the\n            linked transactions that have been assigned to a particular customer\n            and have a particular status e.g. GET\n            /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e\u0026Status=APPROVED.\n          enum:\n            - APPROVED\n            - DRAFT\n            - ONDRAFT\n            - BILLED\n            - VOIDED\n          type: string\n        TargetLineItemID:\n          description: The line item identifier from the target transaction. It is\n            possible  to link multiple billable expenses to the same\n            TargetLineItemID.\n          format: uuid\n          type: string\n        TargetTransactionID:\n          description: Filter by the TargetTransactionID. Get all the linked\n            transactions  allocated to a particular ACCREC invoice\n          format: uuid\n          type: string\n        Type:\n          description: This will always be BILLABLEEXPENSE. More types may be added in\n            future.\n          enum:\n            - BILLABLEEXPENSE\n          type: string\n        UpdatedDateUTC:\n          description: The last modified date in UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    LinkedTransactions:\n      properties:\n        LinkedTransactions:\n          items:\n            $ref: \"#/components/schemas/LinkedTransaction\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    ManualJournal:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/manual-journals/\n      properties:\n        Attachments:\n          description: Displays array of attachments from the API\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        Date:\n          description: Date journal was posted – YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        HasAttachments:\n          default: \"false\"\n          description: Boolean to indicate if a manual journal has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        JournalLines:\n          description: See JournalLines\n          items:\n            $ref: \"#/components/schemas/ManualJournalLine\"\n          type: array\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        ManualJournalID:\n          description: The Xero identifier for a Manual Journal\n          format: uuid\n          type: string\n        Narration:\n          description: Description of journal being posted\n          type: string\n        ShowOnCashBasisReports:\n          description: Boolean – default is true if not specified\n          type: boolean\n        Status:\n          description: See Manual Journal Status Codes\n          enum:\n            - DRAFT\n            - POSTED\n            - DELETED\n            - VOIDED\n            - ARCHIVED\n          type: string\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          example: ERROR\n          type: string\n        UpdatedDateUTC:\n          description: Last modified date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        Url:\n          description: Url link to a source document – shown as “Go to [appName]” in the\n            Xero app\n          type: string\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n        Warnings:\n          description: Displays array of warning messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      required:\n        - Narration\n      type: object\n    ManualJournalLine:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/manual-journals/\n      properties:\n        AccountCode:\n          description: See Accounts\n          example: 720\n          type: string\n        AccountID:\n          description: See Accounts\n          format: uuid\n          type: string\n        Description:\n          description: Description for journal line\n          example: Coded incorrectly Office Equipment should be Computer Equipment\n          type: string\n        IsBlank:\n          description: is the line blank\n          example: false\n          type: boolean\n        LineAmount:\n          description: total for line. Debits are positive, credits are negative value\n          example: -2569\n          format: double\n          type: number\n          x-is-money: true\n        TaxAmount:\n          description: The calculated tax amount based on the TaxType and LineAmount\n          example: 0\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        TaxType:\n          description: The tax type from TaxRates\n          type: string\n        Tracking:\n          description: Optional Tracking Category – see Tracking. Any JournalLine can have\n            a maximum of 2 \u003cTrackingCategory\u003e elements.\n          items:\n            $ref: \"#/components/schemas/TrackingCategory\"\n          type: array\n      type: object\n    ManualJournals:\n      properties:\n        ManualJournals:\n          items:\n            $ref: \"#/components/schemas/ManualJournal\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    OnlineInvoice:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/invoices/\n      properties:\n        OnlineInvoiceUrl:\n          description: the URL to an online invoice\n          type: string\n      type: object\n    OnlineInvoices:\n      properties:\n        OnlineInvoices:\n          items:\n            $ref: \"#/components/schemas/OnlineInvoice\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Organisation:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/organisation/\n      properties:\n        APIKey:\n          description: Display a unique key used for Xero-to-Xero transactions\n          type: string\n        Addresses:\n          description: Address details for organisation – see Addresses\n          items:\n            $ref: \"#/components/schemas/AddressForOrganisation\"\n          type: array\n        BaseCurrency:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        Class:\n          description: Organisation Classes describe which plan the Xero organisation is\n            on (e.g. DEMO, TRIAL, PREMIUM)\n          enum:\n            - DEMO\n            - TRIAL\n            - STARTER\n            - STANDARD\n            - PREMIUM\n            - PREMIUM_20\n            - PREMIUM_50\n            - PREMIUM_100\n            - LEDGER\n            - GST_CASHBOOK\n            - NON_GST_CASHBOOK\n          type: string\n        CountryCode:\n          $ref: \"#/components/schemas/CountryCode\"\n          type: string\n        CreatedDateUTC:\n          description: Timestamp when the organisation was created in Xero\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        DefaultPurchasesTax:\n          description: The default for LineAmountTypes on purchase transactions\n          type: string\n        DefaultSalesTax:\n          description: The default for LineAmountTypes on sales transactions\n          type: string\n        Edition:\n          description: BUSINESS or PARTNER. Partner edition organisations are sold\n            exclusively through accounting partners and have restricted\n            functionality (e.g. no access to invoicing)\n          enum:\n            - BUSINESS\n            - PARTNER\n          type: string\n        EmployerIdentificationNumber:\n          description: Shown if set. US Only.\n          type: string\n        EndOfYearLockDate:\n          description: Shown if set. See lock dates\n          type: string\n          x-is-msdate: true\n        ExternalLinks:\n          description: Organisation profile links for popular services such as\n            Facebook,Twitter, GooglePlus and LinkedIn. You can also add link to\n            your website here. Shown if Organisation settings  is updated in\n            Xero. See ExternalLinks below\n          items:\n            $ref: \"#/components/schemas/ExternalLink\"\n          type: array\n        FinancialYearEndDay:\n          description: Calendar day e.g. 0-31\n          type: integer\n        FinancialYearEndMonth:\n          description: Calendar Month e.g. 1-12\n          type: integer\n        IsDemoCompany:\n          description: Boolean to describe if organisation is a demo company.\n          type: boolean\n        LegalName:\n          description: Organisation name shown on Reports\n          type: string\n        LineOfBusiness:\n          description: Description of business type as defined in Organisation settings\n          type: string\n        Name:\n          description: Display name of organisation shown in Xero\n          type: string\n        OrganisationEntityType:\n          description: Organisation Entity Type\n          enum:\n            - ACCOUNTING_PRACTICE\n            - COMPANY\n            - CHARITY\n            - CLUB_OR_SOCIETY\n            - LOOK_THROUGH_COMPANY\n            - NOT_FOR_PROFIT\n            - PARTNERSHIP\n            - S_CORPORATION\n            - SELF_MANAGED_SUPERANNUATION_FUND\n            - SOLE_TRADER\n            - SUPERANNUATION_FUND\n            - TRUST\n          type: string\n        OrganisationID:\n          description: Unique Xero identifier\n          example: 8be9db36-3598-4755-ba5c-c2dbc8c4a7a2\n          format: uuid\n          type: string\n        OrganisationStatus:\n          description: Will be set to ACTIVE if you can connect to organisation via the\n            Xero API\n          type: string\n        OrganisationType:\n          description: Organisation Type\n          enum:\n            - ACCOUNTING_PRACTICE\n            - COMPANY\n            - CHARITY\n            - CLUB_OR_SOCIETY\n            - LOOK_THROUGH_COMPANY\n            - NOT_FOR_PROFIT\n            - PARTNERSHIP\n            - S_CORPORATION\n            - SELF_MANAGED_SUPERANNUATION_FUND\n            - SOLE_TRADER\n            - SUPERANNUATION_FUND\n            - TRUST\n          type: string\n        PaymentTerms:\n          $ref: \"#/components/schemas/PaymentTerm\"\n        PaysTax:\n          description: Boolean to describe if organisation is registered with a local tax\n            authority i.e. true, false\n          type: boolean\n        PeriodLockDate:\n          description: Shown if set. See lock dates\n          type: string\n          x-is-msdate: true\n        Phones:\n          description: Phones details for organisation – see Phones\n          items:\n            $ref: \"#/components/schemas/Phone\"\n          type: array\n        RegistrationNumber:\n          description: Shows for New Zealand, Australian and UK organisations\n          type: string\n        SalesTaxBasis:\n          description: The accounting basis used for tax returns. See Sales Tax Basis\n          enum:\n            - PAYMENTS\n            - INVOICE\n            - NONE\n            - CASH\n            - ACCRUAL\n            - FLATRATECASH\n            - FLATRATEACCRUAL\n            - ACCRUALS\n          type: string\n        SalesTaxPeriod:\n          description: The frequency with which tax returns are processed. See Sales Tax\n            Period\n          enum:\n            - MONTHLY\n            - QUARTERLY1\n            - QUARTERLY2\n            - QUARTERLY3\n            - ANNUALLY\n            - ONEMONTHS\n            - TWOMONTHS\n            - SIXMONTHS\n            - 1MONTHLY\n            - 2MONTHLY\n            - 3MONTHLY\n            - 6MONTHLY\n            - QUARTERLY\n            - YEARLY\n            - NONE\n          type: string\n        ShortCode:\n          description: A unique identifier for the organisation. Potential uses.\n          type: string\n        TaxNumber:\n          description: Shown if set. Displays in the Xero UI as Tax File Number (AU), GST\n            Number (NZ), VAT Number (UK) and Tax ID Number (US \u0026 Global).\n          type: string\n        Timezone:\n          $ref: \"#/components/schemas/TimeZone\"\n          type: string\n        Version:\n          description: See Version Types\n          enum:\n            - AU\n            - NZ\n            - GLOBAL\n            - UK\n            - US\n            - AUONRAMP\n            - NZONRAMP\n            - GLOBALONRAMP\n            - UKONRAMP\n            - USONRAMP\n          type: string\n      type: object\n    Organisations:\n      properties:\n        Organisations:\n          items:\n            $ref: \"#/components/schemas/Organisation\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Overpayment:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/overpayments/\n      properties:\n        Allocations:\n          description: See Allocations\n          items:\n            $ref: \"#/components/schemas/Allocation\"\n          type: array\n        AppliedAmount:\n          description: The amount of applied to an invoice\n          example: 2\n          format: double\n          type: number\n        Attachments:\n          description: See Attachments\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        CurrencyRate:\n          description: The currency rate for a multicurrency overpayment. If no rate is\n            specified, the XE.com day rate is used\n          format: double\n          type: number\n          x-is-money: true\n        Date:\n          description: The date the overpayment is created YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        HasAttachments:\n          default: \"false\"\n          description: boolean to indicate if a overpayment has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        LineItems:\n          description: See Overpayment Line Items\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        OverpaymentID:\n          description: Xero generated unique identifier\n          format: uuid\n          type: string\n        Payments:\n          description: See Payments\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n        RemainingCredit:\n          description: The remaining credit balance on the overpayment\n          format: double\n          type: number\n          x-is-money: true\n        Status:\n          description: See Overpayment Status Codes\n          enum:\n            - AUTHORISED\n            - PAID\n            - VOIDED\n          type: string\n        SubTotal:\n          description: The subtotal of the overpayment excluding taxes\n          format: double\n          type: number\n          x-is-money: true\n        Total:\n          description: The total of the overpayment (subtotal + total tax)\n          format: double\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: The total tax on the overpayment\n          format: double\n          type: number\n          x-is-money: true\n        Type:\n          description: See Overpayment Types\n          enum:\n            - RECEIVE-OVERPAYMENT\n            - SPEND-OVERPAYMENT\n            - AROVERPAYMENT\n          type: string\n        UpdatedDateUTC:\n          description: UTC timestamp of last update to the overpayment\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n      type: object\n    Overpayments:\n      properties:\n        Overpayments:\n          items:\n            $ref: \"#/components/schemas/Overpayment\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Payment:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/payments/\n      properties:\n        Account:\n          $ref: \"#/components/schemas/Account\"\n        Amount:\n          description: The amount of the payment. Must be less than or equal to the\n            outstanding amount owing on the invoice e.g. 200.00\n          format: double\n          type: number\n          x-is-money: true\n        BankAccountNumber:\n          description: The suppliers bank account number the payment is being made to\n          type: string\n        BatchPaymentID:\n          description: Present if the payment was created as part of a batch.\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n        Code:\n          description: Code of account you are using to make the payment e.g. 001 (note-\n            not all accounts have a code value)\n          type: string\n        CreditNote:\n          $ref: \"#/components/schemas/CreditNote\"\n        CreditNoteNumber:\n          description: Number of invoice or credit note you are applying payment to e.g.\n            INV-4003\n          type: string\n        CurrencyRate:\n          description: Exchange rate when payment is received. Only used for non base\n            currency invoices and credit notes e.g. 0.7500\n          format: double\n          type: number\n          x-is-money: true\n        Date:\n          description: Date the payment is being made (YYYY-MM-DD) e.g. 2009-09-06\n          type: string\n          x-is-msdate: true\n        Details:\n          description: The information to appear on the supplier's bank account\n          type: string\n        HasAccount:\n          default: \"false\"\n          description: A boolean to indicate if a contact has an validation errors\n          example: \"false\"\n          type: boolean\n        HasValidationErrors:\n          default: \"false\"\n          description: A boolean to indicate if a contact has an validation errors\n          example: \"false\"\n          type: boolean\n        Invoice:\n          $ref: \"#/components/schemas/Invoice\"\n        InvoiceNumber:\n          description: Number of invoice or credit note you are applying payment to\n            e.g.INV-4003\n          type: string\n        IsReconciled:\n          description: An optional parameter for the payment. A boolean indicating whether\n            you would like the payment to be created as reconciled when using\n            PUT, or whether a payment has been reconciled when using GET\n          type: boolean\n        Overpayment:\n          $ref: \"#/components/schemas/Overpayment\"\n        Particulars:\n          description: The suppliers bank account number the payment is being made to\n          type: string\n        PaymentID:\n          description: The Xero identifier for an Payment e.g.\n            297c2dc5-cc47-4afd-8ec8-74990b8761e9\n          example: 00000000-0000-0000-0000-000000000000\n          format: uuid\n          type: string\n        PaymentType:\n          description: See Payment Types.\n          enum:\n            - ACCRECPAYMENT\n            - ACCPAYPAYMENT\n            - ARCREDITPAYMENT\n            - APCREDITPAYMENT\n            - AROVERPAYMENTPAYMENT\n            - ARPREPAYMENTPAYMENT\n            - APPREPAYMENTPAYMENT\n            - APOVERPAYMENTPAYMENT\n          readOnly: true\n          type: string\n        Prepayment:\n          $ref: \"#/components/schemas/Prepayment\"\n        Reference:\n          description: An optional description for the payment e.g. Direct Debit\n          type: string\n        Status:\n          description: The status of the payment.\n          enum:\n            - AUTHORISED\n            - DELETED\n          type: string\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          type: string\n        UpdatedDateUTC:\n          description: UTC timestamp of last update to the payment\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    PaymentDelete:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/payments/\n      properties:\n        Status:\n          default: DELETED\n          description: The status of the payment.\n          type: string\n      required:\n        - Status\n      type: object\n    PaymentService:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/branding-themes/\n      properties:\n        PayNowText:\n          description: The text displayed on the Pay Now button in Xero Online Invoicing.\n            If this is not set it will default to Pay by credit card\n          type: string\n        PaymentServiceID:\n          description: Xero identifier\n          format: uuid\n          type: string\n        PaymentServiceName:\n          description: Name of payment service\n          type: string\n        PaymentServiceType:\n          description: This will always be CUSTOM for payment services created via the API.\n          type: string\n        PaymentServiceUrl:\n          description: The custom payment URL\n          type: string\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n    PaymentServices:\n      properties:\n        PaymentServices:\n          items:\n            $ref: \"#/components/schemas/PaymentService\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    PaymentTerm:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/organisation/\n      properties:\n        Bills:\n          $ref: \"#/components/schemas/Bill\"\n        Sales:\n          $ref: \"#/components/schemas/Bill\"\n      type: object\n    PaymentTermType:\n      enum:\n        - DAYSAFTERBILLDATE\n        - DAYSAFTERBILLMONTH\n        - OFCURRENTMONTH\n        - OFFOLLOWINGMONTH\n      type: string\n    Payments:\n      properties:\n        Payments:\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Phone:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/types\n      properties:\n        PhoneAreaCode:\n          description: max length = 10\n          maxLength: 10\n          type: string\n        PhoneCountryCode:\n          description: max length = 20\n          maxLength: 20\n          type: string\n        PhoneNumber:\n          description: max length = 50\n          maxLength: 50\n          type: string\n        PhoneType:\n          enum:\n            - DEFAULT\n            - DDI\n            - MOBILE\n            - FAX\n            - OFFICE\n          type: string\n      type: object\n    Prepayment:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/prepayments/\n      properties:\n        Allocations:\n          description: See Allocations\n          items:\n            $ref: \"#/components/schemas/Allocation\"\n          type: array\n        AppliedAmount:\n          description: The amount of applied to an invoice\n          example: 2\n          format: double\n          type: number\n        Attachments:\n          description: See Attachments\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        CurrencyRate:\n          description: The currency rate for a multicurrency prepayment. If no rate is\n            specified, the XE.com day rate is used\n          format: double\n          type: number\n          x-is-money: true\n        Date:\n          description: The date the prepayment is created YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        HasAttachments:\n          default: \"false\"\n          description: boolean to indicate if a prepayment has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        LineItems:\n          description: See Prepayment Line Items\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        PrepaymentID:\n          description: Xero generated unique identifier\n          format: uuid\n          type: string\n        Reference:\n          description: Returns Invoice number field. Reference field isn't available.\n          readOnly: true\n          type: string\n        RemainingCredit:\n          description: The remaining credit balance on the prepayment\n          format: double\n          type: number\n          x-is-money: true\n        Status:\n          description: See Prepayment Status Codes\n          enum:\n            - AUTHORISED\n            - PAID\n            - VOIDED\n          type: string\n        SubTotal:\n          description: The subtotal of the prepayment excluding taxes\n          format: double\n          type: number\n          x-is-money: true\n        Total:\n          description: The total of the prepayment(subtotal + total tax)\n          format: double\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: The total tax on the prepayment\n          format: double\n          type: number\n          x-is-money: true\n        Type:\n          description: See Prepayment Types\n          enum:\n            - RECEIVE-PREPAYMENT\n            - SPEND-PREPAYMENT\n            - ARPREPAYMENT\n            - APPREPAYMENT\n          type: string\n        UpdatedDateUTC:\n          description: UTC timestamp of last update to the prepayment\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n      type: object\n    Prepayments:\n      properties:\n        Prepayments:\n          items:\n            $ref: \"#/components/schemas/Prepayment\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Purchase:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/items/\n      properties:\n        AccountCode:\n          description: Default account code to be used for purchased/sale. Not applicable\n            to the purchase details of tracked items\n          type: string\n        COGSAccountCode:\n          description: Cost of goods sold account. Only applicable to the purchase details\n            of tracked items.\n          type: string\n        TaxType:\n          description: The tax type from TaxRates\n          type: string\n        UnitPrice:\n          description: Unit Price of the item. By default UnitPrice is rounded to two\n            decimal places. You can use 4 decimal places by adding the unitdp=4\n            querystring parameter to your request.\n          format: double\n          type: number\n          x-is-money: true\n      type: object\n    PurchaseOrder:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/purchase-orders/\n      properties:\n        Attachments:\n          description: Displays array of attachments from the API\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        AttentionTo:\n          description: The person that the delivery is going to\n          type: string\n        BrandingThemeID:\n          description: See BrandingThemes\n          format: uuid\n          type: string\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        CurrencyRate:\n          description: The currency rate for a multicurrency purchase order. If no rate is\n            specified, the XE.com day rate is used.\n          format: double\n          type: number\n          x-is-money: true\n        Date:\n          description: Date purchase order was issued – YYYY-MM-DD. If the Date element is\n            not specified then it will default to the current date based on the\n            timezone setting of the organisation\n          type: string\n          x-is-msdate: true\n        DeliveryAddress:\n          description: The address the goods are to be delivered to\n          type: string\n        DeliveryDate:\n          description: Date the goods are to be delivered – YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        DeliveryInstructions:\n          description: A free text feild for instructions (500 characters max)\n          type: string\n        ExpectedArrivalDate:\n          description: The date the goods are expected to arrive.\n          type: string\n          x-is-msdate: true\n        HasAttachments:\n          default: \"false\"\n          description: boolean to indicate if a purchase order has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        LineItems:\n          description: See LineItems\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        PurchaseOrderID:\n          description: Xero generated unique identifier for purchase order\n          format: uuid\n          type: string\n        PurchaseOrderNumber:\n          description: Unique alpha numeric code identifying purchase order (when missing\n            will auto-generate from your Organisation Invoice Settings)\n          type: string\n        Reference:\n          description: Additional reference number\n          type: string\n        SentToContact:\n          description: Boolean to set whether the purchase order should be marked as\n            “sent”. This can be set only on purchase orders that have been\n            approved or billed\n          type: boolean\n        Status:\n          description: See Purchase Order Status Codes\n          enum:\n            - DRAFT\n            - SUBMITTED\n            - AUTHORISED\n            - BILLED\n            - DELETED\n          type: string\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          type: string\n        SubTotal:\n          description: Total of purchase order excluding taxes\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Telephone:\n          description: The phone number for the person accepting the delivery\n          type: string\n        Total:\n          description: Total of Purchase Order tax inclusive (i.e. SubTotal + TotalTax)\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        TotalDiscount:\n          description: Total of discounts applied on the purchase order line items\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: Total tax on purchase order\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        UpdatedDateUTC:\n          description: Last modified date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n        Warnings:\n          description: Displays array of warning messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    PurchaseOrders:\n      properties:\n        PurchaseOrders:\n          items:\n            $ref: \"#/components/schemas/PurchaseOrder\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Quote:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/Quotes/\n      properties:\n        BrandingThemeID:\n          description: See BrandingThemes\n          format: uuid\n          type: string\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n          type: string\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        CurrencyRate:\n          description: The currency rate for a multicurrency quote\n          format: double\n          type: number\n        Date:\n          description: Date quote was issued – YYYY-MM-DD. If the Date element is not\n            specified it will default to the current date based on the timezone\n            setting of the organisation\n          type: string\n          x-is-msdate: true\n        DateString:\n          description: Date the quote was issued (YYYY-MM-DD)\n          type: string\n        ExpiryDate:\n          description: Date the quote expires – YYYY-MM-DD.\n          type: string\n          x-is-msdate: true\n        ExpiryDateString:\n          description: Date the quote expires – YYYY-MM-DD.\n          type: string\n        LineAmountTypes:\n          $ref: \"#/components/schemas/QuoteLineAmountTypes\"\n          description: See Quote Line Amount Types\n          type: string\n        LineItems:\n          description: See LineItems\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        QuoteID:\n          description: QuoteID GUID is automatically generated and is returned after\n            create or GET.\n          format: uuid\n          type: string\n        QuoteNumber:\n          description: Unique alpha numeric code identifying a quote (Max Length = 255)\n          maxLength: 255\n          type: string\n        Reference:\n          description: Additional reference number\n          maxLength: 4000\n          type: string\n        Status:\n          $ref: \"#/components/schemas/QuoteStatusCodes\"\n          type: string\n        StatusAttributeString:\n          description: A string to indicate if a invoice status\n          type: string\n        SubTotal:\n          description: Total of quote excluding taxes.\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Summary:\n          description: Summary text for the quote\n          maxLength: 3000\n          type: string\n        Terms:\n          description: Terms of the quote\n          maxLength: 4000\n          type: string\n        Title:\n          description: Title text for the quote\n          maxLength: 100\n          type: string\n        Total:\n          description: Total of Quote tax inclusive (i.e. SubTotal + TotalTax). This will\n            be ignored if it doesn’t equal the sum of the LineAmounts\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        TotalDiscount:\n          description: Total of discounts applied on the quote line items\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: Total tax on quote\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        UpdatedDateUTC:\n          description: Last modified date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    QuoteLineAmountTypes:\n      description: Line amounts are exclusive of tax by default if you don’t specify\n        this element. See Line Amount Types\n      enum:\n        - EXCLUSIVE\n        - INCLUSIVE\n        - NOTAX\n      type: string\n    QuoteStatusCodes:\n      description: The status of the quote.\n      enum:\n        - DRAFT\n        - SENT\n        - DECLINED\n        - ACCEPTED\n        - INVOICED\n        - DELETED\n      type: string\n    Quotes:\n      properties:\n        Quotes:\n          items:\n            $ref: \"#/components/schemas/Quote\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Receipt:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/receipts/\n      properties:\n        Attachments:\n          description: Displays array of attachments from the API\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n        Date:\n          description: Date of receipt – YYYY-MM-DD\n          type: string\n          x-is-msdate: true\n        HasAttachments:\n          default: \"false\"\n          description: boolean to indicate if a receipt has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        LineItems:\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        ReceiptID:\n          description: Xero generated unique identifier for receipt\n          format: uuid\n          type: string\n        ReceiptNumber:\n          description: Xero generated sequence number for receipt in current claim for a\n            given user\n          readOnly: true\n          type: string\n        Reference:\n          description: Additional reference number\n          type: string\n        Status:\n          description: Current status of receipt – see status types\n          enum:\n            - DRAFT\n            - SUBMITTED\n            - AUTHORISED\n            - DECLINED\n            - VOIDED\n          type: string\n        SubTotal:\n          description: Total of receipt excluding taxes\n          format: double\n          type: number\n          x-is-money: true\n        Total:\n          description: Total of receipt tax inclusive (i.e. SubTotal + TotalTax)\n          format: double\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: Total tax on receipt\n          format: double\n          type: number\n          x-is-money: true\n        UpdatedDateUTC:\n          description: Last modified date UTC format\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        Url:\n          description: URL link to a source document – shown as “Go to [appName]” in the\n            Xero app\n          readOnly: true\n          type: string\n        User:\n          $ref: \"#/components/schemas/User\"\n        ValidationErrors:\n          description: Displays array of validation error messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n        Warnings:\n          description: Displays array of warning messages from the API\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n      type: object\n    Receipts:\n      properties:\n        Receipts:\n          items:\n            $ref: \"#/components/schemas/Receipt\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    RepeatingInvoice:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/repeating-invoices/\n      properties:\n        Attachments:\n          description: Displays array of attachments from the API\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        BrandingThemeID:\n          description: See BrandingThemes\n          format: uuid\n          type: string\n        Contact:\n          $ref: \"#/components/schemas/Contact\"\n        CurrencyCode:\n          $ref: \"#/components/schemas/CurrencyCode\"\n          type: string\n        HasAttachments:\n          default: \"false\"\n          description: boolean to indicate if an invoice has an attachment\n          example: \"false\"\n          readOnly: true\n          type: boolean\n        ID:\n          description: Xero generated unique identifier for repeating invoice template\n          format: uuid\n          type: string\n        LineAmountTypes:\n          $ref: \"#/components/schemas/LineAmountTypes\"\n          type: string\n        LineItems:\n          description: See LineItems\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n          type: array\n        Reference:\n          description: ACCREC only – additional reference number\n          type: string\n        RepeatingInvoiceID:\n          description: Xero generated unique identifier for repeating invoice template\n          format: uuid\n          type: string\n        Schedule:\n          $ref: \"#/components/schemas/Schedule\"\n        Status:\n          description: One of the following - DRAFT or AUTHORISED – See Invoice Status Codes\n          enum:\n            - DRAFT\n            - AUTHORISED\n            - DELETED\n          type: string\n        SubTotal:\n          description: Total of invoice excluding taxes\n          format: double\n          type: number\n          x-is-money: true\n        Total:\n          description: Total of Invoice tax inclusive (i.e. SubTotal + TotalTax)\n          format: double\n          type: number\n          x-is-money: true\n        TotalTax:\n          description: Total tax on invoice\n          format: double\n          type: number\n          x-is-money: true\n        Type:\n          description: See Invoice Types\n          enum:\n            - ACCPAY\n            - ACCREC\n          type: string\n      type: object\n    RepeatingInvoices:\n      properties:\n        RepeatingInvoices:\n          items:\n            $ref: \"#/components/schemas/RepeatingInvoice\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    Report:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/reports/\n      properties:\n        Contacts:\n          items:\n            $ref: \"#/components/schemas/TenNinetyNineContact\"\n          type: array\n        ReportDate:\n          description: Date of report\n          type: string\n        ReportID:\n          description: See Prepayment Types\n          type: string\n        ReportName:\n          description: See Prepayment Types\n          type: string\n        ReportTitle:\n          description: See Prepayment Types\n          type: string\n        ReportType:\n          description: See Prepayment Types\n          enum:\n            - AgedPayablesByContact\n          type: string\n        UpdatedDateUTC:\n          description: Updated Date\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n    ReportAttribute:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/reports/\n      properties:\n        Id:\n          type: string\n        Value:\n          type: string\n    ReportCell:\n      properties:\n        Attributes:\n          items:\n            $ref: \"#/components/schemas/ReportAttribute\"\n          type: array\n        Value:\n          type: string\n      type: object\n    ReportFields:\n      properties:\n        Description:\n          type: string\n        FieldID:\n          type: string\n        Value:\n          type: string\n      type: object\n    ReportRow:\n      properties:\n        Cells:\n          items:\n            $ref: \"#/components/schemas/ReportCell\"\n          type: array\n        RowType:\n          $ref: \"#/components/schemas/RowType\"\n        Title:\n          type: string\n      type: object\n    ReportRows:\n      properties:\n        Cells:\n          items:\n            $ref: \"#/components/schemas/ReportCell\"\n          type: array\n        RowType:\n          $ref: \"#/components/schemas/RowType\"\n        Rows:\n          items:\n            $ref: \"#/components/schemas/ReportRow\"\n          type: array\n        Title:\n          type: string\n      type: object\n    ReportWithRow:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/reports/\n      properties:\n        Fields:\n          items:\n            $ref: \"#/components/schemas/ReportFields\"\n          type: array\n        ReportDate:\n          description: Date of report\n          type: string\n        ReportID:\n          description: Report id\n          type: string\n        ReportName:\n          description: Name of the report\n          type: string\n        ReportTitle:\n          description: Title of the report\n          type: string\n        ReportTitles:\n          description: Report titles array (3 to 4 strings with the report name,\n            orgnisation name and time frame of report)\n          items:\n            type: string\n          type: array\n        ReportType:\n          description: The type of report (BalanceSheet,ProfitLoss, etc)\n          type: string\n        Rows:\n          items:\n            $ref: \"#/components/schemas/ReportRows\"\n          type: array\n        UpdatedDateUTC:\n          description: Updated Date\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n    ReportWithRows:\n      properties:\n        Reports:\n          items:\n            $ref: \"#/components/schemas/ReportWithRow\"\n          type: array\n      type: object\n    Reports:\n      properties:\n        Reports:\n          items:\n            $ref: \"#/components/schemas/Report\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    RequestEmpty:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/invoice/\n      properties:\n        Status:\n          description: Need at least one field to create an empty JSON payload\n          type: string\n      type: object\n    RowType:\n      enum:\n        - Header\n        - Section\n        - Row\n        - SummaryRow\n      type: string\n    SalesTrackingCategory:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/tracking-categories/\n      properties:\n        TrackingCategoryName:\n          description: The default sales tracking category name for contacts\n          type: string\n        TrackingOptionName:\n          description: The default purchase tracking category name for contacts\n          type: string\n      type: object\n    Schedule:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/repeating-invoices/\n      properties:\n        DueDate:\n          description: Integer used with due date type e.g 20 (of following month), 31 (of\n            current month)\n          type: integer\n        DueDateType:\n          description: the payment terms\n          enum:\n            - DAYSAFTERBILLDATE\n            - DAYSAFTERBILLMONTH\n            - DAYSAFTERINVOICEDATE\n            - DAYSAFTERINVOICEMONTH\n            - OFCURRENTMONTH\n            - OFFOLLOWINGMONTH\n          type: string\n        EndDate:\n          description: Invoice end date – only returned if the template has an end date set\n          type: string\n          x-is-msdate: true\n        NextScheduledDate:\n          description: The calendar date of the next invoice in the schedule to be generated\n          type: string\n          x-is-msdate: true\n        Period:\n          description: Integer used with the unit e.g. 1 (every 1 week), 2 (every 2 months)\n          type: integer\n        StartDate:\n          description: Date the first invoice of the current version of the repeating\n            schedule was generated (changes when repeating invoice is edited)\n          type: string\n          x-is-msdate: true\n        Unit:\n          description: One of the following - WEEKLY or MONTHLY\n          enum:\n            - WEEKLY\n            - MONTHLY\n          type: string\n      type: object\n    Setup:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api-guides/conversions\n      properties:\n        Accounts:\n          items:\n            $ref: \"#/components/schemas/Account\"\n          type: array\n        ConversionBalances:\n          description: Balance supplied for each account that has a value as at the\n            conversion date.\n          items:\n            $ref: \"#/components/schemas/ConversionBalances\"\n          type: array\n        ConversionDate:\n          $ref: \"#/components/schemas/ConversionDate\"\n    TaxComponent:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/tax-rates/\n      properties:\n        IsCompound:\n          description: Boolean to describe if Tax rate is compounded.\n          type: boolean\n        IsNonRecoverable:\n          description: Boolean to describe if tax rate is non-recoverable. Non-recoverable\n            rates are only applicable to Canadian organisations\n          type: boolean\n        Name:\n          description: Name of Tax Component\n          type: string\n        Rate:\n          description: Tax Rate (up to 4dp)\n          format: double\n          type: number\n          x-is-money: true\n      type: object\n    TaxRate:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/tax-rates/\n      properties:\n        CanApplyToAssets:\n          description: Boolean to describe if tax rate can be used for asset accounts\n            i.e.  true,false\n          readOnly: true\n          type: boolean\n        CanApplyToEquity:\n          description: Boolean to describe if tax rate can be used for equity accounts i.e\n            true,false\n          readOnly: true\n          type: boolean\n        CanApplyToExpenses:\n          description: Boolean to describe if tax rate can be used for expense\n            accounts  i.e. true,false\n          readOnly: true\n          type: boolean\n        CanApplyToLiabilities:\n          description: Boolean to describe if tax rate can be used for liability\n            accounts  i.e. true,false\n          readOnly: true\n          type: boolean\n        CanApplyToRevenue:\n          description: Boolean to describe if tax rate can be used for revenue accounts\n            i.e. true,false\n          readOnly: true\n          type: boolean\n        DisplayTaxRate:\n          description: Tax Rate (decimal to 4dp) e.g 12.5000\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        EffectiveRate:\n          description: Effective Tax Rate (decimal to 4dp) e.g 12.5000\n          format: double\n          readOnly: true\n          type: number\n          x-is-money: true\n        Name:\n          description: Name of tax rate\n          type: string\n        ReportTaxType:\n          description: See ReportTaxTypes\n          enum:\n            - AVALARA\n            - BASEXCLUDED\n            - CAPITALSALESOUTPUT\n            - CAPITALEXPENSESINPUT\n            - ECOUTPUT\n            - ECOUTPUTSERVICES\n            - ECINPUT\n            - ECACQUISITIONS\n            - EXEMPTEXPENSES\n            - EXEMPTINPUT\n            - EXEMPTOUTPUT\n            - GSTONIMPORTS\n            - INPUT\n            - INPUTTAXED\n            - MOSSSALES\n            - NONE\n            - NONEOUTPUT\n            - OUTPUT\n            - PURCHASESINPUT\n            - SALESOUTPUT\n            - EXEMPTCAPITAL\n            - EXEMPTEXPORT\n            - CAPITALEXINPUT\n            - GSTONCAPIMPORTS\n            - GSTONCAPITALIMPORTS\n            - REVERSECHARGES\n            - PAYMENTS\n            - INVOICE\n            - CASH\n            - ACCRUAL\n            - FLATRATECASH\n            - FLATRATEACCRUAL\n            - ACCRUALS\n            - TXCA\n            - SRCAS\n            - DSOUTPUT\n            - BLINPUT2\n            - EPINPUT\n            - IMINPUT2\n            - MEINPUT\n            - IGDSINPUT2\n            - ESN33OUTPUT\n            - OPINPUT\n            - OSOUTPUT\n            - TXN33INPUT\n            - TXESSINPUT\n            - TXREINPUT\n            - TXPETINPUT\n            - NRINPUT\n            - ES33OUTPUT\n            - ZERORATEDINPUT\n            - ZERORATEDOUTPUT\n            - DRCHARGESUPPLY\n            - DRCHARGE\n            - CAPINPUT\n            - CAPIMPORTS\n            - IMINPUT\n            - INPUT2\n            - CIUINPUT\n            - SRINPUT\n            - OUTPUT2\n            - SROUTPUT\n            - CAPOUTPUT\n            - SROUTPUT2\n            - CIUOUTPUT\n            - ZROUTPUT\n            - ZREXPORT\n            - ACC28PLUS\n            - ACCUPTO28\n            - OTHEROUTPUT\n            - SHOUTPUT\n            - ZRINPUT\n            - BADDEBT\n            - OTHERINPUT\n          type: string\n        Status:\n          description: See Status Codes\n          enum:\n            - ACTIVE\n            - DELETED\n            - ARCHIVED\n            - PENDING\n          type: string\n        TaxComponents:\n          description: See TaxComponents\n          items:\n            $ref: \"#/components/schemas/TaxComponent\"\n          type: array\n        TaxType:\n          description: The tax type\n          type: string\n      type: object\n    TaxRates:\n      properties:\n        TaxRates:\n          items:\n            $ref: \"#/components/schemas/TaxRate\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    TaxType:\n      description: See Tax Types – can only be used on update calls\n      enum:\n        - OUTPUT\n        - INPUT\n        - CAPEXINPUT\n        - EXEMPTEXPORT\n        - EXEMPTEXPENSES\n        - EXEMPTCAPITAL\n        - EXEMPTOUTPUT\n        - INPUTTAXED\n        - BASEXCLUDED\n        - GSTONCAPIMPORTS\n        - GSTONIMPORTS\n        - NONE\n        - INPUT2\n        - ZERORATED\n        - OUTPUT2\n        - CAPEXINPUT2\n        - CAPEXOUTPUT\n        - CAPEXOUTPUT2\n        - CAPEXSRINPUT\n        - CAPEXSROUTPUT\n        - ECACQUISITIONS\n        - ECZRINPUT\n        - ECZROUTPUT\n        - ECZROUTPUTSERVICES\n        - EXEMPTINPUT\n        - REVERSECHARGES\n        - RRINPUT\n        - RROUTPUT\n        - SRINPUT\n        - SROUTPUT\n        - ZERORATEDINPUT\n        - ZERORATEDOUTPUT\n        - BLINPUT\n        - DSOUTPUT\n        - EPINPUT\n        - ES33OUTPUT\n        - ESN33OUTPUT\n        - IGDSINPUT2\n        - IMINPUT2\n        - MEINPUT\n        - NRINPUT\n        - OPINPUT\n        - OSOUTPUT\n        - TXESSINPUT\n        - TXN33INPUT\n        - TXPETINPUT\n        - TXREINPUT\n        - INPUT3\n        - INPUT4\n        - OUTPUT3\n        - OUTPUT4\n        - SROUTPUT2\n        - TXCA\n        - SRCAS\n        - BLINPUT2\n        - DRCHARGESUPPLY20\n        - DRCHARGE20\n        - DRCHARGESUPPLY5\n        - DRCHARGE5\n      type: string\n    TenNinetyNineContact:\n      properties:\n        Box1:\n          description: Box 1 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box10:\n          description: Box 10 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box11:\n          description: Box 11 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box13:\n          description: Box 13 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box14:\n          description: Box 14 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box2:\n          description: Box 2 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box3:\n          description: Box 3 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box4:\n          description: Box 4 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box5:\n          description: Box 5 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box6:\n          description: Box 6 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box7:\n          description: Box 7 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box8:\n          description: Box 8 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        Box9:\n          description: Box 9 on 1099 Form\n          format: double\n          type: number\n          x-is-money: true\n        City:\n          description: Contact city on 1099 Form\n          type: string\n        ContactId:\n          description: Contact contact id\n          format: uuid\n          type: string\n        Email:\n          description: Contact email on 1099 Form\n          type: string\n        FederalTaxIDType:\n          description: Contact Fed Tax ID type\n          type: string\n        Name:\n          description: Contact name on 1099 Form\n          type: string\n        State:\n          description: Contact State on 1099 Form\n          type: string\n        StreetAddress:\n          description: Contact address on 1099 Form\n          type: string\n        TaxID:\n          description: Contact tax id on 1099 Form\n          type: string\n        Zip:\n          description: Contact zip on 1099 Form\n          type: string\n    TimeZone:\n      description: Timezone specifications\n      enum:\n        - MOROCCOSTANDARDTIME\n        - UTC\n        - GMTSTANDARDTIME\n        - GREENWICHSTANDARDTIME\n        - WEUROPESTANDARDTIME\n        - CENTRALEUROPESTANDARDTIME\n        - ROMANCESTANDARDTIME\n        - CENTRALEUROPEANSTANDARDTIME\n        - WCENTRALAFRICASTANDARDTIME\n        - NAMIBIASTANDARDTIME\n        - JORDANSTANDARDTIME\n        - GTBSTANDARDTIME\n        - MIDDLEEASTSTANDARDTIME\n        - EGYPTSTANDARDTIME\n        - SYRIASTANDARDTIME\n        - EEUROPESTANDARDTIME\n        - SOUTHAFRICASTANDARDTIME\n        - FLESTANDARDTIME\n        - TURKEYSTANDARDTIME\n        - ISRAELSTANDARDTIME\n        - KALININGRADSTANDARDTIME\n        - LIBYASTANDARDTIME\n        - ARABICSTANDARDTIME\n        - ARABSTANDARDTIME\n        - BELARUSSTANDARDTIME\n        - RUSSIANSTANDARDTIME\n        - EAFRICASTANDARDTIME\n        - IRANSTANDARDTIME\n        - ARABIANSTANDARDTIME\n        - AZERBAIJANSTANDARDTIME\n        - RUSSIATIMEZONE3\n        - MAURITIUSSTANDARDTIME\n        - GEORGIANSTANDARDTIME\n        - CAUCASUSSTANDARDTIME\n        - AFGHANISTANSTANDARDTIME\n        - WESTASIASTANDARDTIME\n        - EKATERINBURGSTANDARDTIME\n        - PAKISTANSTANDARDTIME\n        - INDIASTANDARDTIME\n        - SRILANKASTANDARDTIME\n        - NEPALSTANDARDTIME\n        - CENTRALASIASTANDARDTIME\n        - BANGLADESHSTANDARDTIME\n        - NCENTRALASIASTANDARDTIME\n        - MYANMARSTANDARDTIME\n        - SEASIASTANDARDTIME\n        - NORTHASIASTANDARDTIME\n        - CHINASTANDARDTIME\n        - NORTHASIAEASTSTANDARDTIME\n        - SINGAPORESTANDARDTIME\n        - WAUSTRALIASTANDARDTIME\n        - TAIPEISTANDARDTIME\n        - ULAANBAATARSTANDARDTIME\n        - TOKYOSTANDARDTIME\n        - KOREASTANDARDTIME\n        - YAKUTSKSTANDARDTIME\n        - CENAUSTRALIASTANDARDTIME\n        - AUSCENTRALSTANDARDTIME\n        - EAUSTRALIASTANDARDTIME\n        - AUSEASTERNSTANDARDTIME\n        - WESTPACIFICSTANDARDTIME\n        - TASMANIASTANDARDTIME\n        - MAGADANSTANDARDTIME\n        - VLADIVOSTOKSTANDARDTIME\n        - RUSSIATIMEZONE10\n        - CENTRALPACIFICSTANDARDTIME\n        - RUSSIATIMEZONE11\n        - NEWZEALANDSTANDARDTIME\n        - UTC+12\n        - UTC+13\n        - FIJISTANDARDTIME\n        - KAMCHATKASTANDARDTIME\n        - TONGASTANDARDTIME\n        - SAMOASTANDARDTIME\n        - LINEISLANDSSTANDARDTIME\n        - AZORESSTANDARDTIME\n        - CAPEVERDESTANDARDTIME\n        - UTC02\n        - MIDATLANTICSTANDARDTIME\n        - ESOUTHAMERICASTANDARDTIME\n        - ARGENTINASTANDARDTIME\n        - SAEASTERNSTANDARDTIME\n        - GREENLANDSTANDARDTIME\n        - MONTEVIDEOSTANDARDTIME\n        - BAHIASTANDARDTIME\n        - NEWFOUNDLANDSTANDARDTIME\n        - PARAGUAYSTANDARDTIME\n        - ATLANTICSTANDARDTIME\n        - CENTRALBRAZILIANSTANDARDTIME\n        - SAWESTERNSTANDARDTIME\n        - PACIFICSASTANDARDTIME\n        - VENEZUELASTANDARDTIME\n        - SAPACIFICSTANDARDTIME\n        - EASTERNSTANDARDTIME\n        - USEASTERNSTANDARDTIME\n        - CENTRALAMERICASTANDARDTIME\n        - CENTRALSTANDARDTIME\n        - CENTRALSTANDARDTIME(MEXICO)\n        - CANADACENTRALSTANDARDTIME\n        - USMOUNTAINSTANDARDTIME\n        - MOUNTAINSTANDARDTIME(MEXICO)\n        - MOUNTAINSTANDARDTIME\n        - PACIFICSTANDARDTIME(MEXICO)\n        - PACIFICSTANDARDTIME\n        - ALASKANSTANDARDTIME\n        - HAWAIIANSTANDARDTIME\n        - UTC11\n        - DATELINESTANDARDTIME\n      type: string\n    TrackingCategories:\n      properties:\n        TrackingCategories:\n          items:\n            $ref: \"#/components/schemas/TrackingCategory\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    TrackingCategory:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/tracking-categories/\n      properties:\n        Name:\n          description: The name of the tracking category e.g. Department, Region (max\n            length = 100)\n          maxLength: 100\n          type: string\n        Option:\n          description: The option name of the tracking option e.g. East, West (max length\n            = 100)\n          maxLength: 100\n          type: string\n        Options:\n          description: See Tracking Options\n          items:\n            $ref: \"#/components/schemas/TrackingOption\"\n          type: array\n        Status:\n          description: The status of a tracking category\n          enum:\n            - ACTIVE\n            - ARCHIVED\n            - DELETED\n          type: string\n        TrackingCategoryID:\n          description: The Xero identifier for a tracking category e.g.\n            297c2dc5-cc47-4afd-8ec8-74990b8761e9\n          format: uuid\n          type: string\n        TrackingOptionID:\n          description: The Xero identifier for a tracking option e.g.\n            dc54c220-0140-495a-b925-3246adc0075f\n          format: uuid\n          type: string\n      type: object\n    TrackingOption:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/tracking-categories/\n      properties:\n        Name:\n          description: The name of the tracking option e.g. Marketing, East (max length =\n            100)\n          maxLength: 100\n          type: string\n        Status:\n          description: The status of a tracking option\n          enum:\n            - ACTIVE\n            - ARCHIVED\n            - DELETED\n          type: string\n        TrackingCategoryID:\n          description: Filter by a tracking category e.g.\n            297c2dc5-cc47-4afd-8ec8-74990b8761e9\n          format: uuid\n          type: string\n        TrackingOptionID:\n          description: The Xero identifier for a tracking option e.g.\n            ae777a87-5ef3-4fa0-a4f0-d10e1f13073a\n          format: uuid\n          type: string\n      type: object\n    TrackingOptions:\n      properties:\n        Options:\n          items:\n            $ref: \"#/components/schemas/TrackingOption\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    User:\n      externalDocs:\n        url: http://developer.xero.com/documentation/api/users/\n      properties:\n        EmailAddress:\n          description: Email address of user\n          type: string\n        FirstName:\n          description: First name of user\n          type: string\n        IsSubscriber:\n          description: Boolean to indicate if user is the subscriber\n          type: boolean\n        LastName:\n          description: Last name of user\n          type: string\n        OrganisationRole:\n          description: User role that defines permissions in Xero and via API (READONLY,\n            INVOICEONLY, STANDARD, FINANCIALADVISER, etc)\n          enum:\n            - READONLY\n            - INVOICEONLY\n            - STANDARD\n            - FINANCIALADVISER\n            - MANAGEDCLIENT\n            - CASHBOOKCLIENT\n            - UNKNOWN\n          type: string\n        UpdatedDateUTC:\n          description: Timestamp of last change to user\n          example: /Date(1573755038314)/\n          readOnly: true\n          type: string\n          x-is-msdate-time: true\n        UserID:\n          description: Xero identifier\n          format: uuid\n          type: string\n      type: object\n    Users:\n      properties:\n        Users:\n          items:\n            $ref: \"#/components/schemas/User\"\n          type: array\n      type: object\n      x-isObjectArray: true\n    ValidationError:\n      externalDocs:\n        url: https://developer.xero.com/documentation/api/http-response-codes\n      properties:\n        Message:\n          description: Validation error message\n          type: string\n      type: object\n  securitySchemes:\n    OAuth2:\n      description: For more information\n      flows:\n        authorizationCode:\n          authorizationUrl: https://login.xero.com/identity/connect/authorize\n          scopes:\n            accounting.attachments: Grant read-write access to attachments\n            accounting.attachments.read: Grant read-only access to attachments\n            accounting.contacts: Grant read-write access to contacts and contact groups\n            accounting.contacts.read: Grant read-only access to contacts and contact groups\n            accounting.journals.read: Grant read-only access to journals\n            accounting.reports.read: Grant read-only access to accounting reports\n            accounting.reports.tenninetynine.read: Grant read-only access to 1099 reports\n            accounting.settings: Grant read-write access to organisation and account settings\n            accounting.settings.read: Grant read-only access to organisation and account settings\n            accounting.transactions: Grant read-write access to bank transactions, credit\n              notes, invoices, repeating invoices\n            accounting.transactions.read: Grant read-only access to invoices\n            assets: Grant read-write access to assets\n            assets.read: Grant read-only access to fixed assets\n            bankfeeds: Grant read-write access to bankfeeds\n            email: Grant read-only access to your email\n            files: Grant read-write access to files and folders\n            files.read: Grant read-only access to files and folders\n            openid: Grant read-only access to your open id\n            paymentservices: Grant read-write access to payment services\n            payroll: Grant read-write access to payroll\n            payroll.employees: Grant read-write access to payroll employees\n            payroll.employees.read: Grant read-only access to payroll employees\n            payroll.leaveapplications: Grant read-write access to payroll leaveapplications\n            payroll.leaveapplications.read: Grant read-only access to payroll leaveapplications\n            payroll.payitems: Grant read-write access to payroll payitems\n            payroll.payitems.read: Grant read-only access to payroll payitems\n            payroll.payrollcalendars: Grant read-write access to payroll calendars\n            payroll.payrollcalendars.read: Grant read-only access to payroll calendars\n            payroll.payruns: Grant read-write access to payroll payruns\n            payroll.payruns.read: Grant read-only access to payroll payruns\n            payroll.payslip: Grant read-write access to payroll payslips\n            payroll.payslip.read: Grant read-only access to payroll payslips\n            payroll.read: Grant read-only access to payroll\n            payroll.settings.read: Grant read-only access to payroll settings\n            payroll.superfundproducts.read: Grant read-only access to payroll superfundproducts\n            payroll.superfunds: Grant read-write access to payroll superfunds\n            payroll.superfunds.read: Grant read-only access to payroll superfunds\n            payroll.timesheets: Grant read-write access to payroll timesheets\n            payroll.timesheets.read: Grant read-only access to payroll timesheets\n            profile: your profile information\n            projects: Grant read-write access to projects\n            projects.read: Grant read-only access to projects\n          tokenUrl: https://identity.xero.com/connect/token\n      type: oauth2\n"
		}
	},
	"Error": "parse: parse spec: paths: /RepeatingInvoices/{RepeatingInvoiceID}: get: operation \"getRepeatingInvoice\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/RepeatingInvoices\": parse schema: RepeatingInvoices: parse schema: item: parse schema: reference \"#/components/schemas/RepeatingInvoice\": parse schema: Contact: parse schema: reference \"#/components/schemas/Contact\": parse schema: HasAttachments: parse default: expected type \"boolean\", got \"string\""
}